digraph "CFG forandroidx.constraintlayout.motion.widget.MotionController.getDpDt(FFF[F)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY])  (LINE:1395)\l0x0001: IGET  (r1 I:float[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mVelocity float[] \l0x0003: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' float)]) \l0x0004: INVOKE  (r8 I:float) = (r12 I:androidx.constraintlayout.motion.widget.MotionController), (r13 I:float A[D('position' float)]), (r1 I:float[]) type: DIRECT call: androidx.constraintlayout.motion.widget.MotionController.getAdjustedPosition(float, float[]):float A[MD:(float, float[]):float (m)]\l0x0008: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:1397)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0066 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char])  (LINE:1398)\l0x000f: CAST (r3 I:double) = (double) (r8 I:float A[D('position' float)]) \l0x0010: IGET  (r5 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVelocity double[] \l0x0012: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r3 I:double), (r5 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0015: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:1399)\l0x0017: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x0019: CAST (r3 I:double) = (double) (r8 I:float A[D('position' float)]) \l0x001a: IGET  (r5 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x001c: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r3 I:double), (r5 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l0x001f: IGET  (r1 I:float[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mVelocity float[]  (LINE:1400)\l0x0021: AGET  (r9 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l0x0023: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1401)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|LOOP_START\lLOOP:0: B:25:0x0024\-\>B:27:0x0029\l|0x0024: IGET  (r6 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVelocity double[] \l0x0026: ARRAY_LENGTH  (r2 I:int) = (r6 I:??[]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|0x0027: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:38:0x0033 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|LOOP_END\lLOOP:0: B:25:0x0024\-\>B:27:0x0029\l|0x0029: AGET  (r2 I:??[long, double]) = (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)])  (LINE:1402)\l0x002b: CAST (r4 I:double) = (double) (r9 I:float A[D('v' float)]) \l0x002c: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x002e: APUT  (r6 I:??[long, double][]), (r1 I:??[int, short, byte, char] A[D('i' int)]), (r2 I:??[long, double]) \l0x0030: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:1401)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|0x0033: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit A[D('i' int)]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mArcSpline androidx.constraintlayout.core.motion.utils.CurveFit  (LINE:1405)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0058 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|0x0037: IGET  (r2 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[]  (LINE:1406)\l0x0039: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x003a|0x003a: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:39:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|0x003c: CAST (r3 I:double) = (double) (r8 I:float A[D('position' float)])  (LINE:1407)\l0x003d: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r3 I:double), (r2 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0040: IGET  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mArcSpline androidx.constraintlayout.core.motion.utils.CurveFit  (LINE:1408)\l0x0042: CAST (r2 I:double) = (double) (r8 I:float A[D('position' float)]) \l0x0043: IGET  (r4 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVelocity double[] \l0x0045: INVOKE  (r1 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r2 I:double), (r4 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getSlope(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0048: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1409)\l0x004a: IGET  (r5 I:int[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVariables int[] \l0x004c: IGET  (r6 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVelocity double[] \l0x004e: IGET  (r7 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x0050: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('locationX' float)]) \l0x0051: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('locationY' float)]) \l0x0052: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('mAnchorDpDt' float[])]) \l0x0054: INVOKE  \l  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float[])\l  (r5 I:int[])\l  (r6 I:double[])\l  (r7 I:double[])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionPaths.setDpDt(float, float, float[], int[], double[], double[]):void A[MD:(float, float, float[], int[], double[], double[]):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0057|RETURN\lORIG_RETURN\l|0x0057: RETURN    (LINE:1411)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN   A[SYNTHETIC] (LINE:1411)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0058|0x0058: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1413)\l0x005a: IGET  (r5 I:int[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVariables int[] \l0x005c: IGET  (r7 I:double[]) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x005e: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('locationX' float)]) \l0x005f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('locationY' float)]) \l0x0060: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('mAnchorDpDt' float[])]) \l0x0062: INVOKE  \l  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float[])\l  (r5 I:int[])\l  (r6 I:double[])\l  (r7 I:double[])\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionPaths.setDpDt(float, float, float[], int[], double[], double[]):void A[MD:(float, float, float[], int[], double[], double[]):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0065|RETURN\l|0x0065: RETURN    (LINE:1414)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0066|0x0066: IGET  (r1 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mEndMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1417)\l0x0068: IGET  (r1 I:float) = (r1 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.x float \l0x006a: IGET  (r3 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths \l0x006c: IGET  (r3 I:float) = (r3 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.x float \l0x006e: ARITH  (r1 I:float) = (r1 I:float) \- (r3 I:float) \l0x006f: IGET  (r3 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mEndMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1418)\l0x0071: IGET  (r3 I:float) = (r3 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.y float \l0x0073: IGET  (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths \l0x0075: IGET  (r4 I:float) = (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.y float \l0x0077: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0078: IGET  (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mEndMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1419)\l0x007a: IGET  (r4 I:float) = (r4 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.width float \l0x007c: IGET  (r5 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths \l0x007e: IGET  (r5 I:float) = (r5 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.width float \l0x0080: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x0081: IGET  (r5 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mEndMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1420)\l0x0083: IGET  (r5 I:float) = (r5 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.height float \l0x0085: IGET  (r6 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r0 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths \l0x0087: IGET  (r6 I:float) = (r6 I:androidx.constraintlayout.motion.widget.MotionPaths) androidx.constraintlayout.motion.widget.MotionPaths.height float \l0x0089: ARITH  (r5 I:float) = (r5 I:float) \- (r6 I:float) \l0x008a: ARITH  (r6 I:float) = (r1 I:float A[D('dleft' float)]) + (r4 I:float A[D('dWidth' float)])  (LINE:1421)\l0x008c: ARITH  (r7 I:float) = (r3 I:float A[D('dTop' float)]) + (r5 I:float A[D('dHeight' float)])  (LINE:1422)\l0x008e: CONST  (r9 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:1423)\l0x0090: ARITH  (r10 I:float) = (r9 I:float) \- (r14 I:float A[D('locationX' float)]) \l0x0092: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float A[D('dleft' float)]) \l0x0094: ARITH  (r11 I:float) = (r6 I:float A[D('dRight' float)]) * (r14 I:float A[D('locationX' float)]) \l0x0096: ARITH  (r10 I:float) = (r10 I:float) + (r11 I:float) \l0x0097: APUT  \l  (r16 I:??[int, float][] A[D('mAnchorDpDt' float[])])\l  (r2 I:??[int, short, byte, char])\l  (r10 I:??[int, float, short, byte, char])\l \l0x0099: ARITH  (r9 I:float) = (r9 I:float) \- (r15 I:float A[D('locationY' float)])  (LINE:1424)\l0x009a: ARITH  (r9 I:float) = (r9 I:float) * (r3 I:float A[D('dTop' float)]) \l0x009c: ARITH  (r2 I:float) = (r7 I:float A[D('dBottom' float)]) * (r15 I:float A[D('locationY' float)]) \l0x009e: ARITH  (r9 I:float) = (r9 I:float) + (r2 I:float) \l0x009f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00a0: APUT  \l  (r16 I:??[int, float][] A[D('mAnchorDpDt' float[])])\l  (r2 I:??[int, short, byte, char])\l  (r9 I:??[int, float, short, byte, char])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00a2|RETURN\l|0x00a2: RETURN    (LINE:1425)\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionController.getDpDt((r12 'this' I:androidx.constraintlayout.motion.widget.MotionController A[IMMUTABLE_TYPE, THIS]), (r13 I:float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[D('locationX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float A[D('locationY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float[] A[D('mAnchorDpDt' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0029 \-\> B:25:0x0024, CROSS_EDGE: B:31:0x003a \-\> B:33:0x0057, CROSS_EDGE: B:35:0x0065 \-\> B:21:?, CROSS_EDGE: B:37:0x00a2 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r13 'position' F\l  0x0024\-0x0033: r1 'i' I\l  0x0023\-0x0066: r9 'v' F\l  0x006f\-0x00a2: r1 'dleft' F\l  0x0078\-0x00a2: r3 'dTop' F\l  0x0081\-0x00a2: r4 'dWidth' F\l  0x008a\-0x00a2: r5 'dHeight' F\l  0x008c\-0x00a2: r6 'dRight' F\l  0x008e\-0x00a2: r7 'dBottom' F\l  0x0008\-0x00a2: r8 'position' F\l  \-1 \-0x00a2: r14 'locationX' F\l  \-1 \-0x00a2: r15 'locationY' F\l  \-1 \-0x00a2: r16 'mAnchorDpDt' [F\lMETHOD_PARAMETERS: [position, locationX, locationY, mAnchorDpDt]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_36;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_25;
Node_38 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_39;
Node_32 -> Node_33;
Node_33 -> Node_21;
Node_39 -> Node_21;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

