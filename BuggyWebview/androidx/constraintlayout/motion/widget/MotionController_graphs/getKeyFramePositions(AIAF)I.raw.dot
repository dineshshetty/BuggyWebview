digraph "CFG forandroidx.constraintlayout.motion.widget.MotionController.getKeyFramePositions([I[F)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1547)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1548)\l0x0002: IGET  (r2 I:java.util.ArrayList\<androidx.constraintlayout.motion.widget.Key\>) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mKeyList java.util.ArrayList  (LINE:1549)\l0x0004: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|LOOP_START\lLOOP:0: B:11:0x0008\-\>B:13:0x000e\l|0x0008: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|LOOP_END\lLOOP:0: B:11:0x0008\-\>B:13:0x000e\l|0x000e: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0012: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0013: CHECK_CAST (r10 I:androidx.constraintlayout.motion.widget.Key) = (androidx.constraintlayout.motion.widget.Key) (r10 I:??[OBJECT, ARRAY]) \l0x0015: ARITH  (r11 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1550)\l0x0017: IGET  (r3 I:int) = (r10 I:androidx.constraintlayout.motion.widget.Key A[D('key' androidx.constraintlayout.motion.widget.Key)]) androidx.constraintlayout.motion.widget.Key.mFramePosition int \l0x0019: IGET  (r4 I:int) = (r10 I:androidx.constraintlayout.motion.widget.Key A[D('key' androidx.constraintlayout.motion.widget.Key)]) androidx.constraintlayout.motion.widget.Key.mType int \l0x001b: ARITH  (r4 I:int) = (r4 I:int) * (1000 int) \l0x001d: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x001e: APUT  \l  (r13 I:??[int, float][] A[D('type' int[])])\l  (r0 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char])\l \l0x0020: IGET  (r0 I:int) = (r10 I:androidx.constraintlayout.motion.widget.Key A[D('key' androidx.constraintlayout.motion.widget.Key)]) androidx.constraintlayout.motion.widget.Key.mFramePosition int  (LINE:1551)\l0x0022: CAST (r0 I:float) = (float) (r0 I:int) \l0x0023: CONST  (r3 I:??[int, float, short, byte, char]) = (1120403456(0x42c80000, float:100.0) ??[int, float, short, byte, char]) \l0x0025: ARITH  (r0 I:float) = (r0 I:float) \/ (r3 I:float) \l0x0026: IGET  (r3 I:androidx.constraintlayout.core.motion.utils.CurveFit[]) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mSpline androidx.constraintlayout.core.motion.utils.CurveFit[]  (LINE:1552)\l0x0028: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: AGET  (r3 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x002b: CAST (r4 I:double) = (double) (r0 I:float A[D('time' float)]) \l0x002c: IGET  (r6 I:double[]) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x002e: INVOKE  (r3 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r4 I:double), (r6 I:double[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, double[]):void A[MD:(double, double[]):void (m)]\l0x0031: IGET  (r3 I:androidx.constraintlayout.motion.widget.MotionPaths) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mStartMotionPath androidx.constraintlayout.motion.widget.MotionPaths  (LINE:1553)\l0x0033: CAST (r4 I:double) = (double) (r0 I:float A[D('time' float)]) \l0x0034: IGET  (r6 I:int[]) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateVariables int[] \l0x0036: IGET  (r7 I:double[]) = (r12 I:androidx.constraintlayout.motion.widget.MotionController) androidx.constraintlayout.motion.widget.MotionController.mInterpolateData double[] \l0x0038: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('pos' float[])]) \l0x0039: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) \l0x003a: INVOKE  \l  (r3 I:androidx.constraintlayout.motion.widget.MotionPaths)\l  (r4 I:double)\l  (r6 I:int[])\l  (r7 I:double[])\l  (r8 I:float[])\l  (r9 I:int)\l type: VIRTUAL call: androidx.constraintlayout.motion.widget.MotionPaths.getCenter(double, int[], double[], float[], int):void A[MD:(double, int[], double[], float[], int):void (m)]\l0x003e: ARITH  (r1 I:int) = (r1 I:int A[D('count' int)]) + (2 int) \l0x0040: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])  (LINE:1555)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|RETURN\l|0x0042: RETURN  (r0 I:int A[D('i' int)])  (LINE:1557)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.constraintlayout.motion.widget.MotionController.getKeyFramePositions((r12 'this' I:androidx.constraintlayout.motion.widget.MotionController A[IMMUTABLE_TYPE, THIS]), (r13 I:int[] A[D('type' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float[] A[D('pos' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x000e \-\> B:11:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0017: r0 'i' I\l  0x0026\-0x003e: r0 'time' F\l  0x0015\-0x003e: r10 'key' Landroidx\/constraintlayout\/motion\/widget\/Key;\l  0x0017\-0x0042: r11 'i' I\l  0x0042\-0x0042: r0 'i' I\l  0x0002\-0x0042: r1 'count' I\l  \-1 \-0x0042: r13 'type' [I\l  \-1 \-0x0042: r14 'pos' [F\lMETHOD_PARAMETERS: [type, pos]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

