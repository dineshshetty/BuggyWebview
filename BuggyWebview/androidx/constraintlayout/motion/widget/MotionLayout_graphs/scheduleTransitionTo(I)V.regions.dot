digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.scheduleTransitionTo(I)V" {
subgraph cluster_Region_932945713 {
label = "R(1:(2:(2:3|4)|(3:6|(1:8)(1:(1:13))|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_202803315 {
label = "R(2:(2:3|4)|(3:6|(1:8)(1:(1:13))|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_706134719 {
label = "IF [B:17:0x0005] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|if (getCurrentState() == (\-1)) goto L3\l}"];
subgraph cluster_Region_1522379264 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0007|transitionToState(r4)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1187093128 {
label = "R(3:6|(1:8)(1:(1:13))|9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000b|int[] int[] r0 = r3.mScheduledTransitionTo\l}"];
subgraph cluster_IfRegion_975109286 {
label = "IF [B:20:0x000d] THEN: R(1:8) ELSE: R(1:(1:13))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000d|if (r0 == null) goto L8\l}"];
subgraph cluster_Region_825545841 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000f|r3.mScheduledTransitionTo = new int[4]\l}"];
}
subgraph cluster_Region_156862260 {
label = "R(1:(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_517365706 {
label = "IF [B:23:0x0018] THEN: R(1:13) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0018|if (r0.length \<= r3.mScheduledTransitions) goto L13\l}"];
subgraph cluster_Region_1066814204 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001a|r3.mScheduledTransitionTo = java.util.Arrays.copyOf(r0, r0.length * 2)\l}"];
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0023|int[] int[] r0 = r3.mScheduledTransitionTo\lint int r1 = r3.mScheduledTransitions\lr3.mScheduledTransitions = r1 + 1\lr0[r1] = r4\l}"];
}
}
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x002d|ORIG_RETURN\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0015}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionLayout.scheduleTransitionTo((r3v0 'this' androidx.constraintlayout.motion.widget.MotionLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0023 \-\> B:26:0x002d, CROSS_EDGE: B:24:0x001a \-\> B:25:0x0023, CROSS_EDGE: B:23:0x0018 \-\> B:25:0x0023\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [id]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_27 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_26 -> Node_15;
Node_22 -> Node_23;
}

