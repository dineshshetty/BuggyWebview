digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.handlesTouchEvent(FFLandroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|r0 = false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|if ((r11 instanceof android.view.ViewGroup) == false) goto L11\l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|android.view.ViewGroup r1 = (android.view.ViewGroup) r11\lint r2 = r1.getChildCount()\lint r3 = r2 + (\-1)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|LOOP_START\lLOOP:0: B:29:0x000e\-\>B:33:0x0034\lPHI: r3 \l  PHI: (r3v8 'i' int) = (r3v7 'i' int), (r3v9 'i' int) binds: [B:28:0x0005, B:33:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< 0) goto L10\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|android.view.View r4 = r1.getChildAt(r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|if (handlesTouchEvent((((float) r4.getLeft()) + r9) \- ((float) r11.getScrollX()), (((float) r4.getTop()) + r10) \- ((float) r11.getScrollY()), r4, r12) == false) goto L7\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|LOOP_END\lLOOP:0: B:29:0x000e\-\>B:33:0x0034\l|int r3 = r3 + (\-1)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0032|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|r0 = true\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0037|PHI: r0 \l  PHI: (r0v1 'handled' boolean) = (r0v0 'handled' boolean), (r0v0 'handled' boolean), (r0v3 'handled' boolean) binds: [B:27:0x0003, B:44:0x0037, B:32:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L22\l}"];
Node_35 [shape=record,label="{35\:\ 0x0039|r8.mBoundsCheck.set(r9, r10, (((float) r11.getRight()) + r9) \- ((float) r11.getLeft()), (((float) r11.getBottom()) + r10) \- ((float) r11.getTop()))\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|if (r12.getAction() != 0) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x005c}"];
Node_38 [shape=record,label="{38\:\ 0x006a|if (r8.mBoundsCheck.contains(r12.getX(), r12.getY()) == false) goto L16\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x006c}"];
Node_40 [shape=record,label="{40\:\ 0x0072|if (callTransformedTouchEvent(r11, r12, \-r9, \-r10) == false) goto L21\l}"];
Node_41 [shape=record,label="{41\:\ 0x0074|RETURN\lORIG_RETURN\l|return true\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.motion.widget.MotionLayout.handlesTouchEvent((r8v0 'this' androidx.constraintlayout.motion.widget.MotionLayout A[IMMUTABLE_TYPE, THIS]), (r9v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'event' android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0072 \-\> B:42:0x0075, CROSS_EDGE: B:38:0x006a \-\> B:42:0x0075, CROSS_EDGE: B:36:0x005a \-\> B:39:0x006c, CROSS_EDGE: B:34:0x0037 \-\> B:42:0x0075, BACK_EDGE: B:33:0x0034 \-\> B:29:0x000e, CROSS_EDGE: B:29:0x000e \-\> B:34:0x0037, CROSS_EDGE: B:27:0x0003 \-\> B:34:0x0037\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [x, y, view, event]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_43[style=dashed];
Node_33 -> Node_29;
Node_43 -> Node_32;
Node_32 -> Node_34;
Node_44 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_45;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_46 -> Node_25;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_25;
Node_47 -> Node_25;
Node_45 -> Node_25;
}

