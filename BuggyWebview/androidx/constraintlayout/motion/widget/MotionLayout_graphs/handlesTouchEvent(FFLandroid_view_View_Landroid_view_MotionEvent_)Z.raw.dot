digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.handlesTouchEvent(FFLandroid\/view\/View;Landroid\/view\/MotionEvent;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:4047)\l0x0001: INSTANCE_OF  (r1 I:boolean) = (r11 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) android.view.ViewGroup  (LINE:4048)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0037 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:4049)\l0x0006: CHECK_CAST (r1 I:android.view.ViewGroup) = (android.view.ViewGroup) (r1 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r2 I:int) = (r1 I:android.view.ViewGroup A[D('group' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)] (LINE:4050)\l0x000c: ARITH  (r3 I:int) = (r2 I:int A[D('childCount' int)]) + (\-1 int)  (LINE:4051)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|LOOP_START\lLOOP:0: B:29:0x000e\-\>B:33:0x0034\l|0x000e: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:44:0x0037 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|0x0010: INVOKE  (r4 I:android.view.View) = (r1 I:android.view.ViewGroup A[D('group' android.view.ViewGroup)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:4052)\l0x0014: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:4053)\l0x0018: CAST (r5 I:float) = (float) (r5 I:int) \l0x0019: ARITH  (r5 I:float) = (r5 I:float) + (r9 I:float A[D('x' float)]) \l0x001a: INVOKE  (r6 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollX():int A[MD:():int (c)]\l0x001e: CAST (r6 I:float) = (float) (r6 I:int) \l0x001f: ARITH  (r5 I:float) = (r5 I:float) \- (r6 I:float) \l0x0020: INVOKE  (r6 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0024: CAST (r6 I:float) = (float) (r6 I:int) \l0x0025: ARITH  (r6 I:float) = (r6 I:float) + (r10 I:float A[D('y' float)]) \l0x0026: INVOKE  (r7 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollY():int A[MD:():int (c)]\l0x002a: CAST (r7 I:float) = (float) (r7 I:int) \l0x002b: ARITH  (r6 I:float) = (r6 I:float) \- (r7 I:float) \l0x002c: INVOKE  (r5 I:boolean) = \l  (r8 I:androidx.constraintlayout.motion.widget.MotionLayout)\l  (r5 I:float)\l  (r6 I:float)\l  (r4 I:android.view.View A[D('child' android.view.View)])\l  (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)])\l type: DIRECT call: androidx.constraintlayout.motion.widget.MotionLayout.handlesTouchEvent(float, float, android.view.View, android.view.MotionEvent):boolean A[MD:(float, float, android.view.View, android.view.MotionEvent):boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|0x0030: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0034 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|LOOP_END\lLOOP:0: B:29:0x000e\-\>B:33:0x0034\l|0x0034: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (\-1 int)  (LINE:4051)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0032|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|0x0032: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('handled' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:4054)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0037|0x0037: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('handled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:?  (LINE:4060)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0039|0x0039: IGET  (r1 I:android.graphics.RectF) = (r8 I:androidx.constraintlayout.motion.widget.MotionLayout) androidx.constraintlayout.motion.widget.MotionLayout.mBoundsCheck android.graphics.RectF  (LINE:4061)\l0x003b: INVOKE  (r2 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)]\l0x003f: CAST (r2 I:float) = (float) (r2 I:int) \l0x0040: ARITH  (r2 I:float) = (r2 I:float) + (r9 I:float A[D('x' float)]) \l0x0041: INVOKE  (r3 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l0x0045: CAST (r3 I:float) = (float) (r3 I:int) \l0x0046: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x0047: INVOKE  (r3 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x004b: CAST (r3 I:float) = (float) (r3 I:int) \l0x004c: ARITH  (r3 I:float) = (r3 I:float) + (r10 I:float A[D('y' float)]) \l0x004d: INVOKE  (r4 I:int) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0051: CAST (r4 I:float) = (float) (r4 I:int) \l0x0052: ARITH  (r3 I:float) = (r3 I:float) \- (r4 I:float) \l0x0053: INVOKE  (r1 I:android.graphics.RectF), (r9 I:float A[D('x' float)]), (r10 I:float A[D('y' float)]), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x0056: INVOKE  (r1 I:int) = (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getAction():int A[MD:():int (c)] (LINE:4063)\l}"];
Node_36 [shape=record,label="{36\:\ 0x005a|0x005a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x006c \l}"];
Node_37 [shape=record,label="{37\:\ 0x005c|0x005c: IGET  (r1 I:android.graphics.RectF) = (r8 I:androidx.constraintlayout.motion.widget.MotionLayout) androidx.constraintlayout.motion.widget.MotionLayout.mBoundsCheck android.graphics.RectF \l0x005e: INVOKE  (r2 I:float) = (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)]\l0x0062: INVOKE  (r3 I:float) = (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)]\l0x0066: INVOKE  (r1 I:boolean) = (r1 I:android.graphics.RectF), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.RectF.contains(float, float):boolean A[MD:(float, float):boolean (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x006a|0x006a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:? \l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x0075: RETURN  (r0 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:4070)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x006c|0x006c: NEG  (r1 I:float) = (r9 I:float A[D('x' float)])  (LINE:4064)\l0x006d: NEG  (r2 I:float) = (r10 I:float A[D('y' float)]) \l0x006e: INVOKE  (r1 I:boolean) = \l  (r8 I:androidx.constraintlayout.motion.widget.MotionLayout)\l  (r11 I:android.view.View A[D('view' android.view.View)])\l  (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent)])\l  (r1 I:float)\l  (r2 I:float)\l type: DIRECT call: androidx.constraintlayout.motion.widget.MotionLayout.callTransformedTouchEvent(android.view.View, android.view.MotionEvent, float, float):boolean A[MD:(android.view.View, android.view.MotionEvent, float, float):boolean (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0072|0x0072: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_41 [shape=record,label="{41\:\ 0x0074|RETURN\lORIG_RETURN\l|0x0074: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('handled' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:4065)\l0x0075: RETURN  (r0 I:boolean A[D('handled' boolean)])  (LINE:4070)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0075: RETURN  (r0 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:4070)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x0075: RETURN  (r0 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:4070)\l}"];
MethodNode[shape=record,label="{private boolean androidx.constraintlayout.motion.widget.MotionLayout.handlesTouchEvent((r8 'this' I:androidx.constraintlayout.motion.widget.MotionLayout A[IMMUTABLE_TYPE, THIS]), (r9 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x0072 \-\> B:42:0x0075, CROSS_EDGE: B:38:0x006a \-\> B:42:0x0075, CROSS_EDGE: B:36:0x005a \-\> B:39:0x006c, CROSS_EDGE: B:34:0x0037 \-\> B:42:0x0075, BACK_EDGE: B:33:0x0034 \-\> B:29:0x000e, CROSS_EDGE: B:29:0x000e \-\> B:34:0x0037, CROSS_EDGE: B:27:0x0003 \-\> B:34:0x0037\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0034: r4 'child' Landroid\/view\/View;\l  0x0008\-0x0037: r1 'group' Landroid\/view\/ViewGroup;\l  0x000c\-0x0037: r2 'childCount' I\l  0x000e\-0x0037: r3 'i' I\l  0x0001\-0x0075: r0 'handled' Z\l  \-1 \-0x0075: r9 'x' F\l  \-1 \-0x0075: r10 'y' F\l  \-1 \-0x0075: r11 'view' Landroid\/view\/View;\l  \-1 \-0x0075: r12 'event' Landroid\/view\/MotionEvent;\lMETHOD_PARAMETERS: [x, y, view, event]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_43[style=dashed];
Node_33 -> Node_29;
Node_43 -> Node_32;
Node_32 -> Node_34;
Node_44 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_45;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_46 -> Node_25;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_47;
Node_41 -> Node_25;
Node_47 -> Node_25;
Node_45 -> Node_25;
}

