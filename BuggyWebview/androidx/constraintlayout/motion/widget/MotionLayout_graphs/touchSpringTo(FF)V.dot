digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.touchSpringTo(FF)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r11.mScene != null) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005}"];
Node_16 [shape=record,label="{16\:\ 0x0009|if ((r11.mTransitionLastPosition \> r12 ? 1 : (r11.mTransitionLastPosition == r12 ? 0 : \-1)) != 0) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|r11.mTemporalInterpolator = true\lr11.mAnimationStartTime = getNanoTime()\lr11.mTransitionDuration = ((float) r11.mScene.getDuration()) \/ 1000.0f\lr11.mTransitionGoalPosition = r12\lr11.mInTransition = true\lr11.mStopLogic.springConfig(r11.mTransitionLastPosition, r12, r13, r11.mScene.getSpringMass(), r11.mScene.getSpringStiffiness(), r11.mScene.getSpringDamping(), r11.mScene.getSpringStopThreshold(), r11.mScene.getSpringBoundary())\lint r0 = r11.mCurrentState\lr11.mTransitionGoalPosition = r12\lr11.mCurrentState = r0\lr11.mInterpolator = r11.mStopLogic\lr11.mTransitionInstantly = false\lr11.mAnimationStartTime = getNanoTime()\linvalidate()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionLayout.touchSpringTo((r11v0 'this' androidx.constraintlayout.motion.widget.MotionLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 'position' float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'currentVelocity' float A[D('currentVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000b \-\> B:11:?, CROSS_EDGE: B:19:0x0062 \-\> B:11:?\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [position, currentVelocity]\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

