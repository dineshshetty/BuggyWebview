digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.willJump(FFF)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2028)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CMP_L  (r4 I:int) = (r7 I:float A[D('velocity' float)]), (r3 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x001e \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: ARITH  (r3 I:float) = (r7 I:float A[D('velocity' float)]) \/ (r9 I:float A[D('maxAcceleration' float)])  (LINE:2029)\l0x000b: ARITH  (r4 I:float) = (r7 I:float A[D('velocity' float)]) * (r3 I:float A[D('time' float)])  (LINE:2030)\l0x000d: ARITH  (r5 I:float) = (r9 I:float A[D('maxAcceleration' float)]) * (r3 I:float A[D('time' float)]) \l0x000f: ARITH  (r5 I:float) = (r5 I:float) * (r3 I:float A[D('time' float)]) \l0x0011: ARITH  (r5 I:float) = (r5 I:float) \/ (r2 I:float) \l0x0012: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x0013: ARITH  (r2 I:float) = (r8 I:float A[D('position' float)]) + (r4 I:float A[D('pos' float)])  (LINE:2031)\l0x0015: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0017: CMP_L  (r2 I:int) = (r2 I:float), (r5 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0019|0x0019: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x001c \l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: RETURN  (r0 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|0x001e: NEG  (r4 I:float A[D('pos' float)]) = (r7 I:float A[D('velocity' float)])  (LINE:2033)\l0x001f: ARITH  (r4 I:float) = (r4 I:float) \/ (r9 I:float A[D('maxAcceleration' float)]) \l0x0020: ARITH  (r5 I:float) = (r7 I:float A[D('velocity' float)]) * (r4 I:float A[D('time' float)])  (LINE:2034)\l0x0022: ARITH  (r6 I:float) = (r9 I:float A[D('maxAcceleration' float)]) * (r4 I:float A[D('time' float)]) \l0x0024: ARITH  (r6 I:float) = (r6 I:float) * (r4 I:float A[D('time' float)]) \l0x0026: ARITH  (r6 I:float) = (r6 I:float) \/ (r2 I:float) \l0x0027: ARITH  (r5 I:float) = (r5 I:float) + (r6 I:float) \l0x0028: ARITH  (r2 I:float) = (r8 I:float A[D('position' float)]) + (r5 I:float A[D('pos' float)])  (LINE:2035)\l0x002a: CMP_G  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|0x002c: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:28:0x002f \l}"];
Node_28 [shape=record,label="{28\:\ 0x002f|RETURN\lORIG_RETURN\l|0x002f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: RETURN  (r0 I:boolean) \l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private static boolean androidx.constraintlayout.motion.widget.MotionLayout.willJump((r7 I:float A[D('velocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('maxAcceleration' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0019 \-\> B:24:0x001d, CROSS_EDGE: B:29:0x0030 \-\> B:17:?, CROSS_EDGE: B:26:0x002c \-\> B:29:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x001e: r3 'time' F\l  0x0013\-0x001e: r4 'pos' F\l  0x0020\-0x0030: r4 'time' F\l  0x0028\-0x0030: r5 'pos' F\l  \-1 \-0x0030: r7 'velocity' F\l  \-1 \-0x0030: r8 'position' F\l  \-1 \-0x0030: r9 'maxAcceleration' F\lMETHOD_PARAMETERS: [velocity, position, maxAcceleration]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_30[style=dashed];
Node_23 -> Node_17;
Node_30 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_31[style=dashed];
Node_28 -> Node_17;
Node_31 -> Node_17;
}

