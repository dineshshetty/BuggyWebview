digraph "CFG forandroidx.constraintlayout.motion.widget.MotionLayout.onNestedScroll(Landroid\/view\/View;IIIII[I)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000}"];
Node_12 [shape=record,label="{12\:\ 0x0003|if (r3.mUndergoingMotion != false) goto L8\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|if (r5 != 0) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|if (r6 == 0) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x0014|r3.mUndergoingMotion = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|r10[0] = r10[0] + r7\lr10[1] = r10[1] + r8\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.widget.MotionLayout.onNestedScroll((r3v0 'this' androidx.constraintlayout.motion.widget.MotionLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'target' android.view.View A[D('target' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'dxConsumed' int A[D('dxConsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'dyConsumed' int A[D('dyConsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'dxUnconsumed' int A[D('dxUnconsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'dyUnconsumed' int A[D('dyUnconsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'type' int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'consumed' int[] A[D('consumed' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0007 \-\> B:16:0x0014, CROSS_EDGE: B:13:0x0005 \-\> B:15:0x0009, CROSS_EDGE: B:12:0x0003 \-\> B:15:0x0009\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [target, dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed, type, consumed]\lMETHOD_OVERRIDE: [androidx.core.view.NestedScrollingParent3.onNestedScroll(android.view.View, int, int, int, int, int, int[]):void]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_15 -> Node_16;
}

