digraph "CFG forandroidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.setProperty(Landroid\/view\/View;FJLandroidx\/constraintlayout\/core\/motion\/utils\/KeyCache;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|r20.mCurveFit.getPos((double) r22, r20.mTempValues)\lfloat[] r4 = r20.mTempValues\lr6 = r4[r4.length + (\-2)]\lr4 = r4[r4.length \- 1]\llong r9 = r23 \- r20.last_time\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|if (java.lang.Float.isNaN(r20.last_cycle) == false) goto L23\l}"];
Node_28 [shape=record,label="{28\:\ 0x002a|r20.last_cycle = r25.getFloatValue(r21, r20.mAttributeName, 0)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003a|if (java.lang.Float.isNaN(r20.last_cycle) == false) goto L6\l}"];
Node_30 [shape=record,label="{30\:\ 0x003c|r20.last_cycle = 0.0f\l}"];
Node_32 [shape=record,label="{32\:\ 0x0041|r20.last_cycle = (float) ((((double) r20.last_cycle) + ((((double) r9) * 1.0E\-9d) * ((double) r6))) % 1.0d)\lr20.last_time = r23\lfloat r7 = calcWave(r20.last_cycle)\lr20.mContinue = false\lr8 = 0\l}"];
Node_33 [shape=record,label="{33\:\ 0x0062|LOOP_START\lLOOP:0: B:33:0x0062\-\>B:39:0x0077\lPHI: r8 \l  PHI: (r8v4 'i' int) = (r8v3 'i' int), (r8v12 'i' int) binds: [B:32:0x0041, B:39:0x0077] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0065|if (r8 \>= r20.mCache.length) goto L16\l}"];
Node_35 [shape=record,label="{35\:\ 0x0067|boolean r11 = r20.mContinue\l}"];
Node_36 [shape=record,label="{36\:\ 0x0072|if ((((double) r20.mTempValues[r8]) \> 0.0d ? 1 : (((double) r20.mTempValues[r8]) == 0.0d ? 0 : \-1)) == 0) goto L14\l}"];
Node_37 [shape=record,label="{37\:\ 0x0074|r12 = true\l}"];
Node_47 [shape=record,label="{47\:\ 0x0077|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0077|LOOP_END\lLOOP:0: B:33:0x0062\-\>B:39:0x0077\lPHI: r12 \l  PHI: (r12v5 boolean) = (r12v4 boolean), (r12v10 boolean) binds: [B:46:0x0077, B:47:0x0077] A[DONT_GENERATE, DONT_INLINE]\l|r20.mContinue = r11 \| r12\lr20.mCache[r8] = (r20.mTempValues[r8] * r7) + r4\lint r8 = r8 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0076|r12 = false\l}"];
Node_46 [shape=record,label="{46\:\ 0x0077|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0088|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0088|androidx.constraintlayout.motion.utils.CustomSupport.setInterpolatedValue(r20.mConstraintAttributeList.valueAt(0), r21, r20.mCache)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0099|if ((r6 \> 0.0f ? 1 : (r6 == 0.0f ? 0 : \-1)) == 0) goto L20\l}"];
Node_42 [shape=record,label="{42\:\ 0x009b|r20.mContinue = true\l}"];
Node_43 [shape=record,label="{43\:\ 0x009e}"];
Node_44 [shape=record,label="{44\:\ 0x00a0|RETURN\l|return r20.mContinue\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x003f}"];
MethodNode[shape=record,label="{public boolean androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.setProperty((r20v0 'this' androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet A[IMMUTABLE_TYPE, THIS]), (r21v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 't' float A[D('t' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'time' long A[D('time' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'cache' androidx.constraintlayout.core.motion.utils.KeyCache A[D('cache' androidx.constraintlayout.core.motion.utils.KeyCache), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0077 \-\> B:33:0x0062, CROSS_EDGE: B:38:0x0076 \-\> B:39:0x0077, CROSS_EDGE: B:41:0x0099 \-\> B:43:0x009e, CROSS_EDGE: B:29:0x003a \-\> B:32:0x0041, CROSS_EDGE: B:31:0x003f \-\> B:32:0x0041\lINLINE_NOT_NEEDED\lMETHOD_PARAMETERS: [view, t, time, cache]\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.constraintlayout.motion.utils.ViewTimeCycle.setProperty(android.view.View, float, long, androidx.constraintlayout.core.motion.utils.KeyCache):boolean]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_45;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_47;
Node_47 -> Node_39;
Node_39 -> Node_33;
Node_38 -> Node_46;
Node_46 -> Node_39;
Node_45 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_25;
Node_31 -> Node_32;
}

