digraph "CFG forandroidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.setup(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:227)\l0x0002: IGET  (r1 I:android.util.SparseArray\<androidx.constraintlayout.widget.ConstraintAttribute\>) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mConstraintAttributeList android.util.SparseArray \l0x0004: INVOKE  (r1 I:int) = (r1 I:android.util.SparseArray) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l0x0008: IGET  (r2 I:android.util.SparseArray\<androidx.constraintlayout.widget.ConstraintAttribute\>) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mConstraintAttributeList android.util.SparseArray  (LINE:228)\l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r2 I:java.lang.Object) = (r2 I:android.util.SparseArray), (r3 I:int) type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r2 I:androidx.constraintlayout.widget.ConstraintAttribute) = (androidx.constraintlayout.widget.ConstraintAttribute) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r2 I:int) = (r2 I:androidx.constraintlayout.widget.ConstraintAttribute) type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintAttribute.numberOfInterpolatedValues():int A[MD:():int (m)]\l0x0015: NEW_ARRAY  (r4 I:double[]) = (r1 I:int A[D('size' int), IMMUTABLE_TYPE]) type: double[]  (LINE:229)\l0x0017: ARITH  (r5 I:int) = (r2 I:int A[D('dimensionality' int)]) + (2 int)  (LINE:230)\l0x0019: NEW_ARRAY  (r5 I:float[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x001b: IPUT  (r5 I:float[]), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mTempValues float[] \l0x001d: NEW_ARRAY  (r5 I:float[]) = (r2 I:int A[D('dimensionality' int), IMMUTABLE_TYPE]) type: float[]  (LINE:231)\l0x001f: IPUT  (r5 I:float[]), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mCache float[] \l0x0021: ARITH  (r5 I:int) = (r2 I:int A[D('dimensionality' int)]) + (2 int)  (LINE:232)\l0x0023: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0024: NEW_ARRAY  (r6 I:int[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0026: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0027: APUT  (r6 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r5 I:??[int, float, short, byte, char]) \l0x0029: APUT  (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r1 I:??[int, float, short, byte, char] A[D('size' int)]) \l0x002b: CONST_CLASS  (r5 I:java.lang.Class\<double\>) =  double.class \l0x002d: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.lang.Class), (r6 I:int[]) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object A[MD:(java.lang.Class\<?\>, int[]):java.lang.Object VARARG throws java.lang.IllegalArgumentException, java.lang.NegativeArraySizeException (c)]\l0x0031: CHECK_CAST (r5 I:double[][]) = (double[][]) (r5 I:??[OBJECT, ARRAY]) \l0x0033: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:233)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|LOOP_START\lLOOP:0: B:16:0x0034\-\>B:21:0x006b\l|0x0034: IF  (r6 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:24:0x007e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: IGET  (r8 I:android.util.SparseArray\<androidx.constraintlayout.widget.ConstraintAttribute\>) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mConstraintAttributeList android.util.SparseArray  (LINE:234)\l0x0038: INVOKE  (r8 I:int) = (r8 I:android.util.SparseArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: android.util.SparseArray.keyAt(int):int A[MD:(int):int (c)]\l0x003c: IGET  (r9 I:android.util.SparseArray\<androidx.constraintlayout.widget.ConstraintAttribute\>) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mConstraintAttributeList android.util.SparseArray  (LINE:235)\l0x003e: INVOKE  (r9 I:java.lang.Object) = (r9 I:android.util.SparseArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)]\l0x0042: CHECK_CAST (r9 I:androidx.constraintlayout.widget.ConstraintAttribute) = (androidx.constraintlayout.widget.ConstraintAttribute) (r9 I:??[OBJECT, ARRAY]) \l0x0044: IGET  (r10 I:android.util.SparseArray\<float[]\>) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mWaveProperties android.util.SparseArray  (LINE:236)\l0x0046: INVOKE  (r10 I:java.lang.Object) = (r10 I:android.util.SparseArray), (r6 I:int A[D('i' int)]) type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)]\l0x004a: CHECK_CAST (r10 I:float[]) = (float[]) (r10 I:??[OBJECT, ARRAY]) \l0x004c: CAST (r11 I:double) = (double) (r8 I:int A[D('key' int)])  (LINE:237)\l0x004d: CONST  (r13 I:??[long, double]) = (4576918229304087675(0x3f847ae147ae147b, double:0.01) ??[long, double]) \l0x0052: ARITH  (r11 I:double) = (r11 I:double) * (r13 I:double) \l0x0054: APUT  \l  (r4 I:??[long, double][] A[D('time' double[])])\l  (r6 I:??[int, short, byte, char] A[D('i' int)])\l  (r11 I:??[long, double])\l \l0x0056: IGET  (r11 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mTempValues float[]  (LINE:238)\l0x0058: INVOKE  \l  (r9 I:androidx.constraintlayout.widget.ConstraintAttribute A[D('ca' androidx.constraintlayout.widget.ConstraintAttribute)])\l  (r11 I:float[])\l type: VIRTUAL call: androidx.constraintlayout.widget.ConstraintAttribute.getValuesToInterpolate(float[]):void A[MD:(float[]):void (m)]\l0x005b: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:239)\l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|LOOP_START\lLOOP:1: B:18:0x005c\-\>B:20:0x0061\l|0x005c: IGET  (r12 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet) androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mTempValues float[] \l0x005e: ARRAY_LENGTH  (r13 I:int) = (r12 I:??[]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|0x005f: IF  (r11 I:??[int, byte, short, char] A[D('k' int)]) \>= (r13 I:??[int, byte, short, char])  \-\> B:25:0x006b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0061|LOOP_END\lLOOP:1: B:18:0x005c\-\>B:20:0x0061\l|0x0061: AGET  (r13 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:240)\l0x0063: AGET  (r12 I:??[int, float, short, byte, char]) = (r12 I:??[int, float][]), (r11 I:??[int, short, byte, char] A[D('k' int)]) \l0x0065: CAST (r14 I:double) = (double) (r12 I:float) \l0x0066: APUT  (r13 I:??[long, double][]), (r11 I:??[int, short, byte, char] A[D('k' int)]), (r14 I:??[long, double]) \l0x0068: ARITH  (r11 I:int) = (r11 I:int A[D('k' int)]) + (1 int)  (LINE:239)\l}"];
Node_25 [shape=record,label="{25\:\ 0x006b|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x006b|LOOP_END\lLOOP:0: B:16:0x0034\-\>B:21:0x006b\l|0x006b: AGET  (r11 I:??[OBJECT, ARRAY] A[D('k' int)]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:242)\l0x006d: AGET  (r12 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][] A[D('waveProp' float[])]), (r3 I:??[int, short, byte, char]) \l0x006f: CAST (r12 I:double) = (double) (r12 I:float) \l0x0070: APUT  (r11 I:??[long, double][]), (r2 I:??[int, short, byte, char] A[D('dimensionality' int)]), (r12 I:??[long, double]) \l0x0072: AGET  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('values' double[][])]), (r6 I:??[int, short, byte, char] A[D('i' int)])  (LINE:243)\l0x0074: ARITH  (r12 I:int) = (r2 I:int A[D('dimensionality' int)]) + (1 int) \l0x0076: AGET  (r13 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][] A[D('waveProp' float[])]), (r7 I:??[int, short, byte, char]) \l0x0078: CAST (r13 I:double) = (double) (r13 I:float) \l0x0079: APUT  (r11 I:??[long, double][]), (r12 I:??[int, short, byte, char]), (r13 I:??[long, double]) \l0x007b: ARITH  (r6 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:233)\l}"];
Node_24 [shape=record,label="{24\:\ 0x007e|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|0x007e: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('curveType' int)])  (LINE:245)\l0x0080: INVOKE  (r6 I:androidx.constraintlayout.core.motion.utils.CurveFit) = (r3 I:int), (r4 I:double[] A[D('time' double[])]), (r5 I:double[][] A[D('values' double[][])]) type: STATIC call: androidx.constraintlayout.core.motion.utils.CurveFit.get(int, double[], double[][]):androidx.constraintlayout.core.motion.utils.CurveFit A[MD:(int, double[], double[][]):androidx.constraintlayout.core.motion.utils.CurveFit (m)]\l0x0084: IPUT  \l  (r6 I:androidx.constraintlayout.core.motion.utils.CurveFit)\l  (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet)\l androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.mCurveFit androidx.constraintlayout.core.motion.utils.CurveFit \l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|RETURN\l|0x0086: RETURN    (LINE:246)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.utils.ViewTimeCycle.CustomSet.setup((r16 'this' I:androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet A[IMMUTABLE_TYPE, THIS]), (r17 I:int A[D('curveType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0061 \-\> B:18:0x005c, BACK_EDGE: B:21:0x006b \-\> B:16:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005c\-0x006b: r11 'k' I\l  0x003c\-0x007b: r8 'key' I\l  0x0044\-0x007b: r9 'ca' Landroidx\/constraintlayout\/widget\/ConstraintAttribute;\l  0x004c\-0x007b: r10 'waveProp' [F\l  0x0034\-0x007e: r6 'i' I\l  0x0008\-0x0086: r1 'size' I\l  0x0015\-0x0086: r2 'dimensionality' I\l  0x0017\-0x0086: r4 'time' [D\l  0x0033\-0x0086: r5 'values' [[D\l  \-1 \-0x0086: r17 'curveType' I\lMETHOD_PARAMETERS: [curveType]\lMETHOD_OVERRIDE: [androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet.setup(int):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_18;
Node_25 -> Node_21;
Node_21 -> Node_16;
Node_24 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

