digraph "CFG forandroidx.constraintlayout.motion.utils.ViewSpline.PathRotate.setPathRotate(Landroid\/view\/View;FDD)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r3 I:androidx.constraintlayout.motion.utils.ViewSpline$PathRotate), (r5 I:float A[D('t' float)]) type: VIRTUAL call: androidx.constraintlayout.motion.utils.ViewSpline.PathRotate.get(float):float A[MD:(float):float (m)] (LINE:139)\l0x0004: INVOKE  (r1 I:double) = (r8 I:double A[D('dy' double)]), (r6 I:double A[D('dx' double)]) type: STATIC call: java.lang.Math.atan2(double, double):double A[MD:(double, double):double (c)]\l0x0008: INVOKE  (r1 I:double) = (r1 I:double) type: STATIC call: java.lang.Math.toDegrees(double):double A[MD:(double):double (c)]\l0x000c: CAST (r1 I:float) = (float) (r1 I:double) \l0x000d: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x000e: INVOKE  (r4 I:android.view.View A[D('view' android.view.View)]), (r0 I:float) type: VIRTUAL call: android.view.View.setRotation(float):void A[MD:(float):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:140)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.constraintlayout.motion.utils.ViewSpline.PathRotate.setPathRotate((r3 'this' I:androidx.constraintlayout.motion.utils.ViewSpline$PathRotate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('t' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:double A[D('dx' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[D('dy' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r4 'view' Landroid\/view\/View;\l  \-1 \-0x0011: r5 't' F\l  \-1 \-0x0011: r6 'dx' D\l  \-1 \-0x0011: r8 'dy' D\lMETHOD_PARAMETERS: [view, t, dx, dy]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

