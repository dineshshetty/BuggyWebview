digraph "CFG forandroidx.constraintlayout.motion.utils.ViewTimeCycle.get(FJLandroid\/view\/View;Landroidx\/constraintlayout\/core\/motion\/utils\/KeyCache;)F" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY])  (LINE:44)\l0x0002: MOVE  (r1 I:??[long, double]) = (r21 I:??[long, double] A[D('time' long)]) \l0x0004: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) \l0x0006: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY] A[D('cache' androidx.constraintlayout.core.motion.utils.KeyCache)]) \l0x0008: IGET  (r5 I:androidx.constraintlayout.core.motion.utils.CurveFit) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCurveFit androidx.constraintlayout.core.motion.utils.CurveFit \l0x000a: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pos' float)]) \l0x000c: CAST (r7 I:double) = (double) (r6 I:float) \l0x000d: IGET  (r9 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCache float[] \l0x000f: INVOKE  (r5 I:androidx.constraintlayout.core.motion.utils.CurveFit), (r7 I:double), (r9 I:float[]) type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.CurveFit.getPos(double, float[]):void A[MD:(double, float[]):void (m)]\l0x0012: IGET  (r5 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCache float[]  (LINE:45)\l0x0014: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0015: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r7 I:??[int, short, byte, char]) \l0x0017: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:46)\l0x0018: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: CMP_L  (r11 I:int) = (r5 I:float A[D('period' float)]), (r9 I:float) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|0x001c: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0025 \l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: IPUT  (r10 I:boolean), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mContinue boolean  (LINE:47)\l0x0020: IGET  (r7 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCache float[]  (LINE:48)\l0x0022: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r8 I:??[int, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|RETURN\l|0x0024: RETURN  (r7 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|0x0025: IGET  (r11 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float  (LINE:50)\l0x0027: INVOKE  (r11 I:boolean) = (r11 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x003f \l}"];
Node_28 [shape=record,label="{28\:\ 0x002d|0x002d: IGET  (r11 I:java.lang.String) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mType java.lang.String  (LINE:51)\l0x002f: INVOKE  (r11 I:float) = \l  (r4 I:androidx.constraintlayout.core.motion.utils.KeyCache)\l  (r3 I:java.lang.Object)\l  (r11 I:java.lang.String)\l  (r10 I:int)\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyCache.getFloatValue(java.lang.Object, java.lang.String, int):float A[MD:(java.lang.Object, java.lang.String, int):float (m)]\l0x0033: IPUT  (r11 I:float), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float \l0x0035: IGET  (r11 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float  (LINE:52)\l0x0037: INVOKE  (r11 I:boolean) = (r11 I:float) type: STATIC call: java.lang.Float.isNaN(float):boolean A[MD:(float):boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x003b|0x003b: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x003f \l}"];
Node_30 [shape=record,label="{30\:\ 0x003d|0x003d: IPUT  (r9 I:float), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float  (LINE:53)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003f|0x003f: IGET  (r11 I:long) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_time long  (LINE:56)\l0x0041: ARITH  (r11 I:long) = (r1 I:long) \- (r11 I:long) \l0x0043: IGET  (r13 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float  (LINE:57)\l0x0045: CAST (r13 I:double) = (double) (r13 I:float) \l0x0046: CAST (r7 I:double) = (double) (r11 I:long A[D('delta_time' long)]) \l0x0047: CONST  (r17 I:??[long, double]) = (4472406533629990549(0x3e112e0be826d695, double:1.0E\-9) ??[long, double]) \l0x004c: ARITH  (r7 I:double) = (r7 I:double) * (r17 I:double) \l0x004e: CAST (r9 I:double) = (double) (r5 I:float A[D('period' float)]) \l0x004f: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0051: ARITH  (r13 I:double) = (r13 I:double) + (r7 I:double) \l0x0052: CONST  (r7 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x0054: ARITH  (r13 I:double) = (r13 I:double) % (r7 I:double) \l0x0055: CAST (r7 I:float) = (float) (r13 I:double) \l0x0056: IPUT  (r7 I:float), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float \l0x0058: IGET  (r7 I:java.lang.String) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mType java.lang.String  (LINE:58)\l0x005a: IGET  (r8 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float \l0x005c: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005d: INVOKE  \l  (r4 I:androidx.constraintlayout.core.motion.utils.KeyCache)\l  (r3 I:java.lang.Object)\l  (r7 I:java.lang.String)\l  (r9 I:int)\l  (r8 I:float)\l type: VIRTUAL call: androidx.constraintlayout.core.motion.utils.KeyCache.setFloatValue(java.lang.Object, java.lang.String, int, float):void A[MD:(java.lang.Object, java.lang.String, int, float):void (m)]\l0x0060: IPUT  (r1 I:long), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_time long  (LINE:59)\l0x0062: IGET  (r7 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCache float[]  (LINE:60)\l0x0064: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r9 I:??[int, short, byte, char]) \l0x0066: IGET  (r8 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.last_cycle float  (LINE:61)\l0x0068: INVOKE  (r8 I:float) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle), (r8 I:float) type: VIRTUAL call: androidx.constraintlayout.motion.utils.ViewTimeCycle.calcWave(float):float A[MD:(float):float (m)]\l0x006c: IGET  (r10 I:float[]) = (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mCache float[]  (LINE:62)\l0x006e: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x006f: AGET  (r10 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][]), (r13 I:??[int, short, byte, char]) \l0x0071: ARITH  (r13 I:float) = (r7 I:float A[D('v' float)]) * (r8 I:float A[D('wave' float)])  (LINE:63)\l0x0073: ARITH  (r13 I:float) = (r13 I:float) + (r10 I:float A[D('offset' float)]) \l0x0074: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l0x0075: CMP_L  (r16 I:int) = (r7 I:float A[D('v' float)]), (r14 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0077|0x0077: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0080 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0079|0x0079: CMP_L  (r14 I:int) = (r5 I:float A[D('period' float)]), (r14 I:float) \l}"];
Node_34 [shape=record,label="{34\:\ 0x007b|0x007b: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x007e \l}"];
Node_36 [shape=record,label="{36\:\ 0x007e|0x007e: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0081|0x0081: IPUT  (r15 I:boolean), (r0 I:androidx.constraintlayout.motion.utils.ViewTimeCycle) androidx.constraintlayout.motion.utils.ViewTimeCycle.mContinue boolean \l}"];
Node_39 [shape=record,label="{39\:\ 0x0083|RETURN\l|0x0083: RETURN  (r13 I:float A[D('value' float)])  (LINE:65)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0080|0x0080: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public float androidx.constraintlayout.motion.utils.ViewTimeCycle.get((r19 'this' I:androidx.constraintlayout.motion.utils.ViewTimeCycle A[IMMUTABLE_TYPE, THIS]), (r20 I:float A[D('pos' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:long A[D('time' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:androidx.constraintlayout.core.motion.utils.KeyCache A[D('cache' androidx.constraintlayout.core.motion.utils.KeyCache), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0083 \-\> B:21:?, CROSS_EDGE: B:37:0x0080 \-\> B:38:0x0081, CROSS_EDGE: B:32:0x0077 \-\> B:37:0x0080, CROSS_EDGE: B:29:0x003b \-\> B:31:0x003f, CROSS_EDGE: B:27:0x002b \-\> B:31:0x003f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0083: r5 'period' F\l  0x0066\-0x0083: r7 'v' F\l  0x006c\-0x0083: r8 'wave' F\l  0x0071\-0x0083: r10 'offset' F\l  0x0043\-0x0083: r11 'delta_time' J\l  0x0074\-0x0083: r13 'value' F\l  \-1 \-0x0083: r20 'pos' F\l  \-1 \-0x0083: r21 'time' J\l  \-1 \-0x0083: r23 'view' Landroid\/view\/View;\l  \-1 \-0x0083: r24 'cache' Landroidx\/constraintlayout\/core\/motion\/utils\/KeyCache;\lMETHOD_PARAMETERS: [pos, time, view, cache]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_37 -> Node_38;
}

