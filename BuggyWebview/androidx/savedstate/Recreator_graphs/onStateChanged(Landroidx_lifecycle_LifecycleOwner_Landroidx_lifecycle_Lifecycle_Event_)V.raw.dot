digraph "CFG forandroidx.savedstate.Recreator.onStateChanged(Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/lifecycle\/Lifecycle$Event;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"source\" \l0x0002: INVOKE  (r5 I:java.lang.Object A[D('source' androidx.lifecycle.LifecycleOwner)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"event\" \l0x0007: INVOKE  (r6 I:java.lang.Object A[D('event' androidx.lifecycle.Lifecycle$Event)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: SGET  (r0 I:androidx.lifecycle.Lifecycle$Event) =  androidx.lifecycle.Lifecycle.Event.ON_CREATE androidx.lifecycle.Lifecycle$Event  (LINE:29)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x004f \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: INVOKE  (r0 I:androidx.lifecycle.Lifecycle) = (r5 I:androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner)]) type: INTERFACE call: androidx.lifecycle.LifecycleOwner.getLifecycle():androidx.lifecycle.Lifecycle A[MD:():androidx.lifecycle.Lifecycle (m)] (LINE:32)\l0x0012: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l0x0013: CHECK_CAST (r1 I:androidx.lifecycle.LifecycleObserver) = (androidx.lifecycle.LifecycleObserver) (r1 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:androidx.lifecycle.Lifecycle), (r1 I:androidx.lifecycle.LifecycleObserver) type: VIRTUAL call: androidx.lifecycle.Lifecycle.removeObserver(androidx.lifecycle.LifecycleObserver):void A[MD:(androidx.lifecycle.LifecycleObserver):void (m)]\l0x0018: IGET  (r0 I:androidx.savedstate.SavedStateRegistryOwner) = (r4 I:androidx.savedstate.Recreator) androidx.savedstate.Recreator.owner androidx.savedstate.SavedStateRegistryOwner  (LINE:33)\l0x001a: INVOKE  (r0 I:androidx.savedstate.SavedStateRegistry) = (r0 I:androidx.savedstate.SavedStateRegistryOwner) type: INTERFACE call: androidx.savedstate.SavedStateRegistryOwner.getSavedStateRegistry():androidx.savedstate.SavedStateRegistry A[MD:():androidx.savedstate.SavedStateRegistry (m)]\l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"androidx.savedstate.Restarter\"  (LINE:34)\l0x0020: INVOKE  (r0 I:android.os.Bundle) = (r0 I:androidx.savedstate.SavedStateRegistry), (r1 I:java.lang.String) type: VIRTUAL call: androidx.savedstate.SavedStateRegistry.consumeRestoredStateForKey(java.lang.String):android.os.Bundle A[MD:(java.lang.String):android.os.Bundle (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|0x0024: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0027  (LINE:33)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:34)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|0x0027: CONST_STR  (r1 I:java.lang.String) =  \"classes_to_restore\"  (LINE:35)\l0x0029: INVOKE  (r1 I:java.util.ArrayList) = (r0 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getStringArrayList(java.lang.String):java.util.ArrayList A[MD:(java.lang.String):java.util.ArrayList\<java.lang.String\> (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0046 \l}"];
Node_28 [shape=record,label="{28\:\ 0x002f|0x002f: CHECK_CAST (r1 I:java.util.List) = (java.util.List) (r1 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.List A[D('classes' java.util.List)]) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:41)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|LOOP_START\lLOOP:0: B:29:0x0035\-\>B:31:0x003b\l|0x0035: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0039|0x0039: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0045 \l}"];
Node_31 [shape=record,label="{31\:\ 0x003b|LOOP_END\lLOOP:0: B:29:0x0035\-\>B:31:0x003b\l|0x003b: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003f: CHECK_CAST (r3 I:java.lang.String) = (java.lang.String) (r3 I:??[OBJECT, ARRAY]) \l0x0041: INVOKE  (r4 I:androidx.savedstate.Recreator), (r3 I:java.lang.String A[D('className' java.lang.String)]) type: DIRECT call: androidx.savedstate.Recreator.reflectiveNew(java.lang.String):void A[MD:(java.lang.String):void (m)] (LINE:42)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0045|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0045|RETURN\l|0x0045: RETURN    (LINE:44)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0046|0x0046: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException A[D('classes' java.util.List)]) =  java.lang.IllegalStateException  (LINE:36)\l0x0049: CONST_STR  (r2 I:java.lang.String) =  \"Bundle with restored state for the component \"androidx.savedstate.Restarter\" must contain list of strings by the key \"classes_to_restore\"\"  (LINE:36)\l0x004b: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x004e|0x004e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x004f|0x004f: NEW_INSTANCE  (r0 I:java.lang.AssertionError A[D('bundle' android.os.Bundle)]) =  java.lang.AssertionError  (LINE:30)\l0x0051: CONST_STR  (r1 I:java.lang.String) =  \"Next event must be ON_CREATE\" \l0x0053: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|0x0056: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.savedstate.Recreator.onStateChanged((r4 'this' I:androidx.savedstate.Recreator A[IMMUTABLE_TYPE, THIS]), (r5 I:androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:31:0x003b \-\> B:29:0x0035, CROSS_EDGE: B:32:0x0045 \-\> B:20:?, CROSS_EDGE: B:34:0x004e \-\> B:20:?, CROSS_EDGE: B:36:0x0056 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0041\-0x0044: r3 'className' Ljava\/lang\/String;\l  0x0031\-0x0046: r1 'classes' Ljava\/util\/List;\l  0x0027\-0x004f: r0 'bundle' Landroid\/os\/Bundle;\l  \-1 \-0x0056: r5 'source' Landroidx\/lifecycle\/LifecycleOwner;\l  \-1 \-0x0056: r6 'event' Landroidx\/lifecycle\/Lifecycle$Event;\lMETHOD_OVERRIDE: [androidx.lifecycle.LifecycleEventObserver.onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event):void]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_20;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_29;
Node_37 -> Node_32;
Node_32 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

