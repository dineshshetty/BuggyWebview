digraph "CFG forandroidx.savedstate.Recreator.reflectiveNew(Ljava\/lang\/String;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Class \"  (LINE:48)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ClassNotFoundException \-\> 0x0078, blocks: (B:27:0x0002), top: B:42:0x0002 \}\lCatch: ClassNotFoundException \-\> 0x0078\l|0x0002: CONST_CLASS  (r1 I:java.lang.Class\<androidx.savedstate.Recreator\>) =  androidx.savedstate.Recreator.class A[TRY_ENTER] (LINE:49)\l0x0004: INVOKE  (r1 I:java.lang.ClassLoader) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[Catch: ClassNotFoundException \-\> 0x0078, MD:():java.lang.ClassLoader (c)]\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:java.lang.Class) = (r7 I:java.lang.String A[D('className' java.lang.String)]), (r2 I:boolean), (r1 I:java.lang.ClassLoader) type: STATIC call: java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class A[Catch: ClassNotFoundException \-\> 0x0078, MD:(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x000d: CONST_CLASS  (r3 I:java.lang.Class\<androidx.savedstate.SavedStateRegistry$AutoRecreated\>) =  androidx.savedstate.SavedStateRegistry$AutoRecreated.class \l0x000f: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.Class), (r3 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.asSubclass(java.lang.Class):java.lang.Class A[Catch: ClassNotFoundException \-\> 0x0078, MD:\<U\>:(java.lang.Class\<U\>):java.lang.Class\<? extends U\> (c)] (LINE:50)\l0x0013: CONST_STR  (r3 I:java.lang.String) =  \"\{n                Class.…class.java)n            \}\"  (LINE:48)\l0x0015: INVOKE  (r1 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: ClassNotFoundException \-\> 0x0078, MD:(java.lang.Object, java.lang.String):void (m), TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ 0x001a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{NoSuchMethodException \-\> 0x0056, blocks: (B:28:0x001a), top: B:46:0x001a \}\lCatch: NoSuchMethodException \-\> 0x0056\l|0x001a: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x0056, TRY_ENTER] (LINE:56)\l0x001c: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r1 I:java.lang.Class A[D('clazz' java.lang.Class)]), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: NoSuchMethodException \-\> 0x0056, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c), TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:63)\l0x0023: INVOKE  (r0 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Constructor.setAccessible(boolean):void A[MD:(boolean):void (s)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x003b, blocks: (B:30:0x0027), top: B:44:0x0027 \}\lCatch: Exception \-\> 0x003b\l|0x0027: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x003b, TRY_ENTER] (LINE:66)\l0x0029: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]), (r2 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x003b, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x002d: CONST_STR  (r3 I:java.lang.String) =  \"\{n                constr…wInstance()n            \}\"  (LINE:65)\l0x002f: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: Exception \-\> 0x003b, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0032: CHECK_CAST (r2 I:androidx.savedstate.SavedStateRegistry$AutoRecreated) = (androidx.savedstate.SavedStateRegistry$AutoRecreated) (r2 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003b, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0035|0x0035: IGET  (r3 I:androidx.savedstate.SavedStateRegistryOwner) = (r6 I:androidx.savedstate.Recreator) androidx.savedstate.Recreator.owner androidx.savedstate.SavedStateRegistryOwner  (LINE:70)\l0x0037: INVOKE  \l  (r2 I:androidx.savedstate.SavedStateRegistry$AutoRecreated A[D('newInstance' androidx.savedstate.SavedStateRegistry$AutoRecreated)])\l  (r3 I:androidx.savedstate.SavedStateRegistryOwner)\l type: INTERFACE call: androidx.savedstate.SavedStateRegistry.AutoRecreated.onRecreated(androidx.savedstate.SavedStateRegistryOwner):void A[MD:(androidx.savedstate.SavedStateRegistryOwner):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x003a|RETURN\l|0x003a: RETURN    (LINE:71)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x003b|ExcHandler: Exception \-\> 0x003b\l|0x003b: MOVE_EXCEPTION  (r2 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x003b] (LINE:67)\l}"];
Node_34 [shape=record,label="{34\:\ 0x003c|0x003c: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:68)\l0x003e: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0040: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0043: CONST_STR  (r5 I:java.lang.String) =  \"Failed to instantiate \" \l0x0045: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0048: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.String A[D('className' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004b: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004f: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) \l0x0050: CHECK_CAST (r5 I:java.lang.Throwable) = (java.lang.Throwable) (r5 I:??[OBJECT, ARRAY]) \l0x0052: INVOKE  (r3 I:java.lang.RuntimeException), (r4 I:java.lang.String), (r5 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0055|0x0055: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|ExcHandler: NoSuchMethodException \-\> 0x0056\l|0x0056: MOVE_EXCEPTION  (r2 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0056] (LINE:57)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0057|0x0057: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:58)\l0x0059: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:59)\l0x005b: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x005e: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0061: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.Class A[D('clazz' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l0x0065: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0068: CONST_STR  (r0 I:java.lang.String) =  \" must have default constructor in order to be automatically recreated\" \l0x006a: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006d: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0071: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('e' java.lang.NoSuchMethodException)])  (LINE:60)\l0x0072: CHECK_CAST (r4 I:java.lang.Throwable) = (java.lang.Throwable) (r4 I:??[OBJECT, ARRAY]) \l0x0074: INVOKE  (r3 I:java.lang.IllegalStateException), (r0 I:java.lang.String), (r4 I:java.lang.Throwable) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)] (LINE:58)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0077|0x0077: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0078|ExcHandler: ClassNotFoundException \-\> 0x0078\l|0x0078: MOVE_EXCEPTION  (r1 I:java.lang.ClassNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassNotFoundException \-\> 0x0078] (LINE:51)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0079|0x0079: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:52)\l0x007b: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007d: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0080: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0083: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.String A[D('className' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0086: CONST_STR  (r0 I:java.lang.String) =  \" wasn't found\" \l0x0088: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x008b: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x008f: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.ClassNotFoundException)]) \l0x0090: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0092: INVOKE  (r2 I:java.lang.RuntimeException), (r0 I:java.lang.String), (r3 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0095|0x0095: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final void androidx.savedstate.Recreator.reflectiveNew((r6 'this' I:androidx.savedstate.Recreator A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[D('className' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x003a \-\> B:25:?, CROSS_EDGE: B:35:0x0055 \-\> B:25:?, CROSS_EDGE: B:44:0x0027 \-\> B:33:0x003b, CROSS_EDGE: B:38:0x0077 \-\> B:25:?, CROSS_EDGE: B:46:0x001a \-\> B:36:0x0056, CROSS_EDGE: B:42:0x0002 \-\> B:39:0x0078\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0035\-0x003b: r2 'newInstance' Landroidx\/savedstate\/SavedStateRegistry$AutoRecreated;\l  0x0022\-0x0056: r0 'constructor' Ljava\/lang\/reflect\/Constructor;\l  0x003c\-0x0056: r2 'e' Ljava\/lang\/Exception;\l  0x0019\-0x0078: r1 'clazz' Ljava\/lang\/Class;\l  0x0057\-0x0078: r2 'e' Ljava\/lang\/NoSuchMethodException;\l  0x0079\-0x0095: r1 'e' Ljava\/lang\/ClassNotFoundException;\l  \-1 \-0x0095: r7 'className' Ljava\/lang\/String;\lTryCatch #0 \{ClassNotFoundException \-\> 0x0078, blocks: (B:27:0x0002), top: B:42:0x0002 \}, TryCatch #1 \{Exception \-\> 0x003b, blocks: (B:30:0x0027), top: B:44:0x0027 \}, TryCatch #2 \{NoSuchMethodException \-\> 0x0056, blocks: (B:28:0x001a), top: B:46:0x001a \}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_42;
Node_42 -> Node_27;
Node_42 -> Node_39;
Node_27 -> Node_43;
Node_27 -> Node_46;
Node_43 -> Node_39;
Node_46 -> Node_28;
Node_46 -> Node_36;
Node_28 -> Node_29;
Node_28 -> Node_47;
Node_29 -> Node_44;
Node_44 -> Node_30;
Node_44 -> Node_33;
Node_30 -> Node_31;
Node_30 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_25;
Node_45 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_25;
Node_47 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_25;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_25;
}

