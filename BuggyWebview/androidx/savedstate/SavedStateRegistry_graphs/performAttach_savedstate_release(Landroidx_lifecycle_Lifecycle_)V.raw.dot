digraph "CFG forandroidx.savedstate.SavedStateRegistry.performAttach$savedstate_release(Landroidx\/lifecycle\/Lifecycle;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"lifecycle\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('lifecycle' androidx.lifecycle.Lifecycle)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: IGET  (r0 I:boolean) = (r2 I:androidx.savedstate.SavedStateRegistry) androidx.savedstate.SavedStateRegistry.attached boolean  (LINE:199)\l0x0007: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0008: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0018 \l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0) =  androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0  (LINE:201)\l0x000d: INVOKE  (r0 I:androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0), (r2 I:androidx.savedstate.SavedStateRegistry) type: DIRECT call: androidx.savedstate.SavedStateRegistry$$ExternalSyntheticLambda0.\<init\>(androidx.savedstate.SavedStateRegistry):void A[MD:(androidx.savedstate.SavedStateRegistry):void (m)]\l0x0010: CHECK_CAST (r0 I:androidx.lifecycle.LifecycleObserver) = (androidx.lifecycle.LifecycleObserver) (r0 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  \l  (r3 I:androidx.lifecycle.Lifecycle A[D('lifecycle' androidx.lifecycle.Lifecycle)])\l  (r0 I:androidx.lifecycle.LifecycleObserver)\l type: VIRTUAL call: androidx.lifecycle.Lifecycle.addObserver(androidx.lifecycle.LifecycleObserver):void A[MD:(androidx.lifecycle.LifecycleObserver):void (m)]\l0x0015: IPUT  (r1 I:boolean), (r2 I:androidx.savedstate.SavedStateRegistry) androidx.savedstate.SavedStateRegistry.attached boolean  (LINE:208)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:209)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:273)\l0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('$i$a$\-check\-SavedStateRegistry$performAttach$1' int)]) =  java.lang.IllegalStateException \l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"SavedStateRegistry was already attached.\" \l0x001e: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0022: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|0x0025: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void androidx.savedstate.SavedStateRegistry.performAttach$savedstate_release((r2 'this' I:androidx.savedstate.SavedStateRegistry A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.lifecycle.Lifecycle A[D('lifecycle' androidx.lifecycle.Lifecycle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0025 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x001a: r0 '$i$a$\-check\-SavedStateRegistry$performAttach$1' I\l  \-1 \-0x0025: r3 'lifecycle' Landroidx\/lifecycle\/Lifecycle;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

