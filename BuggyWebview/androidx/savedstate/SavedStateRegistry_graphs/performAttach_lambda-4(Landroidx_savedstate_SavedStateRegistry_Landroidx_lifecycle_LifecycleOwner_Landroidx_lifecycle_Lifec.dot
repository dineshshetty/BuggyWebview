digraph "CFG forandroidx.savedstate.SavedStateRegistry.performAttach$lambda\-4(Landroidx\/savedstate\/SavedStateRegistry;Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/lifecycle\/Lifecycle$Event;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r1, \"this$0\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<anonymous parameter 0\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"event\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0011|if (r3 != androidx.lifecycle.Lifecycle.Event.ON_START) goto L6\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|r1.isAllowingSavingState = true\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0017}"];
Node_17 [shape=record,label="{17\:\ 0x0019|if (r3 != androidx.lifecycle.Lifecycle.Event.ON_STOP) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|r1.isAllowingSavingState = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|RETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static final void androidx.savedstate.SavedStateRegistry.performAttach$lambda\-4((r1v0 'this$0' androidx.savedstate.SavedStateRegistry A[D('this$0' androidx.savedstate.SavedStateRegistry), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 androidx.lifecycle.LifecycleOwner A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'event' androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x001b \-\> B:19:0x001e, CROSS_EDGE: B:17:0x0019 \-\> B:19:0x001e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_20;
Node_20 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_12;
}

