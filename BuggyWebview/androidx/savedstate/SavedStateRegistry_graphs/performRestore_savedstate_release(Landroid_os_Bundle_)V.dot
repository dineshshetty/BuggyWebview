digraph "CFG forandroidx.savedstate.SavedStateRegistry.performRestore$savedstate_release(Landroid\/os\/Bundle;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r2.attached == false) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004}"];
Node_20 [shape=record,label="{20\:\ 0x0008|if ((r2.isRestored ^ true) == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|if (r3 == null) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|android.os.Bundle r0 = r3.getBundle(androidx.savedstate.SavedStateRegistry.SAVED_COMPONENTS_KEY)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|PHI: r0 \l  PHI: (r0v8 android.os.Bundle) = (r0v7 android.os.Bundle), (r0v10 android.os.Bundle) binds: [B:23:0x0013, B:22:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r2.restoredState = r0\lr2.isRestored = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|r0 = null\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019}"];
Node_27 [shape=record,label="{27\:\ 0x0026|throw new java.lang.IllegalStateException(\"SavedStateRegistry was already restored.\".toString())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0027}"];
Node_29 [shape=record,label="{29\:\ 0x0034|throw new java.lang.IllegalStateException(\"You must call performAttach() before calling performRestore(Bundle).\".toString())\l}"];
MethodNode[shape=record,label="{public final void androidx.savedstate.SavedStateRegistry.performRestore$savedstate_release((r2v0 'this' androidx.savedstate.SavedStateRegistry A[IMMUTABLE_TYPE, THIS]), (r3v0 'savedState' android.os.Bundle A[D('savedState' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0013 \-\> B:24:0x0014, CROSS_EDGE: B:27:0x0026 \-\> B:16:?, CROSS_EDGE: B:29:0x0034 \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_23 -> Node_24;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

