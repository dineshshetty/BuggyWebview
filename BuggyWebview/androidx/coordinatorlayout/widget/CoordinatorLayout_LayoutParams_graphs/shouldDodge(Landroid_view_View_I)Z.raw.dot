digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.shouldDodge(Landroid\/view\/View;I)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('other' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:3210)\l0x0004: CHECK_CAST (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0006: IGET  (r1 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.insetEdge int  (LINE:3211)\l0x0008: INVOKE  (r1 I:int) = (r1 I:int), (r5 I:int A[D('layoutDirection' int)]) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('absInset' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0019  (LINE:3212)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|0x000e: IGET  (r2 I:int) = (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.dodgeInsetEdges int \l0x0010: INVOKE  (r2 I:int) = (r2 I:int), (r5 I:int A[D('layoutDirection' int)]) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)] (LINE:3213)\l0x0014: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char] A[D('absInset' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('absInset' int)])  \-\> B:17:0x0019 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|SYNTHETIC\lRETURN\l|0x0017: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001a: RETURN  (r2 I:boolean) A[SYNTHETIC] (LINE:3212)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\lORIG_RETURN\l|0x0019: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: RETURN  (r2 I:boolean)  (LINE:3212)\l}"];
MethodNode[shape=record,label="{private boolean androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.shouldDodge((r3 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('other' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0019 \-\> B:18:0x001a, CROSS_EDGE: B:13:0x000c \-\> B:17:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x001a: r0 'lp' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout$LayoutParams;\l  0x000c\-0x001a: r1 'absInset' I\l  \-1 \-0x001a: r4 'other' Landroid\/view\/View;\l  \-1 \-0x001a: r5 'layoutDirection' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

