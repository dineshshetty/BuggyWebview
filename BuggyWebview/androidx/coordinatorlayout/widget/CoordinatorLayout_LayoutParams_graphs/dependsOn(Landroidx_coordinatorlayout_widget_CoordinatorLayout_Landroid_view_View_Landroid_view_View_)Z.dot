digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.dependsOn(Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout;Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r4 == r1.mAnchorDirectChild) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004}"];
Node_20 [shape=record,label="{20\:\ 0x000c|if (shouldDodge(r4, androidx.core.view.ViewCompat.getLayoutDirection(r2)) != false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior r0 = r1.mBehavior\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|if (r0 == null) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012}"];
Node_24 [shape=record,label="{24\:\ 0x0016|if (r0.layoutDependsOn(r2, r3, r4) == false) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|SYNTHETIC\lRETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{boolean androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.dependsOn((r1v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[IMMUTABLE_TYPE, THIS]), (r2v0 'parent' androidx.coordinatorlayout.widget.CoordinatorLayout A[D('parent' androidx.coordinatorlayout.widget.CoordinatorLayout), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'dependency' android.view.View A[D('dependency' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x001b \-\> B:28:0x001c, CROSS_EDGE: B:22:0x0010 \-\> B:26:0x0019, CROSS_EDGE: B:20:0x000c \-\> B:27:0x001b, CROSS_EDGE: B:18:0x0002 \-\> B:27:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_16;
Node_27 -> Node_16;
}

