digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.HierarchyChangeListener.onChildViewAdded(Landroid\/view\/View;Landroid\/view\/View;)V" {
subgraph cluster_Region_129727966 {
label = "R(1:(1:(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_677145948 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_113180293 {
label = "IF [B:10:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0004|if (androidx.coordinatorlayout.widget.CoordinatorLayout.this.mOnHierarchyChangeListener != null) goto L3\l}"];
subgraph cluster_Region_880595505 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0006|androidx.coordinatorlayout.widget.CoordinatorLayout.this.mOnHierarchyChangeListener.onChildViewAdded(r2, r3)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000d|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.coordinatorlayout.widget.CoordinatorLayout.HierarchyChangeListener.onChildViewAdded((r1v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener A[IMMUTABLE_TYPE, THIS]), (r2v0 'parent' android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.OnHierarchyChangeListener.onChildViewAdded(android.view.View, android.view.View):void\}]\l}"];
MethodNode -> Node_7;Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

