digraph "CFG forandroidx.coordinatorlayout.widget.DirectedAcyclicGraph.dfs(Ljava\/lang\/Object;Ljava\/util\/ArrayList;Ljava\/util\/HashSet;)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:java.util.ArrayList A[D('result' java.util.ArrayList\<T\>)]), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: java.util.ArrayList.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:174)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0007 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:176)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r7 I:java.util.HashSet A[D('tmpMarked' java.util.HashSet\<T\>)]), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: java.util.HashSet.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:178)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0032 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: INVOKE  (r7 I:java.util.HashSet A[D('tmpMarked' java.util.HashSet\<T\>)]), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:182)\l0x0010: IGET  (r0 I:androidx.collection.SimpleArrayMap\<T, java.util.ArrayList\<T\>\>) = \l  (r4 I:androidx.coordinatorlayout.widget.DirectedAcyclicGraph A[D('this' androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\>)])\l androidx.coordinatorlayout.widget.DirectedAcyclicGraph.mGraph androidx.collection.SimpleArrayMap  (LINE:184)\l0x0012: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.collection.SimpleArrayMap), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)]\l0x0016: CHECK_CAST (r0 I:java.util.ArrayList) = (java.util.ArrayList) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('edges' java.util.ArrayList\<T\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x002b  (LINE:185)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:186)\l0x001b: INVOKE  (r2 I:int) = (r0 I:java.util.ArrayList A[D('edges' java.util.ArrayList\<T\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|LOOP_START\lLOOP:0: B:27:0x001f\-\>B:28:0x0021\l|0x001f: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:33:0x002b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|LOOP_END\lLOOP:0: B:27:0x001f\-\>B:28:0x0021\l|0x0021: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.ArrayList A[D('edges' java.util.ArrayList\<T\>)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:187)\l0x0025: INVOKE  \l  (r4 I:androidx.coordinatorlayout.widget.DirectedAcyclicGraph A[D('this' androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\>)])\l  (r3 I:java.lang.Object)\l  (r6 I:java.util.ArrayList A[D('result' java.util.ArrayList\<T\>)])\l  (r7 I:java.util.HashSet A[D('tmpMarked' java.util.HashSet\<T\>)])\l type: DIRECT call: androidx.coordinatorlayout.widget.DirectedAcyclicGraph.dfs(java.lang.Object, java.util.ArrayList, java.util.HashSet):void A[MD:(T, java.util.ArrayList\<T\>, java.util.HashSet\<T\>):void (m)]\l0x0028: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:186)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x002b|0x002b: INVOKE  (r7 I:java.util.HashSet A[D('tmpMarked' java.util.HashSet\<T\>)]), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: java.util.HashSet.remove(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:191)\l0x002e: INVOKE  (r6 I:java.util.ArrayList A[D('result' java.util.ArrayList\<T\>)]), (r5 I:java.lang.Object A[D('node' T)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:193)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0031|RETURN\l|0x0031: RETURN    (LINE:194)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:java.lang.RuntimeException A[D('edges' java.util.ArrayList\<T\>)]) =  java.lang.RuntimeException  (LINE:179)\l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"This graph contains cyclic dependencies\" \l0x0036: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.DirectedAcyclicGraph.dfs((r4 'this' I:androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\> A[D('this' androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\>), IMMUTABLE_TYPE, THIS]), (r5 I:T A[D('node' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.ArrayList\<T\> A[D('result' java.util.ArrayList\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.HashSet\<T\> A[D('tmpMarked' java.util.HashSet\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0021 \-\> B:27:0x001f, CROSS_EDGE: B:30:0x0031 \-\> B:18:?, CROSS_EDGE: B:25:0x0018 \-\> B:29:0x002b, CROSS_EDGE: B:32:0x0039 \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x002b: r1 'i' I\l  0x001f\-0x002b: r2 'size' I\l  0x0018\-0x0032: r0 'edges' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<TT;\>;\l  0x0000\-0x0039: r4 'this' Landroidx\/coordinatorlayout\/widget\/DirectedAcyclicGraph;, signature: Landroidx\/coordinatorlayout\/widget\/DirectedAcyclicGraph\<TT;\>;\l  0x0000\-0x0039: r5 'node' Ljava\/lang\/Object;, signature: TT;\l  0x0000\-0x0039: r6 'result' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<TT;\>;\l  0x0000\-0x0039: r7 'tmpMarked' Ljava\/util\/HashSet;, signature: Ljava\/util\/HashSet\<TT;\>;\lTYPE_VARS: [T]\lSIGNATURE: (TT;Ljava\/util\/ArrayList\<TT;\>;Ljava\/util\/HashSet\<TT;\>;)V\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_27;
Node_33 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
Node_31 -> Node_32;
Node_32 -> Node_18;
}

