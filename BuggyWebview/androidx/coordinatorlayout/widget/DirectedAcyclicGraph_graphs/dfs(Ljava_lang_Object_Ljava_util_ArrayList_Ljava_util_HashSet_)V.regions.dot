digraph "CFG forandroidx.coordinatorlayout.widget.DirectedAcyclicGraph.dfs(Ljava\/lang\/Object;Ljava\/util\/ArrayList;Ljava\/util\/HashSet;)V" {
subgraph cluster_Region_1086312746 {
label = "R(1:(2:(1:3)|(1:(2:(1:16)|(3:7|(2:9|(1:11))|13)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1095636445 {
label = "R(2:(1:3)|(1:(2:(1:16)|(3:7|(2:9|(1:11))|13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1999487982 {
label = "IF [B:20:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|if (r6.contains(r5) != false) goto L3\l}"];
subgraph cluster_Region_1635068972 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1602062249 {
label = "R(1:(2:(1:16)|(3:7|(2:9|(1:11))|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1848410470 {
label = "R(2:(1:16)|(3:7|(2:9|(1:11))|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2005339646 {
label = "IF [B:23:0x000b] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000b|if (r7.contains(r5) != false) goto L15\l}"];
subgraph cluster_Region_1071336302 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0039|throw new java.lang.RuntimeException(\"This graph contains cyclic dependencies\")\l}"];
}
}
subgraph cluster_Region_1354413957 {
label = "R(3:7|(2:9|(1:11))|13)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000d|r7.add(r5)\ljava.util.ArrayList java.util.ArrayList\<T\> r0 = r4.mGraph.get(r5)\l}"];
subgraph cluster_IfRegion_12324443 {
label = "IF [B:25:0x0018] THEN: R(2:9|(1:11)) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0018|if (r0 != null) goto L9\l}"];
subgraph cluster_Region_1192897516 {
label = "R(2:9|(1:11))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001a|int r1 = 0\lint int r2 = r0.size()\l}"];
subgraph cluster_LoopRegion_2026150482 {
label = "LOOP:0: (1:11)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001f|LOOP_START\lLOOP:0: B:27:0x001f\-\>B:28:0x0021\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:26:0x001a, B:28:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r2) goto L11\l}"];
subgraph cluster_Region_2110201072 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0021|LOOP_END\lLOOP:0: B:27:0x001f\-\>B:28:0x0021\l|dfs(r0.get(r1), r6, r7)\lr1++\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x002b|r7.remove(r5)\lr6.add(r5)\l}"];
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0007}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x002b|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0031}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0032}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.DirectedAcyclicGraph.dfs((r4v0 'this' androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\> A[D('this' androidx.coordinatorlayout.widget.DirectedAcyclicGraph\<T\>), IMMUTABLE_TYPE, THIS]), (r5v0 'node' T A[D('node' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'result' java.util.ArrayList\<T\> A[D('result' java.util.ArrayList\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'tmpMarked' java.util.HashSet\<T\> A[D('tmpMarked' java.util.HashSet\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0021 \-\> B:27:0x001f, CROSS_EDGE: B:30:0x0031 \-\> B:18:?, CROSS_EDGE: B:25:0x0018 \-\> B:29:0x002b, CROSS_EDGE: B:32:0x0039 \-\> B:18:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Ljava\/util\/ArrayList\<TT;\>;Ljava\/util\/HashSet\<TT;\>;)V\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_18;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_32 -> Node_18;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_29[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_33[style=dashed];
Node_28 -> Node_27;
Node_29 -> Node_30;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_33 -> Node_29;
Node_30 -> Node_18;
Node_31 -> Node_32;
}

