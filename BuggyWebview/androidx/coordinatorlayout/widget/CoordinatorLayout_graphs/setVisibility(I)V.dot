digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.setVisibility(I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|super.setVisibility(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if (r4 != 0) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|r1 = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|PHI: r1 \l  PHI: (r1v1 'visible' boolean) = (r1v0 'visible' boolean), (r1v2 'visible' boolean) binds: [B:19:0x0008, B:18:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable r2 = r3.mStatusBarBackground\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|if (r2 == null) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r2.isVisible() == r1) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|r3.mStatusBarBackground.setVisible(r1, false)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|r1 = false\l}"];
MethodNode[shape=record,label="{public void androidx.coordinatorlayout.widget.CoordinatorLayout.setVisibility((r3v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x0011 \-\> B:25:0x0018, CROSS_EDGE: B:21:0x000b \-\> B:25:0x0018, CROSS_EDGE: B:19:0x0008 \-\> B:20:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

