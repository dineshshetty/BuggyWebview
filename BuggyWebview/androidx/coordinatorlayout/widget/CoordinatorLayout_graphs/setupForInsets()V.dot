digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.setupForInsets()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007}"];
Node_20 [shape=record,label="{20\:\ 0x000b|if (androidx.core.view.ViewCompat.getFitsSystemWindows(r2) == false) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d}"];
Node_22 [shape=record,label="{22\:\ 0x000f|if (r2.mApplyWindowInsetsListener != null) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|r2.mApplyWindowInsetsListener = new androidx.coordinatorlayout.widget.CoordinatorLayout.C01781()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|androidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(r2, r2.mApplyWindowInsetsListener)\lsetSystemUiVisibility(1280)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|androidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(r2, null)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.CoordinatorLayout.setupForInsets((r2v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0027 \-\> B:15:?, CROSS_EDGE: B:22:0x000f \-\> B:24:0x0018, CROSS_EDGE: B:25:0x0023 \-\> B:26:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

