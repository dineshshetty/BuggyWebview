digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.getChildRect(Landroid\/view\/View;ZLandroid\/graphics\/Rect;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.isLayoutRequested():boolean A[MD:():boolean (c)] (LINE:979)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0029 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000f \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transform' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0015  (LINE:983)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: INVOKE  \l  (r4 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r5 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:android.graphics.Rect A[D('out' android.graphics.Rect)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getDescendantRect(android.view.View, android.graphics.Rect):void A[MD:(android.view.View, android.graphics.Rect):void (m)] (LINE:984)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:988)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: INVOKE  (r0 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:986)\l0x0019: INVOKE  (r1 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x001d: INVOKE  (r2 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)]\l0x0021: INVOKE  (r3 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x0025: INVOKE  (r7 I:android.graphics.Rect A[D('out' android.graphics.Rect)]), (r0 I:int), (r1 I:int), (r2 I:int), (r3 I:int) type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:988)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|0x0029: INVOKE  (r7 I:android.graphics.Rect A[D('out' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.setEmpty():void A[MD:():void (c)] (LINE:980)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|RETURN\l|0x002c: RETURN    (LINE:981)\l}"];
MethodNode[shape=record,label="{void androidx.coordinatorlayout.widget.CoordinatorLayout.getChildRect((r4 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('transform' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Rect A[D('out' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0015 \-\> B:24:0x0028, CROSS_EDGE: B:26:0x002c \-\> B:15:?, CROSS_EDGE: B:17:0x0004 \-\> B:25:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002c: r5 'child' Landroid\/view\/View;\l  \-1 \-0x002c: r6 'transform' Z\l  \-1 \-0x002c: r7 'out' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_25[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_27;
Node_27 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

