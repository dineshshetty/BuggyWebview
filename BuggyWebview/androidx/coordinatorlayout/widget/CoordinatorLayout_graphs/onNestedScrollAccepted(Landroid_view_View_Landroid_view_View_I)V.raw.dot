digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.onNestedScrollAccepted(Landroid\/view\/View;Landroid\/view\/View;I)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1796)\l0x0001: INVOKE  \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r2 I:android.view.View A[D('child' android.view.View)])\l  (r3 I:android.view.View A[D('target' android.view.View)])\l  (r4 I:int A[D('nestedScrollAxes' int)])\l  (r0 I:int)\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.onNestedScrollAccepted(android.view.View, android.view.View, int, int):void A[MD:(android.view.View, android.view.View, int, int):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:1797)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.coordinatorlayout.widget.CoordinatorLayout.onNestedScrollAccepted((r1 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[D('target' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('nestedScrollAxes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r2 'child' Landroid\/view\/View;\l  \-1 \-0x0004: r3 'target' Landroid\/view\/View;\l  \-1 \-0x0004: r4 'nestedScrollAxes' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewParent.onNestedScrollAccepted(android.view.View, android.view.View, int):void\}, ClspMth\{android.view.ViewGroup.onNestedScrollAccepted(android.view.View, android.view.View, int):void\}, androidx.core.view.NestedScrollingParent.onNestedScrollAccepted(android.view.View, android.view.View, int):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

