digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.onAttachedToWindow()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r2 I:android.view.ViewGroup) type: SUPER call: android.view.ViewGroup.onAttachedToWindow():void A[MD:():void (c)] (LINE:264)\l0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l0x0004: INVOKE  (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout), (r0 I:boolean) type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.resetTouchBehaviors(boolean):void A[MD:(boolean):void (m)]\l0x0007: IGET  (r0 I:boolean) = (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mNeedsPreDrawListener boolean  (LINE:266)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001f \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IGET  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener) = (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mOnPreDrawListener androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener  (LINE:267)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener) =  androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener  (LINE:268)\l0x0011: INVOKE  \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener)\l  (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.OnPreDrawListener.\<init\>(androidx.coordinatorlayout.widget.CoordinatorLayout):void A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout):void (m)]\l0x0014: IPUT  \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener)\l  (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l androidx.coordinatorlayout.widget.CoordinatorLayout.mOnPreDrawListener androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: INVOKE  (r0 I:android.view.ViewTreeObserver) = (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getViewTreeObserver():android.view.ViewTreeObserver A[MD:():android.view.ViewTreeObserver (s)] (LINE:270)\l0x001a: IGET  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener) = (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mOnPreDrawListener androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener  (LINE:271)\l0x001c: INVOKE  \l  (r0 I:android.view.ViewTreeObserver A[D('vto' android.view.ViewTreeObserver)])\l  (r1 I:android.view.ViewTreeObserver$OnPreDrawListener)\l type: VIRTUAL call: android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener):void A[MD:(android.view.ViewTreeObserver$OnPreDrawListener):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|0x001f: IGET  (r0 I:androidx.core.view.WindowInsetsCompat A[D('vto' android.view.ViewTreeObserver)]) = (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mLastInsets androidx.core.view.WindowInsetsCompat  (LINE:273)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|0x0023: INVOKE  (r0 I:boolean) = (r2 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002c \l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|0x0029: INVOKE  (r2 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.requestApplyInsets(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:276)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|0x002c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:278)\l0x002d: IPUT  (r0 I:boolean), (r2 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mIsAttachedToWindow boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:279)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.coordinatorlayout.widget.CoordinatorLayout.onAttachedToWindow((r2 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:26:0x0027 \-\> B:28:0x002c, CROSS_EDGE: B:24:0x0021 \-\> B:28:0x002c, CROSS_EDGE: B:20:0x000d \-\> B:22:0x0016, CROSS_EDGE: B:18:0x0009 \-\> B:23:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x001f: r0 'vto' Landroid\/view\/ViewTreeObserver;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onAttachedToWindow():void\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

