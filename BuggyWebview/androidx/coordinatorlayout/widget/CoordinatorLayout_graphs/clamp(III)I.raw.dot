digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.clamp(III)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r0 I:??[int, byte, short, char] A[D('value' int)]) \>= (r1 I:??[int, byte, short, char] A[D('min' int)])  \-\> B:11:0x0003  (LINE:1281)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|RETURN\l|0x0002: RETURN  (r1 I:int A[D('min' int)])  (LINE:1282)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('value' int)]) \<= (r2 I:??[int, byte, short, char] A[D('max' int)])  \-\> B:13:0x0006  (LINE:1283)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|RETURN\l|0x0005: RETURN  (r2 I:int A[D('max' int)])  (LINE:1284)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:int A[D('value' int)])  (LINE:1286)\l}"];
MethodNode[shape=record,label="{private static int androidx.coordinatorlayout.widget.CoordinatorLayout.clamp((r0 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[D('min' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0005 \-\> B:8:?, CROSS_EDGE: B:13:0x0006 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r0 'value' I\l  \-1 \-0x0006: r1 'min' I\l  \-1 \-0x0006: r2 'max' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

