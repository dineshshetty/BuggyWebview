digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.resolveGravity(I)I" {
subgraph cluster_Region_805008655 {
label = "R(2:(1:3)|(2:(1:7)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_709915968 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if ((r1 & 7) == 0) goto L3\l}"];
subgraph cluster_Region_1765922962 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|r1 \|= androidx.core.view.GravityCompat.START\l}"];
}
}
subgraph cluster_Region_939998213 {
label = "R(2:(1:7)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1277195527 {
label = "IF [B:16:0x000a] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|if ((r1 & 112) == 0) goto L6\l}"];
subgraph cluster_Region_1702093750 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000e|RETURN\lORIG_RETURN\l|return r1 \| 48\l}"];
}
}
subgraph cluster_Region_43066050 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0008|PHI: r1 \l  PHI: (r1v1 'gravity' int) = (r1v0 'gravity' int), (r1v3 'gravity' int) binds: [B:13:0x0002, B:14:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static int androidx.coordinatorlayout.widget.CoordinatorLayout.resolveGravity((r1v0 'gravity' int A[D('gravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000a \-\> B:18:0x000e, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

