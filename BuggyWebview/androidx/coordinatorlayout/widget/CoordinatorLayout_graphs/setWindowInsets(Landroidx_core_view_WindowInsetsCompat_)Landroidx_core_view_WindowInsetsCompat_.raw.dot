digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.setWindowInsets(Landroidx\/core\/view\/WindowInsetsCompat;)Landroidx\/core\/view\/WindowInsetsCompat;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.view.WindowInsetsCompat) = (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mLastInsets androidx.core.view.WindowInsetsCompat  (LINE:384)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r4 I:java.lang.Object A[D('insets' androidx.core.view.WindowInsetsCompat)]) type: STATIC call: androidx.core.util.ObjectsCompat.equals(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:? \l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: IPUT  \l  (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l  (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l androidx.coordinatorlayout.widget.CoordinatorLayout.mLastInsets androidx.core.view.WindowInsetsCompat  (LINE:385)\l0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:386)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('insets' androidx.core.view.WindowInsetsCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0016 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: INVOKE  (r2 I:int) = (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)]) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemWindowInsetTop():int A[MD:():int (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:28:0x0016 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: IPUT  (r2 I:boolean), (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mDrawStatusBarBackground boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0022  (LINE:387)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0022 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|0x0023: INVOKE  (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout), (r0 I:boolean) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.setWillNotDraw(boolean):void A[MD:(boolean):void (s)]\l0x0026: INVOKE  (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)]) = \l  (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat):androidx.core.view.WindowInsetsCompat A[MD:(androidx.core.view.WindowInsetsCompat):androidx.core.view.WindowInsetsCompat (m)] (LINE:390)\l0x002a: INVOKE  (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.requestLayout():void A[MD:():void (s)] (LINE:391)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: RETURN  (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])  (LINE:393)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x002d: RETURN  (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)]) A[SYNTHETIC] (LINE:393)\l}"];
MethodNode[shape=record,label="{final androidx.core.view.WindowInsetsCompat androidx.coordinatorlayout.widget.CoordinatorLayout.setWindowInsets((r3 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x001f \-\> B:35:0x0023, CROSS_EDGE: B:30:0x0019 \-\> B:34:0x0022, CROSS_EDGE: B:28:0x0016 \-\> B:29:0x0017, CROSS_EDGE: B:24:0x000c \-\> B:28:0x0016, CROSS_EDGE: B:22:0x0006 \-\> B:36:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002d: r4 'insets' Landroidx\/core\/view\/WindowInsetsCompat;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_37;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_35[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_20;
Node_34 -> Node_35;
Node_28 -> Node_29;
Node_37 -> Node_20;
}

