digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.offsetChildByInset(Landroid\/view\/View;Landroid\/graphics\/Rect;I)V" {
Node_53 [shape=record,label="{53\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0000}"];
Node_56 [shape=record,label="{56\:\ 0x0004|if (androidx.core.view.ViewCompat.isLaidOut(r11) != false) goto L5\l}"];
Node_57 [shape=record,label="{57\:\ 0x0006|RETURN\l|return\l}"];
Node_54 [shape=record,label="{54\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x0007}"];
Node_59 [shape=record,label="{59\:\ 0x000b|if (r11.getWidth() \<= 0) goto L50\l}"];
Node_60 [shape=record,label="{60\:\ 0x000d}"];
Node_61 [shape=record,label="{61\:\ 0x0011|if (r11.getHeight() \> 0) goto L9\l}"];
Node_63 [shape=record,label="{63\:\ 0x0015|androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0 = (androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams) r11.getLayoutParams()\landroidx.coordinatorlayout.widget.CoordinatorLayout$Behavior r1 = r0.getBehavior()\landroid.graphics.Rect r2 = acquireTempRect()\landroid.graphics.Rect r3 = acquireTempRect()\lr3.set(r11.getLeft(), r11.getTop(), r11.getRight(), r11.getBottom())\l}"];
Node_64 [shape=record,label="{64\:\ 0x003a|if (r1 == null) goto L48\l}"];
Node_65 [shape=record,label="{65\:\ 0x003c}"];
Node_66 [shape=record,label="{66\:\ 0x0040|if (r1.getInsetDodgeRect(r10, r11, r2) == false) goto L48\l}"];
Node_67 [shape=record,label="{67\:\ 0x0042}"];
Node_68 [shape=record,label="{68\:\ 0x0046|if (r3.contains(r2) == false) goto L15\l}"];
Node_70 [shape=record,label="{70\:\ 0x0049|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Rect should be within the child's bounds. Rect:\")\lr5.append(r2.toShortString())\lr5.append(\" \| Bounds:\")\lr5.append(r3.toShortString())\l}"];
Node_71 [shape=record,label="{71\:\ 0x006f|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_73 [shape=record,label="{73\:\ 0x0073|releaseTempRect(r3)\l}"];
Node_74 [shape=record,label="{74\:\ 0x007a|if (r2.isEmpty() == false) goto L21\l}"];
Node_75 [shape=record,label="{75\:\ 0x007c|releaseTempRect(r2)\l}"];
Node_76 [shape=record,label="{76\:\ 0x007f|RETURN\l|return\l}"];
Node_77 [shape=record,label="{77\:\ 0x0080|int r4 = androidx.core.view.GravityCompat.getAbsoluteGravity(r0.dodgeInsetEdges, r13)\lr5 = false\l}"];
Node_78 [shape=record,label="{78\:\ 0x008b|if ((r4 & 48) != 48) goto L26\l}"];
Node_79 [shape=record,label="{79\:\ 0x008d|int r6 = (r2.top \- r0.topMargin) \- r0.mInsetOffsetY\l}"];
Node_80 [shape=record,label="{80\:\ 0x0097|if (r6 \>= r12.top) goto L26\l}"];
Node_81 [shape=record,label="{81\:\ 0x0099|setInsetOffsetY(r11, r12.top \- r6)\lr5 = true\l}"];
Node_82 [shape=record,label="{82\:\ 0x00a0|PHI: r5 \l  PHI: (r5v2 'offsetY' boolean) = (r5v1 'offsetY' boolean), (r5v1 'offsetY' boolean), (r5v5 'offsetY' boolean) binds: [B:78:0x008b, B:80:0x0097, B:81:0x0099] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r4 & 80\l}"];
Node_83 [shape=record,label="{83\:\ 0x00a4|if (r6 != 80) goto L31\l}"];
Node_84 [shape=record,label="{84\:\ 0x00a6|int r6 = ((getHeight() \- r2.bottom) \- r0.bottomMargin) + r0.mInsetOffsetY\l}"];
Node_85 [shape=record,label="{85\:\ 0x00b5|if (r6 \>= r12.bottom) goto L31\l}"];
Node_86 [shape=record,label="{86\:\ 0x00b7|setInsetOffsetY(r11, r6 \- r12.bottom)\lr5 = true\l}"];
Node_87 [shape=record,label="{87\:\ 0x00bf|PHI: r5 \l  PHI: (r5v3 'offsetY' boolean) = (r5v2 'offsetY' boolean), (r5v2 'offsetY' boolean), (r5v4 'offsetY' boolean) binds: [B:83:0x00a4, B:85:0x00b5, B:86:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_88 [shape=record,label="{88\:\ 0x00c0|if (r5 != false) goto L34\l}"];
Node_89 [shape=record,label="{89\:\ 0x00c2|setInsetOffsetY(r11, 0)\l}"];
Node_90 [shape=record,label="{90\:\ 0x00c5|r7 = false\l}"];
Node_91 [shape=record,label="{91\:\ 0x00c9|if ((r4 & 3) != 3) goto L39\l}"];
Node_92 [shape=record,label="{92\:\ 0x00cb|int r8 = (r2.left \- r0.leftMargin) \- r0.mInsetOffsetX\l}"];
Node_93 [shape=record,label="{93\:\ 0x00d5|if (r8 \>= r12.left) goto L39\l}"];
Node_94 [shape=record,label="{94\:\ 0x00d7|setInsetOffsetX(r11, r12.left \- r8)\lr7 = true\l}"];
Node_95 [shape=record,label="{95\:\ 0x00de|PHI: r7 \l  PHI: (r7v4 'offsetX' boolean) = (r7v3 'offsetX' boolean), (r7v3 'offsetX' boolean), (r7v7 'offsetX' boolean) binds: [B:91:0x00c9, B:93:0x00d5, B:94:0x00d7] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r4 & 5\l}"];
Node_96 [shape=record,label="{96\:\ 0x00e1|if (r8 != 5) goto L44\l}"];
Node_97 [shape=record,label="{97\:\ 0x00e3|int r8 = ((getWidth() \- r2.right) \- r0.rightMargin) + r0.mInsetOffsetX\l}"];
Node_98 [shape=record,label="{98\:\ 0x00f2|if (r8 \>= r12.right) goto L44\l}"];
Node_99 [shape=record,label="{99\:\ 0x00f4|setInsetOffsetX(r11, r8 \- r12.right)\lr7 = true\l}"];
Node_100 [shape=record,label="{100\:\ 0x00fc|PHI: r7 \l  PHI: (r7v5 'offsetX' boolean) = (r7v4 'offsetX' boolean), (r7v4 'offsetX' boolean), (r7v6 'offsetX' boolean) binds: [B:96:0x00e1, B:98:0x00f2, B:99:0x00f4] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 != false) goto L46\l}"];
Node_101 [shape=record,label="{101\:\ 0x00fe|setInsetOffsetX(r11, 0)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0101|releaseTempRect(r2)\l}"];
Node_103 [shape=record,label="{103\:\ 0x0104|RETURN\l|return\l}"];
Node_72 [shape=record,label="{72\:\ 0x0070|r2.set(r3)\l}"];
Node_105 [shape=record,label="{105\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_104 [shape=record,label="{104\:\ 0x0105|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.CoordinatorLayout.offsetChildByInset((r10v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r11v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'inset' android.graphics.Rect A[D('inset' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'layoutDirection' int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:71:0x006f \-\> B:54:?, CROSS_EDGE: B:76:0x007f \-\> B:54:?, CROSS_EDGE: B:103:0x0104 \-\> B:54:?, CROSS_EDGE: B:100:0x00fc \-\> B:102:0x0101, CROSS_EDGE: B:98:0x00f2 \-\> B:100:0x00fc, CROSS_EDGE: B:96:0x00e1 \-\> B:100:0x00fc, CROSS_EDGE: B:93:0x00d5 \-\> B:95:0x00de, CROSS_EDGE: B:91:0x00c9 \-\> B:95:0x00de, CROSS_EDGE: B:88:0x00c0 \-\> B:90:0x00c5, CROSS_EDGE: B:85:0x00b5 \-\> B:87:0x00bf, CROSS_EDGE: B:83:0x00a4 \-\> B:87:0x00bf, CROSS_EDGE: B:80:0x0097 \-\> B:82:0x00a0, CROSS_EDGE: B:78:0x008b \-\> B:82:0x00a0, CROSS_EDGE: B:72:0x0070 \-\> B:73:0x0073, CROSS_EDGE: B:64:0x003a \-\> B:72:0x0070, CROSS_EDGE: B:104:0x0105 \-\> B:54:?, CROSS_EDGE: B:59:0x000b \-\> B:104:0x0105\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_53;Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_54;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_104;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_105[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_72;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_72;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_73[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_54;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_77;
Node_75 -> Node_76;
Node_76 -> Node_54;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_82;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_82;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_87;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_95;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_100;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_100;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_54;
Node_72 -> Node_73;
Node_105 -> Node_54;
Node_104 -> Node_54;
}

