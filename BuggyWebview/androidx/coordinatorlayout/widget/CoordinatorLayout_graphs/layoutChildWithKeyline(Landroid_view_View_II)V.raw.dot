digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.layoutChildWithKeyline(Landroid\/view\/View;II)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('layoutDirection' int)])  (LINE:1130)\l0x0002: INVOKE  (r1 I:android.view.ViewGroup$LayoutParams) = (r17 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x0006: CHECK_CAST (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) (r1 I:??[OBJECT, ARRAY]) \l0x0008: IGET  (r2 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.gravity int  (LINE:1131)\l0x000a: INVOKE  (r2 I:int) = (r2 I:int) type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.resolveKeylineGravity(int):int A[MD:(int):int (m)] (LINE:1132)\l0x000e: INVOKE  (r2 I:int) = (r2 I:int), (r0 I:int) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)] (LINE:1131)\l0x0012: ARITH  (r3 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('absGravity' int)]) & (7 ??[int, float, short, byte, char])  (LINE:1134)\l0x0014: ARITH  (r4 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('absGravity' int)]) & (112(0x70, float:1.57E\-43) ??[int, float, short, byte, char])  (LINE:1135)\l0x0016: INVOKE  (r5 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getWidth():int A[MD:():int (s)] (LINE:1136)\l0x001a: INVOKE  (r6 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getHeight():int A[MD:():int (s)] (LINE:1137)\l0x001e: INVOKE  (r7 I:int) = (r17 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1138)\l0x0022: INVOKE  (r8 I:int) = (r17 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:1139)\l0x0026: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1141)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002c \l}"];
Node_21 [shape=record,label="{21\:\ 0x0029|0x0029: ARITH  (r9 I:int) = (r5 I:int A[D('width' int)]) \- (r18 I:int A[D('keyline' int)])  (LINE:1142)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|0x002e: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:1145)\l0x0030: INVOKE  (r11 I:int) = (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout), (r9 I:int A[D('keyline' int)]) type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.getKeyline(int):int A[MD:(int):int (m)]\l0x0034: ARITH  (r11 I:int) = (r11 I:int) \- (r7 I:int A[D('childWidth' int)]) \l0x0035: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1146)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0036|0x0036: SWITCH  (r3 I:?? A[D('hgrav' int)])\l case 1: goto B:27:0x003c\l case 5: goto B:26:0x003a\l default: goto B:28:0x003f  (LINE:1148)\l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|0x003a: ARITH  (r11 I:int) = (r11 I:int A[D('left' int)]) + (r7 I:int A[D('childWidth' int)])  (LINE:1154)\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|0x003c: ARITH  (r13 I:int) = (r7 I:int A[D('childWidth' int)]) \/ (2 int)  (LINE:1157)\l0x003e: ARITH  (r11 I:int) = (r11 I:int A[D('left' int)]) + (r13 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x003f|0x003f: SWITCH  (r4 I:?? A[D('vgrav' int)])\l case 16: goto B:31:0x0045\l case 80: goto B:30:0x0043\l default: goto B:32:0x0048  (LINE:1161)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0043|0x0043: ARITH  (r12 I:int) = (r12 I:int A[D('top' int)]) + (r8 I:int A[D('childHeight' int)])  (LINE:1167)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0045|0x0045: ARITH  (r13 I:int) = (r8 I:int A[D('childHeight' int)]) \/ (2 int)  (LINE:1170)\l0x0047: ARITH  (r12 I:int) = (r12 I:int A[D('top' int)]) + (r13 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: INVOKE  (r13 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingLeft():int A[MD:():int (s)] (LINE:1175)\l0x004c: IGET  (r14 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.leftMargin int \l0x004e: ARITH  (r13 I:int) = (r13 I:int) + (r14 I:int) \l0x004f: INVOKE  (r14 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingRight():int A[MD:():int (s)] (LINE:1177)\l0x0053: ARITH  (r14 I:int) = (r5 I:int A[D('width' int)]) \- (r14 I:int) \l0x0055: ARITH  (r14 I:int) = (r14 I:int) \- (r7 I:int A[D('childWidth' int)]) \l0x0056: IGET  (r15 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.rightMargin int \l0x0058: ARITH  (r14 I:int) = (r14 I:int) \- (r15 I:int) \l0x0059: INVOKE  (r14 I:int) = (r11 I:int A[D('left' int)]), (r14 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:1176)\l0x005d: INVOKE  (r11 I:int A[D('left' int)]) = (r13 I:int), (r14 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1175)\l0x0061: INVOKE  (r13 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingTop():int A[MD:():int (s)] (LINE:1178)\l0x0065: IGET  (r14 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.topMargin int \l0x0067: ARITH  (r13 I:int) = (r13 I:int) + (r14 I:int) \l0x0068: INVOKE  (r14 I:int) = (r16 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingBottom():int A[MD:():int (s)] (LINE:1180)\l0x006c: ARITH  (r14 I:int) = (r6 I:int A[D('height' int)]) \- (r14 I:int) \l0x006e: ARITH  (r14 I:int) = (r14 I:int) \- (r8 I:int A[D('childHeight' int)]) \l0x006f: IGET  (r15 I:int) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.bottomMargin int \l0x0071: ARITH  (r14 I:int) = (r14 I:int) \- (r15 I:int) \l0x0072: INVOKE  (r14 I:int) = (r12 I:int A[D('top' int)]), (r14 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:1179)\l0x0076: INVOKE  (r12 I:int A[D('top' int)]) = (r13 I:int), (r14 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1178)\l0x007a: ARITH  (r13 I:int) = (r11 I:int A[D('left' int)]) + (r7 I:int A[D('childWidth' int)])  (LINE:1182)\l0x007c: ARITH  (r14 I:int) = (r12 I:int A[D('top' int)]) + (r8 I:int A[D('childHeight' int)]) \l0x007e: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x0080: INVOKE  (r15 I:android.view.View), (r11 I:int A[D('left' int)]), (r12 I:int A[D('top' int)]), (r13 I:int), (r14 I:int) type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0083|RETURN\l|0x0083: RETURN    (LINE:1183)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|0x002c: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('keyline' int)]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('keyline' int)])  (LINE:1141)\l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.CoordinatorLayout.layoutChildWithKeyline((r16 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r17 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('keyline' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0045 \-\> B:32:0x0048, CROSS_EDGE: B:28:0x003f \-\> B:32:0x0048, CROSS_EDGE: B:27:0x003c \-\> B:28:0x003f, CROSS_EDGE: B:24:0x0036 \-\> B:28:0x003f, CROSS_EDGE: B:22:0x002c \-\> B:23:0x002e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002b: r18 'keyline' I\l  0x002b\-0x002c: r9 'keyline' I\l  0x002c\-0x002e: r18 'keyline' I\l  0x0008\-0x0097: r1 'lp' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout$LayoutParams;\l  0x0012\-0x0097: r2 'absGravity' I\l  0x0014\-0x0097: r3 'hgrav' I\l  0x0016\-0x0097: r4 'vgrav' I\l  0x001a\-0x0097: r5 'width' I\l  0x001e\-0x0097: r6 'height' I\l  0x0022\-0x0097: r7 'childWidth' I\l  0x0026\-0x0097: r8 'childHeight' I\l  0x002e\-0x0097: r9 'keyline' I\l  0x0035\-0x0097: r11 'left' I\l  0x0036\-0x0097: r12 'top' I\l  \-1 \-0x0097: r17 'child' Landroid\/view\/View;\l  \-1 \-0x0097: r19 'layoutDirection' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27;
Node_24 -> Node_28;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31;
Node_28 -> Node_32;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_22 -> Node_23;
}

