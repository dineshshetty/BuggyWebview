digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.requestDisallowInterceptTouchEvent(Z)V" {
subgraph cluster_Region_148156095 {
label = "R(2:1|(1:(1:5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|super.requestDisallowInterceptTouchEvent(r2)\l}"];
subgraph cluster_Region_1721731250 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1524833324 {
label = "IF [B:13:0x0003, B:15:0x0007] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0003|if (r2 != false) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|ADDED_TO_REGION\l|if (r1.mDisallowInterceptReset == false) goto L5\l}"];
subgraph cluster_Region_705562699 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|resetTouchBehaviors(false)\lr1.mDisallowInterceptReset = true\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.coordinatorlayout.widget.CoordinatorLayout.requestDisallowInterceptTouchEvent((r1v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'disallowIntercept' boolean A[D('disallowIntercept' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0007 \-\> B:17:0x0010, CROSS_EDGE: B:13:0x0003 \-\> B:17:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewParent.requestDisallowInterceptTouchEvent(boolean):void\}, ClspMth\{android.view.ViewGroup.requestDisallowInterceptTouchEvent(boolean):void\}]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

