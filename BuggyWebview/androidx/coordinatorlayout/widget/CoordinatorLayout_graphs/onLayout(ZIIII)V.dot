digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.onLayout(ZIIII)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|int r0 = androidx.core.view.ViewCompat.getLayoutDirection(r7)\lint r1 = r7.mDependencySortedChildren.size()\lr2 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|LOOP_START\lLOOP:0: B:21:0x000b\-\>B:30:0x0033\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:20:0x0000, B:30:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L14\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|android.view.View r3 = r7.mDependencySortedChildren.get(r2)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|if (r3.getVisibility() != 8) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r4 = (androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams) r3.getLayoutParams()\landroidx.coordinatorlayout.widget.CoordinatorLayout$Behavior r5 = r4.getBehavior()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0028|if (r5 == null) goto L11\l}"];
Node_27 [shape=record,label="{27\:\ 0x002a}"];
Node_28 [shape=record,label="{28\:\ 0x002e|if (r5.onLayoutChild(r7, r3, r0) != false) goto L9\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|LOOP_END\lLOOP:0: B:21:0x000b\-\>B:30:0x0033\l|int r2 = r2 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0030|onLayoutChild(r3, r0)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0033|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0036|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.coordinatorlayout.widget.CoordinatorLayout.onLayout((r7v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r8v0 'changed' boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'l' int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 't' int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'r' int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'b' int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:30:0x0033 \-\> B:21:0x000b, CROSS_EDGE: B:28:0x002e \-\> B:30:0x0033, CROSS_EDGE: B:26:0x0028 \-\> B:29:0x0030, CROSS_EDGE: B:23:0x001b \-\> B:30:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_35[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_34 -> Node_30;
Node_30 -> Node_21;
Node_29 -> Node_33;
Node_33 -> Node_30;
Node_35 -> Node_30;
Node_32 -> Node_31;
Node_31 -> Node_19;
}

