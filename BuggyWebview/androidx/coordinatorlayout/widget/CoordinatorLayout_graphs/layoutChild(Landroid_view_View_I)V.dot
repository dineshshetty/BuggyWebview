digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.layoutChild(Landroid\/view\/View;I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0 = (androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams) r10.getLayoutParams()\landroid.graphics.Rect r7 = acquireTempRect()\lr7.set(getPaddingLeft() + r0.leftMargin, getPaddingTop() + r0.topMargin, (getWidth() \- getPaddingRight()) \- r0.rightMargin, (getHeight() \- getPaddingBottom()) \- r0.bottomMargin)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|if (r9.mLastInsets == null) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037}"];
Node_16 [shape=record,label="{16\:\ 0x003b|if (androidx.core.view.ViewCompat.getFitsSystemWindows(r9) == false) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x003d}"];
Node_18 [shape=record,label="{18\:\ 0x0041|if (androidx.core.view.ViewCompat.getFitsSystemWindows(r10) != false) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|r7.left = r7.left + r9.mLastInsets.getSystemWindowInsetLeft()\lr7.top = r7.top + r9.mLastInsets.getSystemWindowInsetTop()\lr7.right = r7.right \- r9.mLastInsets.getSystemWindowInsetRight()\lr7.bottom = r7.bottom \- r9.mLastInsets.getSystemWindowInsetBottom()\l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|android.graphics.Rect r8 = acquireTempRect()\landroidx.core.view.GravityCompat.apply(resolveGravity(r0.gravity), r10.getMeasuredWidth(), r10.getMeasuredHeight(), r7, r8, r11)\lr10.layout(r8.left, r8.top, r8.right, r8.bottom)\lreleaseTempRect(r7)\lreleaseTempRect(r8)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0098|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.CoordinatorLayout.layoutChild((r9v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r10v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'layoutDirection' int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0041 \-\> B:20:0x006f, CROSS_EDGE: B:16:0x003b \-\> B:20:0x006f, CROSS_EDGE: B:14:0x0035 \-\> B:20:0x006f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

