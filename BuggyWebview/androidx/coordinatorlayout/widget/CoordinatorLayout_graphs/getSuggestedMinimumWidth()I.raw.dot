digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.getSuggestedMinimumWidth()I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:android.view.ViewGroup) type: SUPER call: android.view.ViewGroup.getSuggestedMinimumWidth():int A[MD:():int (c)] (LINE:737)\l0x0004: INVOKE  (r1 I:int) = (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingLeft():int A[MD:():int (s)]\l0x0008: INVOKE  (r2 I:int) = (r3 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getPaddingRight():int A[MD:():int (s)]\l0x000c: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x000d: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected int androidx.coordinatorlayout.widget.CoordinatorLayout.getSuggestedMinimumWidth((r3 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.getSuggestedMinimumWidth():int\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

