digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.offsetChildByInset(Landroid\/view\/View;Landroid\/graphics\/Rect;I)V" {
Node_53 [shape=record,label="{53\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r11 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.isLaidOut(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1413)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0007 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:1415)\l}"];
Node_54 [shape=record,label="{54\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:1418)\l}"];
Node_59 [shape=record,label="{59\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:104:0x0105 \l}"];
Node_60 [shape=record,label="{60\:\ 0x000d|0x000d: INVOKE  (r0 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:63:0x0015 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0015|0x0015: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1423)\l0x0019: CHECK_CAST (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) = (androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x001b: INVOKE  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.getBehavior():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior A[MD:():androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior (m)] (LINE:1424)\l0x001f: INVOKE  (r2 I:android.graphics.Rect) =  type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.acquireTempRect():android.graphics.Rect A[MD:():android.graphics.Rect (m)] (LINE:1425)\l0x0023: INVOKE  (r3 I:android.graphics.Rect) =  type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.acquireTempRect():android.graphics.Rect A[MD:():android.graphics.Rect (m)] (LINE:1426)\l0x0027: INVOKE  (r4 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:1427)\l0x002b: INVOKE  (r5 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x002f: INVOKE  (r6 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)]\l0x0033: INVOKE  (r7 I:int) = (r11 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x0037: INVOKE  (r3 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int) type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x003a|0x003a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('behavior' androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0070  (LINE:1429)\l}"];
Node_65 [shape=record,label="{65\:\ 0x003c|0x003c: INVOKE  (r4 I:boolean) = \l  (r1 I:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior A[D('behavior' androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior)])\l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)])\l type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.Behavior.getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout, android.view.View, android.graphics.Rect):boolean A[MD:(androidx.coordinatorlayout.widget.CoordinatorLayout, V extends android.view.View, android.graphics.Rect):boolean (m)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0040|0x0040: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0070 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0042|0x0042: INVOKE  (r4 I:boolean) = \l  (r3 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l  (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.Rect.contains(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:1431)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0046|0x0046: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0049 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0049|0x0049: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1432)\l0x004b: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004d: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0050: CONST_STR  (r6 I:java.lang.String) =  \"Rect should be within the child's bounds. Rect:\" \l0x0052: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0055: INVOKE  (r6 I:java.lang.String) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.toShortString():java.lang.String A[MD:():java.lang.String (c)] (LINE:1433)\l0x0059: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005c: CONST_STR  (r6 I:java.lang.String) =  \" \| Bounds:\" \l0x005e: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0061: INVOKE  (r6 I:java.lang.String) = (r3 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.toShortString():java.lang.String A[MD:():java.lang.String (c)] (LINE:1434)\l0x0065: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0068: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006c: INVOKE  (r4 I:java.lang.IllegalArgumentException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x006f|0x006f: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0073|0x0073: INVOKE  (r3 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.releaseTempRect(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)] (LINE:1441)\l0x0076: INVOKE  (r4 I:boolean) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.isEmpty():boolean A[MD:():boolean (c)] (LINE:1443)\l}"];
Node_74 [shape=record,label="{74\:\ 0x007a|0x007a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0080 \l}"];
Node_75 [shape=record,label="{75\:\ 0x007c|0x007c: INVOKE  (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.releaseTempRect(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)] (LINE:1445)\l}"];
Node_76 [shape=record,label="{76\:\ 0x007f|RETURN\l|0x007f: RETURN    (LINE:1446)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0080|0x0080: IGET  (r4 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.dodgeInsetEdges int  (LINE:1449)\l0x0082: INVOKE  (r4 I:int) = (r4 I:int), (r13 I:int A[D('layoutDirection' int)]) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)]\l0x0086: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1452)\l0x0087: ARITH  (r6 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('absDodgeInsetEdges' int)]) & (48 ??[int, float, short, byte, char])  (LINE:1453)\l0x0089: CONST  (r7 I:??[int, float, short, byte, char]) = (48 ??[int, float, short, byte, char]) \l}"];
Node_78 [shape=record,label="{78\:\ 0x008b|0x008b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x00a0 \l}"];
Node_79 [shape=record,label="{79\:\ 0x008d|0x008d: IGET  (r6 I:int) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1454)\l0x008f: IGET  (r7 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.topMargin int \l0x0091: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0092: IGET  (r7 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.mInsetOffsetY int \l0x0094: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0095: IGET  (r7 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1455)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0097|0x0097: IF  (r6 I:??[int, byte, short, char] A[D('distance' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:82:0x00a0 \l}"];
Node_81 [shape=record,label="{81\:\ 0x0099|0x0099: IGET  (r7 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1456)\l0x009b: ARITH  (r7 I:int) = (r7 I:int) \- (r6 I:int A[D('distance' int)]) \l0x009c: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetY(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x009f: CONST  (r5 I:??[boolean, int, float, short, byte, char] A[D('offsetY' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1457)\l}"];
Node_82 [shape=record,label="{82\:\ 0x00a0|0x00a0: ARITH  (r6 I:??[int, boolean] A[D('distance' int)]) = (r4 I:??[int, boolean, short, byte, char] A[D('absDodgeInsetEdges' int)]) & (80 ??[int, float, short, byte, char])  (LINE:1460)\l0x00a2: CONST  (r7 I:??[int, float, short, byte, char]) = (80 ??[int, float, short, byte, char]) \l}"];
Node_83 [shape=record,label="{83\:\ 0x00a4|0x00a4: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x00bf \l}"];
Node_84 [shape=record,label="{84\:\ 0x00a6|0x00a6: INVOKE  (r6 I:int) = (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getHeight():int A[MD:():int (s)] (LINE:1461)\l0x00aa: IGET  (r7 I:int) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x00ac: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x00ad: IGET  (r7 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.bottomMargin int \l0x00af: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x00b0: IGET  (r7 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.mInsetOffsetY int \l0x00b2: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x00b3: IGET  (r7 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:1462)\l}"];
Node_85 [shape=record,label="{85\:\ 0x00b5|0x00b5: IF  (r6 I:??[int, byte, short, char] A[D('distance' int)]) \>= (r7 I:??[int, byte, short, char])  \-\> B:87:0x00bf \l}"];
Node_86 [shape=record,label="{86\:\ 0x00b7|0x00b7: IGET  (r7 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:1463)\l0x00b9: ARITH  (r7 I:int) = (r6 I:int A[D('distance' int)]) \- (r7 I:int) \l0x00bb: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetY(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x00be: CONST  (r5 I:??[boolean, int, float, short, byte, char] A[D('offsetY' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1464)\l}"];
Node_87 [shape=record,label="{87\:\ 0x00bf|0x00bf: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('distance' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1467)\l}"];
Node_88 [shape=record,label="{88\:\ 0x00c0|0x00c0: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offsetY' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x00c5 \l}"];
Node_89 [shape=record,label="{89\:\ 0x00c2|0x00c2: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r6 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetY(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:1468)\l}"];
Node_90 [shape=record,label="{90\:\ 0x00c5|0x00c5: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1471)\l0x00c6: ARITH  (r8 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('absDodgeInsetEdges' int)]) & (3 ??[int, float, short, byte, char])  (LINE:1472)\l0x00c8: CONST  (r9 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x00c9|0x00c9: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x00de \l}"];
Node_92 [shape=record,label="{92\:\ 0x00cb|0x00cb: IGET  (r8 I:int) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1473)\l0x00cd: IGET  (r9 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.leftMargin int \l0x00cf: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x00d0: IGET  (r9 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.mInsetOffsetX int \l0x00d2: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x00d3: IGET  (r9 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1474)\l}"];
Node_93 [shape=record,label="{93\:\ 0x00d5|0x00d5: IF  (r8 I:??[int, byte, short, char] A[D('distance' int)]) \>= (r9 I:??[int, byte, short, char])  \-\> B:95:0x00de \l}"];
Node_94 [shape=record,label="{94\:\ 0x00d7|0x00d7: IGET  (r9 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1475)\l0x00d9: ARITH  (r9 I:int) = (r9 I:int) \- (r8 I:int A[D('distance' int)]) \l0x00da: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r9 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetX(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x00dd: CONST  (r7 I:??[boolean, int, float, short, byte, char] A[D('offsetX' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1476)\l}"];
Node_95 [shape=record,label="{95\:\ 0x00de|0x00de: ARITH  (r8 I:??[int, boolean] A[D('distance' int)]) = (r4 I:??[int, boolean, short, byte, char] A[D('absDodgeInsetEdges' int)]) & (5 ??[int, float, short, byte, char])  (LINE:1479)\l0x00e0: CONST  (r9 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_96 [shape=record,label="{96\:\ 0x00e1|0x00e1: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x00fc \l}"];
Node_97 [shape=record,label="{97\:\ 0x00e3|0x00e3: INVOKE  (r8 I:int) = (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getWidth():int A[MD:():int (s)] (LINE:1480)\l0x00e7: IGET  (r9 I:int) = (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) android.graphics.Rect.right int \l0x00e9: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x00ea: IGET  (r9 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.rightMargin int \l0x00ec: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x00ed: IGET  (r9 I:int) = \l  (r0 I:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams A[D('lp' androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams)])\l androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams.mInsetOffsetX int \l0x00ef: ARITH  (r8 I:int) = (r8 I:int) + (r9 I:int) \l0x00f0: IGET  (r9 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:1481)\l}"];
Node_98 [shape=record,label="{98\:\ 0x00f2|0x00f2: IF  (r8 I:??[int, byte, short, char] A[D('distance' int)]) \>= (r9 I:??[int, byte, short, char])  \-\> B:100:0x00fc \l}"];
Node_99 [shape=record,label="{99\:\ 0x00f4|0x00f4: IGET  (r9 I:int) = (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:1482)\l0x00f6: ARITH  (r9 I:int) = (r8 I:int A[D('distance' int)]) \- (r9 I:int) \l0x00f8: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r9 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetX(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x00fb: CONST  (r7 I:??[boolean, int, float, short, byte, char] A[D('offsetX' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1483)\l}"];
Node_100 [shape=record,label="{100\:\ 0x00fc|0x00fc: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offsetX' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0101  (LINE:1486)\l}"];
Node_101 [shape=record,label="{101\:\ 0x00fe|0x00fe: INVOKE  \l  (r10 I:androidx.coordinatorlayout.widget.CoordinatorLayout)\l  (r11 I:android.view.View A[D('child' android.view.View)])\l  (r6 I:int)\l type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.setInsetOffsetX(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:1487)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0101|0x0101: INVOKE  (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)]) type: STATIC call: androidx.coordinatorlayout.widget.CoordinatorLayout.releaseTempRect(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (m)] (LINE:1490)\l}"];
Node_103 [shape=record,label="{103\:\ 0x0104|RETURN\l|0x0104: RETURN    (LINE:1491)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0070|0x0070: INVOKE  \l  (r2 I:android.graphics.Rect A[D('dodgeRect' android.graphics.Rect)])\l  (r3 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.Rect.set(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:1437)\l}"];
Node_105 [shape=record,label="{105\:\ ?|SYNTHETIC\lRETURN\l|0x0105: RETURN   A[SYNTHETIC] (LINE:1420)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0105|RETURN\lORIG_RETURN\l|0x0105: RETURN    (LINE:1420)\l}"];
MethodNode[shape=record,label="{private void androidx.coordinatorlayout.widget.CoordinatorLayout.offsetChildByInset((r10 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r11 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.Rect A[D('inset' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:71:0x006f \-\> B:54:?, CROSS_EDGE: B:76:0x007f \-\> B:54:?, CROSS_EDGE: B:103:0x0104 \-\> B:54:?, CROSS_EDGE: B:100:0x00fc \-\> B:102:0x0101, CROSS_EDGE: B:98:0x00f2 \-\> B:100:0x00fc, CROSS_EDGE: B:96:0x00e1 \-\> B:100:0x00fc, CROSS_EDGE: B:93:0x00d5 \-\> B:95:0x00de, CROSS_EDGE: B:91:0x00c9 \-\> B:95:0x00de, CROSS_EDGE: B:88:0x00c0 \-\> B:90:0x00c5, CROSS_EDGE: B:85:0x00b5 \-\> B:87:0x00bf, CROSS_EDGE: B:83:0x00a4 \-\> B:87:0x00bf, CROSS_EDGE: B:80:0x0097 \-\> B:82:0x00a0, CROSS_EDGE: B:78:0x008b \-\> B:82:0x00a0, CROSS_EDGE: B:72:0x0070 \-\> B:73:0x0073, CROSS_EDGE: B:64:0x003a \-\> B:72:0x0070, CROSS_EDGE: B:104:0x0105 \-\> B:54:?, CROSS_EDGE: B:59:0x000b \-\> B:104:0x0105\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0095\-0x00a0: r6 'distance' I\l  0x00b3\-0x00bf: r6 'distance' I\l  0x00d3\-0x00de: r8 'distance' I\l  0x00f0\-0x00fc: r8 'distance' I\l  0x001b\-0x0105: r0 'lp' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout$LayoutParams;\l  0x001f\-0x0105: r1 'behavior' Landroidx\/coordinatorlayout\/widget\/CoordinatorLayout$Behavior;\l  0x0023\-0x0105: r2 'dodgeRect' Landroid\/graphics\/Rect;\l  0x0027\-0x0105: r3 'bounds' Landroid\/graphics\/Rect;\l  0x0086\-0x0105: r4 'absDodgeInsetEdges' I\l  0x0087\-0x0105: r5 'offsetY' Z\l  0x00c6\-0x0105: r7 'offsetX' Z\l  \-1 \-0x0105: r11 'child' Landroid\/view\/View;\l  \-1 \-0x0105: r12 'inset' Landroid\/graphics\/Rect;\l  \-1 \-0x0105: r13 'layoutDirection' I\l}"];
MethodNode -> Node_53;Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_54;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_104;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_105[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_72;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_72;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_73[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_54;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_77;
Node_75 -> Node_76;
Node_76 -> Node_54;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_82;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_82;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_87;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_95;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_100;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_100;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_54;
Node_72 -> Node_73;
Node_105 -> Node_54;
Node_104 -> Node_54;
}

