digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams r0 = (androidx.coordinatorlayout.widget.CoordinatorLayout.LayoutParams) r12.getLayoutParams()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r0.mBehavior == null) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|float r1 = r0.mBehavior.getScrimOpacity(r10, r12)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) \<= 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015}"];
Node_22 [shape=record,label="{22\:\ 0x0017|if (r10.mScrimPaint != null) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|r10.mScrimPaint = new android.graphics.Paint()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|r10.mScrimPaint.setColor(r0.mBehavior.getScrimColor(r10, r12))\lr10.mScrimPaint.setAlpha(clamp(java.lang.Math.round(255.0f * r1), 0, 255))\lint r2 = r11.save()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0047|if (r12.isOpaque() == false) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0049|r11.clipRect((float) r12.getLeft(), (float) r12.getTop(), (float) r12.getRight(), (float) r12.getBottom(), android.graphics.Region.Op.DIFFERENCE)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|r11.drawRect((float) getPaddingLeft(), (float) getPaddingTop(), (float) (getWidth() \- getPaddingRight()), (float) (getHeight() \- getPaddingBottom()), r10.mScrimPaint)\lr11.restoreToCount(r2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x008a}"];
Node_29 [shape=record,label="{29\:\ 0x008e|RETURN\l|return super.drawChild(r11, r12, r13)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected boolean androidx.coordinatorlayout.widget.CoordinatorLayout.drawChild((r10v0 'this' androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]), (r11v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'drawingTime' long A[D('drawingTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x0047 \-\> B:27:0x0063, CROSS_EDGE: B:22:0x0017 \-\> B:24:0x0020, CROSS_EDGE: B:20:0x0013 \-\> B:28:0x008a, CROSS_EDGE: B:18:0x0008 \-\> B:28:0x008a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

