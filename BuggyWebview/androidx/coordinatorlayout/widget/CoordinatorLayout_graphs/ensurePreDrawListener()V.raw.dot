digraph "CFG forandroidx.coordinatorlayout.widget.CoordinatorLayout.ensurePreDrawListener()V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1584)\l0x0001: INVOKE  (r1 I:int) = (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getChildCount():int A[MD:():int (c)] (LINE:1585)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1586)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|LOOP_START\lLOOP:0: B:21:0x0006\-\>B:25:0x0014\l|0x0006: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:33:0x0017 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: INVOKE  (r3 I:android.view.View) = (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1587)\l0x000c: INVOKE  (r4 I:boolean) = (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout), (r3 I:android.view.View A[D('child' android.view.View)]) type: DIRECT call: androidx.coordinatorlayout.widget.CoordinatorLayout.hasDependencies(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1588)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0014 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|LOOP_END\lLOOP:0: B:21:0x0006\-\>B:25:0x0014\l|0x0014: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1586)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hasDependencies' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1589)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|0x0017: IGET  (r2 I:boolean A[D('i' int)]) = (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout) androidx.coordinatorlayout.widget.CoordinatorLayout.mNeedsPreDrawListener boolean  (LINE:1594)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasDependencies' boolean)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:? \l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasDependencies' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0021  (LINE:1595)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|0x001d: INVOKE  (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.addPreDrawListener():void A[MD:():void (m)] (LINE:1596)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:1601)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: INVOKE  (r5 I:androidx.coordinatorlayout.widget.CoordinatorLayout) type: VIRTUAL call: androidx.coordinatorlayout.widget.CoordinatorLayout.removePreDrawListener():void A[MD:():void (m)] (LINE:1598)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:1601)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:1601)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.coordinatorlayout.widget.CoordinatorLayout.ensurePreDrawListener((r5 'this' I:androidx.coordinatorlayout.widget.CoordinatorLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0021 \-\> B:31:0x0024, CROSS_EDGE: B:27:0x0019 \-\> B:31:0x0024, BACK_EDGE: B:25:0x0014 \-\> B:21:0x0006, CROSS_EDGE: B:21:0x0006 \-\> B:26:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0014: r3 'child' Landroid\/view\/View;\l  0x0006\-0x0017: r2 'i' I\l  0x0001\-0x0024: r0 'hasDependencies' Z\l  0x0005\-0x0024: r1 'childCount' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_32[style=dashed];
Node_25 -> Node_21;
Node_32 -> Node_24;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_35;
Node_35 -> Node_19;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_34 -> Node_19;
Node_33 -> Node_26;
}

