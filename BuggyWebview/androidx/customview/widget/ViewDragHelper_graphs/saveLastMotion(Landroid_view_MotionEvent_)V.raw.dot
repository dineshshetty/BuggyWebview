digraph "CFG forandroidx.customview.widget.ViewDragHelper.saveLastMotion(Landroid\/view\/MotionEvent;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r7 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getPointerCount():int A[MD:():int (c)] (LINE:885)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:886)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|LOOP_START\lLOOP:0: B:16:0x0005\-\>B:21:0x0022\l|0x0005: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('pointerCount' int)])  \-\> B:23:0x0025 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: INVOKE  (r2 I:int) = (r7 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)] (LINE:887)\l0x000b: INVOKE  (r3 I:boolean) = (r6 I:androidx.customview.widget.ViewDragHelper), (r2 I:int A[D('pointerId' int)]) type: DIRECT call: androidx.customview.widget.ViewDragHelper.isValidPointerForActionMove(int):boolean A[MD:(int):boolean (m)] (LINE:889)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r3 I:float) = (r7 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getX(int):float A[MD:(int):float (c)] (LINE:892)\l0x0016: INVOKE  (r4 I:float) = (r7 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getY(int):float A[MD:(int):float (c)] (LINE:893)\l0x001a: IGET  (r5 I:float[]) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mLastMotionX float[]  (LINE:894)\l0x001c: APUT  \l  (r5 I:??[int, float][])\l  (r2 I:??[int, short, byte, char] A[D('pointerId' int)])\l  (r3 I:??[int, float, short, byte, char] A[D('x' float)])\l \l0x001e: IGET  (r5 I:float[]) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mLastMotionY float[]  (LINE:895)\l0x0020: APUT  \l  (r5 I:??[int, float][])\l  (r2 I:??[int, short, byte, char] A[D('pointerId' int)])\l  (r4 I:??[int, float, short, byte, char] A[D('y' float)])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|LOOP_END\lLOOP:0: B:16:0x0005\-\>B:21:0x0022\l|0x0022: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:886)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|RETURN\l|0x0025: RETURN    (LINE:897)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.customview.widget.ViewDragHelper.saveLastMotion((r6 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0022 \-\> B:16:0x0005, CROSS_EDGE: B:18:0x000f \-\> B:21:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0022: r2 'pointerId' I\l  0x0016\-0x0022: r3 'x' F\l  0x001a\-0x0022: r4 'y' F\l  0x0005\-0x0025: r1 'i' I\l  0x0004\-0x0025: r0 'pointerCount' I\l  \-1 \-0x0025: r7 'ev' Landroid\/view\/MotionEvent;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_25[style=dashed];
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

