digraph "CFG forandroidx.customview.widget.ViewDragHelper.checkTouchSlop(Landroid\/view\/View;FF)Z" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1332)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0004 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean)  (LINE:1333)\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|0x0004: IGET  (r1 I:androidx.customview.widget.ViewDragHelper$Callback) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCallback androidx.customview.widget.ViewDragHelper$Callback  (LINE:1335)\l0x0006: INVOKE  (r1 I:int) = (r1 I:androidx.customview.widget.ViewDragHelper$Callback), (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.Callback.getViewHorizontalDragRange(android.view.View):int A[MD:(android.view.View):int (m)]\l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000b|0x000b: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:41:0x000f \l}"];
Node_40 [shape=record,label="{40\:\ 0x000d|0x000d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0010|0x0010: IGET  (r3 I:androidx.customview.widget.ViewDragHelper$Callback) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCallback androidx.customview.widget.ViewDragHelper$Callback  (LINE:1336)\l0x0012: INVOKE  (r3 I:int) = (r3 I:androidx.customview.widget.ViewDragHelper$Callback), (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.Callback.getViewVerticalDragRange(android.view.View):int A[MD:(android.view.View):int (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0016|0x0016: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:45:0x001a \l}"];
Node_44 [shape=record,label="{44\:\ 0x0018|0x0018: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x002f  (LINE:1338)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x002f \l}"];
Node_48 [shape=record,label="{48\:\ 0x001f|0x001f: ARITH  (r4 I:float) = (r8 I:float A[D('dx' float)]) * (r8 I:float A[D('dx' float)])  (LINE:1339)\l0x0021: ARITH  (r5 I:float) = (r9 I:float A[D('dy' float)]) * (r9 I:float A[D('dy' float)]) \l0x0023: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x0024: IGET  (r5 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0026: ARITH  (r5 I:int) = (r5 I:int) * (r5 I:int) \l0x0028: CAST (r5 I:float) = (float) (r5 I:int) \l0x0029: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_49 [shape=record,label="{49\:\ 0x002b|0x002b: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:63:? \l}"];
Node_50 [shape=record,label="{50\:\ 0x002d|RETURN\lORIG_RETURN\l|0x002d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002e: RETURN  (r0 I:boolean) \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|0x002f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x003e  (LINE:1340)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0031|0x0031: INVOKE  (r4 I:float) = (r8 I:float A[D('dx' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1341)\l0x0035: IGET  (r5 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0037: CAST (r5 I:float) = (float) (r5 I:int) \l0x0038: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_54 [shape=record,label="{54\:\ 0x003a|0x003a: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:64:? \l}"];
Node_55 [shape=record,label="{55\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003d: RETURN  (r0 I:boolean) \l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_57 [shape=record,label="{57\:\ 0x003e|0x003e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x004d  (LINE:1342)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0040|0x0040: INVOKE  (r4 I:float) = (r9 I:float A[D('dy' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1343)\l0x0044: IGET  (r5 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0046: CAST (r5 I:float) = (float) (r5 I:int) \l0x0047: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0049|0x0049: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:65:? \l}"];
Node_60 [shape=record,label="{60\:\ 0x004b|RETURN\lORIG_RETURN\l|0x004b: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004c: RETURN  (r0 I:boolean) \l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x004c: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_62 [shape=record,label="{62\:\ 0x004d|RETURN\l|0x004d: RETURN  (r0 I:boolean)  (LINE:1345)\l}"];
Node_45 [shape=record,label="{45\:\ 0x001a|0x001a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x000f|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private boolean androidx.customview.widget.ViewDragHelper.checkTouchSlop((r6 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('dx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('dy' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:51:0x002e \-\> B:34:?, CROSS_EDGE: B:49:0x002b \-\> B:51:0x002e, CROSS_EDGE: B:56:0x003d \-\> B:34:?, CROSS_EDGE: B:54:0x003a \-\> B:56:0x003d, CROSS_EDGE: B:61:0x004c \-\> B:34:?, CROSS_EDGE: B:59:0x0049 \-\> B:61:0x004c, CROSS_EDGE: B:62:0x004d \-\> B:34:?, CROSS_EDGE: B:46:0x001b \-\> B:52:0x002f, CROSS_EDGE: B:45:0x001a \-\> B:46:0x001b, CROSS_EDGE: B:41:0x000f \-\> B:42:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x004d: r1 'checkHorizontal' Z\l  0x001b\-0x004d: r3 'checkVertical' Z\l  \-1 \-0x004d: r7 'child' Landroid\/view\/View;\l  \-1 \-0x004d: r8 'dx' F\l  \-1 \-0x004d: r9 'dy' F\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_34;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_52;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_63;
Node_50 -> Node_34;
Node_63 -> Node_34;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_57;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_64;
Node_55 -> Node_34;
Node_64 -> Node_34;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_65;
Node_60 -> Node_34;
Node_65 -> Node_34;
Node_62 -> Node_34;
Node_45 -> Node_46;
Node_41 -> Node_42;
}

