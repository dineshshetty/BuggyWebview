digraph "CFG forandroidx.customview.widget.ViewDragHelper.processTouchEvent(Landroid\/view\/MotionEvent;)V" {
Node_95 [shape=record,label="{95\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_97 [shape=record,label="{97\:\ 0x0000|int r0 = r13.getActionMasked()\lint r1 = r13.getActionIndex()\l}"];
Node_98 [shape=record,label="{98\:\ 0x0008|if (r0 != 0) goto L4\l}"];
Node_99 [shape=record,label="{99\:\ 0x000a|cancel()\l}"];
Node_100 [shape=record,label="{100\:\ 0x000d}"];
Node_101 [shape=record,label="{101\:\ 0x000f|if (r12.mVelocityTracker != null) goto L7\l}"];
Node_102 [shape=record,label="{102\:\ 0x0011|r12.mVelocityTracker = android.view.VelocityTracker.obtain()\l}"];
Node_103 [shape=record,label="{103\:\ 0x0017|r12.mVelocityTracker.addMovement(r13)\l}"];
Node_104 [shape=record,label="{104\:\ 0x001d|switch(r0) \{\l    case 0: goto L82;\l    case 1: goto L77;\l    case 2: goto L51;\l    case 3: goto L46;\l    case 4: goto L87;\l    case 5: goto L34;\l    case 6: goto L9;\l    default: goto L87;\l\}\l}"];
Node_106 [shape=record,label="{106\:\ 0x0022|int r3 = r13.getPointerId(r1)\l}"];
Node_107 [shape=record,label="{107\:\ 0x0028|if (r12.mDragState != 1) goto L31\l}"];
Node_108 [shape=record,label="{108\:\ 0x002a}"];
Node_109 [shape=record,label="{109\:\ 0x002c|if (r3 != r12.mActivePointerId) goto L31\l}"];
Node_110 [shape=record,label="{110\:\ 0x002e|r2 = \-1\lint r4 = r13.getPointerCount()\lr5 = 0\l}"];
Node_111 [shape=record,label="{111\:\ 0x0034|LOOP_START\lLOOP:0: B:111:0x0034\-\>B:120:0x005a\lPHI: r5 \l  PHI: (r5v14 'i' int) = (r5v13 'i' int), (r5v16 'i' int) binds: [B:110:0x002e, B:120:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \>= r4) goto L30\l}"];
Node_112 [shape=record,label="{112\:\ 0x0036|int r6 = r13.getPointerId(r5)\l}"];
Node_113 [shape=record,label="{113\:\ 0x003c|if (r6 != r12.mActivePointerId) goto L17\l}"];
Node_115 [shape=record,label="{115\:\ 0x003f|float r7 = r13.getX(r5)\landroid.view.View r9 = findTopChildUnder((int) r7, (int) r13.getY(r5))\landroid.view.View r10 = r12.mCapturedView\l}"];
Node_116 [shape=record,label="{116\:\ 0x004f|if (r9 != r10) goto L28\l}"];
Node_117 [shape=record,label="{117\:\ 0x0051}"];
Node_118 [shape=record,label="{118\:\ 0x0055|if (tryCaptureViewForDrag(r10, r6) == false) goto L26\l}"];
Node_168 [shape=record,label="{168\:\ 0x0057|SYNTHETIC\l}"];
Node_119 [shape=record,label="{119\:\ 0x0057|int r2 = r12.mActivePointerId\l}"];
Node_121 [shape=record,label="{121\:\ 0x005d|PHI: r2 \l  PHI: (r2v12 'newActivePointer' int) = (r2v11 'newActivePointer' int), (r2v13 'newActivePointer' int) binds: [B:167:0x005d, B:119:0x0057] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_122 [shape=record,label="{122\:\ 0x005e|if (r2 != (\-1)) goto L31\l}"];
Node_123 [shape=record,label="{123\:\ 0x0060|releaseViewForPointerUp()\l}"];
Node_170 [shape=record,label="{170\:\ 0x005a|SYNTHETIC\l}"];
Node_120 [shape=record,label="{120\:\ 0x005a|LOOP_END\lLOOP:0: B:111:0x0034\-\>B:120:0x005a\l|int r5 = r5 + 1\l}"];
Node_169 [shape=record,label="{169\:\ 0x005a|SYNTHETIC\l}"];
Node_171 [shape=record,label="{171\:\ 0x005a|SYNTHETIC\l}"];
Node_167 [shape=record,label="{167\:\ 0x005d|SYNTHETIC\l}"];
Node_124 [shape=record,label="{124\:\ 0x0063|clearMotionHistory(r3)\l}"];
Node_178 [shape=record,label="{178\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_96 [shape=record,label="{96\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_125 [shape=record,label="{125\:\ 0x0068|int r2 = r13.getPointerId(r1)\lfloat r3 = r13.getX(r1)\lfloat r4 = r13.getY(r1)\lsaveInitialMotion(r3, r4, r2)\l}"];
Node_126 [shape=record,label="{126\:\ 0x0079|if (r12.mDragState != 0) goto L41\l}"];
Node_127 [shape=record,label="{127\:\ 0x007b|android.view.View r5 = findTopChildUnder((int) r3, (int) r4)\ltryCaptureViewForDrag(r5, r2)\lr6 = r12.mInitialEdgesTouched[r2]\lint r7 = r12.mTrackingEdges\l}"];
Node_128 [shape=record,label="{128\:\ 0x008c|if ((r6 & r7) == 0) goto L40\l}"];
Node_129 [shape=record,label="{129\:\ 0x008e|r12.mCallback.onEdgeTouched(r7 & r6, r2)\l}"];
Node_187 [shape=record,label="{187\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_186 [shape=record,label="{186\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_130 [shape=record,label="{130\:\ 0x0095}"];
Node_131 [shape=record,label="{131\:\ 0x009b|if (isCapturedViewUnder((int) r3, (int) r4) == false) goto L45\l}"];
Node_132 [shape=record,label="{132\:\ 0x009d|tryCaptureViewForDrag(r12.mCapturedView, r2)\l}"];
Node_179 [shape=record,label="{179\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_188 [shape=record,label="{188\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_134 [shape=record,label="{134\:\ 0x00a6}"];
Node_135 [shape=record,label="{135\:\ 0x00a8|if (r12.mDragState != 1) goto L49\l}"];
Node_136 [shape=record,label="{136\:\ 0x00aa|dispatchViewReleased(0.0f, 0.0f)\l}"];
Node_137 [shape=record,label="{137\:\ 0x00ae|cancel()\l}"];
Node_180 [shape=record,label="{180\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_138 [shape=record,label="{138\:\ 0x00b3}"];
Node_139 [shape=record,label="{139\:\ 0x00b5|if (r12.mDragState != 1) goto L58\l}"];
Node_140 [shape=record,label="{140\:\ 0x00b7}"];
Node_141 [shape=record,label="{141\:\ 0x00bd|if (isValidPointerForActionMove(r12.mActivePointerId) != false) goto L55\l}"];
Node_143 [shape=record,label="{143\:\ 0x00c1|int r2 = r13.findPointerIndex(r12.mActivePointerId)\lfloat r3 = r13.getX(r2)\lfloat r4 = r13.getY(r2)\lfloat[] r5 = r12.mLastMotionX\lint r6 = r12.mActivePointerId\lint r5 = (int) (r3 \- r5[r6])\lint r6 = (int) (r4 \- r12.mLastMotionY[r6])\ldragTo(r12.mCapturedView.getLeft() + r5, r12.mCapturedView.getTop() + r6, r5, r6)\lsaveLastMotion(r13)\l}"];
Node_181 [shape=record,label="{181\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_189 [shape=record,label="{189\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_144 [shape=record,label="{144\:\ 0x00f5|int r3 = r13.getPointerCount()\lr4 = 0\l}"];
Node_145 [shape=record,label="{145\:\ 0x00fa|LOOP_START\lLOOP:1: B:145:0x00fa\-\>B:157:0x0136\lPHI: r4 \l  PHI: (r4v3 'i' int) = (r4v2 'i' int), (r4v4 'i' int) binds: [B:144:0x00f5, B:157:0x0136] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r3) goto L76\l}"];
Node_146 [shape=record,label="{146\:\ 0x00fc|int r5 = r13.getPointerId(r4)\l}"];
Node_147 [shape=record,label="{147\:\ 0x0104|if (isValidPointerForActionMove(r5) != false) goto L62\l}"];
Node_149 [shape=record,label="{149\:\ 0x0107|float r6 = r13.getX(r4)\lfloat r7 = r13.getY(r4)\lfloat r8 = r6 \- r12.mInitialMotionX[r5]\lfloat r9 = r7 \- r12.mInitialMotionY[r5]\lreportNewEdgeDrags(r8, r9, r5)\l}"];
Node_150 [shape=record,label="{150\:\ 0x0120|if (r12.mDragState != 1) goto L64\l}"];
Node_152 [shape=record,label="{152\:\ 0x0123|android.view.View r10 = findTopChildUnder((int) r6, (int) r7)\l}"];
Node_153 [shape=record,label="{153\:\ 0x012d|if (checkTouchSlop(r10, r8, r9) == false) goto L73\l}"];
Node_154 [shape=record,label="{154\:\ 0x012f}"];
Node_155 [shape=record,label="{155\:\ 0x0133|if (tryCaptureViewForDrag(r10, r5) == false) goto L71\l}"];
Node_173 [shape=record,label="{173\:\ 0x0139|SYNTHETIC\l}"];
Node_158 [shape=record,label="{158\:\ 0x0139|saveLastMotion(r13)\l}"];
Node_182 [shape=record,label="{182\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_176 [shape=record,label="{176\:\ 0x0136|SYNTHETIC\l}"];
Node_157 [shape=record,label="{157\:\ 0x0136|LOOP_END\lLOOP:1: B:145:0x00fa\-\>B:157:0x0136\l|int r4 = r4 + 1\l}"];
Node_175 [shape=record,label="{175\:\ 0x0136|SYNTHETIC\l}"];
Node_172 [shape=record,label="{172\:\ 0x0139|SYNTHETIC\l}"];
Node_177 [shape=record,label="{177\:\ 0x0136|SYNTHETIC\l}"];
Node_174 [shape=record,label="{174\:\ 0x0139|SYNTHETIC\l}"];
Node_159 [shape=record,label="{159\:\ 0x013d}"];
Node_160 [shape=record,label="{160\:\ 0x013f|if (r12.mDragState != 1) goto L80\l}"];
Node_161 [shape=record,label="{161\:\ 0x0141|releaseViewForPointerUp()\l}"];
Node_162 [shape=record,label="{162\:\ 0x0144|cancel()\l}"];
Node_183 [shape=record,label="{183\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_163 [shape=record,label="{163\:\ 0x0148|float r2 = r13.getX()\lfloat r3 = r13.getY()\lint r4 = r13.getPointerId(0)\landroid.view.View r5 = findTopChildUnder((int) r2, (int) r3)\lsaveInitialMotion(r2, r3, r4)\ltryCaptureViewForDrag(r5, r4)\lr6 = r12.mInitialEdgesTouched[r4]\lint r7 = r12.mTrackingEdges\l}"];
Node_164 [shape=record,label="{164\:\ 0x0169|if ((r6 & r7) == 0) goto L86\l}"];
Node_165 [shape=record,label="{165\:\ 0x016b|r12.mCallback.onEdgeTouched(r7 & r6, r4)\l}"];
Node_166 [shape=record,label="{166\:\ 0x0171|RETURN\lORIG_RETURN\l|return\l}"];
Node_184 [shape=record,label="{184\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_185 [shape=record,label="{185\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.customview.widget.ViewDragHelper.processTouchEvent((r12v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r13v0 'ev' android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:122:0x005e \-\> B:124:0x0063, BACK_EDGE: B:120:0x005a \-\> B:111:0x0034, CROSS_EDGE: B:116:0x004f \-\> B:120:0x005a, CROSS_EDGE: B:113:0x003c \-\> B:120:0x005a, CROSS_EDGE: B:111:0x0034 \-\> B:121:0x005d, CROSS_EDGE: B:109:0x002c \-\> B:124:0x0063, CROSS_EDGE: B:107:0x0028 \-\> B:124:0x0063, CROSS_EDGE: B:129:0x008e \-\> B:166:0x0171, CROSS_EDGE: B:128:0x008c \-\> B:166:0x0171, CROSS_EDGE: B:132:0x009d \-\> B:166:0x0171, CROSS_EDGE: B:131:0x009b \-\> B:166:0x0171, CROSS_EDGE: B:137:0x00ae \-\> B:166:0x0171, CROSS_EDGE: B:135:0x00a8 \-\> B:137:0x00ae, CROSS_EDGE: B:143:0x00c1 \-\> B:166:0x0171, CROSS_EDGE: B:141:0x00bd \-\> B:166:0x0171, BACK_EDGE: B:157:0x0136 \-\> B:145:0x00fa, CROSS_EDGE: B:158:0x0139 \-\> B:166:0x0171, CROSS_EDGE: B:153:0x012d \-\> B:157:0x0136, CROSS_EDGE: B:150:0x0120 \-\> B:158:0x0139, CROSS_EDGE: B:147:0x0104 \-\> B:157:0x0136, CROSS_EDGE: B:145:0x00fa \-\> B:158:0x0139, CROSS_EDGE: B:162:0x0144 \-\> B:166:0x0171, CROSS_EDGE: B:160:0x013f \-\> B:162:0x0144, CROSS_EDGE: B:165:0x016b \-\> B:166:0x0171, CROSS_EDGE: B:164:0x0169 \-\> B:166:0x0171, CROSS_EDGE: B:104:0x001d \-\> B:166:0x0171, CROSS_EDGE: B:101:0x000f \-\> B:103:0x0017, CROSS_EDGE: B:98:0x0008 \-\> B:100:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_95;Node_95 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_100;
Node_99 -> Node_100;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_103;
Node_102 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_106;
Node_104 -> Node_125;
Node_104 -> Node_134;
Node_104 -> Node_138;
Node_104 -> Node_159;
Node_104 -> Node_163;
Node_104 -> Node_185;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_124;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_124;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_167;
Node_112 -> Node_113;
Node_113 -> Node_115;
Node_113 -> Node_171[style=dashed];
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_169;
Node_117 -> Node_118;
Node_118 -> Node_168[style=dashed];
Node_118 -> Node_170;
Node_168 -> Node_119;
Node_119 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_124;
Node_123 -> Node_124;
Node_170 -> Node_120;
Node_120 -> Node_111;
Node_169 -> Node_120;
Node_171 -> Node_120;
Node_167 -> Node_121;
Node_124 -> Node_178;
Node_178 -> Node_96;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_130;
Node_127 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_186;
Node_129 -> Node_187;
Node_187 -> Node_96;
Node_186 -> Node_96;
Node_130 -> Node_131;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_188;
Node_132 -> Node_179;
Node_179 -> Node_96;
Node_188 -> Node_96;
Node_134 -> Node_135;
Node_135 -> Node_136[style=dashed];
Node_135 -> Node_137;
Node_136 -> Node_137;
Node_137 -> Node_180;
Node_180 -> Node_96;
Node_138 -> Node_139;
Node_139 -> Node_140[style=dashed];
Node_139 -> Node_144;
Node_140 -> Node_141;
Node_141 -> Node_143;
Node_141 -> Node_189[style=dashed];
Node_143 -> Node_181;
Node_181 -> Node_96;
Node_189 -> Node_96;
Node_144 -> Node_145;
Node_145 -> Node_146[style=dashed];
Node_145 -> Node_174;
Node_146 -> Node_147;
Node_147 -> Node_149;
Node_147 -> Node_177[style=dashed];
Node_149 -> Node_150;
Node_150 -> Node_152;
Node_150 -> Node_172[style=dashed];
Node_152 -> Node_153;
Node_153 -> Node_154[style=dashed];
Node_153 -> Node_175;
Node_154 -> Node_155;
Node_155 -> Node_173[style=dashed];
Node_155 -> Node_176;
Node_173 -> Node_158;
Node_158 -> Node_182;
Node_182 -> Node_96;
Node_176 -> Node_157;
Node_157 -> Node_145;
Node_175 -> Node_157;
Node_172 -> Node_158;
Node_177 -> Node_157;
Node_174 -> Node_158;
Node_159 -> Node_160;
Node_160 -> Node_161[style=dashed];
Node_160 -> Node_162;
Node_161 -> Node_162;
Node_162 -> Node_183;
Node_183 -> Node_96;
Node_163 -> Node_164;
Node_164 -> Node_165[style=dashed];
Node_164 -> Node_184;
Node_165 -> Node_166;
Node_166 -> Node_96;
Node_184 -> Node_96;
Node_185 -> Node_96;
}

