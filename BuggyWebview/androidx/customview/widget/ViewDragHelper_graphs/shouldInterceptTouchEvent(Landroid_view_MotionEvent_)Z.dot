digraph "CFG forandroidx.customview.widget.ViewDragHelper.shouldInterceptTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_82 [shape=record,label="{82\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_84 [shape=record,label="{84\:\ 0x0000|int r2 = r22.getActionMasked()\lint r3 = r22.getActionIndex()\l}"];
Node_85 [shape=record,label="{85\:\ 0x000c|if (r2 != 0) goto L4\l}"];
Node_86 [shape=record,label="{86\:\ 0x000e|cancel()\l}"];
Node_87 [shape=record,label="{87\:\ 0x0011}"];
Node_88 [shape=record,label="{88\:\ 0x0013|if (r21.mVelocityTracker != null) goto L7\l}"];
Node_89 [shape=record,label="{89\:\ 0x0015|r21.mVelocityTracker = android.view.VelocityTracker.obtain()\l}"];
Node_90 [shape=record,label="{90\:\ 0x001b|r21.mVelocityTracker.addMovement(r22)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0021|switch(r2) \{\l    case 0: goto L70;\l    case 1: goto L69;\l    case 2: goto L27;\l    case 3: goto L69;\l    case 4: goto L9;\l    case 5: goto L16;\l    case 6: goto L15;\l    default: goto L9;\l\}\l}"];
Node_92 [shape=record,label="{92\:\ 0x0024|r5 = false\l}"];
Node_151 [shape=record,label="{151\:\ 0x0177|PHI: r5 \l  PHI: (r5v13 boolean) = (r5v0 boolean), (r5v0 boolean), (r5v1 boolean), (r5v2 boolean), (r5v3 boolean), (r5v9 boolean), (r5v10 boolean), (r5v11 boolean), (r5v12 boolean), (r5v15 boolean) binds: [B:149:0x016f, B:150:0x0171, B:142:0x0139, B:141:0x0133, B:140:0x012e, B:109:0x0082, B:103:0x006c, B:104:0x0073, B:93:0x002b, B:92:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_152 [shape=record,label="{152\:\ 0x017a|if (r21.mDragState != 1) goto L14\l}"];
Node_153 [shape=record,label="{153\:\ 0x017c|RETURN\lORIG_RETURN\l|return true\l}"];
Node_83 [shape=record,label="{83\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_163 [shape=record,label="{163\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
Node_93 [shape=record,label="{93\:\ 0x002b|clearMotionHistory(r22.getPointerId(r3))\lr5 = false\l}"];
Node_94 [shape=record,label="{94\:\ 0x0039|int r7 = r22.getPointerId(r3)\lfloat r8 = r22.getX(r3)\lfloat r9 = r22.getY(r3)\lsaveInitialMotion(r8, r9, r7)\lint r10 = r21.mDragState\l}"];
Node_95 [shape=record,label="{95\:\ 0x004a|if (r10 != 0) goto L22\l}"];
Node_96 [shape=record,label="{96\:\ 0x004c|r4 = r21.mInitialEdgesTouched[r7]\lint r10 = r21.mTrackingEdges\l}"];
Node_97 [shape=record,label="{97\:\ 0x0054|if ((r4 & r10) == 0) goto L21\l}"];
Node_98 [shape=record,label="{98\:\ 0x0056|r21.mCallback.onEdgeTouched(r10 & r4, r7)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0073|r5 = false\l}"];
Node_99 [shape=record,label="{99\:\ 0x005d|if (r10 != 2) goto L21\l}"];
Node_100 [shape=record,label="{100\:\ 0x005f|android.view.View r4 = findTopChildUnder((int) r8, (int) r9)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0067|if (r4 != r21.mCapturedView) goto L26\l}"];
Node_102 [shape=record,label="{102\:\ 0x0069|tryCaptureViewForDrag(r4, r7)\l}"];
Node_103 [shape=record,label="{103\:\ 0x006c|r5 = false\l}"];
Node_105 [shape=record,label="{105\:\ 0x007a}"];
Node_106 [shape=record,label="{106\:\ 0x007c|if (r21.mInitialMotionX == null) goto L68\l}"];
Node_107 [shape=record,label="{107\:\ 0x007e}"];
Node_108 [shape=record,label="{108\:\ 0x0080|if (r21.mInitialMotionY != null) goto L32\l}"];
Node_109 [shape=record,label="{109\:\ 0x0082|r5 = false\l}"];
Node_110 [shape=record,label="{110\:\ 0x0089|int r4 = r22.getPointerCount()\lr7 = 0\l}"];
Node_111 [shape=record,label="{111\:\ 0x008e|LOOP_START\lLOOP:0: B:111:0x008e\-\>B:138:0x011e\lPHI: r2 r3 r4 r7 \l  PHI: (r2v2 'action' int) = (r2v0 'action' int), (r2v7 'action' int) binds: [B:110:0x0089, B:138:0x011e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'actionIndex' int) = (r3v0 'actionIndex' int), (r3v8 'actionIndex' int) binds: [B:110:0x0089, B:138:0x011e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v8 'pointerCount' int) = (r4v7 'pointerCount' int), (r4v11 'pointerCount' int) binds: [B:110:0x0089, B:138:0x011e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v3 'i' int) = (r7v2 'i' int), (r7v4 'i' int) binds: [B:110:0x0089, B:138:0x011e] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= r4) goto L66\l}"];
Node_112 [shape=record,label="{112\:\ 0x0090|int r8 = r22.getPointerId(r7)\l}"];
Node_113 [shape=record,label="{113\:\ 0x0098|if (isValidPointerForActionMove(r8) != false) goto L39\l}"];
Node_114 [shape=record,label="{114\:\ 0x009a|r16 = r2\lr17 = r3\lr18 = r4\l}"];
Node_160 [shape=record,label="{160\:\ 0x011e|SYNTHETIC\l}"];
Node_138 [shape=record,label="{138\:\ 0x011e|LOOP_END\lLOOP:0: B:111:0x008e\-\>B:138:0x011e\lPHI: r16 r17 r18 \l  PHI: (r16v7 'action' int) = (r16v5 'action' int), (r16v5 'action' int), (r16v8 'action' int) binds: [B:161:0x011e, B:162:0x011e, B:160:0x011e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v7 'actionIndex' int) = (r17v5 'actionIndex' int), (r17v5 'actionIndex' int), (r17v8 'actionIndex' int) binds: [B:161:0x011e, B:162:0x011e, B:160:0x011e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v4 'pointerCount' int) = (r18v2 'pointerCount' int), (r18v2 'pointerCount' int), (r18v5 'pointerCount' int) binds: [B:161:0x011e, B:162:0x011e, B:160:0x011e] A[DONT_GENERATE, DONT_INLINE]\l|int r7 = r7 + 1\lr2 = r16\lr3 = r17\lr4 = r18\l}"];
Node_115 [shape=record,label="{115\:\ 0x00a2|float r9 = r22.getX(r7)\lfloat r10 = r22.getY(r7)\lfloat r11 = r9 \- r21.mInitialMotionX[r8]\lfloat r12 = r10 \- r21.mInitialMotionY[r8]\landroid.view.View r13 = findTopChildUnder((int) r9, (int) r10)\l}"];
Node_116 [shape=record,label="{116\:\ 0x00bc|if (r13 == null) goto L65\l}"];
Node_117 [shape=record,label="{117\:\ 0x00be}"];
Node_118 [shape=record,label="{118\:\ 0x00c2|if (checkTouchSlop(r13, r11, r12) == false) goto L65\l}"];
Node_119 [shape=record,label="{119\:\ 0x00c4|r14 = true\l}"];
Node_121 [shape=record,label="{121\:\ 0x00c7|PHI: r14 \l  PHI: (r14v2 'pastSlop' boolean) = (r14v1 'pastSlop' boolean), (r14v4 'pastSlop' boolean) binds: [B:120:0x00c6, B:119:0x00c4] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 == false) goto L64\l}"];
Node_122 [shape=record,label="{122\:\ 0x00c9|int r15 = r13.getLeft()\lint r5 = ((int) r11) + r15\lr16 = r2\lint r2 = r21.mCallback.clampViewPositionHorizontal(r13, r5, (int) r11)\lint r6 = r13.getTop()\lr17 = r3\lint r3 = ((int) r12) + r6\lr18 = r4\lint r5 = (int) r12\lint r4 = r21.mCallback.clampViewPositionVertical(r13, r3, r5)\lint r5 = r21.mCallback.getViewHorizontalDragRange(r13)\lint r3 = r21.mCallback.getViewVerticalDragRange(r13)\l}"];
Node_123 [shape=record,label="{123\:\ 0x00f9|if (r5 == 0) goto L59\l}"];
Node_124 [shape=record,label="{124\:\ 0x00fb|if (r5 \<= 0) goto L49\l}"];
Node_125 [shape=record,label="{125\:\ 0x00fd|if (r2 != r15) goto L49\l}"];
Node_131 [shape=record,label="{131\:\ 0x010c|PHI: r16 r17 r18 \l  PHI: (r16v5 'action' int) = (r16v4 'action' int), (r16v6 'action' int), (r16v6 'action' int), (r16v6 'action' int), (r16v6 'action' int) binds: [B:130:0x0106, B:127:0x0101, B:128:0x0103, B:124:0x00fb, B:125:0x00fd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v5 'actionIndex' int) = (r17v4 'actionIndex' int), (r17v6 'actionIndex' int), (r17v6 'actionIndex' int), (r17v6 'actionIndex' int), (r17v6 'actionIndex' int) binds: [B:130:0x0106, B:127:0x0101, B:128:0x0103, B:124:0x00fb, B:125:0x00fd] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v2 'pointerCount' int) = (r18v1 'pointerCount' int), (r18v3 'pointerCount' int), (r18v3 'pointerCount' int), (r18v3 'pointerCount' int), (r18v3 'pointerCount' int) binds: [B:130:0x0106, B:127:0x0101, B:128:0x0103, B:124:0x00fb, B:125:0x00fd] A[DONT_GENERATE, DONT_INLINE]\l|reportNewEdgeDrags(r11, r12, r8)\l}"];
Node_132 [shape=record,label="{132\:\ 0x0112|if (r21.mDragState != 1) goto L51\l}"];
Node_134 [shape=record,label="{134\:\ 0x0115|if (r14 == false) goto L57\l}"];
Node_135 [shape=record,label="{135\:\ 0x0117}"];
Node_136 [shape=record,label="{136\:\ 0x011b|if (tryCaptureViewForDrag(r13, r8) == false) goto L56\l}"];
Node_158 [shape=record,label="{158\:\ 0x012e|SYNTHETIC\l}"];
Node_140 [shape=record,label="{140\:\ 0x012e|saveLastMotion(r22)\lr5 = false\l}"];
Node_162 [shape=record,label="{162\:\ 0x011e|SYNTHETIC\l}"];
Node_161 [shape=record,label="{161\:\ 0x011e|SYNTHETIC\l}"];
Node_157 [shape=record,label="{157\:\ 0x012e|SYNTHETIC\l}"];
Node_126 [shape=record,label="{126\:\ 0x00ff|if (r3 == 0) goto L63\l}"];
Node_127 [shape=record,label="{127\:\ 0x0101|if (r3 \<= 0) goto L49\l}"];
Node_128 [shape=record,label="{128\:\ 0x0103|if (r4 != r6) goto L49\l}"];
Node_155 [shape=record,label="{155\:\ 0x012e|SYNTHETIC\l}"];
Node_159 [shape=record,label="{159\:\ 0x012e|SYNTHETIC\l}"];
Node_130 [shape=record,label="{130\:\ 0x0106|r16 = r2\lr17 = r3\lr18 = r4\l}"];
Node_120 [shape=record,label="{120\:\ 0x00c6|r14 = false\l}"];
Node_156 [shape=record,label="{156\:\ 0x0128|SYNTHETIC\l}"];
Node_139 [shape=record,label="{139\:\ 0x0128}"];
Node_141 [shape=record,label="{141\:\ 0x0133|r5 = false\l}"];
Node_142 [shape=record,label="{142\:\ 0x0139|cancel()\lr5 = false\l}"];
Node_143 [shape=record,label="{143\:\ 0x0142|float r2 = r22.getX()\lfloat r3 = r22.getY()\lr5 = false\lint r6 = r22.getPointerId(0)\lsaveInitialMotion(r2, r3, r6)\landroid.view.View r7 = findTopChildUnder((int) r2, (int) r3)\l}"];
Node_144 [shape=record,label="{144\:\ 0x015e|if (r7 != r21.mCapturedView) goto L75\l}"];
Node_145 [shape=record,label="{145\:\ 0x0160}"];
Node_146 [shape=record,label="{146\:\ 0x0162|if (r21.mDragState != 2) goto L75\l}"];
Node_147 [shape=record,label="{147\:\ 0x0164|tryCaptureViewForDrag(r7, r6)\l}"];
Node_148 [shape=record,label="{148\:\ 0x0167|r4 = r21.mInitialEdgesTouched[r6]\lint r8 = r21.mTrackingEdges\l}"];
Node_149 [shape=record,label="{149\:\ 0x016f|if ((r4 & r8) == 0) goto L10\l}"];
Node_150 [shape=record,label="{150\:\ 0x0171|r21.mCallback.onEdgeTouched(r8 & r4, r6)\l}"];
MethodNode[shape=record,label="{public boolean androidx.customview.widget.ViewDragHelper.shouldInterceptTouchEvent((r21v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r22v0 'ev' android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:152:0x017a \-\> B:154:0x017d, CROSS_EDGE: B:93:0x002b \-\> B:151:0x0177, CROSS_EDGE: B:104:0x0073 \-\> B:151:0x0177, CROSS_EDGE: B:97:0x0054 \-\> B:104:0x0073, CROSS_EDGE: B:103:0x006c \-\> B:151:0x0177, CROSS_EDGE: B:101:0x0067 \-\> B:103:0x006c, CROSS_EDGE: B:99:0x005d \-\> B:104:0x0073, CROSS_EDGE: B:109:0x0082 \-\> B:151:0x0177, BACK_EDGE: B:138:0x011e \-\> B:111:0x008e, CROSS_EDGE: B:136:0x011b \-\> B:138:0x011e, CROSS_EDGE: B:140:0x012e \-\> B:151:0x0177, CROSS_EDGE: B:134:0x0115 \-\> B:138:0x011e, CROSS_EDGE: B:132:0x0112 \-\> B:140:0x012e, CROSS_EDGE: B:128:0x0103 \-\> B:140:0x012e, CROSS_EDGE: B:127:0x0101 \-\> B:131:0x010c, CROSS_EDGE: B:126:0x00ff \-\> B:140:0x012e, CROSS_EDGE: B:125:0x00fd \-\> B:131:0x010c, CROSS_EDGE: B:124:0x00fb \-\> B:131:0x010c, CROSS_EDGE: B:123:0x00f9 \-\> B:126:0x00ff, CROSS_EDGE: B:130:0x0106 \-\> B:131:0x010c, CROSS_EDGE: B:120:0x00c6 \-\> B:121:0x00c7, CROSS_EDGE: B:116:0x00bc \-\> B:120:0x00c6, CROSS_EDGE: B:139:0x0128 \-\> B:140:0x012e, CROSS_EDGE: B:141:0x0133 \-\> B:151:0x0177, CROSS_EDGE: B:142:0x0139 \-\> B:151:0x0177, CROSS_EDGE: B:150:0x0171 \-\> B:151:0x0177, CROSS_EDGE: B:149:0x016f \-\> B:151:0x0177, CROSS_EDGE: B:146:0x0162 \-\> B:148:0x0167, CROSS_EDGE: B:144:0x015e \-\> B:148:0x0167, CROSS_EDGE: B:88:0x0013 \-\> B:90:0x001b, CROSS_EDGE: B:85:0x000c \-\> B:87:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_82;Node_82 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92;
Node_91 -> Node_93;
Node_91 -> Node_94;
Node_91 -> Node_105;
Node_91 -> Node_142;
Node_91 -> Node_143;
Node_92 -> Node_151;
Node_151 -> Node_152;
Node_152 -> Node_153[style=dashed];
Node_152 -> Node_163;
Node_153 -> Node_83;
Node_163 -> Node_83;
Node_93 -> Node_151;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_99;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_104;
Node_98 -> Node_104;
Node_104 -> Node_151;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_104;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_103;
Node_102 -> Node_103;
Node_103 -> Node_151;
Node_105 -> Node_106;
Node_106 -> Node_107[style=dashed];
Node_106 -> Node_141;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_110;
Node_109 -> Node_151;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_156;
Node_112 -> Node_113;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_115;
Node_114 -> Node_160;
Node_160 -> Node_138;
Node_138 -> Node_111;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_120;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_121;
Node_121 -> Node_122[style=dashed];
Node_121 -> Node_130;
Node_122 -> Node_123;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_126;
Node_124 -> Node_125[style=dashed];
Node_124 -> Node_131;
Node_125 -> Node_126[style=dashed];
Node_125 -> Node_131;
Node_131 -> Node_132;
Node_132 -> Node_134;
Node_132 -> Node_157[style=dashed];
Node_134 -> Node_135[style=dashed];
Node_134 -> Node_161;
Node_135 -> Node_136;
Node_136 -> Node_158[style=dashed];
Node_136 -> Node_162;
Node_158 -> Node_140;
Node_140 -> Node_151;
Node_162 -> Node_138;
Node_161 -> Node_138;
Node_157 -> Node_140;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_159;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_131;
Node_128 -> Node_131;
Node_128 -> Node_155[style=dashed];
Node_155 -> Node_140;
Node_159 -> Node_140;
Node_130 -> Node_131;
Node_120 -> Node_121;
Node_156 -> Node_139;
Node_139 -> Node_140;
Node_141 -> Node_151;
Node_142 -> Node_151;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_148;
Node_145 -> Node_146;
Node_146 -> Node_147[style=dashed];
Node_146 -> Node_148;
Node_147 -> Node_148;
Node_148 -> Node_149;
Node_149 -> Node_150[style=dashed];
Node_149 -> Node_151;
Node_150 -> Node_151;
}

