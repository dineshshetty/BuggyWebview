digraph "CFG forandroidx.customview.widget.ViewDragHelper.reportNewEdgeDrags(FFI)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1284)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1285)\l0x0002: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.customview.widget.ViewDragHelper)\l  (r4 I:float A[D('dx' float)])\l  (r5 I:float A[D('dy' float)])\l  (r6 I:int A[D('pointerId' int)])\l  (r1 I:int)\l type: DIRECT call: androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(float, float, int, int):boolean A[MD:(float, float, int, int):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x000a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('dragsStarted' int)]) \| (1 ??[boolean, int, float, short, byte, char])  (LINE:1286)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:1288)\l0x000b: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.customview.widget.ViewDragHelper)\l  (r5 I:float A[D('dy' float)])\l  (r4 I:float A[D('dx' float)])\l  (r6 I:int A[D('pointerId' int)])\l  (r1 I:int)\l type: DIRECT call: androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(float, float, int, int):boolean A[MD:(float, float, int, int):boolean (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0013 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|0x0011: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('dragsStarted' int)]) \| (4 ??[int, float, short, byte, char])  (LINE:1289)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1291)\l0x0014: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.customview.widget.ViewDragHelper)\l  (r4 I:float A[D('dx' float)])\l  (r5 I:float A[D('dy' float)])\l  (r6 I:int A[D('pointerId' int)])\l  (r1 I:int)\l type: DIRECT call: androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(float, float, int, int):boolean A[MD:(float, float, int, int):boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001c \l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('dragsStarted' int)]) \| (2 ??[int, float, short, byte, char])  (LINE:1292)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:1294)\l0x001e: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.customview.widget.ViewDragHelper)\l  (r5 I:float A[D('dy' float)])\l  (r4 I:float A[D('dx' float)])\l  (r6 I:int A[D('pointerId' int)])\l  (r1 I:int)\l type: DIRECT call: androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(float, float, int, int):boolean A[MD:(float, float, int, int):boolean (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0026 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|0x0024: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('dragsStarted' int)]) \| (8 ??[int, float, short, byte, char])  (LINE:1295)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dragsStarted' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:?  (LINE:1298)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: IGET  (r1 I:int[]) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeDragsInProgress int[]  (LINE:1299)\l0x002a: AGET  (r2 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r6 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x002c: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) \| (r0 I:??[int, boolean, short, byte, char] A[D('dragsStarted' int)]) \l0x002d: APUT  \l  (r1 I:??[int, float][])\l  (r6 I:??[int, short, byte, char] A[D('pointerId' int)])\l  (r2 I:??[int, float, short, byte, char])\l \l0x002f: IGET  (r1 I:androidx.customview.widget.ViewDragHelper$Callback) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCallback androidx.customview.widget.ViewDragHelper$Callback  (LINE:1300)\l0x0031: INVOKE  \l  (r1 I:androidx.customview.widget.ViewDragHelper$Callback)\l  (r0 I:int A[D('dragsStarted' int)])\l  (r6 I:int A[D('pointerId' int)])\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.Callback.onEdgeDragStarted(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: RETURN    (LINE:1302)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0034: RETURN   A[SYNTHETIC] (LINE:1302)\l}"];
MethodNode[shape=record,label="{private void androidx.customview.widget.ViewDragHelper.reportNewEdgeDrags((r3 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:float A[D('dx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('dy' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0026 \-\> B:34:0x0034, CROSS_EDGE: B:30:0x0022 \-\> B:32:0x0026, CROSS_EDGE: B:27:0x0018 \-\> B:29:0x001c, CROSS_EDGE: B:24:0x000f \-\> B:26:0x0013, CROSS_EDGE: B:21:0x0006 \-\> B:23:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0034: r0 'dragsStarted' I\l  \-1 \-0x0034: r4 'dx' F\l  \-1 \-0x0034: r5 'dy' F\l  \-1 \-0x0034: r6 'pointerId' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_19;
Node_35 -> Node_19;
}

