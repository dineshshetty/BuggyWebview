digraph "CFG forandroidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(FFII)Z" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r6 I:float A[D('delta' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1305)\l0x0004: INVOKE  (r1 I:float) = (r7 I:float A[D('odelta' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1306)\l0x0008: IGET  (r2 I:int[]) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mInitialEdgesTouched int[]  (LINE:1308)\l0x000a: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x000c: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l0x000d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('edge' int)])  \-\> B:57:0x0058 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|0x0010: IGET  (r2 I:int) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTrackingEdges int \l0x0012: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0058 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|0x0015: IGET  (r2 I:int[]) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeDragsLocked int[] \l0x0017: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0019: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('edge' int)])  \-\> B:57:0x0058 \l}"];
Node_38 [shape=record,label="{38\:\ 0x001c|0x001c: IGET  (r2 I:int[]) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeDragsInProgress int[] \l0x001e: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0020: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('edge' int)])  \-\> B:57:0x0058 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|0x0023: IGET  (r2 I:int) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0025: CAST (r4 I:float) = (float) (r2 I:int) \l0x0026: CMP_G  (r4 I:int) = (r0 I:float A[D('absDelta' float)]), (r4 I:float) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|0x0028: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:45:0x0030 \l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|0x002a: CAST (r2 I:float) = (float) (r2 I:int) \l0x002b: CMP_G  (r2 I:int) = (r1 I:float A[D('absODelta' float)]), (r2 I:float) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|0x002d: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:45:0x0030 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|0x0030: CONST  (r2 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char])  (LINE:1314)\l0x0032: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float A[D('absODelta' float)]) \l0x0034: CMP_G  (r2 I:int) = (r0 I:float A[D('absDelta' float)]), (r2 I:float) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0036|0x0036: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:51:0x0048 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0038|0x0038: IGET  (r2 I:androidx.customview.widget.ViewDragHelper$Callback) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCallback androidx.customview.widget.ViewDragHelper$Callback \l0x003a: INVOKE  (r2 I:boolean) = (r2 I:androidx.customview.widget.ViewDragHelper$Callback), (r9 I:int A[D('edge' int)]) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.Callback.onEdgeLock(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x003e|0x003e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0048 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0040|0x0040: IGET  (r2 I:int[]) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeDragsLocked int[]  (LINE:1315)\l0x0042: AGET  (r4 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0044: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) \| (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l0x0045: APUT  \l  (r2 I:??[int, float][])\l  (r8 I:??[int, short, byte, char] A[D('pointerId' int)])\l  (r4 I:??[int, float, short, byte, char])\l \l}"];
Node_50 [shape=record,label="{50\:\ 0x0047|RETURN\l|0x0047: RETURN  (r3 I:boolean)  (LINE:1316)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0048|0x0048: IGET  (r2 I:int[]) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeDragsInProgress int[]  (LINE:1318)\l0x004a: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x004c: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r9 I:??[int, boolean, short, byte, char] A[D('edge' int)]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x004d|0x004d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:? \l}"];
Node_53 [shape=record,label="{53\:\ 0x004f|0x004f: IGET  (r2 I:int) = (r5 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0051: CAST (r2 I:float) = (float) (r2 I:int) \l0x0052: CMP_L  (r2 I:int) = (r0 I:float A[D('absDelta' float)]), (r2 I:float) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0054|0x0054: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:59:? \l}"];
Node_55 [shape=record,label="{55\:\ 0x0056|RETURN\lORIG_RETURN\l|0x0056: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0057: RETURN  (r3 I:boolean) \l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN  (r3 I:boolean) A[SYNTHETIC]\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN  (r3 I:boolean) A[SYNTHETIC]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0058|RETURN\l|0x0058: RETURN  (r3 I:boolean)  (LINE:1312)\l}"];
MethodNode[shape=record,label="{private boolean androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag((r5 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r6 I:float A[D('delta' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[D('odelta' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('edge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x0057 \-\> B:31:?, CROSS_EDGE: B:54:0x0054 \-\> B:56:0x0057, CROSS_EDGE: B:52:0x004d \-\> B:56:0x0057, CROSS_EDGE: B:46:0x0036 \-\> B:51:0x0048, CROSS_EDGE: B:57:0x0058 \-\> B:31:?, CROSS_EDGE: B:41:0x0028 \-\> B:45:0x0030, CROSS_EDGE: B:39:0x0021 \-\> B:57:0x0058, CROSS_EDGE: B:37:0x001a \-\> B:57:0x0058, CROSS_EDGE: B:35:0x0013 \-\> B:57:0x0058, CROSS_EDGE: B:33:0x000e \-\> B:57:0x0058\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0058: r0 'absDelta' F\l  0x0008\-0x0058: r1 'absODelta' F\l  \-1 \-0x0058: r6 'delta' F\l  \-1 \-0x0058: r7 'odelta' F\l  \-1 \-0x0058: r8 'pointerId' I\l  \-1 \-0x0058: r9 'edge' I\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_57;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_57;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_57;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_57;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_45;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_57[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_31;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_58;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_59;
Node_55 -> Node_31;
Node_59 -> Node_31;
Node_58 -> Node_31;
Node_57 -> Node_31;
}

