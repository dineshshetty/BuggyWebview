digraph "CFG forandroidx.customview.widget.ViewDragHelper.checkNewEdgeDrag(FFII)Z" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|float r0 = java.lang.Math.abs(r6)\lfloat r1 = java.lang.Math.abs(r7)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|if ((r5.mInitialEdgesTouched[r8] & r9) != r9) goto L27\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010}"];
Node_35 [shape=record,label="{35\:\ 0x0013|if ((r5.mTrackingEdges & r9) == 0) goto L27\l}"];
Node_36 [shape=record,label="{36\:\ 0x0015}"];
Node_37 [shape=record,label="{37\:\ 0x001a|if ((r5.mEdgeDragsLocked[r8] & r9) == r9) goto L27\l}"];
Node_38 [shape=record,label="{38\:\ 0x001c}"];
Node_39 [shape=record,label="{39\:\ 0x0021|if ((r5.mEdgeDragsInProgress[r8] & r9) == r9) goto L27\l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|int r2 = r5.mTouchSlop\l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|if ((r0 \> ((float) r2) ? 1 : (r0 == ((float) r2) ? 0 : \-1)) \> 0) goto L13\l}"];
Node_42 [shape=record,label="{42\:\ 0x002a}"];
Node_43 [shape=record,label="{43\:\ 0x002d|if ((r1 \> ((float) r2) ? 1 : (r1 == ((float) r2) ? 0 : \-1)) \> 0) goto L13\l}"];
Node_45 [shape=record,label="{45\:\ 0x0030}"];
Node_46 [shape=record,label="{46\:\ 0x0036|if ((r0 \> (0.5f * r1) ? 1 : (r0 == (0.5f * r1) ? 0 : \-1)) \>= 0) goto L20\l}"];
Node_47 [shape=record,label="{47\:\ 0x0038}"];
Node_48 [shape=record,label="{48\:\ 0x003e|if (r5.mCallback.onEdgeLock(r9) == false) goto L20\l}"];
Node_49 [shape=record,label="{49\:\ 0x0040|int[] r2 = r5.mEdgeDragsLocked\lr2[r8] = r2[r8] \| r9\l}"];
Node_50 [shape=record,label="{50\:\ 0x0047|RETURN\l|return false\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0048}"];
Node_52 [shape=record,label="{52\:\ 0x004d|if ((r5.mEdgeDragsInProgress[r8] & r9) != 0) goto L26\l}"];
Node_53 [shape=record,label="{53\:\ 0x004f}"];
Node_54 [shape=record,label="{54\:\ 0x0054|if ((r0 \> ((float) r5.mTouchSlop) ? 1 : (r0 == ((float) r5.mTouchSlop) ? 0 : \-1)) \<= 0) goto L25\l}"];
Node_55 [shape=record,label="{55\:\ 0x0056|RETURN\lORIG_RETURN\l|return true\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_57 [shape=record,label="{57\:\ 0x0058|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.customview.widget.ViewDragHelper.checkNewEdgeDrag((r5v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 'delta' float A[D('delta' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'odelta' float A[D('odelta' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'pointerId' int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'edge' int A[D('edge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x0057 \-\> B:31:?, CROSS_EDGE: B:54:0x0054 \-\> B:56:0x0057, CROSS_EDGE: B:52:0x004d \-\> B:56:0x0057, CROSS_EDGE: B:46:0x0036 \-\> B:51:0x0048, CROSS_EDGE: B:57:0x0058 \-\> B:31:?, CROSS_EDGE: B:41:0x0028 \-\> B:45:0x0030, CROSS_EDGE: B:39:0x0021 \-\> B:57:0x0058, CROSS_EDGE: B:37:0x001a \-\> B:57:0x0058, CROSS_EDGE: B:35:0x0013 \-\> B:57:0x0058, CROSS_EDGE: B:33:0x000e \-\> B:57:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_57;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_57;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_57;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_57;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_45;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_57[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_31;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_58;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_59;
Node_55 -> Node_31;
Node_59 -> Node_31;
Node_58 -> Node_31;
Node_57 -> Node_31;
}

