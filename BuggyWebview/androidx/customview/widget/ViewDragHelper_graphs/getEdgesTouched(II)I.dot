digraph "CFG forandroidx.customview.widget.ViewDragHelper.getEdgesTouched(II)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|r0 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r4 \>= (r3.mParentView.getLeft() + r3.mEdgeSize)) goto L4\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|r0 = 0 \| 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 'result' int) = (r0v0 'result' int), (r0v7 'result' int) binds: [B:19:0x000a, B:20:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|if (r5 \>= (r3.mParentView.getTop() + r3.mEdgeSize)) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|r0 = r0 \| 4\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|PHI: r0 \l  PHI: (r0v2 'result' int) = (r0v1 'result' int), (r0v6 'result' int) binds: [B:22:0x0017, B:23:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|if (r4 \<= (r3.mParentView.getRight() \- r3.mEdgeSize)) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|r0 = r0 \| 2\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|PHI: r0 \l  PHI: (r0v3 'result' int) = (r0v2 'result' int), (r0v5 'result' int) binds: [B:25:0x0024, B:26:0x0026] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|if (r5 \<= (r3.mParentView.getBottom() \- r3.mEdgeSize)) goto L15\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033}"];
Node_30 [shape=record,label="{30\:\ 0x0035|RETURN\lORIG_RETURN\l|return r0 \| 8\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private int androidx.customview.widget.ViewDragHelper.getEdgesTouched((r3v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0031 \-\> B:30:0x0035, CROSS_EDGE: B:25:0x0024 \-\> B:27:0x0028, CROSS_EDGE: B:22:0x0017 \-\> B:24:0x001b, CROSS_EDGE: B:19:0x000a \-\> B:21:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_31 -> Node_17;
}

