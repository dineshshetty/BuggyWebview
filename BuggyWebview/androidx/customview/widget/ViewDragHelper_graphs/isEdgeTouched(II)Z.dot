digraph "CFG forandroidx.customview.widget.ViewDragHelper.isEdgeTouched(II)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0004|if (isPointerDown(r3) == false) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006}"];
Node_15 [shape=record,label="{15\:\ 0x000b|if ((r1.mInitialEdgesTouched[r3] & r2) == 0) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|SYNTHETIC\lRETURN\l|return true\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.customview.widget.ViewDragHelper.isEdgeTouched((r1v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 'edges' int A[D('edges' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'pointerId' int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000f \-\> B:18:0x0010, CROSS_EDGE: B:13:0x0004 \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

