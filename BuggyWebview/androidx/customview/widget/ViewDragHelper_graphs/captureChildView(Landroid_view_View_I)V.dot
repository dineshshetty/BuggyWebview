digraph "CFG forandroidx.customview.widget.ViewDragHelper.captureChildView(Landroid\/view\/View;I)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0006|if (r4.getParent() != r3.mParentView) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|r3.mCapturedView = r4\lr3.mActivePointerId = r5\lr3.mCallback.onViewCaptured(r4, r5)\lsetDragState(1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"captureChildView: parameter must be a descendant of the ViewDragHelper's tracked parent view (\")\lr1.append(r3.mParentView)\lr1.append(\")\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public void androidx.customview.widget.ViewDragHelper.captureChildView((r3v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'childView' android.view.View A[D('childView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'activePointerId' int A[D('activePointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0033 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

