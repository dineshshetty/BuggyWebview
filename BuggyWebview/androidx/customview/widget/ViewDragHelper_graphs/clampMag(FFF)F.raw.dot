digraph "CFG forandroidx.customview.widget.ViewDragHelper.clampMag(FFF)F" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r4 I:float A[D('value' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:716)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:717)\l0x0005: CMP_G  (r2 I:int) = (r0 I:float A[D('absValue' float)]), (r5 I:float A[D('absMin' float)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r2 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:19:0x000a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|RETURN\l|0x0009: RETURN  (r1 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: CMP_L  (r2 I:int) = (r0 I:float A[D('absValue' float)]), (r6 I:float A[D('absMax' float)])  (LINE:718)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:26:0x0016 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: CMP_L  (r1 I:int) = (r4 I:float A[D('value' float)]), (r1 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:24:0x0014 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('absMax' float)]) \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r1 I:float) A[SYNTHETIC]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|0x0014: NEG  (r1 I:float) = (r6 I:float A[D('absMax' float)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN  (r1 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|RETURN\l|0x0016: RETURN  (r4 I:float A[D('value' float)])  (LINE:719)\l}"];
MethodNode[shape=record,label="{private float androidx.customview.widget.ViewDragHelper.clampMag((r3 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('absMin' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('absMax' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0015 \-\> B:15:?, CROSS_EDGE: B:24:0x0014 \-\> B:25:0x0015, CROSS_EDGE: B:26:0x0016 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0016: r0 'absValue' F\l  \-1 \-0x0016: r4 'value' F\l  \-1 \-0x0016: r5 'absMin' F\l  \-1 \-0x0016: r6 'absMax' F\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_27;
Node_27 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_15;
}

