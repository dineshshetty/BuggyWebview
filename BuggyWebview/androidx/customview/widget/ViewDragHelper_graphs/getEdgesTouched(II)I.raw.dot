digraph "CFG forandroidx.customview.widget.ViewDragHelper.getEdgesTouched(II)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1528)\l0x0001: IGET  (r1 I:android.view.ViewGroup) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mParentView android.view.ViewGroup  (LINE:1530)\l0x0003: INVOKE  (r1 I:int) = (r1 I:android.view.ViewGroup) type: VIRTUAL call: android.view.ViewGroup.getLeft():int A[MD:():int (c)]\l0x0007: IGET  (r2 I:int) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeSize int \l0x0009: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r4 I:??[int, byte, short, char] A[D('x' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:21:0x000e \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IGET  (r1 I:android.view.ViewGroup) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mParentView android.view.ViewGroup  (LINE:1531)\l0x0010: INVOKE  (r1 I:int) = (r1 I:android.view.ViewGroup) type: VIRTUAL call: android.view.ViewGroup.getTop():int A[MD:():int (c)]\l0x0014: IGET  (r2 I:int) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeSize int \l0x0016: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: IF  (r5 I:??[int, byte, short, char] A[D('y' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:24:0x001b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (4 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: IGET  (r1 I:android.view.ViewGroup) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mParentView android.view.ViewGroup  (LINE:1532)\l0x001d: INVOKE  (r1 I:int) = (r1 I:android.view.ViewGroup) type: VIRTUAL call: android.view.ViewGroup.getRight():int A[MD:():int (c)]\l0x0021: IGET  (r2 I:int) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeSize int \l0x0023: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|0x0024: IF  (r4 I:??[int, byte, short, char] A[D('x' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:27:0x0028 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|0x0026: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (2 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|0x0028: IGET  (r1 I:android.view.ViewGroup) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mParentView android.view.ViewGroup  (LINE:1533)\l0x002a: INVOKE  (r1 I:int) = (r1 I:android.view.ViewGroup) type: VIRTUAL call: android.view.ViewGroup.getBottom():int A[MD:():int (c)]\l0x002e: IGET  (r2 I:int) = (r3 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mEdgeSize int \l0x0030: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|0x0031: IF  (r5 I:??[int, byte, short, char] A[D('y' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:31:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|0x0033: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (8 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0035|RETURN\lORIG_RETURN\l|0x0035: RETURN  (r0 I:int A[D('result' int)])  (LINE:1535)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN  (r0 I:int A[D('result' int)]) A[SYNTHETIC] (LINE:1535)\l}"];
MethodNode[shape=record,label="{private int androidx.customview.widget.ViewDragHelper.getEdgesTouched((r3 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0031 \-\> B:30:0x0035, CROSS_EDGE: B:25:0x0024 \-\> B:27:0x0028, CROSS_EDGE: B:22:0x0017 \-\> B:24:0x001b, CROSS_EDGE: B:19:0x000a \-\> B:21:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0035: r0 'result' I\l  \-1 \-0x0035: r4 'x' I\l  \-1 \-0x0035: r5 'y' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_31 -> Node_17;
}

