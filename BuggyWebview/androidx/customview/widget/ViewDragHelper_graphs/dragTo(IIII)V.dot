digraph "CFG forandroidx.customview.widget.ViewDragHelper.dragTo(IIII)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r3 = r17\lr4 = r18\lint r5 = r16.mCapturedView.getLeft()\lint r6 = r16.mCapturedView.getTop()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|if (r19 == 0) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|int r3 = r16.mCallback.clampViewPositionHorizontal(r16.mCapturedView, r17, r19)\landroidx.core.view.ViewCompat.offsetLeftAndRight(r16.mCapturedView, r3 \- r5)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|PHI: r3 \l  PHI: (r3v1 'clampedX' int) = (r3v0 'clampedX' int), (r3v2 'clampedX' int) binds: [B:19:0x002a, B:18:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r20 == 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|int r4 = r16.mCallback.clampViewPositionVertical(r16.mCapturedView, r18, r20)\landroidx.core.view.ViewCompat.offsetTopAndBottom(r16.mCapturedView, r4 \- r6)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0042|PHI: r4 \l  PHI: (r4v1 'clampedY' int) = (r4v0 'clampedY' int), (r4v2 'clampedY' int) binds: [B:22:0x0040, B:21:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r19 != 0) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|if (r20 == 0) goto L8\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|int r7 = r3 \- r5\lint r8 = r4 \- r6\lr16.mCallback.onViewPositionChanged(r16.mCapturedView, r3, r4, r7, r8)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|RETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040}"];
Node_19 [shape=record,label="{19\:\ 0x002a}"];
MethodNode[shape=record,label="{private void androidx.customview.widget.ViewDragHelper.dragTo((r16v0 'this' androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r17v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'dx' int A[D('dx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'dy' int A[D('dy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0044 \-\> B:26:0x0055, CROSS_EDGE: B:23:0x0042 \-\> B:25:0x0046, CROSS_EDGE: B:22:0x0040 \-\> B:23:0x0042, CROSS_EDGE: B:19:0x002a \-\> B:20:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_22 -> Node_23;
Node_19 -> Node_20;
}

