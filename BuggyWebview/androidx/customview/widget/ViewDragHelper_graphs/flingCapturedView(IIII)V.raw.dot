digraph "CFG forandroidx.customview.widget.ViewDragHelper.flingCapturedView(IIII)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mReleaseInProgress boolean  (LINE:739)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0030 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IGET  (r1 I:android.widget.OverScroller) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mScroller android.widget.OverScroller  (LINE:744)\l0x0006: IGET  (r0 I:android.view.View) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCapturedView android.view.View \l0x0008: INVOKE  (r2 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l0x000c: IGET  (r0 I:android.view.View) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mCapturedView android.view.View \l0x000e: INVOKE  (r3 I:int) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0012: IGET  (r0 I:android.view.VelocityTracker) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mVelocityTracker android.view.VelocityTracker \l0x0014: IGET  (r4 I:int) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mActivePointerId int \l0x0016: INVOKE  (r0 I:float) = (r0 I:android.view.VelocityTracker), (r4 I:int) type: VIRTUAL call: android.view.VelocityTracker.getXVelocity(int):float A[MD:(int):float (c)] (LINE:745)\l0x001a: CAST (r4 I:int) = (int) (r0 I:float) \l0x001b: IGET  (r0 I:android.view.VelocityTracker) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mVelocityTracker android.view.VelocityTracker \l0x001d: IGET  (r5 I:int) = (r10 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mActivePointerId int \l0x001f: INVOKE  (r0 I:float) = (r0 I:android.view.VelocityTracker), (r5 I:int) type: VIRTUAL call: android.view.VelocityTracker.getYVelocity(int):float A[MD:(int):float (c)] (LINE:746)\l0x0023: CAST (r5 I:int) = (int) (r0 I:float) \l0x0024: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minLeft' int)])  (LINE:744)\l0x0025: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxLeft' int)]) \l0x0026: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minTop' int)]) \l0x0027: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxTop' int)]) \l0x0028: INVOKE  \l  (r1 I:android.widget.OverScroller)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l type: VIRTUAL call: android.widget.OverScroller.fling(int, int, int, int, int, int, int, int):void A[MD:(int, int, int, int, int, int, int, int):void (c)]\l0x002b: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:749)\l0x002c: INVOKE  (r10 I:androidx.customview.widget.ViewDragHelper), (r0 I:int) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.setDragState(int):void A[MD:(int):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:750)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:740)\l0x0032: CONST_STR  (r1 I:java.lang.String) =  \"Cannot flingCapturedView outside of a call to Callback#onViewReleased\" \l0x0034: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.customview.widget.ViewDragHelper.flingCapturedView((r10 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('minLeft' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('minTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('maxLeft' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('maxTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0037 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0037: r11 'minLeft' I\l  \-1 \-0x0037: r12 'minTop' I\l  \-1 \-0x0037: r13 'maxLeft' I\l  \-1 \-0x0037: r14 'maxTop' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

