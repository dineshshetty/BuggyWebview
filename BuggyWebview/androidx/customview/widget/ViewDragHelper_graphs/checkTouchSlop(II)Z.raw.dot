digraph "CFG forandroidx.customview.widget.ViewDragHelper.checkTouchSlop(II)Z" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r8 I:androidx.customview.widget.ViewDragHelper), (r10 I:int A[D('pointerId' int)]) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.isPointerDown(int):boolean A[MD:(int):boolean (m)] (LINE:1388)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0008 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:1389)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0008|0x0008: ARITH  (r0 I:??[int, boolean]) = (r9 I:??[int, boolean, short, byte, char] A[D('directions' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:1392)\l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x000f \l}"];
Node_41 [shape=record,label="{41\:\ 0x000d|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0010|0x0010: ARITH  (r3 I:??[int, boolean]) = (r9 I:??[int, boolean, short, byte, char] A[D('directions' int)]) & (2 ??[int, float, short, byte, char])  (LINE:1393)\l0x0012: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0017 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0015|0x0015: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0018|0x0018: IGET  (r4 I:float[]) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mLastMotionX float[]  (LINE:1395)\l0x001a: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x001c: IGET  (r5 I:float[]) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mInitialMotionX float[] \l0x001e: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0020: ARITH  (r4 I:float) = (r4 I:float) \- (r5 I:float) \l0x0021: IGET  (r5 I:float[]) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mLastMotionY float[]  (LINE:1396)\l0x0023: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0025: IGET  (r6 I:float[]) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mInitialMotionY float[] \l0x0027: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r10 I:??[int, short, byte, char] A[D('pointerId' int)]) \l0x0029: ARITH  (r5 I:float) = (r5 I:float) \- (r6 I:float) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x003e  (LINE:1398)\l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x003e \l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|0x002e: ARITH  (r6 I:float) = (r4 I:float A[D('dx' float)]) * (r4 I:float A[D('dx' float)])  (LINE:1399)\l0x0030: ARITH  (r7 I:float) = (r5 I:float A[D('dy' float)]) * (r5 I:float A[D('dy' float)]) \l0x0032: ARITH  (r6 I:float) = (r6 I:float) + (r7 I:float) \l0x0033: IGET  (r7 I:int) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0035: ARITH  (r7 I:int) = (r7 I:int) * (r7 I:int) \l0x0037: CAST (r7 I:float) = (float) (r7 I:int) \l0x0038: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_51 [shape=record,label="{51\:\ 0x003a|0x003a: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:65:? \l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003d: RETURN  (r1 I:boolean) \l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_54 [shape=record,label="{54\:\ 0x003e|0x003e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x004d  (LINE:1400)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|0x0040: INVOKE  (r6 I:float) = (r4 I:float A[D('dx' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1401)\l0x0044: IGET  (r7 I:int) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0046: CAST (r7 I:float) = (float) (r7 I:int) \l0x0047: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0049|0x0049: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:66:? \l}"];
Node_57 [shape=record,label="{57\:\ 0x004b|RETURN\lORIG_RETURN\l|0x004b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004c: RETURN  (r1 I:boolean) \l}"];
Node_66 [shape=record,label="{66\:\ ?|SYNTHETIC\lRETURN\l|0x004c: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|0x004d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checkVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x005c  (LINE:1402)\l}"];
Node_60 [shape=record,label="{60\:\ 0x004f|0x004f: INVOKE  (r6 I:float) = (r5 I:float A[D('dy' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1403)\l0x0053: IGET  (r7 I:int) = (r8 I:androidx.customview.widget.ViewDragHelper) androidx.customview.widget.ViewDragHelper.mTouchSlop int \l0x0055: CAST (r7 I:float) = (float) (r7 I:int) \l0x0056: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|0x0058: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:67:? \l}"];
Node_62 [shape=record,label="{62\:\ 0x005a|RETURN\lORIG_RETURN\l|0x005a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x005b: RETURN  (r1 I:boolean) \l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x005b: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_64 [shape=record,label="{64\:\ 0x005c|RETURN\l|0x005c: RETURN  (r1 I:boolean)  (LINE:1405)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0017|0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x000f|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.customview.widget.ViewDragHelper.checkTouchSlop((r8 'this' I:androidx.customview.widget.ViewDragHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('directions' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:53:0x003d \-\> B:35:?, CROSS_EDGE: B:51:0x003a \-\> B:53:0x003d, CROSS_EDGE: B:58:0x004c \-\> B:35:?, CROSS_EDGE: B:56:0x0049 \-\> B:58:0x004c, CROSS_EDGE: B:63:0x005b \-\> B:35:?, CROSS_EDGE: B:61:0x0058 \-\> B:63:0x005b, CROSS_EDGE: B:64:0x005c \-\> B:35:?, CROSS_EDGE: B:48:0x002a \-\> B:54:0x003e, CROSS_EDGE: B:46:0x0017 \-\> B:47:0x0018, CROSS_EDGE: B:42:0x000f \-\> B:43:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x005c: r0 'checkHorizontal' Z\l  0x0018\-0x005c: r3 'checkVertical' Z\l  0x0021\-0x005c: r4 'dx' F\l  0x002a\-0x005c: r5 'dy' F\l  \-1 \-0x005c: r9 'directions' I\l  \-1 \-0x005c: r10 'pointerId' I\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_35;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_54;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_65;
Node_52 -> Node_35;
Node_65 -> Node_35;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_59;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_66;
Node_57 -> Node_35;
Node_66 -> Node_35;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_64;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_67;
Node_62 -> Node_35;
Node_67 -> Node_35;
Node_64 -> Node_35;
Node_46 -> Node_47;
Node_42 -> Node_43;
}

