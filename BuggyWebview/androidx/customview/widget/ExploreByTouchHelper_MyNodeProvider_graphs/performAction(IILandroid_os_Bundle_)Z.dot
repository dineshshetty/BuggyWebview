digraph "CFG forandroidx.customview.widget.ExploreByTouchHelper.MyNodeProvider.performAction(IILandroid\/os\/Bundle;)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|return androidx.customview.widget.ExploreByTouchHelper.this.performAction(r2, r3, r4)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.customview.widget.ExploreByTouchHelper.MyNodeProvider.performAction((r1v0 'this' androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider A[IMMUTABLE_TYPE, THIS]), (r2v0 'virtualViewId' int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'arguments' android.os.Bundle A[D('arguments' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.accessibility.AccessibilityNodeProviderCompat.performAction(int, int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

