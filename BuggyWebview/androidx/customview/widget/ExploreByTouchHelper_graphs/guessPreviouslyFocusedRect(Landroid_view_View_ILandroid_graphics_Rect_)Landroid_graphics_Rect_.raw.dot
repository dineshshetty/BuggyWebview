digraph "CFG forandroidx.customview.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect(Landroid\/view\/View;ILandroid\/graphics\/Rect;)Landroid\/graphics\/Rect;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:android.view.View A[D('host' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:452)\l0x0004: INVOKE  (r1 I:int) = (r4 I:android.view.View A[D('host' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)] (LINE:453)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:455)\l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: SWITCH  (r5 I:?? A[D('direction' int)])\l case 17: goto B:20:0x0021\l case 33: goto B:19:0x001d\l case 66: goto B:18:0x0019\l case 130: goto B:17:0x0015\l default: goto B:15:0x000d \l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:469)\l0x000f: CONST_STR  (r3 I:java.lang.String) =  \"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\" \l0x0011: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0014|0x0014: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: INVOKE  \l  (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect)])\l  (r3 I:int)\l  (r2 I:int)\l  (r0 I:int A[D('w' int)])\l  (r2 I:int)\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:466)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|RETURN\l|0x0025: RETURN  (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect)])  (LINE:473)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: INVOKE  \l  (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect)])\l  (r2 I:int)\l  (r3 I:int)\l  (r2 I:int)\l  (r1 I:int A[D('h' int)])\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:463)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|0x001d: INVOKE  \l  (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect)])\l  (r3 I:int)\l  (r1 I:int A[D('h' int)])\l  (r0 I:int A[D('w' int)])\l  (r1 I:int A[D('h' int)])\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:460)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|0x0021: INVOKE  \l  (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect)])\l  (r0 I:int A[D('w' int)])\l  (r3 I:int)\l  (r0 I:int A[D('w' int)])\l  (r1 I:int A[D('h' int)])\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:457)\l}"];
MethodNode[shape=record,label="{private static android.graphics.Rect androidx.customview.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect((r4 I:android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Rect A[D('outBounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0025 \-\> B:12:?, CROSS_EDGE: B:18:0x0019 \-\> B:21:0x0025, CROSS_EDGE: B:19:0x001d \-\> B:21:0x0025, CROSS_EDGE: B:20:0x0021 \-\> B:21:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0037: r0 'w' I\l  0x0008\-0x0037: r1 'h' I\l  \-1 \-0x0037: r4 'host' Landroid\/view\/View;\l  \-1 \-0x0037: r5 'direction' I\l  \-1 \-0x0037: r6 'outBounds' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_14 -> Node_19;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_21;
Node_21 -> Node_12;
Node_18 -> Node_21;
Node_19 -> Node_21;
Node_20 -> Node_21;
}

