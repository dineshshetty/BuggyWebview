digraph "CFG forandroidx.customview.widget.ExploreByTouchHelper.moveFocus(ILandroid\/graphics\/Rect;)Z" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: INVOKE  (r11 I:androidx.collection.SparseArrayCompat) = (r13 I:androidx.customview.widget.ExploreByTouchHelper) type: DIRECT call: androidx.customview.widget.ExploreByTouchHelper.getAllNodes():androidx.collection.SparseArrayCompat A[MD:():androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\> (m)] (LINE:372)\l0x0004: IGET  (r12 I:int) = (r13 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mKeyboardFocusedVirtualViewId int  (LINE:374)\l0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:376)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|0x0008: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('focusedNodeId' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x000c \l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|0x0012: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|0x0013: SWITCH  (r14 I:?? A[D('direction' int)])\l case 1: goto B:44:0x0045\l case 2: goto B:44:0x0045\l case 17: goto B:37:0x001e\l case 33: goto B:37:0x001e\l case 66: goto B:37:0x001e\l case 130: goto B:37:0x001e\l default: goto B:35:0x0016  (LINE:379)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:410)\l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"direction must be one of \{FOCUS_FORWARD, FOCUS_BACKWARD, FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\" \l0x001a: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:392)\l0x0020: INVOKE  (r1 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0023: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0024: IGET  (r1 I:int) = (r13 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mKeyboardFocusedVirtualViewId int  (LINE:393)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0026|0x0026: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002c \l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: INVOKE  \l  (r13 I:androidx.customview.widget.ExploreByTouchHelper)\l  (r1 I:int)\l  (r6 I:android.graphics.Rect A[D('selectedRect' android.graphics.Rect)])\l type: DIRECT call: androidx.customview.widget.ExploreByTouchHelper.getBoundsInParent(int, android.graphics.Rect):void A[MD:(int, android.graphics.Rect):void (m)] (LINE:395)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0037|0x0037: SGET  (r1 I:androidx.customview.widget.FocusStrategy$CollectionAdapter\<androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>, androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>) =  androidx.customview.widget.ExploreByTouchHelper.SPARSE_VALUES_ADAPTER androidx.customview.widget.FocusStrategy$CollectionAdapter  (LINE:406)\l0x0039: SGET  (r2 I:androidx.customview.widget.FocusStrategy$BoundsAdapter\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>) =  androidx.customview.widget.ExploreByTouchHelper.NODE_ADAPTER androidx.customview.widget.FocusStrategy$BoundsAdapter \l0x003b: MOVE  (r0 I:??[OBJECT, ARRAY]) = \l  (r11 I:??[OBJECT, ARRAY] A[D('allNodes' androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>)])\l \l0x003c: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('selectedRect' android.graphics.Rect)]) \l0x003d: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('direction' int)]) \l0x003e: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.Object)\l  (r1 I:androidx.customview.widget.FocusStrategy$CollectionAdapter)\l  (r2 I:androidx.customview.widget.FocusStrategy$BoundsAdapter)\l  (r3 I:java.lang.Object A[D('focusedNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r4 I:android.graphics.Rect)\l  (r5 I:int)\l type: STATIC call: androidx.customview.widget.FocusStrategy.findNextFocusInAbsoluteDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, android.graphics.Rect, int):java.lang.Object A[MD:\<L, T\>:(L, androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\>, androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\>, T, android.graphics.Rect, int):T (m)]\l0x0042: CHECK_CAST (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0061|0x0061: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextFocusedNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0066  (LINE:416)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0063|0x0063: CONST  (r1 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:417)\l}"];
Node_52 [shape=record,label="{52\:\ 0x006f|0x006f: INVOKE  (r2 I:boolean) = (r13 I:androidx.customview.widget.ExploreByTouchHelper), (r1 I:int A[D('nextFocusedNodeId' int)]) type: VIRTUAL call: androidx.customview.widget.ExploreByTouchHelper.requestKeyboardFocusForVirtualView(int):boolean A[MD:(int):boolean (m)] (LINE:423)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0073|RETURN\l|0x0073: RETURN  (r2 I:boolean) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0066|0x0066: INVOKE  (r1 I:int) = \l  (r11 I:androidx.collection.SparseArrayCompat A[D('allNodes' androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>)])\l  (r0 I:java.lang.Object A[D('nextFocusedNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: VIRTUAL call: androidx.collection.SparseArrayCompat.indexOfValue(java.lang.Object):int A[MD:(E):int (m)] (LINE:419)\l0x006a: INVOKE  (r2 I:int) = \l  (r11 I:androidx.collection.SparseArrayCompat A[D('allNodes' androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>)])\l  (r1 I:int A[D('index' int)])\l type: VIRTUAL call: androidx.collection.SparseArrayCompat.keyAt(int):int A[MD:(int):int (m)] (LINE:420)\l0x006e: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('index' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|0x002c: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previouslyFocusedRect' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0032  (LINE:396)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002e|0x002e: INVOKE  \l  (r6 I:android.graphics.Rect A[D('selectedRect' android.graphics.Rect)])\l  (r15 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.Rect.set(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:398)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0032|0x0032: IGET  (r0 I:android.view.View) = (r13 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mHost android.view.View  (LINE:404)\l0x0034: INVOKE  \l  (r0 I:android.view.View)\l  (r14 I:int A[D('direction' int)])\l  (r6 I:android.graphics.Rect A[D('selectedRect' android.graphics.Rect)])\l type: STATIC call: androidx.customview.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect(android.view.View, int, android.graphics.Rect):android.graphics.Rect A[MD:(android.view.View, int, android.graphics.Rect):android.graphics.Rect (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0045|0x0045: IGET  (r0 I:android.view.View A[D('nextFocusedNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)]) = (r13 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mHost android.view.View  (LINE:382)\l0x0047: INVOKE  (r0 I:int) = (r0 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:383)\l0x004b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x004c|0x004c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0050 \l}"];
Node_46 [shape=record,label="{46\:\ 0x004e|0x004e: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0052|0x0052: SGET  (r5 I:androidx.customview.widget.FocusStrategy$CollectionAdapter\<androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>, androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>) =  androidx.customview.widget.ExploreByTouchHelper.SPARSE_VALUES_ADAPTER androidx.customview.widget.FocusStrategy$CollectionAdapter  (LINE:384)\l0x0054: SGET  (r6 I:androidx.customview.widget.FocusStrategy$BoundsAdapter\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>) =  androidx.customview.widget.ExploreByTouchHelper.NODE_ADAPTER androidx.customview.widget.FocusStrategy$BoundsAdapter \l0x0056: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0057: MOVE  (r4 I:??[OBJECT, ARRAY]) = \l  (r11 I:??[OBJECT, ARRAY] A[D('allNodes' androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>)])\l \l0x0058: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('focusedNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)]) \l0x0059: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('direction' int)]) \l0x005a: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:java.lang.Object)\l  (r5 I:androidx.customview.widget.FocusStrategy$CollectionAdapter)\l  (r6 I:androidx.customview.widget.FocusStrategy$BoundsAdapter)\l  (r7 I:java.lang.Object)\l  (r8 I:int)\l  (r9 I:boolean A[D('isLayoutRtl' boolean)])\l  (r10 I:boolean)\l type: STATIC call: androidx.customview.widget.FocusStrategy.findNextFocusInRelativeDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, int, boolean, boolean):java.lang.Object A[MD:\<L, T\>:(L, androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\>, androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\>, T, int, boolean, boolean):T (m)]\l0x005e: CHECK_CAST (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0050|0x0050: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0051: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = \l  (r11 I:androidx.collection.SparseArrayCompat A[D('allNodes' androidx.collection.SparseArrayCompat\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat\>)])\l  (r12 I:int A[D('focusedNodeId' int)])\l type: VIRTUAL call: androidx.collection.SparseArrayCompat.get(int):java.lang.Object A[MD:(int):E (m)]\l0x0010: CHECK_CAST (r1 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) (r1 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private boolean androidx.customview.widget.ExploreByTouchHelper.moveFocus((r13 'this' I:androidx.customview.widget.ExploreByTouchHelper A[IMMUTABLE_TYPE, THIS]), (r14 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:53:0x0073 \-\> B:28:?, CROSS_EDGE: B:51:0x0066 \-\> B:52:0x006f, CROSS_EDGE: B:41:0x002e \-\> B:43:0x0037, CROSS_EDGE: B:42:0x0032 \-\> B:43:0x0037, CROSS_EDGE: B:48:0x0052 \-\> B:49:0x0061, CROSS_EDGE: B:47:0x0050 \-\> B:48:0x0052, CROSS_EDGE: B:32:0x000c \-\> B:33:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0044\-0x0045: r0 'nextFocusedNode' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  0x0024\-0x0045: r6 'selectedRect' Landroid\/graphics\/Rect;\l  0x0052\-0x0061: r9 'isLayoutRtl' Z\l  0x0065\-0x0066: r1 'nextFocusedNodeId' I\l  0x006a\-0x006f: r1 'index' I\l  0x0060\-0x008d: r0 'nextFocusedNode' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  0x006f\-0x008d: r1 'nextFocusedNodeId' I\l  0x0013\-0x008d: r3 'focusedNode' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  0x0004\-0x008d: r11 'allNodes' Landroidx\/collection\/SparseArrayCompat;, signature: Landroidx\/collection\/SparseArrayCompat\<Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\>;\l  0x0006\-0x008d: r12 'focusedNodeId' I\l  \-1 \-0x008d: r14 'direction' I\l  \-1 \-0x008d: r15 'previouslyFocusedRect' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_37;
Node_34 -> Node_44;
Node_35 -> Node_36;
Node_36 -> Node_28;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_43;
Node_43 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_28;
Node_51 -> Node_52;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_47 -> Node_48;
Node_32 -> Node_33;
}

