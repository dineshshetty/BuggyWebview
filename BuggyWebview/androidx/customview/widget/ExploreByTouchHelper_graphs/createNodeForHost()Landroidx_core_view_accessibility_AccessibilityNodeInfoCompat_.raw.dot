digraph "CFG forandroidx.customview.widget.ExploreByTouchHelper.createNodeForHost()Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r7 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mHost android.view.View  (LINE:736)\l0x0002: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = (r0 I:android.view.View) type: STATIC call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.obtain(android.view.View):androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[MD:(android.view.View):androidx.core.view.accessibility.AccessibilityNodeInfoCompat (m)]\l0x0006: IGET  (r1 I:android.view.View) = (r7 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mHost android.view.View  (LINE:737)\l0x0008: INVOKE  \l  (r1 I:android.view.View)\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: STATIC call: androidx.core.view.ViewCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void A[MD:(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void (m)]\l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:740)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0010: INVOKE  \l  (r7 I:androidx.customview.widget.ExploreByTouchHelper)\l  (r1 I:java.util.List A[D('virtualViewIds' java.util.ArrayList\<java.lang.Integer\>)])\l type: VIRTUAL call: androidx.customview.widget.ExploreByTouchHelper.getVisibleVirtualViews(java.util.List):void A[MD:(java.util.List\<java.lang.Integer\>):void (m)] (LINE:741)\l0x0013: INVOKE  (r2 I:int) = \l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getChildCount():int A[MD:():int (m)] (LINE:743)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|0x0017: IF  (r2 I:??[int, byte, short, char] A[D('realNodeCount' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x0028  (LINE:744)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: INVOKE  (r3 I:int) = (r1 I:java.util.ArrayList A[D('virtualViewIds' java.util.ArrayList\<java.lang.Integer\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|0x001d: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:21:0x0020 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|0x0020: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:745)\l0x0022: CONST_STR  (r4 I:java.lang.String) =  \"Views cannot have both real and virtual children\" \l0x0024: INVOKE  (r3 I:java.lang.RuntimeException), (r4 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|0x0028: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:748)\l0x0029: INVOKE  (r4 I:int) = (r1 I:java.util.ArrayList A[D('virtualViewIds' java.util.ArrayList\<java.lang.Integer\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002d|LOOP_START\lLOOP:0: B:24:0x002d\-\>B:25:0x002f\l|0x002d: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:27:0x0041 \l}"];
Node_25 [shape=record,label="{25\:\ 0x002f|LOOP_END\lLOOP:0: B:24:0x002d\-\>B:25:0x002f\l|0x002f: IGET  (r5 I:android.view.View) = (r7 I:androidx.customview.widget.ExploreByTouchHelper) androidx.customview.widget.ExploreByTouchHelper.mHost android.view.View  (LINE:749)\l0x0031: INVOKE  (r6 I:java.lang.Object) = (r1 I:java.util.ArrayList A[D('virtualViewIds' java.util.ArrayList\<java.lang.Integer\>)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0035: CHECK_CAST (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r6 I:int) = (r6 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x003b: INVOKE  \l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r5 I:android.view.View)\l  (r6 I:int)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addChild(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x003e: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:748)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0041|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0041|RETURN\l|0x0041: RETURN  \l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (LINE:752)\l}"];
MethodNode[shape=record,label="{private androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.customview.widget.ExploreByTouchHelper.createNodeForHost((r7 'this' I:androidx.customview.widget.ExploreByTouchHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x002f \-\> B:24:0x002d, CROSS_EDGE: B:26:0x0041 \-\> B:15:?, CROSS_EDGE: B:17:0x0017 \-\> B:23:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0041: r3 'i' I\l  0x002d\-0x0041: r4 'count' I\l  0x0006\-0x0041: r0 'info' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  0x0010\-0x0041: r1 'virtualViewIds' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Integer;\>;\l  0x0017\-0x0041: r2 'realNodeCount' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_23[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_15;
}

