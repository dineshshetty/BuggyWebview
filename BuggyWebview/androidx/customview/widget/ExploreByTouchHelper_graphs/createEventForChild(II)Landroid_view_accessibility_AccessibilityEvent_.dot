digraph "CFG forandroidx.customview.widget.ExploreByTouchHelper.createEventForChild(II)Landroid\/view\/accessibility\/AccessibilityEvent;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|android.view.accessibility.AccessibilityEvent r0 = android.view.accessibility.AccessibilityEvent.obtain(r6)\landroidx.core.view.accessibility.AccessibilityNodeInfoCompat r1 = obtainAccessibilityNodeInfo(r5)\lr0.getText().add(r1.getText())\lr0.setContentDescription(r1.getContentDescription())\lr0.setScrollable(r1.isScrollable())\lr0.setPassword(r1.isPassword())\lr0.setEnabled(r1.isEnabled())\lr0.setChecked(r1.isChecked())\lonPopulateEventForVirtualView(r5, r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|if (r0.getText().isEmpty() == false) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043}"];
Node_16 [shape=record,label="{16\:\ 0x0047|if (r0.getContentDescription() == null) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a}"];
Node_19 [shape=record,label="{19\:\ 0x0051|throw new java.lang.RuntimeException(\"Callbacks must add text or a content description in populateEventForVirtualViewId()\")\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|r0.setClassName(r1.getClassName())\landroidx.core.view.accessibility.AccessibilityRecordCompat.setSource(r0, r4.mHost, r5)\lr0.setPackageName(r4.mHost.getContext().getPackageName())\l}"];
Node_21 [shape=record,label="{21\:\ 0x006b|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private android.view.accessibility.AccessibilityEvent androidx.customview.widget.ExploreByTouchHelper.createEventForChild((r4v0 'this' androidx.customview.widget.ExploreByTouchHelper A[IMMUTABLE_TYPE, THIS]), (r5v0 'virtualViewId' int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'eventType' int A[D('eventType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x006b \-\> B:12:?, CROSS_EDGE: B:14:0x0041 \-\> B:20:0x0052\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

