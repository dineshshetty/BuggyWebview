digraph "CFG forandroidx.customview.widget.FocusStrategy.getPreviousFocusable(Ljava\/lang\/Object;Ljava\/util\/ArrayList;Z)Ljava\/lang\/Object;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|int r0 = r4.size()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|if (r3 != null) goto L15\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|r1 = r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:22:0x0008, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = r1 + (\-1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|if (r1 \< 0) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0010}"];
Node_26 [shape=record,label="{26\:\ 0x0014|RETURN\l|return r4.get(r1)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|if (r5 == false) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|if (r0 \<= 0) goto L13\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019}"];
Node_30 [shape=record,label="{30\:\ 0x001f|RETURN\l|return r4.get(r0 + (\-1))\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|RETURN\lORIG_RETURN\l|return null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|int r1 = r4.indexOf(r3)\l}"];
MethodNode[shape=record,label="{private static T androidx.customview.widget.FocusStrategy.getPreviousFocusable((r3v0 'focused' T A[D('focused' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'focusables' java.util.ArrayList\<T\> A[D('focusables' java.util.ArrayList\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'wrap' boolean A[D('wrap' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x001f \-\> B:18:?, CROSS_EDGE: B:32:0x0021 \-\> B:18:?, CROSS_EDGE: B:27:0x0015 \-\> B:31:0x0020, CROSS_EDGE: B:22:0x0008 \-\> B:23:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(TT;Ljava\/util\/ArrayList\<TT;\>;Z)TT;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_18;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_18;
Node_33 -> Node_18;
Node_31 -> Node_18;
Node_22 -> Node_23;
}

