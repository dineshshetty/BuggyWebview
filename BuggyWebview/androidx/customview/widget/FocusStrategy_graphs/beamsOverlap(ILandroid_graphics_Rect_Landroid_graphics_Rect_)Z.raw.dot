digraph "CFG forandroidx.customview.widget.FocusStrategy.beamsOverlap(ILandroid\/graphics\/Rect;Landroid\/graphics\/Rect;)Z" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:326)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|0x0002: SWITCH  (r4 I:?? A[D('direction' int)])\l case 17: goto B:35:0x001c\l case 33: goto B:28:0x000d\l case 66: goto B:35:0x001c\l case 130: goto B:28:0x000d\l default: goto B:26:0x0005 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:334)\l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\" \l0x0009: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|0x000d: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('rect2' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:332)\l0x000f: IGET  (r3 I:int) = (r5 I:android.graphics.Rect A[D('rect1' android.graphics.Rect)]) android.graphics.Rect.left int \l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:33:0x001a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('rect2' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0015: IGET  (r3 I:int) = (r5 I:android.graphics.Rect A[D('rect1' android.graphics.Rect)]) android.graphics.Rect.right int \l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: IF  (r2 I:??[int, byte, short, char]) \> (r3 I:??[int, byte, short, char])  \-\> B:33:0x001a \l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: RETURN  (r0 I:boolean) \l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|0x001c: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('rect2' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:329)\l0x001e: IGET  (r3 I:int) = (r5 I:android.graphics.Rect A[D('rect1' android.graphics.Rect)]) android.graphics.Rect.top int \l}"];
Node_36 [shape=record,label="{36\:\ 0x0020|0x0020: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:40:0x0029 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|0x0022: IGET  (r2 I:int) = (r6 I:android.graphics.Rect A[D('rect2' android.graphics.Rect)]) android.graphics.Rect.top int \l0x0024: IGET  (r3 I:int) = (r5 I:android.graphics.Rect A[D('rect1' android.graphics.Rect)]) android.graphics.Rect.bottom int \l}"];
Node_38 [shape=record,label="{38\:\ 0x0026|0x0026: IF  (r2 I:??[int, byte, short, char]) \> (r3 I:??[int, byte, short, char])  \-\> B:40:0x0029 \l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x002a: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0029|RETURN\lORIG_RETURN\l|0x0029: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean androidx.customview.widget.FocusStrategy.beamsOverlap((r4 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Rect A[D('rect1' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Rect A[D('rect2' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x001b \-\> B:23:?, CROSS_EDGE: B:31:0x0017 \-\> B:34:0x001b, CROSS_EDGE: B:29:0x0011 \-\> B:33:0x001a, CROSS_EDGE: B:41:0x002a \-\> B:23:?, CROSS_EDGE: B:38:0x0026 \-\> B:41:0x002a, CROSS_EDGE: B:36:0x0020 \-\> B:40:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x003d: r4 'direction' I\l  \-1 \-0x003d: r5 'rect1' Landroid\/graphics\/Rect;\l  \-1 \-0x003d: r6 'rect2' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_23;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_42[style=dashed];
Node_42 -> Node_23;
Node_33 -> Node_23;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_43[style=dashed];
Node_43 -> Node_23;
Node_40 -> Node_23;
}

