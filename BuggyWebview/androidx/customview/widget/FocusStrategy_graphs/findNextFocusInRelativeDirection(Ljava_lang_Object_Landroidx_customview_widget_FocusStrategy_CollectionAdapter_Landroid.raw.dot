digraph "CFG forandroidx.customview.widget.FocusStrategy.findNextFocusInRelativeDirection(Ljava\/lang\/Object;Landroidx\/customview\/widget\/FocusStrategy$CollectionAdapter;Landroidx\/customview\/widget\/FocusStrategy$BoundsAdapter;Ljava\/lang\/Object;IZZ)Ljava\/lang\/Object;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r6 I:androidx.customview.widget.FocusStrategy$CollectionAdapter A[D('collectionAdapter' androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\>)])\l  (r5 I:java.lang.Object A[D('focusables' L)])\l type: INTERFACE call: androidx.customview.widget.FocusStrategy.CollectionAdapter.size(java.lang.Object):int A[MD:(T):int (m)] (LINE:40)\l0x0004: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:41)\l0x0006: INVOKE  (r1 I:java.util.ArrayList), (r0 I:int A[D('count' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:42)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|LOOP_START\lLOOP:0: B:17:0x000a\-\>B:18:0x000c\l|0x000a: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:27:0x0016 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|LOOP_END\lLOOP:0: B:17:0x000a\-\>B:18:0x000c\l|0x000c: INVOKE  (r3 I:java.lang.Object) = \l  (r6 I:androidx.customview.widget.FocusStrategy$CollectionAdapter A[D('collectionAdapter' androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\>)])\l  (r5 I:java.lang.Object A[D('focusables' L)])\l  (r2 I:int A[D('i' int)])\l type: INTERFACE call: androidx.customview.widget.FocusStrategy.CollectionAdapter.get(java.lang.Object, int):java.lang.Object A[MD:(T, int):V (m)] (LINE:43)\l0x0010: INVOKE  (r1 I:java.util.ArrayList A[D('sortedFocusables' java.util.ArrayList\<T\>)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0013: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:42)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|0x0016: NEW_INSTANCE  (r2 I:androidx.customview.widget.FocusStrategy$SequentialComparator A[D('i' int)]) =  androidx.customview.widget.FocusStrategy$SequentialComparator  (LINE:46)\l0x0018: INVOKE  \l  (r2 I:androidx.customview.widget.FocusStrategy$SequentialComparator)\l  (r10 I:boolean A[D('isLayoutRtl' boolean)])\l  (r7 I:androidx.customview.widget.FocusStrategy$BoundsAdapter A[D('adapter' androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\>)])\l type: DIRECT call: androidx.customview.widget.FocusStrategy.SequentialComparator.\<init\>(boolean, androidx.customview.widget.FocusStrategy$BoundsAdapter):void A[MD:(boolean, androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\>):void (m)]\l0x001b: INVOKE  \l  (r1 I:java.util.List A[D('sortedFocusables' java.util.ArrayList\<T\>)])\l  (r2 I:java.util.Comparator A[D('comparator' androidx.customview.widget.FocusStrategy$SequentialComparator\<T\>)])\l type: STATIC call: java.util.Collections.sort(java.util.List, java.util.Comparator):void A[MD:\<T\>:(java.util.List\<T\>, java.util.Comparator\<? super T\>):void (c)] (LINE:47)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|0x001e: SWITCH  (r9 I:?? A[D('direction' int)])\l case 1: goto B:25:0x002e\l case 2: goto B:23:0x0029\l default: goto B:21:0x0021  (LINE:49)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|0x0021: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:55)\l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"direction must be one of \{FOCUS_FORWARD, FOCUS_BACKWARD\}.\" \l0x0025: INVOKE  (r3 I:java.lang.IllegalArgumentException), (r4 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|0x0028: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|0x0029: INVOKE  (r3 I:java.lang.Object) = \l  (r8 I:java.lang.Object A[D('focused' T)])\l  (r1 I:java.util.ArrayList A[D('sortedFocusables' java.util.ArrayList\<T\>)])\l  (r11 I:boolean A[D('wrap' boolean)])\l type: STATIC call: androidx.customview.widget.FocusStrategy.getNextFocusable(java.lang.Object, java.util.ArrayList, boolean):java.lang.Object A[MD:\<T\>:(T, java.util.ArrayList\<T\>, boolean):T (m)] (LINE:51)\l}"];
Node_24 [shape=record,label="{24\:\ 0x002d|RETURN\l|0x002d: RETURN  (r3 I:T) \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: INVOKE  (r3 I:java.lang.Object) = \l  (r8 I:java.lang.Object A[D('focused' T)])\l  (r1 I:java.util.ArrayList A[D('sortedFocusables' java.util.ArrayList\<T\>)])\l  (r11 I:boolean A[D('wrap' boolean)])\l type: STATIC call: androidx.customview.widget.FocusStrategy.getPreviousFocusable(java.lang.Object, java.util.ArrayList, boolean):java.lang.Object A[MD:\<T\>:(T, java.util.ArrayList\<T\>, boolean):T (m)] (LINE:53)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|RETURN\l|0x0032: RETURN  (r3 I:T) \l}"];
MethodNode[shape=record,label="{public static T androidx.customview.widget.FocusStrategy.findNextFocusInRelativeDirection((r5 I:L A[D('focusables' L), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\> A[D('collectionAdapter' androidx.customview.widget.FocusStrategy$CollectionAdapter\<L, T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\> A[D('adapter' androidx.customview.widget.FocusStrategy$BoundsAdapter\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:T A[D('focused' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('isLayoutRtl' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('wrap' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x000c \-\> B:17:0x000a, CROSS_EDGE: B:24:0x002d \-\> B:15:?, CROSS_EDGE: B:26:0x0032 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0016: r2 'i' I\l  0x0004\-0x003b: r0 'count' I\l  0x0009\-0x003b: r1 'sortedFocusables' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<TT;\>;\l  0x001b\-0x003b: r2 'comparator' Landroidx\/customview\/widget\/FocusStrategy$SequentialComparator;, signature: Landroidx\/customview\/widget\/FocusStrategy$SequentialComparator\<TT;\>;\l  0x0000\-0x003b: r5 'focusables' Ljava\/lang\/Object;, signature: TL;\l  0x0000\-0x003b: r6 'collectionAdapter' Landroidx\/customview\/widget\/FocusStrategy$CollectionAdapter;, signature: Landroidx\/customview\/widget\/FocusStrategy$CollectionAdapter\<TL;TT;\>;\l  0x0000\-0x003b: r7 'adapter' Landroidx\/customview\/widget\/FocusStrategy$BoundsAdapter;, signature: Landroidx\/customview\/widget\/FocusStrategy$BoundsAdapter\<TT;\>;\l  0x0000\-0x003b: r8 'focused' Ljava\/lang\/Object;, signature: TT;\l  \-1 \-0x003b: r9 'direction' I\l  \-1 \-0x003b: r10 'isLayoutRtl' Z\l  \-1 \-0x003b: r11 'wrap' Z\lTYPE_VARS: [T, L]\lSIGNATURE: \<L:Ljava\/lang\/Object;T:Ljava\/lang\/Object;\>(TL;Landroidx\/customview\/widget\/FocusStrategy$CollectionAdapter\<TL;TT;\>;Landroidx\/customview\/widget\/FocusStrategy$BoundsAdapter\<TT;\>;TT;IZZ)TT;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_17;
Node_27 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_23;
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

