digraph "CFG forandroidx.customview.widget.FocusStrategy.majorAxisDistanceToFarEdgeRaw(ILandroid\/graphics\/Rect;Landroid\/graphics\/Rect;)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|switch(r2) \{\l    case 17: goto L11;\l    case 33: goto L9;\l    case 66: goto L7;\l    case 130: goto L5;\l    default: goto L2;\l\}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003}"];
Node_17 [shape=record,label="{17\:\ 0x000a|throw new java.lang.IllegalArgumentException(\"direction must be one of \{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT\}.\")\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b}"];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|return r4.bottom \- r3.bottom\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\l|return r4.right \- r3.right\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017}"];
Node_23 [shape=record,label="{23\:\ 0x001c|RETURN\l|return r3.top \- r4.top\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d}"];
Node_25 [shape=record,label="{25\:\ 0x0022|RETURN\l|return r3.left \- r4.left\l}"];
MethodNode[shape=record,label="{private static int androidx.customview.widget.FocusStrategy.majorAxisDistanceToFarEdgeRaw((r2v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'source' android.graphics.Rect A[D('source' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'dest' android.graphics.Rect A[D('dest' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:14:?, CROSS_EDGE: B:21:0x0016 \-\> B:14:?, CROSS_EDGE: B:23:0x001c \-\> B:14:?, CROSS_EDGE: B:25:0x0022 \-\> B:14:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_20;
Node_15 -> Node_22;
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

