digraph "CFG forandroidx.print.PrintHelper.PrintUriAdapter.1.onPostExecute(Landroid\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onPostExecute(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r10 == null) goto L20\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x0007|if (androidx.print.PrintHelper.PRINT_ACTIVITY_RESPECTS_ORIENTATION == false) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if (r9.this$1.this$0.mOrientation != 0) goto L20\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|monitor\-enter(r9)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|TRY_ENTER\lTryCatch #0 \{, blocks: (B:9:0x0012, B:10:0x001a), top: B:24:0x0012 \}\lCatch: all \-\> 0x0042\l|android.print.PrintAttributes$MediaSize r0 = r9.this$1.mAttributes.getMediaSize()     \/\/ Catch: java.lang.Throwable \-\> L42\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:9:0x0012, B:10:0x001a), top: B:24:0x0012 \}\lCatch: all \-\> 0x0042\l|monitor\-exit(r9)     \/\/ Catch: java.lang.Throwable \-\> L42\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|if (r0 == null) goto L20\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d}"];
Node_13 [shape=record,label="{13\:\ 0x0025|if (r0.isPortrait() == androidx.print.PrintHelper.isPortrait(r10)) goto L20\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|android.graphics.Matrix r7 = new android.graphics.Matrix()\lr7.postRotate(90.0f)\landroid.graphics.Bitmap r10 = android.graphics.Bitmap.createBitmap(r10, 0, 0, r10.getWidth(), r10.getHeight(), r7, true)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|REMOVE\lExcHandler: all \-\> 0x0042\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|TRY_ENTER\lTRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0042\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|REMOVE\l|throw r10\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|PHI: r10 \l  PHI: (r10v1 android.graphics.Bitmap) = (r10v0 android.graphics.Bitmap), (r10v0 android.graphics.Bitmap), (r10v0 android.graphics.Bitmap), (r10v9 android.graphics.Bitmap), (r10v0 android.graphics.Bitmap) binds: [B:3:0x0003, B:11:0x001b, B:13:0x0025, B:14:0x0027, B:7:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|r9.this$1.mBitmap = r10\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|if (r10 == null) goto L25\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|android.print.PrintDocumentInfo r10 = new android.print.PrintDocumentInfo.Builder(r9.this$1.mJobName).setContentType(1).setPageCount(1).build()\lr1 = true ^ r3.equals(r4)\lr5.onLayoutFinished(r10, r1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|r9.this$1.mLoadBitmap = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|r5.onLayoutFailed(null)\l}"];
MethodNode[shape=record,label="{protected void androidx.print.PrintHelper.PrintUriAdapter.1.onPostExecute((r9v0 'this' androidx.print.PrintHelper$PrintUriAdapter$1 A[IMMUTABLE_TYPE, THIS]), (r10v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0071 \-\> B:22:0x0076, CROSS_EDGE: B:13:0x0025 \-\> B:18:0x0045, CROSS_EDGE: B:11:0x001b \-\> B:18:0x0045, CROSS_EDGE: B:17:0x0044 \-\> B:1:?, CROSS_EDGE: B:24:0x0012 \-\> B:15:0x0042, CROSS_EDGE: B:7:0x000f \-\> B:18:0x0045, CROSS_EDGE: B:5:0x0007 \-\> B:8:0x0011, CROSS_EDGE: B:3:0x0003 \-\> B:18:0x0045\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lBRIDGED_BY: androidx.print.PrintHelper.PrintUriAdapter.1.onPostExecute(android.graphics.Bitmap):void\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_24;
Node_24 -> Node_9;
Node_24 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_25;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_18;
Node_25 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_21 -> Node_22;
}

