digraph "CFG forandroidx.print.PrintHelper.PrintUriAdapter.1.onCancelled(Landroid\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.print.PrintDocumentAdapter$LayoutResultCallback) = (r2 I:androidx.print.PrintHelper$PrintUriAdapter$1) androidx.print.PrintHelper.PrintUriAdapter.1.val$layoutResultCallback android.print.PrintDocumentAdapter$LayoutResultCallback  (LINE:494)\l0x0002: INVOKE  (r0 I:android.print.PrintDocumentAdapter$LayoutResultCallback) type: VIRTUAL call: android.print.PrintDocumentAdapter.LayoutResultCallback.onLayoutCancelled():void A[MD:():void (c)]\l0x0005: IGET  (r0 I:androidx.print.PrintHelper$PrintUriAdapter) = (r2 I:androidx.print.PrintHelper$PrintUriAdapter$1) androidx.print.PrintHelper.PrintUriAdapter.1.this$1 androidx.print.PrintHelper$PrintUriAdapter  (LINE:495)\l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: IPUT  \l  (r1 I:android.os.AsyncTask\<android.net.Uri, java.lang.Boolean, android.graphics.Bitmap\>)\l  (r0 I:androidx.print.PrintHelper$PrintUriAdapter)\l androidx.print.PrintHelper.PrintUriAdapter.mLoadBitmap android.os.AsyncTask \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:496)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.print.PrintHelper.PrintUriAdapter.1.onCancelled((r2 'this' I:androidx.print.PrintHelper$PrintUriAdapter$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.Bitmap A[D('result' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000a: r3 'result' Landroid\/graphics\/Bitmap;\lBRIDGED_BY: androidx.print.PrintHelper.PrintUriAdapter.1.onCancelled(android.graphics.Bitmap):void\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

