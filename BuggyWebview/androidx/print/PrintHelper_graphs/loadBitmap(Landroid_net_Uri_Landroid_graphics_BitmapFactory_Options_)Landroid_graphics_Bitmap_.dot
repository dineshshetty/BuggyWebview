digraph "CFG forandroidx.print.PrintHelper.loadBitmap(Landroid\/net\/Uri;Landroid\/graphics\/BitmapFactory$Options;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.String r0 = \"close fail \"\ljava.lang.String r1 = androidx.print.PrintHelper.LOG_TAG\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r6 == null) goto L25\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|android.content.Context r2 = r5.mContext\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r2 == null) goto L25\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|r3 = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:7:0x000b), top: B:23:0x000b \}\lCatch: all \-\> 0x0024\l|r3 = r2.getContentResolver().openInputStream(r6)     \/\/ Catch: java.lang.Throwable \-\> L24\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|DONT_GENERATE\l|if (r3 == null) goto L9\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|return android.graphics.BitmapFactory.decodeStream(r3, null, r7)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|TRY_ENTER\lTRY_LEAVE\lDONT_GENERATE\lTryCatch #1 \{IOException \-\> 0x001f, blocks: (B:9:0x001b), top: B:25:0x001b \}\lCatch: IOException \-\> 0x001f\l|r3.close()     \/\/ Catch: java.io.IOException \-\> L1f\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|DONT_GENERATE\lExcHandler: IOException \-\> 0x001f\l|java.io.IOException r4 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|DONT_GENERATE\l|android.util.Log.w(r1, r0, r4)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|ExcHandler: all \-\> 0x0024\lPHI: r3 \l  PHI: (r3v1 'is' java.io.InputStream) = (r3v0 'is' java.io.InputStream), (r3v2 'is' java.io.InputStream) binds: [B:23:0x000b, B:24:?] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|FINALLY_INSNS\l|if (r3 == null) goto L19\l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|throw r2\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|TRY_ENTER\lTRY_LEAVE\lFINALLY_INSNS\lTryCatch #2 \{IOException \-\> 0x002b, blocks: (B:16:0x0027), top: B:27:0x0027 \}\lCatch: IOException \-\> 0x002b\l|r3.close()     \/\/ Catch: java.io.IOException \-\> L2b\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|FINALLY_INSNS\lExcHandler: IOException \-\> 0x002b\l|java.io.IOException r4 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|FINALLY_INSNS\l|android.util.Log.w(androidx.print.PrintHelper.LOG_TAG, \"close fail \", r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0030}"];
Node_22 [shape=record,label="{22\:\ 0x0037|throw new java.lang.IllegalArgumentException(\"bad argument to loadBitmap\")\l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap androidx.print.PrintHelper.loadBitmap((r5v0 'this' androidx.print.PrintHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 'uri' android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'o' android.graphics.BitmapFactory$Options A[D('o' android.graphics.BitmapFactory$Options), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | CROSS_EDGE: B:9:0x001b \-\> B:13:0x0023, CROSS_EDGE: B:12:0x0020 \-\> B:13:0x0023, CROSS_EDGE: B:25:0x001b \-\> B:11:0x001f, CROSS_EDGE: B:20:0x002f \-\> B:1:?, CROSS_EDGE: B:16:0x0027 \-\> B:20:0x002f, CROSS_EDGE: B:19:0x002c \-\> B:20:0x002f, CROSS_EDGE: B:27:0x0027 \-\> B:18:0x002b, CROSS_EDGE: B:23:0x000b \-\> B:14:0x0024, CROSS_EDGE: B:22:0x0037 \-\> B:1:?, CROSS_EDGE: B:3:0x0004 \-\> B:21:0x0030\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:7:0x000b), top: B:23:0x000b \}, TryCatch #1 \{IOException \-\> 0x001f, blocks: (B:9:0x001b), top: B:25:0x001b \}, TryCatch #2 \{IOException \-\> 0x002b, blocks: (B:16:0x0027), top: B:27:0x0027 \}\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/FileNotFoundException;]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [809=4]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_21;
Node_6 -> Node_23;
Node_23 -> Node_7;
Node_23 -> Node_14;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_8 -> Node_13;
Node_8 -> Node_25[style=dashed];
Node_13 -> Node_1;
Node_25 -> Node_9;
Node_25 -> Node_11;
Node_9 -> Node_13;
Node_9 -> Node_26;
Node_26 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_24 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_20;
Node_15 -> Node_27[style=dashed];
Node_20 -> Node_1;
Node_27 -> Node_16;
Node_27 -> Node_18;
Node_16 -> Node_20;
Node_16 -> Node_28;
Node_28 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_1;
}

