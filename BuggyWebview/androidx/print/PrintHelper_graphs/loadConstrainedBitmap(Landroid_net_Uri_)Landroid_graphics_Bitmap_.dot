digraph "CFG forandroidx.print.PrintHelper.loadConstrainedBitmap(Landroid\/net\/Uri;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r11 == null) goto L53\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
Node_4 [shape=record,label="{4\:\ 0x0004|if (r10.mContext == null) goto L53\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory.Options()\lr0.inJustDecodeBounds = true\lloadBitmap(r11, r0)\lint r2 = r0.outWidth\lint r3 = r0.outHeight\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r2 \<= 0) goto L52\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|if (r3 \> 0) goto L7\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|int r5 = java.lang.Math.max(r2, r3)\lr6 = 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_START\lLOOP:0: B:10:0x0020\-\>B:12:0x0024\lPHI: r5 r6 \l  PHI: (r5v1 'imageSide' int) = (r5v0 'imageSide' int), (r5v2 'imageSide' int) binds: [B:9:0x001b, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'sampleSize' int) = (r6v0 'sampleSize' int), (r6v2 'sampleSize' int) binds: [B:9:0x001b, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|if (r5 \<= androidx.print.PrintHelper.MAX_PRINT_SIZE) goto L11\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lLOOP:0: B:10:0x0020\-\>B:12:0x0024\l|int r5 = r5 \>\>\> 1\lint r6 = r6 \<\< 1\l}"];
Node_57 [shape=record,label="{57\:\ 0x0029|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|if (r6 \<= 0) goto L51\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b}"];
Node_15 [shape=record,label="{15\:\ 0x0030|if ((java.lang.Math.min(r2, r3) \/ r6) \> 0) goto L15\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|java.lang.Object r7 = r10.mLock\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|monitor\-enter(r7)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|TRY_ENTER\lTRY_LEAVE\lTryCatch #4 \{all \-\> 0x005f, blocks: (B:19:0x0036), top: B:53:0x0036 \}\lCatch: all \-\> 0x005f\l|android.graphics.BitmapFactory$Options r8 = new android.graphics.BitmapFactory.Options()     \/\/ Catch: java.lang.Throwable \-\> L5f\lr10.mDecodeOptions = r8     \/\/ Catch: java.lang.Throwable \-\> L5f\lr8.inMutable = true     \/\/ Catch: java.lang.Throwable \-\> L5f\lr10.mDecodeOptions.inSampleSize = r6     \/\/ Catch: java.lang.Throwable \-\> L5f\landroid.graphics.BitmapFactory$Options r1 = r10.mDecodeOptions     \/\/ Catch: java.lang.Throwable \-\> L5f\l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x0065, blocks: (B:20:0x0045, B:41:0x0063), top: B:53:0x0036 \}\lCatch: all \-\> 0x0065\l|monitor\-exit(r7)     \/\/ Catch: java.lang.Throwable \-\> L65\l}"];
Node_51 [shape=record,label="{51\:\ 0x0046|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x0054, blocks: (B:21:0x0046), top: B:51:0x0046 \}\lCatch: all \-\> 0x0054\l|android.graphics.Bitmap r7 = loadBitmap(r11, r1)     \/\/ Catch: java.lang.Throwable \-\> L54\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|java.lang.Object r8 = r10.mLock\l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|monitor\-enter(r8)\l}"];
Node_49 [shape=record,label="{49\:\ 0x004d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x004d|TRY_ENTER\lTryCatch #0 \{, blocks: (B:24:0x004d, B:25:0x004f), top: B:49:0x004d \}\lCatch: all \-\> 0x0051\l|r10.mDecodeOptions = null     \/\/ Catch: java.lang.Throwable \-\> L51\l}"];
Node_25 [shape=record,label="{25\:\ 0x004f|TryCatch #0 \{, blocks: (B:24:0x004d, B:25:0x004f), top: B:49:0x004d \}\lCatch: all \-\> 0x0051\l|monitor\-exit(r8)     \/\/ Catch: java.lang.Throwable \-\> L51\l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|RETURN\l|return r7\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0051|REMOVE\lExcHandler: all \-\> 0x0051\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_28 [shape=record,label="{28\:\ 0x0052|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0051\l}"];
Node_29 [shape=record,label="{29\:\ 0x0053|REMOVE\l|throw r4\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0054|ExcHandler: all \-\> 0x0054\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_31 [shape=record,label="{31\:\ 0x0055}"];
Node_32 [shape=record,label="{32\:\ 0x0057|monitor\-enter(r10.mLock)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0058|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0058|TRY_ENTER\lTryCatch #3 \{, blocks: (B:33:0x0058, B:34:0x005a), top: B:54:0x0058 \}\lCatch: all \-\> 0x005c\l|r10.mDecodeOptions = null     \/\/ Catch: java.lang.Throwable \-\> L5c\l}"];
Node_34 [shape=record,label="{34\:\ 0x005a|TRY_LEAVE\lTryCatch #3 \{, blocks: (B:33:0x0058, B:34:0x005a), top: B:54:0x0058 \}\lCatch: all \-\> 0x005c\l}"];
Node_35 [shape=record,label="{35\:\ 0x005b|throw r7\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x005c|REMOVE\lExcHandler: all \-\> 0x005c\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_37 [shape=record,label="{37\:\ 0x005d|TRY_ENTER\lTRY_LEAVE\lREMOVE\lCatch: all \-\> 0x005c\l}"];
Node_38 [shape=record,label="{38\:\ 0x005e|REMOVE\l|throw r4\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ 0x0065|ExcHandler: all \-\> 0x0065\l|java.lang.Throwable r4 = th\l}"];
Node_41 [shape=record,label="{41\:\ 0x0063|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{all \-\> 0x0065, blocks: (B:20:0x0045, B:41:0x0063), top: B:53:0x0036 \}\lCatch: all \-\> 0x0065\lPHI: r4 \l  PHI: (r4v2 'th' java.lang.Throwable) = (r4v1 'th' java.lang.Throwable), (r4v3 'th' java.lang.Throwable) binds: [B:40:0x0060, B:43:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r7)     \/\/ Catch: java.lang.Throwable \-\> L65\l}"];
Node_42 [shape=record,label="{42\:\ 0x0064|throw r4\l}"];
Node_39 [shape=record,label="{39\:\ 0x005f|ExcHandler: all \-\> 0x005f\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_40 [shape=record,label="{40\:\ 0x0060|r4 = r1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0067|RETURN\l|return null\l}"];
Node_46 [shape=record,label="{46\:\ 0x0068|RETURN\l|return null\l}"];
Node_47 [shape=record,label="{47\:\ 0x0069}"];
Node_48 [shape=record,label="{48\:\ 0x0070|throw new java.lang.IllegalArgumentException(\"bad argument to getScaledBitmap\")\l}"];
MethodNode[shape=record,label="{android.graphics.Bitmap androidx.print.PrintHelper.loadConstrainedBitmap((r10v0 'this' androidx.print.PrintHelper A[IMMUTABLE_TYPE, THIS]), (r11v0 'uri' android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0024 \-\> B:10:0x0020, CROSS_EDGE: B:29:0x0053 \-\> B:1:?, CROSS_EDGE: B:49:0x004d \-\> B:27:0x0051, CROSS_EDGE: B:35:0x005b \-\> B:1:?, CROSS_EDGE: B:38:0x005e \-\> B:1:?, CROSS_EDGE: B:54:0x0058 \-\> B:36:0x005c, CROSS_EDGE: B:51:0x0046 \-\> B:30:0x0054, CROSS_EDGE: B:42:0x0064 \-\> B:1:?, CROSS_EDGE: B:43:0x0065 \-\> B:41:0x0063, CROSS_EDGE: B:53:0x0036 \-\> B:39:0x005f, CROSS_EDGE: B:45:0x0067 \-\> B:1:?, CROSS_EDGE: B:13:0x0029 \-\> B:45:0x0067, CROSS_EDGE: B:46:0x0068 \-\> B:1:?, CROSS_EDGE: B:6:0x0016 \-\> B:46:0x0068, CROSS_EDGE: B:48:0x0070 \-\> B:1:?, CROSS_EDGE: B:2:0x0000 \-\> B:47:0x0069\lINLINE_NOT_NEEDED\lTryCatch #1 \{all \-\> 0x0054, blocks: (B:21:0x0046), top: B:51:0x0046 \}, TryCatch #2 \{all \-\> 0x0065, blocks: (B:20:0x0045, B:41:0x0063), top: B:53:0x0036 \}, TryCatch #4 \{all \-\> 0x005f, blocks: (B:19:0x0036), top: B:53:0x0036 \}\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/FileNotFoundException;]\lJadxCommentsAttr\{\l DEBUG: \l \-\> Finally have unexpected throw blocks count: 2, expect 1\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_47;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_47;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_46;
Node_7 -> Node_9;
Node_7 -> Node_46[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_57;
Node_12 -> Node_10;
Node_57 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_45;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_45[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_53;
Node_53 -> Node_19;
Node_53 -> Node_43;
Node_53 -> Node_39;
Node_19 -> Node_20;
Node_19 -> Node_56;
Node_20 -> Node_51;
Node_51 -> Node_21;
Node_51 -> Node_30;
Node_21 -> Node_22;
Node_21 -> Node_52;
Node_22 -> Node_23;
Node_23 -> Node_49;
Node_49 -> Node_24;
Node_49 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_50;
Node_26 -> Node_1;
Node_50 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_1;
Node_52 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_54;
Node_54 -> Node_33;
Node_54 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_55;
Node_35 -> Node_1;
Node_55 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_1;
Node_56 -> Node_39;
Node_43 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_1;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_45 -> Node_1;
Node_46 -> Node_1;
Node_47 -> Node_48;
Node_48 -> Node_1;
}

