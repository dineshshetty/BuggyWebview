digraph "CFG forandroidx.print.PrintHelper.printBitmap(Ljava\/lang\/String;Landroid\/net\/Uri;Landroidx\/print\/PrintHelper$OnPrintFinishCallback;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:356)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:357)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:androidx.print.PrintHelper$PrintUriAdapter) =  androidx.print.PrintHelper$PrintUriAdapter  (LINE:360)\l0x0009: IGET  (r7 I:int) = (r8 I:androidx.print.PrintHelper) androidx.print.PrintHelper.mScaleMode int \l0x000b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x000c: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x000d: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('jobName' java.lang.String)]) \l0x000e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('imageFile' android.net.Uri)]) \l0x000f: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('callback' androidx.print.PrintHelper$OnPrintFinishCallback)]) \l0x0010: INVOKE  \l  (r2 I:androidx.print.PrintHelper$PrintUriAdapter)\l  (r3 I:androidx.print.PrintHelper)\l  (r4 I:java.lang.String)\l  (r5 I:android.net.Uri)\l  (r6 I:androidx.print.PrintHelper$OnPrintFinishCallback)\l  (r7 I:int)\l type: DIRECT call: androidx.print.PrintHelper.PrintUriAdapter.\<init\>(androidx.print.PrintHelper, java.lang.String, android.net.Uri, androidx.print.PrintHelper$OnPrintFinishCallback, int):void A[MD:(androidx.print.PrintHelper, java.lang.String, android.net.Uri, androidx.print.PrintHelper$OnPrintFinishCallback, int):void (m)]\l0x0013: IGET  (r1 I:android.content.Context) = (r8 I:androidx.print.PrintHelper) androidx.print.PrintHelper.mContext android.content.Context  (LINE:363)\l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"print\"  (LINE:364)\l0x0017: INVOKE  (r1 I:java.lang.Object) = (r1 I:android.content.Context), (r2 I:java.lang.String) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.String):java.lang.Object A[MD:(java.lang.String):java.lang.Object (c)]\l0x001b: CHECK_CAST (r1 I:android.print.PrintManager) = (android.print.PrintManager) (r1 I:??[OBJECT, ARRAY]) \l0x001d: NEW_INSTANCE  (r2 I:android.print.PrintAttributes$Builder) =  android.print.PrintAttributes$Builder  (LINE:365)\l0x001f: INVOKE  (r2 I:android.print.PrintAttributes$Builder) type: DIRECT call: android.print.PrintAttributes.Builder.\<init\>():void A[MD:():void (c)]\l0x0022: IGET  (r3 I:int) = (r8 I:androidx.print.PrintHelper) androidx.print.PrintHelper.mColorMode int  (LINE:366)\l0x0024: INVOKE  (r2 I:android.print.PrintAttributes$Builder A[D('builder' android.print.PrintAttributes$Builder)]), (r3 I:int) type: VIRTUAL call: android.print.PrintAttributes.Builder.setColorMode(int):android.print.PrintAttributes$Builder A[MD:(int):android.print.PrintAttributes$Builder (c)]\l0x0027: IGET  (r3 I:int) = (r8 I:androidx.print.PrintHelper) androidx.print.PrintHelper.mOrientation int  (LINE:368)\l0x0029: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0038 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:370)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: SGET  (r3 I:android.print.PrintAttributes$MediaSize) =  android.print.PrintAttributes.MediaSize.UNKNOWN_PORTRAIT android.print.PrintAttributes$MediaSize  (LINE:371)\l0x0034: INVOKE  \l  (r2 I:android.print.PrintAttributes$Builder A[D('builder' android.print.PrintAttributes$Builder)])\l  (r3 I:android.print.PrintAttributes$MediaSize)\l type: VIRTUAL call: android.print.PrintAttributes.Builder.setMediaSize(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder A[MD:(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: INVOKE  (r3 I:android.print.PrintAttributes) = (r2 I:android.print.PrintAttributes$Builder A[D('builder' android.print.PrintAttributes$Builder)]) type: VIRTUAL call: android.print.PrintAttributes.Builder.build():android.print.PrintAttributes A[MD:():android.print.PrintAttributes (c)] (LINE:373)\l0x0041: INVOKE  \l  (r1 I:android.print.PrintManager A[D('printManager' android.print.PrintManager)])\l  (r9 I:java.lang.String A[D('jobName' java.lang.String)])\l  (r0 I:android.print.PrintDocumentAdapter A[D('printDocumentAdapter' android.print.PrintDocumentAdapter)])\l  (r3 I:android.print.PrintAttributes A[D('attr' android.print.PrintAttributes)])\l type: VIRTUAL call: android.print.PrintManager.print(java.lang.String, android.print.PrintDocumentAdapter, android.print.PrintAttributes):android.print.PrintJob A[MD:(java.lang.String, android.print.PrintDocumentAdapter, android.print.PrintAttributes):android.print.PrintJob (c)] (LINE:375)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|RETURN\l|0x0044: RETURN    (LINE:376)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: SGET  (r3 I:android.print.PrintAttributes$MediaSize) =  android.print.PrintAttributes.MediaSize.UNKNOWN_LANDSCAPE android.print.PrintAttributes$MediaSize  (LINE:369)\l0x003a: INVOKE  \l  (r2 I:android.print.PrintAttributes$Builder A[D('builder' android.print.PrintAttributes$Builder)])\l  (r3 I:android.print.PrintAttributes$MediaSize)\l type: VIRTUAL call: android.print.PrintAttributes.Builder.setMediaSize(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder A[MD:(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder (c)]\l}"];
MethodNode[shape=record,label="{public void androidx.print.PrintHelper.printBitmap((r8 'this' I:androidx.print.PrintHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.String A[D('jobName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.net.Uri A[D('imageFile' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:androidx.print.PrintHelper$OnPrintFinishCallback A[D('callback' androidx.print.PrintHelper$OnPrintFinishCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0044 \-\> B:1:?, CROSS_EDGE: B:10:0x0030 \-\> B:13:0x003d, CROSS_EDGE: B:12:0x0038 \-\> B:13:0x003d, CROSS_EDGE: B:6:0x002a \-\> B:12:0x0038\lDebug Info:\l  0x0013\-0x0044: r0 'printDocumentAdapter' Landroid\/print\/PrintDocumentAdapter;\l  0x001d\-0x0044: r1 'printManager' Landroid\/print\/PrintManager;\l  0x0022\-0x0044: r2 'builder' Landroid\/print\/PrintAttributes$Builder;\l  0x0041\-0x0044: r3 'attr' Landroid\/print\/PrintAttributes;\l  \-1 \-0x0044: r9 'jobName' Ljava\/lang\/String;\l  \-1 \-0x0044: r10 'imageFile' Landroid\/net\/Uri;\l  \-1 \-0x0044: r11 'callback' Landroidx\/print\/PrintHelper$OnPrintFinishCallback;\lEXCEPTIONS:[Ljava\/io\/FileNotFoundException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_9;
Node_7 -> Node_12[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_12 -> Node_13;
}

