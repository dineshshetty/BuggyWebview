digraph "CFG forandroidx.print.PrintHelper.copyAttributes(Landroid\/print\/PrintAttributes;)Landroid\/print\/PrintAttributes$Builder;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.print.PrintAttributes$Builder) =  android.print.PrintAttributes$Builder  (LINE:558)\l0x0002: INVOKE  (r0 I:android.print.PrintAttributes$Builder) type: DIRECT call: android.print.PrintAttributes.Builder.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:android.print.PrintAttributes$MediaSize) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getMediaSize():android.print.PrintAttributes$MediaSize A[MD:():android.print.PrintAttributes$MediaSize (c)] (LINE:559)\l0x0009: INVOKE  (r0 I:android.print.PrintAttributes$Builder) = (r0 I:android.print.PrintAttributes$Builder), (r1 I:android.print.PrintAttributes$MediaSize) type: VIRTUAL call: android.print.PrintAttributes.Builder.setMediaSize(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder A[MD:(android.print.PrintAttributes$MediaSize):android.print.PrintAttributes$Builder (c)]\l0x000d: INVOKE  (r1 I:android.print.PrintAttributes$Resolution) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getResolution():android.print.PrintAttributes$Resolution A[MD:():android.print.PrintAttributes$Resolution (c)] (LINE:560)\l0x0011: INVOKE  (r0 I:android.print.PrintAttributes$Builder) = (r0 I:android.print.PrintAttributes$Builder), (r1 I:android.print.PrintAttributes$Resolution) type: VIRTUAL call: android.print.PrintAttributes.Builder.setResolution(android.print.PrintAttributes$Resolution):android.print.PrintAttributes$Builder A[MD:(android.print.PrintAttributes$Resolution):android.print.PrintAttributes$Builder (c)]\l0x0015: INVOKE  (r1 I:android.print.PrintAttributes$Margins) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getMinMargins():android.print.PrintAttributes$Margins A[MD:():android.print.PrintAttributes$Margins (c)] (LINE:561)\l0x0019: INVOKE  (r0 I:android.print.PrintAttributes$Builder) = (r0 I:android.print.PrintAttributes$Builder), (r1 I:android.print.PrintAttributes$Margins) type: VIRTUAL call: android.print.PrintAttributes.Builder.setMinMargins(android.print.PrintAttributes$Margins):android.print.PrintAttributes$Builder A[MD:(android.print.PrintAttributes$Margins):android.print.PrintAttributes$Builder (c)]\l0x001d: INVOKE  (r1 I:int) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getColorMode():int A[MD:():int (c)] (LINE:563)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: INVOKE  (r1 I:int) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getColorMode():int A[MD:():int (c)] (LINE:564)\l0x0027: INVOKE  (r0 I:android.print.PrintAttributes$Builder A[D('b' android.print.PrintAttributes$Builder)]), (r1 I:int) type: VIRTUAL call: android.print.PrintAttributes.Builder.setColorMode(int):android.print.PrintAttributes$Builder A[MD:(int):android.print.PrintAttributes$Builder (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:567)\l0x002c: CONST  (r2 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:10:0x003d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: INVOKE  (r1 I:int) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getDuplexMode():int A[MD:():int (c)] (LINE:568)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: INVOKE  (r1 I:int) = (r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes)]) type: VIRTUAL call: android.print.PrintAttributes.getDuplexMode():int A[MD:():int (c)] (LINE:569)\l0x003a: INVOKE  (r0 I:android.print.PrintAttributes$Builder A[D('b' android.print.PrintAttributes$Builder)]), (r1 I:int) type: VIRTUAL call: android.print.PrintAttributes.Builder.setDuplexMode(int):android.print.PrintAttributes$Builder A[MD:(int):android.print.PrintAttributes$Builder (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|RETURN\l|0x003d: RETURN  (r0 I:android.print.PrintAttributes$Builder A[D('b' android.print.PrintAttributes$Builder)])  (LINE:573)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static android.print.PrintAttributes$Builder androidx.print.PrintHelper.copyAttributes((r3 I:android.print.PrintAttributes A[D('other' android.print.PrintAttributes), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0034 \-\> B:10:0x003d, CROSS_EDGE: B:6:0x002e \-\> B:10:0x003d, CROSS_EDGE: B:3:0x0021 \-\> B:5:0x002a\lDebug Info:\l  0x001d\-0x003d: r0 'b' Landroid\/print\/PrintAttributes$Builder;\l  \-1 \-0x003d: r3 'other' Landroid\/print\/PrintAttributes;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

