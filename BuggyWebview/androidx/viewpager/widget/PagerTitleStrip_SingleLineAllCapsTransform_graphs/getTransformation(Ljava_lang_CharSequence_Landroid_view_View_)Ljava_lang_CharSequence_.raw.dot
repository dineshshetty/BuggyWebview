digraph "CFG forandroidx.viewpager.widget.PagerTitleStrip.SingleLineAllCapsTransform.getTransformation(Ljava\/lang\/CharSequence;Landroid\/view\/View;)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r3 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)]) = \l  (r2 I:android.text.method.SingleLineTransformationMethod)\l  (r3 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])\l  (r4 I:android.view.View A[D('view' android.view.View)])\l type: SUPER call: android.text.method.SingleLineTransformationMethod.getTransformation(java.lang.CharSequence, android.view.View):java.lang.CharSequence A[MD:(java.lang.CharSequence, android.view.View):java.lang.CharSequence (c)] (LINE:99)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0011  (LINE:100)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x000a: IGET  (r1 I:java.util.Locale) = (r2 I:androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform) androidx.viewpager.widget.PagerTitleStrip.SingleLineAllCapsTransform.mLocale java.util.Locale \l0x000c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.util.Locale) type: VIRTUAL call: java.lang.String.toUpperCase(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN  (r0 I:java.lang.CharSequence) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: RETURN  (r0 I:java.lang.CharSequence) \l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.viewpager.widget.PagerTitleStrip.SingleLineAllCapsTransform.getTransformation((r2 'this' I:androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('source' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0011 \-\> B:14:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r3 'source' Ljava\/lang\/CharSequence;\l  \-1 \-0x0012: r4 'view' Landroid\/view\/View;\lMETHOD_OVERRIDE: [ClspMth\{android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence, android.view.View):java.lang.CharSequence\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
}

