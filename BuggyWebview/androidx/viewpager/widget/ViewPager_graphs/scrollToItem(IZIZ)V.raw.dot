digraph "CFG forandroidx.viewpager.widget.ViewPager.scrollToItem(IZIZ)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.viewpager.widget.ViewPager$ItemInfo) = (r7 I:androidx.viewpager.widget.ViewPager), (r8 I:int A[D('item' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.infoForPosition(int):androidx.viewpager.widget.ViewPager$ItemInfo A[MD:(int):androidx.viewpager.widget.ViewPager$ItemInfo (m)] (LINE:676)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:677)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('curInfo' androidx.viewpager.widget.ViewPager$ItemInfo)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001d  (LINE:678)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: INVOKE  (r2 I:int) = (r7 I:androidx.viewpager.widget.ViewPager) type: DIRECT call: androidx.viewpager.widget.ViewPager.getClientWidth():int A[MD:():int (m)] (LINE:679)\l0x000b: CAST (r3 I:float) = (float) (r2 I:int A[D('width' int)])  (LINE:680)\l0x000c: IGET  (r4 I:float) = (r7 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mFirstOffset float \l0x000e: IGET  (r5 I:float) = (r0 I:androidx.viewpager.widget.ViewPager$ItemInfo A[D('curInfo' androidx.viewpager.widget.ViewPager$ItemInfo)]) androidx.viewpager.widget.ViewPager.ItemInfo.offset float \l0x0010: IGET  (r6 I:float) = (r7 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mLastOffset float \l0x0012: INVOKE  (r5 I:float) = (r5 I:float), (r6 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:681)\l0x0016: INVOKE  (r4 I:float) = (r4 I:float), (r5 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:680)\l0x001a: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x001c: CAST (r1 I:int A[D('destX' int)]) = (int) (r3 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x001d|0x001d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:683)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|0x001e: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('smoothScroll' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0029 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|0x0020: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r1 I:int A[D('destX' int)]), (r2 I:int), (r10 I:int A[D('velocity' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.smoothScrollTo(int, int, int):void A[MD:(int, int, int):void (m)] (LINE:684)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0023|0x0023: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dispatchSelected' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:?  (LINE:685)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|0x0025: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r8 I:int A[D('item' int)]) type: DIRECT call: androidx.viewpager.widget.ViewPager.dispatchOnPageSelected(int):void A[MD:(int):void (m)] (LINE:686)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:696)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:696)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dispatchSelected' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x002e  (LINE:689)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r8 I:int A[D('item' int)]) type: DIRECT call: androidx.viewpager.widget.ViewPager.dispatchOnPageSelected(int):void A[MD:(int):void (m)] (LINE:690)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|0x002e: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r2 I:boolean) type: DIRECT call: androidx.viewpager.widget.ViewPager.completeScroll(boolean):void A[MD:(boolean):void (m)] (LINE:692)\l0x0031: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r1 I:int A[D('destX' int)]), (r2 I:int) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.scrollTo(int, int):void A[MD:(int, int):void (s)] (LINE:693)\l0x0034: INVOKE  (r7 I:androidx.viewpager.widget.ViewPager), (r1 I:int A[D('destX' int)]) type: DIRECT call: androidx.viewpager.widget.ViewPager.pageScrolled(int):boolean A[MD:(int):boolean (m)] (LINE:694)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: RETURN    (LINE:696)\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager.widget.ViewPager.scrollToItem((r7 'this' I:androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('item' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('smoothScroll' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('velocity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('dispatchSelected' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0023 \-\> B:29:0x0037, CROSS_EDGE: B:28:0x002e \-\> B:29:0x0037, CROSS_EDGE: B:26:0x0029 \-\> B:28:0x002e, CROSS_EDGE: B:19:0x0005 \-\> B:21:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x001d: r2 'width' I\l  0x0004\-0x0037: r0 'curInfo' Landroidx\/viewpager\/widget\/ViewPager$ItemInfo;\l  0x0005\-0x0037: r1 'destX' I\l  \-1 \-0x0037: r8 'item' I\l  \-1 \-0x0037: r9 'smoothScroll' Z\l  \-1 \-0x0037: r10 'velocity' I\l  \-1 \-0x0037: r11 'dispatchSelected' Z\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_31;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
}

