digraph "CFG forandroidx.viewpager.widget.ViewPager.setOffscreenPageLimit(I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0001|if (r4 \>= 1) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Requested offscreen page limit \")\lr1.append(r4)\lr1.append(\" too small; defaulting to \")\lr1.append(1)\landroid.util.Log.w(androidx.viewpager.widget.ViewPager.TAG, r1.toString())\lr4 = 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|PHI: r4 \l  PHI: (r4v1 'limit' int) = (r4v0 'limit' int), (r4v2 'limit' int) binds: [B:13:0x0001, B:14:0x0003] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|if (r4 == r3.mOffscreenPageLimit) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|r3.mOffscreenPageLimit = r4\lpopulate()\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.viewpager.widget.ViewPager.setOffscreenPageLimit((r3v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r4v0 'limit' int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0024 \-\> B:18:0x002b, CROSS_EDGE: B:13:0x0001 \-\> B:15:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

