digraph "CFG forandroidx.viewpager.widget.ViewPager.fakeDragBy(F)V" {
subgraph cluster_Region_1521084732 {
label = "R(1:(2:(1:22)|(1:(1:(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16))))) | DECL_VAR: java.util.ArrayList\<androidx.viewpager.widget.ViewPager$ItemInfo\> null\l";
node [shape=record,color=blue];
subgraph cluster_Region_964437907 {
label = "R(2:(1:22)|(1:(1:(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1119893591 {
label = "IF [B:26:0x0004] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0004|if (r19.mFakeDragging == false) goto L21\l}"];
subgraph cluster_Region_831204777 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0099|throw new java.lang.IllegalStateException(\"No fake drag in progress. Call beginFakeDrag first.\")\l}"];
}
}
subgraph cluster_Region_612287149 {
label = "R(1:(1:(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16)))";
node [shape=record,color=blue];
subgraph cluster_Region_2095462670 {
label = "R(1:(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1059562565 {
label = "IF [B:28:0x0008] THEN: R(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0008|if (r19.mAdapter != null) goto L7\l}"];
subgraph cluster_Region_501510942 {
label = "R(5:7|(1:9)|(1:12)|(1:15)(1:(1:20))|16)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000b|r19.mLastMotionX += r20\lfloat float r1 = getScrollX()\lfloat float r2 = r1 \- r20\lint int r3 = getClientWidth()\lfloat float r4 = r3 * r19.mFirstOffset\lfloat float r5 = r3 * r19.mLastOffset\landroidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.ItemInfo r6 = r19.mItems.get(0)\landroidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.ItemInfo r7 = r19.mItems.get(r7.size() \- 1)\l}"];
subgraph cluster_IfRegion_1522270486 {
label = "IF [B:31:0x003f] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x003f|if (r6.position != 0) goto L9\l}"];
subgraph cluster_Region_1309723199 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0041|float r4 = r6.offset * r3\l}"];
}
}
subgraph cluster_IfRegion_1835663320 {
label = "IF [B:34:0x0050] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0050|if (r7.position != (r19.mAdapter.getCount() \- 1)) goto L12\l}"];
subgraph cluster_Region_1151338561 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0052|float r5 = r7.offset * r3\l}"];
}
}
subgraph cluster_IfRegion_1578636112 {
label = "IF [B:37:0x0059] THEN: R(1:15) ELSE: R(1:(1:20))";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0059|if (r2 \< r4) goto L15\l}"];
subgraph cluster_Region_787778013 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x005b|r2 = r4\l}"];
}
subgraph cluster_Region_1470701677 {
label = "R(1:(1:20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1616570126 {
label = "IF [B:40:0x005f] THEN: R(1:20) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x005f|if (r2 \> r5) goto L20\l}"];
subgraph cluster_Region_1997225471 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0061|r2 = r5\l}"];
}
}
}
}
Node_42 [shape=record,label="{42\:\ 0x0062|PHI: r2 \l  PHI: (r2v3 'scrollX' float) = (r2v1 'scrollX' float), (r2v2 'scrollX' float), (r2v4 'scrollX' float) binds: [B:40:0x005f, B:41:0x0061, B:38:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|r19.mLastMotionX += r2 \- ((int) r2)\lscrollTo((int) r2, getScrollY())\lpageScrolled((int) r2)\llong long r17 = android.os.SystemClock.uptimeMillis()\landroid.view.MotionEvent android.view.MotionEvent r8 = android.view.MotionEvent.obtain(r19.mFakeDragBeginTime, r17, 2, r19.mLastMotionX, 0.0f, 0)\lr19.mVelocityTracker.addMovement(r8)\lr8.recycle()\l}"];
}
}
}
}
}
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0006}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x000a}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0046|PHI: r4 \l  PHI: (r4v2 'leftBound' float) = (r4v1 'leftBound' float), (r4v3 'leftBound' float) binds: [B:31:0x003f, B:32:0x0041] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0057|PHI: r5 \l  PHI: (r5v3 'rightBound' float) = (r5v2 'rightBound' float), (r5v4 'rightBound' float) binds: [B:34:0x0050, B:35:0x0052] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0091}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x005d}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0092}"];
MethodNode[shape=record,label="{public void androidx.viewpager.widget.ViewPager.fakeDragBy((r19v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r20v0 'xOffset' float A[D('xOffset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0091 \-\> B:24:?, CROSS_EDGE: B:41:0x0061 \-\> B:42:0x0062, CROSS_EDGE: B:40:0x005f \-\> B:42:0x0062, CROSS_EDGE: B:34:0x0050 \-\> B:36:0x0057, CROSS_EDGE: B:31:0x003f \-\> B:33:0x0046, CROSS_EDGE: B:45:0x0099 \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_26 -> Node_27[style=dashed];
Node_26 -> Node_44;
Node_45 -> Node_24;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_33[style=dashed];
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_24;
Node_33 -> Node_34;
Node_36 -> Node_37;
Node_43 -> Node_24;
Node_39 -> Node_40;
Node_44 -> Node_45;
}

