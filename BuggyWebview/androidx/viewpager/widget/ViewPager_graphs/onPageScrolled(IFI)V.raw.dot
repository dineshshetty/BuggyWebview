digraph "CFG forandroidx.viewpager.widget.ViewPager.onPageScrolled(IFI)V" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mDecorChildCount int  (LINE:1865)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:56:0x0064 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getScrollX():int A[MD:():int (s)] (LINE:1866)\l0x0008: INVOKE  (r1 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingLeft():int A[MD:():int (s)] (LINE:1867)\l0x000c: INVOKE  (r2 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingRight():int A[MD:():int (s)] (LINE:1868)\l0x0010: INVOKE  (r3 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getWidth():int A[MD:():int (s)] (LINE:1869)\l0x0014: INVOKE  (r4 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildCount():int A[MD:():int (c)] (LINE:1870)\l0x0018: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1871)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|LOOP_START\lLOOP:0: B:42:0x0019\-\>B:55:0x0061\l|0x0019: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:67:0x0064 \l}"];
Node_43 [shape=record,label="{43\:\ 0x001b|0x001b: INVOKE  (r6 I:android.view.View) = (r12 I:androidx.viewpager.widget.ViewPager), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1872)\l0x001f: INVOKE  (r7 I:android.view.ViewGroup$LayoutParams) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1873)\l0x0023: CHECK_CAST (r7 I:androidx.viewpager.widget.ViewPager$LayoutParams) = (androidx.viewpager.widget.ViewPager$LayoutParams) (r7 I:??[OBJECT, ARRAY]) \l0x0025: IGET  (r8 I:boolean) = (r7 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.isDecor boolean  (LINE:1874)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|0x0027: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x002a \l}"];
Node_46 [shape=record,label="{46\:\ 0x002a|0x002a: IGET  (r8 I:int) = (r7 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.gravity int  (LINE:1876)\l0x002c: ARITH  (r8 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char]) & (7 ??[int, float, short, byte, char]) \l0x002e: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1877)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002f|0x002f: SWITCH  (r8 I:?? A[D('hgrav' int)])\l case 1: goto B:51:0x0048\l case 2: goto B:48:0x0032\l case 3: goto B:50:0x0041\l case 4: goto B:48:0x0032\l case 5: goto B:49:0x0034\l default: goto B:48:0x0032  (LINE:1878)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0032|0x0032: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('paddingLeft' int)])  (LINE:1880)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0055|0x0055: ARITH  (r10 I:int) = (r10 I:int A[D('childLeft' int)]) + (r0 I:int A[D('scrollX' int)])  (LINE:1895)\l0x0056: INVOKE  (r9 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:1897)\l0x005a: ARITH  (r9 I:int) = (r10 I:int A[D('childLeft' int)]) \- (r9 I:int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x005c|0x005c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childOffset' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0061  (LINE:1898)\l}"];
Node_54 [shape=record,label="{54\:\ 0x005e|0x005e: INVOKE  (r6 I:android.view.View A[D('child' android.view.View)]), (r9 I:int A[D('childOffset' int)]) type: VIRTUAL call: android.view.View.offsetLeftAndRight(int):void A[MD:(int):void (c)] (LINE:1899)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0061|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0061|LOOP_END\lLOOP:0: B:42:0x0019\-\>B:55:0x0061\l|0x0061: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:1871)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0061|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0034|0x0034: ARITH  (r10 I:int A[D('childLeft' int)]) = (r3 I:int A[D('width' int)]) \- (r2 I:int A[D('paddingRight' int)])  (LINE:1891)\l0x0036: INVOKE  (r11 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)]\l0x003a: ARITH  (r10 I:int) = (r10 I:int) \- (r11 I:int) \l0x003b: INVOKE  (r9 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1892)\l0x003f: ARITH  (r2 I:int) = (r2 I:int A[D('paddingRight' int)]) + (r9 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0041|0x0041: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childLeft' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('paddingLeft' int)])  (LINE:1883)\l0x0042: INVOKE  (r9 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:1884)\l0x0046: ARITH  (r1 I:int) = (r1 I:int A[D('paddingLeft' int)]) + (r9 I:int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0048|0x0048: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1887)\l0x004c: ARITH  (r10 I:int) = (r3 I:int A[D('width' int)]) \- (r10 I:int) \l0x004e: ARITH  (r10 I:int) = (r10 I:int) \/ (2 int) \l0x0050: INVOKE  (r10 I:int) = (r10 I:int), (r1 I:int A[D('paddingLeft' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0061|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0064|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0064|0x0064: INVOKE  \l  (r12 I:androidx.viewpager.widget.ViewPager)\l  (r13 I:int A[D('position' int)])\l  (r14 I:float A[D('offset' float)])\l  (r15 I:int A[D('offsetPixels' int)])\l type: DIRECT call: androidx.viewpager.widget.ViewPager.dispatchOnPageScrolled(int, float, int):void A[MD:(int, float, int):void (m)] (LINE:1904)\l0x0067: IGET  (r0 I:androidx.viewpager.widget.ViewPager$PageTransformer) = (r12 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mPageTransformer androidx.viewpager.widget.ViewPager$PageTransformer  (LINE:1906)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0069|0x0069: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0099 \l}"];
Node_58 [shape=record,label="{58\:\ 0x006b|0x006b: INVOKE  (r0 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getScrollX():int A[MD:():int (s)] (LINE:1907)\l0x006f: INVOKE  (r1 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildCount():int A[MD:():int (c)] (LINE:1908)\l0x0073: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1909)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0074|LOOP_START\lLOOP:1: B:59:0x0074\-\>B:64:0x0096\l|0x0074: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:71:0x0099 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0076|0x0076: INVOKE  (r3 I:android.view.View) = (r12 I:androidx.viewpager.widget.ViewPager), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1910)\l0x007a: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1911)\l0x007e: CHECK_CAST (r4 I:androidx.viewpager.widget.ViewPager$LayoutParams) = (androidx.viewpager.widget.ViewPager$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l0x0080: IGET  (r5 I:boolean) = (r4 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.isDecor boolean  (LINE:1913)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0082|0x0082: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0085 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0085|0x0085: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:1914)\l0x0089: ARITH  (r5 I:int) = (r5 I:int) \- (r0 I:int A[D('scrollX' int)]) \l0x008a: CAST (r5 I:float) = (float) (r5 I:int) \l0x008b: INVOKE  (r6 I:int) = (r12 I:androidx.viewpager.widget.ViewPager) type: DIRECT call: androidx.viewpager.widget.ViewPager.getClientWidth():int A[MD:():int (m)]\l0x008f: CAST (r6 I:float) = (float) (r6 I:int) \l0x0090: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0091: IGET  (r6 I:androidx.viewpager.widget.ViewPager$PageTransformer) = (r12 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mPageTransformer androidx.viewpager.widget.ViewPager$PageTransformer  (LINE:1915)\l0x0093: INVOKE  \l  (r6 I:androidx.viewpager.widget.ViewPager$PageTransformer)\l  (r3 I:android.view.View A[D('child' android.view.View)])\l  (r5 I:float A[D('transformPos' float)])\l type: INTERFACE call: androidx.viewpager.widget.ViewPager.PageTransformer.transformPage(android.view.View, float):void A[MD:(android.view.View, float):void (m)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0096|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0096|LOOP_END\lLOOP:1: B:59:0x0074\-\>B:64:0x0096\l|0x0096: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1909)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0096|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0099|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0099|0x0099: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('scrollX' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1919)\l0x009a: IPUT  (r0 I:boolean), (r12 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mCalledSuper boolean \l}"];
Node_66 [shape=record,label="{66\:\ 0x009c|RETURN\l|0x009c: RETURN    (LINE:1920)\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.viewpager.widget.ViewPager.onPageScrolled((r12 'this' I:androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r13 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[D('offset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('offsetPixels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:55:0x0061 \-\> B:42:0x0019, CROSS_EDGE: B:53:0x005c \-\> B:55:0x0061, CROSS_EDGE: B:49:0x0034 \-\> B:52:0x0055, CROSS_EDGE: B:50:0x0041 \-\> B:52:0x0055, CROSS_EDGE: B:51:0x0048 \-\> B:52:0x0055, CROSS_EDGE: B:44:0x0027 \-\> B:55:0x0061, BACK_EDGE: B:64:0x0096 \-\> B:59:0x0074, CROSS_EDGE: B:61:0x0082 \-\> B:64:0x0096, CROSS_EDGE: B:57:0x0069 \-\> B:65:0x0099, CROSS_EDGE: B:40:0x0002 \-\> B:56:0x0064\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002f\-0x0033: r9 'childLeft' I\l  0x0033\-0x0034: r10 'childLeft' I\l  0x0034\-0x003b: r9 'childLeft' I\l  0x003b\-0x0041: r10 'childLeft' I\l  0x0041\-0x0042: r9 'childLeft' I\l  0x0042\-0x0048: r10 'childLeft' I\l  0x0048\-0x0054: r9 'childLeft' I\l  0x001f\-0x0061: r6 'child' Landroid\/view\/View;\l  0x0025\-0x0061: r7 'lp' Landroidx\/viewpager\/widget\/ViewPager$LayoutParams;\l  0x002e\-0x0061: r8 'hgrav' I\l  0x005c\-0x0061: r9 'childOffset' I\l  0x0054\-0x0061: r10 'childLeft' I\l  0x0008\-0x0064: r0 'scrollX' I\l  0x000c\-0x0064: r1 'paddingLeft' I\l  0x0010\-0x0064: r2 'paddingRight' I\l  0x0014\-0x0064: r3 'width' I\l  0x0018\-0x0064: r4 'childCount' I\l  0x0019\-0x0064: r5 'i' I\l  0x007a\-0x0096: r3 'child' Landroid\/view\/View;\l  0x0080\-0x0096: r4 'lp' Landroidx\/viewpager\/widget\/ViewPager$LayoutParams;\l  0x0091\-0x0096: r5 'transformPos' F\l  0x006f\-0x0099: r0 'scrollX' I\l  0x0073\-0x0099: r1 'childCount' I\l  0x0074\-0x0099: r2 'i' I\l  \-1 \-0x00ab: r13 'position' I\l  \-1 \-0x00ab: r14 'offset' F\l  \-1 \-0x00ab: r15 'offsetPixels' I\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_56;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_67;
Node_43 -> Node_44;
Node_44 -> Node_46;
Node_44 -> Node_70[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_47 -> Node_49;
Node_47 -> Node_50;
Node_47 -> Node_51;
Node_48 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_69;
Node_54 -> Node_68;
Node_68 -> Node_55;
Node_55 -> Node_42;
Node_69 -> Node_55;
Node_49 -> Node_52;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_70 -> Node_55;
Node_67 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_65;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_71;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_73[style=dashed];
Node_63 -> Node_72;
Node_72 -> Node_64;
Node_64 -> Node_59;
Node_73 -> Node_64;
Node_71 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_38;
}

