digraph "CFG forandroidx.viewpager.widget.ViewPager.scrollToItem(IZIZ)V" {
subgraph cluster_Region_387979095 {
label = "R(3:1|(1:3)|(2:(2:6|(2:(2:8|9)|(1:11)))|(2:(1:13)|14)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.ItemInfo r0 = infoForPosition(r8)\lint r1 = 0\l}"];
subgraph cluster_IfRegion_595213921 {
label = "IF [B:19:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0005|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_2087054292 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0007|int int r2 = getClientWidth()\lint r1 = (int) (r2 * java.lang.Math.max(r7.mFirstOffset, java.lang.Math.min(r0.offset, r7.mLastOffset)))\l}"];
}
}
subgraph cluster_Region_1686672155 {
label = "R(2:(2:6|(2:(2:8|9)|(1:11)))|(2:(1:13)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_992344166 {
label = "IF [B:22:0x001e] THEN: R(2:6|(2:(2:8|9)|(1:11))) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x001e|if (r9 != false) goto L6\l}"];
subgraph cluster_Region_1211665017 {
label = "R(2:6|(2:(2:8|9)|(1:11)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0020|smoothScrollTo(r1, 0, r10)\l}"];
subgraph cluster_Region_508926548 {
label = "R(2:(2:8|9)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1708389189 {
label = "IF [B:24:0x0023] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0023|if (r11 != false) goto L8\l}"];
subgraph cluster_Region_1172546735 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0025|dispatchOnPageSelected(r8)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1368490685 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1597355654 {
label = "R(2:(1:13)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1671701985 {
label = "IF [B:26:0x0029] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0029|if (r11 != false) goto L13\l}"];
subgraph cluster_Region_420985611 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x002b|dispatchOnPageSelected(r8)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x002e|completeScroll(false)\lscrollTo(r1, 0)\lpageScrolled(r1)\l}"];
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001d|PHI: r1 \l  PHI: (r1v1 'destX' int) = (r1v0 'destX' int), (r1v2 'destX' int) binds: [B:19:0x0005, B:20:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0037|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager.widget.ViewPager.scrollToItem((r7v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r8v0 'item' int A[D('item' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'smoothScroll' boolean A[D('smoothScroll' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'velocity' int A[D('velocity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'dispatchSelected' boolean A[D('dispatchSelected' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0023 \-\> B:29:0x0037, CROSS_EDGE: B:28:0x002e \-\> B:29:0x0037, CROSS_EDGE: B:26:0x0029 \-\> B:28:0x002e, CROSS_EDGE: B:19:0x0005 \-\> B:21:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_26[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_30[style=dashed];
Node_25 -> Node_31;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_16 -> Node_18;
Node_21 -> Node_22;
Node_29 -> Node_17;
}

