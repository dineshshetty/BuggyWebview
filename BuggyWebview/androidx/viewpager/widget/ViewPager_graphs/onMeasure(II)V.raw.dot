digraph "CFG forandroidx.viewpager.widget.ViewPager.onMeasure(II)V" {
Node_72 [shape=record,label="{72\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_74 [shape=record,label="{74\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:1555)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMeasureSpec' int)]) \l0x0005: INVOKE  (r3 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: androidx.viewpager.widget.ViewPager.getDefaultSize(int, int):int A[MD:(int, int):int (s)]\l0x0009: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)])  (LINE:1556)\l0x000b: INVOKE  (r5 I:int) = (r1 I:int), (r4 I:int) type: STATIC call: androidx.viewpager.widget.ViewPager.getDefaultSize(int, int):int A[MD:(int, int):int (s)]\l0x000f: INVOKE  (r0 I:androidx.viewpager.widget.ViewPager), (r3 I:int), (r5 I:int) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:1555)\l0x0012: INVOKE  (r3 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getMeasuredWidth():int A[MD:():int (s)] (LINE:1558)\l0x0016: ARITH  (r5 I:int) = (r3 I:int A[D('measuredWidth' int)]) \/ (10 int)  (LINE:1559)\l0x0018: IGET  (r6 I:int) = (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mDefaultGutterSize int  (LINE:1560)\l0x001a: INVOKE  (r6 I:int) = (r5 I:int A[D('maxGutterSize' int)]), (r6 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x001e: IPUT  (r6 I:int), (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mGutterSize int \l0x0020: INVOKE  (r6 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingLeft():int A[MD:():int (s)] (LINE:1563)\l0x0024: ARITH  (r6 I:int) = (r3 I:int A[D('measuredWidth' int)]) \- (r6 I:int) \l0x0026: INVOKE  (r7 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingRight():int A[MD:():int (s)]\l0x002a: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x002b: INVOKE  (r7 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getMeasuredHeight():int A[MD:():int (s)] (LINE:1564)\l0x002f: INVOKE  (r8 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingTop():int A[MD:():int (s)]\l0x0033: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0034: INVOKE  (r8 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getPaddingBottom():int A[MD:():int (s)]\l0x0038: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0039: INVOKE  (r8 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildCount():int A[MD:():int (c)] (LINE:1571)\l0x003d: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1572)\l}"];
Node_75 [shape=record,label="{75\:\ 0x003e|LOOP_START\lLOOP:0: B:75:0x003e\-\>B:122:0x00e2\l|0x003e: CONST  (r10 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_76 [shape=record,label="{76\:\ 0x0040|0x0040: IF  (r9 I:??[int, byte, short, char] A[D('i' int)]) \>= (r8 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:134:0x00ef \l}"];
Node_77 [shape=record,label="{77\:\ 0x0042|0x0042: INVOKE  (r12 I:android.view.View) = (r0 I:androidx.viewpager.widget.ViewPager), (r9 I:int A[D('i' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1573)\l0x0046: INVOKE  (r13 I:int) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:1574)\l}"];
Node_78 [shape=record,label="{78\:\ 0x004a|0x004a: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:121:0x00de \l}"];
Node_79 [shape=record,label="{79\:\ 0x004c|0x004c: INVOKE  (r10 I:android.view.ViewGroup$LayoutParams) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1575)\l0x0050: CHECK_CAST (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams) = (androidx.viewpager.widget.ViewPager$LayoutParams) (r10 I:??[OBJECT, ARRAY]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0052|0x0052: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x00d9  (LINE:1576)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0054|0x0054: IGET  (r13 I:boolean) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.isDecor boolean \l}"];
Node_82 [shape=record,label="{82\:\ 0x0056|0x0056: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x00d9 \l}"];
Node_83 [shape=record,label="{83\:\ 0x0058|0x0058: IGET  (r13 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.gravity int  (LINE:1577)\l0x005a: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) & (7 ??[int, float, short, byte, char]) \l0x005c: IGET  (r14 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.gravity int  (LINE:1578)\l0x005e: ARITH  (r14 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (112(0x70, float:1.57E\-43) ??[int, float, short, byte, char]) \l0x0060: CONST  (r15 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:1579)\l0x0062: CONST  (r16 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:1580)\l0x0064: CONST  (r1 I:??[int, float, short, byte, char]) = (48 ??[int, float, short, byte, char])  (LINE:1581)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0066|0x0066: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vgrav' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x006f \l}"];
Node_85 [shape=record,label="{85\:\ 0x0068|0x0068: CONST  (r1 I:??[int, float, short, byte, char]) = (80 ??[int, float, short, byte, char]) \l}"];
Node_86 [shape=record,label="{86\:\ 0x006a|0x006a: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vgrav' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x006d \l}"];
Node_88 [shape=record,label="{88\:\ 0x006d|0x006d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x0070|0x0070: CONST  (r11 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1582)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0071|0x0071: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hgrav' int)]) == (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x0079 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0073|0x0073: CONST  (r11 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_93 [shape=record,label="{93\:\ 0x0074|0x0074: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hgrav' int)]) != (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0077 \l}"];
Node_95 [shape=record,label="{95\:\ 0x0077|0x0077: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_97 [shape=record,label="{97\:\ 0x007a|0x007a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumeVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x007f  (LINE:1584)\l}"];
Node_98 [shape=record,label="{98\:\ 0x007c|0x007c: CONST  (r15 I:??[int, float, short, byte, char] A[D('widthMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1585)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0083|0x0083: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childWidthSize' int)])  (LINE:1590)\l0x0085: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childHeightSize' int)])  (LINE:1591)\l0x0087: IGET  (r2 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.width int  (LINE:1592)\l0x0089: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) \l0x008b: CONST  (r3 I:??[int, float, short, byte, char] A[D('measuredWidth' int)]) = (\-2 ??[int, float, short, byte, char]) \l}"];
Node_102 [shape=record,label="{102\:\ 0x008c|0x008c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:107:0x009b \l}"];
Node_103 [shape=record,label="{103\:\ 0x008e|0x008e: CONST  (r15 I:??[int, float, short, byte, char] A[D('widthMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1593)\l0x0090: IGET  (r2 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.width int  (LINE:1594)\l0x0092: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_104 [shape=record,label="{104\:\ 0x0093|0x0093: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:106:0x0098 \l}"];
Node_105 [shape=record,label="{105\:\ 0x0095|0x0095: IGET  (r2 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.width int  (LINE:1595)\l}"];
Node_108 [shape=record,label="{108\:\ 0x009d|0x009d: IGET  (r3 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.height int  (LINE:1598)\l0x009f: CONST  (r4 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char]) \l}"];
Node_109 [shape=record,label="{109\:\ 0x00a0|0x00a0: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:114:0x00b4 \l}"];
Node_110 [shape=record,label="{110\:\ 0x00a2|0x00a2: CONST  (r16 I:??[int, float, short, byte, char] A[D('heightMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1599)\l0x00a4: IGET  (r3 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.height int  (LINE:1600)\l0x00a6: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_111 [shape=record,label="{111\:\ 0x00a7|0x00a7: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:113:0x00af \l}"];
Node_112 [shape=record,label="{112\:\ 0x00a9|0x00a9: IGET  (r3 I:int) = (r10 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.height int  (LINE:1601)\l0x00ab: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00ac: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l}"];
Node_115 [shape=record,label="{115\:\ 0x00b8|0x00b8: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxGutterSize' int)])  (LINE:1604)\l0x00ba: INVOKE  (r5 I:int) = (r2 I:int A[D('widthSize' int)]), (r15 I:int A[D('widthMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x00be: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)])  (LINE:1605)\l0x00c0: INVOKE  (r2 I:int) = (r4 I:int A[D('heightSize' int)]), (r3 I:int A[D('heightMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x00c4: INVOKE  \l  (r12 I:android.view.View A[D('child' android.view.View)])\l  (r5 I:int A[D('widthSpec' int)])\l  (r2 I:int A[D('heightSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:1606)\l}"];
Node_116 [shape=record,label="{116\:\ 0x00c7|0x00c7: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumeVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:118:0x00d0  (LINE:1608)\l}"];
Node_117 [shape=record,label="{117\:\ 0x00c9|0x00c9: INVOKE  (r18 I:int) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:1609)\l0x00cd: ARITH  (r7 I:int) = (r7 I:int A[D('childHeightSize' int)]) \- (r18 I:int) \l}"];
Node_136 [shape=record,label="{136\:\ 0x00e2|SYNTHETIC\l}"];
Node_122 [shape=record,label="{122\:\ 0x00e2|LOOP_END\lLOOP:0: B:75:0x003e\-\>B:122:0x00e2\l|0x00e2: ARITH  (r9 I:int) = (r9 I:int A[D('i' int)]) + (1 int)  (LINE:1572)\l0x00e4: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMeasureSpec' int)]) \l0x00e6: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l0x00e8: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxGutterSize' int)]) \l0x00ea: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) \l0x00ec: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_118 [shape=record,label="{118\:\ 0x00d0|0x00d0: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumeHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:137:0x00e2  (LINE:1610)\l}"];
Node_119 [shape=record,label="{119\:\ 0x00d2|0x00d2: INVOKE  (r18 I:int) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1611)\l0x00d6: ARITH  (r6 I:int) = (r6 I:int A[D('childWidthSize' int)]) \- (r18 I:int) \l}"];
Node_138 [shape=record,label="{138\:\ 0x00e2|SYNTHETIC\l}"];
Node_137 [shape=record,label="{137\:\ 0x00e2|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x00af|0x00af: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)])  (LINE:1600)\l0x00b1: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) \l}"];
Node_114 [shape=record,label="{114\:\ 0x00b4|0x00b4: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)])  (LINE:1598)\l0x00b6: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) \l}"];
Node_106 [shape=record,label="{106\:\ 0x0098|0x0098: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)])  (LINE:1594)\l}"];
Node_107 [shape=record,label="{107\:\ 0x009b|0x009b: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)])  (LINE:1592)\l}"];
Node_99 [shape=record,label="{99\:\ 0x007f|0x007f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumeHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0083  (LINE:1586)\l}"];
Node_100 [shape=record,label="{100\:\ 0x0081|0x0081: CONST  (r16 I:??[int, float, short, byte, char] A[D('heightMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1587)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0079|0x0079: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_89 [shape=record,label="{89\:\ 0x006f|0x006f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_120 [shape=record,label="{120\:\ 0x00d9|0x00d9: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)])  (LINE:1576)\l0x00db: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxGutterSize' int)]) \l}"];
Node_139 [shape=record,label="{139\:\ 0x00e2|SYNTHETIC\l}"];
Node_121 [shape=record,label="{121\:\ 0x00de|0x00de: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)])  (LINE:1574)\l0x00e0: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxGutterSize' int)]) \l}"];
Node_135 [shape=record,label="{135\:\ 0x00e2|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x00ef|SYNTHETIC\l}"];
Node_123 [shape=record,label="{123\:\ 0x00ef|0x00ef: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('measuredWidth' int)]) \l0x00f1: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxGutterSize' int)]) \l0x00f3: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1617)\l0x00f5: INVOKE  (r2 I:int) = (r6 I:int A[D('childWidthSize' int)]), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x00f9: IPUT  (r2 I:int), (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mChildWidthMeasureSpec int \l0x00fb: INVOKE  (r2 I:int) = (r7 I:int A[D('childHeightSize' int)]), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:1618)\l0x00ff: IPUT  (r2 I:int), (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mChildHeightMeasureSpec int \l0x0101: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1621)\l0x0102: IPUT  (r2 I:boolean), (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mInLayout boolean \l0x0104: INVOKE  (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.populate():void A[MD:():void (m)] (LINE:1622)\l0x0107: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1623)\l0x0108: IPUT  (r2 I:boolean), (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mInLayout boolean \l0x010a: INVOKE  (r2 I:int) = (r20 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildCount():int A[MD:():int (c)] (LINE:1626)\l0x010e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1627)\l}"];
Node_124 [shape=record,label="{124\:\ 0x010f|LOOP_START\lLOOP:1: B:124:0x010f\-\>B:132:0x0136\l|0x010f: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:140:0x0139 \l}"];
Node_125 [shape=record,label="{125\:\ 0x0111|0x0111: INVOKE  (r4 I:android.view.View) = (r0 I:androidx.viewpager.widget.ViewPager), (r3 I:int A[D('i' int)]) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1628)\l0x0115: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:1629)\l}"];
Node_126 [shape=record,label="{126\:\ 0x0119|0x0119: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:142:0x0136 \l}"];
Node_127 [shape=record,label="{127\:\ 0x011b|0x011b: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1634)\l0x011f: CHECK_CAST (r5 I:androidx.viewpager.widget.ViewPager$LayoutParams) = (androidx.viewpager.widget.ViewPager$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_128 [shape=record,label="{128\:\ 0x0121|0x0121: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:131:0x0127  (LINE:1635)\l}"];
Node_129 [shape=record,label="{129\:\ 0x0123|0x0123: IGET  (r8 I:boolean) = (r5 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.isDecor boolean \l}"];
Node_130 [shape=record,label="{130\:\ 0x0125|0x0125: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:143:0x0136 \l}"];
Node_143 [shape=record,label="{143\:\ 0x0136|SYNTHETIC\l}"];
Node_132 [shape=record,label="{132\:\ 0x0136|LOOP_END\lLOOP:1: B:124:0x010f\-\>B:132:0x0136\l|0x0136: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:1627)\l}"];
Node_131 [shape=record,label="{131\:\ 0x0127|0x0127: CAST (r8 I:float) = (float) (r6 I:int A[D('childWidthSize' int)])  (LINE:1636)\l0x0128: IGET  (r9 I:float) = (r5 I:androidx.viewpager.widget.ViewPager$LayoutParams A[D('lp' androidx.viewpager.widget.ViewPager$LayoutParams)]) androidx.viewpager.widget.ViewPager.LayoutParams.widthFactor float \l0x012a: ARITH  (r8 I:float) = (r8 I:float) * (r9 I:float) \l0x012c: CAST (r8 I:int) = (int) (r8 I:float) \l0x012d: INVOKE  (r8 I:int) = (r8 I:int), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0131: IGET  (r9 I:int) = (r0 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mChildHeightMeasureSpec int  (LINE:1638)\l0x0133: INVOKE  (r4 I:android.view.View A[D('child' android.view.View)]), (r8 I:int A[D('widthSpec' int)]), (r9 I:int) type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_141 [shape=record,label="{141\:\ 0x0136|SYNTHETIC\l}"];
Node_142 [shape=record,label="{142\:\ 0x0136|SYNTHETIC\l}"];
Node_140 [shape=record,label="{140\:\ 0x0139|SYNTHETIC\l}"];
Node_133 [shape=record,label="{133\:\ 0x0139|RETURN\l|0x0139: RETURN    (LINE:1642)\l}"];
Node_73 [shape=record,label="{73\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.viewpager.widget.ViewPager.onMeasure((r20 'this' I:androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r21 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:122:0x00e2 \-\> B:75:0x003e, CROSS_EDGE: B:119:0x00d2 \-\> B:122:0x00e2, CROSS_EDGE: B:118:0x00d0 \-\> B:122:0x00e2, CROSS_EDGE: B:113:0x00af \-\> B:115:0x00b8, CROSS_EDGE: B:114:0x00b4 \-\> B:115:0x00b8, CROSS_EDGE: B:106:0x0098 \-\> B:108:0x009d, CROSS_EDGE: B:107:0x009b \-\> B:108:0x009d, CROSS_EDGE: B:100:0x0081 \-\> B:101:0x0083, CROSS_EDGE: B:99:0x007f \-\> B:101:0x0083, CROSS_EDGE: B:96:0x0079 \-\> B:97:0x007a, CROSS_EDGE: B:91:0x0071 \-\> B:96:0x0079, CROSS_EDGE: B:89:0x006f \-\> B:90:0x0070, CROSS_EDGE: B:84:0x0066 \-\> B:89:0x006f, CROSS_EDGE: B:120:0x00d9 \-\> B:122:0x00e2, CROSS_EDGE: B:80:0x0052 \-\> B:120:0x00d9, CROSS_EDGE: B:121:0x00de \-\> B:122:0x00e2, BACK_EDGE: B:132:0x0136 \-\> B:124:0x010f, CROSS_EDGE: B:130:0x0125 \-\> B:132:0x0136, CROSS_EDGE: B:128:0x0121 \-\> B:131:0x0127, CROSS_EDGE: B:126:0x0119 \-\> B:132:0x0136\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x008b: r3 'measuredWidth' I\l  0x0085\-0x0097: r17 'widthSize' I\l  0x0097\-0x0098: r2 'widthSize' I\l  0x0098\-0x009d: r17 'widthSize' I\l  0x0087\-0x00ae: r18 'heightSize' I\l  0x00ae\-0x00af: r3 'heightSize' I\l  0x0064\-0x00b8: r16 'heightMode' I\l  0x00af\-0x00b8: r18 'heightSize' I\l  0x0018\-0x00ba: r5 'maxGutterSize' I\l  0x009d\-0x00c0: r2 'widthSize' I\l  0x0070\-0x00d9: r1 'consumeVertical' Z\l  0x00c4\-0x00d9: r2 'heightSpec' I\l  0x00b8\-0x00d9: r4 'heightSize' I\l  0x007a\-0x00d9: r11 'consumeHorizontal' Z\l  0x005c\-0x00d9: r13 'hgrav' I\l  0x0060\-0x00d9: r14 'vgrav' I\l  0x0062\-0x00d9: r15 'widthMode' I\l  0x00ba\-0x00d9: r16 'maxGutterSize' I\l  0x00c0\-0x00d9: r17 'widthSize' I\l  0x008b\-0x00d9: r19 'measuredWidth' I\l  0x00b8\-0x00d9: r3 'heightMode' I\l  0x00be\-0x00d9: r5 'widthSpec' I\l  0x00d9\-0x00dd: r3 'measuredWidth' I\l  0x00d9\-0x00dd: r5 'maxGutterSize' I\l  0x0052\-0x00de: r10 'lp' Landroidx\/viewpager\/widget\/ViewPager$LayoutParams;\l  0x00dd\-0x00de: r16 'maxGutterSize' I\l  0x00dd\-0x00de: r19 'measuredWidth' I\l  0x00de\-0x00e2: r3 'measuredWidth' I\l  0x00de\-0x00e2: r5 'maxGutterSize' I\l  0x0046\-0x00e2: r12 'child' Landroid\/view\/View;\l  0x00e2\-0x00ef: r16 'maxGutterSize' I\l  0x00e2\-0x00ef: r19 'measuredWidth' I\l  0x00ef\-0x00f3: r3 'measuredWidth' I\l  0x00ef\-0x00f3: r5 'maxGutterSize' I\l  0x003e\-0x00f3: r9 'i' I\l  0x003d\-0x010e: r8 'size' I\l  0x0115\-0x0136: r4 'child' Landroid\/view\/View;\l  0x0121\-0x0136: r5 'lp' Landroidx\/viewpager\/widget\/ViewPager$LayoutParams;\l  0x0131\-0x0136: r8 'widthSpec' I\l  0x010f\-0x0139: r3 'i' I\l  0x010e\-0x0139: r2 'size' I\l  0x002b\-0x0139: r6 'childWidthSize' I\l  0x0039\-0x0139: r7 'childHeightSize' I\l  0x00f3\-0x0139: r16 'maxGutterSize' I\l  0x00f3\-0x0139: r19 'measuredWidth' I\l  \-1 \-0x0139: r21 'widthMeasureSpec' I\l  \-1 \-0x0139: r22 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_72;Node_72 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_134;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_121;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_120;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_120;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_89;
Node_85 -> Node_86;
Node_86 -> Node_88;
Node_86 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_96;
Node_92 -> Node_93;
Node_93 -> Node_95;
Node_93 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_99;
Node_98 -> Node_101;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_107;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_114;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_113;
Node_112 -> Node_115;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_118;
Node_117 -> Node_136;
Node_136 -> Node_122;
Node_122 -> Node_75;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_137;
Node_119 -> Node_138;
Node_138 -> Node_122;
Node_137 -> Node_122;
Node_113 -> Node_115;
Node_114 -> Node_115;
Node_106 -> Node_108;
Node_107 -> Node_108;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_101;
Node_100 -> Node_101;
Node_96 -> Node_97;
Node_89 -> Node_90;
Node_120 -> Node_139;
Node_139 -> Node_122;
Node_121 -> Node_135;
Node_135 -> Node_122;
Node_134 -> Node_123;
Node_123 -> Node_124;
Node_124 -> Node_125[style=dashed];
Node_124 -> Node_140;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_142;
Node_127 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_131;
Node_129 -> Node_130;
Node_130 -> Node_131[style=dashed];
Node_130 -> Node_143;
Node_143 -> Node_132;
Node_132 -> Node_124;
Node_131 -> Node_141;
Node_141 -> Node_132;
Node_142 -> Node_132;
Node_140 -> Node_133;
Node_133 -> Node_73;
}

