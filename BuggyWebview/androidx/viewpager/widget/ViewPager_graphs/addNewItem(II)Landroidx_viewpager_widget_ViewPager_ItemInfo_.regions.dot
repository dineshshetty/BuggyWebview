digraph "CFG forandroidx.viewpager.widget.ViewPager.addNewItem(II)Landroidx\/viewpager\/widget\/ViewPager$ItemInfo;" {
subgraph cluster_Region_1656107975 {
label = "R(3:1|(1:8)(1:5)|6)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.ItemInfo r0 = new androidx.viewpager.widget.ViewPager.ItemInfo()\lr0.position = r3\lr0.object = r2.mAdapter.instantiateItem((android.view.ViewGroup) r2, r3)\lr0.widthFactor = r2.mAdapter.getPageWidth(r3)\l}"];
subgraph cluster_IfRegion_1745727079 {
label = "IF [B:13:0x0017, B:15:0x001f] THEN: R(1:8) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0017|if (r4 \< 0) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|ADDED_TO_REGION\l|if (r4 \>= r2.mItems.size()) goto L8\l}"];
subgraph cluster_Region_2027080705 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0028|r2.mItems.add(r0)\l}"];
}
subgraph cluster_Region_1339717997 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0022|r2.mItems.add(r4, r0)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x002d|RETURN\l|return r0\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0019}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.addNewItem((r2v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r3v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0028 \-\> B:19:0x002d, CROSS_EDGE: B:13:0x0017 \-\> B:18:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_15 -> Node_17[style=dashed];
Node_15 -> Node_18;
Node_18 -> Node_19;
Node_17 -> Node_19;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
}

