digraph "CFG forandroidx.viewpager.widget.ViewPager.setPageTransformer(ZLandroidx\/viewpager\/widget\/ViewPager$PageTransformer;I)V" {
subgraph cluster_Region_281465376 {
label = "R(5:2|7|9|(1:13)(1:19)|(1:(1:15)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0002|boolean r2 = r6 != null\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|PHI: r3 \l  PHI: (r3v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r3 = r2 != (r4.mPageTransformer != null)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|PHI: r3 \l  PHI: (r3v4 'needsPopulate' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.mPageTransformer = r6\lsetChildrenDrawingOrderEnabled(r2)\l}"];
subgraph cluster_IfRegion_1816031530 {
label = "IF [B:37:0x0018] THEN: R(1:13) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0018|if (r2 != false) goto L11\l}"];
subgraph cluster_Region_1156081413 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x001d|PHI: r0 \l  PHI: (r0v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r4.mDrawingOrder = r5 ? 2 : 1\lr4.mPageTransformerLayerType = r7\l}"];
}
subgraph cluster_Region_1176134812 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0022|r4.mDrawingOrder = 0\l}"];
}
}
subgraph cluster_Region_1182974355 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1132478539 {
label = "IF [B:42:0x0024] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0024|if (r3 != false) goto L15\l}"];
subgraph cluster_Region_239068825 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0026|populate()\l}"];
}
}
}
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0004}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0007|PHI: r2 \l  PHI: (r2v1 'hasTransformer' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0009}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000b}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0010}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x001a}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x001c}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0029|ORIG_RETURN\l}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0012}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x000d}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0006}"];
MethodNode[shape=record,label="{public void androidx.viewpager.widget.ViewPager.setPageTransformer((r4v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r5v0 'reverseDrawingOrder' boolean A[D('reverseDrawingOrder' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'transformer' androidx.viewpager.widget.ViewPager$PageTransformer A[D('transformer' androidx.viewpager.widget.ViewPager$PageTransformer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'pageLayerType' int A[D('pageLayerType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0024 \-\> B:44:0x0029, CROSS_EDGE: B:38:0x001a \-\> B:40:0x001d, CROSS_EDGE: B:41:0x0022 \-\> B:42:0x0024, CROSS_EDGE: B:35:0x0012 \-\> B:36:0x0013, CROSS_EDGE: B:32:0x000d \-\> B:33:0x000e, CROSS_EDGE: B:28:0x0006 \-\> B:29:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_26 -> Node_27;
Node_26 -> Node_28;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_45[style=dashed];
Node_43 -> Node_44;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_34 -> Node_36;
Node_38 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_44 -> Node_24;
Node_45 -> Node_24;
Node_35 -> Node_36;
Node_32 -> Node_33;
Node_28 -> Node_29;
}

