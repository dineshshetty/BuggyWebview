digraph "CFG forandroidx.viewpager.widget.ViewPager.canScrollHorizontally(I)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0003|if (r6.mAdapter != null) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|int r0 = getClientWidth()\lint r2 = getScrollX()\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|if (r7 \>= 0) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011}"];
Node_27 [shape=record,label="{27\:\ 0x0017|if (r2 \<= ((int) (((float) r0) * r6.mFirstOffset))) goto L10\l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|RETURN\lORIG_RETURN\l|return true\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|if (r7 \<= 0) goto L16\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d}"];
Node_32 [shape=record,label="{32\:\ 0x0023|if (r2 \>= ((int) (((float) r0) * r6.mLastOffset))) goto L15\l}"];
Node_33 [shape=record,label="{33\:\ 0x0025|RETURN\lORIG_RETURN\l|return true\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.viewpager.widget.ViewPager.canScrollHorizontally((r6v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r7v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x001a \-\> B:20:?, CROSS_EDGE: B:27:0x0017 \-\> B:29:0x001a, CROSS_EDGE: B:34:0x0026 \-\> B:20:?, CROSS_EDGE: B:32:0x0023 \-\> B:34:0x0026, CROSS_EDGE: B:35:0x0027 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.canScrollHorizontally(int):boolean\}]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_36;
Node_28 -> Node_20;
Node_36 -> Node_20;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_20;
Node_37 -> Node_20;
Node_35 -> Node_20;
}

