digraph "CFG forandroidx.viewpager.widget.ViewPager.setOffscreenPageLimit(I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:849)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0001|0x0001: IF  (r4 I:??[int, byte, short, char] A[D('limit' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:15:0x0022 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:850)\l0x0005: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"Requested offscreen page limit \" \l0x000a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000d: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int A[D('limit' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0010: CONST_STR  (r2 I:java.lang.String) =  \" too small; defaulting to \" \l0x0012: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"ViewPager\" \l0x001e: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l0x0021: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('limit' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:852)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|0x0022: IGET  (r0 I:int) = (r3 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mOffscreenPageLimit int  (LINE:854)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('limit' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: IPUT  (r4 I:int A[D('limit' int)]), (r3 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mOffscreenPageLimit int  (LINE:855)\l0x0028: INVOKE  (r3 I:androidx.viewpager.widget.ViewPager) type: VIRTUAL call: androidx.viewpager.widget.ViewPager.populate():void A[MD:():void (m)] (LINE:856)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|RETURN\lORIG_RETURN\l|0x002b: RETURN    (LINE:858)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x002b: RETURN   A[SYNTHETIC] (LINE:858)\l}"];
MethodNode[shape=record,label="{public void androidx.viewpager.widget.ViewPager.setOffscreenPageLimit((r3 'this' I:androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0024 \-\> B:18:0x002b, CROSS_EDGE: B:13:0x0001 \-\> B:15:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002b: r4 'limit' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

