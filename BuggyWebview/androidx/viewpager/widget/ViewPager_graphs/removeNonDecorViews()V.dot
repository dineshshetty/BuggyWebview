digraph "CFG forandroidx.viewpager.widget.ViewPager.removeNonDecorViews()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|r0 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|LOOP_START\lLOOP:0: B:16:0x0001\-\>B:21:0x001a\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v3 'i' int) binds: [B:15:0x0000, B:21:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|if (r0 \>= getChildCount()) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|android.view.View r1 = getChildAt(r0)\landroidx.viewpager.widget.ViewPager$LayoutParams r2 = (androidx.viewpager.widget.ViewPager.LayoutParams) r1.getLayoutParams()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|if (r2.isDecor != false) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|removeViewAt(r0)\lint r0 = r0 + (\-1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|LOOP_END\lLOOP:0: B:16:0x0001\-\>B:21:0x001a\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v4 'i' int) binds: [B:25:0x001a, B:24:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r0 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager.widget.ViewPager.removeNonDecorViews((r4v0 'this' androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x001a \-\> B:16:0x0001, CROSS_EDGE: B:19:0x0013 \-\> B:21:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

