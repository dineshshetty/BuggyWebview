digraph "CFG forandroidx.viewpager.widget.ViewPager.infoForChild(Landroid\/view\/View;)Landroidx\/viewpager\/widget\/ViewPager$ItemInfo;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1512)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|LOOP_START\lLOOP:0: B:16:0x0001\-\>B:21:0x001c\l|0x0001: IGET  (r1 I:java.util.ArrayList\<androidx.viewpager.widget.ViewPager$ItemInfo\>) = (r4 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mItems java.util.ArrayList \l0x0003: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:24:0x001f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IGET  (r1 I:java.util.ArrayList\<androidx.viewpager.widget.ViewPager$ItemInfo\>) = (r4 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mItems java.util.ArrayList  (LINE:1513)\l0x000b: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r1 I:androidx.viewpager.widget.ViewPager$ItemInfo) = (androidx.viewpager.widget.ViewPager$ItemInfo) (r1 I:??[OBJECT, ARRAY]) \l0x0011: IGET  (r2 I:androidx.viewpager.widget.PagerAdapter) = (r4 I:androidx.viewpager.widget.ViewPager) androidx.viewpager.widget.ViewPager.mAdapter androidx.viewpager.widget.PagerAdapter  (LINE:1514)\l0x0013: IGET  (r3 I:java.lang.Object) = (r1 I:androidx.viewpager.widget.ViewPager$ItemInfo A[D('ii' androidx.viewpager.widget.ViewPager$ItemInfo)]) androidx.viewpager.widget.ViewPager.ItemInfo.object java.lang.Object \l0x0015: INVOKE  (r2 I:boolean) = \l  (r2 I:androidx.viewpager.widget.PagerAdapter)\l  (r5 I:android.view.View A[D('child' android.view.View)])\l  (r3 I:java.lang.Object)\l type: VIRTUAL call: androidx.viewpager.widget.PagerAdapter.isViewFromObject(android.view.View, java.lang.Object):boolean A[MD:(android.view.View, java.lang.Object):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c \l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|LOOP_END\lLOOP:0: B:16:0x0001\-\>B:21:0x001c\l|0x001c: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1512)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\l|0x001b: RETURN  (r1 I:androidx.viewpager.widget.ViewPager$ItemInfo A[D('ii' androidx.viewpager.widget.ViewPager$ItemInfo)])  (LINE:1515)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|RETURN\l|0x001f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1518)\l0x0020: RETURN  (r0 I:androidx.viewpager.widget.ViewPager$ItemInfo) \l}"];
MethodNode[shape=record,label="{androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.infoForChild((r4 'this' I:androidx.viewpager.widget.ViewPager A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x001c \-\> B:16:0x0001, CROSS_EDGE: B:23:0x0020 \-\> B:14:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001c: r1 'ii' Landroidx\/viewpager\/widget\/ViewPager$ItemInfo;\l  0x0001\-0x001f: r0 'i' I\l  \-1 \-0x0020: r5 'child' Landroid\/view\/View;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_25[style=dashed];
Node_21 -> Node_16;
Node_25 -> Node_20;
Node_20 -> Node_14;
Node_24 -> Node_22;
Node_22 -> Node_14;
}

