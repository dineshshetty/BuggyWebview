digraph "CFG forandroidx.viewpager.widget.PagerTabStrip.onDraw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_1933658343 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onDraw(r17)\lint int r1 = getHeight()\lint int r3 = r16.mCurrText.getLeft() \- r16.mTabPadding\lint int r4 = r16.mCurrText.getRight() + r16.mTabPadding\lint int r5 = r1 \- r16.mIndicatorHeight\lr16.mTabPaint.setColor((r16.mTabAlpha \<\< 24) \| (r16.mIndicatorColor & androidx.core.view.ViewCompat.MEASURED_SIZE_MASK))\lr17.drawRect(r3, r5, r4, r1, r16.mTabPaint)\l}"];
subgraph cluster_Region_907365208 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_422375573 {
label = "IF [B:3:0x003d] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x003d|if (r16.mDrawFullUnderline != false) goto L3\l}"];
subgraph cluster_Region_2037877025 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003f|r16.mTabPaint.setColor((\-16777216) \| (r16.mIndicatorColor & androidx.core.view.ViewCompat.MEASURED_SIZE_MASK))\lr17.drawRect(getPaddingLeft(), r1 \- r16.mFullUnderlineHeight, getWidth() \- getPaddingRight(), r1, r16.mTabPaint)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0066|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void androidx.viewpager.widget.PagerTabStrip.onDraw((r16v0 'this' androidx.viewpager.widget.PagerTabStrip A[IMMUTABLE_TYPE, THIS]), (r17v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x003d \-\> B:5:0x0066\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_2;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

