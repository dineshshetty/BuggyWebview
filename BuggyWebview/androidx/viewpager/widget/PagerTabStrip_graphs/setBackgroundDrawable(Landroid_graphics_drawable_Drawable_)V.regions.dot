digraph "CFG forandroidx.viewpager.widget.PagerTabStrip.setBackgroundDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_859907980 {
label = "R(2:1|(1:(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.setBackgroundDrawable(r2)\l}"];
subgraph cluster_Region_1517994267 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1310893200 {
label = "IF [B:3:0x0005] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r1.mDrawFullUnderlineSet == false) goto L3\l}"];
subgraph cluster_Region_388134710 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000c|PHI: r0 \l  PHI: (r0v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r1.mDrawFullUnderline = r2 == null\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0007}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0009}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000e|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.viewpager.widget.PagerTabStrip.setBackgroundDrawable((r1v0 'this' androidx.viewpager.widget.PagerTabStrip A[IMMUTABLE_TYPE, THIS]), (r2v0 'd' android.graphics.drawable.Drawable A[D('d' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x000b \-\> B:7:0x000c, CROSS_EDGE: B:3:0x0005 \-\> B:8:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable):void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_8 -> Node_1;
Node_6 -> Node_7;
Node_9 -> Node_1;
}

