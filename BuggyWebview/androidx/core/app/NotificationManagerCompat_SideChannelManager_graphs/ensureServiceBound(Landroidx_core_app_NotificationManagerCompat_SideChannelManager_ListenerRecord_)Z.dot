digraph "CFG forandroidx.core.app.NotificationManagerCompat.SideChannelManager.ensureServiceBound(Landroidx\/core\/app\/NotificationManagerCompat$SideChannelManager$ListenerRecord;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r4.bound == false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|android.content.Intent r0 = new android.content.Intent(androidx.core.app.NotificationManagerCompat.ACTION_BIND_SIDE_CHANNEL).setComponent(r4.componentName)\lr4.bound = r3.mContext.bindService(r0, r3, 33)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|if (r4.bound == false) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|r4.retryCount = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042}"];
Node_11 [shape=record,label="{11\:\ 0x0044|RETURN\l|return r4.bound\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Unable to bind to listener \")\lr1.append(r4.componentName)\landroid.util.Log.w(androidx.core.app.NotificationManagerCompat.TAG, r1.toString())\lr3.mContext.unbindService(r3)\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.app.NotificationManagerCompat.SideChannelManager.ensureServiceBound((r3v0 'this' androidx.core.app.NotificationManagerCompat$SideChannelManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'record' androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord A[D('record' androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0044 \-\> B:1:?, CROSS_EDGE: B:9:0x0025 \-\> B:10:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

