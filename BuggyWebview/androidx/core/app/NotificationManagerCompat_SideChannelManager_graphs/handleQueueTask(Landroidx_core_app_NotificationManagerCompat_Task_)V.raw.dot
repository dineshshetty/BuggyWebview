digraph "CFG forandroidx.core.app.NotificationManagerCompat.SideChannelManager.handleQueueTask(Landroidx\/core\/app\/NotificationManagerCompat$Task;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r3 I:androidx.core.app.NotificationManagerCompat$SideChannelManager) type: DIRECT call: androidx.core.app.NotificationManagerCompat.SideChannelManager.updateListenerMap():void A[MD:():void (m)] (LINE:745)\l0x0003: IGET  (r0 I:java.util.Map\<android.content.ComponentName, androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord\>) = (r3 I:androidx.core.app.NotificationManagerCompat$SideChannelManager) androidx.core.app.NotificationManagerCompat.SideChannelManager.mRecordMap java.util.Map  (LINE:746)\l0x0005: INVOKE  (r0 I:java.util.Collection) = (r0 I:java.util.Map) type: INTERFACE call: java.util.Map.values():java.util.Collection A[MD:():java.util.Collection\<V\> (c)]\l0x0009: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Collection) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|LOOP_START\lLOOP:0: B:3:0x000d\-\>B:5:0x0013\l|0x000d: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|LOOP_END\lLOOP:0: B:3:0x000d\-\>B:5:0x0013\l|0x0013: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0017: CHECK_CAST (r1 I:androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) = (androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) (r1 I:??[OBJECT, ARRAY]) \l0x0019: IGET  (r2 I:java.util.ArrayDeque\<androidx.core.app.NotificationManagerCompat$Task\>) = \l  (r1 I:androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord A[D('record' androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)])\l androidx.core.app.NotificationManagerCompat.SideChannelManager.ListenerRecord.taskQueue java.util.ArrayDeque  (LINE:747)\l0x001b: INVOKE  (r2 I:java.util.ArrayDeque), (r4 I:java.lang.Object A[D('task' androidx.core.app.NotificationManagerCompat$Task)]) type: VIRTUAL call: java.util.ArrayDeque.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x001e: INVOKE  \l  (r3 I:androidx.core.app.NotificationManagerCompat$SideChannelManager)\l  (r1 I:androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord A[D('record' androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)])\l type: DIRECT call: androidx.core.app.NotificationManagerCompat.SideChannelManager.processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):void A[MD:(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):void (m)] (LINE:748)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|RETURN\l|0x0022: RETURN    (LINE:750)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.core.app.NotificationManagerCompat.SideChannelManager.handleQueueTask((r3 'this' I:androidx.core.app.NotificationManagerCompat$SideChannelManager A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.core.app.NotificationManagerCompat$Task A[D('task' androidx.core.app.NotificationManagerCompat$Task), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x0013 \-\> B:3:0x000d\lDebug Info:\l  0x0019\-0x0021: r1 'record' Landroidx\/core\/app\/NotificationManagerCompat$SideChannelManager$ListenerRecord;\l  \-1 \-0x0022: r4 'task' Landroidx\/core\/app\/NotificationManagerCompat$Task;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

