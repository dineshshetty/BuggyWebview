digraph "CFG forandroidx.core.app.NotificationManagerCompat.SideChannelManager.handleMessage(Landroid\/os\/Message;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0003|switch(r5.what) \{\l    case 0: goto L11;\l    case 1: goto L9;\l    case 2: goto L7;\l    case 3: goto L5;\l    default: goto L3;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|handleRetryListenerQueue((android.content.ComponentName) r5.obj)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|handleServiceDisconnected((android.content.ComponentName) r5.obj)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|RETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent r0 = (androidx.core.app.NotificationManagerCompat.ServiceConnectedEvent) r5.obj\lhandleServiceConnected(r0.componentName, r0.iBinder)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|RETURN\l|return true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|handleQueueTask((androidx.core.app.NotificationManagerCompat.Task) r5.obj)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.app.NotificationManagerCompat.SideChannelManager.handleMessage((r4v0 'this' androidx.core.app.NotificationManagerCompat$SideChannelManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'msg' android.os.Message A[D('msg' android.os.Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x000f \-\> B:1:?, CROSS_EDGE: B:9:0x0017 \-\> B:1:?, CROSS_EDGE: B:11:0x0023 \-\> B:1:?, CROSS_EDGE: B:13:0x002b \-\> B:1:?\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.os.Handler.Callback.handleMessage(android.os.Message):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_8;
Node_3 -> Node_10;
Node_3 -> Node_12;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
}

