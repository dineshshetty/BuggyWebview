digraph "CFG forandroidx.core.app.ActivityRecreator.recreate(Landroid\/app\/Activity;)Z" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:109)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:43:0x000b \l}"];
Node_41 [shape=record,label="{41\:\ 0x0007|0x0007: INVOKE  (r12 I:android.app.Activity A[D('activity' android.app.Activity)]) type: VIRTUAL call: android.app.Activity.recreate():void A[MD:():void (c)] (LINE:110)\l}"];
Node_42 [shape=record,label="{42\:\ 0x000a|RETURN\l|0x000a: RETURN  (r1 I:boolean)  (LINE:111)\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) =  type: STATIC call: androidx.core.app.ActivityRecreator.needsRelaunchCall():boolean A[MD:():boolean (m)] (LINE:115)\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0017 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0012|0x0012: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.app.ActivityRecreator.requestRelaunchActivityMethod java.lang.reflect.Method \l}"];
Node_46 [shape=record,label="{46\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0017 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:boolean)  (LINE:116)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0017|0x0017: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.app.ActivityRecreator.performStopActivity2ParamsMethod java.lang.reflect.Method  (LINE:120)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0020 \l}"];
Node_50 [shape=record,label="{50\:\ 0x001b|0x001b: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.app.ActivityRecreator.performStopActivity3ParamsMethod java.lang.reflect.Method \l}"];
Node_51 [shape=record,label="{51\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0020 \l}"];
Node_52 [shape=record,label="{52\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:boolean)  (LINE:121)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0020|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_53 [shape=record,label="{53\:\ 0x0020|TRY_ENTER\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x009d\l|0x0020: SGET  (r0 I:java.lang.reflect.Field) =  androidx.core.app.ActivityRecreator.tokenField java.lang.reflect.Field A[Catch: all \-\> 0x009d, TRY_ENTER] (LINE:124)\l0x0022: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r12 I:java.lang.Object A[D('activity' android.app.Activity)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x009d, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('token' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0029  (LINE:125)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:boolean)  (LINE:126)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0029|TryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x009d\l|0x0029: SGET  (r3 I:java.lang.reflect.Field) =  androidx.core.app.ActivityRecreator.mainThreadField java.lang.reflect.Field A[Catch: all \-\> 0x009d] (LINE:128)\l0x002b: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.lang.reflect.Field), (r12 I:java.lang.Object A[D('activity' android.app.Activity)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x009d, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x002f|0x002f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('activityThread' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0032  (LINE:129)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0031|RETURN\l|0x0031: RETURN  (r2 I:boolean)  (LINE:130)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0032|TRY_LEAVE\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x009d\l|0x0032: INVOKE  (r4 I:android.app.Application) = (r12 I:android.app.Activity A[D('activity' android.app.Activity)]) type: VIRTUAL call: android.app.Activity.getApplication():android.app.Application A[Catch: all \-\> 0x009d, MD:():android.app.Application (c)] (LINE:133)\l0x0036: NEW_INSTANCE  (r5 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) =  androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks A[Catch: all \-\> 0x009d] (LINE:134)\l0x0038: INVOKE  \l  (r5 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)\l  (r12 I:android.app.Activity A[D('activity' android.app.Activity)])\l type: DIRECT call: androidx.core.app.ActivityRecreator.LifecycleCheckCallbacks.\<init\>(android.app.Activity):void A[Catch: all \-\> 0x009d, MD:(android.app.Activity):void (m)]\l0x003b: INVOKE  \l  (r4 I:android.app.Application A[D('application' android.app.Application)])\l  (r5 I:android.app.Application$ActivityLifecycleCallbacks A[D('callbacks' androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)])\l type: VIRTUAL call: android.app.Application.registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks):void A[Catch: all \-\> 0x009d, MD:(android.app.Application$ActivityLifecycleCallbacks):void (c)] (LINE:135)\l0x003e: SGET  (r6 I:android.os.Handler) =  androidx.core.app.ActivityRecreator.mainHandler android.os.Handler A[Catch: all \-\> 0x009d] (LINE:143)\l0x0040: NEW_INSTANCE  (r7 I:androidx.core.app.ActivityRecreator$1) =  androidx.core.app.ActivityRecreator$1 A[Catch: all \-\> 0x009d]\l0x0042: INVOKE  \l  (r7 I:androidx.core.app.ActivityRecreator$1)\l  (r5 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks A[D('callbacks' androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)])\l  (r0 I:java.lang.Object A[D('token' java.lang.Object)])\l type: DIRECT call: androidx.core.app.ActivityRecreator.1.\<init\>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks, java.lang.Object):void A[Catch: all \-\> 0x009d, MD:(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks, java.lang.Object):void (m)]\l0x0045: INVOKE  (r6 I:android.os.Handler), (r7 I:java.lang.Runnable) type: VIRTUAL call: android.os.Handler.post(java.lang.Runnable):boolean A[Catch: all \-\> 0x009d, MD:(java.lang.Runnable):boolean (c), TRY_LEAVE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0048|TRY_ENTER\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x0090\l|0x0048: INVOKE  (r7 I:boolean) =  type: STATIC call: androidx.core.app.ActivityRecreator.needsRelaunchCall():boolean A[Catch: all \-\> 0x0090, MD:():boolean (m), TRY_ENTER] (LINE:151)\l}"];
Node_61 [shape=record,label="{61\:\ 0x004c|0x004c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0083 \l}"];
Node_62 [shape=record,label="{62\:\ 0x004e|TryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x0090\l|0x004e: SGET  (r7 I:java.lang.reflect.Method) =  androidx.core.app.ActivityRecreator.requestRelaunchActivityMethod java.lang.reflect.Method A[Catch: all \-\> 0x0090] (LINE:152)\l0x0050: CONST  (r8 I:??[int, float, short, byte, char]) = (9 ??[int, float, short, byte, char]) \l0x0052: NEW_ARRAY  (r8 I:java.lang.Object[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: all \-\> 0x0090]\l0x0054: APUT  (r8 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY] A[D('token' java.lang.Object)]) A[Catch: all \-\> 0x0090]\l0x0056: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0057: APUT  (r8 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x0059: CONST  (r10 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x005a: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x005c: CONST  (r10 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x005d: INVOKE  (r11 I:java.lang.Integer) = (r2 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: all \-\> 0x0090, MD:(int):java.lang.Integer (c)] (LINE:153)\l0x0061: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r11 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x0063: CONST  (r10 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0064: INVOKE  (r11 I:java.lang.Boolean) = (r2 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: all \-\> 0x0090, MD:(boolean):java.lang.Boolean (c)]\l0x0068: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r11 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x006a: CONST  (r10 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x006b: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x006d: CONST  (r10 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x006e: APUT  (r8 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r9 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x0070: CONST  (r9 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x0071: INVOKE  (r10 I:java.lang.Boolean) = (r2 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: all \-\> 0x0090, MD:(boolean):java.lang.Boolean (c)]\l0x0075: APUT  (r8 I:??[OBJECT, ARRAY][]), (r9 I:??[int, short, byte, char]), (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x0077: CONST  (r9 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0079: INVOKE  (r10 I:java.lang.Boolean) = (r2 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: all \-\> 0x0090, MD:(boolean):java.lang.Boolean (c)]\l0x007d: APUT  (r8 I:??[OBJECT, ARRAY][]), (r9 I:??[int, short, byte, char]), (r10 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0090]\l0x007f: INVOKE  \l  (r7 I:java.lang.reflect.Method)\l  (r3 I:java.lang.Object A[D('activityThread' java.lang.Object)])\l  (r8 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: all \-\> 0x0090, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)] (LINE:152)\l0x0082: GOTO  \-\> 0x0086 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0087|TRY_ENTER\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x009d\l|0x0087: NEW_INSTANCE  (r7 I:androidx.core.app.ActivityRecreator$2) =  androidx.core.app.ActivityRecreator$2 A[Catch: all \-\> 0x009d, TRY_ENTER] (LINE:159)\l0x0089: INVOKE  \l  (r7 I:androidx.core.app.ActivityRecreator$2)\l  (r4 I:android.app.Application A[D('application' android.app.Application)])\l  (r5 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks A[D('callbacks' androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)])\l type: DIRECT call: androidx.core.app.ActivityRecreator.2.\<init\>(android.app.Application, androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks):void A[Catch: all \-\> 0x009d, MD:(android.app.Application, androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks):void (m)]\l0x008c: INVOKE  (r6 I:android.os.Handler), (r7 I:java.lang.Runnable) type: VIRTUAL call: android.os.Handler.post(java.lang.Runnable):boolean A[Catch: all \-\> 0x009d, MD:(java.lang.Runnable):boolean (c)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x008f|RETURN\l|0x008f: RETURN  (r1 I:boolean)  (LINE:157)\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_63 [shape=record,label="{63\:\ 0x0083|TRY_LEAVE\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\lCatch: all \-\> 0x0090\l|0x0083: INVOKE  (r12 I:android.app.Activity A[D('activity' android.app.Activity)]) type: VIRTUAL call: android.app.Activity.recreate():void A[Catch: all \-\> 0x0090, MD:():void (c), TRY_LEAVE] (LINE:155)\l}"];
Node_70 [shape=record,label="{70\:\ 0x009d|ExcHandler: all \-\> 0x009d\l|0x009d: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x009d] (LINE:170)\l}"];
Node_71 [shape=record,label="{71\:\ 0x009e|RETURN\l|0x009e: RETURN  (r2 I:boolean)  (LINE:171)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.app.ActivityRecreator.recreate((r12 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x0016 \-\> B:38:?, CROSS_EDGE: B:52:0x001f \-\> B:38:?, CROSS_EDGE: B:55:0x0028 \-\> B:38:?, CROSS_EDGE: B:58:0x0031 \-\> B:38:?, CROSS_EDGE: B:66:0x008f \-\> B:38:?, CROSS_EDGE: B:71:0x009e \-\> B:38:?, CROSS_EDGE: B:63:0x0083 \-\> B:65:0x0087, CROSS_EDGE: B:72:0x0020 \-\> B:70:0x009d, CROSS_EDGE: B:49:0x0019 \-\> B:72:0x0020, CROSS_EDGE: B:44:0x0010 \-\> B:48:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x009c: r12 'activity' Landroid\/app\/Activity;\l  0x0026\-0x009d: r0 'token' Ljava\/lang\/Object;\l  0x002f\-0x009d: r3 'activityThread' Ljava\/lang\/Object;\l  0x0036\-0x009d: r4 'application' Landroid\/app\/Application;\l  0x003b\-0x009d: r5 'callbacks' Landroidx\/core\/app\/ActivityRecreator$LifecycleCheckCallbacks;\l  0x009e\-0x009e: r0 't' Ljava\/lang\/Throwable;\l  0x009d\-0x009e: r12 'activity' Landroid\/app\/Activity;\lTryCatch #1 \{all \-\> 0x009d, blocks: (B:53:0x0020, B:56:0x0029, B:59:0x0032, B:65:0x0087, B:60:0x0048, B:62:0x004e, B:63:0x0083), top: B:72:0x0020 \}\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_38;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_38;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_72;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_72;
Node_52 -> Node_38;
Node_72 -> Node_53;
Node_72 -> Node_70;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_38;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_38;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_73;
Node_66 -> Node_38;
Node_73 -> Node_70;
Node_63 -> Node_65;
Node_70 -> Node_71;
Node_71 -> Node_38;
}

