digraph "CFG forandroidx.core.app.NotificationCompat.Style.buildIntoRemoteViews(Landroid\/widget\/RemoteViews;Landroid\/widget\/RemoteViews;)V" {
subgraph cluster_Region_1729552926 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|hideNormalContent(r9)\lr9.removeAllViews(androidx.core.C0180R.C0183id.notification_main_column)\lr9.addView(androidx.core.C0180R.C0183id.notification_main_column, r10.clone())\lr9.setViewVisibility(androidx.core.C0180R.C0183id.notification_main_column, 0)\l}"];
subgraph cluster_Region_1384487395 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1559657387 {
label = "IF [B:10:0x001b] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001b|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L3\l}"];
subgraph cluster_Region_113632314 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|r9.setViewPadding(androidx.core.C0180R.C0183id.notification_main_column_container, 0, calculateTopPadding(), 0, 0)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002a|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.NotificationCompat.Style.buildIntoRemoteViews((r8v0 'this' androidx.core.app.NotificationCompat$Style A[IMMUTABLE_TYPE, THIS]), (r9v0 'outerView' android.widget.RemoteViews A[D('outerView' android.widget.RemoteViews), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'innerView' android.widget.RemoteViews A[D('innerView' android.widget.RemoteViews), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001b \-\> B:12:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

