digraph "CFG forandroidx.core.app.NotificationCompat.Style.addCompatExtras(Landroid\/os\/Bundle;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r2.mSummaryTextSet == false) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|r3.putCharSequence(androidx.core.app.NotificationCompat.EXTRA_SUMMARY_TEXT, r2.mSummaryText)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|java.lang.CharSequence r0 = r2.mBigContentTitle\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|if (r0 == null) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|r3.putCharSequence(androidx.core.app.NotificationCompat.EXTRA_TITLE_BIG, r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|java.lang.String r0 = getClassName()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|if (r0 == null) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|r3.putString(androidx.core.app.NotificationCompat.EXTRA_COMPAT_TEMPLATE, r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.NotificationCompat.Style.addCompatExtras((r2v0 'this' androidx.core.app.NotificationCompat$Style A[IMMUTABLE_TYPE, THIS]), (r3v0 'extras' android.os.Bundle A[D('extras' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0018 \-\> B:24:0x001f, CROSS_EDGE: B:19:0x000d \-\> B:21:0x0014, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.app.NotificationCompat.Style.addCompatExtras(android.os.Bundle):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

