digraph "CFG forandroidx.core.app.NotificationCompat.Style.addCompatExtras(Landroid\/os\/Bundle;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:androidx.core.app.NotificationCompat$Style) androidx.core.app.NotificationCompat.Style.mSummaryTextSet boolean  (LINE:2634)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IGET  (r0 I:java.lang.CharSequence) = (r2 I:androidx.core.app.NotificationCompat$Style) androidx.core.app.NotificationCompat.Style.mSummaryText java.lang.CharSequence  (LINE:2635)\l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"android.summaryText\" \l0x0008: INVOKE  (r3 I:android.os.Bundle A[D('extras' android.os.Bundle)]), (r1 I:java.lang.String), (r0 I:java.lang.CharSequence) type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IGET  (r0 I:java.lang.CharSequence) = (r2 I:androidx.core.app.NotificationCompat$Style) androidx.core.app.NotificationCompat.Style.mBigContentTitle java.lang.CharSequence  (LINE:2637)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0014 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: CONST_STR  (r1 I:java.lang.String) =  \"android.title.big\"  (LINE:2638)\l0x0011: INVOKE  (r3 I:android.os.Bundle A[D('extras' android.os.Bundle)]), (r1 I:java.lang.String), (r0 I:java.lang.CharSequence) type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.String) = (r2 I:androidx.core.app.NotificationCompat$Style) type: VIRTUAL call: androidx.core.app.NotificationCompat.Style.getClassName():java.lang.String A[MD:():java.lang.String (m)] (LINE:2640)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('className' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:?  (LINE:2641)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: CONST_STR  (r1 I:java.lang.String) =  \"androidx.core.app.extra.COMPAT_TEMPLATE\"  (LINE:2642)\l0x001c: INVOKE  \l  (r3 I:android.os.Bundle A[D('extras' android.os.Bundle)])\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String A[D('className' java.lang.String)])\l type: VIRTUAL call: android.os.Bundle.putString(java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\lORIG_RETURN\l|0x001f: RETURN    (LINE:2644)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN   A[SYNTHETIC] (LINE:2644)\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.NotificationCompat.Style.addCompatExtras((r2 'this' I:androidx.core.app.NotificationCompat$Style A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Bundle A[D('extras' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0018 \-\> B:24:0x001f, CROSS_EDGE: B:19:0x000d \-\> B:21:0x0014, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x001f: r0 'className' Ljava\/lang\/String;\l  \-1 \-0x001f: r3 'extras' Landroid\/os\/Bundle;\lMETHOD_OVERRIDE: [androidx.core.app.NotificationCompat.Style.addCompatExtras(android.os.Bundle):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

