digraph "CFG forandroidx.core.app.NotificationCompat.Style.build()Landroid\/app\/Notification;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2561)\l0x0001: IGET  (r1 I:androidx.core.app.NotificationCompat$Builder) = (r2 I:androidx.core.app.NotificationCompat$Style) androidx.core.app.NotificationCompat.Style.mBuilder androidx.core.app.NotificationCompat$Builder  (LINE:2562)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: INVOKE  (r0 I:android.app.Notification A[D('notification' android.app.Notification)]) = (r1 I:androidx.core.app.NotificationCompat$Builder) type: VIRTUAL call: androidx.core.app.NotificationCompat.Builder.build():android.app.Notification A[MD:():android.app.Notification (m)] (LINE:2563)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|RETURN\lORIG_RETURN\l|0x0009: RETURN  (r0 I:android.app.Notification A[D('notification' android.app.Notification)])  (LINE:2565)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0009: RETURN  (r0 I:android.app.Notification A[D('notification' android.app.Notification)]) A[SYNTHETIC] (LINE:2565)\l}"];
MethodNode[shape=record,label="{public android.app.Notification androidx.core.app.NotificationCompat.Style.build((r2 'this' I:androidx.core.app.NotificationCompat$Style A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0003 \-\> B:12:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0009: r0 'notification' Landroid\/app\/Notification;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

