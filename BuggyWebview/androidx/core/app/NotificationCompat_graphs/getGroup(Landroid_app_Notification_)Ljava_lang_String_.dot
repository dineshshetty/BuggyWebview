digraph "CFG forandroidx.core.app.NotificationCompat.getGroup(Landroid\/app\/Notification;)Ljava\/lang\/String;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 20) goto L6\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006}"];
Node_21 [shape=record,label="{21\:\ 0x000a|RETURN\l|return r3.getGroup()\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (android.os.Build.VERSION.SDK_INT \< 19) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013}"];
Node_25 [shape=record,label="{25\:\ 0x0019|RETURN\l|return r3.extras.getString(androidx.core.app.NotificationCompatExtras.EXTRA_GROUP_KEY)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a}"];
Node_27 [shape=record,label="{27\:\ 0x001e|if (android.os.Build.VERSION.SDK_INT \< 16) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0020}"];
Node_29 [shape=record,label="{29\:\ 0x0028|RETURN\l|return androidx.core.app.NotificationCompatJellybean.getExtras(r3).getString(androidx.core.app.NotificationCompatExtras.EXTRA_GROUP_KEY)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static java.lang.String androidx.core.app.NotificationCompat.getGroup((r3v0 'notification' android.app.Notification A[D('notification' android.app.Notification), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0019 \-\> B:17:?, CROSS_EDGE: B:29:0x0028 \-\> B:17:?, CROSS_EDGE: B:31:0x002a \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_17;
}

