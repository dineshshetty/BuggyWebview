digraph "CFG forandroidx.core.app.NotificationCompat.getGroup(Landroid\/app\/Notification;)Ljava\/lang\/String;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:7651)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (20 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:22:0x000b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.String) = (r3 I:android.app.Notification A[D('notification' android.app.Notification)]) type: VIRTUAL call: android.app.Notification.getGroup():java.lang.String A[MD:():java.lang.String (c)] (LINE:7652)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.String) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:7653)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"android.support.groupKey\" \l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:26:0x001a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: IGET  (r0 I:android.os.Bundle) = (r3 I:android.app.Notification A[D('notification' android.app.Notification)]) android.app.Notification.extras android.os.Bundle  (LINE:7654)\l0x0015: INVOKE  (r0 I:java.lang.String) = (r0 I:android.os.Bundle), (r2 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getString(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:java.lang.String) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:7655)\l0x001c: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|0x001e: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:30:0x0029 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0020|0x0020: INVOKE  (r0 I:android.os.Bundle) = (r3 I:android.app.Notification A[D('notification' android.app.Notification)]) type: STATIC call: androidx.core.app.NotificationCompatJellybean.getExtras(android.app.Notification):android.os.Bundle A[MD:(android.app.Notification):android.os.Bundle (m)] (LINE:7656)\l0x0024: INVOKE  (r0 I:java.lang.String) = (r0 I:android.os.Bundle), (r2 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getString(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|RETURN\l|0x0028: RETURN  (r0 I:java.lang.String) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|RETURN\l|0x0029: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:7659)\l0x002a: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String androidx.core.app.NotificationCompat.getGroup((r3 I:android.app.Notification A[D('notification' android.app.Notification), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0019 \-\> B:17:?, CROSS_EDGE: B:29:0x0028 \-\> B:17:?, CROSS_EDGE: B:31:0x002a \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002a: r3 'notification' Landroid\/app\/Notification;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_17;
}

