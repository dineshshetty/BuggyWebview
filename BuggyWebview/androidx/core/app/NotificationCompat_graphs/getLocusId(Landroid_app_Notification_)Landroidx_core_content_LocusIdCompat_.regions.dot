digraph "CFG forandroidx.core.app.NotificationCompat.getLocusId(Landroid\/app\/Notification;)Landroidx\/core\/content\/LocusIdCompat;" {
subgraph cluster_Region_1034501565 {
label = "R(1:(2:(1:8)|(1:6))) | DECL_VAR: android.content.LocusId locusId\l";
node [shape=record,color=blue];
subgraph cluster_Region_1477861285 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_666479642 {
label = "IF [B:14:0x0005, B:16:0x000b] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \< 29) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|ADDED_TO_REGION\l|if ((r0 = r3.getLocusId()) == null) goto L8\l}"];
subgraph cluster_Region_1836773564 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_424311931 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\lORIG_RETURN\l|return androidx.core.content.LocusIdCompat.toLocusIdCompat(r0)\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0007}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000e}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0013|RETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{public static androidx.core.content.LocusIdCompat androidx.core.app.NotificationCompat.getLocusId((r3v0 'notification' android.app.Notification A[D('notification' android.app.Notification), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000b \-\> B:19:0x0012, CROSS_EDGE: B:20:0x0013 \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_16 -> Node_18[style=dashed];
Node_16 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_12;
}

