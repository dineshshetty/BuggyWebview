digraph "CFG forandroidx.core.app.ComponentActivity.shouldSkipDump([Ljava\/lang\/String;)Z" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:171)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0001|0x0001: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('args' java.lang.String[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x004b \l}"];
Node_40 [shape=record,label="{40\:\ 0x0003|0x0003: ARRAY_LENGTH  (r1 I:int) = (r5 I:??[] A[D('args' java.lang.String[])]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0004|0x0004: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:68:0x004b \l}"];
Node_42 [shape=record,label="{42\:\ 0x0006|0x0006: AGET  (r1 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r0 I:??[int, short, byte, char])  (LINE:173)\l0x0008: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0009: INVOKE  (r3 I:int) = (r1 I:java.lang.String) type: VIRTUAL call: java.lang.String.hashCode():int A[MD:():int (c)]\l0x000d: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x000e|0x000e: SWITCH  (r3 I:??)\l case \-645125871: goto B:51:0x0026\l case 1159329357: goto B:48:0x001c\l case 1455016274: goto B:45:0x0012\l default: goto B:54:0x002f \l}"];
Node_45 [shape=record,label="{45\:\ 0x0012|0x0012: CONST_STR  (r3 I:java.lang.String) =  \"\-\-autofill\" \l0x0014: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x002f \l}"];
Node_47 [shape=record,label="{47\:\ 0x001a|0x001a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x001c|0x001c: CONST_STR  (r3 I:java.lang.String) =  \"\-\-contentcapture\" \l0x001e: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x002f \l}"];
Node_50 [shape=record,label="{50\:\ 0x0024|0x0024: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0026|0x0026: CONST_STR  (r3 I:java.lang.String) =  \"\-\-translation\" \l0x0028: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x002f \l}"];
Node_53 [shape=record,label="{53\:\ 0x002e|0x002e: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x002f|0x002f: SWITCH  (r2 I:??)\l case 0: goto B:64:0x0043\l case 1: goto B:60:0x003b\l case 2: goto B:56:0x0033\l default: goto B:68:0x004b \l}"];
Node_56 [shape=record,label="{56\:\ 0x0033|0x0033: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:179)\l0x0035: CONST  (r2 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0037|0x0037: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:69:? \l}"];
Node_58 [shape=record,label="{58\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x003a: RETURN  (r0 I:boolean) \l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|0x003a: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_60 [shape=record,label="{60\:\ 0x003b|0x003b: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:177)\l0x003d: CONST  (r2 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x003f|0x003f: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:70:? \l}"];
Node_62 [shape=record,label="{62\:\ 0x0041|RETURN\lORIG_RETURN\l|0x0041: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0042: RETURN  (r0 I:boolean) \l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|0x0042: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0043|0x0043: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:175)\l0x0045: CONST  (r2 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0047|0x0047: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:71:? \l}"];
Node_66 [shape=record,label="{66\:\ 0x0049|RETURN\lORIG_RETURN\l|0x0049: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004a: RETURN  (r0 I:boolean) \l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|0x004a: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_68 [shape=record,label="{68\:\ 0x004b|RETURN\l|0x004b: RETURN  (r0 I:boolean)  (LINE:182)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.app.ComponentActivity.shouldSkipDump((r5 I:java.lang.String[] A[D('args' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x0037 \-\> B:59:0x003a, CROSS_EDGE: B:63:0x0042 \-\> B:37:?, CROSS_EDGE: B:61:0x003f \-\> B:63:0x0042, CROSS_EDGE: B:67:0x004a \-\> B:37:?, CROSS_EDGE: B:65:0x0047 \-\> B:67:0x004a, CROSS_EDGE: B:68:0x004b \-\> B:37:?, CROSS_EDGE: B:46:0x0018 \-\> B:54:0x002f, CROSS_EDGE: B:50:0x0024 \-\> B:54:0x002f, CROSS_EDGE: B:49:0x0022 \-\> B:54:0x002f, CROSS_EDGE: B:53:0x002e \-\> B:54:0x002f, CROSS_EDGE: B:52:0x002c \-\> B:54:0x002f, CROSS_EDGE: B:43:0x000e \-\> B:54:0x002f, CROSS_EDGE: B:41:0x0004 \-\> B:68:0x004b, CROSS_EDGE: B:39:0x0001 \-\> B:68:0x004b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0063: r5 'args' [Ljava\/lang\/String;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_68;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_68;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_48;
Node_43 -> Node_51;
Node_43 -> Node_54;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_54;
Node_47 -> Node_54;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_54;
Node_50 -> Node_54;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_54 -> Node_60;
Node_54 -> Node_64;
Node_54 -> Node_68;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_69;
Node_58 -> Node_37;
Node_69 -> Node_37;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_70;
Node_62 -> Node_37;
Node_70 -> Node_37;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_71;
Node_66 -> Node_37;
Node_71 -> Node_37;
Node_68 -> Node_37;
}

