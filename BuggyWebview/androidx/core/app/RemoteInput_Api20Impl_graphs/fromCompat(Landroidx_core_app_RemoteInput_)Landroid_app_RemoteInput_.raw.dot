digraph "CFG forandroidx.core.app.RemoteInput.Api20Impl.fromCompat(Landroidx\/core\/app\/RemoteInput;)Landroid\/app\/RemoteInput;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.app.RemoteInput$Builder) =  android.app.RemoteInput$Builder  (LINE:669)\l0x0002: INVOKE  (r1 I:java.lang.String) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getResultKey():java.lang.String A[MD:():java.lang.String (m)] (LINE:670)\l0x0006: INVOKE  (r0 I:android.app.RemoteInput$Builder), (r1 I:java.lang.String) type: DIRECT call: android.app.RemoteInput.Builder.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0009: INVOKE  (r1 I:java.lang.CharSequence) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getLabel():java.lang.CharSequence A[MD:():java.lang.CharSequence (m)] (LINE:671)\l0x000d: INVOKE  (r0 I:android.app.RemoteInput$Builder) = (r0 I:android.app.RemoteInput$Builder), (r1 I:java.lang.CharSequence) type: VIRTUAL call: android.app.RemoteInput.Builder.setLabel(java.lang.CharSequence):android.app.RemoteInput$Builder A[MD:(java.lang.CharSequence):android.app.RemoteInput$Builder (c)]\l0x0011: INVOKE  (r1 I:java.lang.CharSequence[]) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getChoices():java.lang.CharSequence[] A[MD:():java.lang.CharSequence[] (m)] (LINE:672)\l0x0015: INVOKE  (r0 I:android.app.RemoteInput$Builder) = (r0 I:android.app.RemoteInput$Builder), (r1 I:java.lang.CharSequence[]) type: VIRTUAL call: android.app.RemoteInput.Builder.setChoices(java.lang.CharSequence[]):android.app.RemoteInput$Builder A[MD:(java.lang.CharSequence[]):android.app.RemoteInput$Builder (c)]\l0x0019: INVOKE  (r1 I:boolean) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowFreeFormInput():boolean A[MD:():boolean (m)] (LINE:673)\l0x001d: INVOKE  (r0 I:android.app.RemoteInput$Builder) = (r0 I:android.app.RemoteInput$Builder), (r1 I:boolean) type: VIRTUAL call: android.app.RemoteInput.Builder.setAllowFreeFormInput(boolean):android.app.RemoteInput$Builder A[MD:(boolean):android.app.RemoteInput$Builder (c)]\l0x0021: INVOKE  (r1 I:android.os.Bundle) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getExtras():android.os.Bundle A[MD:():android.os.Bundle (m)] (LINE:674)\l0x0025: INVOKE  (r0 I:android.app.RemoteInput$Builder) = (r0 I:android.app.RemoteInput$Builder), (r1 I:android.os.Bundle) type: VIRTUAL call: android.app.RemoteInput.Builder.addExtras(android.os.Bundle):android.app.RemoteInput$Builder A[MD:(android.os.Bundle):android.app.RemoteInput$Builder (c)]\l0x0029: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:675)\l0x002b: CONST  (r2 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|0x002d: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:26:0x004a \l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|0x002f: INVOKE  (r1 I:java.util.Set) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowedDataTypes():java.util.Set A[MD:():java.util.Set\<java.lang.String\> (m)] (LINE:676)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|0x0033: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowedDataTypes' java.util.Set\<java.lang.String\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x004a  (LINE:677)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0035|0x0035: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.Set A[D('allowedDataTypes' java.util.Set\<java.lang.String\>)]) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:678)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0039|LOOP_START\lLOOP:0: B:23:0x0039\-\>B:25:0x003f\l|0x0039: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x003d|0x003d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x004a \l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|LOOP_END\lLOOP:0: B:23:0x0039\-\>B:25:0x003f\l|0x003f: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0043: CHECK_CAST (r3 I:java.lang.String) = (java.lang.String) (r3 I:??[OBJECT, ARRAY]) \l0x0045: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:679)\l0x0046: INVOKE  \l  (r0 I:android.app.RemoteInput$Builder A[D('builder' android.app.RemoteInput$Builder)])\l  (r3 I:java.lang.String A[D('allowedDataType' java.lang.String)])\l  (r4 I:boolean)\l type: STATIC call: androidx.core.app.RemoteInput.Api26Impl.setAllowDataType(android.app.RemoteInput$Builder, java.lang.String, boolean):android.app.RemoteInput$Builder A[MD:(android.app.RemoteInput$Builder, java.lang.String, boolean):android.app.RemoteInput$Builder (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x004a|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004a|0x004a: SGET  (r1 I:int A[D('allowedDataTypes' java.util.Set\<java.lang.String\>)]) =  android.os.Build.VERSION.SDK_INT int  (LINE:683)\l0x004c: CONST  (r2 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x004e|0x004e: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:29:0x0057 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0050|0x0050: INVOKE  (r1 I:int) = (r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getEditChoicesBeforeSending():int A[MD:():int (m)] (LINE:684)\l0x0054: INVOKE  (r0 I:android.app.RemoteInput$Builder A[D('builder' android.app.RemoteInput$Builder)]), (r1 I:int) type: STATIC call: androidx.core.app.RemoteInput.Api29Impl.setEditChoicesBeforeSending(android.app.RemoteInput$Builder, int):android.app.RemoteInput$Builder A[MD:(android.app.RemoteInput$Builder, int):android.app.RemoteInput$Builder (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0057|0x0057: INVOKE  (r1 I:android.app.RemoteInput) = (r0 I:android.app.RemoteInput$Builder A[D('builder' android.app.RemoteInput$Builder)]) type: VIRTUAL call: android.app.RemoteInput.Builder.build():android.app.RemoteInput A[MD:():android.app.RemoteInput (c)] (LINE:686)\l}"];
Node_30 [shape=record,label="{30\:\ 0x005b|RETURN\l|0x005b: RETURN  (r1 I:android.app.RemoteInput) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.app.RemoteInput androidx.core.app.RemoteInput.Api20Impl.fromCompat((r5 I:androidx.core.app.RemoteInput A[D('src' androidx.core.app.RemoteInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x003f \-\> B:23:0x0039, CROSS_EDGE: B:27:0x004e \-\> B:29:0x0057, CROSS_EDGE: B:21:0x0033 \-\> B:26:0x004a, CROSS_EDGE: B:19:0x002d \-\> B:26:0x004a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0045\-0x0049: r3 'allowedDataType' Ljava\/lang\/String;\l  0x0033\-0x004a: r1 'allowedDataTypes' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Ljava\/lang\/String;\>;\l  0x0029\-0x005b: r0 'builder' Landroid\/app\/RemoteInput$Builder;\l  \-1 \-0x005b: r5 'src' Landroidx\/core\/app\/RemoteInput;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_23;
Node_31 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

