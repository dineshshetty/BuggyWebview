digraph "CFG forandroidx.core.app.NotificationCompatJellybean.getBundleArrayFromBundle(Landroid\/os\/Bundle;Ljava\/lang\/String;)[Landroid\/os\/Bundle;" {
subgraph cluster_Region_469292115 {
label = "R(2:1|(2:(1:8)|(2:4|5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|android.os.Parcelable[] android.os.Parcelable[] r0 = r3.getParcelableArray(r4)\l}"];
subgraph cluster_Region_993282397 {
label = "R(2:(1:8)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_879517057 {
label = "IF [B:13:0x0006, B:14:0x0008] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0006|if ((r0 instanceof android.os.Bundle[]) != false) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|ADDED_TO_REGION\l|if (r0 == null) goto L7\l}"];
subgraph cluster_Region_561983710 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001b|RETURN\l|return (android.os.Bundle[]) r0\l}"];
}
}
subgraph cluster_Region_373247538 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000b|android.os.Bundle[] android.os.Bundle[] r1 = (android.os.Bundle[]) java.util.Arrays.copyOf(r0, r0.length, android.os.Bundle[].class)\lr3.putParcelableArray(r4, r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\l|return r1\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0018}"];
MethodNode[shape=record,label="{private static android.os.Bundle[] androidx.core.app.NotificationCompatJellybean.getBundleArrayFromBundle((r3v0 'bundle' android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'key' java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001b \-\> B:11:?, CROSS_EDGE: B:13:0x0006 \-\> B:18:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_16[style=dashed];
Node_14 -> Node_18;
Node_19 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_10 -> Node_12;
Node_18 -> Node_19;
}

