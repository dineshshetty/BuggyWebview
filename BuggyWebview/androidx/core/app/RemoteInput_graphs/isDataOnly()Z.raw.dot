digraph "CFG forandroidx.core.app.RemoteInput.isDataOnly()Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowFreeFormInput():boolean A[MD:():boolean (m)] (LINE:149)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0025 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.CharSequence[]) = (r1 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getChoices():java.lang.CharSequence[] A[MD:():java.lang.CharSequence[] (m)] (LINE:150)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0013 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.CharSequence[]) = (r1 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getChoices():java.lang.CharSequence[] A[MD:():java.lang.CharSequence[] (m)]\l0x0010: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0025 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: INVOKE  (r0 I:java.util.Set) = (r1 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowedDataTypes():java.util.Set A[MD:():java.util.Set\<java.lang.String\> (m)] (LINE:151)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0025 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: INVOKE  (r0 I:java.util.Set) = (r1 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowedDataTypes():java.util.Set A[MD:():java.util.Set\<java.lang.String\> (m)] (LINE:152)\l0x001d: INVOKE  (r0 I:boolean) = (r0 I:java.util.Set) type: INTERFACE call: java.util.Set.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0025 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|SYNTHETIC\lRETURN\l|0x0023: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0026: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:149)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: RETURN  (r0 I:boolean)  (LINE:149)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.app.RemoteInput.isDataOnly((r1 'this' I:androidx.core.app.RemoteInput A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0025 \-\> B:30:0x0026, CROSS_EDGE: B:25:0x0017 \-\> B:29:0x0025, CROSS_EDGE: B:23:0x0011 \-\> B:29:0x0025, CROSS_EDGE: B:21:0x000a \-\> B:24:0x0013, CROSS_EDGE: B:19:0x0004 \-\> B:29:0x0025\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_17;
Node_29 -> Node_17;
}

