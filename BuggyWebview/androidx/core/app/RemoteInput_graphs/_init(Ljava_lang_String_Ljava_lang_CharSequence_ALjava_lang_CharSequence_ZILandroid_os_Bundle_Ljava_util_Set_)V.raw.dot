digraph "CFG forandroidx.core.app.RemoteInput.\<init\>(Ljava\/lang\/String;Ljava\/lang\/CharSequence;[Ljava\/lang\/CharSequence;ZILandroid\/os\/Bundle;Ljava\/util\/Set;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:96)\l0x0003: IPUT  (r3 I:java.lang.String A[D('resultKey' java.lang.String)]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mResultKey java.lang.String  (LINE:97)\l0x0005: IPUT  (r4 I:java.lang.CharSequence A[D('label' java.lang.CharSequence)]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mLabel java.lang.CharSequence  (LINE:98)\l0x0007: IPUT  (r5 I:java.lang.CharSequence[] A[D('choices' java.lang.CharSequence[])]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mChoices java.lang.CharSequence[]  (LINE:99)\l0x0009: IPUT  (r6 I:boolean A[D('allowFreeFormTextInput' boolean)]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mAllowFreeFormTextInput boolean  (LINE:100)\l0x000b: IPUT  (r7 I:int A[D('editChoicesBeforeSending' int)]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mEditChoicesBeforeSending int  (LINE:101)\l0x000d: IPUT  (r8 I:android.os.Bundle A[D('extras' android.os.Bundle)]), (r2 I:androidx.core.app.RemoteInput) androidx.core.app.RemoteInput.mExtras android.os.Bundle  (LINE:102)\l0x000f: IPUT  \l  (r9 I:java.util.Set\<java.lang.String\> A[D('allowedDataTypes' java.util.Set\<java.lang.String\>)])\l  (r2 I:androidx.core.app.RemoteInput)\l androidx.core.app.RemoteInput.mAllowedDataTypes java.util.Set  (LINE:103)\l0x0011: INVOKE  (r0 I:int) = (r2 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getEditChoicesBeforeSending():int A[MD:():int (m)] (LINE:104)\l0x0015: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0027 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = (r2 I:androidx.core.app.RemoteInput) type: VIRTUAL call: androidx.core.app.RemoteInput.getAllowFreeFormInput():boolean A[MD:():boolean (m)] (LINE:105)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001f \l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:106)\l0x0021: CONST_STR  (r1 I:java.lang.String) =  \"setEditChoicesBeforeSending requires setAllowFreeFormInput\" \l0x0023: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0027: RETURN   A[SYNTHETIC] (LINE:109)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|RETURN\lORIG_RETURN\l|0x0027: RETURN    (LINE:109)\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.RemoteInput.\<init\>((r2 'this' I:androidx.core.app.RemoteInput A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('resultKey' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.CharSequence A[D('label' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.CharSequence[] A[D('choices' java.lang.CharSequence[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('allowFreeFormTextInput' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('editChoicesBeforeSending' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.os.Bundle A[D('extras' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Set\<java.lang.String\> A[D('allowedDataTypes' java.util.Set\<java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0027 \-\> B:12:?, CROSS_EDGE: B:14:0x0016 \-\> B:20:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0027: r3 'resultKey' Ljava\/lang\/String;\l  \-1 \-0x0027: r4 'label' Ljava\/lang\/CharSequence;\l  \-1 \-0x0027: r5 'choices' [Ljava\/lang\/CharSequence;\l  \-1 \-0x0027: r6 'allowFreeFormTextInput' Z\l  \-1 \-0x0027: r7 'editChoicesBeforeSending' I\l  \-1 \-0x0027: r8 'extras' Landroid\/os\/Bundle;\l  0x0000\-0x0027: r9 'allowedDataTypes' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Ljava\/lang\/String;\>;\lSIGNATURE: (Ljava\/lang\/String;Ljava\/lang\/CharSequence;[Ljava\/lang\/CharSequence;ZILandroid\/os\/Bundle;Ljava\/util\/Set\<Ljava\/lang\/String;\>;)V\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

