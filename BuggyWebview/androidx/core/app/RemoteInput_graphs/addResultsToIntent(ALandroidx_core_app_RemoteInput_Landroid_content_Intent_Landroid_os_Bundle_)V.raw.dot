digraph "CFG forandroidx.core.app.RemoteInput.addResultsToIntent([Landroidx\/core\/app\/RemoteInput;Landroid\/content\/Intent;Landroid\/os\/Bundle;)V" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:415)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:49:0x000f \l}"];
Node_48 [shape=record,label="{48\:\ 0x0006|0x0006: INVOKE  (r0 I:android.app.RemoteInput[]) = (r9 I:androidx.core.app.RemoteInput[] A[D('remoteInputs' androidx.core.app.RemoteInput[])]) type: STATIC call: androidx.core.app.RemoteInput.fromCompat(androidx.core.app.RemoteInput[]):android.app.RemoteInput[] A[MD:(androidx.core.app.RemoteInput[]):android.app.RemoteInput[] (m)] (LINE:416)\l0x000a: INVOKE  \l  (r0 I:java.lang.Object)\l  (r10 I:android.content.Intent A[D('intent' android.content.Intent)])\l  (r11 I:android.os.Bundle A[D('results' android.os.Bundle)])\l type: STATIC call: androidx.core.app.RemoteInput.Api20Impl.addResultsToIntent(java.lang.Object, android.content.Intent, android.os.Bundle):void A[MD:(java.lang.Object, android.content.Intent, android.os.Bundle):void (m)]\l}"];
Node_78 [shape=record,label="{78\:\ 0x009b|RETURN\lORIG_RETURN\l|0x009b: RETURN    (LINE:467)\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x000f|0x000f: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:417)\l0x0011: CONST  (r1 I:??[int, float, short, byte, char]) = (20 ??[int, float, short, byte, char]) \l0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0014|0x0014: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:62:0x004d \l}"];
Node_51 [shape=record,label="{51\:\ 0x0017|0x0017: INVOKE  (r0 I:android.os.Bundle) = (r10 I:android.content.Intent A[D('intent' android.content.Intent)]) type: STATIC call: androidx.core.app.RemoteInput.getResultsFromIntent(android.content.Intent):android.os.Bundle A[MD:(android.content.Intent):android.os.Bundle (m)] (LINE:422)\l0x001b: INVOKE  (r1 I:int) = (r10 I:android.content.Intent A[D('intent' android.content.Intent)]) type: STATIC call: androidx.core.app.RemoteInput.getResultsSource(android.content.Intent):int A[MD:(android.content.Intent):int (m)] (LINE:425)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existingTextResults' android.os.Bundle)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0023  (LINE:427)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0021|0x0021: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('existingTextResults' android.os.Bundle)]) = (r11 I:??[OBJECT, ARRAY] A[D('results' android.os.Bundle)])  (LINE:428)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0026|0x0026: ARRAY_LENGTH  (r3 I:int) = (r9 I:??[] A[D('remoteInputs' androidx.core.app.RemoteInput[])])  (LINE:432)\l0x0027: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0028|LOOP_START\lLOOP:0: B:56:0x0028\-\>B:60:0x0046\l|0x0028: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:79:0x0049 \l}"];
Node_57 [shape=record,label="{57\:\ 0x002a|0x002a: AGET  (r5 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][] A[D('remoteInputs' androidx.core.app.RemoteInput[])]), (r4 I:??[int, short, byte, char]) \l0x002d: INVOKE  (r6 I:java.lang.String) = (r5 I:androidx.core.app.RemoteInput A[D('input' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getResultKey():java.lang.String A[MD:():java.lang.String (m)] (LINE:436)\l0x0031: INVOKE  (r6 I:java.util.Map) = (r10 I:android.content.Intent A[D('intent' android.content.Intent)]), (r6 I:java.lang.String) type: STATIC call: androidx.core.app.RemoteInput.getDataResultsFromIntent(android.content.Intent, java.lang.String):java.util.Map A[MD:(android.content.Intent, java.lang.String):java.util.Map\<java.lang.String, android.net.Uri\> (m)] (LINE:435)\l0x0035: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:437)\l0x0036: NEW_ARRAY  (r7 I:androidx.core.app.RemoteInput[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: androidx.core.app.RemoteInput[] \l0x0038: APUT  \l  (r7 I:??[OBJECT, ARRAY][] A[D('arr' androidx.core.app.RemoteInput[])])\l  (r2 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('input' androidx.core.app.RemoteInput)])\l  (LINE:438)\l0x003a: INVOKE  (r8 I:android.app.RemoteInput[]) = (r7 I:androidx.core.app.RemoteInput[] A[D('arr' androidx.core.app.RemoteInput[])]) type: STATIC call: androidx.core.app.RemoteInput.fromCompat(androidx.core.app.RemoteInput[]):android.app.RemoteInput[] A[MD:(androidx.core.app.RemoteInput[]):android.app.RemoteInput[] (m)] (LINE:439)\l0x003e: INVOKE  \l  (r8 I:java.lang.Object)\l  (r10 I:android.content.Intent A[D('intent' android.content.Intent)])\l  (r0 I:android.os.Bundle A[D('existingTextResults' android.os.Bundle)])\l type: STATIC call: androidx.core.app.RemoteInput.Api20Impl.addResultsToIntent(java.lang.Object, android.content.Intent, android.os.Bundle):void A[MD:(java.lang.Object, android.content.Intent, android.os.Bundle):void (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0041|0x0041: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existingDataResults' java.util.Map\<java.lang.String, android.net.Uri\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0046  (LINE:440)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0043|0x0043: INVOKE  \l  (r5 I:androidx.core.app.RemoteInput A[D('input' androidx.core.app.RemoteInput)])\l  (r10 I:android.content.Intent A[D('intent' android.content.Intent)])\l  (r6 I:java.util.Map A[D('existingDataResults' java.util.Map\<java.lang.String, android.net.Uri\>)])\l type: STATIC call: androidx.core.app.RemoteInput.addDataResultToIntent(androidx.core.app.RemoteInput, android.content.Intent, java.util.Map):void A[MD:(androidx.core.app.RemoteInput, android.content.Intent, java.util.Map\<java.lang.String, android.net.Uri\>):void (m)] (LINE:441)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0046|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0046|LOOP_END\lLOOP:0: B:56:0x0028\-\>B:60:0x0046\l|0x0046: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:432)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0046|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0049|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0049|0x0049: INVOKE  (r10 I:android.content.Intent A[D('intent' android.content.Intent)]), (r1 I:int A[D('resultsSource' int)]) type: STATIC call: androidx.core.app.RemoteInput.setResultsSource(android.content.Intent, int):void A[MD:(android.content.Intent, int):void (m)] (LINE:446)\l}"];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lRETURN\l|0x009b: RETURN   A[SYNTHETIC] (LINE:467)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0023|0x0023: INVOKE  \l  (r0 I:android.os.Bundle A[D('existingTextResults' android.os.Bundle)])\l  (r11 I:android.os.Bundle A[D('results' android.os.Bundle)])\l type: VIRTUAL call: android.os.Bundle.putAll(android.os.Bundle):void A[MD:(android.os.Bundle):void (c)] (LINE:430)\l}"];
Node_62 [shape=record,label="{62\:\ 0x004d|0x004d: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:447)\l0x004f: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0051|0x0051: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:87:? \l}"];
Node_64 [shape=record,label="{64\:\ 0x0053|0x0053: INVOKE  (r0 I:android.content.Intent) = (r10 I:android.content.Intent A[D('intent' android.content.Intent)]) type: STATIC call: androidx.core.app.RemoteInput.getClipDataIntentFromIntent(android.content.Intent):android.content.Intent A[MD:(android.content.Intent):android.content.Intent (m)] (LINE:448)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0057|0x0057: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clipDataIntent' android.content.Intent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x005f  (LINE:449)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0059|0x0059: NEW_INSTANCE  (r1 I:android.content.Intent) =  android.content.Intent  (LINE:450)\l0x005b: INVOKE  (r1 I:android.content.Intent) type: DIRECT call: android.content.Intent.\<init\>():void A[MD:():void (c)]\l0x005e: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('clipDataIntent' android.content.Intent)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x005f|0x005f: CONST_STR  (r1 I:java.lang.String) =  \"android.remoteinput.resultsData\"  (LINE:452)\l0x0061: INVOKE  (r3 I:android.os.Bundle) = (r0 I:android.content.Intent A[D('clipDataIntent' android.content.Intent)]), (r1 I:java.lang.String) type: VIRTUAL call: android.content.Intent.getBundleExtra(java.lang.String):android.os.Bundle A[MD:(java.lang.String):android.os.Bundle (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0065|0x0065: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resultsBundle' android.os.Bundle)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x006d  (LINE:453)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0067|0x0067: NEW_INSTANCE  (r4 I:android.os.Bundle) =  android.os.Bundle  (LINE:454)\l0x0069: INVOKE  (r4 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l0x006c: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('resultsBundle' android.os.Bundle)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x006d|0x006d: ARRAY_LENGTH  (r4 I:int) = (r9 I:??[] A[D('remoteInputs' androidx.core.app.RemoteInput[])])  (LINE:456)\l}"];
Node_71 [shape=record,label="{71\:\ 0x006e|LOOP_START\lLOOP:1: B:71:0x006e\-\>B:75:0x0089\l|0x006e: IF  (r2 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:82:0x008c \l}"];
Node_72 [shape=record,label="{72\:\ 0x0070|0x0070: AGET  (r5 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][] A[D('remoteInputs' androidx.core.app.RemoteInput[])]), (r2 I:??[int, short, byte, char]) \l0x0072: INVOKE  (r6 I:java.lang.String) = (r5 I:androidx.core.app.RemoteInput A[D('remoteInput' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getResultKey():java.lang.String A[MD:():java.lang.String (m)] (LINE:457)\l0x0076: INVOKE  (r6 I:java.lang.Object) = (r11 I:android.os.Bundle A[D('results' android.os.Bundle)]), (r6 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.get(java.lang.String):java.lang.Object A[MD:(java.lang.String):java.lang.Object (c)]\l0x007a: INSTANCE_OF  (r7 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) java.lang.CharSequence  (LINE:458)\l}"];
Node_73 [shape=record,label="{73\:\ 0x007c|0x007c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0089 \l}"];
Node_74 [shape=record,label="{74\:\ 0x007f|0x007f: INVOKE  (r7 I:java.lang.String) = (r5 I:androidx.core.app.RemoteInput A[D('remoteInput' androidx.core.app.RemoteInput)]) type: VIRTUAL call: androidx.core.app.RemoteInput.getResultKey():java.lang.String A[MD:():java.lang.String (m)] (LINE:460)\l0x0083: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('result' java.lang.Object)]) \l0x0084: CHECK_CAST (r8 I:java.lang.CharSequence) = (java.lang.CharSequence) (r8 I:??[OBJECT, ARRAY]) \l0x0086: INVOKE  \l  (r3 I:android.os.Bundle A[D('resultsBundle' android.os.Bundle)])\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.CharSequence)\l type: VIRTUAL call: android.os.Bundle.putCharSequence(java.lang.String, java.lang.CharSequence):void A[MD:(java.lang.String, java.lang.CharSequence):void (c)] (LINE:459)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0089|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0089|LOOP_END\lLOOP:1: B:71:0x006e\-\>B:75:0x0089\l|0x0089: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:456)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0089|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x008c|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x008c|0x008c: INVOKE  \l  (r0 I:android.content.Intent A[D('clipDataIntent' android.content.Intent)])\l  (r1 I:java.lang.String)\l  (r3 I:android.os.Bundle A[D('resultsBundle' android.os.Bundle)])\l type: VIRTUAL call: android.content.Intent.putExtra(java.lang.String, android.os.Bundle):android.content.Intent A[MD:(java.lang.String, android.os.Bundle):android.content.Intent (c)] (LINE:463)\l0x0090: CONST_STR  (r1 I:java.lang.String) =  \"android.remoteinput.results\"  (LINE:465)\l0x0092: INVOKE  (r1 I:android.content.ClipData) = (r1 I:java.lang.CharSequence), (r0 I:android.content.Intent A[D('clipDataIntent' android.content.Intent)]) type: STATIC call: android.content.ClipData.newIntent(java.lang.CharSequence, android.content.Intent):android.content.ClipData A[MD:(java.lang.CharSequence, android.content.Intent):android.content.ClipData (c)]\l0x0096: INVOKE  (r10 I:android.content.Intent A[D('intent' android.content.Intent)]), (r1 I:android.content.ClipData) type: STATIC call: androidx.core.app.RemoteInput.Api16Impl.setClipData(android.content.Intent, android.content.ClipData):void A[MD:(android.content.Intent, android.content.ClipData):void (m)] (LINE:464)\l}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lRETURN\l|0x009b: RETURN   A[SYNTHETIC] (LINE:467)\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|0x009b: RETURN   A[SYNTHETIC] (LINE:467)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.app.RemoteInput.addResultsToIntent((r9 I:androidx.core.app.RemoteInput[] A[D('remoteInputs' androidx.core.app.RemoteInput[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.os.Bundle A[D('results' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x0046 \-\> B:56:0x0028, CROSS_EDGE: B:58:0x0041 \-\> B:60:0x0046, CROSS_EDGE: B:61:0x0049 \-\> B:78:0x009b, CROSS_EDGE: B:54:0x0023 \-\> B:55:0x0026, BACK_EDGE: B:75:0x0089 \-\> B:71:0x006e, CROSS_EDGE: B:73:0x007c \-\> B:75:0x0089, CROSS_EDGE: B:76:0x008c \-\> B:78:0x009b, CROSS_EDGE: B:68:0x0065 \-\> B:70:0x006d, CROSS_EDGE: B:65:0x0057 \-\> B:67:0x005f, CROSS_EDGE: B:63:0x0051 \-\> B:78:0x009b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0046: r5 'input' Landroidx\/core\/app\/RemoteInput;\l  0x0035\-0x0046: r6 'existingDataResults' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/String;Landroid\/net\/Uri;\>;\l  0x0038\-0x0046: r7 'arr' [Landroidx\/core\/app\/RemoteInput;\l  0x001b\-0x004c: r0 'existingTextResults' Landroid\/os\/Bundle;\l  0x001f\-0x004c: r1 'resultsSource' I\l  0x0072\-0x0089: r5 'remoteInput' Landroidx\/core\/app\/RemoteInput;\l  0x007a\-0x0089: r6 'result' Ljava\/lang\/Object;\l  0x0057\-0x009a: r0 'clipDataIntent' Landroid\/content\/Intent;\l  0x0065\-0x009a: r3 'resultsBundle' Landroid\/os\/Bundle;\l  \-1 \-0x009b: r9 'remoteInputs' [Landroidx\/core\/app\/RemoteInput;\l  \-1 \-0x009b: r10 'intent' Landroid\/content\/Intent;\l  \-1 \-0x009b: r11 'results' Landroid\/os\/Bundle;\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_78;
Node_78 -> Node_45;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_62;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_79;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_81;
Node_59 -> Node_80;
Node_80 -> Node_60;
Node_60 -> Node_56;
Node_81 -> Node_60;
Node_79 -> Node_61;
Node_61 -> Node_86;
Node_86 -> Node_45;
Node_54 -> Node_55;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_87;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_82;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_84;
Node_74 -> Node_83;
Node_83 -> Node_75;
Node_75 -> Node_71;
Node_84 -> Node_75;
Node_82 -> Node_76;
Node_76 -> Node_85;
Node_85 -> Node_45;
Node_87 -> Node_45;
}

