digraph "CFG forandroidx.core.app.RemoteInput.getResultsSource(Landroid\/content\/Intent;)I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:544)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:20:0x000b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r4 I:android.content.Intent A[D('intent' android.content.Intent)]) type: STATIC call: androidx.core.app.RemoteInput.Api28Impl.getResultsSource(android.content.Intent):int A[MD:(android.content.Intent):int (m)] (LINE:545)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:546)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:27:0x0024 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: INVOKE  (r0 I:android.content.Intent) = (r4 I:android.content.Intent A[D('intent' android.content.Intent)]) type: STATIC call: androidx.core.app.RemoteInput.getClipDataIntentFromIntent(android.content.Intent):android.content.Intent A[MD:(android.content.Intent):android.content.Intent (m)] (LINE:547)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clipDataIntent' android.content.Intent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0019  (LINE:548)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|RETURN\l|0x0018: RETURN  (r2 I:int)  (LINE:549)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|0x0019: INVOKE  (r1 I:android.os.Bundle) = (r0 I:android.content.Intent A[D('clipDataIntent' android.content.Intent)]) type: VIRTUAL call: android.content.Intent.getExtras():android.os.Bundle A[MD:():android.os.Bundle (c)] (LINE:551)\l0x001d: CONST_STR  (r3 I:java.lang.String) =  \"android.remoteinput.resultsSource\" \l0x001f: INVOKE  (r1 I:int) = (r1 I:android.os.Bundle), (r3 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0024|RETURN\l|0x0024: RETURN  (r2 I:int)  (LINE:553)\l}"];
MethodNode[shape=record,label="{public static int androidx.core.app.RemoteInput.getResultsSource((r4 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0018 \-\> B:15:?, CROSS_EDGE: B:26:0x0023 \-\> B:15:?, CROSS_EDGE: B:27:0x0024 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0024: r0 'clipDataIntent' Landroid\/content\/Intent;\l  \-1 \-0x0024: r4 'intent' Landroid\/content\/Intent;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

