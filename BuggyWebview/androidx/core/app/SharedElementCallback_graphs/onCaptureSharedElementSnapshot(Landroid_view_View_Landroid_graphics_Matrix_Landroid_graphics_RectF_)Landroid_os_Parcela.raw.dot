digraph "CFG forandroidx.core.app.SharedElementCallback.onCaptureSharedElementSnapshot(Landroid\/view\/View;Landroid\/graphics\/Matrix;Landroid\/graphics\/RectF;)Landroid\/os\/Parcelable;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('sharedElement' android.view.View)]) android.widget.ImageView  (LINE:168)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004a \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('sharedElement' android.view.View)])  (LINE:169)\l0x0005: CHECK_CAST (r0 I:android.widget.ImageView) = (android.widget.ImageView) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r0 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:170)\l0x000b: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r0 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:171)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('d' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004a  (LINE:172)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bg' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: INVOKE  (r3 I:android.graphics.Bitmap) = (r1 I:android.graphics.drawable.Drawable A[D('d' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.core.app.SharedElementCallback.createDrawableBitmap(android.graphics.drawable.Drawable):android.graphics.Bitmap A[MD:(android.graphics.drawable.Drawable):android.graphics.Bitmap (m)] (LINE:173)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bitmap' android.graphics.Bitmap)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004a  (LINE:174)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|0x0019: NEW_INSTANCE  (r4 I:android.os.Bundle) =  android.os.Bundle  (LINE:175)\l0x001b: INVOKE  (r4 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l0x001e: CONST_STR  (r5 I:java.lang.String) =  \"sharedElement:snapshot:bitmap\"  (LINE:176)\l0x0020: INVOKE  \l  (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r5 I:java.lang.String)\l  (r3 I:android.os.Parcelable A[D('bitmap' android.graphics.Bitmap)])\l type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)]\l0x0024: INVOKE  (r5 I:android.widget.ImageView$ScaleType) = (r0 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getScaleType():android.widget.ImageView$ScaleType A[MD:():android.widget.ImageView$ScaleType (c)] (LINE:178)\l0x0028: INVOKE  (r5 I:java.lang.String) = (r5 I:android.widget.ImageView$ScaleType) type: VIRTUAL call: android.widget.ImageView.ScaleType.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002c: CONST_STR  (r6 I:java.lang.String) =  \"sharedElement:snapshot:imageScaleType\"  (LINE:177)\l0x002e: INVOKE  (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r6 I:java.lang.String), (r5 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.putString(java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String):void (c)]\l0x0031: INVOKE  (r5 I:android.widget.ImageView$ScaleType) = (r0 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getScaleType():android.widget.ImageView$ScaleType A[MD:():android.widget.ImageView$ScaleType (c)] (LINE:179)\l0x0035: SGET  (r6 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.MATRIX android.widget.ImageView$ScaleType \l}"];
Node_33 [shape=record,label="{33\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0049 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0039|0x0039: INVOKE  (r5 I:android.graphics.Matrix) = (r0 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getImageMatrix():android.graphics.Matrix A[MD:():android.graphics.Matrix (c)] (LINE:180)\l0x003d: CONST  (r6 I:??[int, float, short, byte, char]) = (9 ??[int, float, short, byte, char])  (LINE:181)\l0x003f: NEW_ARRAY  (r6 I:float[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0041: INVOKE  (r5 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r6 I:float[] A[D('values' float[])]) type: VIRTUAL call: android.graphics.Matrix.getValues(float[]):void A[MD:(float[]):void (c)] (LINE:182)\l0x0044: CONST_STR  (r7 I:java.lang.String) =  \"sharedElement:snapshot:imageMatrix\"  (LINE:183)\l0x0046: INVOKE  \l  (r4 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r7 I:java.lang.String)\l  (r6 I:float[] A[D('values' float[])])\l type: VIRTUAL call: android.os.Bundle.putFloatArray(java.lang.String, float[]):void A[MD:(java.lang.String, float[]):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0049|RETURN\l|0x0049: RETURN  (r4 I:android.os.Parcelable A[D('bundle' android.os.Bundle)])  (LINE:185)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x004a|0x004a: INVOKE  (r0 I:float) = (r11 I:android.graphics.RectF A[D('screenBounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)] (LINE:189)\l0x004e: INVOKE  (r0 I:int) = (r0 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0052: INVOKE  (r1 I:float) = (r11 I:android.graphics.RectF A[D('screenBounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)] (LINE:190)\l0x0056: INVOKE  (r1 I:int) = (r1 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x005a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:191)\l}"];
Node_37 [shape=record,label="{37\:\ 0x005b|0x005b: IF  (r0 I:??[int, byte, short, char] A[D('bitmapWidth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:44:?  (LINE:192)\l}"];
Node_38 [shape=record,label="{38\:\ 0x005d|0x005d: IF  (r1 I:??[int, byte, short, char] A[D('bitmapHeight' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:45:? \l}"];
Node_39 [shape=record,label="{39\:\ 0x005f|0x005f: CONST  (r3 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:193)\l0x0061: CONST  (r4 I:??[int, float, short, byte, char]) = (1233125376(0x49800000, float:1048576.0) ??[int, float, short, byte, char]) \l0x0063: ARITH  (r5 I:int) = (r0 I:int A[D('bitmapWidth' int)]) * (r1 I:int A[D('bitmapHeight' int)]) \l0x0065: CAST (r5 I:float) = (float) (r5 I:int) \l0x0066: ARITH  (r4 I:float) = (r4 I:float) \/ (r5 I:float) \l0x0067: INVOKE  (r3 I:float) = (r3 I:float), (r4 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x006b: CAST (r4 I:float) = (float) (r0 I:int A[D('bitmapWidth' int)])  (LINE:194)\l0x006c: ARITH  (r4 I:float) = (r4 I:float) * (r3 I:float A[D('scale' float)]) \l0x006e: CAST (r0 I:int A[D('bitmapWidth' int)]) = (int) (r4 I:float) \l0x006f: CAST (r4 I:float) = (float) (r1 I:int A[D('bitmapHeight' int)])  (LINE:195)\l0x0070: ARITH  (r4 I:float) = (r4 I:float) * (r3 I:float A[D('scale' float)]) \l0x0072: CAST (r1 I:int A[D('bitmapHeight' int)]) = (int) (r4 I:float) \l0x0073: IGET  (r4 I:android.graphics.Matrix) = (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix  (LINE:196)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0075|0x0075: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x007e \l}"];
Node_41 [shape=record,label="{41\:\ 0x0077|0x0077: NEW_INSTANCE  (r4 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:197)\l0x0079: INVOKE  (r4 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x007c: IPUT  (r4 I:android.graphics.Matrix), (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix \l}"];
Node_42 [shape=record,label="{42\:\ 0x007e|0x007e: IGET  (r4 I:android.graphics.Matrix) = (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix  (LINE:199)\l0x0080: INVOKE  (r4 I:android.graphics.Matrix), (r10 I:android.graphics.Matrix A[D('viewToGlobalMatrix' android.graphics.Matrix)]) type: VIRTUAL call: android.graphics.Matrix.set(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x0083: IGET  (r4 I:android.graphics.Matrix) = (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix  (LINE:200)\l0x0085: IGET  (r5 I:float) = (r11 I:android.graphics.RectF A[D('screenBounds' android.graphics.RectF)]) android.graphics.RectF.left float \l0x0087: NEG  (r5 I:float) = (r5 I:float) \l0x0088: IGET  (r6 I:float) = (r11 I:android.graphics.RectF A[D('screenBounds' android.graphics.RectF)]) android.graphics.RectF.top float \l0x008a: NEG  (r6 I:float) = (r6 I:float) \l0x008b: INVOKE  (r4 I:android.graphics.Matrix), (r5 I:float), (r6 I:float) type: VIRTUAL call: android.graphics.Matrix.postTranslate(float, float):boolean A[MD:(float, float):boolean (c)]\l0x008e: IGET  (r4 I:android.graphics.Matrix) = (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix  (LINE:201)\l0x0090: INVOKE  (r4 I:android.graphics.Matrix), (r3 I:float A[D('scale' float)]), (r3 I:float A[D('scale' float)]) type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)]\l0x0093: SGET  (r4 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:202)\l0x0095: INVOKE  (r2 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) = (r0 I:int A[D('bitmapWidth' int)]), (r1 I:int A[D('bitmapHeight' int)]), (r4 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x0099: NEW_INSTANCE  (r4 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:203)\l0x009b: INVOKE  (r4 I:android.graphics.Canvas), (r2 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x009e: IGET  (r5 I:android.graphics.Matrix) = (r8 I:androidx.core.app.SharedElementCallback) androidx.core.app.SharedElementCallback.mTempMatrix android.graphics.Matrix  (LINE:204)\l0x00a0: INVOKE  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r5 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Canvas.concat(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x00a3: INVOKE  \l  (r9 I:android.view.View A[D('sharedElement' android.view.View)])\l  (r4 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: android.view.View.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:205)\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a6|RETURN\lORIG_RETURN\l|0x00a6: RETURN  (r2 I:android.os.Parcelable A[D('bitmap' android.graphics.Bitmap)])  (LINE:207)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x00a6: RETURN  (r2 I:android.os.Parcelable A[D('bitmap' android.graphics.Bitmap)]) A[SYNTHETIC] (LINE:207)\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x00a6: RETURN  (r2 I:android.os.Parcelable A[D('bitmap' android.graphics.Bitmap)]) A[SYNTHETIC] (LINE:207)\l}"];
MethodNode[shape=record,label="{public android.os.Parcelable androidx.core.app.SharedElementCallback.onCaptureSharedElementSnapshot((r8 'this' I:androidx.core.app.SharedElementCallback A[IMMUTABLE_TYPE, THIS]), (r9 I:android.view.View A[D('sharedElement' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.graphics.Matrix A[D('viewToGlobalMatrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.RectF A[D('screenBounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0037 \-\> B:35:0x0049, CROSS_EDGE: B:43:0x00a6 \-\> B:24:?, CROSS_EDGE: B:40:0x0075 \-\> B:42:0x007e, CROSS_EDGE: B:38:0x005d \-\> B:43:0x00a6, CROSS_EDGE: B:37:0x005b \-\> B:43:0x00a6, CROSS_EDGE: B:29:0x0011 \-\> B:36:0x004a, CROSS_EDGE: B:28:0x000f \-\> B:36:0x004a, CROSS_EDGE: B:26:0x0002 \-\> B:36:0x004a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x0049: r5 'matrix' Landroid\/graphics\/Matrix;\l  0x0041\-0x0049: r6 'values' [F\l  0x0007\-0x004a: r0 'imageView' Landroid\/widget\/ImageView;\l  0x000b\-0x004a: r1 'd' Landroid\/graphics\/drawable\/Drawable;\l  0x000f\-0x004a: r2 'bg' Landroid\/graphics\/drawable\/Drawable;\l  0x0017\-0x004a: r3 'bitmap' Landroid\/graphics\/Bitmap;\l  0x001e\-0x004a: r4 'bundle' Landroid\/os\/Bundle;\l  0x006b\-0x00a6: r3 'scale' F\l  0x009e\-0x00a6: r4 'canvas' Landroid\/graphics\/Canvas;\l  0x0052\-0x00a6: r0 'bitmapWidth' I\l  0x005a\-0x00a6: r1 'bitmapHeight' I\l  0x005b\-0x00a6: r2 'bitmap' Landroid\/graphics\/Bitmap;\l  \-1 \-0x00a6: r9 'sharedElement' Landroid\/view\/View;\l  \-1 \-0x00a6: r10 'viewToGlobalMatrix' Landroid\/graphics\/Matrix;\l  \-1 \-0x00a6: r11 'screenBounds' Landroid\/graphics\/RectF;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_36;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_24;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_45;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_45 -> Node_24;
Node_44 -> Node_24;
}

