digraph "CFG forandroidx.core.app.SharedElementCallback.onCreateSnapshotView(Landroid\/content\/Context;Landroid\/os\/Parcelable;)Landroid\/view\/View;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:258)\l0x0001: INSTANCE_OF  (r1 I:boolean) = (r8 I:??[OBJECT, ARRAY] A[D('snapshot' android.os.Parcelable)]) android.os.Bundle  (LINE:259)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0045 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('snapshot' android.os.Parcelable)])  (LINE:260)\l0x0006: CHECK_CAST (r1 I:android.os.Bundle) = (android.os.Bundle) (r1 I:??[OBJECT, ARRAY]) \l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"sharedElement:snapshot:bitmap\"  (LINE:261)\l0x000a: INVOKE  (r2 I:android.os.Parcelable) = (r1 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r2 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getParcelable(java.lang.String):android.os.Parcelable A[MD:\<T extends android.os.Parcelable\>:(java.lang.String):T extends android.os.Parcelable (c)]\l0x000e: CHECK_CAST (r2 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bitmap' android.graphics.Bitmap)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0014  (LINE:262)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|RETURN\l|0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:263)\l0x0013: RETURN  (r3 I:android.view.View) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: NEW_INSTANCE  (r3 I:android.widget.ImageView) =  android.widget.ImageView  (LINE:265)\l0x0016: INVOKE  (r3 I:android.widget.ImageView), (r7 I:android.content.Context A[D('context' android.content.Context)]) type: DIRECT call: android.widget.ImageView.\<init\>(android.content.Context):void A[MD:(android.content.Context):void (c)]\l0x0019: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('view' android.widget.ImageView)]) = (r3 I:??[OBJECT, ARRAY] A[D('imageView' android.widget.ImageView)])  (LINE:266)\l0x001a: INVOKE  \l  (r3 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)])\l  (r2 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])\l type: VIRTUAL call: android.widget.ImageView.setImageBitmap(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)] (LINE:267)\l0x001e: CONST_STR  (r4 I:java.lang.String) =  \"sharedElement:snapshot:imageScaleType\"  (LINE:269)\l0x0020: INVOKE  (r4 I:java.lang.String) = (r1 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r4 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getString(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l0x0024: INVOKE  (r4 I:android.widget.ImageView$ScaleType) = (r4 I:java.lang.String) type: STATIC call: android.widget.ImageView.ScaleType.valueOf(java.lang.String):android.widget.ImageView$ScaleType A[MD:(java.lang.String):android.widget.ImageView$ScaleType (c)]\l0x0028: INVOKE  (r3 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]), (r4 I:android.widget.ImageView$ScaleType) type: VIRTUAL call: android.widget.ImageView.setScaleType(android.widget.ImageView$ScaleType):void A[MD:(android.widget.ImageView$ScaleType):void (c)] (LINE:268)\l0x002b: INVOKE  (r4 I:android.widget.ImageView$ScaleType) = (r3 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getScaleType():android.widget.ImageView$ScaleType A[MD:():android.widget.ImageView$ScaleType (c)] (LINE:270)\l0x002f: SGET  (r5 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.MATRIX android.widget.ImageView$ScaleType \l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|0x0033: CONST_STR  (r4 I:java.lang.String) =  \"sharedElement:snapshot:imageMatrix\"  (LINE:271)\l0x0035: INVOKE  (r4 I:float[]) = (r1 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r4 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getFloatArray(java.lang.String):float[] A[MD:(java.lang.String):float[] (c)]\l0x0039: NEW_INSTANCE  (r5 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:272)\l0x003b: INVOKE  (r5 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x003e: INVOKE  (r5 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r4 I:float[] A[D('values' float[])]) type: VIRTUAL call: android.graphics.Matrix.setValues(float[]):void A[MD:(float[]):void (c)] (LINE:273)\l0x0041: INVOKE  \l  (r3 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)])\l  (r5 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.widget.ImageView.setImageMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:274)\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN  (r0 I:android.view.View A[D('view' android.widget.ImageView)]) A[SYNTHETIC] (LINE:281)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN  (r0 I:android.view.View A[D('view' android.widget.ImageView)]) A[SYNTHETIC] (LINE:281)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0045|0x0045: INSTANCE_OF  (r1 I:boolean A[D('bundle' android.os.Bundle)]) = (r8 I:??[OBJECT, ARRAY] A[D('snapshot' android.os.Parcelable)]) android.graphics.Bitmap  (LINE:276)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0047|0x0047: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0049|0x0049: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('snapshot' android.os.Parcelable)])  (LINE:277)\l0x004a: CHECK_CAST (r1 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r1 I:??[OBJECT, ARRAY]) \l0x004c: NEW_INSTANCE  (r2 I:android.widget.ImageView) =  android.widget.ImageView  (LINE:278)\l0x004e: INVOKE  (r2 I:android.widget.ImageView), (r7 I:android.content.Context A[D('context' android.content.Context)]) type: DIRECT call: android.widget.ImageView.\<init\>(android.content.Context):void A[MD:(android.content.Context):void (c)]\l0x0051: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('view' android.widget.ImageView)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0052: INVOKE  \l  (r0 I:android.widget.ImageView A[D('view' android.widget.ImageView)])\l  (r1 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])\l type: VIRTUAL call: android.widget.ImageView.setImageBitmap(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)] (LINE:279)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0057|RETURN\lORIG_RETURN\l|0x0057: RETURN  (r0 I:android.view.View A[D('view' android.widget.ImageView)])  (LINE:281)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0057: RETURN  (r0 I:android.view.View A[D('view' android.widget.ImageView)]) A[SYNTHETIC] (LINE:281)\l}"];
MethodNode[shape=record,label="{public android.view.View androidx.core.app.SharedElementCallback.onCreateSnapshotView((r6 'this' I:androidx.core.app.SharedElementCallback A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.os.Parcelable A[D('snapshot' android.os.Parcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0057 \-\> B:20:?, CROSS_EDGE: B:28:0x0031 \-\> B:34:0x0057, CROSS_EDGE: B:32:0x0049 \-\> B:34:0x0057, CROSS_EDGE: B:31:0x0047 \-\> B:34:0x0057\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0045: r1 'bundle' Landroid\/os\/Bundle;\l  0x0010\-0x0045: r2 'bitmap' Landroid\/graphics\/Bitmap;\l  0x0019\-0x0045: r3 'imageView' Landroid\/widget\/ImageView;\l  0x0039\-0x0045: r4 'values' [F\l  0x003e\-0x0045: r5 'matrix' Landroid\/graphics\/Matrix;\l  0x004c\-0x0056: r1 'bitmap' Landroid\/graphics\/Bitmap;\l  0x0001\-0x0057: r0 'view' Landroid\/widget\/ImageView;\l  \-1 \-0x0057: r7 'context' Landroid\/content\/Context;\l  \-1 \-0x0057: r8 'snapshot' Landroid\/os\/Parcelable;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_20;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_36;
Node_36 -> Node_20;
Node_35 -> Node_20;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_34;
Node_34 -> Node_20;
Node_37 -> Node_20;
}

