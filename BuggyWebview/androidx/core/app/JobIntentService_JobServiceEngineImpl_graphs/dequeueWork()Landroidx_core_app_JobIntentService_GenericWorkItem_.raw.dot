digraph "CFG forandroidx.core.app.JobIntentService.JobServiceEngineImpl.dequeueWork()Landroidx\/core\/app\/JobIntentService$GenericWorkItem;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:androidx.core.app.JobIntentService$JobServiceEngineImpl) androidx.core.app.JobIntentService.JobServiceEngineImpl.mLock java.lang.Object  (LINE:315)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:4:0x0003, B:6:0x0008, B:8:0x000a, B:9:0x000e), top: B:17:0x0003 \}\lCatch: all \-\> 0x0025\l|0x0003: IGET  (r1 I:android.app.job.JobParameters) = (r3 I:androidx.core.app.JobIntentService$JobServiceEngineImpl) androidx.core.app.JobIntentService.JobServiceEngineImpl.mParams android.app.job.JobParameters A[Catch: all \-\> 0x0025, TRY_ENTER] (LINE:316)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|TryCatch #0 \{all \-\> 0x0025, blocks: (B:4:0x0003, B:6:0x0008, B:8:0x000a, B:9:0x000e), top: B:17:0x0003 \}\lCatch: all \-\> 0x0025\l|0x0008: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0025] (LINE:317)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|RETURN\l|0x0009: RETURN  (r2 I:androidx.core.app.JobIntentService$GenericWorkItem) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|TryCatch #0 \{all \-\> 0x0025, blocks: (B:4:0x0003, B:6:0x0008, B:8:0x000a, B:9:0x000e), top: B:17:0x0003 \}\lCatch: all \-\> 0x0025\l|0x000a: INVOKE  (r1 I:android.app.job.JobWorkItem) = (r1 I:android.app.job.JobParameters) type: VIRTUAL call: android.app.job.JobParameters.dequeueWork():android.app.job.JobWorkItem A[Catch: all \-\> 0x0025, MD:():android.app.job.JobWorkItem (c)] (LINE:319)\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:4:0x0003, B:6:0x0008, B:8:0x000a, B:9:0x000e), top: B:17:0x0003 \}\lCatch: all \-\> 0x0025\l|0x000e: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0025, TRY_LEAVE] (LINE:320)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('work' android.app.job.JobWorkItem)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0024  (LINE:321)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|0x0011: INVOKE  (r0 I:android.content.Intent) = (r1 I:android.app.job.JobWorkItem A[D('work' android.app.job.JobWorkItem)]) type: VIRTUAL call: android.app.job.JobWorkItem.getIntent():android.content.Intent A[MD:():android.content.Intent (c)] (LINE:322)\l0x0015: IGET  (r2 I:androidx.core.app.JobIntentService) = (r3 I:androidx.core.app.JobIntentService$JobServiceEngineImpl) androidx.core.app.JobIntentService.JobServiceEngineImpl.mService androidx.core.app.JobIntentService \l0x0017: INVOKE  (r2 I:java.lang.ClassLoader) = (r2 I:androidx.core.app.JobIntentService) type: VIRTUAL call: androidx.core.app.JobIntentService.getClassLoader():java.lang.ClassLoader A[MD:():java.lang.ClassLoader (s)]\l0x001b: INVOKE  (r0 I:android.content.Intent), (r2 I:java.lang.ClassLoader) type: VIRTUAL call: android.content.Intent.setExtrasClassLoader(java.lang.ClassLoader):void A[MD:(java.lang.ClassLoader):void (c)]\l0x001e: NEW_INSTANCE  (r0 I:androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem) =  androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem  (LINE:323)\l0x0020: INVOKE  \l  (r0 I:androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem)\l  (r3 I:androidx.core.app.JobIntentService$JobServiceEngineImpl)\l  (r1 I:android.app.job.JobWorkItem A[D('work' android.app.job.JobWorkItem)])\l type: DIRECT call: androidx.core.app.JobIntentService.JobServiceEngineImpl.WrapperWorkItem.\<init\>(androidx.core.app.JobIntentService$JobServiceEngineImpl, android.app.job.JobWorkItem):void A[MD:(androidx.core.app.JobIntentService$JobServiceEngineImpl, android.app.job.JobWorkItem):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:androidx.core.app.JobIntentService$GenericWorkItem) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|RETURN\l|0x0024: RETURN  (r2 I:androidx.core.app.JobIntentService$GenericWorkItem)  (LINE:325)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:320)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x0025\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|0x0027: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public androidx.core.app.JobIntentService$GenericWorkItem androidx.core.app.JobIntentService.JobServiceEngineImpl.dequeueWork((r3 'this' I:androidx.core.app.JobIntentService$JobServiceEngineImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0023 \-\> B:1:?, CROSS_EDGE: B:13:0x0024 \-\> B:1:?, CROSS_EDGE: B:16:0x0027 \-\> B:1:?\lDebug Info:\l  0x000e\-0x0025: r1 'work' Landroid\/app\/job\/JobWorkItem;\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:4:0x0003, B:6:0x0008, B:8:0x000a, B:9:0x000e), top: B:17:0x0003 \}\lMETHOD_OVERRIDE: [androidx.core.app.JobIntentService.CompatJobEngine.dequeueWork():androidx.core.app.JobIntentService$GenericWorkItem]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_17;
Node_17 -> Node_4;
Node_17 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

