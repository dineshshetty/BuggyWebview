digraph "CFG forandroidx.core.app.ShareCompat.IntentReader.withinStyle(Ljava\/lang\/StringBuilder;Ljava\/lang\/CharSequence;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:850)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|LOOP_START\lLOOP:0: B:3:0x0001\-\>B:27:0x0059\l|0x0001: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char] A[D('end' int)])  \-\> B:29:0x005c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: INVOKE  (r1 I:char) = (r5 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]), (r0 I:int A[D('i' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:851)\l0x0007: CONST  (r2 I:??[int, float, short, byte, char]) = (60 ??[int, float, short, byte, char])  (LINE:853)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' char)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CONST_STR  (r2 I:java.lang.String) =  \"&lt;\"  (LINE:854)\l0x000d: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0059|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|LOOP_END\lLOOP:0: B:3:0x0001\-\>B:27:0x0059\l|0x0059: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:850)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r2 I:??[int, float, short, byte, char]) = (62 ??[int, float, short, byte, char])  (LINE:855)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' char)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: CONST_STR  (r2 I:java.lang.String) =  \"&gt;\"  (LINE:856)\l0x0017: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0059|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: CONST  (r2 I:??[int, float, short, byte, char]) = (38 ??[int, float, short, byte, char])  (LINE:857)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' char)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0025 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: CONST_STR  (r2 I:java.lang.String) =  \"&amp;\"  (LINE:858)\l0x0021: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0059|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: CONST  (r2 I:??[int, float, short, byte, char]) = (126(0x7e, float:1.77E\-43) ??[int, float, short, byte, char])  (LINE:859)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: IF  (r1 I:??[int, byte, short, char] A[D('c' char)]) \> (r2 I:??[int, byte, short, char])  \-\> B:26:0x004c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: CONST  (r2 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|0x002b: IF  (r1 I:??[int, byte, short, char] A[D('c' char)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:18:0x002e \l}"];
Node_18 [shape=record,label="{18\:\ 0x002e|0x002e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' char)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0048  (LINE:861)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0030|LOOP_START\lLOOP:1: B:19:0x0030\-\>B:23:0x003c\l|0x0030: ARITH  (r3 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:862)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|0x0032: IF  (r3 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char] A[D('end' int)])  \-\> B:36:0x0044 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|0x0034: ARITH  (r3 I:int) = (r0 I:int A[D('i' int)]) + (1 int) \l0x0036: INVOKE  (r3 I:char) = (r5 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]), (r3 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0044 \l}"];
Node_23 [shape=record,label="{23\:\ 0x003c|LOOP_END\lLOOP:1: B:19:0x0030\-\>B:23:0x003c\l|0x003c: CONST_STR  (r3 I:java.lang.String) =  \"&nbsp;\"  (LINE:863)\l0x003e: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0041: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:864)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0044|0x0044: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)] (LINE:867)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0059|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0044|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0048|0x0048: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r1 I:char A[D('c' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)] (LINE:869)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0059|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x004c|0x004c: CONST_STR  (r2 I:java.lang.String) =  \"&#\"  (LINE:860)\l0x004e: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0051: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r1 I:int A[D('c' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0054: CONST_STR  (r2 I:java.lang.String) =  \";\" \l0x0056: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x005c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x005c|RETURN\l|0x005c: RETURN    (LINE:872)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.core.app.ShareCompat.IntentReader.withinStyle((r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0059 \-\> B:3:0x0001, CROSS_EDGE: B:9:0x0015 \-\> B:27:0x0059, CROSS_EDGE: B:12:0x001f \-\> B:27:0x0059, BACK_EDGE: B:23:0x003c \-\> B:19:0x0030, CROSS_EDGE: B:24:0x0044 \-\> B:27:0x0059, CROSS_EDGE: B:20:0x0032 \-\> B:24:0x0044, CROSS_EDGE: B:25:0x0048 \-\> B:27:0x0059, CROSS_EDGE: B:26:0x004c \-\> B:27:0x0059, CROSS_EDGE: B:14:0x0027 \-\> B:26:0x004c\lDebug Info:\l  0x0007\-0x0059: r1 'c' C\l  0x0001\-0x005c: r0 'i' I\l  \-1 \-0x005c: r4 'out' Ljava\/lang\/StringBuilder;\l  \-1 \-0x005c: r5 'text' Ljava\/lang\/CharSequence;\l  \-1 \-0x005c: r6 'start' I\l  \-1 \-0x005c: r7 'end' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_31;
Node_31 -> Node_27;
Node_27 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_32;
Node_32 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_33;
Node_33 -> Node_27;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_26;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_26[style=dashed];
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_36;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_37;
Node_23 -> Node_19;
Node_37 -> Node_24;
Node_24 -> Node_34;
Node_34 -> Node_27;
Node_36 -> Node_24;
Node_25 -> Node_35;
Node_35 -> Node_27;
Node_26 -> Node_30;
Node_30 -> Node_27;
Node_29 -> Node_28;
Node_28 -> Node_1;
}

