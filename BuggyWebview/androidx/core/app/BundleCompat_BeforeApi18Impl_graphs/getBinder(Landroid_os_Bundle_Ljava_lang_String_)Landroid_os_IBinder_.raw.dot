digraph "CFG forandroidx.core.app.BundleCompat.BeforeApi18Impl.getBinder(Landroid\/os\/Bundle;Ljava\/lang\/String;)Landroid\/os\/IBinder;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.core.app.BundleCompat.BeforeApi18Impl.sGetIBinderMethodFetched boolean  (LINE:52)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST_STR  (r2 I:java.lang.String) =  \"BundleCompatBaseImpl\" \l0x0005: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0024 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.app.BundleCompat.BeforeApi18Impl.sGetIBinderMethod java.lang.reflect.Method  (LINE:62)\l0x0026: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0040 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|RETURN\l|0x0040: RETURN  (r4 I:android.os.IBinder)  (LINE:71)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0029|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038, blocks: (B:11:0x0029), top: B:22:0x0029 \}\lCatch: IllegalArgumentException \-\> 0x0034, IllegalAccessException \-\> 0x0036, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038\l|0x0029: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalArgumentException \-\> 0x0034, IllegalAccessException \-\> 0x0036, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038, TRY_ENTER] (LINE:64)\l0x002b: APUT  (r3 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r8 I:??[OBJECT, ARRAY] A[D('key' java.lang.String)]) A[Catch: IllegalArgumentException \-\> 0x0034, IllegalAccessException \-\> 0x0036, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038]\l0x002d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('bundle' android.os.Bundle)]), (r3 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalArgumentException \-\> 0x0034, IllegalAccessException \-\> 0x0036, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0031: CHECK_CAST (r0 I:android.os.IBinder) = (android.os.IBinder) (r0 I:??[OBJECT, ARRAY]) A[Catch: IllegalArgumentException \-\> 0x0034, IllegalAccessException \-\> 0x0036, IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|RETURN\l|0x0033: RETURN  (r0 I:android.os.IBinder) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|ExcHandler: IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038\l|0x0038: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: CONST_STR  (r1 I:java.lang.String) =  \"Failed to invoke getIBinder via reflection\"  (LINE:67)\l0x003b: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l0x003e: SPUT  (r4 I:java.lang.reflect.Method) androidx.core.app.BundleCompat.BeforeApi18Impl.sGetIBinderMethod java.lang.reflect.Method  (LINE:68)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{NoSuchMethodException \-\> 0x001c, blocks: (B:4:0x0008), top: B:20:0x0008 \}\lCatch: NoSuchMethodException \-\> 0x001c\l|0x0008: CONST_CLASS  (r0 I:java.lang.Class\<android.os.Bundle\>) =  android.os.Bundle.class A[TRY_ENTER] (LINE:54)\l0x000a: CONST_STR  (r4 I:java.lang.String) =  \"getIBinder\" \l0x000c: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x001c]\l0x000e: CONST_CLASS  (r6 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0010: APUT  (r5 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x001c]\l0x0012: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r4 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001c, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0016: SPUT  (r0 I:java.lang.reflect.Method) androidx.core.app.BundleCompat.BeforeApi18Impl.sGetIBinderMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001c]\l0x0018: INVOKE  (r0 I:java.lang.reflect.Method), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x001c, MD:(boolean):void (s), TRY_LEAVE] (LINE:55)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: SPUT  (r3 I:boolean) androidx.core.app.BundleCompat.BeforeApi18Impl.sGetIBinderMethodFetched boolean  (LINE:59)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|ExcHandler: NoSuchMethodException \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x001c] (LINE:56)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: CONST_STR  (r4 I:java.lang.String) =  \"Failed to retrieve getIBinder method\"  (LINE:57)\l0x001f: INVOKE  (r2 I:java.lang.String), (r4 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.NoSuchMethodException)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
MethodNode[shape=record,label="{public static android.os.IBinder androidx.core.app.BundleCompat.BeforeApi18Impl.getBinder((r7 I:android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0033 \-\> B:1:?, CROSS_EDGE: B:18:0x0039 \-\> B:19:0x0040, CROSS_EDGE: B:22:0x0029 \-\> B:17:0x0038, CROSS_EDGE: B:8:0x0022 \-\> B:9:0x0024, CROSS_EDGE: B:7:0x001d \-\> B:8:0x0022, CROSS_EDGE: B:20:0x0008 \-\> B:6:0x001c\lDebug Info:\l  0x001d\-0x0022: r0 'e' Ljava\/lang\/NoSuchMethodException;\l  0x0039\-0x0040: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0040: r7 'bundle' Landroid\/os\/Bundle;\l  \-1 \-0x0040: r8 'key' Ljava\/lang\/String;\lTryCatch #2 \{NoSuchMethodException \-\> 0x001c, blocks: (B:4:0x0008), top: B:20:0x0008 \}, TryCatch #3 \{IllegalAccessException \| IllegalArgumentException \| InvocationTargetException \-\> 0x0038, blocks: (B:11:0x0029), top: B:22:0x0029 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_9;
Node_3 -> Node_20[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_19;
Node_10 -> Node_22[style=dashed];
Node_19 -> Node_1;
Node_22 -> Node_11;
Node_22 -> Node_17;
Node_11 -> Node_12;
Node_11 -> Node_23;
Node_12 -> Node_1;
Node_23 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_4;
Node_20 -> Node_6;
Node_4 -> Node_8;
Node_4 -> Node_21;
Node_8 -> Node_9;
Node_21 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

