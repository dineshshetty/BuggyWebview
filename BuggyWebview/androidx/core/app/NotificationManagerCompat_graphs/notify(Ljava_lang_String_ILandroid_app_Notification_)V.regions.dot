digraph "CFG forandroidx.core.app.NotificationManagerCompat.notify(Ljava\/lang\/String;ILandroid\/app\/Notification;)V" {
subgraph cluster_Region_1462183642 {
label = "R(1:(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1370043500 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2017219134 {
label = "IF [B:3:0x0004] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (useSideChannelForNotification(r5) != false) goto L3\l}"];
subgraph cluster_Region_2101108572 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|pushSideChannelQueue(new androidx.core.app.NotificationManagerCompat.NotifyTask(r2.mContext.getPackageName(), r4, r3, r5))\lr2.mNotificationManager.cancel(r3, r4)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_331589591 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|r2.mNotificationManager.notify(r3, r4, r5)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001f|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.NotificationManagerCompat.notify((r2v0 'this' androidx.core.app.NotificationManagerCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 'tag' java.lang.String A[D('tag' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'notification' android.app.Notification A[D('notification' android.app.Notification), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x001a \-\> B:6:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_6 -> Node_1;
}

