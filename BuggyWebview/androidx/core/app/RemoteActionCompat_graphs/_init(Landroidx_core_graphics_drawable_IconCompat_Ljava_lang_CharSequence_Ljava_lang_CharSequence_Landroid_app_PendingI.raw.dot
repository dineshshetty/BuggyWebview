digraph "CFG forandroidx.core.app.RemoteActionCompat.\<init\>(Landroidx\/core\/graphics\/drawable\/IconCompat;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Landroid\/app\/PendingIntent;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:91)\l0x0003: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.lang.Object A[D('icon' androidx.core.graphics.drawable.IconCompat)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:92)\l0x0007: CHECK_CAST (r0 I:androidx.core.graphics.drawable.IconCompat) = (androidx.core.graphics.drawable.IconCompat) (r0 I:??[OBJECT, ARRAY]) \l0x0009: IPUT  (r0 I:androidx.core.graphics.drawable.IconCompat), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mIcon androidx.core.graphics.drawable.IconCompat \l0x000b: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object A[D('title' java.lang.CharSequence)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:93)\l0x000f: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x0011: IPUT  (r0 I:java.lang.CharSequence), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mTitle java.lang.CharSequence \l0x0013: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.lang.Object A[D('contentDescription' java.lang.CharSequence)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:94)\l0x0017: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x0019: IPUT  (r0 I:java.lang.CharSequence), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mContentDescription java.lang.CharSequence \l0x001b: INVOKE  (r0 I:java.lang.Object) = (r5 I:java.lang.Object A[D('intent' android.app.PendingIntent)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:95)\l0x001f: CHECK_CAST (r0 I:android.app.PendingIntent) = (android.app.PendingIntent) (r0 I:??[OBJECT, ARRAY]) \l0x0021: IPUT  (r0 I:android.app.PendingIntent), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mActionIntent android.app.PendingIntent \l0x0023: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:96)\l0x0024: IPUT  (r0 I:boolean), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mEnabled boolean \l0x0026: IPUT  (r0 I:boolean), (r1 I:androidx.core.app.RemoteActionCompat) androidx.core.app.RemoteActionCompat.mShouldShowIcon boolean  (LINE:97)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|RETURN\l|0x0028: RETURN    (LINE:98)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.RemoteActionCompat.\<init\>((r1 'this' I:androidx.core.app.RemoteActionCompat A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.core.graphics.drawable.IconCompat A[D('icon' androidx.core.graphics.drawable.IconCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.CharSequence A[D('title' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.CharSequence A[D('contentDescription' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.app.PendingIntent A[D('intent' android.app.PendingIntent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0028: r2 'icon' Landroidx\/core\/graphics\/drawable\/IconCompat;\l  \-1 \-0x0028: r3 'title' Ljava\/lang\/CharSequence;\l  \-1 \-0x0028: r4 'contentDescription' Ljava\/lang\/CharSequence;\l  \-1 \-0x0028: r5 'intent' Landroid\/app\/PendingIntent;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

