digraph "CFG forandroidx.core.app.JobIntentService.CompatWorkEnqueuer.serviceProcessingStarted()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MONITOR_ENTER  (r3 I:??[OBJECT, ARRAY])  (LINE:214)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0001, B:5:0x0005, B:6:0x0015), top: B:11:0x0001 \}\lCatch: all \-\> 0x0017\l|0x0001: IGET  (r0 I:boolean) = (r3 I:androidx.core.app.JobIntentService$CompatWorkEnqueuer) androidx.core.app.JobIntentService.CompatWorkEnqueuer.mServiceProcessing boolean A[Catch: all \-\> 0x0017, TRY_ENTER] (LINE:216)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|TryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0001, B:5:0x0005, B:6:0x0015), top: B:11:0x0001 \}\lCatch: all \-\> 0x0017\l|0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:217)\l0x0006: IPUT  (r0 I:boolean), (r3 I:androidx.core.app.JobIntentService$CompatWorkEnqueuer) androidx.core.app.JobIntentService.CompatWorkEnqueuer.mServiceProcessing boolean A[Catch: all \-\> 0x0017]\l0x0008: IGET  (r0 I:android.os.PowerManager$WakeLock) = (r3 I:androidx.core.app.JobIntentService$CompatWorkEnqueuer) androidx.core.app.JobIntentService.CompatWorkEnqueuer.mRunWakeLock android.os.PowerManager$WakeLock A[Catch: all \-\> 0x0017] (LINE:220)\l0x000a: CONST  (r1 I:??[long, double]) = (600000(0x927c0, double:2.964394E\-318) ??[long, double]) \l0x000d: INVOKE  (r0 I:android.os.PowerManager$WakeLock), (r1 I:long) type: VIRTUAL call: android.os.PowerManager.WakeLock.acquire(long):void A[Catch: all \-\> 0x0017, MD:(long):void (c)]\l0x0010: IGET  (r0 I:android.os.PowerManager$WakeLock) = (r3 I:androidx.core.app.JobIntentService$CompatWorkEnqueuer) androidx.core.app.JobIntentService.CompatWorkEnqueuer.mLaunchWakeLock android.os.PowerManager$WakeLock A[Catch: all \-\> 0x0017] (LINE:221)\l0x0012: INVOKE  (r0 I:android.os.PowerManager$WakeLock) type: VIRTUAL call: android.os.PowerManager.WakeLock.release():void A[Catch: all \-\> 0x0017, MD:():void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|TryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0001, B:5:0x0005, B:6:0x0015), top: B:11:0x0001 \}\lCatch: all \-\> 0x0017\l|0x0015: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0017] (LINE:223)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:224)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|ExcHandler: all \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0017] (LINE:223)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|TRY_LEAVE\lCatch: all \-\> 0x0017\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.core.app.JobIntentService.CompatWorkEnqueuer.serviceProcessingStarted((r3 'this' I:androidx.core.app.JobIntentService$CompatWorkEnqueuer A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0019 \-\> B:1:?, CROSS_EDGE: B:4:0x0003 \-\> B:6:0x0015, CROSS_EDGE: B:11:0x0001 \-\> B:8:0x0017\lTryCatch #0 \{all \-\> 0x0017, blocks: (B:3:0x0001, B:5:0x0005, B:6:0x0015), top: B:11:0x0001 \}\lMETHOD_OVERRIDE: [androidx.core.app.JobIntentService.WorkEnqueuer.serviceProcessingStarted():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_11;
Node_11 -> Node_3;
Node_11 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_1;
Node_12 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

