digraph "CFG forandroidx.core.app.NotificationCompat.MessagingStyle.addHistoricMessage(Landroidx\/core\/app\/NotificationCompat$MessagingStyle$Message;)Landroidx\/core\/app\/NotificationCompat$MessagingStyle;" {
subgraph cluster_Region_1054563025 {
label = "R(2:(2:2|(1:4))|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1393976178 {
label = "IF [B:9:0x0000] THEN: R(2:2|(1:4)) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|if (r3 != null) goto L2\l}"];
subgraph cluster_Region_621018831 {
label = "R(2:2|(1:4))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|r2.mHistoricMessages.add(r3)\l}"];
subgraph cluster_IfRegion_401112327 {
label = "IF [B:11:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000f|if (r2.mHistoricMessages.size() \> 25) goto L4\l}"];
subgraph cluster_Region_1937879289 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0011|r2.mHistoricMessages.remove(0)\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0017|RETURN\l|return r2\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.core.app.NotificationCompat$MessagingStyle androidx.core.app.NotificationCompat.MessagingStyle.addHistoricMessage((r2v0 'this' androidx.core.app.NotificationCompat$MessagingStyle A[IMMUTABLE_TYPE, THIS]), (r3v0 'message' androidx.core.app.NotificationCompat$MessagingStyle$Message A[D('message' androidx.core.app.NotificationCompat$MessagingStyle$Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x000f \-\> B:13:0x0017, CROSS_EDGE: B:9:0x0000 \-\> B:13:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

