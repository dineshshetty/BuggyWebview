digraph "CFG forandroidx.core.app.AlarmManagerCompat.setAlarmClock(Landroid\/app\/AlarmManager;JLandroid\/app\/PendingIntent;Landroid\/app\/PendingIntent;)V" {
subgraph cluster_Region_1734177694 {
label = "R(1:(1:3)(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_927807684 {
label = "IF [B:3:0x0004] THEN: R(1:3) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L3\l}"];
subgraph cluster_Region_1722998426 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|androidx.core.app.AlarmManagerCompat.Api21Impl.setAlarmClock(r2, androidx.core.app.AlarmManagerCompat.Api21Impl.createAlarmClockInfo(r3, r5), r6)\l}"];
}
subgraph cluster_Region_29433561 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|setExact(r2, 0, r3, r6)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static void androidx.core.app.AlarmManagerCompat.setAlarmClock((r2v0 'alarmManager' android.app.AlarmManager A[D('alarmManager' android.app.AlarmManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'triggerTime' long A[D('triggerTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'showIntent' android.app.PendingIntent A[D('showIntent' android.app.PendingIntent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'operation' android.app.PendingIntent A[D('operation' android.app.PendingIntent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000f \-\> B:6:0x0013\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_7 -> Node_1;
Node_6 -> Node_1;
}

