digraph "CFG forandroidx.core.app.NotificationCompat.Builder.setFlag(IZ)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x000a  (LINE:1731)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IGET  (r0 I:android.app.Notification) = (r3 I:androidx.core.app.NotificationCompat$Builder) androidx.core.app.NotificationCompat.Builder.mNotification android.app.Notification  (LINE:1732)\l0x0004: IGET  (r1 I:int) = (r0 I:android.app.Notification) android.app.Notification.flags int \l0x0006: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r4 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0007: IPUT  (r1 I:int), (r0 I:android.app.Notification) android.app.Notification.flags int \l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN   A[SYNTHETIC] (LINE:1736)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|0x000a: IGET  (r0 I:android.app.Notification) = (r3 I:androidx.core.app.NotificationCompat$Builder) androidx.core.app.NotificationCompat.Builder.mNotification android.app.Notification  (LINE:1734)\l0x000c: IGET  (r1 I:int) = (r0 I:android.app.Notification) android.app.Notification.flags int \l0x000e: NOT  (r2 I:int) = (r4 I:int A[D('mask' int)]) \l0x000f: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l0x0010: IPUT  (r1 I:int), (r0 I:android.app.Notification) android.app.Notification.flags int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN    (LINE:1736)\l}"];
MethodNode[shape=record,label="{private void androidx.core.app.NotificationCompat.Builder.setFlag((r3 'this' I:androidx.core.app.NotificationCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('mask' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x000a \-\> B:12:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r4 'mask' I\l  \-1 \-0x0012: r5 'value' Z\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_8;
}

