digraph "CFG forandroidx.core.app.NotificationCompat.Builder.limitCharSequenceLength(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cs' java.lang.CharSequence)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0003  (LINE:2444)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|RETURN\l|0x0002: RETURN  (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)]) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: INVOKE  (r0 I:int) = (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:2445)\l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (5120(0x1400, float:7.175E\-42) ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:17:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2446)\l0x000c: INVOKE  (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)]) = (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)]), (r0 I:int), (r1 I:int) type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|RETURN\lORIG_RETURN\l|0x0010: RETURN  (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)])  (LINE:2448)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN  (r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence)]) A[SYNTHETIC] (LINE:2448)\l}"];
MethodNode[shape=record,label="{protected static java.lang.CharSequence androidx.core.app.NotificationCompat.Builder.limitCharSequenceLength((r2 I:java.lang.CharSequence A[D('cs' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0010 \-\> B:10:?, CROSS_EDGE: B:14:0x0009 \-\> B:16:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 'cs' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

