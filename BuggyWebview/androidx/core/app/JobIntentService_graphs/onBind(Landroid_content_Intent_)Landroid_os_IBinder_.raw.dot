digraph "CFG forandroidx.core.app.JobIntentService.onBind(Landroid\/content\/Intent;)Landroid\/os\/IBinder;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.app.JobIntentService$CompatJobEngine) = (r1 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mJobImpl androidx.core.app.JobIntentService$CompatJobEngine  (LINE:469)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:android.os.IBinder) = (r0 I:androidx.core.app.JobIntentService$CompatJobEngine) type: INTERFACE call: androidx.core.app.JobIntentService.CompatJobEngine.compatGetBinder():android.os.IBinder A[MD:():android.os.IBinder (m)] (LINE:470)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:android.os.IBinder A[D('engine' android.os.IBinder)])  (LINE:472)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|RETURN\l|0x0009: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('engine' android.os.IBinder)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:474)\l0x000a: RETURN  (r0 I:android.os.IBinder) \l}"];
MethodNode[shape=record,label="{public android.os.IBinder androidx.core.app.JobIntentService.onBind((r1 'this' I:androidx.core.app.JobIntentService A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x000a \-\> B:1:?\lDebug Info:\l  0x0008\-0x0009: r0 'engine' Landroid\/os\/IBinder;\l  \-1 \-0x000a: r2 'intent' Landroid\/content\/Intent;\lMETHOD_OVERRIDE: [ClspMth\{android.app.Service.onBind(android.content.Intent):android.os.IBinder\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

