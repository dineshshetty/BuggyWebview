digraph "CFG forandroidx.core.app.JobIntentService.processorFinished()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.core.app.JobIntentService$CompatWorkItem\>) = (r2 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCompatQueue java.util.ArrayList  (LINE:623)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY])  (LINE:624)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:625)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x0006: IPUT  (r1 I:androidx.core.app.JobIntentService$CommandProcessor), (r2 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCurProcessor androidx.core.app.JobIntentService$CommandProcessor A[Catch: all \-\> 0x0022, TRY_ENTER]\l0x0008: IGET  (r1 I:java.util.ArrayList\<androidx.core.app.JobIntentService$CompatWorkItem\>) = (r2 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCompatQueue java.util.ArrayList A[Catch: all \-\> 0x0022] (LINE:634)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0017 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|TryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x000c: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[Catch: all \-\> 0x0022, MD:():int (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:11:0x0017 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|TryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:635)\l0x0013: INVOKE  (r2 I:androidx.core.app.JobIntentService), (r1 I:boolean) type: VIRTUAL call: androidx.core.app.JobIntentService.ensureProcessorRunningLocked(boolean):void A[Catch: all \-\> 0x0022, MD:(boolean):void (m)]\l0x0016: GOTO  \-\> 0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|TryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x0020: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0022] (LINE:639)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: GOTO  \-\> 0x0025 \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:641)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|TryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x0017: IGET  (r1 I:boolean) = (r2 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mDestroyed boolean A[Catch: all \-\> 0x0022] (LINE:636)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|TryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\lCatch: all \-\> 0x0022\l|0x001b: IGET  (r1 I:androidx.core.app.JobIntentService$WorkEnqueuer) = (r2 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCompatWorkEnqueuer androidx.core.app.JobIntentService$WorkEnqueuer A[Catch: all \-\> 0x0022] (LINE:637)\l0x001d: INVOKE  (r1 I:androidx.core.app.JobIntentService$WorkEnqueuer) type: VIRTUAL call: androidx.core.app.JobIntentService.WorkEnqueuer.serviceProcessingFinished():void A[Catch: all \-\> 0x0022, MD:():void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|ExcHandler: all \-\> 0x0022\l|0x0022: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0022]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|TRY_LEAVE\lCatch: all \-\> 0x0022\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN    (LINE:641)\l}"];
MethodNode[shape=record,label="{void androidx.core.app.JobIntentService.processorFinished((r2 'this' I:androidx.core.app.JobIntentService A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0024 \-\> B:1:?, CROSS_EDGE: B:13:0x001b \-\> B:14:0x0020, CROSS_EDGE: B:12:0x0019 \-\> B:14:0x0020, CROSS_EDGE: B:7:0x000a \-\> B:11:0x0017, CROSS_EDGE: B:20:0x0006 \-\> B:16:0x0022, CROSS_EDGE: B:3:0x0002 \-\> B:19:0x0025\lTryCatch #0 \{all \-\> 0x0022, blocks: (B:6:0x0006, B:8:0x000c, B:10:0x0012, B:14:0x0020, B:11:0x0017, B:13:0x001b), top: B:20:0x0006 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_20;
Node_20 -> Node_6;
Node_20 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_22;
Node_22 -> Node_1;
Node_21 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_1;
}

