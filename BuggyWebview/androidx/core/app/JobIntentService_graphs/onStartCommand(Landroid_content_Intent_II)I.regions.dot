digraph "CFG forandroidx.core.app.JobIntentService.onStartCommand(Landroid\/content\/Intent;II)I" {
subgraph cluster_Region_782601041 {
label = "R(1:(2:(3:3|b|11)|(1:18)))";
node [shape=record,color=blue];
subgraph cluster_Region_1125051985 {
label = "R(2:(3:3|b|11)|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_101726219 {
label = "IF [B:3:0x0002] THEN: R(3:3|b|11) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r4.mCompatQueue != null) goto L3\l}"];
subgraph cluster_Region_1345426866 {
label = "R(3:3|b|11)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|r4.mCompatWorkEnqueuer.serviceStartReceived()\l}"];
subgraph cluster_SynchronizedRegion_1389130726 {
label = "Synchronized:R(2:4|(1:9))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
subgraph cluster_Region_1719956360 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0019|TryCatch #0 \{, blocks: (B:6:0x000c, B:10:0x0019, B:11:0x0023, B:9:0x0014), top: B:19:0x000c \}\lCatch: all \-\> 0x0026\lPHI: r3 \l  PHI: (r3v1 android.content.Intent A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.mCompatQueue.add(new androidx.core.app.JobIntentService.CompatWorkItem(r5 != null ? r5 : new android.content.Intent(), r7))     \/\/ Catch: java.lang.Throwable \-\> L26\lensureProcessorRunningLocked(true)     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0024|RETURN\l|return 3\l}"];
}
}
subgraph cluster_Region_1632886579 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0029|RETURN\l|return 2\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c|TRY_ENTER\lTryCatch #0 \{, blocks: (B:6:0x000c, B:10:0x0019, B:11:0x0023, B:9:0x0014), top: B:19:0x000c \}\lCatch: all \-\> 0x0026\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:6:0x000c, B:10:0x0019, B:11:0x0023, B:9:0x0014), top: B:19:0x000c \}\lCatch: all \-\> 0x0026\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014|TryCatch #0 \{, blocks: (B:6:0x000c, B:10:0x0019, B:11:0x0023, B:9:0x0014), top: B:19:0x000c \}\lCatch: all \-\> 0x0026\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0026|REMOVE\lExcHandler: all \-\> 0x0026\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0027|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0026\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0028|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public int androidx.core.app.JobIntentService.onStartCommand((r4v0 'this' androidx.core.app.JobIntentService A[IMMUTABLE_TYPE, THIS]), (r5v0 'intent' android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'flags' int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'startId' int A[D('startId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x0028 \-\> B:1:?, CROSS_EDGE: B:9:0x0014 \-\> B:10:0x0019, CROSS_EDGE: B:19:0x000c \-\> B:14:0x0026, CROSS_EDGE: B:18:0x002a \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.app.Service.onStartCommand(android.content.Intent, int, int):int\}]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_17[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_19;
Node_10 -> Node_11;
Node_12 -> Node_1;
Node_17 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_19 -> Node_6;
Node_19 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_20;
Node_20 -> Node_14;
Node_9 -> Node_10;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
}

