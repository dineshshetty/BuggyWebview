digraph "CFG forandroidx.core.app.JobIntentService.ensureProcessorRunningLocked(Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.app.JobIntentService$CommandProcessor) = (r3 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCurProcessor androidx.core.app.JobIntentService$CommandProcessor  (LINE:612)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:androidx.core.app.JobIntentService$CommandProcessor) =  androidx.core.app.JobIntentService$CommandProcessor  (LINE:613)\l0x0006: INVOKE  (r0 I:androidx.core.app.JobIntentService$CommandProcessor), (r3 I:androidx.core.app.JobIntentService) type: DIRECT call: androidx.core.app.JobIntentService.CommandProcessor.\<init\>(androidx.core.app.JobIntentService):void A[MD:(androidx.core.app.JobIntentService):void (m)]\l0x0009: IPUT  (r0 I:androidx.core.app.JobIntentService$CommandProcessor), (r3 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCurProcessor androidx.core.app.JobIntentService$CommandProcessor \l0x000b: IGET  (r0 I:androidx.core.app.JobIntentService$WorkEnqueuer) = (r3 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCompatWorkEnqueuer androidx.core.app.JobIntentService$WorkEnqueuer  (LINE:614)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reportStarted' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: INVOKE  (r0 I:androidx.core.app.JobIntentService$WorkEnqueuer) type: VIRTUAL call: androidx.core.app.JobIntentService.WorkEnqueuer.serviceProcessingStarted():void A[MD:():void (m)] (LINE:615)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IGET  (r0 I:androidx.core.app.JobIntentService$CommandProcessor) = (r3 I:androidx.core.app.JobIntentService) androidx.core.app.JobIntentService.mCurProcessor androidx.core.app.JobIntentService$CommandProcessor  (LINE:618)\l0x0016: SGET  (r1 I:java.util.concurrent.Executor) =  android.os.AsyncTask.THREAD_POOL_EXECUTOR java.util.concurrent.Executor \l0x0018: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: NEW_ARRAY  (r2 I:java.lang.Void[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Void[] \l0x001b: INVOKE  \l  (r0 I:androidx.core.app.JobIntentService$CommandProcessor)\l  (r1 I:java.util.concurrent.Executor)\l  (r2 I:java.lang.Object[])\l type: VIRTUAL call: androidx.core.app.JobIntentService.CommandProcessor.executeOnExecutor(java.util.concurrent.Executor, java.lang.Object[]):android.os.AsyncTask A[MD:(java.util.concurrent.Executor, Params[]):android.os.AsyncTask\<Params, Progress, Result\> VARARG (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN    (LINE:620)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN   A[SYNTHETIC] (LINE:620)\l}"];
MethodNode[shape=record,label="{void androidx.core.app.JobIntentService.ensureProcessorRunningLocked((r3 'this' I:androidx.core.app.JobIntentService A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('reportStarted' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x000f \-\> B:8:0x0014, CROSS_EDGE: B:5:0x000d \-\> B:8:0x0014, CROSS_EDGE: B:3:0x0002 \-\> B:9:0x001e\lDebug Info:\l  \-1 \-0x001e: r4 'reportStarted' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_1;
}

