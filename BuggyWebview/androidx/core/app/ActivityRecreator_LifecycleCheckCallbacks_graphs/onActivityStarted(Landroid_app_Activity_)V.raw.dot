digraph "CFG forandroidx.core.app.ActivityRecreator.LifecycleCheckCallbacks.onActivityStarted(Landroid\/app\/Activity;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:android.app.Activity) = (r1 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) androidx.core.app.ActivityRecreator.LifecycleCheckCallbacks.mActivity android.app.Activity  (LINE:207)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('activity' android.app.Activity)])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:208)\l0x0005: IPUT  (r0 I:boolean), (r1 I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) androidx.core.app.ActivityRecreator.LifecycleCheckCallbacks.mStarted boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|RETURN\lORIG_RETURN\l|0x0007: RETURN    (LINE:210)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0007: RETURN   A[SYNTHETIC] (LINE:210)\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.ActivityRecreator.LifecycleCheckCallbacks.onActivityStarted((r1 'this' I:androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks A[IMMUTABLE_TYPE, THIS]), (r2 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'activity' Landroid\/app\/Activity;\lMETHOD_OVERRIDE: [ClspMth\{android.app.Application.ActivityLifecycleCallbacks.onActivityStarted(android.app.Activity):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

