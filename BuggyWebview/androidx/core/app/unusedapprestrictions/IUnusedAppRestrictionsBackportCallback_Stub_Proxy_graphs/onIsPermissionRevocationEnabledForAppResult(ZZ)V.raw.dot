digraph "CFG forandroidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.Stub.Proxy.onIsPermissionRevocationEnabledForAppResult(ZZ)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Parcel) =  type: STATIC call: android.os.Parcel.obtain():android.os.Parcel A[MD:():android.os.Parcel (c)] (LINE:108)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lCatch: all \-\> 0x0038\l|0x0004: CONST_STR  (r1 I:java.lang.String) =  \"androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback\" A[TRY_ENTER] (LINE:110)\l0x0006: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r1 I:java.lang.String) type: VIRTUAL call: android.os.Parcel.writeInterfaceToken(java.lang.String):void A[Catch: all \-\> 0x0038, MD:(java.lang.String):void (c)]\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:111)\l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('success' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000f \l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|0x000d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: GOTO  \-\> 0x0010 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|TryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lCatch: all \-\> 0x0038\l|0x0010: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r3 I:int) type: VIRTUAL call: android.os.Parcel.writeInt(int):void A[Catch: all \-\> 0x0038, MD:(int):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isEnabled' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0016  (LINE:112)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|TryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lCatch: all \-\> 0x0038\l|0x0016: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]), (r1 I:int) type: VIRTUAL call: android.os.Parcel.writeInt(int):void A[Catch: all \-\> 0x0038, MD:(int):void (c)]\l0x0019: IGET  (r1 I:android.os.IBinder) = (r4 I:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy) androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.Stub.Proxy.mRemote android.os.IBinder A[Catch: all \-\> 0x0038] (LINE:113)\l0x001b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r1 I:boolean) = \l  (r1 I:android.os.IBinder)\l  (r2 I:int)\l  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)])\l  (r3 I:android.os.Parcel)\l  (r2 I:int)\l type: INTERFACE call: android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean A[Catch: all \-\> 0x0038, MD:(int, android.os.Parcel, android.os.Parcel, int):boolean throws android.os.RemoteException (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('_status' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0033  (LINE:114)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|TryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lCatch: all \-\> 0x0038\l|0x0022: INVOKE  (r2 I:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) =  type: STATIC call: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.Stub.getDefaultImpl():androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback A[Catch: all \-\> 0x0038, MD:():androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0033 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lCatch: all \-\> 0x0038\l|0x0028: INVOKE  (r2 I:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) =  type: STATIC call: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.Stub.getDefaultImpl():androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback A[Catch: all \-\> 0x0038, MD:():androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback (m)] (LINE:115)\l0x002c: INVOKE  \l  (r2 I:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback)\l  (r5 I:boolean A[D('success' boolean)])\l  (r6 I:boolean A[D('isEnabled' boolean)])\l type: INTERFACE call: androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.onIsPermissionRevocationEnabledForAppResult(boolean, boolean):void A[Catch: all \-\> 0x0038, MD:(boolean, boolean):void throws android.os.RemoteException (m), TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|0x002f: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)] (LINE:120)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:116)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0033|0x0033: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)] (LINE:120)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:122)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|ExcHandler: all \-\> 0x0038\l|0x0038: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0038] (LINE:120)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0039|0x0039: INVOKE  (r0 I:android.os.Parcel A[D('_data' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.recycle():void A[MD:():void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|0x003c: THROW  (r1 I:java.lang.Throwable)  (LINE:121)\l}"];
MethodNode[shape=record,label="{public void androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.Stub.Proxy.onIsPermissionRevocationEnabledForAppResult((r4 'this' I:androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[D('success' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('isEnabled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x003c \-\> B:25:?, CROSS_EDGE: B:42:0x0037 \-\> B:25:?, CROSS_EDGE: B:35:0x0020 \-\> B:41:0x0033, CROSS_EDGE: B:32:0x0013 \-\> B:34:0x0016, CROSS_EDGE: B:30:0x000f \-\> B:31:0x0010, CROSS_EDGE: B:46:0x0004 \-\> B:43:0x0038\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0038, blocks: (B:27:0x0004, B:31:0x0010, B:34:0x0016, B:36:0x0022, B:38:0x0028), top: B:46:0x0004 \}\lDebug Info:\l  0x0020\-0x0033: r1 '_status' Z\l  0x0004\-0x003c: r0 '_data' Landroid\/os\/Parcel;\l  \-1 \-0x003c: r5 'success' Z\l  \-1 \-0x003c: r6 'isEnabled' Z\lEXCEPTIONS:[Landroid\/os\/RemoteException;]\lMETHOD_OVERRIDE: [androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback.onIsPermissionRevocationEnabledForAppResult(boolean, boolean):void]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_46;
Node_46 -> Node_27;
Node_46 -> Node_43;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_25;
Node_47 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_30 -> Node_31;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_25;
}

