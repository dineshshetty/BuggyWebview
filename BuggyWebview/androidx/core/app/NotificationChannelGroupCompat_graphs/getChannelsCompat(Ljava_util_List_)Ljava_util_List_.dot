digraph "CFG forandroidx.core.app.NotificationChannelGroupCompat.getChannelsCompat(Ljava\/util\/List;)Ljava\/util\/List;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|java.util.ArrayList r0 = new java.util.ArrayList\<\>()\ljava.util.Iterator r1 = r6.iterator()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|LOOP_START\lLOOP:0: B:18:0x0009\-\>B:27:0x0009\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|if (r1.hasNext() == false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|android.app.NotificationChannel r2 = r1.next()\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|if (r5.mId.equals(r2.getGroup()) == false) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x0021|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|r0.add(new androidx.core.app.NotificationChannelCompat(r2))\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:18:0x0009\-\>B:27:0x0009\l}"];
Node_28 [shape=record,label="{28\:\ 0x0009|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|RETURN\l|return r0\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private java.util.List\<androidx.core.app.NotificationChannelCompat\> androidx.core.app.NotificationChannelGroupCompat.getChannelsCompat((r5v0 'this' androidx.core.app.NotificationChannelGroupCompat A[IMMUTABLE_TYPE, THIS]), (r6v0 'channels' java.util.List\<android.app.NotificationChannel\> A[D('channels' java.util.List\<android.app.NotificationChannel\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0021 \-\> B:18:0x0009, BACK_EDGE: B:21:0x001f \-\> B:18:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/List\<Landroid\/app\/NotificationChannel;\>;)Ljava\/util\/List\<Landroidx\/core\/app\/NotificationChannelCompat;\>;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_26[style=dashed];
Node_21 -> Node_28;
Node_26 -> Node_22;
Node_22 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_27;
Node_25 -> Node_24;
Node_24 -> Node_16;
}

