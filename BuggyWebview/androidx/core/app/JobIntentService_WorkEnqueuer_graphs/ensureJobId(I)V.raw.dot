digraph "CFG forandroidx.core.app.JobIntentService.WorkEnqueuer.ensureJobId(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.core.app.JobIntentService$WorkEnqueuer) androidx.core.app.JobIntentService.WorkEnqueuer.mHasJobId boolean  (LINE:127)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:128)\l0x0005: IPUT  (r0 I:boolean), (r3 I:androidx.core.app.JobIntentService$WorkEnqueuer) androidx.core.app.JobIntentService.WorkEnqueuer.mHasJobId boolean \l0x0007: IPUT  (r4 I:int A[D('jobId' int)]), (r3 I:androidx.core.app.JobIntentService$WorkEnqueuer) androidx.core.app.JobIntentService.WorkEnqueuer.mJobId int  (LINE:129)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN    (LINE:134)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r0 I:int) = (r3 I:androidx.core.app.JobIntentService$WorkEnqueuer) androidx.core.app.JobIntentService.WorkEnqueuer.mJobId int  (LINE:130)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('jobId' int)])  \-\> B:8:0x000f \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:131)\l0x0011: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Given job ID \" \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int A[D('jobId' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001e: CONST_STR  (r2 I:java.lang.String) =  \" is different than previous \" \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0023: IGET  (r2 I:int) = (r3 I:androidx.core.app.JobIntentService$WorkEnqueuer) androidx.core.app.JobIntentService.WorkEnqueuer.mJobId int \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0028: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002c: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN   A[SYNTHETIC] (LINE:134)\l}"];
MethodNode[shape=record,label="{void androidx.core.app.JobIntentService.WorkEnqueuer.ensureJobId((r3 'this' I:androidx.core.app.JobIntentService$WorkEnqueuer A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('jobId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x000c \-\> B:7:0x000e, CROSS_EDGE: B:9:0x002f \-\> B:1:?\lDebug Info:\l  \-1 \-0x002f: r4 'jobId' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_1;
}

