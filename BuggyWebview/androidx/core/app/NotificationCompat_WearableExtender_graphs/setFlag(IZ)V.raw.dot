digraph "CFG forandroidx.core.app.NotificationCompat.WearableExtender.setFlag(IZ)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0008  (LINE:6322)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IGET  (r0 I:int) = (r2 I:androidx.core.app.NotificationCompat$WearableExtender) androidx.core.app.NotificationCompat.WearableExtender.mFlags int  (LINE:6323)\l0x0004: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) \| (r3 I:??[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0005: IPUT  (r0 I:int), (r2 I:androidx.core.app.NotificationCompat$WearableExtender) androidx.core.app.NotificationCompat.WearableExtender.mFlags int \l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN   A[SYNTHETIC] (LINE:6327)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r2 I:androidx.core.app.NotificationCompat$WearableExtender) androidx.core.app.NotificationCompat.WearableExtender.mFlags int  (LINE:6325)\l0x000a: NOT  (r1 I:int) = (r3 I:int A[D('mask' int)]) \l0x000b: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l0x000c: IPUT  (r0 I:int), (r2 I:androidx.core.app.NotificationCompat$WearableExtender) androidx.core.app.NotificationCompat.WearableExtender.mFlags int \l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN    (LINE:6327)\l}"];
MethodNode[shape=record,label="{private void androidx.core.app.NotificationCompat.WearableExtender.setFlag((r2 'this' I:androidx.core.app.NotificationCompat$WearableExtender A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('mask' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0008 \-\> B:12:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r3 'mask' I\l  \-1 \-0x000e: r4 'value' Z\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_8;
}

