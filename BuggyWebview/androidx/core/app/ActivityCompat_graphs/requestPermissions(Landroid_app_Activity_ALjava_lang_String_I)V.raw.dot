digraph "CFG forandroidx.core.app.ActivityCompat.requestPermissions(Landroid\/app\/Activity;[Ljava\/lang\/String;I)V" {
Node_56 [shape=record,label="{56\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x0000|0x0000: SGET  (r0 I:androidx.core.app.ActivityCompat$PermissionCompatDelegate) =  androidx.core.app.ActivityCompat.sDelegate androidx.core.app.ActivityCompat$PermissionCompatDelegate  (LINE:502)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x000b \l}"];
Node_60 [shape=record,label="{60\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = \l  (r0 I:androidx.core.app.ActivityCompat$PermissionCompatDelegate)\l  (r4 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r5 I:java.lang.String[] A[D('permissions' java.lang.String[])])\l  (r6 I:int A[D('requestCode' int)])\l type: INTERFACE call: androidx.core.app.ActivityCompat.PermissionCompatDelegate.requestPermissions(android.app.Activity, java.lang.String[], int):boolean A[MD:(android.app.Activity, java.lang.String[], int):boolean (m)] (LINE:503)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x000b \l}"];
Node_62 [shape=record,label="{62\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:505)\l}"];
Node_57 [shape=record,label="{57\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x000b|0x000b: ARRAY_LENGTH  (r0 I:int) = (r5 I:??[] A[D('permissions' java.lang.String[])])  (LINE:508)\l0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x000d|LOOP_START\lLOOP:0: B:64:0x000d\-\>B:67:0x0017\l|0x000d: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char])  \-\> B:81:0x003a \l}"];
Node_65 [shape=record,label="{65\:\ 0x000f|0x000f: AGET  (r2 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('permissions' java.lang.String[])]), (r1 I:??[int, short, byte, char]) \l0x0011: INVOKE  (r3 I:boolean) = (r2 I:java.lang.CharSequence A[D('permission' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:509)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x001a \l}"];
Node_67 [shape=record,label="{67\:\ 0x0017|LOOP_END\lLOOP:0: B:64:0x000d\-\>B:67:0x0017\l|0x0017: ARITH  (r1 I:int) = (r1 I:int) + (1 int)  (LINE:508)\l}"];
Node_80 [shape=record,label="{80\:\ 0x001a|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:510)\l0x001c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0021: CONST_STR  (r3 I:java.lang.String) =  \"Permission request for permissions \" \l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.Object[] A[D('permissions' java.lang.String[])]) type: STATIC call: java.util.Arrays.toString(java.lang.Object[]):java.lang.String A[MD:(java.lang.Object[]):java.lang.String (c)] (LINE:511)\l0x002a: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002d: CONST_STR  (r3 I:java.lang.String) =  \" must not contain null or empty values\" \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0032: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0036: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_81 [shape=record,label="{81\:\ 0x003a|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x003a|0x003a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:515)\l0x003c: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x003e|0x003e: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:76:0x004e \l}"];
Node_72 [shape=record,label="{72\:\ 0x0040|0x0040: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('activity' android.app.Activity)]) androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator  (LINE:516)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0042|0x0042: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x004a \l}"];
Node_74 [shape=record,label="{74\:\ 0x0044|0x0044: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('activity' android.app.Activity)])  (LINE:517)\l0x0045: CHECK_CAST (r0 I:androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator) = (androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator) (r0 I:??[OBJECT, ARRAY]) \l0x0047: INVOKE  (r0 I:androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator), (r6 I:int A[D('requestCode' int)]) type: INTERFACE call: androidx.core.app.ActivityCompat.RequestPermissionsRequestCodeValidator.validateRequestPermissionsRequestCode(int):void A[MD:(int):void (m)] (LINE:518)\l}"];
Node_75 [shape=record,label="{75\:\ 0x004a|0x004a: INVOKE  \l  (r4 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r5 I:java.lang.String[] A[D('permissions' java.lang.String[])])\l  (r6 I:int A[D('requestCode' int)])\l type: STATIC call: androidx.core.app.ActivityCompat.Api23Impl.requestPermissions(android.app.Activity, java.lang.String[], int):void A[MD:(android.app.Activity, java.lang.String[], int):void (m)] (LINE:520)\l}"];
Node_82 [shape=record,label="{82\:\ ?|SYNTHETIC\lRETURN\l|0x0063: RETURN   A[SYNTHETIC] (LINE:542)\l}"];
Node_76 [shape=record,label="{76\:\ 0x004e|0x004e: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('activity' android.app.Activity)]) androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback  (LINE:521)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0050|0x0050: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:? \l}"];
Node_78 [shape=record,label="{78\:\ 0x0052|0x0052: NEW_INSTANCE  (r0 I:android.os.Handler) =  android.os.Handler  (LINE:522)\l0x0054: INVOKE  (r1 I:android.os.Looper) =  type: STATIC call: android.os.Looper.getMainLooper():android.os.Looper A[MD:():android.os.Looper (c)]\l0x0058: INVOKE  (r0 I:android.os.Handler), (r1 I:android.os.Looper) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l0x005b: NEW_INSTANCE  (r1 I:androidx.core.app.ActivityCompat$1) =  androidx.core.app.ActivityCompat$1  (LINE:523)\l0x005d: INVOKE  \l  (r1 I:androidx.core.app.ActivityCompat$1)\l  (r5 I:java.lang.String[] A[D('permissions' java.lang.String[])])\l  (r4 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r6 I:int A[D('requestCode' int)])\l type: DIRECT call: androidx.core.app.ActivityCompat.1.\<init\>(java.lang.String[], android.app.Activity, int):void A[MD:(java.lang.String[], android.app.Activity, int):void (m)]\l0x0060: INVOKE  (r0 I:android.os.Handler A[D('handler' android.os.Handler)]), (r1 I:java.lang.Runnable) type: VIRTUAL call: android.os.Handler.post(java.lang.Runnable):boolean A[MD:(java.lang.Runnable):boolean (c)]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0063|RETURN\lORIG_RETURN\l|0x0063: RETURN    (LINE:542)\l}"];
Node_83 [shape=record,label="{83\:\ ?|SYNTHETIC\lRETURN\l|0x0063: RETURN   A[SYNTHETIC] (LINE:542)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.app.ActivityCompat.requestPermissions((r4 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String[] A[D('permissions' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('requestCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:67:0x0017 \-\> B:64:0x000d, CROSS_EDGE: B:69:0x0039 \-\> B:57:?, CROSS_EDGE: B:79:0x0063 \-\> B:57:?, CROSS_EDGE: B:73:0x0042 \-\> B:75:0x004a, CROSS_EDGE: B:78:0x0052 \-\> B:79:0x0063, CROSS_EDGE: B:77:0x0050 \-\> B:79:0x0063, CROSS_EDGE: B:59:0x0002 \-\> B:63:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0017: r2 'permission' Ljava\/lang\/String;\l  0x001a\-0x003a: r2 'permission' Ljava\/lang\/String;\l  0x005b\-0x0063: r0 'handler' Landroid\/os\/Handler;\l  \-1 \-0x0063: r4 'activity' Landroid\/app\/Activity;\l  \-1 \-0x0063: r5 'permissions' [Ljava\/lang\/String;\l  \-1 \-0x0063: r6 'requestCode' I\l}"];
MethodNode -> Node_56;Node_56 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_63;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_57;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_81;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_80;
Node_67 -> Node_64;
Node_80 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_57;
Node_81 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_76;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_75;
Node_75 -> Node_82;
Node_82 -> Node_57;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_83;
Node_78 -> Node_79;
Node_79 -> Node_57;
Node_83 -> Node_57;
}

