digraph "CFG forandroidx.core.app.AppOpsManagerCompat.noteProxyOpNoThrow(Landroid\/content\/Context;Ljava\/lang\/String;Ljava\/lang\/String;)I" {
subgraph cluster_Region_812218577 {
label = "R(1:(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1895547455 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_100592398 {
label = "IF [B:11:0x0004] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L3\l}"];
subgraph cluster_Region_487101223 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0006|android.app.AppOpsManager android.app.AppOpsManager r0 = (android.app.AppOpsManager) androidx.core.app.AppOpsManagerCompat.Api23Impl.getSystemService(r2, android.app.AppOpsManager.class)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|return androidx.core.app.AppOpsManagerCompat.Api23Impl.noteProxyOpNoThrow(r0, r3, r4)\l}"];
}
}
subgraph cluster_Region_649148013 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0013|RETURN\l|return 1\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static int androidx.core.app.AppOpsManagerCompat.noteProxyOpNoThrow((r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'op' java.lang.String A[D('op' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'proxiedPackageName' java.lang.String A[D('proxiedPackageName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0014 \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
}

