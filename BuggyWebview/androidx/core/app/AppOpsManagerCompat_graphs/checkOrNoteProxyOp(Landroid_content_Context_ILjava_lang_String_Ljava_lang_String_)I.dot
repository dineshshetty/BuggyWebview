digraph "CFG forandroidx.core.app.AppOpsManagerCompat.checkOrNoteProxyOp(Landroid\/content\/Context;ILjava\/lang\/String;Ljava\/lang\/String;)I" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 29) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|android.app.AppOpsManager r0 = androidx.core.app.AppOpsManagerCompat.Api29Impl.getSystemService(r5)\lint r1 = android.os.Binder.getCallingUid()\lint r2 = androidx.core.app.AppOpsManagerCompat.Api29Impl.checkOpNoThrow(r0, r7, r1, r8)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|if (r2 == 0) goto L7\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|RETURN\l|return r2\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|java.lang.String r3 = androidx.core.app.AppOpsManagerCompat.Api29Impl.getOpPackageName(r5)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\l|return androidx.core.app.AppOpsManagerCompat.Api29Impl.checkOpNoThrow(r0, r7, r6, r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|return noteProxyOpNoThrow(r5, r7, r8)\l}"];
MethodNode[shape=record,label="{public static int androidx.core.app.AppOpsManagerCompat.checkOrNoteProxyOp((r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'proxyUid' int A[D('proxyUid' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'op' java.lang.String A[D('op' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'proxiedPackageName' java.lang.String A[D('proxiedPackageName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001d \-\> B:12:?, CROSS_EDGE: B:21:0x0022 \-\> B:12:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

