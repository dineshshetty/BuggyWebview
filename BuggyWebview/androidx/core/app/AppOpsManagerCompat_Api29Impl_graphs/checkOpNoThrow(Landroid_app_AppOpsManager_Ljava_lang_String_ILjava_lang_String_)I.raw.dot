digraph "CFG forandroidx.core.app.AppOpsManagerCompat.Api29Impl.checkOpNoThrow(Landroid\/app\/AppOpsManager;Ljava\/lang\/String;ILjava\/lang\/String;)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('appOpsManager' android.app.AppOpsManager)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0004  (LINE:242)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:243)\l0x0003: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = \l  (r1 I:android.app.AppOpsManager A[D('appOpsManager' android.app.AppOpsManager)])\l  (r2 I:java.lang.String A[D('op' java.lang.String)])\l  (r3 I:int A[D('uid' int)])\l  (r4 I:java.lang.String A[D('packageName' java.lang.String)])\l type: VIRTUAL call: android.app.AppOpsManager.checkOpNoThrow(java.lang.String, int, java.lang.String):int A[MD:(java.lang.String, int, java.lang.String):int (c)] (LINE:246)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{static int androidx.core.app.AppOpsManagerCompat.Api29Impl.checkOpNoThrow((r1 I:android.app.AppOpsManager A[D('appOpsManager' android.app.AppOpsManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('op' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('uid' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('packageName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r1 'appOpsManager' Landroid\/app\/AppOpsManager;\l  \-1 \-0x0008: r2 'op' Ljava\/lang\/String;\l  \-1 \-0x0008: r3 'uid' I\l  \-1 \-0x0008: r4 'packageName' Ljava\/lang\/String;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

