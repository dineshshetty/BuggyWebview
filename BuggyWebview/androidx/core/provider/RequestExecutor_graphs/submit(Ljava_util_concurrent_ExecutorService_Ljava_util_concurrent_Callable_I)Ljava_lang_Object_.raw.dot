digraph "CFG forandroidx.core.provider.RequestExecutor.submit(Ljava\/util\/concurrent\/ExecutorService;Ljava\/util\/concurrent\/Callable;I)Ljava\/lang\/Object;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.concurrent.Future) = \l  (r4 I:java.util.concurrent.ExecutorService A[D('executor' java.util.concurrent.ExecutorService)])\l  (r5 I:java.util.concurrent.Callable A[D('callable' java.util.concurrent.Callable\<T\>)])\l type: INTERFACE call: java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable):java.util.concurrent.Future A[MD:\<T\>:(java.util.concurrent.Callable\<T\>):java.util.concurrent.Future\<T\> (c)] (LINE:65)\l0x0004: CAST (r1 I:long) = (long) (r6 I:int A[D('timeoutMillis' int)])  (LINE:67)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{InterruptedException \-\> 0x0015, ExecutionException \-\> 0x0017, TimeoutException \-\> 0x000c, blocks: (B:18:0x0005), top: B:28:0x0005 \}\lCatch: TimeoutException \-\> 0x000c, InterruptedException \-\> 0x0015, ExecutionException \-\> 0x0017\l|0x0005: SGET  (r3 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit A[Catch: TimeoutException \-\> 0x000c, InterruptedException \-\> 0x0015, ExecutionException \-\> 0x0017, TRY_ENTER]\l0x0007: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.concurrent.Future A[D('future' java.util.concurrent.Future\<T\>)])\l  (r1 I:long)\l  (r3 I:java.util.concurrent.TimeUnit)\l type: INTERFACE call: java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit):java.lang.Object A[Catch: TimeoutException \-\> 0x000c, InterruptedException \-\> 0x0015, ExecutionException \-\> 0x0017, MD:(long, java.util.concurrent.TimeUnit):V throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException (c), TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|RETURN\l|0x000b: RETURN  (r1 I:T) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|ExcHandler: InterruptedException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r1 I:java.lang.InterruptedException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InterruptedException \-\> 0x0015] (LINE:70)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: THROW  (r1 I:java.lang.Throwable A[D('e' java.lang.InterruptedException)])  (LINE:71)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|ExcHandler: ExecutionException \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r1 I:java.util.concurrent.ExecutionException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ExecutionException \-\> 0x0017] (LINE:68)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:69)\l0x001a: INVOKE  (r2 I:java.lang.RuntimeException), (r1 I:java.lang.Throwable A[D('e' java.util.concurrent.ExecutionException)]) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|0x001d: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|ExcHandler: TimeoutException \-\> 0x000c\l|0x000c: MOVE_EXCEPTION  (r1 I:java.util.concurrent.TimeoutException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: TimeoutException \-\> 0x000c] (LINE:72)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:java.lang.InterruptedException) =  java.lang.InterruptedException  (LINE:73)\l0x000f: CONST_STR  (r3 I:java.lang.String) =  \"timeout\" \l0x0011: INVOKE  (r2 I:java.lang.InterruptedException), (r3 I:java.lang.String) type: DIRECT call: java.lang.InterruptedException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static T androidx.core.provider.RequestExecutor.submit((r4 I:java.util.concurrent.ExecutorService A[D('executor' java.util.concurrent.ExecutorService), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.concurrent.Callable\<T\> A[D('callable' java.util.concurrent.Callable\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('timeoutMillis' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0016 \-\> B:16:?, CROSS_EDGE: B:27:0x001d \-\> B:16:?, CROSS_EDGE: B:22:0x0014 \-\> B:16:?, CROSS_EDGE: B:28:0x0005 \-\> B:23:0x0015, CROSS_EDGE: B:28:0x0005 \-\> B:25:0x0017, CROSS_EDGE: B:28:0x0005 \-\> B:20:0x000c\lINLINE_NOT_NEEDED\lTryCatch #2 \{InterruptedException \-\> 0x0015, ExecutionException \-\> 0x0017, TimeoutException \-\> 0x000c, blocks: (B:18:0x0005), top: B:28:0x0005 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/concurrent\/ExecutorService;Ljava\/util\/concurrent\/Callable\<TT;\>;I)TT;\lDebug Info:\l  0x000d\-0x0015: r1 'e' Ljava\/util\/concurrent\/TimeoutException;\l  0x0016\-0x0017: r1 'e' Ljava\/lang\/InterruptedException;\l  0x0004\-0x001d: r0 'future' Ljava\/util\/concurrent\/Future;, signature: Ljava\/util\/concurrent\/Future\<TT;\>;\l  0x0018\-0x001d: r1 'e' Ljava\/util\/concurrent\/ExecutionException;\l  \-1 \-0x001d: r4 'executor' Ljava\/util\/concurrent\/ExecutorService;\l  0x0000\-0x001d: r5 'callable' Ljava\/util\/concurrent\/Callable;, signature: Ljava\/util\/concurrent\/Callable\<TT;\>;\l  \-1 \-0x001d: r6 'timeoutMillis' I\lEXCEPTIONS:[Ljava\/lang\/InterruptedException;]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_28;
Node_28 -> Node_18;
Node_28 -> Node_23;
Node_28 -> Node_25;
Node_28 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_29;
Node_19 -> Node_16;
Node_29 -> Node_23;
Node_29 -> Node_25;
Node_29 -> Node_20;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_16;
}

