digraph "CFG forandroidx.core.provider.FontsContractCompat.FontInfo.create(Landroid\/net\/Uri;IIZI)Landroidx\/core\/provider\/FontsContractCompat$FontInfo;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|return new androidx.core.provider.FontsContractCompat.FontInfo(r7, r8, r9, r10, r11)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static androidx.core.provider.FontsContractCompat$FontInfo androidx.core.provider.FontsContractCompat.FontInfo.create((r7v0 'uri' android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'ttcIndex' int A[D('ttcIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'weight' int A[D('weight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'italic' boolean A[D('italic' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'resultCode' int A[D('resultCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

