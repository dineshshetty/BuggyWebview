digraph "CFG forandroidx.core.provider.SelfDestructiveThread.3.run()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x000c, blocks: (B:2:0x0000), top: B:14:0x0000 \}\lCatch: Exception \-\> 0x000c\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$holder java.util.concurrent.atomic.AtomicReference A[Catch: Exception \-\> 0x000c, TRY_ENTER] (LINE:180)\l0x0002: IGET  (r1 I:java.util.concurrent.Callable) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$callable java.util.concurrent.Callable A[Catch: Exception \-\> 0x000c]\l0x0004: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.concurrent.Callable) type: INTERFACE call: java.util.concurrent.Callable.call():java.lang.Object A[Catch: Exception \-\> 0x000c, MD:():V throws java.lang.Exception (c)]\l0x0008: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicReference), (r1 I:java.lang.Object) type: VIRTUAL call: java.util.concurrent.atomic.AtomicReference.set(java.lang.Object):void A[Catch: Exception \-\> 0x000c, MD:(V):void (c), TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock  (LINE:184)\l0x000f: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.lock():void A[MD:():void (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:6:0x0012), top: B:12:0x0012 \}\lCatch: all \-\> 0x0024\l|0x0012: IGET  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$running java.util.concurrent.atomic.AtomicBoolean A[Catch: all \-\> 0x0024, TRY_ENTER] (LINE:186)\l0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicBoolean), (r1 I:boolean) type: VIRTUAL call: java.util.concurrent.atomic.AtomicBoolean.set(boolean):void A[Catch: all \-\> 0x0024, MD:(boolean):void (c)]\l0x0018: IGET  (r0 I:java.util.concurrent.locks.Condition) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$cond java.util.concurrent.locks.Condition A[Catch: all \-\> 0x0024] (LINE:187)\l0x001a: INVOKE  (r0 I:java.util.concurrent.locks.Condition) type: INTERFACE call: java.util.concurrent.locks.Condition.signal():void A[Catch: all \-\> 0x0024, MD:():void (c), TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock  (LINE:189)\l0x001f: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:191)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|0x0024: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0024] (LINE:189)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = (r2 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock \l0x0027: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) type: VIRTUAL call: java.util.concurrent.locks.ReentrantLock.unlock():void A[MD:():void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable)  (LINE:190)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: Exception \-\> 0x000c\l|0x000c: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x000c] (LINE:181)\l}"];
MethodNode[shape=record,label="{public void androidx.core.provider.SelfDestructiveThread.3.run((r2 'this' I:androidx.core.provider.SelfDestructiveThread$3 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x002a \-\> B:1:?, CROSS_EDGE: B:12:0x0012 \-\> B:9:0x0024, CROSS_EDGE: B:4:0x000c \-\> B:5:0x000d, CROSS_EDGE: B:14:0x0000 \-\> B:4:0x000c\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:6:0x0012), top: B:12:0x0012 \}, TryCatch #1 \{Exception \-\> 0x000c, blocks: (B:2:0x0000), top: B:14:0x0000 \}\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_14;
Node_14 -> Node_2;
Node_14 -> Node_4;
Node_2 -> Node_5;
Node_2 -> Node_15;
Node_5 -> Node_12;
Node_12 -> Node_6;
Node_12 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_13 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_15 -> Node_4;
Node_4 -> Node_5;
}

