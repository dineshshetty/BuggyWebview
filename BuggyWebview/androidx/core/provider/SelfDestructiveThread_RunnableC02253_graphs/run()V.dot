digraph "CFG forandroidx.core.provider.SelfDestructiveThread.3.run()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x000c, blocks: (B:2:0x0000), top: B:14:0x0000 \}\lCatch: Exception \-\> 0x000c\l|r2.set(r3.call())     \/\/ Catch: java.lang.Exception \-\> Lc\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r4.lock()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:6:0x0012), top: B:12:0x0012 \}\lCatch: all \-\> 0x0024\l|r5.set(false)     \/\/ Catch: java.lang.Throwable \-\> L24\lr6.signal()     \/\/ Catch: java.lang.Throwable \-\> L24\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|DONT_GENERATE\l|java.util.concurrent.locks.ReentrantLock r0 = r4\lr0.unlock()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|FINALLY_INSNS\l|r4.unlock()\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|throw r0\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: Exception \-\> 0x000c\l}"];
MethodNode[shape=record,label="{public void androidx.core.provider.SelfDestructiveThread.3.run((r2v0 'this' androidx.core.provider.SelfDestructiveThread$3 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x002a \-\> B:1:?, CROSS_EDGE: B:12:0x0012 \-\> B:9:0x0024, CROSS_EDGE: B:4:0x000c \-\> B:5:0x000d, CROSS_EDGE: B:14:0x0000 \-\> B:4:0x000c\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:6:0x0012), top: B:12:0x0012 \}, TryCatch #1 \{Exception \-\> 0x000c, blocks: (B:2:0x0000), top: B:14:0x0000 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_14;
Node_14 -> Node_2;
Node_14 -> Node_4;
Node_2 -> Node_5;
Node_2 -> Node_15;
Node_5 -> Node_12;
Node_12 -> Node_6;
Node_12 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_13 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_15 -> Node_4;
Node_4 -> Node_5;
}

