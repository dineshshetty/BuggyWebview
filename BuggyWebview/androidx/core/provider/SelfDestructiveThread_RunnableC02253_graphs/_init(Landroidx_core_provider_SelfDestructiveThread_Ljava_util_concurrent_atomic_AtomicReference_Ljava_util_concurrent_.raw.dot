digraph "CFG forandroidx.core.provider.SelfDestructiveThread.3.\<init\>(Landroidx\/core\/provider\/SelfDestructiveThread;Ljava\/util\/concurrent\/atomic\/AtomicReference;Ljava\/util\/concurrent\/Callable;Ljava\/util\/concurrent\/locks\/ReentrantLock;Ljava\/util\/concurrent\/atomic\/AtomicBoolean;Ljava\/util\/concurrent\/locks\/Condition;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IPUT  \l  (r1 I:androidx.core.provider.SelfDestructiveThread A[D('this$0' androidx.core.provider.SelfDestructiveThread)])\l  (r0 I:androidx.core.provider.SelfDestructiveThread$3)\l androidx.core.provider.SelfDestructiveThread.3.this$0 androidx.core.provider.SelfDestructiveThread  (LINE:176)\l0x0002: IPUT  (r2 I:java.util.concurrent.atomic.AtomicReference), (r0 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$holder java.util.concurrent.atomic.AtomicReference \l0x0004: IPUT  (r3 I:java.util.concurrent.Callable), (r0 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$callable java.util.concurrent.Callable \l0x0006: IPUT  (r4 I:java.util.concurrent.locks.ReentrantLock), (r0 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$lock java.util.concurrent.locks.ReentrantLock \l0x0008: IPUT  (r5 I:java.util.concurrent.atomic.AtomicBoolean), (r0 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$running java.util.concurrent.atomic.AtomicBoolean \l0x000a: IPUT  (r6 I:java.util.concurrent.locks.Condition), (r0 I:androidx.core.provider.SelfDestructiveThread$3) androidx.core.provider.SelfDestructiveThread.3.val$cond java.util.concurrent.locks.Condition \l0x000c: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.core.provider.SelfDestructiveThread.3.\<init\>((r0 'this' I:androidx.core.provider.SelfDestructiveThread$3 A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.core.provider.SelfDestructiveThread A[D('this$0' androidx.core.provider.SelfDestructiveThread), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.concurrent.atomic.AtomicReference A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.concurrent.Callable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.concurrent.locks.ReentrantLock A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.concurrent.atomic.AtomicBoolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.concurrent.locks.Condition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | ANONYMOUS_CONSTRUCTOR\lUSE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000f: r1 'this$0' Landroidx\/core\/provider\/SelfDestructiveThread;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

