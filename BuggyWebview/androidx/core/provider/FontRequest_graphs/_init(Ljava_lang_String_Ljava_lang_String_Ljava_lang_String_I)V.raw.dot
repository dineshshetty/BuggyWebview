digraph "CFG forandroidx.core.provider.FontRequest.\<init\>(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;I)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:78)\l0x0003: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.lang.Object A[D('providerAuthority' java.lang.String)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:79)\l0x0007: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x0009: IPUT  (r0 I:java.lang.String), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mProviderAuthority java.lang.String \l0x000b: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object A[D('providerPackage' java.lang.String)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:80)\l0x000f: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x0011: IPUT  (r0 I:java.lang.String), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mProviderPackage java.lang.String \l0x0013: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.lang.Object A[D('query' java.lang.String)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:81)\l0x0017: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x0019: IPUT  (r0 I:java.lang.String), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mQuery java.lang.String \l0x001b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:82)\l0x001c: IPUT  (r0 I:java.util.List\<java.util.List\<byte[]\>\>), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mCertificates java.util.List \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('certificates' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0022  (LINE:83)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: INVOKE  (r0 I:boolean) type: STATIC call: androidx.core.util.Preconditions.checkArgument(boolean):void A[MD:(boolean):void (m)]\l0x0026: IPUT  (r5 I:int A[D('certificates' int)]), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mCertificatesArray int  (LINE:84)\l0x0028: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:androidx.core.provider.FontRequest)\l  (r2 I:java.lang.String A[D('providerAuthority' java.lang.String)])\l  (r3 I:java.lang.String A[D('providerPackage' java.lang.String)])\l  (r4 I:java.lang.String A[D('query' java.lang.String)])\l type: DIRECT call: androidx.core.provider.FontRequest.createIdentifier(java.lang.String, java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String, java.lang.String):java.lang.String (m)] (LINE:85)\l0x002c: IPUT  (r0 I:java.lang.String), (r1 I:androidx.core.provider.FontRequest) androidx.core.provider.FontRequest.mIdentifier java.lang.String \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:86)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.core.provider.FontRequest.\<init\>((r1 'this' I:androidx.core.provider.FontRequest A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[D('providerAuthority' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('providerPackage' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('query' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('certificates' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0022 \-\> B:14:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002e: r2 'providerAuthority' Ljava\/lang\/String;\l  \-1 \-0x002e: r3 'providerPackage' Ljava\/lang\/String;\l  \-1 \-0x002e: r4 'query' Ljava\/lang\/String;\l  \-1 \-0x002e: r5 'certificates' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

