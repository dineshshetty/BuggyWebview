digraph "CFG forandroidx.core.provider.FontsContractCompat.getFontSync(Landroid\/content\/Context;Landroidx\/core\/provider\/FontRequest;Landroidx\/core\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;ZII)Landroid\/graphics\/Typeface;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r6 I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter) =  androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter  (LINE:552)\l0x0002: INVOKE  \l  (r6 I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter)\l  (r10 I:androidx.core.content.res.ResourcesCompat$FontCallback A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback)])\l type: DIRECT call: androidx.core.graphics.TypefaceCompat.ResourcesCallbackAdapter.\<init\>(androidx.core.content.res.ResourcesCompat$FontCallback):void A[MD:(androidx.core.content.res.ResourcesCompat$FontCallback):void (m)]\l0x0005: INVOKE  (r7 I:android.os.Handler) = (r11 I:android.os.Handler A[D('handler' android.os.Handler)]) type: STATIC call: androidx.core.content.res.ResourcesCompat.FontCallback.getHandler(android.os.Handler):android.os.Handler A[MD:(android.os.Handler):android.os.Handler (m)] (LINE:553)\l0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:554)\l0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('request' androidx.core.provider.FontRequest)]) \l0x000b: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x000c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isBlockingFetch' boolean)]) \l0x000d: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('timeout' int)]) \l0x000e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('newHandler' android.os.Handler)]) \l0x000f: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r0 I:android.content.Context)\l  (r1 I:androidx.core.provider.FontRequest)\l  (r2 I:int)\l  (r3 I:boolean)\l  (r4 I:int)\l  (r5 I:android.os.Handler)\l  (r6 I:androidx.core.provider.FontsContractCompat$FontRequestCallback A[D('newCallback' androidx.core.provider.FontsContractCompat$FontRequestCallback)])\l type: STATIC call: androidx.core.provider.FontsContractCompat.requestFont(android.content.Context, androidx.core.provider.FontRequest, int, boolean, int, android.os.Handler, androidx.core.provider.FontsContractCompat$FontRequestCallback):android.graphics.Typeface A[MD:(android.content.Context, androidx.core.provider.FontRequest, int, boolean, int, android.os.Handler, androidx.core.provider.FontsContractCompat$FontRequestCallback):android.graphics.Typeface (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:android.graphics.Typeface) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface androidx.core.provider.FontsContractCompat.getFontSync((r8 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:androidx.core.content.res.ResourcesCompat$FontCallback A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('isBlockingFetch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('timeout' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0013: r6 'newCallback' Landroidx\/core\/provider\/FontsContractCompat$FontRequestCallback;\l  0x0009\-0x0013: r7 'newHandler' Landroid\/os\/Handler;\l  \-1 \-0x0013: r8 'context' Landroid\/content\/Context;\l  \-1 \-0x0013: r9 'request' Landroidx\/core\/provider\/FontRequest;\l  \-1 \-0x0013: r10 'fontCallback' Landroidx\/core\/content\/res\/ResourcesCompat$FontCallback;\l  \-1 \-0x0013: r11 'handler' Landroid\/os\/Handler;\l  \-1 \-0x0013: r12 'isBlockingFetch' Z\l  \-1 \-0x0013: r13 'timeout' I\l  \-1 \-0x0013: r14 'style' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

