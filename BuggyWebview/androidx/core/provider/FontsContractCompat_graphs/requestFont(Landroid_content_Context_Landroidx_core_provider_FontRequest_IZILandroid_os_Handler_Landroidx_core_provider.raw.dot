digraph "CFG forandroidx.core.provider.FontsContractCompat.requestFont(Landroid\/content\/Context;Landroidx\/core\/provider\/FontRequest;IZILandroid\/os\/Handler;Landroidx\/core\/provider\/FontsContractCompat$FontRequestCallback;)Landroid\/graphics\/Typeface;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.core.provider.CallbackWithHandler) =  androidx.core.provider.CallbackWithHandler  (LINE:163)\l0x0002: INVOKE  \l  (r0 I:androidx.core.provider.CallbackWithHandler)\l  (r8 I:androidx.core.provider.FontsContractCompat$FontRequestCallback A[D('callback' androidx.core.provider.FontsContractCompat$FontRequestCallback)])\l  (r7 I:android.os.Handler A[D('handler' android.os.Handler)])\l type: DIRECT call: androidx.core.provider.CallbackWithHandler.\<init\>(androidx.core.provider.FontsContractCompat$FontRequestCallback, android.os.Handler):void A[MD:(androidx.core.provider.FontsContractCompat$FontRequestCallback, android.os.Handler):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isBlockingFetch' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000c  (LINE:165)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|0x0007: INVOKE  (r1 I:android.graphics.Typeface) = \l  (r2 I:android.content.Context A[D('context' android.content.Context)])\l  (r3 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)])\l  (r0 I:androidx.core.provider.CallbackWithHandler A[D('callbackWrapper' androidx.core.provider.CallbackWithHandler)])\l  (r4 I:int A[D('style' int)])\l  (r6 I:int A[D('timeout' int)])\l type: STATIC call: androidx.core.provider.FontRequestWorker.requestFontSync(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.CallbackWithHandler, int, int):android.graphics.Typeface A[MD:(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.CallbackWithHandler, int, int):android.graphics.Typeface (m)] (LINE:166)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|0x000b: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:169)\l0x000d: INVOKE  (r1 I:android.graphics.Typeface) = \l  (r2 I:android.content.Context A[D('context' android.content.Context)])\l  (r3 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)])\l  (r4 I:int A[D('style' int)])\l  (r1 I:java.util.concurrent.Executor)\l  (r0 I:androidx.core.provider.CallbackWithHandler A[D('callbackWrapper' androidx.core.provider.CallbackWithHandler)])\l type: STATIC call: androidx.core.provider.FontRequestWorker.requestFontAsync(android.content.Context, androidx.core.provider.FontRequest, int, java.util.concurrent.Executor, androidx.core.provider.CallbackWithHandler):android.graphics.Typeface A[MD:(android.content.Context, androidx.core.provider.FontRequest, int, java.util.concurrent.Executor, androidx.core.provider.CallbackWithHandler):android.graphics.Typeface (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|0x0011: RETURN  (r1 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface androidx.core.provider.FontsContractCompat.requestFont((r2 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('isBlockingFetch' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('timeout' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.core.provider.FontsContractCompat$FontRequestCallback A[D('callback' androidx.core.provider.FontsContractCompat$FontRequestCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0011: r0 'callbackWrapper' Landroidx\/core\/provider\/CallbackWithHandler;\l  \-1 \-0x0011: r2 'context' Landroid\/content\/Context;\l  \-1 \-0x0011: r3 'request' Landroidx\/core\/provider\/FontRequest;\l  \-1 \-0x0011: r4 'style' I\l  \-1 \-0x0011: r5 'isBlockingFetch' Z\l  \-1 \-0x0011: r6 'timeout' I\l  \-1 \-0x0011: r7 'handler' Landroid\/os\/Handler;\l  \-1 \-0x0011: r8 'callback' Landroidx\/core\/provider\/FontsContractCompat$FontRequestCallback;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

