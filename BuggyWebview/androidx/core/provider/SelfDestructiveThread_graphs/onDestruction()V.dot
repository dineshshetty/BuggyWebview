digraph "CFG forandroidx.core.provider.SelfDestructiveThread.onDestruction()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Object r0 = r3.mLock\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x000c, B:8:0x000e, B:9:0x0018), top: B:14:0x0003 \}\lCatch: all \-\> 0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r3.mHandler.hasMessages(1) == false) goto L9\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|TryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x000c, B:8:0x000e, B:9:0x0018), top: B:14:0x0003 \}\lCatch: all \-\> 0x001a\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L1a\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|TryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x000c, B:8:0x000e, B:9:0x0018), top: B:14:0x0003 \}\lCatch: all \-\> 0x001a\l|r3.mThread.quit()     \/\/ Catch: java.lang.Throwable \-\> L1a\lr3.mThread = null     \/\/ Catch: java.lang.Throwable \-\> L1a\lr3.mHandler = null     \/\/ Catch: java.lang.Throwable \-\> L1a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|TryCatch #0 \{, blocks: (B:4:0x0003, B:6:0x000c, B:8:0x000e, B:9:0x0018), top: B:14:0x0003 \}\lCatch: all \-\> 0x001a\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L1a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|REMOVE\lExcHandler: all \-\> 0x001a\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x001a\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{void androidx.core.provider.SelfDestructiveThread.onDestruction((r3v0 'this' androidx.core.provider.SelfDestructiveThread A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0019 \-\> B:1:?, CROSS_EDGE: B:13:0x001c \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_14;
Node_14 -> Node_4;
Node_14 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
}

