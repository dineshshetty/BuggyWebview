digraph "CFG forandroidx.core.provider.SelfDestructiveThread.postAndReply(Ljava\/util\/concurrent\/Callable;Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback;)V" {
subgraph cluster_Region_125251136 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|android.os.Handler final android.os.Handler r0 = androidx.core.provider.CalleeHandler.create()\lpost(new androidx.core.provider.SelfDestructiveThread.RunnableC02232())\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.core.provider.SelfDestructiveThread.postAndReply((r2v0 'this' androidx.core.provider.SelfDestructiveThread A[IMMUTABLE_TYPE, THIS]), (r3v0 'callable' java.util.concurrent.Callable\<T\> A[D('callable' java.util.concurrent.Callable\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'reply' androidx.core.provider.SelfDestructiveThread$ReplyCallback\<T\> A[D('reply' androidx.core.provider.SelfDestructiveThread$ReplyCallback\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/concurrent\/Callable\<TT;\>;Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback\<TT;\>;)V\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_0 -> Node_2;
Node_3 -> Node_1;
}

