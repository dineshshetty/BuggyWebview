digraph "CFG forandroidx.core.provider.SelfDestructiveThread.postAndReply(Ljava\/util\/concurrent\/Callable;Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Handler) =  type: STATIC call: androidx.core.provider.CalleeHandler.create():android.os.Handler A[MD:():android.os.Handler (m)] (LINE:141)\l0x0004: NEW_INSTANCE  (r1 I:androidx.core.provider.SelfDestructiveThread$2) =  androidx.core.provider.SelfDestructiveThread$2  (LINE:142)\l0x0006: INVOKE  \l  (r1 I:androidx.core.provider.SelfDestructiveThread$2)\l  (r2 I:androidx.core.provider.SelfDestructiveThread)\l  (r3 I:java.util.concurrent.Callable A[D('callable' java.util.concurrent.Callable\<T\>)])\l  (r0 I:android.os.Handler A[D('calleeHandler' android.os.Handler)])\l  (r4 I:androidx.core.provider.SelfDestructiveThread$ReplyCallback A[D('reply' androidx.core.provider.SelfDestructiveThread$ReplyCallback\<T\>)])\l type: DIRECT call: androidx.core.provider.SelfDestructiveThread.2.\<init\>(androidx.core.provider.SelfDestructiveThread, java.util.concurrent.Callable, android.os.Handler, androidx.core.provider.SelfDestructiveThread$ReplyCallback):void A[MD:(androidx.core.provider.SelfDestructiveThread, java.util.concurrent.Callable, android.os.Handler, androidx.core.provider.SelfDestructiveThread$ReplyCallback):void (m)]\l0x0009: INVOKE  (r2 I:androidx.core.provider.SelfDestructiveThread), (r1 I:java.lang.Runnable) type: DIRECT call: androidx.core.provider.SelfDestructiveThread.post(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:160)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.core.provider.SelfDestructiveThread.postAndReply((r2 'this' I:androidx.core.provider.SelfDestructiveThread A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.concurrent.Callable\<T\> A[D('callable' java.util.concurrent.Callable\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.core.provider.SelfDestructiveThread$ReplyCallback\<T\> A[D('reply' androidx.core.provider.SelfDestructiveThread$ReplyCallback\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0004\-0x000c: r0 'calleeHandler' Landroid\/os\/Handler;\l  0x0000\-0x000c: r3 'callable' Ljava\/util\/concurrent\/Callable;, signature: Ljava\/util\/concurrent\/Callable\<TT;\>;\l  0x0000\-0x000c: r4 'reply' Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback;, signature: Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback\<TT;\>;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/concurrent\/Callable\<TT;\>;Landroidx\/core\/provider\/SelfDestructiveThread$ReplyCallback\<TT;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

