digraph "CFG forandroidx.core.provider.CalleeHandler.create()Landroid\/os\/Handler;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Looper) =  type: STATIC call: android.os.Looper.myLooper():android.os.Looper A[MD:():android.os.Looper (c)] (LINE:36)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0010 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:android.os.Handler) =  android.os.Handler  (LINE:37)\l0x0008: INVOKE  (r1 I:android.os.Looper) =  type: STATIC call: android.os.Looper.getMainLooper():android.os.Looper A[MD:():android.os.Looper (c)]\l0x000c: INVOKE  (r0 I:android.os.Handler), (r1 I:android.os.Looper) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r0 I:android.os.Handler A[D('handler' android.os.Handler)]) A[SYNTHETIC] (LINE:41)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:android.os.Handler A[D('handler' android.os.Handler)]) =  android.os.Handler  (LINE:39)\l0x0012: INVOKE  (r0 I:android.os.Handler) type: DIRECT call: android.os.Handler.\<init\>():void A[MD:():void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN  (r0 I:android.os.Handler A[D('handler' android.os.Handler)])  (LINE:41)\l}"];
MethodNode[shape=record,label="{public static android.os.Handler androidx.core.provider.CalleeHandler.create()  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0010 \-\> B:14:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0010: r0 'handler' Landroid\/os\/Handler;\l  0x0015\-0x0015: r0 'handler' Landroid\/os\/Handler;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

