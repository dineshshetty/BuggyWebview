digraph "CFG forandroidx.core.provider.FontRequestWorker.requestFontAsync(Landroid\/content\/Context;Landroidx\/core\/provider\/FontRequest;ILjava\/util\/concurrent\/Executor;Landroidx\/core\/provider\/CallbackWithHandler;)Landroid\/graphics\/Typeface;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r9 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)])\l  (r10 I:int A[D('style' int)])\l type: STATIC call: androidx.core.provider.FontRequestWorker.createCacheId(androidx.core.provider.FontRequest, int):java.lang.String A[MD:(androidx.core.provider.FontRequest, int):java.lang.String (m)] (LINE:164)\l0x0004: SGET  (r1 I:androidx.collection.LruCache\<java.lang.String, android.graphics.Typeface\>) =  androidx.core.provider.FontRequestWorker.sTypefaceCache androidx.collection.LruCache  (LINE:165)\l0x0006: INVOKE  (r1 I:java.lang.Object) = (r1 I:androidx.collection.LruCache), (r0 I:java.lang.Object A[D('id' java.lang.String)]) type: VIRTUAL call: androidx.collection.LruCache.get(java.lang.Object):java.lang.Object A[MD:(K):V (m)]\l0x000a: CHECK_CAST (r1 I:android.graphics.Typeface) = (android.graphics.Typeface) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cached' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0017  (LINE:166)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:androidx.core.provider.FontRequestWorker$TypefaceResult) =  androidx.core.provider.FontRequestWorker$TypefaceResult  (LINE:167)\l0x0010: INVOKE  \l  (r2 I:androidx.core.provider.FontRequestWorker$TypefaceResult)\l  (r1 I:android.graphics.Typeface A[D('cached' android.graphics.Typeface)])\l type: DIRECT call: androidx.core.provider.FontRequestWorker.TypefaceResult.\<init\>(android.graphics.Typeface):void A[MD:(android.graphics.Typeface):void (m)]\l0x0013: INVOKE  \l  (r12 I:androidx.core.provider.CallbackWithHandler A[D('callback' androidx.core.provider.CallbackWithHandler)])\l  (r2 I:androidx.core.provider.FontRequestWorker$TypefaceResult)\l type: VIRTUAL call: androidx.core.provider.CallbackWithHandler.onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult):void A[MD:(androidx.core.provider.FontRequestWorker$TypefaceResult):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|RETURN\l|0x0016: RETURN  (r1 I:android.graphics.Typeface A[D('cached' android.graphics.Typeface)])  (LINE:168)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: NEW_INSTANCE  (r2 I:androidx.core.provider.FontRequestWorker$2) =  androidx.core.provider.FontRequestWorker$2  (LINE:171)\l0x0019: INVOKE  \l  (r2 I:androidx.core.provider.FontRequestWorker$2)\l  (r12 I:androidx.core.provider.CallbackWithHandler A[D('callback' androidx.core.provider.CallbackWithHandler)])\l type: DIRECT call: androidx.core.provider.FontRequestWorker.2.\<init\>(androidx.core.provider.CallbackWithHandler):void A[MD:(androidx.core.provider.CallbackWithHandler):void (m)]\l0x001c: SGET  (r3 I:java.lang.Object) =  androidx.core.provider.FontRequestWorker.LOCK java.lang.Object  (LINE:181)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001e|0x001e: MONITOR_ENTER  (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x001f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\lCatch: all \-\> 0x0051\l|0x001f: SGET  (r4 I:androidx.collection.SimpleArrayMap\<java.lang.String, java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>\>) =  androidx.core.provider.FontRequestWorker.PENDING_REPLIES androidx.collection.SimpleArrayMap A[Catch: all \-\> 0x0051, TRY_ENTER] (LINE:182)\l0x0021: INVOKE  (r5 I:java.lang.Object) = (r4 I:androidx.collection.SimpleArrayMap), (r0 I:java.lang.Object A[D('id' java.lang.String)]) type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0051, MD:(java.lang.Object):V (m)]\l0x0025: CHECK_CAST (r5 I:java.util.ArrayList) = (java.util.ArrayList) (r5 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0051]\l0x0027: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:183)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|0x0028: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pendingReplies' java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002f \l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|TryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\lCatch: all \-\> 0x0051\l|0x002a: INVOKE  \l  (r5 I:java.util.ArrayList A[D('pendingReplies' java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>)])\l  (r2 I:java.lang.Object A[D('reply' androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[Catch: all \-\> 0x0051, MD:(E):boolean (c)] (LINE:186)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|TryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\lCatch: all \-\> 0x0051\l|0x002d: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0051] (LINE:187)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|RETURN\l|0x002e: RETURN  (r6 I:android.graphics.Typeface) \l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|TryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\lCatch: all \-\> 0x0051\l|0x002f: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList A[Catch: all \-\> 0x0051] (LINE:189)\l0x0031: INVOKE  (r7 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[Catch: all \-\> 0x0051, MD:():void (c)]\l0x0034: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('pendingReplies' java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  \l  (r5 I:java.util.ArrayList A[D('pendingReplies' java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>)])\l  (r2 I:java.lang.Object A[D('reply' androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[Catch: all \-\> 0x0051, MD:(E):boolean (c)] (LINE:190)\l0x0038: INVOKE  \l  (r4 I:androidx.collection.SimpleArrayMap)\l  (r0 I:java.lang.Object A[D('id' java.lang.String)])\l  (r5 I:java.lang.Object A[D('pendingReplies' java.util.ArrayList\<androidx.core.util.Consumer\<androidx.core.provider.FontRequestWorker$TypefaceResult\>\>)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0051, MD:(K, V):V (m)] (LINE:191)\l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\lCatch: all \-\> 0x0051\l|0x003c: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0051, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x003d|0x003d: NEW_INSTANCE  (r3 I:androidx.core.provider.FontRequestWorker$3) =  androidx.core.provider.FontRequestWorker$3  (LINE:194)\l0x003f: INVOKE  \l  (r3 I:androidx.core.provider.FontRequestWorker$3)\l  (r0 I:java.lang.String A[D('id' java.lang.String)])\l  (r8 I:android.content.Context A[D('context' android.content.Context)])\l  (r9 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)])\l  (r10 I:int A[D('style' int)])\l type: DIRECT call: androidx.core.provider.FontRequestWorker.3.\<init\>(java.lang.String, android.content.Context, androidx.core.provider.FontRequest, int):void A[MD:(java.lang.String, android.content.Context, androidx.core.provider.FontRequest, int):void (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0042|0x0042: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('executor' java.util.concurrent.Executor)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0047  (LINE:204)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0044|0x0044: SGET  (r4 I:java.util.concurrent.ExecutorService) =  androidx.core.provider.FontRequestWorker.DEFAULT_EXECUTOR_SERVICE java.util.concurrent.ExecutorService \l}"];
Node_44 [shape=record,label="{44\:\ 0x0048|0x0048: NEW_INSTANCE  (r5 I:androidx.core.provider.FontRequestWorker$4) =  androidx.core.provider.FontRequestWorker$4  (LINE:206)\l0x004a: INVOKE  (r5 I:androidx.core.provider.FontRequestWorker$4), (r0 I:java.lang.String A[D('id' java.lang.String)]) type: DIRECT call: androidx.core.provider.FontRequestWorker.4.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l0x004d: INVOKE  \l  (r4 I:java.util.concurrent.Executor A[D('finalExecutor' java.util.concurrent.Executor)])\l  (r3 I:java.util.concurrent.Callable A[D('fetcher' java.util.concurrent.Callable\<androidx.core.provider.FontRequestWorker$TypefaceResult\>)])\l  (r5 I:androidx.core.util.Consumer)\l type: STATIC call: androidx.core.provider.RequestExecutor.execute(java.util.concurrent.Executor, java.util.concurrent.Callable, androidx.core.util.Consumer):void A[MD:\<T\>:(java.util.concurrent.Executor, java.util.concurrent.Callable\<T\>, androidx.core.util.Consumer\<T\>):void (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0050|RETURN\l|0x0050: RETURN  (r6 I:android.graphics.Typeface)  (LINE:223)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0047|0x0047: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('executor' java.util.concurrent.Executor)]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0051|ExcHandler: all \-\> 0x0051\l|0x0051: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0051] (LINE:192)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0052|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x0051\l}"];
Node_48 [shape=record,label="{48\:\ 0x0053|0x0053: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface androidx.core.provider.FontRequestWorker.requestFontAsync((r8 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:androidx.core.provider.CallbackWithHandler A[D('callback' androidx.core.provider.CallbackWithHandler), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x002e \-\> B:26:?, CROSS_EDGE: B:45:0x0050 \-\> B:26:?, CROSS_EDGE: B:43:0x0047 \-\> B:44:0x0048, CROSS_EDGE: B:48:0x0053 \-\> B:26:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x003c: r5 'pendingReplies' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/core\/util\/Consumer\<Landroidx\/core\/provider\/FontRequestWorker$TypefaceResult;\>;\>;\l  0x0042\-0x0051: r3 'fetcher' Ljava\/util\/concurrent\/Callable;, signature: Ljava\/util\/concurrent\/Callable\<Landroidx\/core\/provider\/FontRequestWorker$TypefaceResult;\>;\l  0x0048\-0x0051: r4 'finalExecutor' Ljava\/util\/concurrent\/Executor;\l  0x0004\-0x0053: r0 'id' Ljava\/lang\/String;\l  0x000c\-0x0053: r1 'cached' Landroid\/graphics\/Typeface;\l  0x001c\-0x0053: r2 'reply' Landroidx\/core\/util\/Consumer;, signature: Landroidx\/core\/util\/Consumer\<Landroidx\/core\/provider\/FontRequestWorker$TypefaceResult;\>;\l  \-1 \-0x0053: r8 'context' Landroid\/content\/Context;\l  \-1 \-0x0053: r9 'request' Landroidx\/core\/provider\/FontRequest;\l  \-1 \-0x0053: r10 'style' I\l  \-1 \-0x0053: r11 'executor' Ljava\/util\/concurrent\/Executor;\l  \-1 \-0x0053: r12 'callback' Landroidx\/core\/provider\/CallbackWithHandler;\lTryCatch #0 \{all \-\> 0x0051, blocks: (B:33:0x001f, B:35:0x002a, B:36:0x002d, B:38:0x002f, B:39:0x003c), top: B:49:0x001f \}\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_32;
Node_32 -> Node_49;
Node_49 -> Node_33;
Node_49 -> Node_46;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_26;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_26;
Node_43 -> Node_44;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_26;
}

