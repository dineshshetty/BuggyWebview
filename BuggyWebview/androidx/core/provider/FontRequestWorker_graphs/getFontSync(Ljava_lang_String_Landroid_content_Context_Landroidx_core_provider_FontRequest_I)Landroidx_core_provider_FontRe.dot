digraph "CFG forandroidx.core.provider.FontRequestWorker.getFontSync(Ljava\/lang\/String;Landroid\/content\/Context;Landroidx\/core\/provider\/FontRequest;I)Landroidx\/core\/provider\/FontRequestWorker$TypefaceResult;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|androidx.collection.LruCache\<java.lang.String, android.graphics.Typeface\> r0 = androidx.core.provider.FontRequestWorker.sTypefaceCache\landroid.graphics.Typeface r1 = r0.get(r6)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|if (r1 == null) goto L6\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a}"];
Node_28 [shape=record,label="{28\:\ 0x000f|RETURN\l|return new androidx.core.provider.FontRequestWorker.TypefaceResult(r1)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010}"];
Node_44 [shape=record,label="{44\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NameNotFoundException \-\> 0x003d, blocks: (B:30:0x0011), top: B:44:0x0011 \}\lCatch: NameNotFoundException \-\> 0x003d\l|androidx.core.provider.FontsContractCompat$FontFamilyResult r3 = androidx.core.provider.FontProvider.getFontFamilyResult(r7, r8, null)     \/\/ Catch: android.content.pm.PackageManager.NameNotFoundException \-\> L3d\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|int r4 = getFontFamilyResultStatus(r3)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|if (r4 == 0) goto L13\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c}"];
Node_34 [shape=record,label="{34\:\ 0x0021|RETURN\l|return new androidx.core.provider.FontRequestWorker.TypefaceResult(r4)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|android.graphics.Typeface r2 = androidx.core.graphics.TypefaceCompat.createFromFontInfo(r7, null, r3.getFonts(), r9)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|if (r2 == null) goto L17\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|r0.put(r6, r2)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|RETURN\l|return new androidx.core.provider.FontRequestWorker.TypefaceResult(r2)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0036}"];
Node_40 [shape=record,label="{40\:\ 0x003c|RETURN\l|return new androidx.core.provider.FontRequestWorker.TypefaceResult(\-3)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d|ExcHandler: NameNotFoundException \-\> 0x003d\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e}"];
Node_43 [shape=record,label="{43\:\ 0x0044|RETURN\l|return new androidx.core.provider.FontRequestWorker.TypefaceResult(\-1)\l}"];
MethodNode[shape=record,label="{static androidx.core.provider.FontRequestWorker$TypefaceResult androidx.core.provider.FontRequestWorker.getFontSync((r6v0 'cacheId' java.lang.String A[D('cacheId' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'request' androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0021 \-\> B:24:?, CROSS_EDGE: B:38:0x0035 \-\> B:24:?, CROSS_EDGE: B:40:0x003c \-\> B:24:?, CROSS_EDGE: B:43:0x0044 \-\> B:24:?, CROSS_EDGE: B:44:0x0011 \-\> B:41:0x003d\lINLINE_NOT_NEEDED\lTryCatch #0 \{NameNotFoundException \-\> 0x003d, blocks: (B:30:0x0011), top: B:44:0x0011 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_44;
Node_44 -> Node_30;
Node_44 -> Node_41;
Node_30 -> Node_31;
Node_30 -> Node_45;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_24;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_24;
Node_45 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
}

