digraph "CFG forandroidx.core.provider.FontRequestWorker.getFontFamilyResultStatus(Landroidx\/core\/provider\/FontsContractCompat$FontFamilyResult;)I" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r7 I:androidx.core.provider.FontsContractCompat$FontFamilyResult A[D('fontFamilyResult' androidx.core.provider.FontsContractCompat$FontFamilyResult)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontFamilyResult.getStatusCode():int A[MD:():int (m)] (LINE:269)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-3 ??[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0011 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = \l  (r7 I:androidx.core.provider.FontsContractCompat$FontFamilyResult A[D('fontFamilyResult' androidx.core.provider.FontsContractCompat$FontFamilyResult)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontFamilyResult.getStatusCode():int A[MD:():int (m)] (LINE:270)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000b|0x000b: SWITCH  (r0 I:??)\l case 1: goto B:37:0x000f\l default: goto B:36:0x000e \l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:int)  (LINE:274)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x000f|RETURN\l|0x000f: CONST  (r0 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char])  (LINE:272)\l0x0010: RETURN  (r0 I:int) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|0x0011: INVOKE  (r0 I:androidx.core.provider.FontsContractCompat$FontInfo[]) = \l  (r7 I:androidx.core.provider.FontsContractCompat$FontFamilyResult A[D('fontFamilyResult' androidx.core.provider.FontsContractCompat$FontFamilyResult)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontFamilyResult.getFonts():androidx.core.provider.FontsContractCompat$FontInfo[] A[MD:():androidx.core.provider.FontsContractCompat$FontInfo[] (m)] (LINE:277)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0031  (LINE:278)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0017|0x0017: ARRAY_LENGTH  (r2 I:int) = (r0 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001b \l}"];
Node_44 [shape=record,label="{44\:\ 0x001b|0x001b: ARRAY_LENGTH  (r2 I:int) = (r0 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])  (LINE:282)\l0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x001e|LOOP_START\lLOOP:0: B:45:0x001e\-\>B:52:0x002d\l|0x001e: IF  (r4 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:57:0x0030 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0020|0x0020: AGET  (r5 I:??[OBJECT, ARRAY]) = \l  (r0 I:??[OBJECT, ARRAY][] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])\l  (r4 I:??[int, short, byte, char])\l \l0x0022: INVOKE  (r6 I:int) = \l  (r5 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getResultCode():int A[MD:():int (m)] (LINE:285)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|0x0026: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resultCode' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x002d  (LINE:286)\l}"];
Node_52 [shape=record,label="{52\:\ 0x002d|LOOP_END\lLOOP:0: B:45:0x001e\-\>B:52:0x002d\l|0x002d: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:282)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0028|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0028|0x0028: IF  (r6 I:??[int, byte, short, char] A[D('resultCode' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:50:0x002b  (LINE:289)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002b|0x002b: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCode' int)]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: RETURN  (r1 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0030|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0030|RETURN\l|0x0030: RETURN  (r3 I:int)  (LINE:293)\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|0x0031: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) A[SYNTHETIC] (LINE:279)\l0x0032: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0031|RETURN\lORIG_RETURN\l|0x0031: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:279)\l0x0032: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static int androidx.core.provider.FontRequestWorker.getFontFamilyResultStatus((r7 I:androidx.core.provider.FontsContractCompat$FontFamilyResult A[D('fontFamilyResult' androidx.core.provider.FontsContractCompat$FontFamilyResult), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0010 \-\> B:31:?, CROSS_EDGE: B:51:0x002c \-\> B:31:?, CROSS_EDGE: B:48:0x0028 \-\> B:51:0x002c, BACK_EDGE: B:52:0x002d \-\> B:45:0x001e, CROSS_EDGE: B:53:0x0030 \-\> B:31:?, CROSS_EDGE: B:55:0x0032 \-\> B:31:?, CROSS_EDGE: B:40:0x0015 \-\> B:54:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x002d: r5 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0026\-0x002d: r6 'resultCode' I\l  0x0015\-0x0039: r0 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x0039: r7 'fontFamilyResult' Landroidx\/core\/provider\/FontsContractCompat$FontFamilyResult;\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_36 -> Node_31;
Node_37 -> Node_31;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_54;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_59[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_57;
Node_46 -> Node_47;
Node_47 -> Node_52;
Node_47 -> Node_56[style=dashed];
Node_52 -> Node_45;
Node_56 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_58[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_31;
Node_58 -> Node_31;
Node_57 -> Node_53;
Node_53 -> Node_31;
Node_59 -> Node_31;
Node_54 -> Node_31;
}

