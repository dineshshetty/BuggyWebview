digraph "CFG forandroidx.core.provider.FontProvider.query(Landroid\/content\/Context;Landroidx\/core\/provider\/FontRequest;Ljava\/lang\/String;Landroid\/os\/CancellationSignal;)[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;" {
Node_48 [shape=record,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0000|0x0000: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('authority' java.lang.String)])  (LINE:120)\l0x0002: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0004: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0007: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0008: NEW_INSTANCE  (r0 I:android.net.Uri$Builder) =  android.net.Uri$Builder  (LINE:121)\l0x000a: INVOKE  (r0 I:android.net.Uri$Builder) type: DIRECT call: android.net.Uri.Builder.\<init\>():void A[MD:():void (c)]\l0x000d: CONST_STR  (r3 I:java.lang.String) =  \"content\" \l0x000f: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r3 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)]\l0x0013: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r1 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)] (LINE:122)\l0x0017: INVOKE  (r13 I:android.net.Uri) = (r0 I:android.net.Uri$Builder) type: VIRTUAL call: android.net.Uri.Builder.build():android.net.Uri A[MD:():android.net.Uri (c)] (LINE:123)\l0x001b: NEW_INSTANCE  (r0 I:android.net.Uri$Builder) =  android.net.Uri$Builder  (LINE:124)\l0x001d: INVOKE  (r0 I:android.net.Uri$Builder) type: DIRECT call: android.net.Uri.Builder.\<init\>():void A[MD:():void (c)]\l0x0020: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r3 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)]\l0x0024: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r1 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)] (LINE:125)\l0x0028: CONST_STR  (r3 I:java.lang.String) =  \"file\"  (LINE:126)\l0x002a: INVOKE  (r0 I:android.net.Uri$Builder) = (r0 I:android.net.Uri$Builder), (r3 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.appendPath(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)]\l0x002e: INVOKE  (r3 I:android.net.Uri) = (r0 I:android.net.Uri$Builder) type: VIRTUAL call: android.net.Uri.Builder.build():android.net.Uri A[MD:():android.net.Uri (c)] (LINE:127)\l0x0032: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:128)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0033|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_51 [shape=record,label="{51\:\ 0x0033|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x0033: CONST_STR  (r4 I:java.lang.String) =  \"_id\" A[TRY_ENTER] (LINE:130)\l0x0035: CONST_STR  (r5 I:java.lang.String) =  \"file_id\" \l0x0037: CONST_STR  (r6 I:java.lang.String) =  \"font_ttc_index\" \l0x0039: CONST_STR  (r7 I:java.lang.String) =  \"font_variation_settings\" \l0x003b: CONST_STR  (r8 I:java.lang.String) =  \"font_weight\" \l0x003d: CONST_STR  (r9 I:java.lang.String) =  \"font_italic\" \l0x003f: CONST_STR  (r10 I:java.lang.String) =  \"result_code\" \l0x0041: FILLED_NEW_ARRAY  (r6 I:java.lang.String[]) = \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r10 I:java.lang.String)\l elemType: java.lang.String A[Catch: all \-\> 0x0129]\l0x0045: INVOKE  (r4 I:android.content.ContentResolver) = (r23 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getContentResolver():android.content.ContentResolver A[Catch: all \-\> 0x0129, MD:():android.content.ContentResolver (c)] (LINE:137)\l0x0049: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch: all \-\> 0x0129] (LINE:138)\l0x004b: CONST  (r5 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x004d: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x004e: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x004f|0x004f: IF  (r0 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:54:0x0066 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0051|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x0051: CONST_STR  (r7 I:java.lang.String) =  \"query = ?\"  (LINE:139)\l0x0053: NEW_ARRAY  (r8 I:java.lang.String[]) = (r15 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch: all \-\> 0x0129]\l0x0055: INVOKE  (r0 I:java.lang.String) = (r24 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)]) type: VIRTUAL call: androidx.core.provider.FontRequest.getQuery():java.lang.String A[Catch: all \-\> 0x0129, MD:():java.lang.String (m)] (LINE:140)\l0x0059: APUT  (r8 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0129]\l0x005b: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('uri' android.net.Uri)])  (LINE:139)\l0x005d: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r26 I:??[OBJECT, ARRAY] A[D('cancellationSignal' android.os.CancellationSignal)]) \l0x005f: INVOKE  (r0 I:android.database.Cursor) = \l  (r4 I:android.content.ContentResolver A[D('resolver' android.content.ContentResolver)])\l  (r5 I:android.net.Uri)\l  (r6 I:java.lang.String[] A[D('projection' java.lang.String[])])\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String[])\l  (r9 I:java.lang.String)\l  (r10 I:java.lang.Object)\l type: STATIC call: androidx.core.provider.FontProvider.Api16Impl.query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.Object):android.database.Cursor A[Catch: all \-\> 0x0129, MD:(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.Object):android.database.Cursor (m)]\l0x0063: MOVE  (r14 I:??[OBJECT, ARRAY] A[D('cursor' android.database.Cursor)]) = (r0 I:??[OBJECT, ARRAY]) \l0x0064: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0065: GOTO  \-\> 0x007b \l}"];
Node_55 [shape=record,label="{55\:\ 0x007b|0x007b: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cursor' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0118  (LINE:147)\l}"];
Node_56 [shape=record,label="{56\:\ 0x007d|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x007d: INVOKE  (r0 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.getCount():int A[Catch: all \-\> 0x0129, MD:():int (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0081|0x0081: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:84:0x0118 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0083|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x0083: CONST_STR  (r0 I:java.lang.String) =  \"result_code\"  (LINE:148)\l0x0085: INVOKE  (r0 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l0x0089: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList A[Catch: all \-\> 0x0129] (LINE:150)\l0x008b: INVOKE  (r7 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[Catch: all \-\> 0x0129, MD:():void (c)]\l0x008e: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('result' java.util.ArrayList\<androidx.core.provider.FontsContractCompat$FontInfo\>)]) = (r7 I:??[OBJECT, ARRAY]) \l0x008f: CONST_STR  (r7 I:java.lang.String) =  \"_id\"  (LINE:151)\l0x0091: INVOKE  (r7 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r7 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l0x0095: CONST_STR  (r8 I:java.lang.String) =  \"file_id\"  (LINE:152)\l0x0097: INVOKE  (r8 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r8 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l0x009b: CONST_STR  (r9 I:java.lang.String) =  \"font_ttc_index\"  (LINE:154)\l0x009d: INVOKE  (r9 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r9 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l0x00a1: CONST_STR  (r10 I:java.lang.String) =  \"font_weight\"  (LINE:156)\l0x00a3: INVOKE  (r10 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r10 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l0x00a7: CONST_STR  (r11 I:java.lang.String) =  \"font_italic\"  (LINE:158)\l0x00a9: INVOKE  (r11 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r11 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: all \-\> 0x0129, MD:(java.lang.String):int (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x00ad|LOOP_START\lTryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lLOOP:0: B:59:0x00ad\-\>B:82:0x010a\lCatch: all \-\> 0x0129\l|0x00ad: INVOKE  (r12 I:boolean) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.moveToNext():boolean A[Catch: all \-\> 0x0129, MD:():boolean (c)] (LINE:160)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00b1|0x00b1: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0113 \l}"];
Node_61 [shape=record,label="{61\:\ 0x00b3|0x00b3: CONST  (r12 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:161)\l}"];
Node_62 [shape=record,label="{62\:\ 0x00b4|0x00b4: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resultCodeColumnIndex' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x00bb \l}"];
Node_63 [shape=record,label="{63\:\ 0x00b6|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00b6: INVOKE  (r16 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r0 I:int A[D('resultCodeColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getInt(int):int A[Catch: all \-\> 0x0129, MD:(int):int (c)] (LINE:162)\l0x00ba: GOTO  \-\> 0x00bd \l}"];
Node_65 [shape=record,label="{65\:\ 0x00bd|0x00bd: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x00bf|0x00bf: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ttcIndexColumnIndex' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00c6  (LINE:164)\l}"];
Node_67 [shape=record,label="{67\:\ 0x00c1|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00c1: INVOKE  (r16 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r9 I:int A[D('ttcIndexColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getInt(int):int A[Catch: all \-\> 0x0129, MD:(int):int (c)] (LINE:165)\l0x00c5: GOTO  \-\> 0x00c8 \l}"];
Node_69 [shape=record,label="{69\:\ 0x00c8|0x00c8: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x00ca|0x00ca: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fileIdColumnIndex' int)]) != (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x00dd  (LINE:167)\l}"];
Node_71 [shape=record,label="{71\:\ 0x00cc|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00cc: INVOKE  (r19 I:long) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r7 I:int A[D('idColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getLong(int):long A[Catch: all \-\> 0x0129, MD:(int):long (c)] (LINE:168)\l0x00d0: MOVE  (r21 I:??[long, double]) = (r19 I:??[long, double]) \l0x00d2: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])])  (LINE:169)\l0x00d4: MOVE  (r5 I:??[long, double]) = (r21 I:??[long, double] A[D('id' long)]) \l0x00d6: INVOKE  (r20 I:android.net.Uri) = (r13 I:android.net.Uri A[D('uri' android.net.Uri)]), (r5 I:long A[D('id' long)]) type: STATIC call: android.content.ContentUris.withAppendedId(android.net.Uri, long):android.net.Uri A[Catch: all \-\> 0x0129, MD:(android.net.Uri, long):android.net.Uri (c)]\l0x00da: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('id' long)]) = (r20 I:??[OBJECT, ARRAY]) \l0x00dc: GOTO  \-\> 0x00e9  (LINE:170)\l}"];
Node_73 [shape=record,label="{73\:\ 0x00e9|0x00e9: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('weightColumnIndex' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x00f0  (LINE:175)\l}"];
Node_74 [shape=record,label="{74\:\ 0x00eb|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00eb: INVOKE  (r6 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r10 I:int A[D('weightColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getInt(int):int A[Catch: all \-\> 0x0129, MD:(int):int (c)]\l0x00ef: GOTO  \-\> 0x00f2 \l}"];
Node_76 [shape=record,label="{76\:\ 0x00f2|0x00f2: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('italicColumnIndex' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x00fc  (LINE:176)\l}"];
Node_77 [shape=record,label="{77\:\ 0x00f4|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00f4: INVOKE  (r12 I:int) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r11 I:int A[D('italicColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getInt(int):int A[Catch: all \-\> 0x0129, MD:(int):int (c)]\l}"];
Node_78 [shape=record,label="{78\:\ 0x00f8|0x00f8: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x00fc \l}"];
Node_79 [shape=record,label="{79\:\ 0x00fa|0x00fa: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00fb: GOTO  \-\> 0x00fd \l}"];
Node_81 [shape=record,label="{81\:\ 0x00fd|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00fd: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCode' int)])  (LINE:178)\l0x00ff: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCode' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCodeColumnIndex' int)]) \l0x0101: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCodeColumnIndex' int)]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ttcIndex' int)]) \l0x0103: INVOKE  (r1 I:androidx.core.provider.FontsContractCompat$FontInfo) = \l  (r5 I:android.net.Uri A[D('fileUri' android.net.Uri)])\l  (r0 I:int A[D('ttcIndex' int)])\l  (r6 I:int A[D('weight' int)])\l  (r12 I:boolean A[D('italic' boolean)])\l  (r15 I:int A[D('resultCode' int)])\l type: STATIC call: androidx.core.provider.FontsContractCompat.FontInfo.create(android.net.Uri, int, int, boolean, int):androidx.core.provider.FontsContractCompat$FontInfo A[Catch: all \-\> 0x0129, MD:(android.net.Uri, int, int, boolean, int):androidx.core.provider.FontsContractCompat$FontInfo (m)]\l0x0107: INVOKE  \l  (r2 I:java.util.ArrayList A[D('result' java.util.ArrayList\<androidx.core.provider.FontsContractCompat$FontInfo\>)])\l  (r1 I:java.lang.Object)\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[Catch: all \-\> 0x0129, MD:(E):boolean (c), TRY_LEAVE]\l}"];
Node_82 [shape=record,label="{82\:\ 0x010a|LOOP_END\lLOOP:0: B:59:0x00ad\-\>B:82:0x010a\l|0x010a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r25 I:??[OBJECT, ARRAY] A[D('authority' java.lang.String)])  (LINE:179)\l0x010c: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('weight' int)]) = (r16 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) \l0x010e: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ttcIndex' int)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCodeColumnIndex' int)]) \l0x0110: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fileUri' android.net.Uri)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0111: CONST  (r15 I:??[boolean, int, float, short, byte, char] A[D('resultCode' int)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x00fc|0x00fc: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_75 [shape=record,label="{75\:\ 0x00f0|0x00f0: CONST  (r6 I:??[int, float, short, byte, char]) = (400(0x190, float:5.6E\-43) ??[int, float, short, byte, char]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x00dd|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x00dd: MOVE  (r16 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) = (r6 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])])  (LINE:171)\l0x00df: INVOKE  (r5 I:long) = (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]), (r8 I:int A[D('fileIdColumnIndex' int)]) type: INTERFACE call: android.database.Cursor.getLong(int):long A[Catch: all \-\> 0x0129, MD:(int):long (c)]\l0x00e3: INVOKE  (r20 I:android.net.Uri) = (r3 I:android.net.Uri A[D('fileBaseUri' android.net.Uri)]), (r5 I:long A[D('id' long)]) type: STATIC call: android.content.ContentUris.withAppendedId(android.net.Uri, long):android.net.Uri A[Catch: all \-\> 0x0129, MD:(android.net.Uri, long):android.net.Uri (c)] (LINE:172)\l0x00e7: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('id' long)]) = (r20 I:??[OBJECT, ARRAY]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x00c6|0x00c6: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x00bb|0x00bb: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:163)\l}"];
Node_95 [shape=record,label="{95\:\ 0x0113|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0113|0x0113: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCodeColumnIndex' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCodeColumnIndex' int)])  (LINE:160)\l0x0115: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x011a|0x011a: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cursor' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x011f  (LINE:182)\l}"];
Node_86 [shape=record,label="{86\:\ 0x011c|0x011c: INVOKE  (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.close():void A[MD:():void (c)] (LINE:183)\l}"];
Node_87 [shape=record,label="{87\:\ 0x011f|0x011f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:186)\l0x0120: NEW_ARRAY  (r0 I:androidx.core.provider.FontsContractCompat$FontInfo[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: androidx.core.provider.FontsContractCompat$FontInfo[] \l0x0122: INVOKE  (r0 I:java.lang.Object[]) = \l  (r2 I:java.util.ArrayList A[D('result' java.util.ArrayList\<androidx.core.provider.FontsContractCompat$FontInfo\>)])\l  (r0 I:java.lang.Object[])\l type: VIRTUAL call: java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x0126: CHECK_CAST (r0 I:androidx.core.provider.FontsContractCompat$FontInfo[]) = (androidx.core.provider.FontsContractCompat$FontInfo[]) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x0128|RETURN\l|0x0128: RETURN  (r0 I:androidx.core.provider.FontsContractCompat$FontInfo[]) \l}"];
Node_49 [shape=record,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_94 [shape=record,label="{94\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_84 [shape=record,label="{84\:\ 0x0118|0x0118: MOVE  (r16 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) = (r6 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])])  (LINE:147)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0066|TryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\lCatch: all \-\> 0x0129\l|0x0066: CONST_STR  (r10 I:java.lang.String) =  \"query = ?\"  (LINE:143)\l0x0068: NEW_ARRAY  (r11 I:java.lang.String[]) = (r15 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch: all \-\> 0x0129]\l0x006a: INVOKE  (r0 I:java.lang.String) = (r24 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest)]) type: VIRTUAL call: androidx.core.provider.FontRequest.getQuery():java.lang.String A[Catch: all \-\> 0x0129, MD:():java.lang.String (m)] (LINE:144)\l0x006e: APUT  (r11 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0129]\l0x0070: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0071: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('resolver' android.content.ContentResolver)])  (LINE:143)\l0x0072: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('uri' android.net.Uri)]) \l0x0073: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) \l0x0074: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0075: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x0076: INVOKE  (r0 I:android.database.Cursor) = \l  (r7 I:android.content.ContentResolver)\l  (r8 I:android.net.Uri)\l  (r9 I:java.lang.String[])\l  (r10 I:java.lang.String)\l  (r11 I:java.lang.String[])\l  (r12 I:java.lang.String)\l type: VIRTUAL call: android.content.ContentResolver.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor A[Catch: all \-\> 0x0129, MD:(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor (c)]\l0x007a: MOVE  (r14 I:??[OBJECT, ARRAY] A[D('cursor' android.database.Cursor)]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_89 [shape=record,label="{89\:\ 0x0129|ExcHandler: all \-\> 0x0129\l|0x0129: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0129] (LINE:182)\l}"];
Node_90 [shape=record,label="{90\:\ 0x012a|0x012a: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cursor' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x012f \l}"];
Node_91 [shape=record,label="{91\:\ 0x012c|0x012c: INVOKE  (r14 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.close():void A[MD:():void (c)] (LINE:183)\l}"];
Node_92 [shape=record,label="{92\:\ 0x012f|0x012f: THROW  (r0 I:java.lang.Throwable)  (LINE:185)\l}"];
MethodNode[shape=record,label="{static androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontProvider.query((r23 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:androidx.core.provider.FontRequest A[D('request' androidx.core.provider.FontRequest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:java.lang.String A[D('authority' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:82:0x010a \-\> B:59:0x00ad, CROSS_EDGE: B:80:0x00fc \-\> B:81:0x00fd, CROSS_EDGE: B:76:0x00f2 \-\> B:80:0x00fc, CROSS_EDGE: B:75:0x00f0 \-\> B:76:0x00f2, CROSS_EDGE: B:72:0x00dd \-\> B:73:0x00e9, CROSS_EDGE: B:68:0x00c6 \-\> B:69:0x00c8, CROSS_EDGE: B:64:0x00bb \-\> B:65:0x00bd, CROSS_EDGE: B:85:0x011a \-\> B:87:0x011f, CROSS_EDGE: B:92:0x012f \-\> B:49:?, CROSS_EDGE: B:90:0x012a \-\> B:92:0x012f, CROSS_EDGE: B:84:0x0118 \-\> B:85:0x011a, CROSS_EDGE: B:55:0x007b \-\> B:84:0x0118, CROSS_EDGE: B:54:0x0066 \-\> B:55:0x007b, CROSS_EDGE: B:93:0x0033 \-\> B:89:0x0129\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0033\-0x0065: r14 'cursor' Landroid\/database\/Cursor;\l  0x0065\-0x0066: r0 'cursor' Landroid\/database\/Cursor;\l  0x0045\-0x00d6: r6 'projection' [Ljava\/lang\/String;\l  0x00d2\-0x00d6: r21 'id' J\l  0x00d6\-0x00dc: r5 'id' J\l  0x00dc\-0x00dd: r5 'fileUri' Landroid\/net\/Uri;\l  0x00d6\-0x00dd: r16 'projection' [Ljava\/lang\/String;\l  0x00dd\-0x00df: r6 'projection' [Ljava\/lang\/String;\l  0x00e3\-0x00e9: r5 'id' J\l  0x00ca\-0x0103: r18 'ttcIndex' I\l  0x0089\-0x0103: r0 'resultCodeColumnIndex' I\l  0x00bf\-0x0103: r17 'resultCode' I\l  0x0103\-0x0112: r0 'ttcIndex' I\l  0x00e9\-0x0112: r5 'fileUri' Landroid\/net\/Uri;\l  0x00f2\-0x0112: r6 'weight' I\l  0x00fd\-0x0112: r12 'italic' Z\l  0x0103\-0x0112: r15 'resultCode' I\l  0x00df\-0x0113: r16 'projection' [Ljava\/lang\/String;\l  0x0103\-0x0113: r17 'resultCodeColumnIndex' I\l  0x0113\-0x0117: r0 'resultCodeColumnIndex' I\l  0x0113\-0x0117: r6 'projection' [Ljava\/lang\/String;\l  0x0095\-0x0118: r7 'idColumnIndex' I\l  0x009b\-0x0118: r8 'fileIdColumnIndex' I\l  0x00a1\-0x0118: r9 'ttcIndexColumnIndex' I\l  0x00a7\-0x0118: r10 'weightColumnIndex' I\l  0x00ad\-0x0118: r11 'italicColumnIndex' I\l  0x0117\-0x0118: r16 'projection' [Ljava\/lang\/String;\l  0x0117\-0x0118: r17 'resultCodeColumnIndex' I\l  0x0049\-0x011a: r4 'resolver' Landroid\/content\/ContentResolver;\l  0x0118\-0x011a: r6 'projection' [Ljava\/lang\/String;\l  0x0008\-0x012f: r2 'result' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\>;\l  0x0032\-0x012f: r3 'fileBaseUri' Landroid\/net\/Uri;\l  0x001b\-0x012f: r13 'uri' Landroid\/net\/Uri;\l  0x0066\-0x012f: r14 'cursor' Landroid\/database\/Cursor;\l  \-1 \-0x012f: r23 'context' Landroid\/content\/Context;\l  \-1 \-0x012f: r24 'request' Landroidx\/core\/provider\/FontRequest;\l  \-1 \-0x012f: r25 'authority' Ljava\/lang\/String;\l  \-1 \-0x012f: r26 'cancellationSignal' Landroid\/os\/CancellationSignal;\lTryCatch #0 \{all \-\> 0x0129, blocks: (B:51:0x0033, B:53:0x0051, B:56:0x007d, B:58:0x0083, B:59:0x00ad, B:63:0x00b6, B:67:0x00c1, B:71:0x00cc, B:74:0x00eb, B:77:0x00f4, B:81:0x00fd, B:72:0x00dd, B:54:0x0066), top: B:93:0x0033 \}\l}"];
MethodNode -> Node_48;Node_48 -> Node_50;
Node_50 -> Node_93;
Node_93 -> Node_51;
Node_93 -> Node_89;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_84;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_84;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_94;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_95;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_80;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_59;
Node_80 -> Node_81;
Node_75 -> Node_76;
Node_72 -> Node_73;
Node_68 -> Node_69;
Node_64 -> Node_65;
Node_95 -> Node_83;
Node_83 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_49;
Node_94 -> Node_89;
Node_84 -> Node_85;
Node_54 -> Node_55;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_92;
Node_92 -> Node_49;
}

