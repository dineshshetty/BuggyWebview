digraph "CFG forandroidx.core.animation.AnimatorKt.addListener$default(Landroid\/animation\/Animator;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)Landroid\/animation\/Animator$AnimatorListener;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r7 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:94)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r7 I:androidx.core.animation.AnimatorKt$addListener$1) =  androidx.core.animation.AnimatorKt$addListener$1.INSTANCE androidx.core.animation.AnimatorKt$addListener$1  (LINE:95)\l0x0006: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('onEnd' kotlin.jvm.functions.Function1)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0007: CHECK_CAST (r2 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r2 I:??[OBJECT, ARRAY] A[D('onEnd' kotlin.jvm.functions.Function1)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: ARITH  (r7 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:94)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: SGET  (r7 I:androidx.core.animation.AnimatorKt$addListener$2) =  androidx.core.animation.AnimatorKt$addListener$2.INSTANCE androidx.core.animation.AnimatorKt$addListener$2  (LINE:96)\l0x000f: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('onStart' kotlin.jvm.functions.Function1)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0010: CHECK_CAST (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:??[OBJECT, ARRAY] A[D('onStart' kotlin.jvm.functions.Function1)]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: ARITH  (r7 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:94)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: SGET  (r7 I:androidx.core.animation.AnimatorKt$addListener$3) =  androidx.core.animation.AnimatorKt$addListener$3.INSTANCE androidx.core.animation.AnimatorKt$addListener$3  (LINE:97)\l0x0018: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('onCancel' kotlin.jvm.functions.Function1)]) = (r7 I:??[OBJECT, ARRAY]) \l0x0019: CHECK_CAST (r4 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r4 I:??[OBJECT, ARRAY] A[D('onCancel' kotlin.jvm.functions.Function1)]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char])  (LINE:94)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0024 \l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: SGET  (r6 I:androidx.core.animation.AnimatorKt$addListener$4) =  androidx.core.animation.AnimatorKt$addListener$4.INSTANCE androidx.core.animation.AnimatorKt$addListener$4  (LINE:98)\l0x0021: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('onRepeat' kotlin.jvm.functions.Function1)]) = (r6 I:??[OBJECT, ARRAY]) \l0x0022: CHECK_CAST (r5 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r5 I:??[OBJECT, ARRAY] A[D('onRepeat' kotlin.jvm.functions.Function1)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: CONST_STR  (r6 I:java.lang.String) =  \"\<this\>\"  (LINE:94)\l0x0026: INVOKE  (r1 I:java.lang.Object A[D('$this$addListener_u24default' android.animation.Animator)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0029: CONST_STR  (r6 I:java.lang.String) =  \"onEnd\" \l0x002b: INVOKE  (r2 I:java.lang.Object A[D('onEnd' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x002e: CONST_STR  (r6 I:java.lang.String) =  \"onStart\" \l0x0030: INVOKE  (r3 I:java.lang.Object A[D('onStart' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0033: CONST_STR  (r6 I:java.lang.String) =  \"onCancel\" \l0x0035: INVOKE  (r4 I:java.lang.Object A[D('onCancel' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0038: CONST_STR  (r6 I:java.lang.String) =  \"onRepeat\" \l0x003a: INVOKE  (r5 I:java.lang.Object A[D('onRepeat' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x003d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x003e: NEW_INSTANCE  (r7 I:androidx.core.animation.AnimatorKt$addListener$listener$1) =  androidx.core.animation.AnimatorKt$addListener$listener$1  (LINE:100)\l0x0040: INVOKE  \l  (r7 I:androidx.core.animation.AnimatorKt$addListener$listener$1)\l  (r5 I:kotlin.jvm.functions.Function1 A[D('onRepeat' kotlin.jvm.functions.Function1)])\l  (r2 I:kotlin.jvm.functions.Function1 A[D('onEnd' kotlin.jvm.functions.Function1)])\l  (r4 I:kotlin.jvm.functions.Function1 A[D('onCancel' kotlin.jvm.functions.Function1)])\l  (r3 I:kotlin.jvm.functions.Function1 A[D('onStart' kotlin.jvm.functions.Function1)])\l type: DIRECT call: androidx.core.animation.AnimatorKt$addListener$listener$1.\<init\>(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1):void A[MD:(kotlin.jvm.functions.Function1\<? super android.animation.Animator, kotlin.Unit\>, kotlin.jvm.functions.Function1\<? super android.animation.Animator, kotlin.Unit\>, kotlin.jvm.functions.Function1\<? super android.animation.Animator, kotlin.Unit\>, kotlin.jvm.functions.Function1\<? super android.animation.Animator, kotlin.Unit\>):void (m)]\l0x0043: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('listener' androidx.core.animation.AnimatorKt$addListener$listener$1)])  (LINE:106)\l0x0044: CHECK_CAST (r0 I:android.animation.Animator$AnimatorListener) = (android.animation.Animator$AnimatorListener) (r0 I:??[OBJECT, ARRAY]) \l0x0046: INVOKE  \l  (r1 I:android.animation.Animator A[D('$this$addListener_u24default' android.animation.Animator)])\l  (r0 I:android.animation.Animator$AnimatorListener)\l type: VIRTUAL call: android.animation.Animator.addListener(android.animation.Animator$AnimatorListener):void A[MD:(android.animation.Animator$AnimatorListener):void (c)]\l0x0049: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('listener' androidx.core.animation.AnimatorKt$addListener$listener$1)])  (LINE:107)\l0x004a: CHECK_CAST (r0 I:android.animation.Animator$AnimatorListener) = (android.animation.Animator$AnimatorListener) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|RETURN\l|0x004c: RETURN  (r0 I:android.animation.Animator$AnimatorListener) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.animation.Animator$AnimatorListener androidx.core.animation.AnimatorKt.addListener$default((r1 I:android.animation.Animator A[D('$this$addListener_u24default' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function1 A[D('onEnd' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function1 A[D('onStart' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1 A[D('onCancel' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1 A[D('onRepeat' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:12:0x001d \-\> B:14:0x0024, CROSS_EDGE: B:9:0x0014 \-\> B:11:0x001b, CROSS_EDGE: B:6:0x000b \-\> B:8:0x0012, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0009\lDebug Info:\l  \-1 \-0x004c: r1 '$this$addListener_u24default' Landroid\/animation\/Animator;\l  \-1 \-0x004c: r2 'onEnd' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x004c: r3 'onStart' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x004c: r4 'onCancel' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x004c: r5 'onRepeat' Lkotlin\/jvm\/functions\/Function1;\l  0x003e\-0x004c: r6 '$i$f$addListener' I\l  0x0043\-0x004c: r7 'listener' Landroidx\/core\/animation\/AnimatorKt$addListener$listener$1;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [94=5]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

