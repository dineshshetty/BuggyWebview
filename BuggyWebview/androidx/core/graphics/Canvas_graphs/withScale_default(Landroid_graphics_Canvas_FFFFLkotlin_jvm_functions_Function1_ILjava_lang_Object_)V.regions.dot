digraph "CFG forandroidx.core.graphics.CanvasKt.withScale$default(Landroid\/graphics\/Canvas;FFFFLkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
subgraph cluster_Region_1980461430 {
label = "R(6:(1:3)|(1:6)|(1:9)|(1:12)|13|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_388128284 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r8 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_2011314210 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|r3 = 1.0f\l}"];
}
}
subgraph cluster_IfRegion_1881946234 {
label = "IF [B:6:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|if ((r8 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_562907837 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000a|r4 = 1.0f\l}"];
}
}
subgraph cluster_IfRegion_618275374 {
label = "IF [B:9:0x000e] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x000e|if ((r8 & 4) != 0) goto L9\l}"];
subgraph cluster_Region_1109343679 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0010|r5 = 0.0f\l}"];
}
}
subgraph cluster_IfRegion_1407267438 {
label = "IF [B:12:0x0013] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0013|if ((r8 & 8) != 0) goto L12\l}"];
subgraph cluster_Region_410141197 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0015|r6 = 0.0f\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0016|PHI: r6 \l  PHI: (r6v1 'pivotY' float) = (r6v0 'pivotY' float), (r6v2 'pivotY' float) binds: [B:12:0x0013, B:13:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"block\")\lint int r9 = r2.save()\lr2.scale(r3, r4, r5, r6)\lint r0 = 1\l}"];
subgraph cluster_TryCatchRegion_1842141311 {
label = "Try: R(1:15) finally: R(3:20|21|22)";
node [shape=record,color=blue];
subgraph cluster_Region_1451614908 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0038, blocks: (B:15:0x002a), top: B:21:0x002a \}\lCatch: all \-\> 0x0038\l|r7.invoke(r2)     \/\/ Catch: java.lang.Throwable \-\> L38\l}"];
}
subgraph cluster_Region_282309049 {
label = "R(3:20|21|22) | ExcHandler: all \-\> 0x0038\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0038|ExcHandler: all \-\> 0x0038\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr2.restoreToCount(r9)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|throw r1\l}"];
}
}
}
subgraph cluster_Region_282309049 {
label = "R(3:20|21|22) | ExcHandler: all \-\> 0x0038\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0038|ExcHandler: all \-\> 0x0038\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr2.restoreToCount(r9)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|throw r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0006|PHI: r3 \l  PHI: (r3v1 'x' float) = (r3v0 'x' float), (r3v2 'x' float) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000c|PHI: r4 \l  PHI: (r4v1 'y' float) = (r4v0 'y' float), (r4v2 'y' float) binds: [B:6:0x0008, B:7:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0011|PHI: r5 \l  PHI: (r5v1 'pivotX' float) = (r5v0 'pivotX' float), (r5v2 'pivotX' float) binds: [B:9:0x000e, B:10:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x002a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002d|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r0)\lr2.restoreToCount(r9)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r0)\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0037}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.graphics.CanvasKt.withScale$default((r2v0 '$this$withScale_u24default' android.graphics.Canvas A[D('$this$withScale_u24default' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'pivotX' float A[D('pivotX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'pivotY' float A[D('pivotY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'block' kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:20:0x0042 \-\> B:1:?, CROSS_EDGE: B:21:0x002a \-\> B:18:0x0038, CROSS_EDGE: B:12:0x0013 \-\> B:14:0x0016, CROSS_EDGE: B:9:0x000e \-\> B:11:0x0011, CROSS_EDGE: B:6:0x0008 \-\> B:8:0x000c, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0006\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0038, blocks: (B:15:0x002a), top: B:21:0x002a \}\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [79=5]\}\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_15 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_21 -> Node_15;
Node_21 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_22 -> Node_18;
}

