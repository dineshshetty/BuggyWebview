digraph "CFG forandroidx.core.graphics.CanvasKt.withSkew$default(Landroid\/graphics\/Canvas;FFLkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r7 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:99)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('x' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:100)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:99)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:101)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|0x000a: CONST_STR  (r6 I:java.lang.String) =  \"\<this\>\"  (LINE:99)\l0x000c: INVOKE  (r2 I:java.lang.Object A[D('$this$withSkew_u24default' android.graphics.Canvas)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST_STR  (r6 I:java.lang.String) =  \"block\" \l0x0011: INVOKE  (r5 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0014: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  (r7 I:int) = (r2 I:android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:104)\l0x0019: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas)])\l  (r3 I:float A[D('x' float)])\l  (r4 I:float A[D('y' float)])\l type: VIRTUAL call: android.graphics.Canvas.skew(float, float):void A[MD:(float, float):void (c)] (LINE:105)\l0x001d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:107)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:9:0x001e), top: B:15:0x001e \}\lCatch: all \-\> 0x002c\l|0x001e: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('$this$withSkew_u24default' android.graphics.Canvas)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002c, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0024: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas)])\l  (r7 I:int A[D('checkpoint' int)])\l type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:109)\l0x0027: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|RETURN\l|0x002b: RETURN    (LINE:111)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|ExcHandler: all \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002c] (LINE:108)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0030: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas)])\l  (r7 I:int A[D('checkpoint' int)])\l type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:109)\l0x0033: INVOKE  (r0 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.graphics.CanvasKt.withSkew$default((r2 I:android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0036 \-\> B:1:?, CROSS_EDGE: B:15:0x001e \-\> B:12:0x002c, CROSS_EDGE: B:6:0x0007 \-\> B:8:0x000a, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lDebug Info:\l  \-1 \-0x0036: r2 '$this$withSkew_u24default' Landroid\/graphics\/Canvas;\l  \-1 \-0x0036: r3 'x' F\l  \-1 \-0x0036: r4 'y' F\l  \-1 \-0x0036: r5 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x0015\-0x0036: r6 '$i$f$withSkew' I\l  0x0019\-0x0036: r7 'checkpoint' I\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:9:0x001e), top: B:15:0x001e \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_15;
Node_15 -> Node_9;
Node_15 -> Node_12;
Node_9 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_16 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

