digraph "CFG forandroidx.core.graphics.CanvasKt.withMatrix$default(Landroid\/graphics\/Canvas;Landroid\/graphics\/Matrix;Lkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:117)\l0x0001: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (r6 I:??[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: NEW_INSTANCE  (r5 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:118)\l0x0006: INVOKE  (r5 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0009: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('matrix' android.graphics.Matrix)]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: CONST_STR  (r5 I:java.lang.String) =  \"\<this\>\"  (LINE:117)\l0x000c: INVOKE  (r2 I:java.lang.Object A[D('$this$withMatrix_u24default' android.graphics.Canvas)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000f: CONST_STR  (r5 I:java.lang.String) =  \"matrix\" \l0x0011: INVOKE  (r3 I:java.lang.Object A[D('matrix' android.graphics.Matrix)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0014: CONST_STR  (r5 I:java.lang.String) =  \"block\" \l0x0016: INVOKE  (r4 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0019: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: INVOKE  (r0 I:int) = (r2 I:android.graphics.Canvas A[D('$this$withMatrix_u24default' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:121)\l0x001e: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withMatrix_u24default' android.graphics.Canvas)])\l  (r3 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Canvas.concat(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:122)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:6:0x0022), top: B:12:0x0022 \}\lCatch: all \-\> 0x0030\l|0x0022: INVOKE  \l  (r4 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r2 I:java.lang.Object A[D('$this$withMatrix_u24default' android.graphics.Canvas)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0030, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE] (LINE:124)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0028: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withMatrix_u24default' android.graphics.Canvas)])\l  (r0 I:int A[D('checkpoint' int)])\l type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:126)\l0x002b: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:128)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|ExcHandler: all \-\> 0x0030\l|0x0030: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0030] (LINE:125)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0034: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('$this$withMatrix_u24default' android.graphics.Canvas)])\l  (r0 I:int A[D('checkpoint' int)])\l type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:126)\l0x0037: INVOKE  (r6 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.graphics.CanvasKt.withMatrix$default((r2 I:android.graphics.Canvas A[D('$this$withMatrix_u24default' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x003a \-\> B:1:?, CROSS_EDGE: B:12:0x0022 \-\> B:9:0x0030, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x000a\lDebug Info:\l  0x001e\-0x003a: r0 'checkpoint' I\l  \-1 \-0x003a: r2 '$this$withMatrix_u24default' Landroid\/graphics\/Canvas;\l  \-1 \-0x003a: r3 'matrix' Landroid\/graphics\/Matrix;\l  \-1 \-0x003a: r4 'block' Lkotlin\/jvm\/functions\/Function1;\l  0x001a\-0x003a: r5 '$i$f$withMatrix' I\lTryCatch #0 \{all \-\> 0x0030, blocks: (B:6:0x0022), top: B:12:0x0022 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_12;
Node_12 -> Node_6;
Node_12 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_13 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

