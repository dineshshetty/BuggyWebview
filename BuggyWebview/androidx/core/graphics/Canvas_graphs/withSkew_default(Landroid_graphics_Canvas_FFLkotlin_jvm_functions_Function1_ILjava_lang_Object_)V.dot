digraph "CFG forandroidx.core.graphics.CanvasKt.withSkew$default(Landroid\/graphics\/Canvas;FFLkotlin\/jvm\/functions\/Function1;ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r6 & 1) == 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r3 = 0.0f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|PHI: r3 \l  PHI: (r3v1 'x' float) = (r3v0 'x' float), (r3v2 'x' float) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|if ((r6 & 2) == 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|r4 = 0.0f\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|PHI: r4 \l  PHI: (r4v1 'y' float) = (r4v0 'y' float), (r4v2 'y' float) binds: [B:6:0x0007, B:7:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r2, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"block\")\lint r7 = r2.save()\lr2.skew(r3, r4)\lr0 = 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:9:0x001e), top: B:15:0x001e \}\lCatch: all \-\> 0x002c\l|r5.invoke(r2)     \/\/ Catch: java.lang.Throwable \-\> L2c\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r0)\lr2.restoreToCount(r7)\lkotlin.jvm.internal.InlineMarker.finallyEnd(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|ExcHandler: all \-\> 0x002c\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr2.restoreToCount(r7)\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|throw r1\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.graphics.CanvasKt.withSkew$default((r2v0 '$this$withSkew_u24default' android.graphics.Canvas A[D('$this$withSkew_u24default' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'block' kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0036 \-\> B:1:?, CROSS_EDGE: B:15:0x001e \-\> B:12:0x002c, CROSS_EDGE: B:6:0x0007 \-\> B:8:0x000a, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lTryCatch #0 \{all \-\> 0x002c, blocks: (B:9:0x001e), top: B:15:0x001e \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_15;
Node_15 -> Node_9;
Node_15 -> Node_12;
Node_9 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_16 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

