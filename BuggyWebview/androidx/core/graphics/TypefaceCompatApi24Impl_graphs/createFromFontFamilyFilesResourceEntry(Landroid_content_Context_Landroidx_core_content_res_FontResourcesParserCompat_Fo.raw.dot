digraph "CFG forandroidx.core.graphics.TypefaceCompatApi24Impl.createFromFontFamilyFilesResourceEntry(Landroid\/content\/Context;Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFamilyFilesResourceEntry;Landroid\/content\/res\/Resources;I)Landroid\/graphics\/Typeface;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.newFamily():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:167)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:168)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('family' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0008 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:android.graphics.Typeface)  (LINE:169)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|0x0008: INVOKE  (r2 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) = \l  (r12 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry.getEntries():androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] A[MD:():androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] (m)] (LINE:171)\l0x000c: ARRAY_LENGTH  (r3 I:int) = (r2 I:??[]) \l0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|LOOP_START\lLOOP:0: B:25:0x000e\-\>B:32:0x0031\l|0x000e: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:36:0x0034 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: AGET  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]) \l0x0013: INVOKE  (r6 I:int) = \l  (r5 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('e' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.getResourceId():int A[MD:():int (m)] (LINE:173)\l0x0017: INVOKE  (r6 I:java.nio.ByteBuffer) = \l  (r11 I:android.content.Context A[D('context' android.content.Context)])\l  (r13 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r6 I:int)\l type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(android.content.Context, android.content.res.Resources, int):java.nio.ByteBuffer A[MD:(android.content.Context, android.content.res.Resources, int):java.nio.ByteBuffer (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|0x001b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('buffer' java.nio.ByteBuffer)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001e  (LINE:174)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: INVOKE  (r7 I:int) = \l  (r5 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('e' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.getTtcIndex():int A[MD:():int (m)] (LINE:177)\l0x0022: INVOKE  (r8 I:int) = \l  (r5 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('e' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.getWeight():int A[MD:():int (m)]\l0x0026: INVOKE  (r9 I:boolean) = \l  (r5 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('e' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.isItalic():boolean A[MD:():boolean (m)]\l0x002a: INVOKE  (r7 I:boolean) = \l  (r0 I:java.lang.Object A[D('family' java.lang.Object)])\l  (r6 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:boolean)\l type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.addFontWeightStyle(java.lang.Object, java.nio.ByteBuffer, int, int, boolean):boolean A[MD:(java.lang.Object, java.nio.ByteBuffer, int, int, boolean):boolean (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x002e|0x002e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0031 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|LOOP_END\lLOOP:0: B:25:0x000e\-\>B:32:0x0031\l|0x0031: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:171)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0030|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|RETURN\l|0x0030: RETURN  (r1 I:android.graphics.Typeface)  (LINE:178)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001d|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|RETURN\l|0x001d: RETURN  (r1 I:android.graphics.Typeface)  (LINE:175)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0034|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|0x0034: INVOKE  (r1 I:android.graphics.Typeface) = (r0 I:java.lang.Object A[D('family' java.lang.Object)]) type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.createFromFamiliesWithDefault(java.lang.Object):android.graphics.Typeface A[MD:(java.lang.Object):android.graphics.Typeface (m)] (LINE:181)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|RETURN\l|0x0038: RETURN  (r1 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontFamilyFilesResourceEntry((r10 'this' I:androidx.core.graphics.TypefaceCompatApi24Impl A[IMMUTABLE_TYPE, THIS]), (r11 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001d \-\> B:20:?, CROSS_EDGE: B:31:0x0030 \-\> B:20:?, BACK_EDGE: B:32:0x0031 \-\> B:25:0x000e, CROSS_EDGE: B:34:0x0038 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0031: r5 'e' Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFileResourceEntry;\l  0x001b\-0x0031: r6 'buffer' Ljava\/nio\/ByteBuffer;\l  0x0004\-0x0038: r0 'family' Ljava\/lang\/Object;\l  \-1 \-0x0038: r11 'context' Landroid\/content\/Context;\l  \-1 \-0x0038: r12 'entry' Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFamilyFilesResourceEntry;\l  \-1 \-0x0038: r13 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0038: r14 'style' I\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_35[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_37[style=dashed];
Node_32 -> Node_25;
Node_37 -> Node_31;
Node_31 -> Node_20;
Node_35 -> Node_28;
Node_28 -> Node_20;
Node_36 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_20;
}

