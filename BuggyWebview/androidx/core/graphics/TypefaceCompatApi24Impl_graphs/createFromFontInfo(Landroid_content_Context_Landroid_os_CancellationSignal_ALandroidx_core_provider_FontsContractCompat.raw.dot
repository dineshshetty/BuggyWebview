digraph "CFG forandroidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) =  type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.newFamily():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:135)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:136)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('family' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0008 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:android.graphics.Typeface)  (LINE:137)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: NEW_INSTANCE  (r2 I:androidx.collection.SimpleArrayMap) =  androidx.collection.SimpleArrayMap  (LINE:139)\l0x000a: INVOKE  (r2 I:androidx.collection.SimpleArrayMap) type: DIRECT call: androidx.collection.SimpleArrayMap.\<init\>():void A[MD:():void (m)]\l0x000d: ARRAY_LENGTH  (r3 I:int) = (r14 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])  (LINE:141)\l0x000e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000f|LOOP_START\lLOOP:0: B:30:0x000f\-\>B:39:0x003c\l|0x000f: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:47:0x003f \l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: AGET  (r5 I:??[OBJECT, ARRAY]) = \l  (r14 I:??[OBJECT, ARRAY][] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])\l  (r4 I:??[int, short, byte, char])\l \l0x0013: INVOKE  (r6 I:android.net.Uri) = \l  (r5 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:142)\l0x0017: INVOKE  (r7 I:java.lang.Object) = \l  (r2 I:androidx.collection.SimpleArrayMap A[D('bufferCache' androidx.collection.SimpleArrayMap\<android.net.Uri, java.nio.ByteBuffer\>)])\l  (r6 I:java.lang.Object A[D('uri' android.net.Uri)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)] (LINE:143)\l0x001b: CHECK_CAST (r7 I:java.nio.ByteBuffer) = (java.nio.ByteBuffer) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|0x001d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('buffer' java.nio.ByteBuffer)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0026  (LINE:144)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|0x001f: INVOKE  (r7 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) = \l  (r12 I:android.content.Context A[D('context' android.content.Context)])\l  (r13 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal)])\l  (r6 I:android.net.Uri A[D('uri' android.net.Uri)])\l type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.mmap(android.content.Context, android.os.CancellationSignal, android.net.Uri):java.nio.ByteBuffer A[MD:(android.content.Context, android.os.CancellationSignal, android.net.Uri):java.nio.ByteBuffer (m)] (LINE:145)\l0x0023: INVOKE  \l  (r2 I:androidx.collection.SimpleArrayMap A[D('bufferCache' androidx.collection.SimpleArrayMap\<android.net.Uri, java.nio.ByteBuffer\>)])\l  (r6 I:java.lang.Object A[D('uri' android.net.Uri)])\l  (r7 I:java.lang.Object A[D('buffer' java.nio.ByteBuffer)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)] (LINE:146)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|0x0026: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('buffer' java.nio.ByteBuffer)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0029  (LINE:148)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|0x0029: INVOKE  (r8 I:int) = \l  (r5 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getTtcIndex():int A[MD:():int (m)] (LINE:151)\l0x002d: INVOKE  (r9 I:int) = \l  (r5 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getWeight():int A[MD:():int (m)]\l0x0031: INVOKE  (r10 I:boolean) = \l  (r5 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.isItalic():boolean A[MD:():boolean (m)] (LINE:152)\l0x0035: INVOKE  (r8 I:boolean) = \l  (r0 I:java.lang.Object A[D('family' java.lang.Object)])\l  (r7 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:boolean)\l type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.addFontWeightStyle(java.lang.Object, java.nio.ByteBuffer, int, int, boolean):boolean A[MD:(java.lang.Object, java.nio.ByteBuffer, int, int, boolean):boolean (m)] (LINE:151)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|0x0039: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x003c \l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|LOOP_END\lLOOP:0: B:30:0x000f\-\>B:39:0x003c\l|0x003c: ARITH  (r4 I:int) = (r4 I:int) + (1 int)  (LINE:141)\l}"];
Node_46 [shape=record,label="{46\:\ 0x003b|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x003b|RETURN\l|0x003b: RETURN  (r1 I:android.graphics.Typeface)  (LINE:153)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|RETURN\l|0x0028: RETURN  (r1 I:android.graphics.Typeface)  (LINE:149)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003f|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x003f|0x003f: INVOKE  (r3 I:android.graphics.Typeface) = (r0 I:java.lang.Object A[D('family' java.lang.Object)]) type: STATIC call: androidx.core.graphics.TypefaceCompatApi24Impl.createFromFamiliesWithDefault(java.lang.Object):android.graphics.Typeface A[MD:(java.lang.Object):android.graphics.Typeface (m)] (LINE:156)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0043|0x0043: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0046  (LINE:157)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0045|RETURN\l|0x0045: RETURN  (r1 I:android.graphics.Typeface)  (LINE:158)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0046|0x0046: INVOKE  (r1 I:android.graphics.Typeface) = (r3 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)]), (r15 I:int A[D('style' int)]) type: STATIC call: android.graphics.Typeface.create(android.graphics.Typeface, int):android.graphics.Typeface A[MD:(android.graphics.Typeface, int):android.graphics.Typeface (c)] (LINE:160)\l}"];
Node_44 [shape=record,label="{44\:\ 0x004a|RETURN\l|0x004a: RETURN  (r1 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi24Impl.createFromFontInfo((r11 'this' I:androidx.core.graphics.TypefaceCompatApi24Impl A[IMMUTABLE_TYPE, THIS]), (r12 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0028 \-\> B:25:?, CROSS_EDGE: B:38:0x003b \-\> B:25:?, BACK_EDGE: B:39:0x003c \-\> B:30:0x000f, CROSS_EDGE: B:32:0x001d \-\> B:34:0x0026, CROSS_EDGE: B:42:0x0045 \-\> B:25:?, CROSS_EDGE: B:44:0x004a \-\> B:25:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x003c: r5 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0017\-0x003c: r6 'uri' Landroid\/net\/Uri;\l  0x001d\-0x003c: r7 'buffer' Ljava\/nio\/ByteBuffer;\l  0x0004\-0x004a: r0 'family' Ljava\/lang\/Object;\l  0x000d\-0x004a: r2 'bufferCache' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<Landroid\/net\/Uri;Ljava\/nio\/ByteBuffer;\>;\l  0x0043\-0x004a: r3 'typeface' Landroid\/graphics\/Typeface;\l  \-1 \-0x004a: r12 'context' Landroid\/content\/Context;\l  \-1 \-0x004a: r13 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  \-1 \-0x004a: r14 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x004a: r15 'style' I\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[], int):android.graphics.Typeface]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_47;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_45[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_46[style=dashed];
Node_39 -> Node_30;
Node_46 -> Node_38;
Node_38 -> Node_25;
Node_45 -> Node_35;
Node_35 -> Node_25;
Node_47 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_25;
Node_43 -> Node_44;
Node_44 -> Node_25;
}

