digraph "CFG forandroidx.core.graphics.TypefaceCompatApi29Impl.findBaseFont(Landroid\/graphics\/fonts\/FontFamily;I)Landroid\/graphics\/fonts\/Font;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.graphics.fonts.FontStyle) =  android.graphics.fonts.FontStyle  (LINE:53)\l0x0002: ARITH  (r1 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char] A[D('style' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:54)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0009 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, short, byte, char]) = (700(0x2bc, float:9.81E\-43) ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: ARITH  (r2 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char] A[D('style' int)]) & (2 ??[int, float, short, byte, char])  (LINE:56)\l0x000d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0012 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|0x0013: INVOKE  (r0 I:android.graphics.fonts.FontStyle), (r1 I:int), (r2 I:int) type: DIRECT call: android.graphics.fonts.FontStyle.\<init\>(int, int):void A[MD:(int, int):void (c)]\l0x0016: INVOKE  (r1 I:android.graphics.fonts.Font) = (r7 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily)]), (r3 I:int) type: VIRTUAL call: android.graphics.fonts.FontFamily.getFont(int):android.graphics.fonts.Font A[MD:(int):android.graphics.fonts.Font (c)] (LINE:59)\l0x001a: INVOKE  (r2 I:android.graphics.fonts.FontStyle) = (r1 I:android.graphics.fonts.Font A[D('bestFont' android.graphics.fonts.Font)]) type: VIRTUAL call: android.graphics.fonts.Font.getStyle():android.graphics.fonts.FontStyle A[MD:():android.graphics.fonts.FontStyle (c)] (LINE:60)\l0x001e: INVOKE  (r2 I:int) = \l  (r0 I:android.graphics.fonts.FontStyle A[D('desiredStyle' android.graphics.fonts.FontStyle)])\l  (r2 I:android.graphics.fonts.FontStyle)\l type: STATIC call: androidx.core.graphics.TypefaceCompatApi29Impl.getMatchScore(android.graphics.fonts.FontStyle, android.graphics.fonts.FontStyle):int A[MD:(android.graphics.fonts.FontStyle, android.graphics.fonts.FontStyle):int (m)]\l0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:61)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|LOOP_START\lLOOP:0: B:32:0x0023\-\>B:37:0x0039\l|0x0023: INVOKE  (r4 I:int) = (r7 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily)]) type: VIRTUAL call: android.graphics.fonts.FontFamily.getSize():int A[MD:():int (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:39:0x003c \l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: INVOKE  (r4 I:android.graphics.fonts.Font) = (r7 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: android.graphics.fonts.FontFamily.getFont(int):android.graphics.fonts.Font A[MD:(int):android.graphics.fonts.Font (c)] (LINE:62)\l0x002d: INVOKE  (r5 I:android.graphics.fonts.FontStyle) = (r4 I:android.graphics.fonts.Font A[D('candidate' android.graphics.fonts.Font)]) type: VIRTUAL call: android.graphics.fonts.Font.getStyle():android.graphics.fonts.FontStyle A[MD:():android.graphics.fonts.FontStyle (c)] (LINE:63)\l0x0031: INVOKE  (r5 I:int) = \l  (r0 I:android.graphics.fonts.FontStyle A[D('desiredStyle' android.graphics.fonts.FontStyle)])\l  (r5 I:android.graphics.fonts.FontStyle)\l type: STATIC call: androidx.core.graphics.TypefaceCompatApi29Impl.getMatchScore(android.graphics.fonts.FontStyle, android.graphics.fonts.FontStyle):int A[MD:(android.graphics.fonts.FontStyle, android.graphics.fonts.FontStyle):int (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|0x0035: IF  (r5 I:??[int, byte, short, char] A[D('score' int)]) \>= (r2 I:??[int, byte, short, char] A[D('bestScore' int)])  \-\> B:41:0x0039  (LINE:64)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0037|0x0037: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('bestFont' android.graphics.fonts.Font)]) = (r4 I:??[OBJECT, ARRAY] A[D('candidate' android.graphics.fonts.Font)])  (LINE:65)\l0x0038: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bestScore' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('score' int)])  (LINE:66)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|LOOP_END\lLOOP:0: B:32:0x0023\-\>B:37:0x0039\l|0x0039: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:61)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0039|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x003c|RETURN\l|0x003c: RETURN  (r1 I:android.graphics.fonts.Font A[D('bestFont' android.graphics.fonts.Font)])  (LINE:69)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0012|0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:57)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: CONST  (r1 I:??[int, float, short, byte, char]) = (400(0x190, float:5.6E\-43) ??[int, float, short, byte, char])  (LINE:55)\l}"];
MethodNode[shape=record,label="{private android.graphics.fonts.Font androidx.core.graphics.TypefaceCompatApi29Impl.findBaseFont((r6 'this' I:androidx.core.graphics.TypefaceCompatApi29Impl A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x0039 \-\> B:32:0x0023, CROSS_EDGE: B:35:0x0035 \-\> B:37:0x0039, CROSS_EDGE: B:30:0x0012 \-\> B:31:0x0013, CROSS_EDGE: B:26:0x0009 \-\> B:27:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002d\-0x0039: r4 'candidate' Landroid\/graphics\/fonts\/Font;\l  0x0035\-0x0039: r5 'score' I\l  0x0023\-0x003c: r3 'i' I\l  0x0016\-0x003c: r0 'desiredStyle' Landroid\/graphics\/fonts\/FontStyle;\l  0x001a\-0x003c: r1 'bestFont' Landroid\/graphics\/fonts\/Font;\l  0x0022\-0x003c: r2 'bestScore' I\l  \-1 \-0x003c: r7 'family' Landroid\/graphics\/fonts\/FontFamily;\l  \-1 \-0x003c: r8 'style' I\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_40;
Node_40 -> Node_37;
Node_37 -> Node_32;
Node_41 -> Node_37;
Node_39 -> Node_38;
Node_38 -> Node_22;
Node_30 -> Node_31;
Node_26 -> Node_27;
}

