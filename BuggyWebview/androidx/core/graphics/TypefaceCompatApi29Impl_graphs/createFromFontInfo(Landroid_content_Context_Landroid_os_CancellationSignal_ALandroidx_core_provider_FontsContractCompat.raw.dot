digraph "CFG forandroidx.core.graphics.TypefaceCompatApi29Impl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:89)\l0x0001: INVOKE  (r1 I:android.content.ContentResolver) = (r11 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getContentResolver():android.content.ContentResolver A[MD:():android.content.ContentResolver (c)] (LINE:90)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:92)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|TRY_ENTER\lTryCatch #2 \{Exception \-\> 0x0084, blocks: (B:55:0x0006, B:57:0x000b, B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f, B:85:0x006a), top: B:93:0x0006 \}\lCatch: Exception \-\> 0x0084\l|0x0006: ARRAY_LENGTH  (r3 I:int) = (r13 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])]) A[Catch: Exception \-\> 0x0084, TRY_ENTER]\l0x0007: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0009|LOOP_START\lLOOP:0: B:56:0x0009\-\>B:82:0x0064\l|0x0009: IF  (r5 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:97:0x0067 \l}"];
Node_57 [shape=record,label="{57\:\ 0x000b|TRY_LEAVE\lTryCatch #2 \{Exception \-\> 0x0084, blocks: (B:55:0x0006, B:57:0x000b, B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f, B:85:0x006a), top: B:93:0x0006 \}\lCatch: Exception \-\> 0x0084\l|0x000b: AGET  (r6 I:??[OBJECT, ARRAY]) = \l  (r13 I:??[OBJECT, ARRAY][] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])\l  (r5 I:??[int, short, byte, char])\l A[Catch: Exception \-\> 0x0084, TRY_LEAVE]\l}"];
Node_89 [shape=record,label="{89\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_58 [shape=record,label="{58\:\ 0x000d|TRY_ENTER\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}\lCatch: IOException \-\> 0x0063, Exception \-\> 0x0084\l|0x000d: INVOKE  (r7 I:android.net.Uri) = \l  (r6 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, MD:():android.net.Uri (m), TRY_ENTER] (LINE:93)\l0x0011: CONST_STR  (r8 I:java.lang.String) =  \"r\" \l0x0013: INVOKE  (r7 I:android.os.ParcelFileDescriptor) = \l  (r1 I:android.content.ContentResolver A[D('resolver' android.content.ContentResolver)])\l  (r7 I:android.net.Uri)\l  (r8 I:java.lang.String)\l  (r12 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal)])\l type: VIRTUAL call: android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, MD:(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor throws java.io.FileNotFoundException (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0017|0x0017: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x001f  (LINE:95)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0019|0x0019: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0064  (LINE:109)\l}"];
Node_61 [shape=record,label="{61\:\ 0x001b|TRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}\lCatch: IOException \-\> 0x0063, Exception \-\> 0x0084\l|0x001b: INVOKE  (r7 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.close():void A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, MD:():void throws java.io.IOException (c), TRY_LEAVE]\l}"];
Node_100 [shape=record,label="{100\:\ 0x0064|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0064|LOOP_END\lLOOP:0: B:56:0x0009\-\>B:82:0x0064\l|0x0064: ARITH  (r5 I:int) = (r5 I:int) + (1 int)  (LINE:92)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0064|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x001f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_63 [shape=record,label="{63\:\ 0x001f|TRY_ENTER\lTryCatch #1 \{all \-\> 0x0057, blocks: (B:63:0x001f, B:67:0x0035, B:69:0x0047, B:70:0x004e), top: B:91:0x001f \}\lCatch: all \-\> 0x0057\l|0x001f: NEW_INSTANCE  (r8 I:android.graphics.fonts.Font$Builder) =  android.graphics.fonts.Font$Builder A[Catch: all \-\> 0x0057, TRY_ENTER] (LINE:98)\l0x0021: INVOKE  \l  (r8 I:android.graphics.fonts.Font$Builder)\l  (r7 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)])\l type: DIRECT call: android.graphics.fonts.Font.Builder.\<init\>(android.os.ParcelFileDescriptor):void A[Catch: all \-\> 0x0057, MD:(android.os.ParcelFileDescriptor):void (c)]\l0x0024: INVOKE  (r9 I:int) = \l  (r6 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getWeight():int A[Catch: all \-\> 0x0057, MD:():int (m)] (LINE:99)\l0x0028: INVOKE  (r8 I:android.graphics.fonts.Font$Builder) = (r8 I:android.graphics.fonts.Font$Builder), (r9 I:int) type: VIRTUAL call: android.graphics.fonts.Font.Builder.setWeight(int):android.graphics.fonts.Font$Builder A[Catch: all \-\> 0x0057, MD:(int):android.graphics.fonts.Font$Builder (c)]\l0x002c: INVOKE  (r9 I:boolean) = \l  (r6 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.isItalic():boolean A[Catch: all \-\> 0x0057, MD:():boolean (m)] (LINE:100)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0030|0x0030: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0034 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0032|0x0032: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0033: GOTO  \-\> 0x0035 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0035|TryCatch #1 \{all \-\> 0x0057, blocks: (B:63:0x001f, B:67:0x0035, B:69:0x0047, B:70:0x004e), top: B:91:0x001f \}\lCatch: all \-\> 0x0057\l|0x0035: INVOKE  (r8 I:android.graphics.fonts.Font$Builder) = (r8 I:android.graphics.fonts.Font$Builder), (r9 I:int) type: VIRTUAL call: android.graphics.fonts.Font.Builder.setSlant(int):android.graphics.fonts.Font$Builder A[Catch: all \-\> 0x0057, MD:(int):android.graphics.fonts.Font$Builder (c)] (LINE:100)\l0x0039: INVOKE  (r9 I:int) = \l  (r6 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getTtcIndex():int A[Catch: all \-\> 0x0057, MD:():int (m)] (LINE:102)\l0x003d: INVOKE  (r8 I:android.graphics.fonts.Font$Builder) = (r8 I:android.graphics.fonts.Font$Builder), (r9 I:int) type: VIRTUAL call: android.graphics.fonts.Font.Builder.setTtcIndex(int):android.graphics.fonts.Font$Builder A[Catch: all \-\> 0x0057, MD:(int):android.graphics.fonts.Font$Builder (c)]\l0x0041: INVOKE  (r8 I:android.graphics.fonts.Font) = (r8 I:android.graphics.fonts.Font$Builder) type: VIRTUAL call: android.graphics.fonts.Font.Builder.build():android.graphics.fonts.Font A[Catch: all \-\> 0x0057, MD:():android.graphics.fonts.Font throws java.io.IOException (c)] (LINE:103)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0045|0x0045: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('familyBuilder' android.graphics.fonts.FontFamily$Builder)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x004e  (LINE:104)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0047|TryCatch #1 \{all \-\> 0x0057, blocks: (B:63:0x001f, B:67:0x0035, B:69:0x0047, B:70:0x004e), top: B:91:0x001f \}\lCatch: all \-\> 0x0057\l|0x0047: NEW_INSTANCE  (r9 I:android.graphics.fonts.FontFamily$Builder) =  android.graphics.fonts.FontFamily$Builder A[Catch: all \-\> 0x0057] (LINE:105)\l0x0049: INVOKE  \l  (r9 I:android.graphics.fonts.FontFamily$Builder)\l  (r8 I:android.graphics.fonts.Font A[D('platformFont' android.graphics.fonts.Font)])\l type: DIRECT call: android.graphics.fonts.FontFamily.Builder.\<init\>(android.graphics.fonts.Font):void A[Catch: all \-\> 0x0057, MD:(android.graphics.fonts.Font):void (c)]\l0x004c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('familyBuilder' android.graphics.fonts.FontFamily$Builder)]) = (r9 I:??[OBJECT, ARRAY]) \l0x004d: GOTO  \-\> 0x0051 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0051|0x0051: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:103:0x0064  (LINE:109)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0053|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}\lCatch: IOException \-\> 0x0063, Exception \-\> 0x0084\l|0x0053: INVOKE  (r7 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.close():void A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE]\l}"];
Node_102 [shape=record,label="{102\:\ 0x0064|SYNTHETIC\l}"];
Node_103 [shape=record,label="{103\:\ 0x0064|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x004e|TRY_LEAVE\lTryCatch #1 \{all \-\> 0x0057, blocks: (B:63:0x001f, B:67:0x0035, B:69:0x0047, B:70:0x004e), top: B:91:0x001f \}\lCatch: all \-\> 0x0057\l|0x004e: INVOKE  \l  (r0 I:android.graphics.fonts.FontFamily$Builder A[D('familyBuilder' android.graphics.fonts.FontFamily$Builder)])\l  (r8 I:android.graphics.fonts.Font A[D('platformFont' android.graphics.fonts.Font)])\l type: VIRTUAL call: android.graphics.fonts.FontFamily.Builder.addFont(android.graphics.fonts.Font):android.graphics.fonts.FontFamily$Builder A[Catch: all \-\> 0x0057, MD:(android.graphics.fonts.Font):android.graphics.fonts.FontFamily$Builder (c), TRY_LEAVE] (LINE:107)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0034|0x0034: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:101)\l}"];
Node_92 [shape=record,label="{92\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_74 [shape=record,label="{74\:\ 0x0057|ExcHandler: all \-\> 0x0057\l|0x0057: MOVE_EXCEPTION  (r8 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0057] (LINE:93)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0058|0x0058: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0062 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0062|TRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}\lCatch: IOException \-\> 0x0063, Exception \-\> 0x0084\l|0x0062: THROW  (r8 I:java.lang.Throwable) A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, TRY_LEAVE]\l}"];
Node_90 [shape=record,label="{90\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_98 [shape=record,label="{98\:\ ?|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_95 [shape=record,label="{95\:\ 0x005a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_76 [shape=record,label="{76\:\ 0x005a|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{all \-\> 0x005e, blocks: (B:76:0x005a), top: B:95:0x005a \}\lCatch: all \-\> 0x005e\l|0x005a: INVOKE  (r7 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.close():void A[Catch: all \-\> 0x005e, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE]\l}"];
Node_96 [shape=record,label="{96\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_78 [shape=record,label="{78\:\ 0x005e|ExcHandler: all \-\> 0x005e\l|0x005e: MOVE_EXCEPTION  (r9 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005e]\l}"];
Node_79 [shape=record,label="{79\:\ 0x005f|TRY_ENTER\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}\lCatch: IOException \-\> 0x0063, Exception \-\> 0x0084\l|0x005f: INVOKE  (r8 I:java.lang.Throwable), (r9 I:java.lang.Throwable) type: VIRTUAL call: java.lang.Throwable.addSuppressed(java.lang.Throwable):void A[Catch: IOException \-\> 0x0063, Exception \-\> 0x0084, MD:(java.lang.Throwable):void (c), TRY_ENTER]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0063|ExcHandler: IOException \-\> 0x0063\l|0x0063: MOVE_EXCEPTION  (r7 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0063] (LINE:109)\l}"];
Node_99 [shape=record,label="{99\:\ 0x0064|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x0067|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0067|0x0067: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('familyBuilder' android.graphics.fonts.FontFamily$Builder)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x006a  (LINE:113)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0069|RETURN\l|0x0069: RETURN  (r2 I:android.graphics.Typeface)  (LINE:114)\l}"];
Node_85 [shape=record,label="{85\:\ 0x006a|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{Exception \-\> 0x0084, blocks: (B:55:0x0006, B:57:0x000b, B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f, B:85:0x006a), top: B:93:0x0006 \}\lCatch: Exception \-\> 0x0084\l|0x006a: INVOKE  (r3 I:android.graphics.fonts.FontFamily) = (r0 I:android.graphics.fonts.FontFamily$Builder A[D('familyBuilder' android.graphics.fonts.FontFamily$Builder)]) type: VIRTUAL call: android.graphics.fonts.FontFamily.Builder.build():android.graphics.fonts.FontFamily A[Catch: Exception \-\> 0x0084, MD:():android.graphics.fonts.FontFamily (c), TRY_ENTER] (LINE:116)\l0x006e: NEW_INSTANCE  (r4 I:android.graphics.Typeface$CustomFallbackBuilder) =  android.graphics.Typeface$CustomFallbackBuilder A[Catch: Exception \-\> 0x0084] (LINE:117)\l0x0070: INVOKE  \l  (r4 I:android.graphics.Typeface$CustomFallbackBuilder)\l  (r3 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily)])\l type: DIRECT call: android.graphics.Typeface.CustomFallbackBuilder.\<init\>(android.graphics.fonts.FontFamily):void A[Catch: Exception \-\> 0x0084, MD:(android.graphics.fonts.FontFamily):void (c)]\l0x0073: INVOKE  (r5 I:android.graphics.fonts.Font) = \l  (r10 I:androidx.core.graphics.TypefaceCompatApi29Impl)\l  (r3 I:android.graphics.fonts.FontFamily A[D('family' android.graphics.fonts.FontFamily)])\l  (r14 I:int A[D('style' int)])\l type: DIRECT call: androidx.core.graphics.TypefaceCompatApi29Impl.findBaseFont(android.graphics.fonts.FontFamily, int):android.graphics.fonts.Font A[Catch: Exception \-\> 0x0084, MD:(android.graphics.fonts.FontFamily, int):android.graphics.fonts.Font (m)] (LINE:118)\l0x0077: INVOKE  (r5 I:android.graphics.fonts.FontStyle) = (r5 I:android.graphics.fonts.Font) type: VIRTUAL call: android.graphics.fonts.Font.getStyle():android.graphics.fonts.FontStyle A[Catch: Exception \-\> 0x0084, MD:():android.graphics.fonts.FontStyle (c)]\l0x007b: INVOKE  (r4 I:android.graphics.Typeface$CustomFallbackBuilder) = (r4 I:android.graphics.Typeface$CustomFallbackBuilder), (r5 I:android.graphics.fonts.FontStyle) type: VIRTUAL call: android.graphics.Typeface.CustomFallbackBuilder.setStyle(android.graphics.fonts.FontStyle):android.graphics.Typeface$CustomFallbackBuilder A[Catch: Exception \-\> 0x0084, MD:(android.graphics.fonts.FontStyle):android.graphics.Typeface$CustomFallbackBuilder (c)]\l0x007f: INVOKE  (r2 I:android.graphics.Typeface) = (r4 I:android.graphics.Typeface$CustomFallbackBuilder) type: VIRTUAL call: android.graphics.Typeface.CustomFallbackBuilder.build():android.graphics.Typeface A[Catch: Exception \-\> 0x0084, MD:():android.graphics.Typeface (c), TRY_LEAVE] (LINE:119)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0083|RETURN\l|0x0083: RETURN  (r2 I:android.graphics.Typeface)  (LINE:117)\l}"];
Node_94 [shape=record,label="{94\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_87 [shape=record,label="{87\:\ 0x0084|ExcHandler: Exception \-\> 0x0084\l|0x0084: MOVE_EXCEPTION  (r3 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0084] (LINE:120)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0085|RETURN\l|0x0085: RETURN  (r2 I:android.graphics.Typeface)  (LINE:121)\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi29Impl.createFromFontInfo((r10 'this' I:androidx.core.graphics.TypefaceCompatApi29Impl A[IMMUTABLE_TYPE, THIS]), (r11 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:82:0x0064 \-\> B:56:0x0009, CROSS_EDGE: B:60:0x0019 \-\> B:82:0x0064, CROSS_EDGE: B:72:0x0053 \-\> B:82:0x0064, CROSS_EDGE: B:71:0x0051 \-\> B:82:0x0064, CROSS_EDGE: B:70:0x004e \-\> B:71:0x0051, CROSS_EDGE: B:66:0x0034 \-\> B:67:0x0035, CROSS_EDGE: B:81:0x0063 \-\> B:82:0x0064, CROSS_EDGE: B:76:0x005a \-\> B:80:0x0062, CROSS_EDGE: B:79:0x005f \-\> B:80:0x0062, CROSS_EDGE: B:95:0x005a \-\> B:78:0x005e, CROSS_EDGE: B:91:0x001f \-\> B:74:0x0057, CROSS_EDGE: B:89:0x000d \-\> B:81:0x0063, CROSS_EDGE: B:84:0x0069 \-\> B:53:?, CROSS_EDGE: B:86:0x0083 \-\> B:53:?, CROSS_EDGE: B:88:0x0085 \-\> B:53:?, CROSS_EDGE: B:93:0x0006 \-\> B:87:0x0084\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0045\-0x0051: r8 'platformFont' Landroid\/graphics\/fonts\/Font;\l  0x0017\-0x0056: r7 'pfd' Landroid\/os\/ParcelFileDescriptor;\l  0x0001\-0x0062: r0 'familyBuilder' Landroid\/graphics\/fonts\/FontFamily$Builder;\l  0x0005\-0x0062: r1 'resolver' Landroid\/content\/ContentResolver;\l  0x000d\-0x0062: r6 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x0062: r11 'context' Landroid\/content\/Context;\l  \-1 \-0x0062: r12 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  \-1 \-0x0062: r13 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x0062: r14 'style' I\l  0x0057\-0x0063: r7 'pfd' Landroid\/os\/ParcelFileDescriptor;\l  0x0063\-0x0064: r6 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x006e\-0x0084: r3 'family' Landroid\/graphics\/fonts\/FontFamily;\l  0x0063\-0x0085: r0 'familyBuilder' Landroid\/graphics\/fonts\/FontFamily$Builder;\l  0x0063\-0x0085: r1 'resolver' Landroid\/content\/ContentResolver;\l  0x0085\-0x0085: r3 'e' Ljava\/lang\/Exception;\l  0x0063\-0x0085: r11 'context' Landroid\/content\/Context;\l  0x0063\-0x0085: r12 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  0x0063\-0x0085: r13 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0063\-0x0085: r14 'style' I\lTryCatch #0 \{IOException \-\> 0x0063, blocks: (B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f), top: B:89:0x000d \}, TryCatch #1 \{all \-\> 0x0057, blocks: (B:63:0x001f, B:67:0x0035, B:69:0x0047, B:70:0x004e), top: B:91:0x001f \}, TryCatch #2 \{Exception \-\> 0x0084, blocks: (B:55:0x0006, B:57:0x000b, B:58:0x000d, B:61:0x001b, B:72:0x0053, B:80:0x0062, B:79:0x005f, B:85:0x006a), top: B:93:0x0006 \}, TryCatch #3 \{all \-\> 0x005e, blocks: (B:76:0x005a), top: B:95:0x005a \}\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[], int):android.graphics.Typeface]\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_93;
Node_93 -> Node_55;
Node_93 -> Node_87;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_97;
Node_57 -> Node_89;
Node_89 -> Node_58;
Node_89 -> Node_81;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_91;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_101;
Node_61 -> Node_100;
Node_100 -> Node_82;
Node_82 -> Node_56;
Node_101 -> Node_82;
Node_91 -> Node_63;
Node_91 -> Node_74;
Node_63 -> Node_64;
Node_63 -> Node_92;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_103;
Node_72 -> Node_102;
Node_102 -> Node_82;
Node_103 -> Node_82;
Node_70 -> Node_71;
Node_66 -> Node_67;
Node_92 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_80;
Node_75 -> Node_95[style=dashed];
Node_80 -> Node_90;
Node_80 -> Node_98;
Node_90 -> Node_81;
Node_98 -> Node_53;
Node_95 -> Node_76;
Node_95 -> Node_78;
Node_76 -> Node_80;
Node_76 -> Node_96;
Node_96 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80;
Node_81 -> Node_99;
Node_99 -> Node_82;
Node_97 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_85;
Node_84 -> Node_53;
Node_85 -> Node_86;
Node_85 -> Node_94;
Node_86 -> Node_53;
Node_94 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_53;
}

