digraph "CFG forandroidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(Landroid\/content\/Context;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;Landroid\/os\/CancellationSignal;)Ljava\/util\/Map;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap  (LINE:221)\l0x0002: INVOKE  (r0 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0005: ARRAY_LENGTH  (r1 I:int) = (r7 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])  (LINE:223)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|LOOP_START\lLOOP:0: B:21:0x0007\-\>B:29:0x0024\l|0x0007: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:32:0x0027 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: AGET  (r3 I:??[OBJECT, ARRAY]) = \l  (r7 I:??[OBJECT, ARRAY][] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])\l  (r2 I:??[int, short, byte, char])\l \l0x000b: INVOKE  (r4 I:int) = \l  (r3 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getResultCode():int A[MD:():int (m)] (LINE:224)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0012 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: INVOKE  (r4 I:android.net.Uri) = \l  (r3 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:228)\l0x0016: INVOKE  (r5 I:boolean) = \l  (r0 I:java.util.HashMap A[D('out' java.util.HashMap\<android.net.Uri, java.nio.ByteBuffer\>)])\l  (r4 I:java.lang.Object A[D('uri' android.net.Uri)])\l type: VIRTUAL call: java.util.HashMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:229)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001d \l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|0x001d: INVOKE  (r5 I:java.nio.ByteBuffer) = \l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r8 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal)])\l  (r4 I:android.net.Uri A[D('uri' android.net.Uri)])\l type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.mmap(android.content.Context, android.os.CancellationSignal, android.net.Uri):java.nio.ByteBuffer A[MD:(android.content.Context, android.os.CancellationSignal, android.net.Uri):java.nio.ByteBuffer (m)] (LINE:233)\l0x0021: INVOKE  \l  (r0 I:java.util.HashMap A[D('out' java.util.HashMap\<android.net.Uri, java.nio.ByteBuffer\>)])\l  (r4 I:java.lang.Object A[D('uri' android.net.Uri)])\l  (r5 I:java.lang.Object A[D('buffer' java.nio.ByteBuffer)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:234)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|LOOP_END\lLOOP:0: B:21:0x0007\-\>B:29:0x0024\l|0x0024: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:223)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: INVOKE  (r1 I:java.util.Map) = (r0 I:java.util.Map A[D('out' java.util.HashMap\<android.net.Uri, java.nio.ByteBuffer\>)]) type: STATIC call: java.util.Collections.unmodifiableMap(java.util.Map):java.util.Map A[MD:\<K, V\>:(java.util.Map\<? extends K, ? extends V\>):java.util.Map\<K, V\> (c)] (LINE:236)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002b|RETURN\l|0x002b: RETURN  (r1 I:java.util.Map\<android.net.Uri, java.nio.ByteBuffer\>) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.util.Map\<android.net.Uri, java.nio.ByteBuffer\> androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer((r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0024 \-\> B:21:0x0007, CROSS_EDGE: B:26:0x001a \-\> B:29:0x0024, CROSS_EDGE: B:23:0x000f \-\> B:29:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0024: r3 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0016\-0x0024: r4 'uri' Landroid\/net\/Uri;\l  0x0021\-0x0024: r5 'buffer' Ljava\/nio\/ByteBuffer;\l  0x0005\-0x002b: r0 'out' Ljava\/util\/HashMap;, signature: Ljava\/util\/HashMap\<Landroid\/net\/Uri;Ljava\/nio\/ByteBuffer;\>;\l  \-1 \-0x002b: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x002b: r7 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x002b: r8 'cancellationSignal' Landroid\/os\/CancellationSignal;\lSIGNATURE: (Landroid\/content\/Context;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;Landroid\/os\/CancellationSignal;)Ljava\/util\/Map\<Landroid\/net\/Uri;Ljava\/nio\/ByteBuffer;\>;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_34[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_35[style=dashed];
Node_28 -> Node_33;
Node_33 -> Node_29;
Node_29 -> Node_21;
Node_35 -> Node_29;
Node_34 -> Node_29;
Node_32 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
}

