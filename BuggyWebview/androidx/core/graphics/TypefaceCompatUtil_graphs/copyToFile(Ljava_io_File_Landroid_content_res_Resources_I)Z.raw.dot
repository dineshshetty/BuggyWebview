digraph "CFG forandroidx.core.graphics.TypefaceCompatUtil.copyToFile(Ljava\/io\/File;Landroid\/content\/res\/Resources;I)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:178)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000e, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: all \-\> 0x000e\l|0x0001: INVOKE  (r1 I:java.io.InputStream) = (r3 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r4 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.openRawResource(int):java.io.InputStream A[Catch: all \-\> 0x000e, MD:(int):java.io.InputStream throws android.content.res.Resources$NotFoundException (c), TRY_ENTER] (LINE:180)\l0x0005: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('is' java.io.InputStream)]) = (r1 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:boolean) = (r2 I:java.io.File A[D('file' java.io.File)]), (r0 I:java.io.InputStream A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File, java.io.InputStream):boolean A[Catch: all \-\> 0x000e, MD:(java.io.File, java.io.InputStream):boolean (m), TRY_LEAVE] (LINE:181)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: INVOKE  (r0 I:java.io.Closeable A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void A[MD:(java.io.Closeable):void (m)] (LINE:183)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:boolean)  (LINE:181)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|ExcHandler: all \-\> 0x000e\l|0x000e: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x000e] (LINE:183)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: INVOKE  (r0 I:java.io.Closeable A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void A[MD:(java.io.Closeable):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: THROW  (r1 I:java.lang.Throwable)  (LINE:184)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile((r2 I:java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0012 \-\> B:12:?, CROSS_EDGE: B:20:0x0001 \-\> B:17:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0012: r0 'is' Ljava\/io\/InputStream;\l  \-1 \-0x0012: r2 'file' Ljava\/io\/File;\l  \-1 \-0x0012: r3 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0012: r4 'id' I\lTryCatch #0 \{all \-\> 0x000e, blocks: (B:14:0x0001), top: B:20:0x0001 \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

