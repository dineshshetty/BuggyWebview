digraph "CFG forandroidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer(Landroid\/content\/Context;Landroid\/content\/res\/Resources;I)Ljava\/nio\/ByteBuffer;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:java.io.File) = (r3 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.getTempFile(android.content.Context):java.io.File A[MD:(android.content.Context):java.io.File (m)] (LINE:136)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:137)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tmpFile' java.io.File)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0008 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:java.nio.ByteBuffer)  (LINE:138)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001b, blocks: (B:22:0x0008, B:26:0x0013), top: B:32:0x0008 \}\lCatch: all \-\> 0x001b\l|0x0008: INVOKE  (r2 I:boolean) = \l  (r0 I:java.io.File A[D('tmpFile' java.io.File)])\l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r5 I:int A[D('id' int)])\l type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File, android.content.res.Resources, int):boolean A[Catch: all \-\> 0x001b, MD:(java.io.File, android.content.res.Resources, int):boolean (m), TRY_ENTER, TRY_LEAVE] (LINE:141)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0013 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: INVOKE  (r0 I:java.io.File A[D('tmpFile' java.io.File)]) type: VIRTUAL call: java.io.File.delete():boolean A[MD:():boolean (c)] (LINE:146)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|RETURN\l|0x0012: RETURN  (r1 I:java.nio.ByteBuffer)  (LINE:142)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x001b, blocks: (B:22:0x0008, B:26:0x0013), top: B:32:0x0008 \}\lCatch: all \-\> 0x001b\l|0x0013: INVOKE  (r1 I:java.nio.ByteBuffer) = (r0 I:java.io.File A[D('tmpFile' java.io.File)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.mmap(java.io.File):java.nio.ByteBuffer A[Catch: all \-\> 0x001b, MD:(java.io.File):java.nio.ByteBuffer (m), TRY_ENTER, TRY_LEAVE] (LINE:144)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: INVOKE  (r0 I:java.io.File A[D('tmpFile' java.io.File)]) type: VIRTUAL call: java.io.File.delete():boolean A[MD:():boolean (c)] (LINE:146)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\l|0x001a: RETURN  (r1 I:java.nio.ByteBuffer)  (LINE:144)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|ExcHandler: all \-\> 0x001b\l|0x001b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001b] (LINE:146)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|0x001c: INVOKE  (r0 I:java.io.File A[D('tmpFile' java.io.File)]) type: VIRTUAL call: java.io.File.delete():boolean A[MD:():boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable)  (LINE:147)\l}"];
MethodNode[shape=record,label="{public static java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.copyToDirectBuffer((r3 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0012 \-\> B:18:?, CROSS_EDGE: B:28:0x001a \-\> B:18:?, CROSS_EDGE: B:31:0x001f \-\> B:18:?, CROSS_EDGE: B:32:0x0008 \-\> B:29:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001f: r0 'tmpFile' Ljava\/io\/File;\l  \-1 \-0x001f: r3 'context' Landroid\/content\/Context;\l  \-1 \-0x001f: r4 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x001f: r5 'id' I\lTryCatch #0 \{all \-\> 0x001b, blocks: (B:22:0x0008, B:26:0x0013), top: B:32:0x0008 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_18;
Node_32 -> Node_22;
Node_32 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_26 -> Node_27;
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_33 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

