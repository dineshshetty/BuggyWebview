digraph "CFG forandroidx.core.graphics.TypefaceCompatUtil.mmap(Ljava\/io\/File;)Ljava\/nio\/ByteBuffer;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0023, blocks: (B:19:0x0000, B:21:0x0015, B:20:0x0005), top: B:32:0x0000 \}\lCatch: IOException \-\> 0x0023\l|0x0000: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch: IOException \-\> 0x0023, TRY_ENTER] (LINE:96)\l0x0002: INVOKE  (r0 I:java.io.FileInputStream), (r7 I:java.io.File A[D('file' java.io.File)]) type: DIRECT call: java.io.FileInputStream.\<init\>(java.io.File):void A[Catch: IOException \-\> 0x0023, MD:(java.io.File):void throws java.io.FileNotFoundException (c), TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0023, blocks: (B:19:0x0000, B:21:0x0015, B:20:0x0005), top: B:32:0x0000 \}\lCatch: all \-\> 0x0019\l|0x0005: INVOKE  (r1 I:java.nio.channels.FileChannel) = (r0 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.getChannel():java.nio.channels.FileChannel A[Catch: all \-\> 0x0019, MD:():java.nio.channels.FileChannel (c), TRY_ENTER] (LINE:97)\l0x0009: INVOKE  (r5 I:long) = (r1 I:java.nio.channels.FileChannel A[D('channel' java.nio.channels.FileChannel)]) type: VIRTUAL call: java.nio.channels.FileChannel.size():long A[Catch: all \-\> 0x0019, MD:():long throws java.io.IOException (c)] (LINE:98)\l0x000d: SGET  (r2 I:java.nio.channels.FileChannel$MapMode) =  java.nio.channels.FileChannel.MapMode.READ_ONLY java.nio.channels.FileChannel$MapMode A[Catch: all \-\> 0x0019] (LINE:99)\l0x000f: CONST  (r3 I:??[long, double]) = (0 ??[long, double]) \l0x0011: INVOKE  (r2 I:java.nio.MappedByteBuffer) = \l  (r1 I:java.nio.channels.FileChannel A[D('channel' java.nio.channels.FileChannel)])\l  (r2 I:java.nio.channels.FileChannel$MapMode)\l  (r3 I:long)\l  (r5 I:long A[D('size' long)])\l type: VIRTUAL call: java.nio.channels.FileChannel.map(java.nio.channels.FileChannel$MapMode, long, long):java.nio.MappedByteBuffer A[Catch: all \-\> 0x0019, MD:(java.nio.channels.FileChannel$MapMode, long, long):java.nio.MappedByteBuffer throws java.io.IOException (c), TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0023, blocks: (B:19:0x0000, B:21:0x0015, B:20:0x0005), top: B:32:0x0000 \}\lCatch: IOException \-\> 0x0023\l|0x0015: INVOKE  (r0 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.close():void A[Catch: IOException \-\> 0x0023, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:100)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\l|0x0018: RETURN  (r2 I:java.nio.ByteBuffer)  (LINE:99)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|ExcHandler: IOException \-\> 0x0023\l|0x0023: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0023] (LINE:100)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|RETURN\l|0x0024: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:101)\l0x0025: RETURN  (r1 I:java.nio.ByteBuffer) \l}"];
MethodNode[shape=record,label="{private static java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.mmap((r7 I:java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0025 \-\> B:18:?, CROSS_EDGE: B:32:0x0000 \-\> B:29:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0019: r1 'channel' Ljava\/nio\/channels\/FileChannel;\l  0x000d\-0x0019: r5 'size' J\l  \-1 \-0x0022: r7 'file' Ljava\/io\/File;\l  0x0005\-0x0023: r0 'fis' Ljava\/io\/FileInputStream;\l  0x0024\-0x0025: r0 'e' Ljava\/io\/IOException;\l  0x0023\-0x0025: r7 'file' Ljava\/io\/File;\lTryCatch #2 \{IOException \-\> 0x0023, blocks: (B:19:0x0000, B:21:0x0015, B:20:0x0005), top: B:32:0x0000 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_32;
Node_32 -> Node_19;
Node_32 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_33;
Node_22 -> Node_18;
Node_33 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
}

