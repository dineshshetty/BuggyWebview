digraph "CFG forandroidx.core.graphics.MatrixKt.translationMatrix$default(FFILjava\/lang\/Object;)Landroid\/graphics\/Matrix;" {
subgraph cluster_Region_859515227 {
label = "R(3:(1:3)|(1:6)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1032846028 {
label = "IF [B:3:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if ((r3 & 1) != 0) goto L3\l}"];
subgraph cluster_Region_1458281011 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r1 = 0.0f\l}"];
}
}
subgraph cluster_IfRegion_2048719904 {
label = "IF [B:6:0x0008] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|if ((r3 & 2) != 0) goto L6\l}"];
subgraph cluster_Region_277312457 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000a|r2 = 0.0f\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x000f|RETURN\l|return translationMatrix(r1, r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 float) = (r1v0 float), (r1v3 float) binds: [B:3:0x0003, B:4:0x0005] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000b|PHI: r2 \l  PHI: (r2v1 float) = (r2v0 float), (r2v2 float) binds: [B:6:0x0008, B:7:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.graphics.Matrix androidx.core.graphics.MatrixKt.translationMatrix$default((r1v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x0008 \-\> B:8:0x000b, CROSS_EDGE: B:3:0x0003 \-\> B:5:0x0006\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_8 -> Node_9;
}

