digraph "CFG forandroidx.core.graphics.MatrixKt.scaleMatrix$default(FFILjava\/lang\/Object;)Landroid\/graphics\/Matrix;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r4 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:45)\l0x0002: CONST  (r0 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: INVOKE  (r1 I:android.graphics.Matrix) = (r1 I:float), (r2 I:float) type: STATIC call: androidx.core.graphics.MatrixKt.scaleMatrix(float, float):android.graphics.Matrix A[MD:(float, float):android.graphics.Matrix (m)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|RETURN\l|0x0012: RETURN  (r1 I:android.graphics.Matrix) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.graphics.Matrix androidx.core.graphics.MatrixKt.scaleMatrix$default((r1 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x000a \-\> B:8:0x000e, CROSS_EDGE: B:3:0x0004 \-\> B:5:0x0008\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

