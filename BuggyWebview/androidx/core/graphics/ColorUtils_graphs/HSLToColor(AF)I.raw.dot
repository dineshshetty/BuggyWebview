digraph "CFG forandroidx.core.graphics.ColorUtils.HSLToColor([F)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:319)\l0x0001: AGET  (r1 I:??[int, float, short, byte, char]) = (r13 I:??[int, float][] A[D('hsl' float[])]), (r0 I:??[int, short, byte, char]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:320)\l0x0004: AGET  (r2 I:??[int, float, short, byte, char]) = (r13 I:??[int, float][] A[D('hsl' float[])]), (r2 I:??[int, short, byte, char]) \l0x0006: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:321)\l0x0007: AGET  (r3 I:??[int, float, short, byte, char]) = (r13 I:??[int, float][] A[D('hsl' float[])]), (r3 I:??[int, short, byte, char]) \l0x0009: CONST  (r4 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:323)\l0x000b: ARITH  (r5 I:float) = (r3 I:float A[D('l' float)]) * (r4 I:float) \l0x000d: CONST  (r6 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x000f: ARITH  (r5 I:float) = (r5 I:float) \- (r6 I:float) \l0x0010: INVOKE  (r5 I:float) = (r5 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0014: ARITH  (r5 I:float) = (r6 I:float) \- (r5 I:float) \l0x0016: ARITH  (r5 I:float) = (r5 I:float) * (r2 I:float A[D('s' float)]) \l0x0018: CONST  (r7 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char])  (LINE:324)\l0x001a: ARITH  (r7 I:float) = (r7 I:float) * (r5 I:float A[D('c' float)]) \l0x001c: ARITH  (r7 I:float) = (r3 I:float A[D('l' float)]) \- (r7 I:float) \l0x001e: CONST  (r8 I:??[int, float, short, byte, char]) = (1114636288(0x42700000, float:60.0) ??[int, float, short, byte, char])  (LINE:325)\l0x0020: ARITH  (r8 I:float) = (r1 I:float A[D('h' float)]) \/ (r8 I:float) \l0x0022: ARITH  (r8 I:float) = (r8 I:float) % (r4 I:float) \l0x0023: ARITH  (r8 I:float) = (r8 I:float) \- (r6 I:float) \l0x0024: INVOKE  (r4 I:float) = (r8 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0028: ARITH  (r6 I:float) = (r6 I:float) \- (r4 I:float) \l0x0029: ARITH  (r6 I:float) = (r6 I:float) * (r5 I:float A[D('c' float)]) \l0x002b: CAST (r4 I:int) = (int) (r1 I:float A[D('h' float)])  (LINE:327)\l0x002c: ARITH  (r4 I:int) = (r4 I:int) \/ (60 int) \l0x002e: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:329)\l0x002f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0031: CONST  (r11 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char])  (LINE:331)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: SWITCH  (r4 I:?? A[D('hueSegment' int)])\l case 0: goto B:23:0x00ab\l case 1: goto B:22:0x0094\l case 2: goto B:21:0x007d\l case 3: goto B:20:0x0066\l case 4: goto B:19:0x004f\l case 5: goto B:18:0x0038\l case 6: goto B:18:0x0038\l default: goto B:24:0x00c2 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:359)\l0x003a: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x003c: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0040: ARITH  (r12 I:float) = (r7 I:float A[D('m' float)]) * (r11 I:float)  (LINE:360)\l0x0042: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0046: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:361)\l0x0048: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x004a: INVOKE  (r10 I:int A[D('b' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:353)\l0x0051: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0053: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0057: ARITH  (r12 I:float) = (r7 I:float A[D('m' float)]) * (r11 I:float)  (LINE:354)\l0x0059: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x005d: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:355)\l0x005f: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0061: INVOKE  (r10 I:int A[D('b' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|0x0066: ARITH  (r12 I:float) = (r7 I:float A[D('m' float)]) * (r11 I:float)  (LINE:348)\l0x0068: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x006c: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:349)\l0x006e: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0070: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0074: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:350)\l0x0076: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0078: INVOKE  (r10 I:int A[D('b' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|0x007d: ARITH  (r12 I:float) = (r7 I:float A[D('m' float)]) * (r11 I:float)  (LINE:343)\l0x007f: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0083: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:344)\l0x0085: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0087: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x008b: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:345)\l0x008d: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x008f: INVOKE  (r10 I:int A[D('b' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0094|0x0094: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:338)\l0x0096: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x0098: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x009c: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:339)\l0x009e: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00a0: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00a4: ARITH  (r11 I:float) = (r11 I:float) * (r7 I:float A[D('m' float)])  (LINE:340)\l0x00a6: INVOKE  (r10 I:int A[D('b' int)]) = (r11 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x00ab|0x00ab: ARITH  (r12 I:float) = (r5 I:float A[D('c' float)]) + (r7 I:float A[D('m' float)])  (LINE:333)\l0x00ad: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00af: INVOKE  (r8 I:int A[D('r' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00b3: ARITH  (r12 I:float) = (r6 I:float A[D('x' float)]) + (r7 I:float A[D('m' float)])  (LINE:334)\l0x00b5: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00b7: INVOKE  (r9 I:int A[D('g' int)]) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x00bb: ARITH  (r11 I:float) = (r11 I:float) * (r7 I:float A[D('m' float)])  (LINE:335)\l0x00bd: INVOKE  (r10 I:int A[D('b' int)]) = (r11 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00c2|0x00c2: CONST  (r11 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:365)\l0x00c4: INVOKE  (r8 I:int A[D('r' int)]) = (r8 I:int A[D('r' int)]), (r0 I:int), (r11 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(int, int, int):int A[MD:(int, int, int):int (m)]\l0x00c8: INVOKE  (r9 I:int A[D('g' int)]) = (r9 I:int A[D('g' int)]), (r0 I:int), (r11 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(int, int, int):int A[MD:(int, int, int):int (m)] (LINE:366)\l0x00cc: INVOKE  (r0 I:int) = (r10 I:int A[D('b' int)]), (r0 I:int), (r11 I:int) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(int, int, int):int A[MD:(int, int, int):int (m)] (LINE:367)\l0x00d0: INVOKE  (r10 I:int) = (r8 I:int A[D('r' int)]), (r9 I:int A[D('g' int)]), (r0 I:int A[D('b' int)]) type: STATIC call: android.graphics.Color.rgb(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:369)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00d4|RETURN\l|0x00d4: RETURN  (r10 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static int androidx.core.graphics.ColorUtils.HSLToColor((r13 I:float[] A[D('hsl' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x004f \-\> B:24:0x00c2, CROSS_EDGE: B:20:0x0066 \-\> B:24:0x00c2, CROSS_EDGE: B:21:0x007d \-\> B:24:0x00c2, CROSS_EDGE: B:22:0x0094 \-\> B:24:0x00c2, CROSS_EDGE: B:23:0x00ab \-\> B:24:0x00c2, CROSS_EDGE: B:16:0x0033 \-\> B:24:0x00c2\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x00d0: r10 'b' I\l  0x00d0\-0x00e7: r0 'b' I\l  0x0003\-0x00e7: r1 'h' F\l  0x0006\-0x00e7: r2 's' F\l  0x0009\-0x00e7: r3 'l' F\l  0x002e\-0x00e7: r4 'hueSegment' I\l  0x0018\-0x00e7: r5 'c' F\l  0x002b\-0x00e7: r6 'x' F\l  0x001e\-0x00e7: r7 'm' F\l  0x002f\-0x00e7: r8 'r' I\l  0x0030\-0x00e7: r9 'g' I\l  \-1 \-0x00e7: r13 'hsl' [F\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19;
Node_16 -> Node_20;
Node_16 -> Node_21;
Node_16 -> Node_22;
Node_16 -> Node_23;
Node_16 -> Node_24;
Node_18 -> Node_24;
Node_19 -> Node_24;
Node_20 -> Node_24;
Node_21 -> Node_24;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

