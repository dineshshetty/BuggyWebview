digraph "CFG forandroidx.core.graphics.ColorUtils.RGBToHSL(III[F)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('r' int)])  (LINE:254)\l0x0002: CAST (r1 I:float) = (float) (r0 I:int) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x0005: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0006: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('g' int)])  (LINE:255)\l0x0008: CAST (r4 I:float) = (float) (r3 I:int) \l0x0009: ARITH  (r4 I:float) = (r4 I:float) \/ (r2 I:float) \l0x000a: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('b' int)])  (LINE:256)\l0x000c: CAST (r6 I:float) = (float) (r5 I:int) \l0x000d: ARITH  (r6 I:float) = (r6 I:float) \/ (r2 I:float) \l0x000e: INVOKE  (r2 I:float) = (r4 I:float A[D('gf' float)]), (r6 I:float A[D('bf' float)]) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)] (LINE:258)\l0x0012: INVOKE  (r2 I:float) = (r1 I:float A[D('rf' float)]), (r2 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x0016: INVOKE  (r7 I:float) = (r4 I:float A[D('gf' float)]), (r6 I:float A[D('bf' float)]) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:259)\l0x001a: INVOKE  (r7 I:float) = (r1 I:float A[D('rf' float)]), (r7 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x001e: ARITH  (r8 I:float) = (r2 I:float A[D('max' float)]) \- (r7 I:float A[D('min' float)])  (LINE:260)\l0x0020: ARITH  (r9 I:float) = (r2 I:float A[D('max' float)]) + (r7 I:float A[D('min' float)])  (LINE:263)\l0x0022: CONST  (r10 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0024: ARITH  (r9 I:float) = (r9 I:float) \/ (r10 I:float) \l0x0025: CONST  (r11 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:265)\l0x0027: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0028: CMP_L  (r13 I:int) = (r2 I:float A[D('max' float)]), (r7 I:float A[D('min' float)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002f \l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|0x002c: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:267)\l0x002d: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0054|0x0054: CONST  (r14 I:??[int, float, short, byte, char]) = (1114636288(0x42700000, float:60.0) ??[int, float, short, byte, char])  (LINE:280)\l0x0056: ARITH  (r14 I:float) = (r14 I:float) * (r13 I:float A[D('h' float)]) \l0x0058: CONST  (r15 I:??[int, float, short, byte, char]) = (1135869952(0x43b40000, float:360.0) ??[int, float, short, byte, char]) \l0x005a: ARITH  (r14 I:float) = (r14 I:float) % (r15 I:float) \l0x005b: CMP_G  (r13 I:int A[D('h' float)]) = (r14 I:float A[D('h' float)]), (r12 I:float)  (LINE:281)\l}"];
Node_32 [shape=record,label="{32\:\ 0x005d|0x005d: IF  (r13 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0060 \l}"];
Node_33 [shape=record,label="{33\:\ 0x005f|0x005f: ARITH  (r14 I:float) = (r14 I:float A[D('h' float)]) + (r15 I:float)  (LINE:282)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0060|0x0060: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:285)\l0x0061: INVOKE  (r15 I:float) = (r14 I:float A[D('h' float)]), (r12 I:float), (r15 I:float) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(float, float, float):float A[MD:(float, float, float):float (m)]\l0x0065: APUT  \l  (r19 I:??[int, float][] A[D('outHsl' float[])])\l  (r13 I:??[int, short, byte, char])\l  (r15 I:??[int, float, short, byte, char])\l \l0x0067: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:286)\l0x0068: INVOKE  (r15 I:float) = (r10 I:float A[D('s' float)]), (r12 I:float), (r11 I:float) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(float, float, float):float A[MD:(float, float, float):float (m)]\l0x006c: APUT  \l  (r19 I:??[int, float][] A[D('outHsl' float[])])\l  (r13 I:??[int, short, byte, char])\l  (r15 I:??[int, float, short, byte, char])\l \l0x006e: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:287)\l0x006f: INVOKE  (r11 I:float) = (r9 I:float A[D('l' float)]), (r12 I:float), (r11 I:float) type: STATIC call: androidx.core.graphics.ColorUtils.constrain(float, float, float):float A[MD:(float, float, float):float (m)]\l0x0073: APUT  \l  (r19 I:??[int, float][] A[D('outHsl' float[])])\l  (r13 I:??[int, short, byte, char])\l  (r11 I:??[int, float, short, byte, char])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0075|RETURN\l|0x0075: RETURN    (LINE:288)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|0x002f: CMP_L  (r13 I:int A[D('h' float)]) = (r2 I:float A[D('max' float)]), (r1 I:float A[D('rf' float)])  (LINE:269)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0031|0x0031: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x003a \l}"];
Node_25 [shape=record,label="{25\:\ 0x0033|0x0033: ARITH  (r13 I:float) = (r4 I:float A[D('gf' float)]) \- (r6 I:float A[D('bf' float)])  (LINE:270)\l0x0035: ARITH  (r13 I:float) = (r13 I:float) \/ (r8 I:float A[D('deltaMaxMin' float)]) \l0x0036: CONST  (r14 I:??[int, float, short, byte, char]) = (1086324736(0x40c00000, float:6.0) ??[int, float, short, byte, char]) \l0x0038: ARITH  (r13 I:float) = (r13 I:float) % (r14 I:float) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0049|0x0049: ARITH  (r10 I:float) = (r10 I:float) * (r9 I:float A[D('l' float)])  (LINE:277)\l0x004b: ARITH  (r10 I:float) = (r10 I:float) \- (r11 I:float) \l0x004c: INVOKE  (r10 I:float) = (r10 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0050: ARITH  (r10 I:float) = (r11 I:float) \- (r10 I:float) \l0x0052: ARITH  (r10 I:float) = (r8 I:float A[D('deltaMaxMin' float)]) \/ (r10 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|0x003a: CMP_L  (r13 I:int A[D('h' float)]) = (r2 I:float A[D('max' float)]), (r4 I:float A[D('gf' float)])  (LINE:271)\l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|0x003c: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0043 \l}"];
Node_28 [shape=record,label="{28\:\ 0x003e|0x003e: ARITH  (r13 I:float) = (r6 I:float A[D('bf' float)]) \- (r1 I:float A[D('rf' float)])  (LINE:272)\l0x0040: ARITH  (r13 I:float) = (r13 I:float) \/ (r8 I:float A[D('deltaMaxMin' float)]) \l0x0041: ARITH  (r13 I:float) = (r13 I:float) + (r10 I:float) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|0x0043: ARITH  (r13 I:float A[D('h' float)]) = (r1 I:float A[D('rf' float)]) \- (r4 I:float A[D('gf' float)])  (LINE:274)\l0x0045: ARITH  (r13 I:float) = (r13 I:float) \/ (r8 I:float A[D('deltaMaxMin' float)]) \l0x0046: CONST  (r14 I:??[int, float, short, byte, char]) = (1082130432(0x40800000, float:4.0) ??[int, float, short, byte, char]) \l0x0048: ARITH  (r13 I:float) = (r13 I:float) + (r14 I:float) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.ColorUtils.RGBToHSL((r16 I:int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('g' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:float[] A[D('outHsl' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x005d \-\> B:34:0x0060, CROSS_EDGE: B:30:0x0049 \-\> B:31:0x0054, CROSS_EDGE: B:28:0x003e \-\> B:30:0x0049, CROSS_EDGE: B:29:0x0043 \-\> B:30:0x0049\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002d\-0x002f: r10 's' F\l  0x002e\-0x002f: r13 'h' F\l  0x0039\-0x003a: r13 'h' F\l  0x0042\-0x0043: r13 'h' F\l  0x0049\-0x005b: r13 'h' F\l  0x0006\-0x0075: r1 'rf' F\l  0x0016\-0x0075: r2 'max' F\l  0x000a\-0x0075: r4 'gf' F\l  0x000e\-0x0075: r6 'bf' F\l  0x001e\-0x0075: r7 'min' F\l  0x0020\-0x0075: r8 'deltaMaxMin' F\l  0x0025\-0x0075: r9 'l' F\l  0x0054\-0x0075: r10 's' F\l  0x005b\-0x0075: r14 'h' F\l  \-1 \-0x0075: r16 'r' I\l  \-1 \-0x0075: r17 'g' I\l  \-1 \-0x0075: r18 'b' I\l  \-1 \-0x0075: r19 'outHsl' [F\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_30;
Node_30 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
}

