digraph "CFG forandroidx.core.graphics.ColorUtils.blendHSL([F[FF[F)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r7.length != 3) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|float r0 = 1.0f \- r6\lr7[0] = circularInterpolate(r4[0], r5[0], r6)\lr7[1] = (r4[1] * r0) + (r5[1] * r6)\lr7[2] = (r4[2] * r0) + (r5[2] * r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b}"];
Node_15 [shape=record,label="{15\:\ 0x0032|throw new java.lang.IllegalArgumentException(\"result must have a length of 3.\")\l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.ColorUtils.blendHSL((r4v0 'hsl1' float[] A[D('hsl1' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'hsl2' float[] A[D('hsl2' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'ratio' float A[D('ratio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'outResult' float[] A[D('outResult' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0032 \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

