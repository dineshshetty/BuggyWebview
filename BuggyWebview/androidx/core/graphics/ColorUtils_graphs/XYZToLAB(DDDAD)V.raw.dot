digraph "CFG forandroidx.core.graphics.ColorUtils.XYZToLAB(DDD[D)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r13 I:??[] A[D('outLab' double[])])  (LINE:494)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: CONST  (r0 I:??[long, double]) = (4636388754964724318(0x4057c3020c49ba5e, double:95.047) ??[long, double])  (LINE:497)\l0x0009: ARITH  (r0 I:double) = (r7 I:double A[D('x' double)]) \/ (r0 I:double) \l0x000b: INVOKE  (r7 I:double A[D('x' double)]) = (r0 I:double) type: STATIC call: androidx.core.graphics.ColorUtils.pivotXyzComponent(double):double A[MD:(double):double (m)]\l0x000f: CONST  (r0 I:??[long, double]) = (4636737291354636288(0x4059000000000000, double:100.0) ??[long, double])  (LINE:498)\l0x0011: ARITH  (r0 I:double) = (r9 I:double A[D('y' double)]) \/ (r0 I:double) \l0x0013: INVOKE  (r9 I:double A[D('y' double)]) = (r0 I:double) type: STATIC call: androidx.core.graphics.ColorUtils.pivotXyzComponent(double):double A[MD:(double):double (m)]\l0x0017: CONST  (r0 I:??[long, double]) = (4637362376909166477(0x405b3883126e978d, double:108.883) ??[long, double])  (LINE:499)\l0x001c: ARITH  (r0 I:double) = (r11 I:double A[D('z' double)]) \/ (r0 I:double) \l0x001e: INVOKE  (r11 I:double A[D('z' double)]) = (r0 I:double) type: STATIC call: androidx.core.graphics.ColorUtils.pivotXyzComponent(double):double A[MD:(double):double (m)]\l0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:500)\l0x0023: CONST  (r1 I:??[long, double]) = (0 ??[long, double]) \l0x0025: CONST  (r3 I:??[long, double]) = (4637863191261478912(0x405d000000000000, double:116.0) ??[long, double]) \l0x0027: ARITH  (r3 I:double) = (r3 I:double) * (r9 I:double A[D('y' double)]) \l0x0029: CONST  (r5 I:??[long, double]) = (4625196817309499392(0x4030000000000000, double:16.0) ??[long, double]) \l0x002b: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) \l0x002c: INVOKE  (r1 I:double) = (r1 I:double), (r3 I:double) type: STATIC call: java.lang.Math.max(double, double):double A[MD:(double, double):double (c)]\l0x0030: APUT  (r13 I:??[long, double][] A[D('outLab' double[])]), (r0 I:??[int, short, byte, char]), (r1 I:??[long, double]) \l0x0032: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:501)\l0x0033: CONST  (r1 I:??[long, double]) = (4647503709213818880(0x407f400000000000, double:500.0) ??[long, double]) \l0x0038: ARITH  (r3 I:double) = (r7 I:double A[D('x' double)]) \- (r9 I:double A[D('y' double)]) \l0x003a: ARITH  (r3 I:double) = (r3 I:double) * (r1 I:double) \l0x003c: APUT  (r13 I:??[long, double][] A[D('outLab' double[])]), (r0 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x003e: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:502)\l0x003f: CONST  (r1 I:??[long, double]) = (4641240890982006784(0x4069000000000000, double:200.0) ??[long, double]) \l0x0041: ARITH  (r3 I:double) = (r9 I:double A[D('y' double)]) \- (r11 I:double A[D('z' double)]) \l0x0043: ARITH  (r3 I:double) = (r3 I:double) * (r1 I:double) \l0x0045: APUT  (r13 I:??[long, double][] A[D('outLab' double[])]), (r0 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|RETURN\l|0x0047: RETURN    (LINE:503)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:495)\l0x004a: CONST_STR  (r1 I:java.lang.String) =  \"outLab must have a length of 3.\" \l0x004c: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.ColorUtils.XYZToLAB((r7 I:double A[D('x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[D('y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double A[D('z' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double[] A[D('outLab' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x004f \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x004f: r7 'x' D\l  \-1 \-0x004f: r9 'y' D\l  \-1 \-0x004f: r11 'z' D\l  \-1 \-0x004f: r13 'outLab' [D\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

