digraph "CFG forandroidx.core.graphics.ColorUtils.blendLAB([D[DD[D)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r11 I:??[] A[D('outResult' double[])])  (LINE:675)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: CONST  (r0 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double])  (LINE:678)\l0x0006: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double A[D('ratio' double)]) \l0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:679)\l0x0008: AGET  (r3 I:??[long, double]) = (r7 I:??[long, double][] A[D('lab1' double[])]), (r2 I:??[int, short, byte, char]) \l0x000a: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double A[D('inverseRatio' double)]) \l0x000c: AGET  (r5 I:??[long, double]) = (r8 I:??[long, double][] A[D('lab2' double[])]), (r2 I:??[int, short, byte, char]) \l0x000e: ARITH  (r5 I:double) = (r5 I:double) * (r9 I:double A[D('ratio' double)]) \l0x0010: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l0x0011: APUT  (r11 I:??[long, double][] A[D('outResult' double[])]), (r2 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:680)\l0x0014: AGET  (r3 I:??[long, double]) = (r7 I:??[long, double][] A[D('lab1' double[])]), (r2 I:??[int, short, byte, char]) \l0x0016: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double A[D('inverseRatio' double)]) \l0x0018: AGET  (r5 I:??[long, double]) = (r8 I:??[long, double][] A[D('lab2' double[])]), (r2 I:??[int, short, byte, char]) \l0x001a: ARITH  (r5 I:double) = (r5 I:double) * (r9 I:double A[D('ratio' double)]) \l0x001c: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l0x001d: APUT  (r11 I:??[long, double][] A[D('outResult' double[])]), (r2 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l0x001f: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:681)\l0x0020: AGET  (r3 I:??[long, double]) = (r7 I:??[long, double][] A[D('lab1' double[])]), (r2 I:??[int, short, byte, char]) \l0x0022: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double A[D('inverseRatio' double)]) \l0x0024: AGET  (r5 I:??[long, double]) = (r8 I:??[long, double][] A[D('lab2' double[])]), (r2 I:??[int, short, byte, char]) \l0x0026: ARITH  (r5 I:double) = (r5 I:double) * (r9 I:double A[D('ratio' double)]) \l0x0028: ARITH  (r3 I:double) = (r3 I:double) + (r5 I:double) \l0x0029: APUT  (r11 I:??[long, double][] A[D('outResult' double[])]), (r2 I:??[int, short, byte, char]), (r3 I:??[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|RETURN\l|0x002b: RETURN    (LINE:682)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('inverseRatio' double)]) =  java.lang.IllegalArgumentException  (LINE:676)\l0x002e: CONST_STR  (r1 I:java.lang.String) =  \"outResult must have a length of 3.\" \l0x0030: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.ColorUtils.blendLAB((r7 I:double[] A[D('lab1' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double[] A[D('lab2' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[D('ratio' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double[] A[D('outResult' double[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0033 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x002c: r0 'inverseRatio' D\l  \-1 \-0x0033: r7 'lab1' [D\l  \-1 \-0x0033: r8 'lab2' [D\l  \-1 \-0x0033: r9 'ratio' D\l  \-1 \-0x0033: r11 'outResult' [D\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

