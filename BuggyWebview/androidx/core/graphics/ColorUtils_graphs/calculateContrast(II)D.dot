digraph "CFG forandroidx.core.graphics.ColorUtils.calculateContrast(II)D" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0006|if (android.graphics.Color.alpha(r9) != 255) goto L9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008}"];
Node_16 [shape=record,label="{16\:\ 0x000c|if (android.graphics.Color.alpha(r8) \>= 255) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|int r8 = compositeColors(r8, r9)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|PHI: r8 \l  PHI: (r8v1 'foreground' int) = (r8v0 'foreground' int), (r8v2 'foreground' int) binds: [B:16:0x000c, B:17:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|double r0 = calculateLuminance(r8) + 0.05d\ldouble r4 = calculateLuminance(r9) + 0.05d\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|return java.lang.Math.max(r0, r4) \/ java.lang.Math.min(r0, r4)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"background can not be translucent: #\")\lr1.append(java.lang.Integer.toHexString(r9))\l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static double androidx.core.graphics.ColorUtils.calculateContrast((r8v0 'foreground' int A[D('foreground' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'background' int A[D('background' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000c \-\> B:18:0x0012, CROSS_EDGE: B:21:0x0045 \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

