digraph "CFG forandroidx.core.graphics.PathParser.createPathFromPathData(Ljava\/lang\/String;)Landroid\/graphics\/Path;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.graphics.Path) =  android.graphics.Path  (LINE:73)\l0x0002: INVOKE  (r0 I:android.graphics.Path) type: DIRECT call: android.graphics.Path.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:androidx.core.graphics.PathParser$PathDataNode[]) = (r6 I:java.lang.String A[D('pathData' java.lang.String)]) type: STATIC call: androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):androidx.core.graphics.PathParser$PathDataNode[] A[MD:(java.lang.String):androidx.core.graphics.PathParser$PathDataNode[] (m)] (LINE:74)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nodes' androidx.core.graphics.PathParser$PathDataNode[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0028  (LINE:75)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|RETURN\l|0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.RuntimeException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:83)\l0x0029: RETURN  (r2 I:android.graphics.Path) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{RuntimeException \-\> 0x0010, blocks: (B:17:0x000b), top: B:24:0x000b \}\lCatch: RuntimeException \-\> 0x0010\l|0x000b: INVOKE  \l  (r1 I:androidx.core.graphics.PathParser$PathDataNode[] A[D('nodes' androidx.core.graphics.PathParser$PathDataNode[])])\l  (r0 I:android.graphics.Path A[D('path' android.graphics.Path)])\l type: STATIC call: androidx.core.graphics.PathParser.PathDataNode.nodesToPath(androidx.core.graphics.PathParser$PathDataNode[], android.graphics.Path):void A[Catch: RuntimeException \-\> 0x0010, MD:(androidx.core.graphics.PathParser$PathDataNode[], android.graphics.Path):void (m), TRY_ENTER, TRY_LEAVE] (LINE:77)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:android.graphics.Path A[D('path' android.graphics.Path)])  (LINE:81)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|ExcHandler: RuntimeException \-\> 0x0010\l|0x0010: MOVE_EXCEPTION  (r2 I:java.lang.RuntimeException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: RuntimeException \-\> 0x0010] (LINE:78)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:79)\l0x0013: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0015: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0018: CONST_STR  (r5 I:java.lang.String) =  \"Error in parsing \" \l0x001a: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: INVOKE  (r4 I:java.lang.StringBuilder), (r6 I:java.lang.String A[D('pathData' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0024: INVOKE  \l  (r3 I:java.lang.RuntimeException)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('e' java.lang.RuntimeException)])\l type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|0x0027: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Path androidx.core.graphics.PathParser.createPathFromPathData((r6 I:java.lang.String A[D('pathData' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000f \-\> B:14:?, CROSS_EDGE: B:21:0x0027 \-\> B:14:?, CROSS_EDGE: B:24:0x000b \-\> B:19:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0028: r2 'e' Ljava\/lang\/RuntimeException;\l  0x0005\-0x0029: r0 'path' Landroid\/graphics\/Path;\l  0x0009\-0x0029: r1 'nodes' [Landroidx\/core\/graphics\/PathParser$PathDataNode;\l  \-1 \-0x0029: r6 'pathData' Ljava\/lang\/String;\lTryCatch #0 \{RuntimeException \-\> 0x0010, blocks: (B:17:0x000b), top: B:24:0x000b \}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_22;
Node_16 -> Node_24[style=dashed];
Node_22 -> Node_14;
Node_24 -> Node_17;
Node_24 -> Node_19;
Node_17 -> Node_18;
Node_17 -> Node_25;
Node_18 -> Node_14;
Node_25 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_14;
}

