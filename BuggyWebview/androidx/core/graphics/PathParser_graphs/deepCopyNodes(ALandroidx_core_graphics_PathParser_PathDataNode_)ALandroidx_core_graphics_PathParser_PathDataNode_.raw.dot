digraph "CFG forandroidx.core.graphics.PathParser.deepCopyNodes([Landroidx\/core\/graphics\/PathParser$PathDataNode;)[Landroidx\/core\/graphics\/PathParser$PathDataNode;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' androidx.core.graphics.PathParser$PathDataNode[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0004  (LINE:120)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:121)\l0x0003: RETURN  (r0 I:androidx.core.graphics.PathParser$PathDataNode[]) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: ARRAY_LENGTH  (r0 I:int) = (r4 I:??[] A[D('source' androidx.core.graphics.PathParser$PathDataNode[])])  (LINE:123)\l0x0005: NEW_ARRAY  (r0 I:androidx.core.graphics.PathParser$PathDataNode[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: androidx.core.graphics.PathParser$PathDataNode[] \l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:124)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|LOOP_START\lLOOP:0: B:17:0x0008\-\>B:19:0x000b\l|0x0008: ARRAY_LENGTH  (r2 I:int) = (r4 I:??[] A[D('source' androidx.core.graphics.PathParser$PathDataNode[])]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:21:0x0017 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|LOOP_END\lLOOP:0: B:17:0x0008\-\>B:19:0x000b\l|0x000b: NEW_INSTANCE  (r2 I:androidx.core.graphics.PathParser$PathDataNode) =  androidx.core.graphics.PathParser$PathDataNode  (LINE:125)\l0x000d: AGET  (r3 I:??[OBJECT, ARRAY]) = \l  (r4 I:??[OBJECT, ARRAY][] A[D('source' androidx.core.graphics.PathParser$PathDataNode[])])\l  (r1 I:??[int, short, byte, char] A[D('i' int)])\l \l0x000f: INVOKE  (r2 I:androidx.core.graphics.PathParser$PathDataNode), (r3 I:androidx.core.graphics.PathParser$PathDataNode) type: DIRECT call: androidx.core.graphics.PathParser.PathDataNode.\<init\>(androidx.core.graphics.PathParser$PathDataNode):void A[MD:(androidx.core.graphics.PathParser$PathDataNode):void (m)]\l0x0012: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('copy' androidx.core.graphics.PathParser$PathDataNode[])])\l  (r1 I:??[int, short, byte, char] A[D('i' int)])\l  (r2 I:??[OBJECT, ARRAY])\l \l0x0014: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:124)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:androidx.core.graphics.PathParser$PathDataNode[] A[D('copy' androidx.core.graphics.PathParser$PathDataNode[])])  (LINE:127)\l}"];
MethodNode[shape=record,label="{public static androidx.core.graphics.PathParser$PathDataNode[] androidx.core.graphics.PathParser.deepCopyNodes((r4 I:androidx.core.graphics.PathParser$PathDataNode[] A[D('source' androidx.core.graphics.PathParser$PathDataNode[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x000b \-\> B:17:0x0008, CROSS_EDGE: B:20:0x0017 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0017: r1 'i' I\l  0x0007\-0x0017: r0 'copy' [Landroidx\/core\/graphics\/PathParser$PathDataNode;\l  \-1 \-0x0017: r4 'source' [Landroidx\/core\/graphics\/PathParser$PathDataNode;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_17;
Node_21 -> Node_20;
Node_20 -> Node_12;
}

