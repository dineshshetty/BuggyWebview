digraph "CFG forandroidx.core.graphics.TypefaceCompatApi28Impl.obtainCreateFromFamiliesWithDefaultMethod(Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Method;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:61)\l0x0001: INVOKE  (r1 I:java.lang.Object) = (r7 I:java.lang.Class A[D('fontFamily' java.lang.Class\<?\>)]), (r0 I:int) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object A[MD:(java.lang.Class\<?\>, int):java.lang.Object throws java.lang.NegativeArraySizeException (c)]\l0x0005: CONST_CLASS  (r2 I:java.lang.Class\<android.graphics.Typeface\>) =  android.graphics.Typeface.class  (LINE:62)\l0x0007: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0008: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] \l0x000a: INVOKE  (r4 I:java.lang.Class) = (r1 I:java.lang.Object A[D('familyArray' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:63)\l0x000e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x0011: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0013: APUT  (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x0015: SGET  (r4 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class \l0x0017: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0018: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x001a: SGET  (r4 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class \l0x001c: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x001d: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"createFromFamiliesWithDefault\"  (LINE:62)\l0x0021: INVOKE  (r2 I:java.lang.reflect.Method) = (r2 I:java.lang.Class), (r4 I:java.lang.String), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0025: INVOKE  (r2 I:java.lang.reflect.Method A[D('m' java.lang.reflect.Method)]), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[MD:(boolean):void (s)] (LINE:64)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|RETURN\l|0x0028: RETURN  (r2 I:java.lang.reflect.Method A[D('m' java.lang.reflect.Method)])  (LINE:65)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected java.lang.reflect.Method androidx.core.graphics.TypefaceCompatApi28Impl.obtainCreateFromFamiliesWithDefaultMethod((r6 'this' I:androidx.core.graphics.TypefaceCompatApi28Impl A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Class\<?\> A[D('fontFamily' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0028: r1 'familyArray' Ljava\/lang\/Object;\l  0x0025\-0x0028: r2 'm' Ljava\/lang\/reflect\/Method;\l  0x0000\-0x0028: r7 'fontFamily' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\lEXCEPTIONS:[Ljava\/lang\/NoSuchMethodException;]\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)Ljava\/lang\/reflect\/Method;\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatApi26Impl.obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class\<?\>):java.lang.reflect.Method]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

