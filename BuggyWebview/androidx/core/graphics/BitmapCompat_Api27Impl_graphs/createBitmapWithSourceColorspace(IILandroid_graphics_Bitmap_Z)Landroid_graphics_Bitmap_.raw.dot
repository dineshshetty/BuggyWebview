digraph "CFG forandroidx.core.graphics.BitmapCompat.Api27Impl.createBitmapWithSourceColorspace(IILandroid\/graphics\/Bitmap;Z)Landroid\/graphics\/Bitmap;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:android.graphics.Bitmap$Config) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config A[MD:():android.graphics.Bitmap$Config (c)] (LINE:373)\l0x0004: INVOKE  (r1 I:android.graphics.ColorSpace) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getColorSpace():android.graphics.ColorSpace A[MD:():android.graphics.ColorSpace (c)] (LINE:374)\l0x0008: SGET  (r2 I:android.graphics.ColorSpace$Named) =  android.graphics.ColorSpace.Named.LINEAR_EXTENDED_SRGB android.graphics.ColorSpace$Named  (LINE:375)\l0x000a: INVOKE  (r2 I:android.graphics.ColorSpace) = (r2 I:android.graphics.ColorSpace$Named) type: STATIC call: android.graphics.ColorSpace.get(android.graphics.ColorSpace$Named):android.graphics.ColorSpace A[MD:(android.graphics.ColorSpace$Named):android.graphics.ColorSpace (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('linear' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001e  (LINE:376)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: INVOKE  (r3 I:android.graphics.ColorSpace) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getColorSpace():android.graphics.ColorSpace A[MD:():android.graphics.ColorSpace (c)]\l0x0014: INVOKE  (r3 I:boolean) = (r3 I:android.graphics.ColorSpace), (r2 I:java.lang.Object A[D('linearCs' android.graphics.ColorSpace)]) type: VIRTUAL call: android.graphics.ColorSpace.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001e \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: SGET  (r0 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)]) =  android.graphics.Bitmap.Config.RGBA_F16 android.graphics.Bitmap$Config  (LINE:378)\l0x001c: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('colorSpace' android.graphics.ColorSpace)]) = (r2 I:??[OBJECT, ARRAY] A[D('linearCs' android.graphics.ColorSpace)])  (LINE:379)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|0x0032: INVOKE  (r3 I:boolean) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.hasAlpha():boolean A[MD:():boolean (c)] (LINE:386)\l0x0036: INVOKE  (r3 I:android.graphics.Bitmap) = \l  (r5 I:int A[D('w' int)])\l  (r6 I:int A[D('h' int)])\l  (r0 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)])\l  (r3 I:boolean)\l  (r1 I:android.graphics.ColorSpace A[D('colorSpace' android.graphics.ColorSpace)])\l type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config, boolean, android.graphics.ColorSpace):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config, boolean, android.graphics.ColorSpace):android.graphics.Bitmap (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|RETURN\l|0x003a: RETURN  (r3 I:android.graphics.Bitmap) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001e|0x001e: INVOKE  (r3 I:android.graphics.Bitmap$Config) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config A[MD:():android.graphics.Bitmap$Config (c)] (LINE:380)\l0x0022: SGET  (r4 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.HARDWARE android.graphics.Bitmap$Config \l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|0x0024: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0032 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: SGET  (r0 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)]) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:381)\l0x0028: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:382)\l0x002a: CONST  (r4 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|0x002c: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:26:0x0032 \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: INVOKE  (r0 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)]) = (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap)]) type: STATIC call: androidx.core.graphics.BitmapCompat.Api31Impl.getHardwareBitmapConfig(android.graphics.Bitmap):android.graphics.Bitmap$Config A[MD:(android.graphics.Bitmap):android.graphics.Bitmap$Config (m)] (LINE:383)\l}"];
MethodNode[shape=record,label="{static android.graphics.Bitmap androidx.core.graphics.BitmapCompat.Api27Impl.createBitmapWithSourceColorspace((r5 I:int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Bitmap A[D('src' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('linear' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x002e \-\> B:26:0x0032, CROSS_EDGE: B:24:0x002c \-\> B:26:0x0032, CROSS_EDGE: B:22:0x0024 \-\> B:26:0x0032, CROSS_EDGE: B:17:0x000e \-\> B:21:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x003a: r0 'config' Landroid\/graphics\/Bitmap$Config;\l  0x0008\-0x003a: r1 'colorSpace' Landroid\/graphics\/ColorSpace;\l  0x000e\-0x003a: r2 'linearCs' Landroid\/graphics\/ColorSpace;\l  \-1 \-0x003a: r5 'w' I\l  \-1 \-0x003a: r6 'h' I\l  \-1 \-0x003a: r7 'src' Landroid\/graphics\/Bitmap;\l  \-1 \-0x003a: r8 'linear' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
}

