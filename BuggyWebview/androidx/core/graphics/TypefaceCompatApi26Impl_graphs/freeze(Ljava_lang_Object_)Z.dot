digraph "CFG forandroidx.core.graphics.TypefaceCompatApi26Impl.freeze(Ljava\/lang\/Object;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0010, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: IllegalAccessException \| InvocationTargetException \-\> 0x0010, IllegalAccessException \-\> 0x0012\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|RETURN\l|return ((java.lang.Boolean) r3.mFreeze.invoke(r4, new java.lang.Object[0])).booleanValue()\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|ExcHandler: IllegalAccessException \| InvocationTargetException \-\> 0x0010\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.graphics.TypefaceCompatApi26Impl.freeze((r3v0 'this' androidx.core.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r4v0 'family' java.lang.Object A[D('family' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:12:?, CROSS_EDGE: B:20:0x0001 \-\> B:16:0x0010\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0010, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_12;
Node_21 -> Node_16;
Node_16 -> Node_19;
Node_19 -> Node_12;
}

