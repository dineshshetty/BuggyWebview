digraph "CFG forandroidx.core.graphics.TypefaceCompatApi26Impl.addFontFromAssetManager(Landroid\/content\/Context;Ljava\/lang\/Object;Ljava\/lang\/String;III[Landroid\/graphics\/fonts\/FontVariationAxis;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:140)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0043, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043\l|0x0001: IGET  (r1 I:java.lang.reflect.Method) = (r5 I:androidx.core.graphics.TypefaceCompatApi26Impl) androidx.core.graphics.TypefaceCompatApi26Impl.mAddFontFromAssetManager java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, TRY_ENTER]\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0005: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0007: INVOKE  (r3 I:android.content.res.AssetManager) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getAssets():android.content.res.AssetManager A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:():android.content.res.AssetManager (c)] (LINE:141)\l0x000b: APUT  (r2 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x000d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r8 I:??[OBJECT, ARRAY] A[D('fileName' java.lang.String)])\l A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0010: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0011: INVOKE  (r4 I:java.lang.Integer) = (r0 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(int):java.lang.Integer (c)]\l0x0015: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0017: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0018: INVOKE  (r4 I:java.lang.Boolean) = (r0 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(boolean):java.lang.Boolean (c)]\l0x001c: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x001e: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x001f: INVOKE  (r4 I:java.lang.Integer) = (r9 I:int A[D('ttcIndex' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(int):java.lang.Integer (c)]\l0x0023: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0025: CONST  (r3 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0026: INVOKE  (r4 I:java.lang.Integer) = (r10 I:int A[D('weight' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(int):java.lang.Integer (c)] (LINE:142)\l0x002a: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x002c: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x002d: INVOKE  (r4 I:java.lang.Integer) = (r11 I:int A[D('style' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(int):java.lang.Integer (c)]\l0x0031: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0033: CONST  (r3 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x0034: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r12 I:??[OBJECT, ARRAY] A[D('axes' android.graphics.fonts.FontVariationAxis[])])\l A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x0036: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('family' java.lang.Object)]), (r2 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)] (LINE:140)\l0x003a: CHECK_CAST (r1 I:java.lang.Boolean) = (java.lang.Boolean) (r1 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l0x003c: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: InvocationTargetException \-\> 0x0041, IllegalAccessException \| InvocationTargetException \-\> 0x0043, MD:():boolean (c), TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|RETURN\l|0x0040: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|ExcHandler: IllegalAccessException \| InvocationTargetException \-\> 0x0043\l|0x0043: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \| InvocationTargetException \-\> 0x0043]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|RETURN\l|0x0044: RETURN  (r0 I:boolean)  (LINE:144)\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.graphics.TypefaceCompatApi26Impl.addFontFromAssetManager((r5 'this' I:androidx.core.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[D('family' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('fileName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('ttcIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('weight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.fonts.FontVariationAxis[] A[D('axes' android.graphics.fonts.FontVariationAxis[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0044 \-\> B:12:?, CROSS_EDGE: B:20:0x0001 \-\> B:18:0x0043\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0044\-0x0044: r1 'e' Ljava\/lang\/ReflectiveOperationException;\l  \-1 \-0x0044: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x0044: r7 'family' Ljava\/lang\/Object;\l  \-1 \-0x0044: r8 'fileName' Ljava\/lang\/String;\l  \-1 \-0x0044: r9 'ttcIndex' I\l  \-1 \-0x0044: r10 'weight' I\l  \-1 \-0x0044: r11 'style' I\l  \-1 \-0x0044: r12 'axes' [Landroid\/graphics\/fonts\/FontVariationAxis;\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0043, blocks: (B:14:0x0001), top: B:20:0x0001 \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_18;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_12;
Node_21 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

