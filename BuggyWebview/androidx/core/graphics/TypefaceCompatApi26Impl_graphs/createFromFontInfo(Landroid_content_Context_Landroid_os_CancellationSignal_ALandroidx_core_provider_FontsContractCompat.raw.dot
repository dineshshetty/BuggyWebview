digraph "CFG forandroidx.core.graphics.TypefaceCompatApi26Impl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_58 [shape=record,label="{58\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|0x0000: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:229)\l0x0002: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('cancellationSignal' android.os.CancellationSignal)]) \l0x0004: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])]) \l0x0006: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r24 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x0008: ARRAY_LENGTH  (r0 I:int) = (r9 I:??[]) \l0x0009: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:63:0x000e \l}"];
Node_62 [shape=record,label="{62\:\ 0x000d|RETURN\l|0x000d: RETURN  (r11 I:android.graphics.Typeface)  (LINE:230)\l}"];
Node_59 [shape=record,label="{59\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = (r20 I:androidx.core.graphics.TypefaceCompatApi26Impl) type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.isFontFamilyPrivateAPIAvailable():boolean A[MD:():boolean (m)] (LINE:232)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0064 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0014|0x0014: INVOKE  (r1 I:androidx.core.provider.FontsContractCompat$FontInfo) = \l  (r7 I:androidx.core.graphics.TypefaceCompatApi26Impl)\l  (r9 I:androidx.core.provider.FontsContractCompat$FontInfo[])\l  (r10 I:int)\l type: VIRTUAL call: androidx.core.graphics.TypefaceCompatApi26Impl.findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[], int):androidx.core.provider.FontsContractCompat$FontInfo A[MD:(androidx.core.provider.FontsContractCompat$FontInfo[], int):androidx.core.provider.FontsContractCompat$FontInfo (m)] (LINE:235)\l0x0018: INVOKE  (r2 I:android.content.ContentResolver) = (r21 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getContentResolver():android.content.ContentResolver A[MD:():android.content.ContentResolver (c)] (LINE:236)\l}"];
Node_111 [shape=record,label="{111\:\ 0x001d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_66 [shape=record,label="{66\:\ 0x001d|TRY_ENTER\lTryCatch #2 \{IOException \-\> 0x0062, blocks: (B:66:0x001d, B:69:0x002d, B:73:0x0050, B:71:0x0031), top: B:111:0x001d \}\lCatch: IOException \-\> 0x0062\l|0x001d: INVOKE  (r0 I:android.net.Uri) = \l  (r1 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('bestFont' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[Catch: IOException \-\> 0x0062, MD:():android.net.Uri (m), TRY_ENTER] (LINE:238)\l0x0021: CONST_STR  (r3 I:java.lang.String) =  \"r\" \l0x0023: INVOKE  (r0 I:android.os.ParcelFileDescriptor) = \l  (r2 I:android.content.ContentResolver A[D('resolver' android.content.ContentResolver)])\l  (r0 I:android.net.Uri)\l  (r3 I:java.lang.String)\l  (r8 I:android.os.CancellationSignal)\l type: VIRTUAL call: android.content.ContentResolver.openFileDescriptor(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor A[Catch: IOException \-\> 0x0062, MD:(android.net.Uri, java.lang.String, android.os.CancellationSignal):android.os.ParcelFileDescriptor throws java.io.FileNotFoundException (c)]\l0x0027: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0028|0x0028: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0031  (LINE:239)\l}"];
Node_68 [shape=record,label="{68\:\ 0x002b|0x002b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0030  (LINE:246)\l}"];
Node_69 [shape=record,label="{69\:\ 0x002d|TRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0062, blocks: (B:66:0x001d, B:69:0x002d, B:73:0x0050, B:71:0x0031), top: B:111:0x001d \}\lCatch: IOException \-\> 0x0062\l|0x002d: INVOKE  (r3 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.close():void A[Catch: IOException \-\> 0x0062, MD:():void throws java.io.IOException (c), TRY_LEAVE]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0030|RETURN\l|0x0030: RETURN  (r11 I:android.graphics.Typeface)  (LINE:240)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0062, blocks: (B:66:0x001d, B:69:0x002d, B:73:0x0050, B:71:0x0031), top: B:111:0x001d \}\lCatch: all \-\> 0x0054\l|0x0031: NEW_INSTANCE  (r0 I:android.graphics.Typeface$Builder) =  android.graphics.Typeface$Builder A[Catch: all \-\> 0x0054, TRY_ENTER] (LINE:242)\l0x0033: INVOKE  (r4 I:java.io.FileDescriptor) = (r3 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor A[Catch: all \-\> 0x0054, MD:():java.io.FileDescriptor (c)]\l0x0037: INVOKE  (r0 I:android.graphics.Typeface$Builder), (r4 I:java.io.FileDescriptor) type: DIRECT call: android.graphics.Typeface.Builder.\<init\>(java.io.FileDescriptor):void A[Catch: all \-\> 0x0054, MD:(java.io.FileDescriptor):void (c)]\l0x003a: INVOKE  (r4 I:int) = \l  (r1 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('bestFont' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getWeight():int A[Catch: all \-\> 0x0054, MD:():int (m)] (LINE:243)\l0x003e: INVOKE  (r0 I:android.graphics.Typeface$Builder) = (r0 I:android.graphics.Typeface$Builder), (r4 I:int) type: VIRTUAL call: android.graphics.Typeface.Builder.setWeight(int):android.graphics.Typeface$Builder A[Catch: all \-\> 0x0054, MD:(int):android.graphics.Typeface$Builder (c)]\l0x0042: INVOKE  (r4 I:boolean) = \l  (r1 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('bestFont' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.isItalic():boolean A[Catch: all \-\> 0x0054, MD:():boolean (m)] (LINE:244)\l0x0046: INVOKE  (r0 I:android.graphics.Typeface$Builder) = (r0 I:android.graphics.Typeface$Builder), (r4 I:boolean) type: VIRTUAL call: android.graphics.Typeface.Builder.setItalic(boolean):android.graphics.Typeface$Builder A[Catch: all \-\> 0x0054, MD:(boolean):android.graphics.Typeface$Builder (c)]\l0x004a: INVOKE  (r0 I:android.graphics.Typeface) = (r0 I:android.graphics.Typeface$Builder) type: VIRTUAL call: android.graphics.Typeface.Builder.build():android.graphics.Typeface A[Catch: all \-\> 0x0054, MD:():android.graphics.Typeface (c), TRY_LEAVE] (LINE:245)\l}"];
Node_72 [shape=record,label="{72\:\ 0x004e|0x004e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pfd' android.os.ParcelFileDescriptor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x0053  (LINE:246)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0050|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0062, blocks: (B:66:0x001d, B:69:0x002d, B:73:0x0050, B:71:0x0031), top: B:111:0x001d \}\lCatch: IOException \-\> 0x0062\l|0x0050: INVOKE  (r3 I:android.os.ParcelFileDescriptor A[D('pfd' android.os.ParcelFileDescriptor)]) type: VIRTUAL call: android.os.ParcelFileDescriptor.close():void A[Catch: IOException \-\> 0x0062, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0053|RETURN\l|0x0053: RETURN  (r0 I:android.graphics.Typeface)  (LINE:242)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0062|ExcHandler: IOException \-\> 0x0062\l|0x0062: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0062] (LINE:246)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0063|RETURN\l|0x0063: RETURN  (r11 I:android.graphics.Typeface)  (LINE:247)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0064|0x0064: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:250)\l0x0066: INVOKE  (r0 I:java.util.Map) = \l  (r12 I:android.content.Context)\l  (r9 I:androidx.core.provider.FontsContractCompat$FontInfo[])\l  (r8 I:android.os.CancellationSignal)\l type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(android.content.Context, androidx.core.provider.FontsContractCompat$FontInfo[], android.os.CancellationSignal):java.util.Map A[MD:(android.content.Context, androidx.core.provider.FontsContractCompat$FontInfo[], android.os.CancellationSignal):java.util.Map\<android.net.Uri, java.nio.ByteBuffer\> (m)]\l0x006a: INVOKE  (r13 I:java.lang.Object) = (r20 I:androidx.core.graphics.TypefaceCompatApi26Impl) type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.newFamily():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:252)\l}"];
Node_87 [shape=record,label="{87\:\ 0x006e|0x006e: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fontFamily' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0071  (LINE:253)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0070|RETURN\l|0x0070: RETURN  (r11 I:android.graphics.Typeface)  (LINE:254)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0071|0x0071: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:256)\l0x0072: ARRAY_LENGTH  (r14 I:int) = (r9 I:??[])  (LINE:257)\l0x0073: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0074: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atLeastOneFont' boolean)]) \l0x0075: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x0076|LOOP_START\lLOOP:0: B:90:0x0076\-\>B:99:0x00ad\l|0x0076: IF  (r6 I:??[int, byte, short, char]) \>= (r14 I:??[int, byte, short, char])  \-\> B:113:0x00b0 \l}"];
Node_91 [shape=record,label="{91\:\ 0x0078|0x0078: AGET  (r16 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]) \l0x007a: INVOKE  (r1 I:android.net.Uri) = \l  (r16 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:258)\l0x007e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map A[D('uriBuffer' java.util.Map\<android.net.Uri, java.nio.ByteBuffer\>)]), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0082: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]) \l0x0084: CHECK_CAST (r17 I:java.nio.ByteBuffer) = (java.nio.ByteBuffer) (r17 I:??[OBJECT, ARRAY]) \l}"];
Node_92 [shape=record,label="{92\:\ 0x0086|0x0086: IF  (r17 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fontBuffer' java.nio.ByteBuffer)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x008b  (LINE:259)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0088|0x0088: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:260)\l}"];
Node_115 [shape=record,label="{115\:\ 0x00ad|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x00ad|LOOP_END\lLOOP:0: B:90:0x0076\-\>B:99:0x00ad\l|0x00ad: ARITH  (r6 I:int) = (r19 I:int) + (1 int)  (LINE:257)\l}"];
Node_94 [shape=record,label="{94\:\ 0x008b|0x008c: INVOKE  (r4 I:int) = \l  (r16 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getTtcIndex():int A[MD:():int (m)] (LINE:263)\l0x0090: INVOKE  (r5 I:int) = \l  (r16 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getWeight():int A[MD:():int (m)]\l0x0094: INVOKE  (r18 I:boolean) = \l  (r16 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.isItalic():boolean A[MD:():boolean (m)]\l0x0098: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:262)\l0x009a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY] A[D('fontFamily' java.lang.Object)]) \l0x009b: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('fontBuffer' java.nio.ByteBuffer)]) \l0x009d: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x009f: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a1: INVOKE  (r1 I:boolean) = \l  (r1 I:androidx.core.graphics.TypefaceCompatApi26Impl)\l  (r2 I:java.lang.Object)\l  (r3 I:java.nio.ByteBuffer)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.addFontFromBuffer(java.lang.Object, java.nio.ByteBuffer, int, int, int):boolean A[MD:(java.lang.Object, java.nio.ByteBuffer, int, int, int):boolean (m)]\l}"];
Node_95 [shape=record,label="{95\:\ 0x00a5|0x00a5: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('success' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:98:0x00ab  (LINE:264)\l}"];
Node_98 [shape=record,label="{98\:\ 0x00ab|0x00ab: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:268)\l0x00ac: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atLeastOneFont' boolean)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_114 [shape=record,label="{114\:\ 0x00ad|SYNTHETIC\l}"];
Node_112 [shape=record,label="{112\:\ 0x00a7|SYNTHETIC\l}"];
Node_96 [shape=record,label="{96\:\ 0x00a7|0x00a7: INVOKE  (r7 I:androidx.core.graphics.TypefaceCompatApi26Impl), (r13 I:java.lang.Object A[D('fontFamily' java.lang.Object)]) type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.abortCreation(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:265)\l}"];
Node_97 [shape=record,label="{97\:\ 0x00aa|RETURN\l|0x00aa: RETURN  (r11 I:android.graphics.Typeface)  (LINE:266)\l}"];
Node_113 [shape=record,label="{113\:\ 0x00b0|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x00b0|0x00b0: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atLeastOneFont' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:103:0x00b6  (LINE:270)\l}"];
Node_101 [shape=record,label="{101\:\ 0x00b2|0x00b2: INVOKE  (r7 I:androidx.core.graphics.TypefaceCompatApi26Impl), (r13 I:java.lang.Object A[D('fontFamily' java.lang.Object)]) type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.abortCreation(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:271)\l}"];
Node_102 [shape=record,label="{102\:\ 0x00b5|RETURN\l|0x00b5: RETURN  (r11 I:android.graphics.Typeface)  (LINE:272)\l}"];
Node_103 [shape=record,label="{103\:\ 0x00b6|0x00b6: INVOKE  (r1 I:boolean) = (r7 I:androidx.core.graphics.TypefaceCompatApi26Impl), (r13 I:java.lang.Object A[D('fontFamily' java.lang.Object)]) type: DIRECT call: androidx.core.graphics.TypefaceCompatApi26Impl.freeze(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:274)\l}"];
Node_104 [shape=record,label="{104\:\ 0x00ba|0x00ba: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:106:0x00bd \l}"];
Node_105 [shape=record,label="{105\:\ 0x00bc|RETURN\l|0x00bc: RETURN  (r11 I:android.graphics.Typeface)  (LINE:275)\l}"];
Node_106 [shape=record,label="{106\:\ 0x00bd|0x00bd: INVOKE  (r1 I:android.graphics.Typeface) = (r7 I:androidx.core.graphics.TypefaceCompatApi26Impl), (r13 I:java.lang.Object A[D('fontFamily' java.lang.Object)]) type: VIRTUAL call: androidx.core.graphics.TypefaceCompatApi26Impl.createFromFamiliesWithDefault(java.lang.Object):android.graphics.Typeface A[MD:(java.lang.Object):android.graphics.Typeface (m)] (LINE:277)\l}"];
Node_107 [shape=record,label="{107\:\ 0x00c1|0x00c1: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:109:0x00c4  (LINE:278)\l}"];
Node_108 [shape=record,label="{108\:\ 0x00c3|RETURN\l|0x00c3: RETURN  (r11 I:android.graphics.Typeface)  (LINE:279)\l}"];
Node_109 [shape=record,label="{109\:\ 0x00c4|0x00c4: INVOKE  (r2 I:android.graphics.Typeface) = (r1 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)]), (r10 I:int) type: STATIC call: android.graphics.Typeface.create(android.graphics.Typeface, int):android.graphics.Typeface A[MD:(android.graphics.Typeface, int):android.graphics.Typeface (c)] (LINE:281)\l}"];
Node_110 [shape=record,label="{110\:\ 0x00c8|RETURN\l|0x00c8: RETURN  (r2 I:android.graphics.Typeface) \l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi26Impl.createFromFontInfo((r20 'this' I:androidx.core.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r21 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:70:0x0030 \-\> B:59:?, CROSS_EDGE: B:68:0x002b \-\> B:70:0x0030, CROSS_EDGE: B:74:0x0053 \-\> B:59:?, CROSS_EDGE: B:72:0x004e \-\> B:74:0x0053, CROSS_EDGE: B:85:0x0063 \-\> B:59:?, CROSS_EDGE: B:88:0x0070 \-\> B:59:?, BACK_EDGE: B:99:0x00ad \-\> B:90:0x0076, CROSS_EDGE: B:97:0x00aa \-\> B:59:?, CROSS_EDGE: B:98:0x00ab \-\> B:99:0x00ad, CROSS_EDGE: B:102:0x00b5 \-\> B:59:?, CROSS_EDGE: B:105:0x00bc \-\> B:59:?, CROSS_EDGE: B:108:0x00c3 \-\> B:59:?, CROSS_EDGE: B:110:0x00c8 \-\> B:59:?\lINLINE_NOT_NEEDED\lTryCatch #2 \{IOException \-\> 0x0062, blocks: (B:66:0x001d, B:69:0x002d, B:73:0x0050, B:71:0x0031), top: B:111:0x001d \}\lDebug Info:\l  0x0018\-0x0061: r1 'bestFont' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x001c\-0x0061: r2 'resolver' Landroid\/content\/ContentResolver;\l  \-1 \-0x0061: r21 'context' Landroid\/content\/Context;\l  \-1 \-0x0061: r22 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  \-1 \-0x0061: r23 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x0061: r24 'style' I\l  0x0028\-0x0062: r3 'pfd' Landroid\/os\/ParcelFileDescriptor;\l  0x0063\-0x0064: r0 'e' Ljava\/io\/IOException;\l  0x0062\-0x0064: r1 'bestFont' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0062\-0x0064: r2 'resolver' Landroid\/content\/ContentResolver;\l  0x0072\-0x0076: r1 'atLeastOneFont' Z\l  0x00a5\-0x00ad: r1 'success' Z\l  0x007a\-0x00ad: r16 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0086\-0x00ad: r17 'fontBuffer' Ljava\/nio\/ByteBuffer;\l  0x006a\-0x00c8: r0 'uriBuffer' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Landroid\/net\/Uri;Ljava\/nio\/ByteBuffer;\>;\l  0x00c1\-0x00c8: r1 'typeface' Landroid\/graphics\/Typeface;\l  0x006e\-0x00c8: r13 'fontFamily' Ljava\/lang\/Object;\l  0x0076\-0x00c8: r15 'atLeastOneFont' Z\l  0x0062\-0x00c8: r21 'context' Landroid\/content\/Context;\l  0x0062\-0x00c8: r22 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  0x0062\-0x00c8: r23 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x0062\-0x00c8: r24 'style' I\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[], int):android.graphics.Typeface]\l}"];
MethodNode -> Node_58;Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_59;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_86;
Node_65 -> Node_111;
Node_111 -> Node_66;
Node_111 -> Node_84;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_71;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_70 -> Node_59;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_74;
Node_74 -> Node_59;
Node_84 -> Node_85;
Node_85 -> Node_59;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_59;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_113;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_94;
Node_93 -> Node_115;
Node_115 -> Node_99;
Node_99 -> Node_90;
Node_94 -> Node_95;
Node_95 -> Node_98;
Node_95 -> Node_112[style=dashed];
Node_98 -> Node_114;
Node_114 -> Node_99;
Node_112 -> Node_96;
Node_96 -> Node_97;
Node_97 -> Node_59;
Node_113 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_103;
Node_101 -> Node_102;
Node_102 -> Node_59;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_59;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_109;
Node_108 -> Node_59;
Node_109 -> Node_110;
Node_110 -> Node_59;
}

