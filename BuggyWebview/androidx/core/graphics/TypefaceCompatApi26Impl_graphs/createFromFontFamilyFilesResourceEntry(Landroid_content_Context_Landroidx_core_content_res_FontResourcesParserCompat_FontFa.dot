digraph "CFG forandroidx.core.graphics.TypefaceCompatApi26Impl.createFromFontFamilyFilesResourceEntry(Landroid\/content\/Context;Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFamilyFilesResourceEntry;Landroid\/content\/res\/Resources;I)Landroid\/graphics\/Typeface;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000}"];
Node_26 [shape=record,label="{26\:\ 0x0005|if (isFontFamilyPrivateAPIAvailable() != false) goto L6\l}"];
Node_27 [shape=record,label="{27\:\ 0x0007}"];
Node_28 [shape=record,label="{28\:\ 0x000b|RETURN\l|return super.createFromFontFamilyFilesResourceEntry(r16, r17, r18, r19)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|java.lang.Object r9 = newFamily()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|if (r9 != null) goto L9\l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|RETURN\l|return null\l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] r11 = r17.getEntries()\lint r12 = r11.length\lr13 = 0\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|LOOP_START\lLOOP:0: B:33:0x001b\-\>B:38:0x0045\lPHI: r13 \l  PHI: (r13v1 int) = (r13v0 int), (r13v2 int) binds: [B:32:0x0014, B:38:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|if (r13 \>= r12) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|r14 = r11[r13]\ljava.lang.String r3 = r14.getFileName()\lint r4 = r14.getTtcIndex()\lint r5 = r14.getWeight()\lboolean r6 = r14.isItalic()\landroid.graphics.fonts.FontVariationAxis[] r7 = android.graphics.fonts.FontVariationAxis.fromFontVariationSettings(r14.getVariationSettings())\l}"];
Node_35 [shape=record,label="{35\:\ 0x003f|if (addFontFromAssetManager(r16, r9, r3, r4, r5, r6 ? 1 : 0, r7) != false) goto L13\l}"];
Node_38 [shape=record,label="{38\:\ 0x0045|LOOP_END\lLOOP:0: B:33:0x001b\-\>B:38:0x0045\l|int r13 = r13 + 1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0041|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0041|abortCreation(r9)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|RETURN\l|return null\l}"];
Node_44 [shape=record,label="{44\:\ 0x0048|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0048}"];
Node_40 [shape=record,label="{40\:\ 0x004c|if (freeze(r9) != false) goto L21\l}"];
Node_41 [shape=record,label="{41\:\ 0x004e|RETURN\l|return null\l}"];
Node_42 [shape=record,label="{42\:\ 0x004f}"];
Node_43 [shape=record,label="{43\:\ 0x0053|RETURN\l|return createFromFamiliesWithDefault(r9)\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatApi26Impl.createFromFontFamilyFilesResourceEntry((r15v0 'this' androidx.core.graphics.TypefaceCompatApi26Impl A[IMMUTABLE_TYPE, THIS]), (r16v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'resources' android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0013 \-\> B:24:?, CROSS_EDGE: B:37:0x0044 \-\> B:24:?, BACK_EDGE: B:38:0x0045 \-\> B:33:0x001b, CROSS_EDGE: B:41:0x004e \-\> B:24:?, CROSS_EDGE: B:43:0x0053 \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_24;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_24;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_44;
Node_34 -> Node_35;
Node_35 -> Node_38;
Node_35 -> Node_45[style=dashed];
Node_38 -> Node_33;
Node_45 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_24;
Node_44 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_24;
Node_42 -> Node_43;
Node_43 -> Node_24;
}

