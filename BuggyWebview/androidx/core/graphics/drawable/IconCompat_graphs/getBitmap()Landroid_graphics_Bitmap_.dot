digraph "CFG forandroidx.core.graphics.drawable.IconCompat.getBitmap()Landroid\/graphics\/Bitmap;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x0003|if (r3.mType != (\-1)) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0005}"];
Node_27 [shape=record,label="{27\:\ 0x0009|if (android.os.Build.VERSION.SDK_INT \< 23) goto L11\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|java.lang.Object r0 = r3.mObj1\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|if ((r0 instanceof android.graphics.Bitmap) == false) goto L10\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011}"];
Node_31 [shape=record,label="{31\:\ 0x0013|RETURN\l|return (android.graphics.Bitmap) r0\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|RETURN\l|return null\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|int r0 = r3.mType\l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|if (r0 != 1) goto L15\l}"];
Node_36 [shape=record,label="{36\:\ 0x001b}"];
Node_37 [shape=record,label="{37\:\ 0x001f|RETURN\l|return (android.graphics.Bitmap) r3.mObj1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0020}"];
Node_39 [shape=record,label="{39\:\ 0x0021|if (r0 != 5) goto L19\l}"];
Node_40 [shape=record,label="{40\:\ 0x0023}"];
Node_41 [shape=record,label="{41\:\ 0x002b|RETURN\l|return createLegacyIconFromAdaptiveIcon((android.graphics.Bitmap) r3.mObj1, true)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"called getBitmap() on \")\lr1.append(r3)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|throw new java.lang.IllegalStateException(r1.toString())\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap androidx.core.graphics.drawable.IconCompat.getBitmap((r3v0 'this' androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0015 \-\> B:23:?, CROSS_EDGE: B:37:0x001f \-\> B:23:?, CROSS_EDGE: B:41:0x002b \-\> B:23:?, CROSS_EDGE: B:43:0x0042 \-\> B:23:?, CROSS_EDGE: B:25:0x0003 \-\> B:34:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_32 -> Node_23;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_23;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_42 -> Node_43;
Node_43 -> Node_23;
}

