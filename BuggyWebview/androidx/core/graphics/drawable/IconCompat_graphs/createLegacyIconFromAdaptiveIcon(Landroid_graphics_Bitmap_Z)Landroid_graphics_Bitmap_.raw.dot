digraph "CFG forandroidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(Landroid\/graphics\/Bitmap;Z)Landroid\/graphics\/Bitmap;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)] (LINE:1023)\l0x0004: INVOKE  (r1 I:int) = (r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)] (LINE:1024)\l0x0008: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:1023)\l0x000c: CAST (r0 I:float) = (float) (r0 I:int) \l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (1059760811(0x3f2aaaab, float:0.6666667) ??[int, float, short, byte, char]) \l0x0010: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x0012: CAST (r0 I:int) = (int) (r0 I:float) \l0x0013: SGET  (r1 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:1026)\l0x0015: INVOKE  (r1 I:android.graphics.Bitmap) = (r0 I:int A[D('size' int)]), (r0 I:int A[D('size' int)]), (r1 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x0019: NEW_INSTANCE  (r2 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:1027)\l0x001b: INVOKE  (r2 I:android.graphics.Canvas), (r1 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x001e: NEW_INSTANCE  (r3 I:android.graphics.Paint) =  android.graphics.Paint  (LINE:1028)\l0x0020: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0021: INVOKE  (r3 I:android.graphics.Paint), (r4 I:int) type: DIRECT call: android.graphics.Paint.\<init\>(int):void A[MD:(int):void (c)]\l0x0024: CAST (r4 I:float) = (float) (r0 I:int A[D('size' int)])  (LINE:1030)\l0x0025: CONST  (r5 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0027: ARITH  (r4 I:float) = (r4 I:float) * (r5 I:float) \l0x0029: CONST  (r5 I:??[int, float, short, byte, char]) = (1063955115(0x3f6aaaab, float:0.9166667) ??[int, float, short, byte, char])  (LINE:1031)\l0x002c: ARITH  (r5 I:float) = (r5 I:float) * (r4 I:float A[D('center' float)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('addShadow' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0054  (LINE:1033)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: CONST  (r6 I:??[int, float, short, byte, char]) = (1009429163(0x3c2aaaab, float:0.010416667) ??[int, float, short, byte, char])  (LINE:1035)\l0x0033: CAST (r7 I:float) = (float) (r0 I:int A[D('size' int)]) \l0x0034: ARITH  (r7 I:float) = (r7 I:float) * (r6 I:float) \l0x0036: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1036)\l0x0037: INVOKE  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]), (r6 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x003a: CONST  (r6 I:??[int, float, short, byte, char]) = (1017817771(0x3caaaaab, float:0.020833334) ??[int, float, short, byte, char])  (LINE:1037)\l0x003d: CAST (r8 I:float) = (float) (r0 I:int A[D('size' int)]) \l0x003e: ARITH  (r8 I:float) = (r8 I:float) * (r6 I:float) \l0x0040: CONST  (r6 I:??[int, float, short, byte, char]) = (1023410176(0x3d000000, float:0.03125) ??[int, float, short, byte, char]) \l0x0042: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0043: INVOKE  \l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l  (r7 I:float A[D('blur' float)])\l  (r9 I:float)\l  (r8 I:float)\l  (r6 I:int)\l type: VIRTUAL call: android.graphics.Paint.setShadowLayer(float, float, float, int):void A[MD:(float, float, float, int):void (c)]\l0x0046: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r4 I:float A[D('center' float)])\l  (r4 I:float A[D('center' float)])\l  (r5 I:float A[D('radius' float)])\l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)] (LINE:1038)\l0x0049: CONST  (r6 I:??[int, float, short, byte, char]) = (503316480(0x1e000000, float:6.7762636E\-21) ??[int, float, short, byte, char])  (LINE:1041)\l0x004b: INVOKE  \l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l  (r7 I:float A[D('blur' float)])\l  (r9 I:float)\l  (r9 I:float)\l  (r6 I:int)\l type: VIRTUAL call: android.graphics.Paint.setShadowLayer(float, float, float, int):void A[MD:(float, float, float, int):void (c)]\l0x004e: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r4 I:float A[D('center' float)])\l  (r4 I:float A[D('center' float)])\l  (r5 I:float A[D('radius' float)])\l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)] (LINE:1042)\l0x0051: INVOKE  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]) type: VIRTUAL call: android.graphics.Paint.clearShadowLayer():void A[MD:():void (c)] (LINE:1043)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|0x0054: CONST  (r6 I:??[int, float, short, byte, char]) = (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ??[int, float, short, byte, char])  (LINE:1047)\l0x0056: INVOKE  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]), (r6 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x0059: NEW_INSTANCE  (r6 I:android.graphics.BitmapShader) =  android.graphics.BitmapShader  (LINE:1048)\l0x005b: SGET  (r7 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x005d: SGET  (r8 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x005f: INVOKE  \l  (r6 I:android.graphics.BitmapShader)\l  (r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap)])\l  (r7 I:android.graphics.Shader$TileMode)\l  (r8 I:android.graphics.Shader$TileMode)\l type: DIRECT call: android.graphics.BitmapShader.\<init\>(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void A[MD:(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void (c)]\l0x0062: NEW_INSTANCE  (r7 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:1050)\l0x0064: INVOKE  (r7 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0067: INVOKE  (r8 I:int) = (r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)] (LINE:1051)\l0x006b: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int A[D('size' int)]) \l0x006c: NEG  (r8 I:int) = (r8 I:int) \l0x006d: CAST (r8 I:float) = (float) (r8 I:int) \l0x006e: CONST  (r9 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0070: ARITH  (r8 I:float) = (r8 I:float) \/ (r9 I:float) \l0x0071: INVOKE  (r10 I:int) = (r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)] (LINE:1052)\l0x0075: ARITH  (r10 I:int) = (r10 I:int) \- (r0 I:int A[D('size' int)]) \l0x0076: NEG  (r10 I:int) = (r10 I:int) \l0x0077: CAST (r10 I:float) = (float) (r10 I:int) \l0x0078: ARITH  (r10 I:float) = (r10 I:float) \/ (r9 I:float) \l0x0079: INVOKE  (r7 I:android.graphics.Matrix A[D('shift' android.graphics.Matrix)]), (r8 I:float), (r10 I:float) type: VIRTUAL call: android.graphics.Matrix.setTranslate(float, float):void A[MD:(float, float):void (c)] (LINE:1051)\l0x007c: INVOKE  \l  (r6 I:android.graphics.BitmapShader A[D('shader' android.graphics.BitmapShader)])\l  (r7 I:android.graphics.Matrix A[D('shift' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.BitmapShader.setLocalMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:1053)\l0x007f: INVOKE  \l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l  (r6 I:android.graphics.Shader A[D('shader' android.graphics.BitmapShader)])\l type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)] (LINE:1054)\l0x0082: INVOKE  \l  (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r4 I:float A[D('center' float)])\l  (r4 I:float A[D('center' float)])\l  (r5 I:float A[D('radius' float)])\l  (r3 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l type: VIRTUAL call: android.graphics.Canvas.drawCircle(float, float, float, android.graphics.Paint):void A[MD:(float, float, float, android.graphics.Paint):void (c)] (LINE:1055)\l0x0085: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1057)\l0x0086: INVOKE  (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r8 I:android.graphics.Bitmap) type: VIRTUAL call: android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0089|RETURN\l|0x0089: RETURN  (r1 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)])  (LINE:1058)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static android.graphics.Bitmap androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon((r11 I:android.graphics.Bitmap A[D('adaptiveIconBitmap' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('addShadow' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x002e \-\> B:12:0x0054\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0036\-0x0054: r7 'blur' F\l  0x0013\-0x0089: r0 'size' I\l  0x0019\-0x0089: r1 'icon' Landroid\/graphics\/Bitmap;\l  0x001e\-0x0089: r2 'canvas' Landroid\/graphics\/Canvas;\l  0x0024\-0x0089: r3 'paint' Landroid\/graphics\/Paint;\l  0x0029\-0x0089: r4 'center' F\l  0x002e\-0x0089: r5 'radius' F\l  0x0062\-0x0089: r6 'shader' Landroid\/graphics\/BitmapShader;\l  0x0067\-0x0089: r7 'shift' Landroid\/graphics\/Matrix;\l  \-1 \-0x0089: r11 'adaptiveIconBitmap' Landroid\/graphics\/Bitmap;\l  \-1 \-0x0089: r12 'addShadow' Z\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

