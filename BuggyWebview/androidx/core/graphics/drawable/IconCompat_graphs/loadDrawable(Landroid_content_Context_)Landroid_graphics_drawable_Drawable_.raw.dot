digraph "CFG forandroidx.core.graphics.drawable.IconCompat.loadDrawable(Landroid\/content\/Context;)Landroid\/graphics\/drawable\/Drawable;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  \l  (r3 I:androidx.core.graphics.drawable.IconCompat)\l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.checkResource(android.content.Context):void A[MD:(android.content.Context):void (m)] (LINE:589)\l0x0003: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:590)\l0x0005: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:20:0x0012 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: INVOKE  (r0 I:android.graphics.drawable.Icon) = \l  (r3 I:androidx.core.graphics.drawable.IconCompat)\l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.toIcon(android.content.Context):android.graphics.drawable.Icon A[MD:(android.content.Context):android.graphics.drawable.Icon (m)] (LINE:591)\l0x000d: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.graphics.drawable.Icon), (r4 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api23Impl.loadDrawable(android.graphics.drawable.Icon, android.content.Context):android.graphics.drawable.Drawable A[MD:(android.graphics.drawable.Icon, android.content.Context):android.graphics.drawable.Drawable (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r3 I:androidx.core.graphics.drawable.IconCompat)\l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l type: DIRECT call: androidx.core.graphics.drawable.IconCompat.loadDrawableInner(android.content.Context):android.graphics.drawable.Drawable A[MD:(android.content.Context):android.graphics.drawable.Drawable (m)] (LINE:593)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x002f  (LINE:594)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: IGET  (r1 I:android.content.res.ColorStateList) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList \l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0022 \l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: IGET  (r1 I:android.graphics.PorterDuff$Mode) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mTintMode android.graphics.PorterDuff$Mode \l0x001e: SGET  (r2 I:android.graphics.PorterDuff$Mode) =  androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE android.graphics.PorterDuff$Mode \l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x002f \l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: INVOKE  (r0 I:android.graphics.drawable.Drawable A[D('result' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.mutate():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:595)\l0x0025: IGET  (r1 I:android.content.res.ColorStateList) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList  (LINE:596)\l0x0027: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable A[D('result' android.graphics.drawable.Drawable)])\l  (r1 I:android.content.res.ColorStateList)\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void A[MD:(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void (m)]\l0x002a: IGET  (r1 I:android.graphics.PorterDuff$Mode) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mTintMode android.graphics.PorterDuff$Mode  (LINE:597)\l0x002c: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable A[D('result' android.graphics.drawable.Drawable)])\l  (r1 I:android.graphics.PorterDuff$Mode)\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode):void A[MD:(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode):void (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:android.graphics.drawable.Drawable A[D('result' android.graphics.drawable.Drawable)])  (LINE:599)\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.core.graphics.drawable.IconCompat.loadDrawable((r3 'this' I:androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x002f \-\> B:15:?, CROSS_EDGE: B:25:0x0020 \-\> B:27:0x002f, CROSS_EDGE: B:23:0x001a \-\> B:26:0x0022, CROSS_EDGE: B:21:0x0016 \-\> B:27:0x002f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x002f: r0 'result' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x002f: r4 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

