digraph "CFG forandroidx.core.graphics.drawable.IconCompat.addToShortcutIntent(Landroid\/content\/Intent;Landroid\/graphics\/drawable\/Drawable;Landroid\/content\/Context;)V" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: INVOKE  (r6 I:androidx.core.graphics.drawable.IconCompat), (r9 I:android.content.Context A[D('c' android.content.Context)]) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.checkResource(android.content.Context):void A[MD:(android.content.Context):void (m)] (LINE:714)\l0x0003: IGET  (r0 I:int) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:716)\l0x0005: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|0x0006: SWITCH  (r0 I:??)\l case 1: goto B:54:0x0097\l case 2: goto B:61:0x001b\l case 3: goto B:35:0x0009\l case 4: goto B:35:0x0009\l case 5: goto B:37:0x0011\l default: goto B:35:0x0009 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:753)\l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"Icon type not supported for intent shortcuts\" \l0x000d: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0010|0x0010: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0011|0x0011: IGET  (r0 I:java.lang.Object) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:725)\l0x0013: CHECK_CAST (r0 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r0 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:android.graphics.Bitmap), (r1 I:boolean) type: STATIC call: androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean):android.graphics.Bitmap A[MD:(android.graphics.Bitmap, boolean):android.graphics.Bitmap (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00a5|0x00a5: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('badge' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00be  (LINE:755)\l}"];
Node_58 [shape=record,label="{58\:\ 0x00a7|0x00a7: INVOKE  (r1 I:int) = (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)] (LINE:757)\l0x00ab: INVOKE  (r2 I:int) = (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)] (LINE:758)\l0x00af: ARITH  (r3 I:int) = (r1 I:int A[D('w' int)]) \/ (2 int)  (LINE:759)\l0x00b1: ARITH  (r4 I:int) = (r2 I:int A[D('h' int)]) \/ (2 int) \l0x00b3: INVOKE  \l  (r8 I:android.graphics.drawable.Drawable A[D('badge' android.graphics.drawable.Drawable)])\l  (r3 I:int)\l  (r4 I:int)\l  (r1 I:int A[D('w' int)])\l  (r2 I:int A[D('h' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x00b6: NEW_INSTANCE  (r3 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:760)\l0x00b8: INVOKE  (r3 I:android.graphics.Canvas), (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x00bb: INVOKE  \l  (r8 I:android.graphics.drawable.Drawable A[D('badge' android.graphics.drawable.Drawable)])\l  (r3 I:android.graphics.Canvas)\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x00be|0x00be: CONST_STR  (r1 I:java.lang.String A[D('w' int)]) =  \"android.intent.extra.shortcut.ICON\"  (LINE:762)\l0x00c0: INVOKE  \l  (r7 I:android.content.Intent A[D('outIntent' android.content.Intent)])\l  (r1 I:java.lang.String)\l  (r0 I:android.os.Parcelable A[D('icon' android.graphics.Bitmap)])\l type: VIRTUAL call: android.content.Intent.putExtra(java.lang.String, android.os.Parcelable):android.content.Intent A[MD:(java.lang.String, android.os.Parcelable):android.content.Intent (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x00c3|RETURN\l|0x00c3: RETURN    (LINE:763)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0097|0x0097: IGET  (r0 I:java.lang.Object A[D('e' android.content.pm.PackageManager$NameNotFoundException)]) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:718)\l0x0099: CHECK_CAST (r0 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x009b|0x009b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('badge' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x00a5  (LINE:719)\l}"];
Node_56 [shape=record,label="{56\:\ 0x009d|0x009d: INVOKE  (r2 I:android.graphics.Bitmap$Config) = (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config A[MD:():android.graphics.Bitmap$Config (c)] (LINE:721)\l0x00a1: INVOKE  (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) = \l  (r0 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)])\l  (r2 I:android.graphics.Bitmap$Config)\l  (r1 I:boolean)\l type: VIRTUAL call: android.graphics.Bitmap.copy(android.graphics.Bitmap$Config, boolean):android.graphics.Bitmap A[MD:(android.graphics.Bitmap$Config, boolean):android.graphics.Bitmap (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x001b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x001b|TRY_ENTER\lTryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x001b: INVOKE  (r0 I:java.lang.String) = (r6 I:androidx.core.graphics.drawable.IconCompat) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getResPackage():java.lang.String A[Catch: NameNotFoundException \-\> 0x007d, MD:():java.lang.String (m), TRY_ENTER] (LINE:729)\l0x001f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: INVOKE  (r0 I:android.content.Context) = (r9 I:android.content.Context A[D('c' android.content.Context)]), (r0 I:java.lang.String), (r1 I:int) type: VIRTUAL call: android.content.Context.createPackageContext(java.lang.String, int):android.content.Context A[Catch: NameNotFoundException \-\> 0x007d, MD:(java.lang.String, int):android.content.Context throws android.content.pm.PackageManager$NameNotFoundException (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0024|0x0024: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('badge' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0032  (LINE:730)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0026|TryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x0026: CONST_STR  (r1 I:java.lang.String) =  \"android.intent.extra.shortcut.ICON_RESOURCE\"  (LINE:731)\l0x0028: IGET  (r2 I:int) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mInt1 int A[Catch: NameNotFoundException \-\> 0x007d]\l0x002a: INVOKE  (r2 I:android.content.Intent$ShortcutIconResource) = (r0 I:android.content.Context A[D('context' android.content.Context)]), (r2 I:int) type: STATIC call: android.content.Intent.ShortcutIconResource.fromContext(android.content.Context, int):android.content.Intent$ShortcutIconResource A[Catch: NameNotFoundException \-\> 0x007d, MD:(android.content.Context, int):android.content.Intent$ShortcutIconResource (c)] (LINE:732)\l0x002e: INVOKE  \l  (r7 I:android.content.Intent A[D('outIntent' android.content.Intent)])\l  (r1 I:java.lang.String)\l  (r2 I:android.os.Parcelable)\l type: VIRTUAL call: android.content.Intent.putExtra(java.lang.String, android.os.Parcelable):android.content.Intent A[Catch: NameNotFoundException \-\> 0x007d, MD:(java.lang.String, android.os.Parcelable):android.content.Intent (c)] (LINE:731)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0031|RETURN\l|0x0031: RETURN    (LINE:733)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0032|TryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x0032: IGET  (r2 I:int) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mInt1 int A[Catch: NameNotFoundException \-\> 0x007d] (LINE:735)\l0x0034: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r0 I:android.content.Context A[D('context' android.content.Context)]), (r2 I:int) type: STATIC call: androidx.core.content.ContextCompat.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[Catch: NameNotFoundException \-\> 0x007d, MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l0x0038: INVOKE  (r3 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)] (LINE:736)\l}"];
Node_43 [shape=record,label="{43\:\ 0x003c|0x003c: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:48:0x0054 \l}"];
Node_44 [shape=record,label="{44\:\ 0x003e|TryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x003e: INVOKE  (r3 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0042|0x0042: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:47:0x0045 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0044|0x0044: GOTO  \-\> 0x0054 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0045|TryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x0045: INVOKE  (r3 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)] (LINE:741)\l0x0049: INVOKE  (r4 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)] (LINE:742)\l0x004d: SGET  (r5 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config A[Catch: NameNotFoundException \-\> 0x007d]\l0x004f: INVOKE  (r3 I:android.graphics.Bitmap) = (r3 I:int), (r4 I:int), (r5 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[Catch: NameNotFoundException \-\> 0x007d, MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)] (LINE:741)\l0x0053: GOTO  \-\> 0x0068 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0068|TRY_LEAVE\lTryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x0068: INVOKE  (r4 I:int) = (r3 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)] (LINE:745)\l0x006c: INVOKE  (r5 I:int) = (r3 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)]\l0x0070: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)])\l  (r1 I:int)\l  (r1 I:int)\l  (r4 I:int)\l  (r5 I:int)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[Catch: NameNotFoundException \-\> 0x007d, MD:(int, int, int, int):void (c)]\l0x0073: NEW_INSTANCE  (r1 I:android.graphics.Canvas) =  android.graphics.Canvas A[Catch: NameNotFoundException \-\> 0x007d] (LINE:746)\l0x0075: INVOKE  (r1 I:android.graphics.Canvas), (r3 I:android.graphics.Bitmap A[D('icon' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[Catch: NameNotFoundException \-\> 0x007d, MD:(android.graphics.Bitmap):void (c)]\l0x0078: INVOKE  (r2 I:android.graphics.drawable.Drawable A[D('dr' android.graphics.drawable.Drawable)]), (r1 I:android.graphics.Canvas) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[Catch: NameNotFoundException \-\> 0x007d, MD:(android.graphics.Canvas):void (c), TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x007b|0x007b: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) = (r3 I:??[OBJECT, ARRAY] A[D('icon' android.graphics.Bitmap)])  (LINE:750)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0054|TryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\lCatch: NameNotFoundException \-\> 0x007d\l|0x0054: CONST_STR  (r3 I:java.lang.String A[D('icon' android.graphics.Bitmap)]) =  \"activity\"  (LINE:737)\l0x0056: INVOKE  (r3 I:java.lang.Object) = (r0 I:android.content.Context A[D('context' android.content.Context)]), (r3 I:java.lang.String) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.String):java.lang.Object A[Catch: NameNotFoundException \-\> 0x007d, MD:(java.lang.String):java.lang.Object (c)]\l0x005a: CHECK_CAST (r3 I:android.app.ActivityManager) = (android.app.ActivityManager) (r3 I:??[OBJECT, ARRAY]) A[Catch: NameNotFoundException \-\> 0x007d]\l0x005c: INVOKE  (r3 I:int) = (r3 I:android.app.ActivityManager) type: VIRTUAL call: android.app.ActivityManager.getLauncherLargeIconSize():int A[Catch: NameNotFoundException \-\> 0x007d, MD:():int (c)] (LINE:738)\l0x0060: SGET  (r4 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config A[Catch: NameNotFoundException \-\> 0x007d] (LINE:739)\l0x0062: INVOKE  (r4 I:android.graphics.Bitmap) = (r3 I:int A[D('size' int)]), (r3 I:int A[D('size' int)]), (r4 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[Catch: NameNotFoundException \-\> 0x007d, MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x0066: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('size' int)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x007d|ExcHandler: NameNotFoundException \-\> 0x007d\l|0x007d: MOVE_EXCEPTION  (r0 I:android.content.pm.PackageManager$NameNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NameNotFoundException \-\> 0x007d] (LINE:748)\l}"];
Node_52 [shape=record,label="{52\:\ 0x007e|0x007e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:749)\l0x0080: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0082: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0085: CONST_STR  (r3 I:java.lang.String) =  \"Can't find package \" \l0x0087: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x008a: IGET  (r3 I:java.lang.Object) = (r6 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object \l0x008c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x008f: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0093: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' android.content.pm.PackageManager$NameNotFoundException)])\l type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0096|0x0096: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.core.graphics.drawable.IconCompat.addToShortcutIntent((r6 'this' I:androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Intent A[D('outIntent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.drawable.Drawable A[D('badge' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.content.Context A[D('c' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x00c3 \-\> B:32:?, CROSS_EDGE: B:57:0x00a5 \-\> B:59:0x00be, CROSS_EDGE: B:56:0x009d \-\> B:57:0x00a5, CROSS_EDGE: B:55:0x009b \-\> B:57:0x00a5, CROSS_EDGE: B:41:0x0031 \-\> B:32:?, CROSS_EDGE: B:50:0x007b \-\> B:57:0x00a5, CROSS_EDGE: B:47:0x0045 \-\> B:49:0x0068, CROSS_EDGE: B:43:0x003c \-\> B:48:0x0054, CROSS_EDGE: B:53:0x0096 \-\> B:32:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x001b: r0 'icon' Landroid\/graphics\/Bitmap;\l  0x0053\-0x0054: r3 'icon' Landroid\/graphics\/Bitmap;\l  0x0060\-0x0067: r3 'size' I\l  0x0024\-0x007b: r0 'context' Landroid\/content\/Context;\l  0x0038\-0x007b: r2 'dr' Landroid\/graphics\/drawable\/Drawable;\l  0x0067\-0x007d: r3 'icon' Landroid\/graphics\/Bitmap;\l  0x007e\-0x0097: r0 'e' Landroid\/content\/pm\/PackageManager$NameNotFoundException;\l  0x00ab\-0x00be: r1 'w' I\l  0x00af\-0x00be: r2 'h' I\l  0x009b\-0x00d1: r0 'icon' Landroid\/graphics\/Bitmap;\l  \-1 \-0x00d1: r7 'outIntent' Landroid\/content\/Intent;\l  \-1 \-0x00d1: r8 'badge' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x00d1: r9 'c' Landroid\/content\/Context;\lTryCatch #0 \{NameNotFoundException \-\> 0x007d, blocks: (B:38:0x001b, B:40:0x0026, B:42:0x0032, B:44:0x003e, B:47:0x0045, B:49:0x0068, B:48:0x0054), top: B:61:0x001b \}\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_37;
Node_34 -> Node_54;
Node_34 -> Node_61;
Node_35 -> Node_36;
Node_36 -> Node_32;
Node_37 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_32;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_61 -> Node_38;
Node_61 -> Node_51;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_57;
Node_48 -> Node_49;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_32;
}

