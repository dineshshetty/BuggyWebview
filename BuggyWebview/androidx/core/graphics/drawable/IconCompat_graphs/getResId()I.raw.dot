digraph "CFG forandroidx.core.graphics.drawable.IconCompat.getResId()I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:433)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0012 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:22:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IGET  (r0 I:java.lang.Object) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:434)\l0x000d: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api23Impl.getResId(java.lang.Object):int A[MD:(java.lang.Object):int (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:436)\l0x0014: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mInt1 int  (LINE:439)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:437)\l0x001c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0021: CONST_STR  (r2 I:java.lang.String) =  \"called getResId() on \" \l0x0023: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0026: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0029: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002d: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int androidx.core.graphics.drawable.IconCompat.getResId((r3 'this' I:androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0019 \-\> B:15:?, CROSS_EDGE: B:27:0x0030 \-\> B:15:?, CROSS_EDGE: B:17:0x0003 \-\> B:22:0x0012\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

