digraph "CFG forandroidx.core.graphics.drawable.IconCompat.getResPackage()Ljava\/lang\/String;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:406)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0012 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|0x0005: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0007: CONST  (r2 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:29:0x0012 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: IGET  (r0 I:java.lang.Object) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:407)\l0x000d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api23Impl.getResPackage(java.lang.Object):java.lang.String A[MD:(java.lang.Object):java.lang.String (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:java.lang.String) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|0x0012: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:409)\l0x0014: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0033 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mString1 java.lang.String  (LINE:415)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0025 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.CharSequence) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0022 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mString1 java.lang.String  (LINE:420)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:java.lang.String) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|0x0025: IGET  (r0 I:java.lang.Object) = (r3 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:416)\l0x0027: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x0029: CONST_STR  (r2 I:java.lang.String) =  \":\" \l0x002b: INVOKE  (r0 I:java.lang.String[]) = (r0 I:java.lang.String), (r2 I:java.lang.String), (r1 I:int) type: VIRTUAL call: java.lang.String.split(java.lang.String, int):java.lang.String[] A[MD:(java.lang.String, int):java.lang.String[] (c)]\l0x002f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0032|RETURN\l|0x0032: RETURN  (r0 I:java.lang.String) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0033|0x0033: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:410)\l0x0035: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0037: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003a: CONST_STR  (r2 I:java.lang.String) =  \"called getResPackage() on \" \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0046: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0049|0x0049: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.core.graphics.drawable.IconCompat.getResPackage((r3 'this' I:androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0024 \-\> B:22:?, CROSS_EDGE: B:39:0x0032 \-\> B:22:?, CROSS_EDGE: B:32:0x0019 \-\> B:38:0x0025, CROSS_EDGE: B:41:0x0049 \-\> B:22:?, CROSS_EDGE: B:24:0x0003 \-\> B:29:0x0012\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_40;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_38[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_22;
Node_38 -> Node_39;
Node_39 -> Node_22;
Node_40 -> Node_41;
Node_41 -> Node_22;
}

