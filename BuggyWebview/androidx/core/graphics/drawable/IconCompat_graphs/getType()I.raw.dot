digraph "CFG forandroidx.core.graphics.drawable.IconCompat.getType()I" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:391)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0012 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: IGET  (r0 I:java.lang.Object) = (r2 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:392)\l0x000d: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api23Impl.getType(java.lang.Object):int A[MD:(java.lang.Object):int (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IGET  (r0 I:int) = (r2 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:394)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.core.graphics.drawable.IconCompat.getType((r2 'this' I:androidx.core.graphics.drawable.IconCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0014 \-\> B:11:?, CROSS_EDGE: B:13:0x0003 \-\> B:18:0x0012\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

