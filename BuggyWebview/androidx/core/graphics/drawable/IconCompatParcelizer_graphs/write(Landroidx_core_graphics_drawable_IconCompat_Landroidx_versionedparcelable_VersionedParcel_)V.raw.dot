digraph "CFG forandroidx.core.graphics.drawable.IconCompatParcelizer.write(Landroidx\/core\/graphics\/drawable\/IconCompat;Landroidx\/versionedparcelable\/VersionedParcel;)V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:29)\l0x0001: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:boolean)\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.setSerializationFlags(boolean, boolean):void A[MD:(boolean, boolean):void (m)]\l0x0004: INVOKE  (r1 I:boolean) = (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.isStream():boolean A[MD:():boolean (m)] (LINE:30)\l0x0008: INVOKE  \l  (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)])\l  (r1 I:boolean)\l type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):void A[MD:(boolean):void (m)]\l0x000b: IGET  (r1 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:31)\l0x000d: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0015 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|0x0010: IGET  (r1 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:32)\l0x0012: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r1 I:int)\l  (r0 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeInt(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: IGET  (r0 I:byte[]) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mData byte[]  (LINE:34)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001f \l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|0x0019: IGET  (r0 I:byte[]) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mData byte[]  (LINE:35)\l0x001b: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001c: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:byte[])\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[], int):void A[MD:(byte[], int):void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001f|0x001f: IGET  (r0 I:android.os.Parcelable) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mParcelable android.os.Parcelable  (LINE:37)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0029 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0023|0x0023: IGET  (r0 I:android.os.Parcelable) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mParcelable android.os.Parcelable  (LINE:38)\l0x0025: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0026: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:android.os.Parcelable)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable, int):void A[MD:(android.os.Parcelable, int):void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0029|0x0029: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt1 int  (LINE:40)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|0x002b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0033 \l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|0x002d: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt1 int  (LINE:41)\l0x002f: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0030: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:int)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeInt(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt2 int  (LINE:43)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|0x0035: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x003d \l}"];
Node_44 [shape=record,label="{44\:\ 0x0037|0x0037: IGET  (r0 I:int) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt2 int  (LINE:44)\l0x0039: CONST  (r1 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x003a: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:int)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeInt(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x003d|0x003d: IGET  (r0 I:android.content.res.ColorStateList) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList  (LINE:46)\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f|0x003f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0047 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|0x0041: IGET  (r0 I:android.content.res.ColorStateList) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList  (LINE:47)\l0x0043: CONST  (r1 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l0x0044: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:android.os.Parcelable)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable, int):void A[MD:(android.os.Parcelable, int):void (m)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0047|0x0047: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintModeStr java.lang.String  (LINE:49)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0049|0x0049: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0051 \l}"];
Node_50 [shape=record,label="{50\:\ 0x004b|0x004b: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintModeStr java.lang.String  (LINE:50)\l0x004d: CONST  (r1 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char]) \l0x004e: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:java.lang.String)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0051|0x0051: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mString1 java.lang.String  (LINE:52)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0053|0x0053: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:? \l}"];
Node_53 [shape=record,label="{53\:\ 0x0055|0x0055: IGET  (r0 I:java.lang.String) = (r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mString1 java.lang.String  (LINE:53)\l0x0057: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0059: INVOKE  \l  (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel)])\l  (r0 I:java.lang.String)\l  (r1 I:int)\l type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x005c|RETURN\lORIG_RETURN\l|0x005c: RETURN    (LINE:55)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x005c: RETURN   A[SYNTHETIC] (LINE:55)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.drawable.IconCompatParcelizer.write((r3 I:androidx.core.graphics.drawable.IconCompat A[D('obj' androidx.core.graphics.drawable.IconCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.versionedparcelable.VersionedParcel A[D('parcel' androidx.versionedparcelable.VersionedParcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0053 \-\> B:54:0x005c, CROSS_EDGE: B:49:0x0049 \-\> B:51:0x0051, CROSS_EDGE: B:46:0x003f \-\> B:48:0x0047, CROSS_EDGE: B:43:0x0035 \-\> B:45:0x003d, CROSS_EDGE: B:40:0x002b \-\> B:42:0x0033, CROSS_EDGE: B:37:0x0021 \-\> B:39:0x0029, CROSS_EDGE: B:34:0x0017 \-\> B:36:0x001f, CROSS_EDGE: B:31:0x000e \-\> B:33:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x005c: r3 'obj' Landroidx\/core\/graphics\/drawable\/IconCompat;\l  \-1 \-0x005c: r4 'parcel' Landroidx\/versionedparcelable\/VersionedParcel;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_55;
Node_53 -> Node_54;
Node_54 -> Node_29;
Node_55 -> Node_29;
}

