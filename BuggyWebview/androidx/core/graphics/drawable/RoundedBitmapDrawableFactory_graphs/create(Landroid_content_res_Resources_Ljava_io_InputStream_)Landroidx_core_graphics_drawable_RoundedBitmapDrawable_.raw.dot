digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawableFactory.create(Landroid\/content\/res\/Resources;Ljava\/io\/InputStream;)Landroidx\/core\/graphics\/drawable\/RoundedBitmapDrawable;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.graphics.Bitmap) = (r4 I:java.io.InputStream A[D('is' java.io.InputStream)]) type: STATIC call: android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap A[MD:(java.io.InputStream):android.graphics.Bitmap (c)] (LINE:97)\l0x0004: INVOKE  (r0 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) = (r3 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r0 I:android.graphics.Bitmap) type: STATIC call: androidx.core.graphics.drawable.RoundedBitmapDrawableFactory.create(android.content.res.Resources, android.graphics.Bitmap):androidx.core.graphics.drawable.RoundedBitmapDrawable A[MD:(android.content.res.Resources, android.graphics.Bitmap):androidx.core.graphics.drawable.RoundedBitmapDrawable (m)]\l0x0008: INVOKE  (r1 I:android.graphics.Bitmap) = \l  (r0 I:androidx.core.graphics.drawable.RoundedBitmapDrawable A[D('drawable' androidx.core.graphics.drawable.RoundedBitmapDrawable)])\l type: VIRTUAL call: androidx.core.graphics.drawable.RoundedBitmapDrawable.getBitmap():android.graphics.Bitmap A[MD:():android.graphics.Bitmap (m)] (LINE:98)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:99)\l0x0010: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"RoundedBitmapDrawable cannot decode \" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object A[D('is' java.io.InputStream)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"RoundedBitmapDrawableFa\" \l0x0021: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|RETURN\l|0x0024: RETURN  \l  (r0 I:androidx.core.graphics.drawable.RoundedBitmapDrawable A[D('drawable' androidx.core.graphics.drawable.RoundedBitmapDrawable)])\l  (LINE:101)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static androidx.core.graphics.drawable.RoundedBitmapDrawable androidx.core.graphics.drawable.RoundedBitmapDrawableFactory.create((r3 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.io.InputStream A[D('is' java.io.InputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x000c \-\> B:5:0x0024\lDebug Info:\l  0x0008\-0x0024: r0 'drawable' Landroidx\/core\/graphics\/drawable\/RoundedBitmapDrawable;\l  \-1 \-0x0024: r3 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0024: r4 'is' Ljava\/io\/InputStream;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

