digraph "CFG forandroidx.core.graphics.drawable.DrawableKt.toBitmapOrNull(Landroid\/graphics\/drawable\/Drawable;IILandroid\/graphics\/Bitmap$Config;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('$this$toBitmapOrNull' android.graphics.drawable.Drawable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INSTANCE_OF  (r0 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('$this$toBitmapOrNull' android.graphics.drawable.Drawable)]) android.graphics.drawable.BitmapDrawable  (LINE:98)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('$this$toBitmapOrNull' android.graphics.drawable.Drawable)]) \l0x000a: CHECK_CAST (r0 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:android.graphics.drawable.BitmapDrawable) type: VIRTUAL call: android.graphics.drawable.BitmapDrawable.getBitmap():android.graphics.Bitmap A[MD:():android.graphics.Bitmap (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:99)\l0x0013: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r1 I:android.graphics.drawable.Drawable A[D('$this$toBitmapOrNull' android.graphics.drawable.Drawable)])\l  (r2 I:int A[D('width' int)])\l  (r3 I:int A[D('height' int)])\l  (r4 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableKt.toBitmap(android.graphics.drawable.Drawable, int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(android.graphics.drawable.Drawable, int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (m)] (LINE:101)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public static final android.graphics.Bitmap androidx.core.graphics.drawable.DrawableKt.toBitmapOrNull((r1 I:android.graphics.drawable.Drawable A[D('$this$toBitmapOrNull' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0018 \-\> B:1:?, CROSS_EDGE: B:3:0x0007 \-\> B:8:0x0014\lDebug Info:\l  \-1 \-0x0018: r1 '$this$toBitmapOrNull' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0018: r2 'width' I\l  \-1 \-0x0018: r3 'height' I\l  \-1 \-0x0018: r4 'config' Landroid\/graphics\/Bitmap$Config;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

