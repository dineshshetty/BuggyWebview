digraph "CFG forandroidx.core.graphics.drawable.DrawableKt.toBitmap(Landroid\/graphics\/drawable\/Drawable;IILandroid\/graphics\/Bitmap$Config;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if ((r7 instanceof android.graphics.drawable.BitmapDrawable) == false) goto L19\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (((android.graphics.drawable.BitmapDrawable) r7).getBitmap() == null) goto L17\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|if (r10 == null) goto L8\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016}"];
Node_8 [shape=record,label="{8\:\ 0x0021|if (((android.graphics.drawable.BitmapDrawable) r7).getBitmap().getConfig() != r10) goto L19\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r8 != ((android.graphics.drawable.BitmapDrawable) r7).getBitmap().getWidth()) goto L15\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030}"];
Node_12 [shape=record,label="{12\:\ 0x003b|if (r9 != ((android.graphics.drawable.BitmapDrawable) r7).getBitmap().getHeight()) goto L15\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|android.graphics.Bitmap r0 = ((android.graphics.drawable.BitmapDrawable) r7).getBitmap()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"bitmap\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|android.graphics.Bitmap r0 = android.graphics.Bitmap.createScaledBitmap(((android.graphics.drawable.BitmapDrawable) r7).getBitmap(), r8, r9, true)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"createScaledBitmap(bitmap, width, height, true)\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|RETURN\l|return r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x005a}"];
Node_18 [shape=record,label="{18\:\ 0x0061|throw new java.lang.IllegalArgumentException(\"bitmap is null\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|android.graphics.Rect r0 = r7.getBounds()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"bounds\")\lint r2 = r0.left\lint r3 = r0.top\lint r4 = r0.right\lint r0 = r0.bottom\l}"];
Node_20 [shape=record,label="{20\:\ 0x007e|if (r10 != null) goto L24\l}"];
Node_21 [shape=record,label="{21\:\ 0x0080|android.graphics.Bitmap$Config r5 = android.graphics.Bitmap.Config.ARGB_8888\l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|PHI: r5 \l  PHI: (r5v3 android.graphics.Bitmap$Config) = (r5v2 android.graphics.Bitmap$Config), (r5v5 android.graphics.Bitmap$Config) binds: [B:22:0x0083, B:21:0x0080] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.Bitmap r5 = android.graphics.Bitmap.createBitmap(r8, r9, r5)\lr7.setBounds(0, 0, r8, r9)\lr7.draw(new android.graphics.Canvas(r5))\lr7.setBounds(r2, r3, r4, r0)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r5, \"bitmap\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x009a|RETURN\l|return r5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0083|r5 = r10\l}"];
MethodNode[shape=record,label="{public static final android.graphics.Bitmap androidx.core.graphics.drawable.DrawableKt.toBitmap((r7v0 '$this$toBitmap' android.graphics.drawable.Drawable A[D('$this$toBitmap' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'config' android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0059 \-\> B:1:?, CROSS_EDGE: B:10:0x002e \-\> B:15:0x0048, CROSS_EDGE: B:24:0x009a \-\> B:1:?, CROSS_EDGE: B:22:0x0083 \-\> B:23:0x0084, CROSS_EDGE: B:6:0x0014 \-\> B:9:0x0023, CROSS_EDGE: B:18:0x0061 \-\> B:1:?, CROSS_EDGE: B:3:0x0009 \-\> B:19:0x0062\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_22 -> Node_23;
}

