digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawable.computeBitmapSize()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Bitmap) = (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmap android.graphics.Bitmap  (LINE:84)\l0x0002: IGET  (r1 I:int) = (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mTargetDensity int \l0x0004: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap), (r1 I:int) type: VIRTUAL call: android.graphics.Bitmap.getScaledWidth(int):int A[MD:(int):int (c)]\l0x0008: IPUT  (r0 I:int), (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapWidth int \l0x000a: IGET  (r0 I:android.graphics.Bitmap) = (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmap android.graphics.Bitmap  (LINE:85)\l0x000c: IGET  (r1 I:int) = (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mTargetDensity int \l0x000e: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap), (r1 I:int) type: VIRTUAL call: android.graphics.Bitmap.getScaledHeight(int):int A[MD:(int):int (c)]\l0x0012: IPUT  (r0 I:int), (r2 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapHeight int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:86)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.core.graphics.drawable.RoundedBitmapDrawable.computeBitmapSize((r2 'this' I:androidx.core.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

