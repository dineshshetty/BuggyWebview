digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawable.onBoundsChange(Landroid\/graphics\/Rect;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: SUPER call: android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:345)\l0x0003: IGET  (r0 I:boolean) = (r1 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mIsCircular boolean  (LINE:346)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: INVOKE  (r1 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) type: DIRECT call: androidx.core.graphics.drawable.RoundedBitmapDrawable.updateCircularCornerRadius():void A[MD:():void (m)] (LINE:347)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:349)\l0x000b: IPUT  (r0 I:boolean), (r1 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mApplyGravity boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:350)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.core.graphics.drawable.RoundedBitmapDrawable.onBoundsChange((r1 'this' I:androidx.core.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r2 'bounds' Landroid\/graphics\/Rect;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.onBoundsChange(android.graphics.Rect):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

