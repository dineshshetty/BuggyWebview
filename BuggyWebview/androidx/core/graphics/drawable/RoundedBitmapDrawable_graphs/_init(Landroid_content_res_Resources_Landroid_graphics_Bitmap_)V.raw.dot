digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawable.\<init\>(Landroid\/content\/res\/Resources;Landroid\/graphics\/Bitmap;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r3 I:android.graphics.drawable.Drawable) type: DIRECT call: android.graphics.drawable.Drawable.\<init\>():void A[MD:():void (c)] (LINE:382)\l0x0003: CONST  (r0 I:??[int, float, short, byte, char]) = (160(0xa0, float:2.24E\-43) ??[int, float, short, byte, char])  (LINE:50)\l0x0005: IPUT  (r0 I:int), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mTargetDensity int \l0x0007: CONST  (r0 I:??[int, float, short, byte, char]) = (119(0x77, float:1.67E\-43) ??[int, float, short, byte, char])  (LINE:51)\l0x0009: IPUT  (r0 I:int), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mGravity int \l0x000b: NEW_INSTANCE  (r0 I:android.graphics.Paint) =  android.graphics.Paint  (LINE:52)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x000e: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) type: DIRECT call: android.graphics.Paint.\<init\>(int):void A[MD:(int):void (c)]\l0x0011: IPUT  (r0 I:android.graphics.Paint), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mPaint android.graphics.Paint \l0x0013: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:54)\l0x0015: INVOKE  (r0 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0018: IPUT  (r0 I:android.graphics.Matrix), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mShaderMatrix android.graphics.Matrix \l0x001a: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:57)\l0x001c: INVOKE  (r0 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x001f: IPUT  (r0 I:android.graphics.Rect), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mDstRect android.graphics.Rect \l0x0021: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:58)\l0x0023: INVOKE  (r0 I:android.graphics.RectF) type: DIRECT call: android.graphics.RectF.\<init\>():void A[MD:():void (c)]\l0x0026: IPUT  (r0 I:android.graphics.RectF), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mDstRectF android.graphics.RectF \l0x0028: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:60)\l0x0029: IPUT  (r0 I:boolean), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mApplyGravity boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('res' android.content.res.Resources)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0035  (LINE:383)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: INVOKE  (r0 I:android.util.DisplayMetrics) = (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)]) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)] (LINE:384)\l0x0031: IGET  (r0 I:int) = (r0 I:android.util.DisplayMetrics) android.util.DisplayMetrics.densityDpi int \l0x0033: IPUT  (r0 I:int), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mTargetDensity int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: IPUT  \l  (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])\l  (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable)\l androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmap android.graphics.Bitmap  (LINE:387)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bitmap' android.graphics.Bitmap)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0048  (LINE:388)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|0x0039: INVOKE  (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) type: DIRECT call: androidx.core.graphics.drawable.RoundedBitmapDrawable.computeBitmapSize():void A[MD:():void (m)] (LINE:389)\l0x003c: NEW_INSTANCE  (r0 I:android.graphics.BitmapShader) =  android.graphics.BitmapShader  (LINE:390)\l0x003e: SGET  (r1 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x0040: SGET  (r2 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.CLAMP android.graphics.Shader$TileMode \l0x0042: INVOKE  \l  (r0 I:android.graphics.BitmapShader)\l  (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])\l  (r1 I:android.graphics.Shader$TileMode)\l  (r2 I:android.graphics.Shader$TileMode)\l type: DIRECT call: android.graphics.BitmapShader.\<init\>(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void A[MD:(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void (c)]\l0x0045: IPUT  (r0 I:android.graphics.BitmapShader), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapShader android.graphics.BitmapShader \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0050: RETURN   A[SYNTHETIC] (LINE:395)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:392)\l0x0049: IPUT  (r0 I:int), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapHeight int \l0x004b: IPUT  (r0 I:int), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapWidth int \l0x004d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:393)\l0x004e: IPUT  (r0 I:android.graphics.BitmapShader), (r3 I:androidx.core.graphics.drawable.RoundedBitmapDrawable) androidx.core.graphics.drawable.RoundedBitmapDrawable.mBitmapShader android.graphics.BitmapShader \l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|RETURN\lORIG_RETURN\l|0x0050: RETURN    (LINE:395)\l}"];
MethodNode[shape=record,label="{public void androidx.core.graphics.drawable.RoundedBitmapDrawable.\<init\>((r3 'this' I:androidx.core.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0048 \-\> B:20:0x0050, CROSS_EDGE: B:14:0x002b \-\> B:16:0x0035\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0050: r4 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0050: r5 'bitmap' Landroid\/graphics\/Bitmap;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

