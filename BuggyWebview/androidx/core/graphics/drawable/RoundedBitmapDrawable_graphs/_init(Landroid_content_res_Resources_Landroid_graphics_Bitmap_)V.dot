digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawable.\<init\>(Landroid\/content\/res\/Resources;Landroid\/graphics\/Bitmap;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|r3.mTargetDensity = 160\lr3.mGravity = 119\lr3.mPaint = new android.graphics.Paint(3)\lr3.mShaderMatrix = new android.graphics.Matrix()\lr3.mDstRect = new android.graphics.Rect()\lr3.mDstRectF = new android.graphics.RectF()\lr3.mApplyGravity = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|if (r4 == null) goto L4\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|r3.mTargetDensity = r4.getDisplayMetrics().densityDpi\l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|r3.mBitmap = r5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|if (r5 == null) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|computeBitmapSize()\lr3.mBitmapShader = new android.graphics.BitmapShader(r5, android.graphics.Shader.TileMode.CLAMP, android.graphics.Shader.TileMode.CLAMP)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|r3.mBitmapHeight = \-1\lr3.mBitmapWidth = \-1\lr3.mBitmapShader = null\l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.core.graphics.drawable.RoundedBitmapDrawable.\<init\>((r3v0 'this' androidx.core.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]), (r4v0 'res' android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'bitmap' android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0048 \-\> B:20:0x0050, CROSS_EDGE: B:14:0x002b \-\> B:16:0x0035\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

