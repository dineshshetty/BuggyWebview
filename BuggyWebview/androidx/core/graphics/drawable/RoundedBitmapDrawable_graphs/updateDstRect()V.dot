digraph "CFG forandroidx.core.graphics.drawable.RoundedBitmapDrawable.updateDstRect()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r13.mApplyGravity == false) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004}"];
Node_19 [shape=record,label="{19\:\ 0x0007|if (r13.mIsCircular == false) goto L12\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|int r0 = java.lang.Math.min(r13.mBitmapWidth, r13.mBitmapHeight)\lgravityCompatApply(r13.mGravity, r0, r0, getBounds(), r13.mDstRect)\lint r2 = java.lang.Math.min(r13.mDstRect.width(), r13.mDstRect.height())\lint r3 = java.lang.Math.max(0, (r13.mDstRect.width() \- r2) \/ 2)\lint r4 = java.lang.Math.max(0, (r13.mDstRect.height() \- r2) \/ 2)\lr13.mDstRect.inset(r3, r4)\lr13.mCornerRadius = ((float) r2) * 0.5f\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|r13.mDstRectF.set(r13.mDstRect)\l}"];
Node_23 [shape=record,label="{23\:\ 0x006f|if (r13.mBitmapShader == null) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|r13.mShaderMatrix.setTranslate(r13.mDstRectF.left, r13.mDstRectF.top)\lr13.mShaderMatrix.preScale(r13.mDstRectF.width() \/ ((float) r13.mBitmap.getWidth()), r13.mDstRectF.height() \/ ((float) r13.mBitmap.getHeight()))\lr13.mBitmapShader.setLocalMatrix(r13.mShaderMatrix)\lr13.mPaint.setShader(r13.mBitmapShader)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ad|r13.mApplyGravity = false\l}"];
Node_26 [shape=record,label="{26\:\ 0x00af|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0056|gravityCompatApply(r13.mGravity, r13.mBitmapWidth, r13.mBitmapHeight, getBounds(), r13.mDstRect)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.core.graphics.drawable.RoundedBitmapDrawable.updateDstRect((r13v0 'this' androidx.core.graphics.drawable.RoundedBitmapDrawable A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x006f \-\> B:25:0x00ad, CROSS_EDGE: B:21:0x0056 \-\> B:22:0x0066, CROSS_EDGE: B:17:0x0002 \-\> B:26:0x00af\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_21 -> Node_22;
Node_27 -> Node_15;
}

