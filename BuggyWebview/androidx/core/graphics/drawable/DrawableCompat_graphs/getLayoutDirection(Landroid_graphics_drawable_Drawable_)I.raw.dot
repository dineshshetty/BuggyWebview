digraph "CFG forandroidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(Landroid\/graphics\/drawable\/Drawable;)I" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:401)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:34:0x000b \l}"];
Node_32 [shape=record,label="{32\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r6 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.Api23Impl.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:402)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:403)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|0x0010: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:51:0x004c \l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|0x0012: SGET  (r0 I:boolean) =  androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethodFetched boolean  (LINE:404)\l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"DrawableCompat\" \l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0031 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|0x0018: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:406)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0019|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodException \-\> 0x0029, blocks: (B:39:0x0019), top: B:52:0x0019 \}\lCatch: NoSuchMethodException \-\> 0x0029\l|0x0019: CONST_CLASS  (r3 I:java.lang.Class\<android.graphics.drawable.Drawable\>) =  android.graphics.drawable.Drawable.class A[TRY_ENTER]\l0x001b: CONST_STR  (r4 I:java.lang.String) =  \"getLayoutDirection\" \l0x001d: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x0029]\l0x001f: INVOKE  (r3 I:java.lang.reflect.Method) = (r3 I:java.lang.Class), (r4 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0029, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)] (LINE:407)\l0x0023: SPUT  (r3 I:java.lang.reflect.Method) androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0029]\l0x0025: INVOKE  (r3 I:java.lang.reflect.Method), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x0029, MD:(boolean):void (s), TRY_LEAVE] (LINE:408)\l}"];
Node_43 [shape=record,label="{43\:\ 0x002f|0x002f: SPUT  (r0 I:boolean) androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethodFetched boolean  (LINE:412)\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0029|ExcHandler: NoSuchMethodException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r3 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0029] (LINE:409)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|0x002a: CONST_STR  (r4 I:java.lang.String) =  \"Failed to retrieve getLayoutDirection() method\"  (LINE:410)\l0x002c: INVOKE  (r1 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.NoSuchMethodException)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|0x0031: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethod java.lang.reflect.Method  (LINE:415)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x004b \l}"];
Node_50 [shape=record,label="{50\:\ 0x004b|RETURN\l|0x004b: RETURN  (r2 I:int)  (LINE:423)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0035|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ 0x0035|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x0042, blocks: (B:46:0x0035), top: B:54:0x0035 \}\lCatch: Exception \-\> 0x0042\l|0x0035: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x0042, TRY_ENTER] (LINE:417)\l0x0037: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r6 I:java.lang.Object A[D('drawable' android.graphics.drawable.Drawable)])\l  (r3 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x0042, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x003b: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0042]\l0x003d: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: Exception \-\> 0x0042, MD:():int (c), TRY_LEAVE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|RETURN\l|0x0041: RETURN  (r0 I:int) \l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_48 [shape=record,label="{48\:\ 0x0042|ExcHandler: Exception \-\> 0x0042\l|0x0042: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0042] (LINE:418)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0043|0x0043: CONST_STR  (r3 I:java.lang.String) =  \"Failed to invoke getLayoutDirection() via reflection\"  (LINE:419)\l0x0045: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l0x0048: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:420)\l0x0049: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.graphics.drawable.DrawableCompat.sGetLayoutDirectionMethod java.lang.reflect.Method \l}"];
Node_51 [shape=record,label="{51\:\ 0x004c|RETURN\l|0x004c: RETURN  (r2 I:int)  (LINE:425)\l}"];
MethodNode[shape=record,label="{public static int androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection((r6 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:50:0x004b \-\> B:29:?, CROSS_EDGE: B:47:0x0041 \-\> B:29:?, CROSS_EDGE: B:49:0x0043 \-\> B:50:0x004b, CROSS_EDGE: B:54:0x0035 \-\> B:48:0x0042, CROSS_EDGE: B:42:0x002a \-\> B:43:0x002f, CROSS_EDGE: B:52:0x0019 \-\> B:41:0x0029, CROSS_EDGE: B:37:0x0016 \-\> B:44:0x0031, CROSS_EDGE: B:51:0x004c \-\> B:29:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x002f: r3 'e' Ljava\/lang\/NoSuchMethodException;\l  0x0043\-0x004b: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x004c: r6 'drawable' Landroid\/graphics\/drawable\/Drawable;\lTryCatch #0 \{NoSuchMethodException \-\> 0x0029, blocks: (B:39:0x0019), top: B:52:0x0019 \}, TryCatch #1 \{Exception \-\> 0x0042, blocks: (B:46:0x0035), top: B:54:0x0035 \}\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_29;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_51;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_52;
Node_52 -> Node_39;
Node_52 -> Node_41;
Node_39 -> Node_43;
Node_39 -> Node_53;
Node_43 -> Node_44;
Node_53 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_45 -> Node_50;
Node_45 -> Node_54[style=dashed];
Node_50 -> Node_29;
Node_54 -> Node_46;
Node_54 -> Node_48;
Node_46 -> Node_47;
Node_46 -> Node_55;
Node_47 -> Node_29;
Node_55 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_51 -> Node_29;
}

