digraph "CFG forandroidx.core.graphics.drawable.DrawableCompat.wrap(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/drawable\/Drawable;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 23) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|return r2\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007}"];
Node_23 [shape=record,label="{23\:\ 0x000b|if (android.os.Build.VERSION.SDK_INT \< 21) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d}"];
Node_25 [shape=record,label="{25\:\ 0x000f|if ((r2 instanceof androidx.core.graphics.drawable.TintAwareDrawable) != false) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011}"];
Node_27 [shape=record,label="{27\:\ 0x0016|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi21(r2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|RETURN\l|return r2\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018}"];
Node_30 [shape=record,label="{30\:\ 0x001a|if ((r2 instanceof androidx.core.graphics.drawable.TintAwareDrawable) != false) goto L16\l}"];
Node_31 [shape=record,label="{31\:\ 0x001c}"];
Node_32 [shape=record,label="{32\:\ 0x0021|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi14(r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap((r2v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0016 \-\> B:18:?, CROSS_EDGE: B:28:0x0017 \-\> B:18:?, CROSS_EDGE: B:32:0x0021 \-\> B:18:?, CROSS_EDGE: B:33:0x0022 \-\> B:18:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_18;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_18;
Node_33 -> Node_18;
}

