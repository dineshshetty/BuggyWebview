digraph "CFG forandroidx.core.graphics.drawable.DrawableCompat.clearColorFilter(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:229)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:40:0x000a \l}"];
Node_39 [shape=record,label="{39\:\ 0x0006|0x0006: INVOKE  (r5 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.clearColorFilter():void A[MD:():void (c)] (LINE:231)\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x000a|0x000a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:232)\l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:59:0x0055 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0010|0x0010: INVOKE  (r5 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.clearColorFilter():void A[MD:():void (c)] (LINE:233)\l0x0013: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.InsetDrawable  (LINE:239)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0022 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0017|0x0017: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:240)\l0x0018: CHECK_CAST (r0 I:android.graphics.drawable.InsetDrawable) = (android.graphics.drawable.InsetDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.graphics.drawable.InsetDrawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.Api19Impl.getDrawable(android.graphics.drawable.InsetDrawable):android.graphics.drawable.Drawable A[MD:(android.graphics.drawable.InsetDrawable):android.graphics.drawable.Drawable (m)]\l0x001e: INVOKE  (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.clearColorFilter(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)]\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0022|0x0022: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) androidx.core.graphics.drawable.WrappedDrawable  (LINE:241)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0024|0x0024: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0031 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|0x0026: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:242)\l0x0027: CHECK_CAST (r0 I:androidx.core.graphics.drawable.WrappedDrawable) = (androidx.core.graphics.drawable.WrappedDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:androidx.core.graphics.drawable.WrappedDrawable) type: INTERFACE call: androidx.core.graphics.drawable.WrappedDrawable.getWrappedDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (m)]\l0x002d: INVOKE  (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.clearColorFilter(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)]\l}"];
Node_66 [shape=record,label="{66\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|0x0031: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.DrawableContainer  (LINE:243)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:? \l}"];
Node_50 [shape=record,label="{50\:\ 0x0035|0x0035: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:244)\l0x0036: CHECK_CAST (r0 I:android.graphics.drawable.DrawableContainer) = (android.graphics.drawable.DrawableContainer) (r0 I:??[OBJECT, ARRAY]) \l0x0039: INVOKE  (r1 I:android.graphics.drawable.Drawable$ConstantState) = (r0 I:android.graphics.drawable.DrawableContainer A[D('container' android.graphics.drawable.DrawableContainer)]) type: VIRTUAL call: android.graphics.drawable.DrawableContainer.getConstantState():android.graphics.drawable.Drawable$ConstantState A[MD:():android.graphics.drawable.Drawable$ConstantState (c)] (LINE:246)\l0x003d: CHECK_CAST (r1 I:android.graphics.drawable.DrawableContainer$DrawableContainerState) = (android.graphics.drawable.DrawableContainer$DrawableContainerState) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x003f|0x003f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' android.graphics.drawable.DrawableContainer$DrawableContainerState)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:?  (LINE:247)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0041|0x0041: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:249)\l0x0042: INVOKE  (r3 I:int) = \l  (r1 I:android.graphics.drawable.DrawableContainer$DrawableContainerState A[D('state' android.graphics.drawable.DrawableContainer$DrawableContainerState)])\l type: VIRTUAL call: android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildCount():int A[MD:():int (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0046|LOOP_START\lLOOP:0: B:53:0x0046\-\>B:57:0x0051\l|0x0046: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:61:0x0058 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0048|0x0048: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r1 I:android.graphics.drawable.DrawableContainer$DrawableContainerState A[D('state' android.graphics.drawable.DrawableContainer$DrawableContainerState)])\l  (r2 I:int A[D('i' int)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.Api19Impl.getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState, int):android.graphics.drawable.Drawable A[MD:(android.graphics.drawable.DrawableContainer$DrawableContainerState, int):android.graphics.drawable.Drawable (m)] (LINE:250)\l}"];
Node_55 [shape=record,label="{55\:\ 0x004c|0x004c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0051  (LINE:251)\l}"];
Node_56 [shape=record,label="{56\:\ 0x004e|0x004e: INVOKE  (r4 I:android.graphics.drawable.Drawable A[D('child' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.clearColorFilter(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (m)] (LINE:252)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0051|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0051|LOOP_END\lLOOP:0: B:53:0x0046\-\>B:57:0x0051\l|0x0051: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:249)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0051|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x0058: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0055|0x0055: INVOKE  (r5 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.clearColorFilter():void A[MD:():void (c)] (LINE:258)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0058|RETURN\lORIG_RETURN\l|0x0058: RETURN    (LINE:260)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.graphics.drawable.DrawableCompat.clearColorFilter((r5 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:44:0x0017 \-\> B:60:0x0058, CROSS_EDGE: B:47:0x0026 \-\> B:60:0x0058, BACK_EDGE: B:57:0x0051 \-\> B:53:0x0046, CROSS_EDGE: B:55:0x004c \-\> B:57:0x0051, CROSS_EDGE: B:53:0x0046 \-\> B:60:0x0058, CROSS_EDGE: B:51:0x003f \-\> B:60:0x0058, CROSS_EDGE: B:49:0x0033 \-\> B:60:0x0058, CROSS_EDGE: B:59:0x0055 \-\> B:60:0x0058\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0038\-0x0054: r0 'container' Landroid\/graphics\/drawable\/DrawableContainer;\l  0x003f\-0x0054: r1 'state' Landroid\/graphics\/drawable\/DrawableContainer$DrawableContainerState;\l  0x0042\-0x0054: r2 'i' I\l  0x0046\-0x0054: r3 'count' I\l  0x004c\-0x0054: r4 'child' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0058: r5 'drawable' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_64;
Node_64 -> Node_36;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_59;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_65;
Node_65 -> Node_36;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_66;
Node_66 -> Node_36;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_67;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_68;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_61;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_63;
Node_56 -> Node_62;
Node_62 -> Node_57;
Node_57 -> Node_53;
Node_63 -> Node_57;
Node_61 -> Node_69;
Node_69 -> Node_36;
Node_68 -> Node_36;
Node_67 -> Node_36;
Node_59 -> Node_60;
Node_60 -> Node_36;
}

