digraph "CFG forandroidx.core.graphics.drawable.DrawableCompat.wrap(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_1546096626 {
label = "R(1:(2:(1:3)|(1:(1:(2:(1:10)|(1:11)))(1:(1:15)(1:16)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1284195335 {
label = "R(2:(1:3)|(1:(1:(2:(1:10)|(1:11)))(1:(1:15)(1:16))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_9629195 {
label = "IF [B:20:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L3\l}"];
subgraph cluster_Region_1323873481 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_777054969 {
label = "R(1:(1:(2:(1:10)|(1:11)))(1:(1:15)(1:16)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_955070536 {
label = "IF [B:23:0x000b] THEN: R(1:(2:(1:10)|(1:11))) ELSE: R(1:(1:15)(1:16))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000b|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L7\l}"];
subgraph cluster_Region_790129640 {
label = "R(1:(2:(1:10)|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_618519614 {
label = "R(2:(1:10)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_225701246 {
label = "IF [B:25:0x000f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000f|if ((r2 instanceof androidx.core.graphics.drawable.TintAwareDrawable) == false) goto L9\l}"];
subgraph cluster_Region_1544403936 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0016|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi21(r2)\l}"];
}
}
subgraph cluster_Region_816241826 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0017|RETURN\l|return r2\l}"];
}
}
}
subgraph cluster_Region_2060507812 {
label = "R(1:(1:15)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1750778013 {
label = "IF [B:30:0x001a] THEN: R(1:15) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001a|if ((r2 instanceof androidx.core.graphics.drawable.TintAwareDrawable) == false) goto L14\l}"];
subgraph cluster_Region_1505338573 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0021|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi14(r2)\l}"];
}
subgraph cluster_Region_1601970324 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|RETURN\l|return r2\l}"];
}
}
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0007}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0011}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0018}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001c}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap((r2v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0016 \-\> B:18:?, CROSS_EDGE: B:28:0x0017 \-\> B:18:?, CROSS_EDGE: B:32:0x0021 \-\> B:18:?, CROSS_EDGE: B:33:0x0022 \-\> B:18:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_18;
Node_23 -> Node_24;
Node_23 -> Node_29[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_18;
Node_28 -> Node_18;
Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_32 -> Node_18;
Node_33 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

