digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableApi21.isProjected()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r4 I:androidx.core.graphics.drawable.WrappedDrawableApi21) androidx.core.graphics.drawable.WrappedDrawableApi21.mDrawable android.graphics.drawable.Drawable  (LINE:129)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.graphics.drawable.WrappedDrawableApi21.sIsProjectedDrawableMethod java.lang.reflect.Method \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0018, blocks: (B:6:0x0009), top: B:11:0x0009 \}\lCatch: Exception \-\> 0x0018\l|0x0009: IGET  (r2 I:android.graphics.drawable.Drawable) = (r4 I:androidx.core.graphics.drawable.WrappedDrawableApi21) androidx.core.graphics.drawable.WrappedDrawableApi21.mDrawable android.graphics.drawable.Drawable A[Catch: Exception \-\> 0x0018, TRY_ENTER] (LINE:131)\l0x000b: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x0018]\l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Method), (r2 I:java.lang.Object), (r3 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x0018, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0011: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0018]\l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: Exception \-\> 0x0018, MD:():boolean (c), TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|ExcHandler: Exception \-\> 0x0018\l|0x0018: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0018] (LINE:132)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: CONST_STR  (r2 I:java.lang.String) =  \"WrappedDrawableApi21\"  (LINE:133)\l0x001b: CONST_STR  (r3 I:java.lang.String) =  \"Error calling Drawable#isProjected() method\" \l0x001d: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String), (r0 I:java.lang.Throwable A[D('ex' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:boolean)  (LINE:137)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.graphics.drawable.WrappedDrawableApi21.isProjected((r4 'this' I:androidx.core.graphics.drawable.WrappedDrawableApi21 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:7:0x0017 \-\> B:1:?, CROSS_EDGE: B:9:0x0019 \-\> B:10:0x0020, CROSS_EDGE: B:11:0x0009 \-\> B:8:0x0018, CROSS_EDGE: B:3:0x0003 \-\> B:10:0x0020\lDebug Info:\l  0x0019\-0x0020: r0 'ex' Ljava\/lang\/Exception;\lTryCatch #0 \{Exception \-\> 0x0018, blocks: (B:6:0x0009), top: B:11:0x0009 \}\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.isProjected():boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_10;
Node_5 -> Node_11[style=dashed];
Node_11 -> Node_6;
Node_11 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_1;
Node_12 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

