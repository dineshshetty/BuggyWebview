digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableApi21.isCompatTintEnabled()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT != 21) goto L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|android.graphics.drawable.Drawable r0 = r3.mDrawable\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if ((r0 instanceof android.graphics.drawable.GradientDrawable) != false) goto L13\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if ((r0 instanceof android.graphics.drawable.DrawableContainer) != false) goto L13\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011}"];
Node_9 [shape=record,label="{9\:\ 0x0013|if ((r0 instanceof android.graphics.drawable.InsetDrawable) != false) goto L13\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015}"];
Node_11 [shape=record,label="{11\:\ 0x0017|if ((r0 instanceof android.graphics.drawable.RippleDrawable) == false) goto L11\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|RETURN\lORIG_RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{protected boolean androidx.core.graphics.drawable.WrappedDrawableApi21.isCompatTintEnabled((r3v0 'this' androidx.core.graphics.drawable.WrappedDrawableApi21 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0017 \-\> B:13:0x001a, CROSS_EDGE: B:9:0x0013 \-\> B:12:0x0019, CROSS_EDGE: B:7:0x000f \-\> B:12:0x0019, CROSS_EDGE: B:5:0x000b \-\> B:12:0x0019, CROSS_EDGE: B:14:0x001b \-\> B:1:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.core.graphics.drawable.WrappedDrawableApi14.isCompatTintEnabled():boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_15 -> Node_1;
Node_12 -> Node_1;
Node_14 -> Node_1;
}

