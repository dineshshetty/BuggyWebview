digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableState.newDrawable(Landroid\/content\/res\/Resources;)Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_1867253757 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1483901667 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1540064906 {
label = "IF [B:11:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L3\l}"];
subgraph cluster_Region_1910760739 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi21(r2, r3)\l}"];
}
}
subgraph cluster_Region_2124379917 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|return new androidx.core.graphics.drawable.WrappedDrawableApi14(r2, r3)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0006}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000c}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.core.graphics.drawable.WrappedDrawableState.newDrawable((r2v0 'this' androidx.core.graphics.drawable.WrappedDrawableState A[IMMUTABLE_TYPE, THIS]), (r3v0 'res' android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:9:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable\}]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

