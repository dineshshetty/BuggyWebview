digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableApi14.updateTint([I)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) type: VIRTUAL call: androidx.core.graphics.drawable.WrappedDrawableApi14.isCompatTintEnabled():boolean A[MD:():boolean (m)] (LINE:305)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0008 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:boolean)  (LINE:307)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: IGET  (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mState androidx.core.graphics.drawable.WrappedDrawableState  (LINE:310)\l0x000a: IGET  (r0 I:android.content.res.ColorStateList) = (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) androidx.core.graphics.drawable.WrappedDrawableState.mTint android.content.res.ColorStateList \l0x000c: IGET  (r2 I:androidx.core.graphics.drawable.WrappedDrawableState) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mState androidx.core.graphics.drawable.WrappedDrawableState  (LINE:311)\l0x000e: IGET  (r2 I:android.graphics.PorterDuff$Mode) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableState) androidx.core.graphics.drawable.WrappedDrawableState.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tintList' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0035  (LINE:313)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tintMode' android.graphics.PorterDuff$Mode)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0035 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|0x0014: INVOKE  (r3 I:int) = (r0 I:android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList)]) type: VIRTUAL call: android.content.res.ColorStateList.getDefaultColor():int A[MD:():int (c)] (LINE:314)\l0x0018: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList)])\l  (r6 I:int[] A[D('state' int[])])\l  (r3 I:int)\l type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)]\l0x001c: IGET  (r4 I:boolean) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean  (LINE:315)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002a \l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|0x0020: IGET  (r4 I:int) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mCurrentColor int \l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('color' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|0x0024: IGET  (r4 I:android.graphics.PorterDuff$Mode) = (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mCurrentMode android.graphics.PorterDuff$Mode \l}"];
Node_33 [shape=record,label="{33\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tintMode' android.graphics.PorterDuff$Mode)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x003a \l}"];
Node_39 [shape=record,label="{39\:\ 0x003a|RETURN\l|0x003a: RETURN  (r1 I:boolean)  (LINE:326)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: INVOKE  \l  (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14)\l  (r3 I:int A[D('color' int)])\l  (r2 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode)])\l type: VIRTUAL call: androidx.core.graphics.drawable.WrappedDrawableApi14.setColorFilter(int, android.graphics.PorterDuff$Mode):void A[MD:(int, android.graphics.PorterDuff$Mode):void (c)] (LINE:316)\l0x002d: IPUT  (r3 I:int A[D('color' int)]), (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mCurrentColor int  (LINE:317)\l0x002f: IPUT  \l  (r2 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode)])\l  (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14)\l androidx.core.graphics.drawable.WrappedDrawableApi14.mCurrentMode android.graphics.PorterDuff$Mode  (LINE:318)\l0x0031: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:319)\l0x0032: IPUT  (r1 I:boolean), (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean \l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|RETURN\l|0x0034: RETURN  (r1 I:boolean)  (LINE:320)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|0x0035: IPUT  (r1 I:boolean), (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mColorFilterSet boolean  (LINE:323)\l0x0037: INVOKE  (r5 I:androidx.core.graphics.drawable.WrappedDrawableApi14) type: VIRTUAL call: androidx.core.graphics.drawable.WrappedDrawableApi14.clearColorFilter():void A[MD:():void (c)] (LINE:324)\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.graphics.drawable.WrappedDrawableApi14.updateTint((r5 'this' I:androidx.core.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]), (r6 I:int[] A[D('state' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0034 \-\> B:21:?, CROSS_EDGE: B:39:0x003a \-\> B:21:?, CROSS_EDGE: B:31:0x0022 \-\> B:36:0x002a, CROSS_EDGE: B:29:0x001e \-\> B:36:0x002a, CROSS_EDGE: B:38:0x0035 \-\> B:39:0x003a, CROSS_EDGE: B:26:0x0010 \-\> B:38:0x0035\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0029: r3 'color' I\l  0x002a\-0x0035: r3 'color' I\l  0x000c\-0x003a: r0 'tintList' Landroid\/content\/res\/ColorStateList;\l  0x0010\-0x003a: r2 'tintMode' Landroid\/graphics\/PorterDuff$Mode;\l  \-1 \-0x003a: r6 'state' [I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_36[style=dashed];
Node_33 -> Node_39;
Node_39 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_38 -> Node_39;
}

