digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableApi14.getConstantState()Landroid\/graphics\/drawable\/Drawable$ConstantState;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mState androidx.core.graphics.drawable.WrappedDrawableState  (LINE:222)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0015 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) type: VIRTUAL call: androidx.core.graphics.drawable.WrappedDrawableState.canConstantState():boolean A[MD:():boolean (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IGET  (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mState androidx.core.graphics.drawable.WrappedDrawableState  (LINE:223)\l0x000c: INVOKE  (r1 I:int) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14) type: VIRTUAL call: androidx.core.graphics.drawable.WrappedDrawableApi14.getChangingConfigurations():int A[MD:():int (m)]\l0x0010: IPUT  (r1 I:int), (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) androidx.core.graphics.drawable.WrappedDrawableState.mChangingConfigurations int \l0x0012: IGET  (r0 I:androidx.core.graphics.drawable.WrappedDrawableState) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mState androidx.core.graphics.drawable.WrappedDrawableState  (LINE:224)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:android.graphics.drawable.Drawable$ConstantState) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:226)\l0x0016: RETURN  (r0 I:android.graphics.drawable.Drawable$ConstantState) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:226)\l0x0016: RETURN  (r0 I:android.graphics.drawable.Drawable$ConstantState) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable$ConstantState androidx.core.graphics.drawable.WrappedDrawableApi14.getConstantState((r2 'this' I:androidx.core.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x0016 \-\> B:12:?, CROSS_EDGE: B:14:0x0002 \-\> B:19:0x0015\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

