digraph "CFG forandroidx.core.graphics.drawable.WrappedDrawableApi14.setState([I)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14) androidx.core.graphics.drawable.WrappedDrawableApi14.mDrawable android.graphics.drawable.Drawable  (LINE:138)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable), (r3 I:int[] A[D('stateSet' int[])]) type: VIRTUAL call: android.graphics.drawable.Drawable.setState(int[]):boolean A[MD:(int[]):boolean (c)]\l0x0006: INVOKE  (r1 I:boolean) = (r2 I:androidx.core.graphics.drawable.WrappedDrawableApi14), (r3 I:int[] A[D('stateSet' int[])]) type: DIRECT call: androidx.core.graphics.drawable.WrappedDrawableApi14.updateTint(int[]):boolean A[MD:(int[]):boolean (m)] (LINE:139)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0011 \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('handled' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('handled' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:boolean A[D('handled' boolean)])  (LINE:140)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.core.graphics.drawable.WrappedDrawableApi14.setState((r2 'this' I:androidx.core.graphics.drawable.WrappedDrawableApi14 A[IMMUTABLE_TYPE, THIS]), (r3 I:int[] A[D('stateSet' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0011 \-\> B:18:0x0012, CROSS_EDGE: B:13:0x000a \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0013: r0 'handled' Z\l  \-1 \-0x0013: r3 'stateSet' [I\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setState(int[]):boolean\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_16;
Node_14 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

