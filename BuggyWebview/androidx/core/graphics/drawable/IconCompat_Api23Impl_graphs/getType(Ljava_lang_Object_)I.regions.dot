digraph "CFG forandroidx.core.graphics.drawable.IconCompat.Api23Impl.getType(Ljava\/lang\/Object;)I" {
subgraph cluster_Region_984166094 {
label = "R(1:(2:(1:4)|(1:(1:9))))";
node [shape=record,color=blue];
subgraph cluster_Region_1877480898 {
label = "R(2:(1:4)|(1:(1:9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_590389896 {
label = "IF [B:23:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0008|if (android.os.Build.VERSION.SDK_INT \>= 28) goto L3\l}"];
subgraph cluster_Region_1181340834 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000e|RETURN\l|return androidx.core.graphics.drawable.IconCompat.Api28Impl.getType(r7)\l}"];
}
}
subgraph cluster_Region_902123007 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_439097472 {
label = "Try: R(1:9) catches: R(3:11|12|13), R(3:14|15|16), R(3:17|18|19)";
node [shape=record,color=blue];
subgraph cluster_Region_1009704367 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0029|RETURN\l|return ((java.lang.Integer) r7.getClass().getMethod(\"getType\", new java.lang.Class[0]).invoke(r7, new java.lang.Object[0])).intValue()\l}"];
}
subgraph cluster_Region_879415884 {
label = "R(3:11|12|13) | ExcHandler: IllegalAccessException \-\> 0x0052\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0052|ExcHandler: IllegalAccessException \-\> 0x0052\l}"];
Node_36 [shape=record,label="{36\:\ 0x0053|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_727702411 {
label = "R(3:14|15|16) | ExcHandler: NoSuchMethodException \-\> 0x002a\l";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002a|ExcHandler: NoSuchMethodException \-\> 0x002a\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_1372401272 {
label = "R(3:17|18|19) | ExcHandler: InvocationTargetException \-\> 0x003e\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x003e|ExcHandler: InvocationTargetException \-\> 0x003e\l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0051|RETURN\l|return \-1\l}"];
}
}
}
}
}
subgraph cluster_Region_879415884 {
label = "R(3:11|12|13) | ExcHandler: IllegalAccessException \-\> 0x0052\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0052|ExcHandler: IllegalAccessException \-\> 0x0052\l}"];
Node_36 [shape=record,label="{36\:\ 0x0053|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_1372401272 {
label = "R(3:17|18|19) | ExcHandler: InvocationTargetException \-\> 0x003e\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x003e|ExcHandler: InvocationTargetException \-\> 0x003e\l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0051|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_727702411 {
label = "R(3:14|15|16) | ExcHandler: NoSuchMethodException \-\> 0x002a\l";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002a|ExcHandler: NoSuchMethodException \-\> 0x002a\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|android.util.Log.e(androidx.core.graphics.drawable.IconCompat.TAG, \"Unable to get icon type \" + r7, r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|RETURN\l|return \-1\l}"];
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0000}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000a}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000f}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0052, NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, blocks: (B:27:0x0010), top: B:38:0x0010 \}\lCatch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052\l}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{static int androidx.core.graphics.drawable.IconCompat.Api23Impl.getType((r7v0 'icon' java.lang.Object A[D('icon' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0029 \-\> B:21:?, CROSS_EDGE: B:37:0x0065 \-\> B:21:?, CROSS_EDGE: B:31:0x003d \-\> B:21:?, CROSS_EDGE: B:34:0x0051 \-\> B:21:?, CROSS_EDGE: B:38:0x0010 \-\> B:35:0x0052, CROSS_EDGE: B:38:0x0010 \-\> B:29:0x002a, CROSS_EDGE: B:38:0x0010 \-\> B:32:0x003e\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x0052, NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, blocks: (B:27:0x0010), top: B:38:0x0010 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_23 -> Node_24;
Node_23 -> Node_26[style=dashed];
Node_25 -> Node_21;
Node_28 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_38;
Node_38 -> Node_27;
Node_38 -> Node_35;
Node_38 -> Node_29;
Node_38 -> Node_32;
Node_27 -> Node_28;
Node_27 -> Node_39;
Node_39 -> Node_35;
Node_39 -> Node_29;
Node_39 -> Node_32;
}

