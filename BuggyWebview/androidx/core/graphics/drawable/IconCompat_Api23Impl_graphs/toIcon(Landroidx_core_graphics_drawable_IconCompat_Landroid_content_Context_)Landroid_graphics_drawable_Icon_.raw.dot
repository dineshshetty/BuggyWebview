digraph "CFG forandroidx.core.graphics.drawable.IconCompat.Api23Impl.toIcon(Landroidx\/core\/graphics\/drawable\/IconCompat;Landroid\/content\/Context;)Landroid\/graphics\/drawable\/Icon;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mType int  (LINE:1280)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0005|0x0005: SWITCH  (r0 I:??)\l case \-1: goto B:72:0x00d6\l case 0: goto B:41:0x0008\l case 1: goto B:64:0x00b8\l case 2: goto B:63:0x00ad\l case 3: goto B:62:0x00a0\l case 4: goto B:61:0x0097\l case 5: goto B:57:0x007d\l case 6: goto B:43:0x0010\l default: goto B:41:0x0008 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1328)\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"Unknown type\" \l0x000c: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x000f|0x000f: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0010|0x0010: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1306)\l0x0012: CONST  (r3 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0014|0x0014: IF  (r0 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:46:0x0020 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0016|0x0016: INVOKE  (r0 I:android.net.Uri) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:1307)\l0x001a: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:android.net.Uri) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api30Impl.createWithAdaptiveBitmapContentUri(android.net.Uri):android.graphics.drawable.Icon A[MD:(android.net.Uri):android.graphics.drawable.Icon (m)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x00c1|0x00c1: IGET  (r1 I:android.content.res.ColorStateList) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList  (LINE:1330)\l}"];
Node_66 [shape=record,label="{66\:\ 0x00c3|0x00c3: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x00ca \l}"];
Node_67 [shape=record,label="{67\:\ 0x00c5|0x00c5: IGET  (r1 I:android.content.res.ColorStateList) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintList android.content.res.ColorStateList  (LINE:1331)\l0x00c7: INVOKE  \l  (r0 I:android.graphics.drawable.Icon A[D('icon' android.graphics.drawable.Icon)])\l  (r1 I:android.content.res.ColorStateList)\l type: VIRTUAL call: android.graphics.drawable.Icon.setTintList(android.content.res.ColorStateList):android.graphics.drawable.Icon A[MD:(android.content.res.ColorStateList):android.graphics.drawable.Icon (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x00ca|0x00ca: IGET  (r1 I:android.graphics.PorterDuff$Mode) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintMode android.graphics.PorterDuff$Mode  (LINE:1333)\l0x00cc: SGET  (r2 I:android.graphics.PorterDuff$Mode) =  androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE android.graphics.PorterDuff$Mode \l}"];
Node_69 [shape=record,label="{69\:\ 0x00ce|0x00ce: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x00d5 \l}"];
Node_70 [shape=record,label="{70\:\ 0x00d0|0x00d0: IGET  (r1 I:android.graphics.PorterDuff$Mode) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mTintMode android.graphics.PorterDuff$Mode  (LINE:1334)\l0x00d2: INVOKE  \l  (r0 I:android.graphics.drawable.Icon A[D('icon' android.graphics.drawable.Icon)])\l  (r1 I:android.graphics.PorterDuff$Mode)\l type: VIRTUAL call: android.graphics.drawable.Icon.setTintMode(android.graphics.PorterDuff$Mode):android.graphics.drawable.Icon A[MD:(android.graphics.PorterDuff$Mode):android.graphics.drawable.Icon (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x00d5|RETURN\l|0x00d5: RETURN  (r0 I:android.graphics.drawable.Icon A[D('icon' android.graphics.drawable.Icon)])  (LINE:1336)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0020|0x0020: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('context' android.content.Context)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0062  (LINE:1310)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0022|0x0022: INVOKE  (r0 I:java.io.InputStream) = \l  (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)])\l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getUriInputStream(android.content.Context):java.io.InputStream A[MD:(android.content.Context):java.io.InputStream (m)] (LINE:1315)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('is' java.io.InputStream)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0047  (LINE:1316)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0028|0x0028: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1320)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002a|0x002a: IF  (r3 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:52:0x0037 \l}"];
Node_51 [shape=record,label="{51\:\ 0x002c|0x002c: INVOKE  (r1 I:android.graphics.Bitmap) = (r0 I:java.io.InputStream A[D('is' java.io.InputStream)]) type: STATIC call: android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap A[MD:(java.io.InputStream):android.graphics.Bitmap (c)] (LINE:1321)\l0x0030: INVOKE  (r1 I:android.graphics.drawable.Icon) = (r1 I:android.graphics.Bitmap) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api26Impl.createWithAdaptiveBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (m)]\l0x0034: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('is' java.io.InputStream)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0037|0x0038: INVOKE  (r2 I:android.graphics.Bitmap) = (r0 I:java.io.InputStream A[D('is' java.io.InputStream)]) type: STATIC call: android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap A[MD:(java.io.InputStream):android.graphics.Bitmap (c)] (LINE:1324)\l0x003c: INVOKE  (r1 I:android.graphics.Bitmap) = (r2 I:android.graphics.Bitmap), (r1 I:boolean) type: STATIC call: androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean):android.graphics.Bitmap A[MD:(android.graphics.Bitmap, boolean):android.graphics.Bitmap (m)] (LINE:1323)\l0x0040: INVOKE  (r1 I:android.graphics.drawable.Icon) = (r1 I:android.graphics.Bitmap) type: STATIC call: android.graphics.drawable.Icon.createWithBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (c)]\l0x0044: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('is' java.io.InputStream)]) = (r1 I:??[OBJECT, ARRAY] A[D('icon' android.graphics.drawable.Icon)])  (LINE:1326)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0047|0x0047: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException A[D('icon' android.graphics.drawable.Icon)]) =  java.lang.IllegalStateException  (LINE:1317)\l0x0049: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004b: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004e: CONST_STR  (r3 I:java.lang.String) =  \"Cannot load adaptive icon from uri: \" \l0x0050: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0053: INVOKE  (r3 I:android.net.Uri) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:1318)\l0x0057: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x005a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005e: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0061|0x0061: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0062|0x0062: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('is' java.io.InputStream)]) =  java.lang.IllegalArgumentException  (LINE:1311)\l0x0064: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0066: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0069: CONST_STR  (r2 I:java.lang.String) =  \"Context is required to resolve the file uri of the icon: \" \l0x006b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006e: INVOKE  (r2 I:android.net.Uri) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:1313)\l0x0072: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0075: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0079: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x007c|0x007c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_57 [shape=record,label="{57\:\ 0x007d|0x007d: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1288)\l}"];
Node_58 [shape=record,label="{58\:\ 0x007f|0x007f: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:60:0x008a \l}"];
Node_59 [shape=record,label="{59\:\ 0x0081|0x0081: IGET  (r0 I:java.lang.Object) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1289)\l0x0083: CHECK_CAST (r0 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r0 I:??[OBJECT, ARRAY]) \l0x0085: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:android.graphics.Bitmap) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api26Impl.createWithAdaptiveBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (m)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x008a|0x008a: IGET  (r0 I:java.lang.Object A[D('icon' android.graphics.drawable.Icon)]) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1291)\l0x008c: CHECK_CAST (r0 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r0 I:??[OBJECT, ARRAY]) \l0x008e: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:android.graphics.Bitmap), (r1 I:boolean) type: STATIC call: androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean):android.graphics.Bitmap A[MD:(android.graphics.Bitmap, boolean):android.graphics.Bitmap (m)] (LINE:1292)\l0x0092: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:android.graphics.Bitmap) type: STATIC call: android.graphics.drawable.Icon.createWithBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (c)] (LINE:1291)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0097|0x0097: IGET  (r0 I:java.lang.Object A[D('icon' android.graphics.drawable.Icon)]) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1303)\l0x0099: CHECK_CAST (r0 I:java.lang.String) = (java.lang.String) (r0 I:??[OBJECT, ARRAY]) \l0x009b: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:java.lang.String) type: STATIC call: android.graphics.drawable.Icon.createWithContentUri(java.lang.String):android.graphics.drawable.Icon A[MD:(java.lang.String):android.graphics.drawable.Icon (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x00a0|0x00a0: IGET  (r0 I:java.lang.Object A[D('icon' android.graphics.drawable.Icon)]) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1299)\l0x00a2: CHECK_CAST (r0 I:byte[]) = (byte[]) (r0 I:??[OBJECT, ARRAY]) \l0x00a4: IGET  (r1 I:int) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt1 int \l0x00a6: IGET  (r2 I:int) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt2 int \l0x00a8: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:byte[]), (r1 I:int), (r2 I:int) type: STATIC call: android.graphics.drawable.Icon.createWithData(byte[], int, int):android.graphics.drawable.Icon A[MD:(byte[], int, int):android.graphics.drawable.Icon (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x00ad|0x00ad: INVOKE  (r0 I:java.lang.String) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getResPackage():java.lang.String A[MD:():java.lang.String (m)] (LINE:1296)\l0x00b1: IGET  (r1 I:int) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mInt1 int \l0x00b3: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:java.lang.String), (r1 I:int) type: STATIC call: android.graphics.drawable.Icon.createWithResource(java.lang.String, int):android.graphics.drawable.Icon A[MD:(java.lang.String, int):android.graphics.drawable.Icon (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x00b8|0x00b8: IGET  (r0 I:java.lang.Object A[D('icon' android.graphics.drawable.Icon)]) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1285)\l0x00ba: CHECK_CAST (r0 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r0 I:??[OBJECT, ARRAY]) \l0x00bc: INVOKE  (r0 I:android.graphics.drawable.Icon) = (r0 I:android.graphics.Bitmap) type: STATIC call: android.graphics.drawable.Icon.createWithBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x00d6|0x00d6: IGET  (r0 I:java.lang.Object A[D('icon' android.graphics.drawable.Icon)]) = (r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat)]) androidx.core.graphics.drawable.IconCompat.mObj1 java.lang.Object  (LINE:1283)\l0x00d8: CHECK_CAST (r0 I:android.graphics.drawable.Icon) = (android.graphics.drawable.Icon) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x00da|RETURN\l|0x00da: RETURN  (r0 I:android.graphics.drawable.Icon) \l}"];
MethodNode[shape=record,label="{static android.graphics.drawable.Icon androidx.core.graphics.drawable.IconCompat.Api23Impl.toIcon((r4 I:androidx.core.graphics.drawable.IconCompat A[D('iconCompat' androidx.core.graphics.drawable.IconCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:71:0x00d5 \-\> B:38:?, CROSS_EDGE: B:69:0x00ce \-\> B:71:0x00d5, CROSS_EDGE: B:66:0x00c3 \-\> B:68:0x00ca, CROSS_EDGE: B:51:0x002c \-\> B:65:0x00c1, CROSS_EDGE: B:52:0x0037 \-\> B:65:0x00c1, CROSS_EDGE: B:54:0x0061 \-\> B:38:?, CROSS_EDGE: B:56:0x007c \-\> B:38:?, CROSS_EDGE: B:59:0x0081 \-\> B:65:0x00c1, CROSS_EDGE: B:60:0x008a \-\> B:65:0x00c1, CROSS_EDGE: B:61:0x0097 \-\> B:65:0x00c1, CROSS_EDGE: B:62:0x00a0 \-\> B:65:0x00c1, CROSS_EDGE: B:63:0x00ad \-\> B:65:0x00c1, CROSS_EDGE: B:64:0x00b8 \-\> B:65:0x00c1, CROSS_EDGE: B:73:0x00da \-\> B:38:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0020: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x0035\-0x0037: r1 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x0044\-0x0047: r1 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x0026\-0x0062: r0 'is' Ljava\/io\/InputStream;\l  0x0089\-0x008a: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x0096\-0x0097: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x009f\-0x00a0: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x00ac\-0x00ad: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x00b7\-0x00b8: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  0x00c0\-0x00d6: r0 'icon' Landroid\/graphics\/drawable\/Icon;\l  \-1 \-0x00ef: r4 'iconCompat' Landroidx\/core\/graphics\/drawable\/IconCompat;\l  \-1 \-0x00ef: r5 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_43;
Node_40 -> Node_57;
Node_40 -> Node_61;
Node_40 -> Node_62;
Node_40 -> Node_63;
Node_40 -> Node_64;
Node_40 -> Node_72;
Node_41 -> Node_42;
Node_42 -> Node_38;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_71;
Node_71 -> Node_38;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_55;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_53;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_65;
Node_52 -> Node_65;
Node_53 -> Node_54;
Node_54 -> Node_38;
Node_55 -> Node_56;
Node_56 -> Node_38;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_65;
Node_60 -> Node_65;
Node_61 -> Node_65;
Node_62 -> Node_65;
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_72 -> Node_73;
Node_73 -> Node_38;
}

