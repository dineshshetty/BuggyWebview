digraph "CFG forandroidx.core.graphics.drawable.IconCompat.Api23Impl.getType(Ljava\/lang\/Object;)I" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Unable to get icon type \"  (LINE:1155)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"IconCompat\" \l0x0004: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0006: CONST  (r3 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:26:0x000f \l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r7 I:java.lang.Object A[D('icon' java.lang.Object)]) type: STATIC call: androidx.core.graphics.drawable.IconCompat.Api28Impl.getType(java.lang.Object):int A[MD:(java.lang.Object):int (m)] (LINE:1156)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1159)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0052, NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, blocks: (B:27:0x0010), top: B:38:0x0010 \}\lCatch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052\l|0x0010: INVOKE  (r3 I:java.lang.Class) = (r7 I:java.lang.Object A[D('icon' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052, MD:():java.lang.Class\<?\> (c), TRY_ENTER]\l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"getType\" \l0x0016: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052]\l0x0019: INVOKE  (r3 I:java.lang.reflect.Method) = (r3 I:java.lang.Class), (r4 I:java.lang.String), (r6 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x001d: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052]\l0x001f: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('icon' java.lang.Object)]), (r4 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0023: CHECK_CAST (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052]\l0x0025: INVOKE  (r0 I:int) = (r3 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, IllegalAccessException \-\> 0x0052, MD:():int (c), TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0029|RETURN\l|0x0029: RETURN  (r0 I:int) \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0052|ExcHandler: IllegalAccessException \-\> 0x0052\l|0x0052: MOVE_EXCEPTION  (r3 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0052] (LINE:1160)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0053|0x0053: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1161)\l0x0055: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0058: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005b: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.Object A[D('icon' java.lang.Object)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x005e: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0062: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0065|RETURN\l|0x0065: RETURN  (r2 I:int)  (LINE:1162)\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|ExcHandler: NoSuchMethodException \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r3 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x002a] (LINE:1166)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|0x002b: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1167)\l0x002d: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0030: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.Object A[D('icon' java.lang.Object)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0036: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003a: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.NoSuchMethodException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|RETURN\l|0x003d: RETURN  (r2 I:int)  (LINE:1168)\l}"];
Node_32 [shape=record,label="{32\:\ 0x003e|ExcHandler: InvocationTargetException \-\> 0x003e\l|0x003e: MOVE_EXCEPTION  (r3 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x003e] (LINE:1163)\l}"];
Node_33 [shape=record,label="{33\:\ 0x003f|0x003f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1164)\l0x0041: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0044: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.Object A[D('icon' java.lang.Object)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004e: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0051|RETURN\l|0x0051: RETURN  (r2 I:int)  (LINE:1165)\l}"];
MethodNode[shape=record,label="{static int androidx.core.graphics.drawable.IconCompat.Api23Impl.getType((r7 I:java.lang.Object A[D('icon' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0029 \-\> B:21:?, CROSS_EDGE: B:37:0x0065 \-\> B:21:?, CROSS_EDGE: B:31:0x003d \-\> B:21:?, CROSS_EDGE: B:34:0x0051 \-\> B:21:?, CROSS_EDGE: B:38:0x0010 \-\> B:35:0x0052, CROSS_EDGE: B:38:0x0010 \-\> B:29:0x002a, CROSS_EDGE: B:38:0x0010 \-\> B:32:0x003e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002b\-0x003e: r3 'e' Ljava\/lang\/NoSuchMethodException;\l  0x003f\-0x0052: r3 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0053\-0x0065: r3 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x0065: r7 'icon' Ljava\/lang\/Object;\lTryCatch #2 \{IllegalAccessException \-\> 0x0052, NoSuchMethodException \-\> 0x002a, InvocationTargetException \-\> 0x003e, blocks: (B:27:0x0010), top: B:38:0x0010 \}\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_26 -> Node_38;
Node_38 -> Node_27;
Node_38 -> Node_35;
Node_38 -> Node_29;
Node_38 -> Node_32;
Node_27 -> Node_28;
Node_27 -> Node_39;
Node_28 -> Node_21;
Node_39 -> Node_35;
Node_39 -> Node_29;
Node_39 -> Node_32;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
}

