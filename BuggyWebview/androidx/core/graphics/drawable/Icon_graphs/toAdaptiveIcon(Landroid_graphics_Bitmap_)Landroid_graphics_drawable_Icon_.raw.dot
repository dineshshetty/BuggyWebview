digraph "CFG forandroidx.core.graphics.drawable.IconKt.toAdaptiveIcon(Landroid\/graphics\/Bitmap;)Landroid\/graphics\/drawable\/Icon;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$toAdaptiveIcon' android.graphics.Bitmap)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:android.graphics.drawable.Icon) = (r3 I:android.graphics.Bitmap A[D('$this$toAdaptiveIcon' android.graphics.Bitmap)]) type: STATIC call: android.graphics.drawable.Icon.createWithAdaptiveBitmap(android.graphics.Bitmap):android.graphics.drawable.Icon A[MD:(android.graphics.Bitmap):android.graphics.drawable.Icon (c)] (LINE:34)\l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"createWithAdaptiveBitmap(this)\" \l0x000c: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:android.graphics.drawable.Icon) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.graphics.drawable.Icon androidx.core.graphics.drawable.IconKt.toAdaptiveIcon((r3 I:android.graphics.Bitmap A[D('$this$toAdaptiveIcon' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x0006\-0x000f: r0 '$i$f$toAdaptiveIcon' I\l  \-1 \-0x000f: r3 '$this$toAdaptiveIcon' Landroid\/graphics\/Bitmap;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

