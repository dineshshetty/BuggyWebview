digraph "CFG forandroidx.core.graphics.TypefaceCompatBaseImpl.findBestFont([Ljava\/lang\/Object;ILandroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000}"];
Node_28 [shape=record,label="{28\:\ 0x0002|if ((r12 & 1) != 0) goto L24\l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|r0 = 400\l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|PHI: r0 \l  PHI: (r0v2 'targetWeight' int) = (r0v1 'targetWeight' int), (r0v3 'targetWeight' int) binds: [B:30:0x0007, B:29:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|if ((r12 & 2) == 0) goto L23\l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|r1 = true\l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|PHI: r1 \l  PHI: (r1v2 'isTargetItalic' boolean) = (r1v1 'isTargetItalic' boolean), (r1v3 'isTargetItalic' boolean) binds: [B:34:0x0011, B:33:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|r4 = null\lr5 = Integer.MAX_VALUE\lint r6 = r11.length\lr7 = 0\l}"];
Node_36 [shape=record,label="{36\:\ 0x0018|LOOP_START\lLOOP:0: B:36:0x0018\-\>B:45:0x0037\lPHI: r4 r5 r7 \l  PHI: (r4v1 'best' T) = (r4v0 'best' T), (r4v3 'best' T) binds: [B:35:0x0012, B:45:0x0037] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'bestScore' int) = (r5v0 'bestScore' int), (r5v3 'bestScore' int) binds: [B:35:0x0012, B:45:0x0037] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:35:0x0012, B:45:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= r6) goto L20\l}"];
Node_37 [shape=record,label="{37\:\ 0x001a|r8 = r11[r7]\lint r9 = java.lang.Math.abs(r13.getWeight(r8) \- r0) * 2\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|if (r13.isItalic(r8) != r1) goto L19\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|r10 = 0\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|PHI: r10 \l  PHI: (r10v2 int) = (r10v1 int), (r10v3 int) binds: [B:40:0x002f, B:39:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|int r9 = r9 + r10\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|if (r4 == null) goto L17\l}"];
Node_43 [shape=record,label="{43\:\ 0x0033|if (r5 \<= r9) goto L15\l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|LOOP_END\lLOOP:0: B:36:0x0018\-\>B:45:0x0037\lPHI: r4 r5 \l  PHI: (r4v3 'best' T) = (r4v2 'best' T), (r4v1 'best' T) binds: [B:48:0x0037, B:49:0x0037] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'bestScore' int) = (r5v2 'bestScore' int), (r5v1 'bestScore' int) binds: [B:48:0x0037, B:49:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|int r7 = r7 + 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|r4 = r8\lr5 = r9\l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|r10 = 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x003a|RETURN\l|return r4\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|r1 = false\l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|r0 = androidx.constraintlayout.core.motion.utils.TypedValues.TransitionType.TYPE_DURATION\l}"];
MethodNode[shape=record,label="{private static T androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont((r11v0 'fonts' T[] A[D('fonts' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'extractor' androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\> A[D('extractor' androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0037 \-\> B:36:0x0018, CROSS_EDGE: B:43:0x0033 \-\> B:45:0x0037, CROSS_EDGE: B:42:0x0031 \-\> B:44:0x0035, CROSS_EDGE: B:40:0x002f \-\> B:41:0x0030, CROSS_EDGE: B:34:0x0011 \-\> B:35:0x0012, CROSS_EDGE: B:30:0x0007 \-\> B:31:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;ILandroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor\<TT;\>;)TT;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_49;
Node_49 -> Node_45;
Node_45 -> Node_36;
Node_44 -> Node_48;
Node_48 -> Node_45;
Node_40 -> Node_41;
Node_47 -> Node_46;
Node_46 -> Node_26;
Node_34 -> Node_35;
Node_30 -> Node_31;
}

