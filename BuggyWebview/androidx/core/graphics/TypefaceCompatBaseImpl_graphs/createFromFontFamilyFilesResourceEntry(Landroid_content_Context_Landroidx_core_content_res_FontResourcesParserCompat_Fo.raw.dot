digraph "CFG forandroidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(Landroid\/content\/Context;Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFamilyFilesResourceEntry;Landroid\/content\/res\/Resources;I)Landroid\/graphics\/Typeface;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) = \l  (r8 I:androidx.core.graphics.TypefaceCompatBaseImpl)\l  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)])\l  (r12 I:int A[D('style' int)])\l type: DIRECT call: androidx.core.graphics.TypefaceCompatBaseImpl.findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, int):androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[MD:(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, int):androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry (m)] (LINE:170)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('best' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0008  (LINE:171)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|RETURN\l|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:172)\l0x0007: RETURN  (r1 I:android.graphics.Typeface) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0009: INVOKE  (r4 I:int) = \l  (r0 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('best' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.getResourceId():int A[MD:():int (m)] (LINE:175)\l0x000d: INVOKE  (r5 I:java.lang.String) = \l  (r0 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[D('best' androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.getFileName():java.lang.String A[MD:():java.lang.String (m)]\l0x0011: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:174)\l0x0013: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('resources' android.content.res.Resources)]) \l0x0014: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x0015: INVOKE  (r1 I:android.graphics.Typeface) = \l  (r2 I:android.content.Context)\l  (r3 I:android.content.res.Resources)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l  (r6 I:int)\l  (r7 I:int)\l type: STATIC call: androidx.core.graphics.TypefaceCompat.createFromResourcesFontFile(android.content.Context, android.content.res.Resources, int, java.lang.String, int, int):android.graphics.Typeface A[MD:(android.content.Context, android.content.res.Resources, int, java.lang.String, int, int):android.graphics.Typeface (m)]\l0x0019: INVOKE  \l  (r8 I:androidx.core.graphics.TypefaceCompatBaseImpl)\l  (r1 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])\l  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)])\l type: DIRECT call: androidx.core.graphics.TypefaceCompatBaseImpl.addFontFamily(android.graphics.Typeface, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry):void A[MD:(android.graphics.Typeface, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry):void (m)] (LINE:177)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])  (LINE:179)\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry((r8 'this' I:androidx.core.graphics.TypefaceCompatBaseImpl A[IMMUTABLE_TYPE, THIS]), (r9 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001c \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001c: r0 'best' Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFileResourceEntry;\l  0x0019\-0x001c: r1 'typeface' Landroid\/graphics\/Typeface;\l  \-1 \-0x001c: r9 'context' Landroid\/content\/Context;\l  \-1 \-0x001c: r10 'entry' Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFamilyFilesResourceEntry;\l  \-1 \-0x001c: r11 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x001c: r12 'style' I\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

