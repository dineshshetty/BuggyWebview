digraph "CFG forandroidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(Landroid\/content\/Context;Landroid\/os\/CancellationSignal;[Landroidx\/core\/provider\/FontsContractCompat$FontInfo;I)Landroid\/graphics\/Typeface;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r8 I:??[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])  (LINE:138)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:22:0x0006 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:android.graphics.Typeface)  (LINE:139)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: INVOKE  (r0 I:androidx.core.provider.FontsContractCompat$FontInfo) = \l  (r5 I:androidx.core.graphics.TypefaceCompatBaseImpl)\l  (r8 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[])])\l  (r9 I:int A[D('style' int)])\l type: VIRTUAL call: androidx.core.graphics.TypefaceCompatBaseImpl.findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[], int):androidx.core.provider.FontsContractCompat$FontInfo A[MD:(androidx.core.provider.FontsContractCompat$FontInfo[], int):androidx.core.provider.FontsContractCompat$FontInfo (m)] (LINE:141)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:142)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0025, all \-\> 0x0020, blocks: (B:23:0x000b), top: B:32:0x000b \}\lCatch: all \-\> 0x0020, IOException \-\> 0x0025\l|0x000b: INVOKE  (r3 I:android.content.ContentResolver) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getContentResolver():android.content.ContentResolver A[Catch: all \-\> 0x0020, IOException \-\> 0x0025, MD:():android.content.ContentResolver (c), TRY_ENTER] (LINE:144)\l0x000f: INVOKE  (r4 I:android.net.Uri) = \l  (r0 I:androidx.core.provider.FontsContractCompat$FontInfo A[D('font' androidx.core.provider.FontsContractCompat$FontInfo)])\l type: VIRTUAL call: androidx.core.provider.FontsContractCompat.FontInfo.getUri():android.net.Uri A[Catch: all \-\> 0x0020, IOException \-\> 0x0025, MD:():android.net.Uri (m)]\l0x0013: INVOKE  (r3 I:java.io.InputStream) = (r3 I:android.content.ContentResolver), (r4 I:android.net.Uri) type: VIRTUAL call: android.content.ContentResolver.openInputStream(android.net.Uri):java.io.InputStream A[Catch: all \-\> 0x0020, IOException \-\> 0x0025, MD:(android.net.Uri):java.io.InputStream throws java.io.FileNotFoundException (c)]\l0x0017: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('is' java.io.InputStream)]) = (r3 I:??[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:android.graphics.Typeface) = \l  (r5 I:androidx.core.graphics.TypefaceCompatBaseImpl)\l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l  (r2 I:java.io.InputStream A[D('is' java.io.InputStream)])\l type: VIRTUAL call: androidx.core.graphics.TypefaceCompatBaseImpl.createFromInputStream(android.content.Context, java.io.InputStream):android.graphics.Typeface A[Catch: all \-\> 0x0020, IOException \-\> 0x0025, MD:(android.content.Context, java.io.InputStream):android.graphics.Typeface (m), TRY_LEAVE] (LINE:145)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: INVOKE  (r2 I:java.io.Closeable A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void A[MD:(java.io.Closeable):void (m)] (LINE:149)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|RETURN\l|0x001f: RETURN  (r1 I:android.graphics.Typeface)  (LINE:145)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|ExcHandler: IOException \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r3 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0025] (LINE:146)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: INVOKE  (r2 I:java.io.Closeable A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void A[MD:(java.io.Closeable):void (m)] (LINE:149)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|RETURN\l|0x002a: RETURN  (r1 I:android.graphics.Typeface)  (LINE:147)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|ExcHandler: all \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0020] (LINE:149)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: INVOKE  (r2 I:java.io.Closeable A[D('is' java.io.InputStream)]) type: STATIC call: androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):void A[MD:(java.io.Closeable):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|0x0024: THROW  (r1 I:java.lang.Throwable)  (LINE:150)\l}"];
MethodNode[shape=record,label="{public android.graphics.Typeface androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo((r5 'this' I:androidx.core.graphics.TypefaceCompatBaseImpl A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.os.CancellationSignal A[D('cancellationSignal' android.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.core.provider.FontsContractCompat$FontInfo[] A[D('fonts' androidx.core.provider.FontsContractCompat$FontInfo[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001f \-\> B:18:?, CROSS_EDGE: B:31:0x002a \-\> B:18:?, CROSS_EDGE: B:28:0x0024 \-\> B:18:?, CROSS_EDGE: B:32:0x000b \-\> B:29:0x0025, CROSS_EDGE: B:32:0x000b \-\> B:26:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x002a: r0 'font' Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  0x000b\-0x002a: r2 'is' Ljava\/io\/InputStream;\l  0x0026\-0x002a: r3 'e' Ljava\/io\/IOException;\l  \-1 \-0x002a: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x002a: r7 'cancellationSignal' Landroid\/os\/CancellationSignal;\l  \-1 \-0x002a: r8 'fonts' [Landroidx\/core\/provider\/FontsContractCompat$FontInfo;\l  \-1 \-0x002a: r9 'style' I\lTryCatch #2 \{IOException \-\> 0x0025, all \-\> 0x0020, blocks: (B:23:0x000b), top: B:32:0x000b \}\lMETHOD_OVERRIDE: [androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontInfo(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[], int):android.graphics.Typeface]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_32;
Node_32 -> Node_23;
Node_32 -> Node_29;
Node_32 -> Node_26;
Node_23 -> Node_24;
Node_23 -> Node_33;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_33 -> Node_29;
Node_33 -> Node_26;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_18;
}

