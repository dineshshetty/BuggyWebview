digraph "CFG forandroidx.core.graphics.TypefaceCompatBaseImpl.findBestFont([Ljava\/lang\/Object;ILandroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor;)Ljava\/lang\/Object;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: ARITH  (r0 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char] A[D('style' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:62)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0007 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, short, byte, char]) = (400(0x190, float:5.6E\-43) ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|0x0009: ARITH  (r1 I:??[int, boolean]) = (r12 I:??[int, boolean, short, byte, char] A[D('style' int)]) & (2 ??[int, float, short, byte, char])  (LINE:63)\l0x000b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0011 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|0x000f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:65)\l0x0013: CONST  (r5 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char])  (LINE:66)\l0x0016: ARRAY_LENGTH  (r6 I:int) = (r11 I:??[] A[D('fonts' T[])])  (LINE:68)\l0x0017: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0018|LOOP_START\lLOOP:0: B:36:0x0018\-\>B:45:0x0037\l|0x0018: IF  (r7 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:47:0x003a \l}"];
Node_37 [shape=record,label="{37\:\ 0x001a|0x001a: AGET  (r8 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY][] A[D('fonts' T[])]), (r7 I:??[int, short, byte, char]) \l0x001c: INVOKE  (r9 I:int) = \l  (r13 I:androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor A[D('extractor' androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\>)])\l  (r8 I:java.lang.Object A[D('font' T)])\l type: INTERFACE call: androidx.core.graphics.TypefaceCompatBaseImpl.StyleExtractor.getWeight(java.lang.Object):int A[MD:(T):int (m)] (LINE:69)\l0x0020: ARITH  (r9 I:int) = (r9 I:int) \- (r0 I:int A[D('targetWeight' int)]) \l0x0021: INVOKE  (r9 I:int) = (r9 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0025: ARITH  (r9 I:int) = (r9 I:int) * (2 int) \l0x0027: INVOKE  (r10 I:boolean) = \l  (r13 I:androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor A[D('extractor' androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\>)])\l  (r8 I:java.lang.Object A[D('font' T)])\l type: INTERFACE call: androidx.core.graphics.TypefaceCompatBaseImpl.StyleExtractor.isItalic(java.lang.Object):boolean A[MD:(T):boolean (m)] (LINE:70)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|0x002b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isTargetItalic' boolean)])  \-\> B:40:0x002f \l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|0x0030: ARITH  (r9 I:int) = (r9 I:int) + (r10 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('best' T)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0035  (LINE:72)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0033|0x0033: IF  (r5 I:??[int, byte, short, char] A[D('bestScore' int)]) \<= (r9 I:??[int, byte, short, char] A[D('score' int)])  \-\> B:49:0x0037 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|LOOP_END\lLOOP:0: B:36:0x0018\-\>B:45:0x0037\l|0x0037: ARITH  (r7 I:int) = (r7 I:int) + (1 int)  (LINE:68)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|0x0035: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('best' T)]) = (r8 I:??[OBJECT, ARRAY] A[D('font' T)])  (LINE:73)\l0x0036: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bestScore' int)]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('score' int)])  (LINE:74)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|0x002f: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x003a|RETURN\l|0x003a: RETURN  (r4 I:T A[D('best' T)])  (LINE:77)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|0x0007: CONST  (r0 I:??[int, float, short, byte, char]) = (700(0x2bc, float:9.81E\-43) ??[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private static T androidx.core.graphics.TypefaceCompatBaseImpl.findBestFont((r11 I:T[] A[D('fonts' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\> A[D('extractor' androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0037 \-\> B:36:0x0018, CROSS_EDGE: B:43:0x0033 \-\> B:45:0x0037, CROSS_EDGE: B:42:0x0031 \-\> B:44:0x0035, CROSS_EDGE: B:40:0x002f \-\> B:41:0x0030, CROSS_EDGE: B:34:0x0011 \-\> B:35:0x0012, CROSS_EDGE: B:30:0x0007 \-\> B:31:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0037: r8 'font' Ljava\/lang\/Object;, signature: TT;\l  0x0031\-0x0037: r9 'score' I\l  0x0009\-0x003a: r0 'targetWeight' I\l  0x0012\-0x003a: r1 'isTargetItalic' Z\l  0x0013\-0x003a: r4 'best' Ljava\/lang\/Object;, signature: TT;\l  0x0016\-0x003a: r5 'bestScore' I\l  0x0000\-0x003a: r11 'fonts' [Ljava\/lang\/Object;, signature: [TT;\l  \-1 \-0x003a: r12 'style' I\l  0x0000\-0x003a: r13 'extractor' Landroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor;, signature: Landroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor\<TT;\>;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;ILandroidx\/core\/graphics\/TypefaceCompatBaseImpl$StyleExtractor\<TT;\>;)TT;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_49;
Node_49 -> Node_45;
Node_45 -> Node_36;
Node_44 -> Node_48;
Node_48 -> Node_45;
Node_40 -> Node_41;
Node_47 -> Node_46;
Node_46 -> Node_26;
Node_34 -> Node_35;
Node_30 -> Node_31;
}

