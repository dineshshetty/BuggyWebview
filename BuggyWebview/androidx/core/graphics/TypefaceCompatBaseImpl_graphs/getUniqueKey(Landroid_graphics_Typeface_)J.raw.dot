digraph "CFG forandroidx.core.graphics.TypefaceCompatBaseImpl.getUniqueKey(Landroid\/graphics\/Typeface;)J" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Could not retrieve font from family.\"  (LINE:81)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"TypefaceCompatBaseImpl\" \l0x0004: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0009 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|RETURN\l|0x0008: RETURN  (r2 I:long)  (LINE:82)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, blocks: (B:20:0x0009), top: B:28:0x0009 \}\lCatch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025\l|0x0009: CONST_CLASS  (r4 I:java.lang.Class\<android.graphics.Typeface\>) =  android.graphics.Typeface.class A[TRY_ENTER] (LINE:86)\l0x000b: CONST_STR  (r5 I:java.lang.String) =  \"native_instance\" \l0x000d: INVOKE  (r4 I:java.lang.reflect.Field) = (r4 I:java.lang.Class), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x0011: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:87)\l0x0012: INVOKE  (r4 I:java.lang.reflect.Field A[D('field' java.lang.reflect.Field)]), (r5 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, MD:(boolean):void throws java.lang.SecurityException (c)]\l0x0015: INVOKE  (r5 I:java.lang.Object) = \l  (r4 I:java.lang.reflect.Field A[D('field' java.lang.reflect.Field)])\l  (r6 I:java.lang.Object A[D('typeface' android.graphics.Typeface)])\l type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)] (LINE:88)\l0x0019: CHECK_CAST (r5 I:java.lang.Number) = (java.lang.Number) (r5 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025]\l0x001b: INVOKE  (r0 I:long) = (r5 I:java.lang.Number A[D('num' java.lang.Number)]) type: VIRTUAL call: java.lang.Number.longValue():long A[Catch: IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, MD:():long (c), TRY_LEAVE] (LINE:89)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:long) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|ExcHandler: IllegalAccessException \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r4 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0020] (LINE:93)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0021|0x0021: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r4 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:94)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|RETURN\l|0x0024: RETURN  (r2 I:long)  (LINE:95)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|ExcHandler: NoSuchFieldException \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r4 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0025] (LINE:90)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|0x0026: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r4 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:91)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|RETURN\l|0x0029: RETURN  (r2 I:long)  (LINE:92)\l}"];
MethodNode[shape=record,label="{private static long androidx.core.graphics.TypefaceCompatBaseImpl.getUniqueKey((r6 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001f \-\> B:16:?, CROSS_EDGE: B:24:0x0024 \-\> B:16:?, CROSS_EDGE: B:27:0x0029 \-\> B:16:?, CROSS_EDGE: B:28:0x0009 \-\> B:22:0x0020, CROSS_EDGE: B:28:0x0009 \-\> B:25:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0020: r4 'field' Ljava\/lang\/reflect\/Field;\l  0x001b\-0x0020: r5 'num' Ljava\/lang\/Number;\l  0x0021\-0x0025: r4 'e' Ljava\/lang\/IllegalAccessException;\l  0x0026\-0x0029: r4 'e' Ljava\/lang\/NoSuchFieldException;\l  \-1 \-0x0029: r6 'typeface' Landroid\/graphics\/Typeface;\lTryCatch #2 \{IllegalAccessException \-\> 0x0020, NoSuchFieldException \-\> 0x0025, blocks: (B:20:0x0009), top: B:28:0x0009 \}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_16;
Node_28 -> Node_20;
Node_28 -> Node_22;
Node_28 -> Node_25;
Node_20 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_16;
Node_29 -> Node_22;
Node_29 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
}

