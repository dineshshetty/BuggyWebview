digraph "CFG forandroidx.core.graphics.PathParser.PathDataNode.drawArc(Landroid\/graphics\/Path;FFFFFFFZZ)V" {
subgraph cluster_Region_747362169 {
label = "R(2:1|(2:(2:3|4)|(2:6|(2:(2:8|9)|(5:10|(1:12)(1:24)|13|(1:(1:19)(1:20))|21))))) | DECL_VAR: double cx, double cy\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0000|double double r35 = java.lang.Math.toRadians(r80)\ldouble double r37 = java.lang.Math.cos(r35)\ldouble double r39 = java.lang.Math.sin(r35)\ldouble double r41 = ((r74 * r37) + (r75 * r39)) \/ r78\ldouble double r43 = (((\-r74) * r39) + (r75 * r37)) \/ r79\ldouble double r45 = ((r76 * r37) + (r77 * r39)) \/ r78\ldouble double r47 = (((\-r76) * r39) + (r77 * r37)) \/ r79\ldouble double r49 = r41 \- r45\ldouble double r51 = r43 \- r47\ldouble double r53 = (r41 + r45) \/ 2.0d\ldouble double r55 = (r43 + r47) \/ 2.0d\ldouble double r6 = (r49 * r49) + (r51 * r51)\l}"];
subgraph cluster_Region_1766879375 {
label = "R(2:(2:3|4)|(2:6|(2:(2:8|9)|(5:10|(1:12)(1:24)|13|(1:(1:19)(1:20))|21))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_827240818 {
label = "IF [B:28:0x0061] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0061|if (r6 == 0.0d) goto L3\l}"];
subgraph cluster_Region_109886033 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0063|android.util.Log.w(androidx.core.graphics.PathParser.LOGTAG, \" Points are coincident\")\l}"];
Node_30 [shape=record,label="{30\:\ 0x0068|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1933651231 {
label = "R(2:6|(2:(2:8|9)|(5:10|(1:12)(1:24)|13|(1:(1:19)(1:20))|21)))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0069|double double r57 = (1.0d \/ r6) \- 0.25d\l}"];
subgraph cluster_Region_1788461864 {
label = "R(2:(2:8|9)|(5:10|(1:12)(1:24)|13|(1:(1:19)(1:20))|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_472405094 {
label = "IF [B:32:0x0072] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0072|if (r57 \< 0.0d) goto L8\l}"];
subgraph cluster_Region_1001411147 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0074|android.util.Log.w(androidx.core.graphics.PathParser.LOGTAG, \"Points are too far apart \" + r6)\lfloat float r5 = (float) (java.lang.Math.sqrt(r6) \/ 1.99999d)\ldrawArc(r73, r74, r75, r76, r77, r78 * r5, r79 * r5, r80, r81, r82)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b3|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1286725507 {
label = "R(5:10|(1:12)(1:24)|13|(1:(1:19)(1:20))|21)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00b4|double double r3 = java.lang.Math.sqrt(r57)\ldouble double r5 = r3 * r49\ldouble double r7 = r3 * r51\l}"];
subgraph cluster_IfRegion_937371111 {
label = "IF [B:36:0x00c1] THEN: R(1:12) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00c1|if (r81 == r82) goto L12\l}"];
subgraph cluster_Region_1065285860 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00c3|double r16 = r53 \- r7\ldouble r18 = r55 + r5\l}"];
}
subgraph cluster_Region_1124894325 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00c8|double r16 = r53 + r7\ldouble r18 = r55 \- r5\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x00cc|PHI: r16 r18 \l  PHI: (r16v2 'cx' double) = (r16v1 'cx' double), (r16v5 'cx' double) binds: [B:38:0x00c8, B:37:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 'cy' double) = (r18v0 'cy' double), (r18v3 'cy' double) binds: [B:38:0x00c8, B:37:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l|double double r1 = java.lang.Math.atan2(r43 \- r18, r41 \- r16)\ldouble double r3 = java.lang.Math.atan2(r47 \- r18, r45 \- r16)\ldouble double r5 = r3 \- r1\l}"];
subgraph cluster_IfRegion_467761249 {
label = "IF [B:43:0x00eb] THEN: R(1:(1:19)(1:20)) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00eb|PHI: r9 \l  PHI: (r9v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r82 != (r5 \>= 0.0d)) goto L17\l}"];
subgraph cluster_Region_1575092123 {
label = "R(1:(1:19)(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1161073695 {
label = "IF [B:45:0x00f6] THEN: R(1:19) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00f6|if (r5 \> 0.0d) goto L19\l}"];
subgraph cluster_Region_586830975 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00f8|r5 \-= 6.283185307179586d\l}"];
}
subgraph cluster_Region_1479127984 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x00fb|r5 += 6.283185307179586d\l}"];
}
}
}
}
Node_48 [shape=record,label="{48\:\ 0x00fd|PHI: r5 \l  PHI: (r5v3 'sweep' double) = (r5v2 'sweep' double), (r5v4 'sweep' double), (r5v5 'sweep' double) binds: [B:43:0x00eb, B:47:0x00fb, B:46:0x00f8] A[DONT_GENERATE, DONT_INLINE]\l|double double r3 = r78\ldouble double r16 = r16 * r3\ldouble double r3 = r79 * r18\ldouble double r69 = (r16 * r37) \- (r3 * r39)\ldouble double r3 = (r16 * r39) + (r3 * r37)\ldouble double r3 = r78\larcToBezier(r73, r69, r3, r3, r79, r74, r75, r35, r1, r5)\l}"];
}
}
}
}
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00e6}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00e8}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00ed}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0130}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00ea}"];
MethodNode[shape=record,label="{private static void androidx.core.graphics.PathParser.PathDataNode.drawArc((r73v0 'p' android.graphics.Path A[D('p' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r74v0 'x0' float A[D('x0' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r75v0 'y0' float A[D('y0' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r76v0 'x1' float A[D('x1' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r77v0 'y1' float A[D('y1' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r78v0 'a' float A[D('a' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r79v0 'b' float A[D('b' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r80v0 'theta' float A[D('theta' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r81v0 'isMoreThanHalf' boolean A[D('isMoreThanHalf' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r82v0 'isPositiveArc' boolean A[D('isPositiveArc' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x00b3 \-\> B:26:?, CROSS_EDGE: B:49:0x0130 \-\> B:26:?, CROSS_EDGE: B:47:0x00fb \-\> B:48:0x00fd, CROSS_EDGE: B:43:0x00eb \-\> B:48:0x00fd, CROSS_EDGE: B:42:0x00ea \-\> B:43:0x00eb, CROSS_EDGE: B:38:0x00c8 \-\> B:39:0x00cc\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_25;Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_43 -> Node_44;
Node_43 -> Node_48[style=dashed];
Node_45 -> Node_46;
Node_45 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_25 -> Node_27;
Node_40 -> Node_41;
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_44 -> Node_45;
Node_49 -> Node_26;
Node_42 -> Node_43;
}

