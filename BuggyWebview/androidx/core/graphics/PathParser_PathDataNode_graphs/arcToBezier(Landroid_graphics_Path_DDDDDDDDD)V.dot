digraph "CFG forandroidx.core.graphics.PathParser.PathDataNode.arcToBezier(Landroid\/graphics\/Path;DDDDDDDDD)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|r0 = r67\lint r4 = (int) java.lang.Math.ceil(java.lang.Math.abs((r79 * 4.0d) \/ 3.141592653589793d))\ldouble r7 = java.lang.Math.cos(r75)\ldouble r9 = java.lang.Math.sin(r75)\ldouble r11 = java.lang.Math.cos(r77)\ldouble r13 = java.lang.Math.sin(r77)\ldouble r2 = (((\-r0) * r7) * r13) \- ((r69 * r9) * r11)\ldouble r2 = \-r0\ldouble r2 = ((r2 * r9) * r13) + ((r69 * r7) * r11)\lr19 = r2\ldouble r2 = (double) r4\ldouble r2 = r79 \/ r2\lr23 = r77\lr15 = 0\lr5 = r71\lr21 = r2\lr17 = r73\l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|LOOP_START\lLOOP:0: B:10:0x0050\-\>B:11:0x0052\lPHI: r0 r2 r4 r5 r7 r9 r11 r13 r15 r17 r19 r21 r23 \l  PHI: (r0v1 double) = (r0v0 double), (r0v5 double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v11 'anglePerSegment' double) = (r2v10 'anglePerSegment' double), (r2v13 'anglePerSegment' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 'numSegments' int) = (r4v4 'numSegments' int), (r4v8 'numSegments' int) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'eta1' double) = (r5v1 'eta1' double), (r5v4 'eta1' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'cosTheta' double) = (r7v0 'cosTheta' double), (r7v2 'cosTheta' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 'sinTheta' double) = (r9v0 'sinTheta' double), (r9v2 'sinTheta' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 'cosEta1' double) = (r11v0 'cosEta1' double), (r11v7 'cosEta1' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'sinEta1' double) = (r13v0 'sinEta1' double), (r13v6 'sinEta1' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'i' int) = (r15v0 'i' int), (r15v3 'i' int) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v4 'e1y' double) = (r17v3 'e1y' double), (r17v5 'e1y' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v3 'ep1y' double) = (r19v2 'ep1y' double), (r19v4 'ep1y' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r21v2 'ep1x' double) = (r21v1 'ep1x' double), (r21v3 'ep1x' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r23v1 'eta1' double) = (r23v0 'eta1' double), (r23v2 'eta1' double) binds: [B:9:0x0000, B:11:0x0052] A[DONT_GENERATE, DONT_INLINE]\l|if (r15 \>= r4) goto L4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|LOOP_END\lLOOP:0: B:10:0x0050\-\>B:11:0x0052\l|double r27 = r23 + r2\ldouble r29 = java.lang.Math.sin(r27)\ldouble r31 = java.lang.Math.cos(r27)\lr37 = r2\ldouble r2 = (r63 + ((r0 * r7) * r31)) \- ((r69 * r9) * r29)\lr39 = r11\ldouble r11 = (r65 + ((r0 * r9) * r31)) + ((r69 * r7) * r29)\lr33 = r13\ldouble r13 = (((\-r0) * r7) * r29) \- ((r69 * r9) * r31)\ldouble r11 = \-r0\ldouble r11 = ((r11 * r9) * r29) + ((r69 * r7) * r31)\ldouble r35 = java.lang.Math.tan((r27 \- r23) \/ 2.0d)\ldouble r41 = (java.lang.Math.sin(r27 \- r23) * (java.lang.Math.sqrt(((r35 * 3.0d) * r35) + 4.0d) \- 1.0d)) \/ 3.0d\ldouble r0 = r5 + (r41 * r21)\lr16 = r4\ldouble r4 = r17 + (r41 * r19)\ldouble r6 = r2 \- (r41 * r13)\ldouble r10 = r11 \- (r41 * r11)\lr62.rLineTo(0.0f, 0.0f)\lr62.cubicTo((float) r0, (float) r4, (float) r6, (float) r10, (float) r2, (float) r11)\lr23 = r27\lr5 = r2\lr17 = r11\lr21 = r13\lr19 = r11\lr15 = r15 + 1\lr4 = r16\lr13 = r33\lr2 = r37\lr11 = r39\lr7 = r7\lr9 = r9\lr0 = r67\l}"];
Node_13 [shape=record,label="{13\:\ 0x0115|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0115|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.core.graphics.PathParser.PathDataNode.arcToBezier((r62v0 'p' android.graphics.Path A[D('p' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r63v0 'cx' double A[D('cx' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r65v0 'cy' double A[D('cy' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r67v0 'a' double A[D('a' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r69v0 'b' double A[D('b' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r71v0 'e1x' double A[D('e1x' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r73v0 'e1y' double A[D('e1y' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r75v0 'theta' double A[D('theta' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r77v0 'start' double A[D('start' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r79v0 'sweep' double A[D('sweep' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0052 \-\> B:10:0x0050\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

