digraph "CFG forandroidx.core.graphics.TypefaceCompat.createFromResourcesFontFile(Landroid\/content\/Context;Landroid\/content\/res\/Resources;ILjava\/lang\/String;II)Landroid\/graphics\/Typeface;" {
subgraph cluster_Region_716921276 {
label = "R(3:1|(1:3)|4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|android.graphics.Typeface android.graphics.Typeface r0 = androidx.core.graphics.TypefaceCompat.sTypefaceCompatImpl.createFromResourcesFontFile(r6, r7, r8, r9, r11)\l}"];
subgraph cluster_IfRegion_806818071 {
label = "IF [B:3:0x000b] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_2121302602 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|java.lang.String java.lang.String r1 = createResourceUid(r7, r8, r9, r10, r11)\landroidx.core.graphics.TypefaceCompat.sTypefaceCache.put(r1, r0)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromResourcesFontFile((r6v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'resources' android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'path' java.lang.String A[D('path' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'cookie' int A[D('cookie' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x000b \-\> B:5:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_0 -> Node_2;
}

