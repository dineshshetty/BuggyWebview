digraph "CFG forandroidx.core.graphics.TypefaceCompat.createFromResourcesFamilyXml(Landroid\/content\/Context;Landroidx\/core\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;Landroid\/content\/res\/Resources;ILjava\/lang\/String;IILandroidx\/core\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;Z)Landroid\/graphics\/Typeface;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry)])  (LINE:150)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback)]) \l0x0004: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('handler' android.os.Handler)]) \l0x0006: INSTANCE_OF  (r3 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0059 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:151)\l0x000b: CHECK_CAST (r3 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry) = (androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry) (r3 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r4 I:java.lang.String) = \l  (r3 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry A[D('providerEntry' androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry.getSystemFontFamilyName():java.lang.String A[MD:():java.lang.String (m)] (LINE:154)\l0x0012: INVOKE  (r4 I:android.graphics.Typeface) = (r4 I:java.lang.String) type: STATIC call: androidx.core.graphics.TypefaceCompat.getSystemFontFamily(java.lang.String):android.graphics.Typeface A[MD:(java.lang.String):android.graphics.Typeface (m)] (LINE:153)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fontFamilyTypeface' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e  (LINE:155)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d  (LINE:156)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  \l  (r1 I:androidx.core.content.res.ResourcesCompat$FontCallback)\l  (r4 I:android.graphics.Typeface A[D('fontFamilyTypeface' android.graphics.Typeface)])\l  (r2 I:android.os.Handler)\l type: VIRTUAL call: androidx.core.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void A[MD:(android.graphics.Typeface, android.os.Handler):void (m)] (LINE:157)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|RETURN\l|0x001d: RETURN  (r4 I:android.graphics.Typeface A[D('fontFamilyTypeface' android.graphics.Typeface)])  (LINE:159)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:162)\l0x001f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: IF  (r24 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRequestFromLayoutInflator' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: INVOKE  (r7 I:int) = \l  (r3 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry A[D('providerEntry' androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry.getFetchStrategy():int A[MD:():int (m)] (LINE:163)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|0x0033: IF  (r24 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRequestFromLayoutInflator' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003b  (LINE:166)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|0x0035: INVOKE  (r5 I:int) = \l  (r3 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry A[D('providerEntry' androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry.getTimeout():int A[MD:():int (m)]\l0x0039: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003d|0x003e: INVOKE  (r5 I:android.os.Handler) = (r23 I:android.os.Handler A[D('handler' android.os.Handler)]) type: STATIC call: androidx.core.content.res.ResourcesCompat.FontCallback.getHandler(android.os.Handler):android.os.Handler A[MD:(android.os.Handler):android.os.Handler (m)] (LINE:169)\l0x0042: NEW_INSTANCE  (r14 I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter) =  androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter  (LINE:170)\l0x0044: INVOKE  \l  (r14 I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter)\l  (r1 I:androidx.core.content.res.ResourcesCompat$FontCallback)\l type: DIRECT call: androidx.core.graphics.TypefaceCompat.ResourcesCallbackAdapter.\<init\>(androidx.core.content.res.ResourcesCompat$FontCallback):void A[MD:(androidx.core.content.res.ResourcesCompat$FontCallback):void (m)]\l0x0047: INVOKE  (r9 I:androidx.core.provider.FontRequest) = \l  (r3 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry A[D('providerEntry' androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)])\l type: VIRTUAL call: androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry.getRequest():androidx.core.provider.FontRequest A[MD:():androidx.core.provider.FontRequest (m)] (LINE:171)\l0x004b: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) \l0x004c: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x004e: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('newHandler' android.os.Handler)]) \l0x004f: INVOKE  (r3 I:android.graphics.Typeface A[D('providerEntry' androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)]) = \l  (r8 I:android.content.Context)\l  (r9 I:androidx.core.provider.FontRequest)\l  (r10 I:int)\l  (r11 I:boolean A[D('isBlocking' boolean)])\l  (r12 I:int A[D('timeout' int)])\l  (r13 I:android.os.Handler)\l  (r14 I:androidx.core.provider.FontsContractCompat$FontRequestCallback A[D('newCallback' androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter)])\l type: STATIC call: androidx.core.provider.FontsContractCompat.requestFont(android.content.Context, androidx.core.provider.FontRequest, int, boolean, int, android.os.Handler, androidx.core.provider.FontsContractCompat$FontRequestCallback):android.graphics.Typeface A[MD:(android.content.Context, androidx.core.provider.FontRequest, int, boolean, int, android.os.Handler, androidx.core.provider.FontsContractCompat$FontRequestCallback):android.graphics.Typeface (m)]\l0x0053: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('newHandler' android.os.Handler)]) = (r15 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:173)\l0x0054: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('resources' android.content.res.Resources)]) \l0x0056: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|0x0073: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x007e  (LINE:186)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|0x0075: SGET  (r4 I:androidx.collection.LruCache\<java.lang.String, android.graphics.Typeface\>) =  androidx.core.graphics.TypefaceCompat.sTypefaceCache androidx.collection.LruCache  (LINE:187)\l0x0077: INVOKE  (r8 I:java.lang.String) = \l  (r17 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r18 I:int A[D('id' int)])\l  (r19 I:java.lang.String A[D('path' java.lang.String)])\l  (r20 I:int A[D('cookie' int)])\l  (r21 I:int A[D('style' int)])\l type: STATIC call: androidx.core.graphics.TypefaceCompat.createResourceUid(android.content.res.Resources, int, java.lang.String, int, int):java.lang.String A[MD:(android.content.res.Resources, int, java.lang.String, int, int):java.lang.String (m)]\l0x007b: INVOKE  \l  (r4 I:androidx.collection.LruCache)\l  (r8 I:java.lang.Object)\l  (r3 I:java.lang.Object A[D('typeface' android.graphics.Typeface)])\l type: VIRTUAL call: androidx.collection.LruCache.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x007e|RETURN\l|0x007e: RETURN  (r3 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])  (LINE:189)\l}"];
Node_21 [shape=record,label="{21\:\ 0x003b|0x003b: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:167)\l0x003c: CONST  (r12 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0031  (LINE:165)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|0x002f: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0031|0x0031: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: SGET  (r3 I:androidx.core.graphics.TypefaceCompatBaseImpl A[D('typeface' android.graphics.Typeface)]) =  androidx.core.graphics.TypefaceCompat.sTypefaceCompatImpl androidx.core.graphics.TypefaceCompatBaseImpl  (LINE:174)\l0x005b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l0x005c: CHECK_CAST (r4 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) = (androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) (r4 I:??[OBJECT, ARRAY]) \l0x005e: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) \l0x005f: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('resources' android.content.res.Resources)]) \l0x0061: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x0063: INVOKE  (r3 I:android.graphics.Typeface) = \l  (r3 I:androidx.core.graphics.TypefaceCompatBaseImpl)\l  (r15 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)\l  (r6 I:android.content.res.Resources)\l  (r7 I:int)\l type: VIRTUAL call: androidx.core.graphics.TypefaceCompatBaseImpl.createFromFontFamilyFilesResourceEntry(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface A[MD:(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int):android.graphics.Typeface (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0067|0x0067: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0073  (LINE:176)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|0x0069: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x006f  (LINE:177)\l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|0x006b: INVOKE  \l  (r1 I:androidx.core.content.res.ResourcesCompat$FontCallback)\l  (r3 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])\l  (r2 I:android.os.Handler)\l type: VIRTUAL call: androidx.core.content.res.ResourcesCompat.FontCallback.callbackSuccessAsync(android.graphics.Typeface, android.os.Handler):void A[MD:(android.graphics.Typeface, android.os.Handler):void (m)] (LINE:178)\l}"];
Node_27 [shape=record,label="{27\:\ 0x006f|0x006f: CONST  (r4 I:??[int, float, short, byte, char]) = (\-3 ??[int, float, short, byte, char])  (LINE:180)\l0x0070: INVOKE  (r1 I:androidx.core.content.res.ResourcesCompat$FontCallback), (r4 I:int), (r2 I:android.os.Handler) type: VIRTUAL call: androidx.core.content.res.ResourcesCompat.FontCallback.callbackFailAsync(int, android.os.Handler):void A[MD:(int, android.os.Handler):void (m)]\l}"];
MethodNode[shape=record,label="{public static android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromResourcesFamilyXml((r15 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry A[D('entry' androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[D('path' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('cookie' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:androidx.core.content.res.ResourcesCompat$FontCallback A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:boolean A[D('isRequestFromLayoutInflator' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0018 \-\> B:8:0x001d, CROSS_EDGE: B:30:0x007e \-\> B:1:?, CROSS_EDGE: B:28:0x0073 \-\> B:30:0x007e, CROSS_EDGE: B:21:0x003b \-\> B:22:0x003d, CROSS_EDGE: B:14:0x002b \-\> B:19:0x0033, CROSS_EDGE: B:16:0x002f \-\> B:19:0x0033, CROSS_EDGE: B:17:0x0031 \-\> B:19:0x0033, CROSS_EDGE: B:26:0x006b \-\> B:28:0x0073, CROSS_EDGE: B:27:0x006f \-\> B:28:0x0073, CROSS_EDGE: B:24:0x0067 \-\> B:28:0x0073\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0053: r4 'fontFamilyTypeface' Landroid\/graphics\/Typeface;\l  0x0042\-0x0053: r5 'newHandler' Landroid\/os\/Handler;\l  0x0033\-0x0053: r11 'isBlocking' Z\l  0x003e\-0x0053: r12 'timeout' I\l  0x0047\-0x0053: r14 'newCallback' Landroidx\/core\/graphics\/TypefaceCompat$ResourcesCallbackAdapter;\l  0x000d\-0x0053: r3 'providerEntry' Landroidx\/core\/content\/res\/FontResourcesParserCompat$ProviderResourceEntry;\l  0x0053\-0x0059: r3 'typeface' Landroid\/graphics\/Typeface;\l  0x0067\-0x007e: r3 'typeface' Landroid\/graphics\/Typeface;\l  \-1 \-0x007e: r15 'context' Landroid\/content\/Context;\l  \-1 \-0x007e: r16 'entry' Landroidx\/core\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;\l  \-1 \-0x007e: r17 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x007e: r18 'id' I\l  \-1 \-0x007e: r19 'path' Ljava\/lang\/String;\l  \-1 \-0x007e: r20 'cookie' I\l  \-1 \-0x007e: r21 'style' I\l  \-1 \-0x007e: r22 'fontCallback' Landroidx\/core\/content\/res\/ResourcesCompat$FontCallback;\l  \-1 \-0x007e: r23 'handler' Landroid\/os\/Handler;\l  \-1 \-0x007e: r24 'isRequestFromLayoutInflator' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_1;
Node_21 -> Node_22;
Node_14 -> Node_19;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
}

