digraph "CFG forandroidx.core.graphics.PaintCompat.setBlendMode(Landroid\/graphics\/Paint;Landroidx\/core\/graphics\/BlendModeCompat;)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:128)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r3 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:30:0x0015 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('blendMode' androidx.core.graphics.BlendModeCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0010  (LINE:129)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|0x000a: INVOKE  (r2 I:java.lang.Object) = (r5 I:androidx.core.graphics.BlendModeCompat A[D('blendMode' androidx.core.graphics.BlendModeCompat)]) type: STATIC call: androidx.core.graphics.BlendModeUtils.Api29Impl.obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat):java.lang.Object A[MD:(androidx.core.graphics.BlendModeCompat):java.lang.Object (m)] (LINE:130)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  \l  (r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l  (r0 I:java.lang.Object A[D('blendModePlatform' java.lang.Object)])\l type: STATIC call: androidx.core.graphics.PaintCompat.Api29Impl.setBlendMode(android.graphics.Paint, java.lang.Object):void A[MD:(android.graphics.Paint, java.lang.Object):void (m)] (LINE:131)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:boolean)  (LINE:133)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|0x0015: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('blendMode' androidx.core.graphics.BlendModeCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x002a  (LINE:134)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: INVOKE  (r0 I:android.graphics.PorterDuff$Mode) = (r5 I:androidx.core.graphics.BlendModeCompat A[D('blendMode' androidx.core.graphics.BlendModeCompat)]) type: STATIC call: androidx.core.graphics.BlendModeUtils.obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat):android.graphics.PorterDuff$Mode A[MD:(androidx.core.graphics.BlendModeCompat):android.graphics.PorterDuff$Mode (m)] (LINE:135)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' android.graphics.PorterDuff$Mode)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0022  (LINE:136)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: NEW_INSTANCE  (r2 I:android.graphics.PorterDuffXfermode) =  android.graphics.PorterDuffXfermode \l0x001f: INVOKE  \l  (r2 I:android.graphics.PorterDuffXfermode)\l  (r0 I:android.graphics.PorterDuff$Mode A[D('mode' android.graphics.PorterDuff$Mode)])\l type: DIRECT call: android.graphics.PorterDuffXfermode.\<init\>(android.graphics.PorterDuff$Mode):void A[MD:(android.graphics.PorterDuff$Mode):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|0x0022: INVOKE  (r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]), (r2 I:android.graphics.Xfermode) type: VIRTUAL call: android.graphics.Paint.setXfermode(android.graphics.Xfermode):android.graphics.Xfermode A[MD:(android.graphics.Xfermode):android.graphics.Xfermode (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|0x0025: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' android.graphics.PorterDuff$Mode)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028  (LINE:139)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: RETURN  (r1 I:boolean) \l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|0x002a: INVOKE  (r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]), (r2 I:android.graphics.Xfermode) type: VIRTUAL call: android.graphics.Paint.setXfermode(android.graphics.Xfermode):android.graphics.Xfermode A[MD:(android.graphics.Xfermode):android.graphics.Xfermode (c)] (LINE:143)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002d|RETURN\l|0x002d: RETURN  (r1 I:boolean)  (LINE:144)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.graphics.PaintCompat.setBlendMode((r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.core.graphics.BlendModeCompat A[D('blendMode' androidx.core.graphics.BlendModeCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0008 \-\> B:28:0x0010, CROSS_EDGE: B:38:0x0029 \-\> B:22:?, CROSS_EDGE: B:35:0x0025 \-\> B:38:0x0029, CROSS_EDGE: B:32:0x001b \-\> B:34:0x0022, CROSS_EDGE: B:40:0x002d \-\> B:22:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0015: r0 'blendModePlatform' Ljava\/lang\/Object;\l  0x001b\-0x002a: r0 'mode' Landroid\/graphics\/PorterDuff$Mode;\l  \-1 \-0x002d: r4 'paint' Landroid\/graphics\/Paint;\l  \-1 \-0x002d: r5 'blendMode' Landroidx\/core\/graphics\/BlendModeCompat;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_22;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_41[style=dashed];
Node_37 -> Node_22;
Node_41 -> Node_22;
Node_39 -> Node_40;
Node_40 -> Node_22;
}

