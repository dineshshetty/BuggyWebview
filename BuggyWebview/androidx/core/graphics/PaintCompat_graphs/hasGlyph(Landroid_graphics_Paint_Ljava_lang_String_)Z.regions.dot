digraph "CFG forandroidx.core.graphics.PaintCompat.hasGlyph(Landroid\/graphics\/Paint;Ljava\/lang\/String;)Z" {
subgraph cluster_Region_2042330263 {
label = "R(1:(2:(1:4)|(2:6|(2:(1:10)|(2:11|(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_332272830 {
label = "R(2:(1:4)|(2:6|(2:(1:10)|(2:11|(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_535397595 {
label = "IF [B:34:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L3\l}"];
subgraph cluster_Region_481753377 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x000a|RETURN\l|return androidx.core.graphics.PaintCompat.Api23Impl.hasGlyph(r11, r12)\l}"];
}
}
subgraph cluster_Region_1827823101 {
label = "R(2:6|(2:(1:10)|(2:11|(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30)))))))";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x000b|int int r0 = r12.length()\l}"];
subgraph cluster_Region_1045127652 {
label = "R(2:(1:10)|(2:11|(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1067199538 {
label = "IF [B:38:0x0011, B:40:0x001b] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0011|if (r0 == 1) goto L8\l}"];
Node_40 [shape=record,label="{40\:\ 0x001b|ADDED_TO_REGION\l|if (java.lang.Character.isWhitespace(r12.charAt(0)) != false) goto L10\l}"];
subgraph cluster_Region_1564735863 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x001d|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_751681300 {
label = "R(2:11|(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30)))))";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x001e|float float r4 = r11.measureText(androidx.core.graphics.PaintCompat.TOFU_STRING)\lfloat float r5 = r11.measureText(androidx.core.graphics.PaintCompat.EM_STRING)\lfloat float r6 = r11.measureText(r12)\l}"];
subgraph cluster_Region_249524568 {
label = "R(2:(1:13)|(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1819661011 {
label = "IF [B:43:0x0031] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0031|if (r6 == 0.0f) goto L13\l}"];
subgraph cluster_Region_621538899 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0033|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1084944215 {
label = "R(2:(1:(2:(1:18)|(3:19|(1:21)|(1:25))))|(2:(1:28)|(2:29|30)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_48250484 {
label = "IF [B:46:0x003c] THEN: R(1:(2:(1:18)|(3:19|(1:21)|(1:25)))) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x003c|if (r12.codePointCount(0, r12.length()) \> 1) goto L16\l}"];
subgraph cluster_Region_2009127617 {
label = "R(1:(2:(1:18)|(3:19|(1:21)|(1:25))))";
node [shape=record,color=blue];
subgraph cluster_Region_230939420 {
label = "R(2:(1:18)|(3:19|(1:21)|(1:25)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1309788237 {
label = "IF [B:48:0x0044] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0044|if (r6 \> (2.0f * r5)) goto L18\l}"];
subgraph cluster_Region_444882340 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0046|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_682763542 {
label = "R(3:19|(1:21)|(1:25))";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0047|float r7 = 0.0f\lint r8 = 0\l}"];
subgraph cluster_LoopRegion_946898557 {
label = "LOOP:0: (1:21)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0049|LOOP_START\lLOOP:0: B:51:0x0049\-\>B:52:0x004b\lPHI: r7 r8 \l  PHI: (r7v10 'sumWidth' float) = (r7v9 'sumWidth' float), (r7v11 'sumWidth' float) binds: [B:50:0x0047, B:52:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'i' int) = (r8v1 'i' int), (r8v3 'i' int) binds: [B:50:0x0047, B:52:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 \< r0) goto L21\l}"];
subgraph cluster_Region_1747043309 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x004b|LOOP_END\lLOOP:0: B:51:0x0049\-\>B:52:0x004b\l|int int r9 = java.lang.Character.charCount(r12.codePointAt(r8))\lr7 += r11.measureText(r12, r8, r8 + r9)\lr8 += r9\l}"];
}
}
subgraph cluster_IfRegion_755103062 {
label = "IF [B:54:0x005e] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x005e|if (r6 \>= r7) goto L25\l}"];
subgraph cluster_Region_429179678 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x0060|RETURN\l|return false\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1760760895 {
label = "R(2:(1:28)|(2:29|30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1928264451 {
label = "IF [B:57:0x0063] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0063|if (r6 != r4) goto L28\l}"];
subgraph cluster_Region_2080057606 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0065|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1387142409 {
label = "R(2:29|30)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0066|androidx.core.util.Pair androidx.core.util.Pair\<android.graphics.Rect, android.graphics.Rect\> r7 = obtainEmptyRects()\lr11.getTextBounds(androidx.core.graphics.PaintCompat.TOFU_STRING, 0, androidx.core.graphics.PaintCompat.TOFU_STRING.length(), r7.first)\lr11.getTextBounds(r12, 0, r0, r7.second)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0087|RETURN\l|return true ^ r7.first.equals(r7.second)\l}"];
}
}
}
}
}
}
}
}
}
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0000}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0006}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0013}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0034}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x003e}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x005c|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x005c}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0061}"];
MethodNode[shape=record,label="{public static boolean androidx.core.graphics.PaintCompat.hasGlyph((r11v0 'paint' android.graphics.Paint A[D('paint' android.graphics.Paint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'string' java.lang.String A[D('string' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x001d \-\> B:32:?, CROSS_EDGE: B:44:0x0033 \-\> B:32:?, CROSS_EDGE: B:49:0x0046 \-\> B:32:?, BACK_EDGE: B:52:0x004b \-\> B:51:0x0049, CROSS_EDGE: B:55:0x0060 \-\> B:32:?, CROSS_EDGE: B:58:0x0065 \-\> B:32:?, CROSS_EDGE: B:60:0x0087 \-\> B:32:?, CROSS_EDGE: B:46:0x003c \-\> B:56:0x0061, CROSS_EDGE: B:38:0x0011 \-\> B:42:0x001e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_31;Node_34 -> Node_35;
Node_34 -> Node_37[style=dashed];
Node_36 -> Node_32;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_42[style=dashed];
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_45[style=dashed];
Node_44 -> Node_32;
Node_46 -> Node_47;
Node_46 -> Node_56[style=dashed];
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_32;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_61[style=dashed];
Node_52 -> Node_51;
Node_54 -> Node_55;
Node_54 -> Node_56[style=dashed];
Node_55 -> Node_32;
Node_57 -> Node_58;
Node_57 -> Node_59[style=dashed];
Node_58 -> Node_32;
Node_59 -> Node_60;
Node_60 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_39 -> Node_40;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_61 -> Node_53;
Node_53 -> Node_54;
Node_56 -> Node_57;
}

