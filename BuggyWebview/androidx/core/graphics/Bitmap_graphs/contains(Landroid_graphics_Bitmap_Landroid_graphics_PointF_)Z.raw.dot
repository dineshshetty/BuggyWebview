digraph "CFG forandroidx.core.graphics.BitmapKt.contains(Landroid\/graphics\/Bitmap;Landroid\/graphics\/PointF;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$contains' android.graphics.Bitmap)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"p\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('p' android.graphics.PointF)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: IGET  (r1 I:float) = (r5 I:android.graphics.PointF A[D('p' android.graphics.PointF)]) android.graphics.PointF.x float  (LINE:139)\l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IGET  (r1 I:float) = (r5 I:android.graphics.PointF A[D('p' android.graphics.PointF)]) android.graphics.PointF.x float \l0x0014: INVOKE  (r3 I:int) = (r4 I:android.graphics.Bitmap A[D('$this$contains' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)]\l0x0018: CAST (r3 I:float) = (float) (r3 I:int) \l0x0019: CMP_G  (r1 I:int) = (r1 I:float), (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IGET  (r1 I:float) = (r5 I:android.graphics.PointF A[D('p' android.graphics.PointF)]) android.graphics.PointF.y float \l0x001f: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r1 I:float) = (r5 I:android.graphics.PointF A[D('p' android.graphics.PointF)]) android.graphics.PointF.y float \l0x0025: INVOKE  (r2 I:int) = (r4 I:android.graphics.Bitmap A[D('$this$contains' android.graphics.Bitmap)]) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)]\l0x0029: CAST (r2 I:float) = (float) (r2 I:int) \l0x002a: CMP_G  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|SYNTHETIC\lRETURN\l|0x002e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0031: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0031: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean androidx.core.graphics.BitmapKt.contains((r4 I:android.graphics.Bitmap A[D('$this$contains' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.PointF A[D('p' android.graphics.PointF), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0030 \-\> B:12:0x0031, CROSS_EDGE: B:7:0x0021 \-\> B:11:0x0030, CROSS_EDGE: B:5:0x001b \-\> B:11:0x0030, CROSS_EDGE: B:3:0x0010 \-\> B:11:0x0030\lDebug Info:\l  0x000b\-0x0031: r0 '$i$f$contains' I\l  \-1 \-0x0031: r4 '$this$contains' Landroid\/graphics\/Bitmap;\l  \-1 \-0x0031: r5 'p' Landroid\/graphics\/PointF;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

