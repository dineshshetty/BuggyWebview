digraph "CFG forandroidx.core.graphics.BitmapKt.scale(Landroid\/graphics\/Bitmap;IIZ)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\landroid.graphics.Bitmap r1 = android.graphics.Bitmap.createScaledBitmap(r3, r4, r5, r6)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"createScaledBitmap(this, width, height, filter)\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return r1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.graphics.Bitmap androidx.core.graphics.BitmapKt.scale((r3v0 '$this$scale' android.graphics.Bitmap A[D('$this$scale' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'filter' boolean A[D('filter' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

