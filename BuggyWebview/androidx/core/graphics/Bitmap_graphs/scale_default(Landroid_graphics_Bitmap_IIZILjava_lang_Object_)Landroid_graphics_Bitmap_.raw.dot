digraph "CFG forandroidx.core.graphics.BitmapKt.scale$default(Landroid\/graphics\/Bitmap;IIZILjava\/lang\/Object;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:76)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('filter' boolean)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: CONST_STR  (r5 I:java.lang.String) =  \"\<this\>\" \l0x0007: INVOKE  (r1 I:java.lang.Object A[D('$this$scale_u24default' android.graphics.Bitmap)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r6 I:android.graphics.Bitmap) = \l  (r1 I:android.graphics.Bitmap A[D('$this$scale_u24default' android.graphics.Bitmap)])\l  (r2 I:int A[D('width' int)])\l  (r3 I:int A[D('height' int)])\l  (r4 I:boolean A[D('filter' boolean)])\l type: STATIC call: android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap, int, int, boolean):android.graphics.Bitmap A[MD:(android.graphics.Bitmap, int, int, boolean):android.graphics.Bitmap (c)] (LINE:77)\l0x000f: CONST_STR  (r0 I:java.lang.String) =  \"createScaledBitmap(this, width, height, filter)\" \l0x0011: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|0x0014: RETURN  (r6 I:android.graphics.Bitmap) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.graphics.Bitmap androidx.core.graphics.BitmapKt.scale$default((r1 I:android.graphics.Bitmap A[D('$this$scale_u24default' android.graphics.Bitmap), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('filter' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lDebug Info:\l  \-1 \-0x0014: r1 '$this$scale_u24default' Landroid\/graphics\/Bitmap;\l  \-1 \-0x0014: r2 'width' I\l  \-1 \-0x0014: r3 'height' I\l  \-1 \-0x0014: r4 'filter' Z\l  0x000b\-0x0014: r5 '$i$f$scale' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

