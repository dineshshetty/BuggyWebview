digraph "CFG forandroidx.core.graphics.BitmapKt.createBitmap$default(IILandroid\/graphics\/Bitmap$Config;ILjava\/lang\/Object;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:90)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r3 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)]) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:93)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: CONST_STR  (r4 I:java.lang.String) =  \"config\"  (LINE:90)\l0x0008: INVOKE  (r3 I:java.lang.Object A[D('config' android.graphics.Bitmap$Config)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: INVOKE  (r5 I:android.graphics.Bitmap) = \l  (r1 I:int A[D('width' int)])\l  (r2 I:int A[D('height' int)])\l  (r3 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config)])\l type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)] (LINE:95)\l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"createBitmap(width, height, config)\" \l0x0012: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|RETURN\l|0x0015: RETURN  (r5 I:android.graphics.Bitmap) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.graphics.Bitmap androidx.core.graphics.BitmapKt.createBitmap$default((r1 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0006\lDebug Info:\l  \-1 \-0x0015: r1 'width' I\l  \-1 \-0x0015: r2 'height' I\l  \-1 \-0x0015: r3 'config' Landroid\/graphics\/Bitmap$Config;\l  0x000c\-0x0015: r4 '$i$f$createBitmap' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

