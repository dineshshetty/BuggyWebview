digraph "CFG forandroidx.core.graphics.BitmapKt.createBitmap(IILandroid\/graphics\/Bitmap$Config;ZLandroid\/graphics\/ColorSpace;)Landroid\/graphics\/Bitmap;" {
subgraph cluster_Region_817055912 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"config\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"colorSpace\")\landroid.graphics.Bitmap android.graphics.Bitmap r1 = android.graphics.Bitmap.createBitmap(r3, r4, r5, r6, r7)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"createBitmap(width, heigâ€¦ig, hasAlpha, colorSpace)\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|RETURN\l|return r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.graphics.Bitmap androidx.core.graphics.BitmapKt.createBitmap((r3v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'config' android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'hasAlpha' boolean A[D('hasAlpha' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'colorSpace' android.graphics.ColorSpace A[D('colorSpace' android.graphics.ColorSpace), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_1;
Node_0 -> Node_2;
}

