digraph "CFG forandroidx.core.graphics.PathUtils.flatten(Landroid\/graphics\/Path;F)Ljava\/util\/Collection;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:float[]) = (r15 I:android.graphics.Path A[D('path' android.graphics.Path)]), (r16 I:float A[D('error' float)]) type: STATIC call: androidx.core.graphics.PathUtils.Api26Impl.approximate(android.graphics.Path, float):float[] A[MD:(android.graphics.Path, float):float[] (m)] (LINE:61)\l0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('pathData' float[])])  (LINE:62)\l0x0005: ARITH  (r1 I:int) = (r1 I:int) \/ (3 int) \l0x0007: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:63)\l0x0009: INVOKE  (r2 I:java.util.ArrayList), (r1 I:int A[D('pointCount' int)]) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:64)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|LOOP_START\lLOOP:0: B:20:0x000d\-\>B:28:0x0047\l|0x000d: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('pointCount' int)])  \-\> B:30:0x004a \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: ARITH  (r4 I:int) = (r3 I:int A[D('i' int)]) * (3 int)  (LINE:65)\l0x0011: ARITH  (r5 I:int) = (r3 I:int A[D('i' int)]) + (\-1 int)  (LINE:66)\l0x0013: ARITH  (r5 I:int) = (r5 I:int) * (3 int) \l0x0015: AGET  (r6 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r4 I:??[int, short, byte, char] A[D('index' int)])  (LINE:68)\l0x0017: ARITH  (r7 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:69)\l0x0019: AGET  (r7 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r7 I:??[int, short, byte, char]) \l0x001b: ARITH  (r8 I:int) = (r4 I:int A[D('index' int)]) + (2 int)  (LINE:70)\l0x001d: AGET  (r8 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r8 I:??[int, short, byte, char]) \l0x001f: AGET  (r9 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r5 I:??[int, short, byte, char] A[D('prevIndex' int)])  (LINE:72)\l0x0021: ARITH  (r10 I:int) = (r5 I:int A[D('prevIndex' int)]) + (1 int)  (LINE:73)\l0x0023: AGET  (r10 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r10 I:??[int, short, byte, char]) \l0x0025: ARITH  (r11 I:int) = (r5 I:int A[D('prevIndex' int)]) + (2 int)  (LINE:74)\l0x0027: AGET  (r11 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('pathData' float[])]), (r11 I:??[int, short, byte, char]) \l0x0029: CMP_L  (r12 I:int) = (r6 I:float A[D('d' float)]), (r9 I:float A[D('pd' float)])  (LINE:76)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|0x002b: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0047 \l}"];
Node_23 [shape=record,label="{23\:\ 0x002d|0x002d: CMP_L  (r12 I:int) = (r7 I:float A[D('x' float)]), (r10 I:float A[D('px' float)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002f|0x002f: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0035 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0031|0x0031: CMP_L  (r12 I:int) = (r8 I:float A[D('y' float)]), (r11 I:float A[D('py' float)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0033|0x0033: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0047 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0047|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0047|LOOP_END\lLOOP:0: B:20:0x000d\-\>B:28:0x0047\l|0x0047: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:64)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0035|0x0035: NEW_INSTANCE  (r12 I:androidx.core.graphics.PathSegment) =  androidx.core.graphics.PathSegment  (LINE:77)\l0x0037: NEW_INSTANCE  (r13 I:android.graphics.PointF) =  android.graphics.PointF \l0x0039: INVOKE  (r13 I:android.graphics.PointF), (r10 I:float A[D('px' float)]), (r11 I:float A[D('py' float)]) type: DIRECT call: android.graphics.PointF.\<init\>(float, float):void A[MD:(float, float):void (c)]\l0x003c: NEW_INSTANCE  (r14 I:android.graphics.PointF) =  android.graphics.PointF \l0x003e: INVOKE  (r14 I:android.graphics.PointF), (r7 I:float A[D('x' float)]), (r8 I:float A[D('y' float)]) type: DIRECT call: android.graphics.PointF.\<init\>(float, float):void A[MD:(float, float):void (c)]\l0x0041: INVOKE  \l  (r12 I:androidx.core.graphics.PathSegment)\l  (r13 I:android.graphics.PointF)\l  (r9 I:float A[D('pd' float)])\l  (r14 I:android.graphics.PointF)\l  (r6 I:float A[D('d' float)])\l type: DIRECT call: androidx.core.graphics.PathSegment.\<init\>(android.graphics.PointF, float, android.graphics.PointF, float):void A[MD:(android.graphics.PointF, float, android.graphics.PointF, float):void (m)]\l0x0044: INVOKE  (r2 I:java.util.List A[D('segments' java.util.List\<androidx.core.graphics.PathSegment\>)]), (r12 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0047|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0047|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x004a|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004a|RETURN\l|0x004a: RETURN  \l  (r2 I:java.util.Collection\<androidx.core.graphics.PathSegment\> A[D('segments' java.util.List\<androidx.core.graphics.PathSegment\>)])\l  (LINE:80)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.util.Collection\<androidx.core.graphics.PathSegment\> androidx.core.graphics.PathUtils.flatten((r15 I:android.graphics.Path A[D('path' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float A[D('error' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0047 \-\> B:20:0x000d, CROSS_EDGE: B:26:0x0033 \-\> B:28:0x0047, CROSS_EDGE: B:24:0x002f \-\> B:27:0x0035, CROSS_EDGE: B:22:0x002b \-\> B:28:0x0047\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0047: r4 'index' I\l  0x0015\-0x0047: r5 'prevIndex' I\l  0x0017\-0x0047: r6 'd' F\l  0x001b\-0x0047: r7 'x' F\l  0x001f\-0x0047: r8 'y' F\l  0x0021\-0x0047: r9 'pd' F\l  0x0025\-0x0047: r10 'px' F\l  0x0029\-0x0047: r11 'py' F\l  0x000d\-0x004a: r3 'i' I\l  0x0004\-0x004a: r0 'pathData' [F\l  0x0007\-0x004a: r1 'pointCount' I\l  0x000c\-0x004a: r2 'segments' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/core\/graphics\/PathSegment;\>;\l  \-1 \-0x004a: r15 'path' Landroid\/graphics\/Path;\l  \-1 \-0x004a: r16 'error' F\lSIGNATURE: (Landroid\/graphics\/Path;F)Ljava\/util\/Collection\<Landroidx\/core\/graphics\/PathSegment;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_33 -> Node_28;
Node_28 -> Node_20;
Node_27 -> Node_31;
Node_31 -> Node_28;
Node_32 -> Node_28;
Node_30 -> Node_29;
Node_29 -> Node_18;
}

