digraph "CFG forandroidx.core.graphics.TypefaceCompatApi21Impl.addFontWeightStyle(Ljava\/lang\/Object;Ljava\/lang\/String;IZ)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|init()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0024, blocks: (B:15:0x0003), top: B:22:0x0003 \}\lCatch: IllegalAccessException \| InvocationTargetException \-\> 0x0024, IllegalAccessException \-\> 0x0026\l|java.lang.Boolean r0 = (java.lang.Boolean) androidx.core.graphics.TypefaceCompatApi21Impl.sAddFontWeightStyle.invoke(r4, new java.lang.Object[]\{r5, java.lang.Integer.valueOf(r6), java.lang.Boolean.valueOf(r7)\})     \/\/ Catch: java.lang.Throwable \-\> L24 java.lang.IllegalAccessException \-\> L26\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|RETURN\l|return r0.booleanValue()\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|ExcHandler: IllegalAccessException \| InvocationTargetException \-\> 0x0024\l|java.lang.reflect.InvocationTargetException r0 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027}"];
Node_21 [shape=record,label="{21\:\ 0x002c|throw new java.lang.RuntimeException(r0)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.graphics.TypefaceCompatApi21Impl.addFontWeightStyle((r4v0 'family' java.lang.Object A[D('family' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'weight' int A[D('weight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'style' boolean A[D('style' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x002c \-\> B:13:?, CROSS_EDGE: B:22:0x0003 \-\> B:17:0x0024\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \| InvocationTargetException \-\> 0x0024, blocks: (B:15:0x0003), top: B:22:0x0003 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_22;
Node_22 -> Node_15;
Node_22 -> Node_17;
Node_15 -> Node_16;
Node_15 -> Node_23;
Node_16 -> Node_13;
Node_23 -> Node_17;
Node_17 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

