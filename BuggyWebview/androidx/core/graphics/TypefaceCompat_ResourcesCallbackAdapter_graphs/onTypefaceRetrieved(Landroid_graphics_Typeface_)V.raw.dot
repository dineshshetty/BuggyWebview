digraph "CFG forandroidx.core.graphics.TypefaceCompat.ResourcesCallbackAdapter.onTypefaceRetrieved(Landroid\/graphics\/Typeface;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.content.res.ResourcesCompat$FontCallback) = (r1 I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter) androidx.core.graphics.TypefaceCompat.ResourcesCallbackAdapter.mFontCallback androidx.core.content.res.ResourcesCompat$FontCallback  (LINE:327)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  \l  (r0 I:androidx.core.content.res.ResourcesCompat$FontCallback)\l  (r2 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])\l type: VIRTUAL call: androidx.core.content.res.ResourcesCompat.FontCallback.onFontRetrieved(android.graphics.Typeface):void A[MD:(android.graphics.Typeface):void (m)] (LINE:328)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\lORIG_RETURN\l|0x0007: RETURN    (LINE:330)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0007: RETURN   A[SYNTHETIC] (LINE:330)\l}"];
MethodNode[shape=record,label="{public void androidx.core.graphics.TypefaceCompat.ResourcesCallbackAdapter.onTypefaceRetrieved((r1 'this' I:androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x0007\lDebug Info:\l  \-1 \-0x0007: r2 'typeface' Landroid\/graphics\/Typeface;\lMETHOD_OVERRIDE: [androidx.core.provider.FontsContractCompat.FontRequestCallback.onTypefaceRetrieved(android.graphics.Typeface):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

