digraph "CFG forandroidx.core.graphics.PathKt.flatten(Landroid\/graphics\/Path;F)Ljava\/lang\/Iterable;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$flatten' android.graphics.Path)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Collection) = (r2 I:android.graphics.Path A[D('$this$flatten' android.graphics.Path)]), (r3 I:float A[D('error' float)]) type: STATIC call: androidx.core.graphics.PathUtils.flatten(android.graphics.Path, float):java.util.Collection A[MD:(android.graphics.Path, float):java.util.Collection\<androidx.core.graphics.PathSegment\> (m)] (LINE:37)\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"flatten(this, error)\" \l0x000b: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000e: CHECK_CAST (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:java.lang.Iterable\<androidx.core.graphics.PathSegment\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final java.lang.Iterable\<androidx.core.graphics.PathSegment\> androidx.core.graphics.PathKt.flatten((r2 I:android.graphics.Path A[D('$this$flatten' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('error' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0010: r2 '$this$flatten' Landroid\/graphics\/Path;\l  \-1 \-0x0010: r3 'error' F\lSIGNATURE: (Landroid\/graphics\/Path;F)Ljava\/lang\/Iterable\<Landroidx\/core\/graphics\/PathSegment;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

