digraph "CFG forandroidx.core.graphics.ColorKt.convertTo(Landroid\/graphics\/Color;Landroid\/graphics\/ColorSpace$Named;)Landroid\/graphics\/Color;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"colorSpace\")\landroid.graphics.Color r1 = r3.convert(android.graphics.ColorSpace.get(r4))\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"convert(ColorSpace.get(colorSpace))\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|RETURN\l|return r1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.graphics.Color androidx.core.graphics.ColorKt.convertTo((r3v0 '$this$convertTo' android.graphics.Color A[D('$this$convertTo' android.graphics.Color), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'colorSpace' android.graphics.ColorSpace$Named A[D('colorSpace' android.graphics.ColorSpace$Named), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

