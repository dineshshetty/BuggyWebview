digraph "CFG forandroidx.core.graphics.PictureKt.record(Landroid\/graphics\/Picture;IILkotlin\/jvm\/functions\/Function1;)Landroid\/graphics\/Picture;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$record' android.graphics.Picture)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('block' kotlin.jvm.functions.Function1)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:android.graphics.Canvas) = \l  (r4 I:android.graphics.Picture A[D('$this$record' android.graphics.Picture)])\l  (r5 I:int A[D('width' int)])\l  (r6 I:int A[D('height' int)])\l type: VIRTUAL call: android.graphics.Picture.beginRecording(int, int):android.graphics.Canvas A[MD:(int, int):android.graphics.Canvas (c)] (LINE:36)\l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"beginRecording(width, height)\" \l0x0011: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0015: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:38)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:3:0x0016), top: B:9:0x0016 \}\lCatch: all \-\> 0x0024\l|0x0016: INVOKE  \l  (r7 I:kotlin.jvm.functions.Function1 A[D('block' kotlin.jvm.functions.Function1)])\l  (r1 I:java.lang.Object A[D('c' android.graphics.Canvas)])\l type: INTERFACE call: kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0024, MD:(P1):R (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x001c: INVOKE  (r4 I:android.graphics.Picture A[D('$this$record' android.graphics.Picture)]) type: VIRTUAL call: android.graphics.Picture.endRecording():void A[MD:():void (c)] (LINE:40)\l0x001f: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|RETURN\l|0x0023: RETURN  (r4 I:android.graphics.Picture A[D('$this$record' android.graphics.Picture)])  (LINE:42)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|0x0024: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0024] (LINE:39)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyStart(int):void A[MD:(int):void (m)]\l0x0028: INVOKE  (r4 I:android.graphics.Picture A[D('$this$record' android.graphics.Picture)]) type: VIRTUAL call: android.graphics.Picture.endRecording():void A[MD:():void (c)] (LINE:40)\l0x002b: INVOKE  (r2 I:int) type: STATIC call: kotlin.jvm.internal.InlineMarker.finallyEnd(int):void A[MD:(int):void (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final android.graphics.Picture androidx.core.graphics.PictureKt.record((r4 I:android.graphics.Picture A[D('$this$record' android.graphics.Picture), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super android.graphics.Canvas, kotlin.Unit\> A[D('block' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x002e \-\> B:1:?, CROSS_EDGE: B:9:0x0016 \-\> B:6:0x0024\lDebug Info:\l  0x000b\-0x002e: r0 '$i$f$record' I\l  0x0014\-0x002e: r1 'c' Landroid\/graphics\/Canvas;\l  \-1 \-0x002e: r4 '$this$record' Landroid\/graphics\/Picture;\l  \-1 \-0x002e: r5 'width' I\l  \-1 \-0x002e: r6 'height' I\l  \-1 \-0x002e: r7 'block' Lkotlin\/jvm\/functions\/Function1;\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:3:0x0016), top: B:9:0x0016 \}\lSIGNATURE: (Landroid\/graphics\/Picture;IILkotlin\/jvm\/functions\/Function1\<\-Landroid\/graphics\/Canvas;Lkotlin\/Unit;\>;)Landroid\/graphics\/Picture;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_10 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

