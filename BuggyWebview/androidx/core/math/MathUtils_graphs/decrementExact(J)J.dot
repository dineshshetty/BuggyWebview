digraph "CFG forandroidx.core.math.MathUtils.decrementExact(J)J" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0004|if ((r3 \> Long.MIN_VALUE ? 1 : (r3 == Long.MIN_VALUE ? 0 : \-1)) == 0) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|return r3 \- 1\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b}"];
Node_15 [shape=record,label="{15\:\ 0x0012|throw new java.lang.ArithmeticException(\"long overflow\")\l}"];
MethodNode[shape=record,label="{public static long androidx.core.math.MathUtils.decrementExact((r3v0 'a' long A[D('a' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0012 \-\> B:9:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

