digraph "CFG forandroidx.core.math.MathUtils.subtractExact(JJ)J" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: ARITH  (r0 I:long) = (r7 I:long A[D('x' long)]) \- (r9 I:long A[D('y' long)])  (LINE:72)\l0x0002: ARITH  (r2 I:long) = (r7 I:long A[D('x' long)]) ^ (r9 I:long A[D('y' long)])  (LINE:75)\l0x0004: ARITH  (r4 I:long) = (r7 I:long A[D('x' long)]) ^ (r0 I:long A[D('r' long)]) \l0x0006: ARITH  (r2 I:long) = (r2 I:long) & (r4 I:long) \l0x0007: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x0009: CMP_L  (r6 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000b|0x000b: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:12:0x000e \l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:long A[D('r' long)])  (LINE:78)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:java.lang.ArithmeticException) =  java.lang.ArithmeticException  (LINE:76)\l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"long overflow\" \l0x0012: INVOKE  (r2 I:java.lang.ArithmeticException), (r3 I:java.lang.String) type: DIRECT call: java.lang.ArithmeticException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|0x0015: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static long androidx.core.math.MathUtils.subtractExact((r7 I:long A[D('x' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('y' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0015 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0015: r0 'r' J\l  \-1 \-0x0015: r7 'x' J\l  \-1 \-0x0015: r9 'y' J\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

