digraph "CFG forandroidx.core.math.MathUtils.addExact(II)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|int r0 = r3 + r4\l}"];
Node_10 [shape=record,label="{10\:\ 0x0007|if (((r3 ^ r0) & (r4 ^ r0)) \< 0) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0009|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a}"];
Node_13 [shape=record,label="{13\:\ 0x0011|throw new java.lang.ArithmeticException(\"integer overflow\")\l}"];
MethodNode[shape=record,label="{public static int androidx.core.math.MathUtils.addExact((r3v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0011 \-\> B:8:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

