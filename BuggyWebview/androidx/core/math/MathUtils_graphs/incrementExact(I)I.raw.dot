digraph "CFG forandroidx.core.math.MathUtils.incrementExact(I)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char])  (LINE:117)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('a' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: ARITH  (r0 I:int) = (r2 I:int A[D('a' int)]) + (1 int)  (LINE:121)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.lang.ArithmeticException) =  java.lang.ArithmeticException  (LINE:118)\l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"integer overflow\" \l0x000c: INVOKE  (r0 I:java.lang.ArithmeticException), (r1 I:java.lang.String) type: DIRECT call: java.lang.ArithmeticException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|0x000f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static int androidx.core.math.MathUtils.incrementExact((r2 I:int A[D('a' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'a' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

