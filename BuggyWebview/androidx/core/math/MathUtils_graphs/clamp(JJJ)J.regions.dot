digraph "CFG forandroidx.core.math.MathUtils.clamp(JJJ)J" {
subgraph cluster_Region_23351704 {
label = "R(1:(2:(1:3)|(1:(2:(1:7)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1825441237 {
label = "R(2:(1:3)|(1:(2:(1:7)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2102662230 {
label = "IF [B:12:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|if (r1 \< r3) goto L3\l}"];
subgraph cluster_Region_232256310 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|RETURN\l|return r3\l}"];
}
}
subgraph cluster_Region_782015365 {
label = "R(1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_845206318 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1867220880 {
label = "IF [B:15:0x0007] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0007|if (r1 \> r5) goto L7\l}"];
subgraph cluster_Region_1563924236 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|RETURN\l|return r5\l}"];
}
}
subgraph cluster_Region_398294940 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|return r1\l}"];
}
}
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0000}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005}"];
MethodNode[shape=record,label="{public static long androidx.core.math.MathUtils.clamp((r1v0 'value' long A[D('value' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'min' long A[D('min' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'max' long A[D('max' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0009 \-\> B:10:?, CROSS_EDGE: B:17:0x000a \-\> B:10:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_10;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_10;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_14 -> Node_15;
}

