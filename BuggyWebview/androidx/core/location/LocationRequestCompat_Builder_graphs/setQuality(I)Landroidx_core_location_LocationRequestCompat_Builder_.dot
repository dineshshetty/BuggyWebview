digraph "CFG forandroidx.core.location.LocationRequestCompat.Builder.setQuality(I)Landroidx\/core\/location\/LocationRequestCompat$Builder;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (r5 == 104) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r5 == 102) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a}"];
Node_20 [shape=record,label="{20\:\ 0x000c|if (r5 != 100) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|r2 = false\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|PHI: r2 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v5 boolean) binds: [B:23:0x0011, B:22:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.util.Preconditions.checkArgument(r2, \"quality must be a defined QUALITY constant, not %d\", new java.lang.Object[]\{java.lang.Integer.valueOf(r5)\})\lr4.mQuality = r5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|RETURN\l|return r4\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|r2 = true\l}"];
MethodNode[shape=record,label="{public androidx.core.location.LocationRequestCompat$Builder androidx.core.location.LocationRequestCompat.Builder.setQuality((r4v0 'this' androidx.core.location.LocationRequestCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r5v0 'quality' int A[D('quality' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0011 \-\> B:24:0x0012, CROSS_EDGE: B:18:0x0008 \-\> B:23:0x0011, CROSS_EDGE: B:16:0x0004 \-\> B:23:0x0011\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_24;
}

