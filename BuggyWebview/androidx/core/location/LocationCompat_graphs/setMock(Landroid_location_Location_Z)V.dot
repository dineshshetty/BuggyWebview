digraph "CFG forandroidx.core.location.LocationCompat.setMock(Landroid\/location\/Location;Z)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000}"];
Node_35 [shape=record,label="{35\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \< 18) goto L3\l}"];
Node_47 [shape=record,label="{47\:\ 0x0033|android.os.Bundle r0 = r4.getExtras()\l}"];
Node_48 [shape=record,label="{48\:\ 0x0039|if (r0 != null) goto L10\l}"];
Node_49 [shape=record,label="{49\:\ 0x003b|if (r5 == false) goto L9\l}"];
Node_50 [shape=record,label="{50\:\ 0x003d|android.os.Bundle r3 = new android.os.Bundle()\lr3.putBoolean(androidx.core.location.LocationCompat.EXTRA_IS_MOCK, true)\lr4.setExtras(r3)\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_51 [shape=record,label="{51\:\ 0x004a|if (r5 == false) goto L13\l}"];
Node_52 [shape=record,label="{52\:\ 0x004c|r0.putBoolean(androidx.core.location.LocationCompat.EXTRA_IS_MOCK, true)\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_53 [shape=record,label="{53\:\ 0x0050|r0.remove(androidx.core.location.LocationCompat.EXTRA_IS_MOCK)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0057|if (r0.isEmpty() == false) goto L17\l}"];
Node_55 [shape=record,label="{55\:\ 0x0059|r4.setExtras(null)\l}"];
Node_56 [shape=record,label="{56\:\ 0x005d|RETURN\lORIG_RETURN\l|return\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_57 [shape=record,label="{57\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x001f, NoSuchMethodException \-\> 0x0029, InvocationTargetException \-\> 0x0018, blocks: (B:36:0x0007), top: B:57:0x0007 \}\lCatch: InvocationTargetException \-\> 0x0018, IllegalAccessException \-\> 0x001f, NoSuchMethodException \-\> 0x0029\l|getSetIsFromMockProviderMethod().invoke(r4, new java.lang.Object[]\{java.lang.Boolean.valueOf(r5)\})     \/\/ Catch: java.lang.reflect.InvocationTargetException \-\> L18 java.lang.IllegalAccessException \-\> L1f java.lang.NoSuchMethodException \-\> L29\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ 0x001f|ExcHandler: IllegalAccessException \-\> 0x001f\l|java.lang.IllegalAccessException r0 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x0020|java.lang.IllegalAccessError r1 = new java.lang.IllegalAccessError()\lr1.initCause(r0)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0028|throw r1\l}"];
Node_44 [shape=record,label="{44\:\ 0x0029|ExcHandler: NoSuchMethodException \-\> 0x0029\l|java.lang.NoSuchMethodException r0 = move\-exception\l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|java.lang.NoSuchMethodError r1 = new java.lang.NoSuchMethodError()\lr1.initCause(r0)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0032|throw r1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|ExcHandler: InvocationTargetException \-\> 0x0018\l|java.lang.reflect.InvocationTargetException r0 = move\-exception\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019}"];
Node_40 [shape=record,label="{40\:\ 0x001e|throw new java.lang.RuntimeException(r0)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.location.LocationCompat.setMock((r4v0 'location' android.location.Location A[D('location' android.location.Location), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'mock' boolean A[D('mock' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x003b \-\> B:56:0x005d, CROSS_EDGE: B:52:0x004c \-\> B:56:0x005d, CROSS_EDGE: B:55:0x0059 \-\> B:56:0x005d, CROSS_EDGE: B:54:0x0057 \-\> B:56:0x005d, CROSS_EDGE: B:36:0x0007 \-\> B:56:0x005d, CROSS_EDGE: B:43:0x0028 \-\> B:33:?, CROSS_EDGE: B:46:0x0032 \-\> B:33:?, CROSS_EDGE: B:40:0x001e \-\> B:33:?, CROSS_EDGE: B:57:0x0007 \-\> B:41:0x001f, CROSS_EDGE: B:57:0x0007 \-\> B:44:0x0029, CROSS_EDGE: B:57:0x0007 \-\> B:38:0x0018\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x001f, NoSuchMethodException \-\> 0x0029, InvocationTargetException \-\> 0x0018, blocks: (B:36:0x0007), top: B:57:0x0007 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_47;
Node_35 -> Node_57[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_59;
Node_50 -> Node_60;
Node_60 -> Node_33;
Node_59 -> Node_33;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_61;
Node_61 -> Node_33;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_62;
Node_55 -> Node_56;
Node_56 -> Node_33;
Node_62 -> Node_33;
Node_57 -> Node_36;
Node_57 -> Node_41;
Node_57 -> Node_44;
Node_57 -> Node_38;
Node_36 -> Node_58;
Node_36 -> Node_63;
Node_58 -> Node_41;
Node_58 -> Node_44;
Node_58 -> Node_38;
Node_63 -> Node_33;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_33;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_33;
}

