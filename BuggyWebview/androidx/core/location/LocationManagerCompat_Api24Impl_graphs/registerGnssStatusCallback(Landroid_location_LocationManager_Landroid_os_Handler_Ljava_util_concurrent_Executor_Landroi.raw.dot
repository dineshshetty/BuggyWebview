digraph "CFG forandroidx.core.location.LocationManagerCompat.Api24Impl.registerGnssStatusCallback(Landroid\/location\/LocationManager;Landroid\/os\/Handler;Ljava\/util\/concurrent\/Executor;Landroidx\/core\/location\/GnssStatusCompat$Callback;)Z" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1192)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0002|0x0002: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('baseHandler' android.os.Handler)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0006 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|0x0007: INVOKE  (r2 I:boolean) type: STATIC call: androidx.core.util.Preconditions.checkArgument(boolean):void A[MD:(boolean):void (m)]\l0x000a: SGET  (r2 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap  (LINE:1194)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000c|0x000c: MONITOR_ENTER  (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x000d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x000d: SGET  (r3 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap A[Catch: all \-\> 0x0033, TRY_ENTER] (LINE:1195)\l0x000f: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:androidx.collection.SimpleArrayMap)\l  (r8 I:java.lang.Object A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0033, MD:(java.lang.Object):V (m)] (LINE:1196)\l0x0013: CHECK_CAST (r3 I:androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport) = (androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0033]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001e  (LINE:1197)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x0017: NEW_INSTANCE  (r4 I:androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport) =  androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport A[Catch: all \-\> 0x0033] (LINE:1198)\l0x0019: INVOKE  \l  (r4 I:androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)\l  (r8 I:androidx.core.location.GnssStatusCompat$Callback A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l type: DIRECT call: androidx.core.location.LocationManagerCompat.PreRGnssStatusTransport.\<init\>(androidx.core.location.GnssStatusCompat$Callback):void A[Catch: all \-\> 0x0033, MD:(androidx.core.location.GnssStatusCompat$Callback):void (m)]\l0x001c: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)]) = (r4 I:??[OBJECT, ARRAY]) \l0x001d: GOTO  \-\> 0x0021 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x0021: INVOKE  \l  (r3 I:androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)])\l  (r7 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l type: VIRTUAL call: androidx.core.location.LocationManagerCompat.PreRGnssStatusTransport.register(java.util.concurrent.Executor):void A[Catch: all \-\> 0x0033, MD:(java.util.concurrent.Executor):void (m)] (LINE:1202)\l0x0024: INVOKE  (r4 I:boolean) = \l  (r5 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r3 I:android.location.GnssStatus$Callback A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)])\l  (r6 I:android.os.Handler A[D('baseHandler' android.os.Handler)])\l type: VIRTUAL call: android.location.LocationManager.registerGnssStatusCallback(android.location.GnssStatus$Callback, android.os.Handler):boolean A[Catch: all \-\> 0x0033, MD:(android.location.GnssStatus$Callback, android.os.Handler):boolean (c)] (LINE:1204)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|0x0028: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0031 \l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x002a: SGET  (r1 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap A[Catch: all \-\> 0x0033] (LINE:1205)\l0x002c: INVOKE  \l  (r1 I:androidx.collection.SimpleArrayMap)\l  (r8 I:java.lang.Object A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l  (r3 I:java.lang.Object A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0033, MD:(K, V):V (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x002f: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0033] (LINE:1206)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0030|RETURN\l|0x0030: RETURN  (r0 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0031|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x0031: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0033] (LINE:1208)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|RETURN\l|0x0032: RETURN  (r1 I:boolean) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|TryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\lCatch: all \-\> 0x0033\l|0x001e: INVOKE  \l  (r3 I:androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport A[D('transport' androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport)])\l type: VIRTUAL call: androidx.core.location.LocationManagerCompat.PreRGnssStatusTransport.unregister():void A[Catch: all \-\> 0x0033, MD:():void (m)] (LINE:1200)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|ExcHandler: all \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0033] (LINE:1210)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0034|TRY_LEAVE\lCatch: all \-\> 0x0033\l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|0x0035: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{static boolean androidx.core.location.LocationManagerCompat.Api24Impl.registerGnssStatusCallback((r5 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.os.Handler A[D('baseHandler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.core.location.GnssStatusCompat$Callback A[D('callback' androidx.core.location.GnssStatusCompat$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0032 \-\> B:24:?, CROSS_EDGE: B:34:0x001e \-\> B:35:0x0021, CROSS_EDGE: B:44:0x0035 \-\> B:24:?, CROSS_EDGE: B:28:0x0006 \-\> B:29:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0033: r3 'transport' Landroidx\/core\/location\/LocationManagerCompat$PreRGnssStatusTransport;\l  \-1 \-0x0035: r5 'locationManager' Landroid\/location\/LocationManager;\l  \-1 \-0x0035: r6 'baseHandler' Landroid\/os\/Handler;\l  \-1 \-0x0035: r7 'executor' Ljava\/util\/concurrent\/Executor;\l  \-1 \-0x0035: r8 'callback' Landroidx\/core\/location\/GnssStatusCompat$Callback;\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:31:0x000d, B:33:0x0017, B:35:0x0021, B:37:0x002a, B:38:0x002f, B:40:0x0031, B:34:0x001e), top: B:45:0x000d \}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_45;
Node_45 -> Node_31;
Node_45 -> Node_42;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_24;
Node_40 -> Node_41;
Node_41 -> Node_24;
Node_34 -> Node_35;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_24;
Node_28 -> Node_29;
}

