digraph "CFG forandroidx.core.location.LocationManagerCompat.requestLocationUpdates(Landroid\/location\/LocationManager;Ljava\/lang\/String;Landroidx\/core\/location\/LocationRequestCompat;Ljava\/util\/concurrent\/Executor;Landroidx\/core\/location\/LocationListenerCompat;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:233)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:32:0x000f \l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|0x0007: INVOKE  (r0 I:android.location.LocationRequest) = \l  (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat)])\l type: VIRTUAL call: androidx.core.location.LocationRequestCompat.toLocationRequest():android.location.LocationRequest A[MD:():android.location.LocationRequest (m)] (LINE:235)\l0x000b: INVOKE  \l  (r9 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r10 I:java.lang.String A[D('provider' java.lang.String)])\l  (r0 I:android.location.LocationRequest)\l  (r12 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l  (r13 I:android.location.LocationListener A[D('listener' androidx.core.location.LocationListenerCompat)])\l type: STATIC call: androidx.core.location.LocationManagerCompat.Api31Impl.requestLocationUpdates(android.location.LocationManager, java.lang.String, android.location.LocationRequest, java.util.concurrent.Executor, android.location.LocationListener):void A[MD:(android.location.LocationManager, java.lang.String, android.location.LocationRequest, java.util.concurrent.Executor, android.location.LocationListener):void (m)] (LINE:234)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|RETURN\l|0x000e: RETURN    (LINE:236)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x000f|0x000f: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:239)\l0x0011: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:37:0x001c \l}"];
Node_34 [shape=record,label="{34\:\ 0x0015|0x0015: INVOKE  (r0 I:boolean) = \l  (r9 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r10 I:java.lang.String A[D('provider' java.lang.String)])\l  (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat)])\l  (r12 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l  (r13 I:androidx.core.location.LocationListenerCompat A[D('listener' androidx.core.location.LocationListenerCompat)])\l type: STATIC call: androidx.core.location.LocationManagerCompat.Api30Impl.tryRequestLocationUpdates(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, java.util.concurrent.Executor, androidx.core.location.LocationListenerCompat):boolean A[MD:(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, java.util.concurrent.Executor, androidx.core.location.LocationListenerCompat):boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x001c \l}"];
Node_36 [shape=record,label="{36\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:241)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:androidx.core.location.LocationManagerCompat$LocationListenerTransport) =  androidx.core.location.LocationManagerCompat$LocationListenerTransport  (LINE:244)\l0x001e: NEW_INSTANCE  (r1 I:androidx.core.location.LocationManagerCompat$LocationListenerKey) =  androidx.core.location.LocationManagerCompat$LocationListenerKey \l0x0020: INVOKE  \l  (r1 I:androidx.core.location.LocationManagerCompat$LocationListenerKey)\l  (r10 I:java.lang.String A[D('provider' java.lang.String)])\l  (r13 I:androidx.core.location.LocationListenerCompat A[D('listener' androidx.core.location.LocationListenerCompat)])\l type: DIRECT call: androidx.core.location.LocationManagerCompat.LocationListenerKey.\<init\>(java.lang.String, androidx.core.location.LocationListenerCompat):void A[MD:(java.lang.String, androidx.core.location.LocationListenerCompat):void (m)]\l0x0023: INVOKE  \l  (r0 I:androidx.core.location.LocationManagerCompat$LocationListenerTransport)\l  (r1 I:androidx.core.location.LocationManagerCompat$LocationListenerKey)\l  (r12 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l type: DIRECT call: androidx.core.location.LocationManagerCompat.LocationListenerTransport.\<init\>(androidx.core.location.LocationManagerCompat$LocationListenerKey, java.util.concurrent.Executor):void A[MD:(androidx.core.location.LocationManagerCompat$LocationListenerKey, java.util.concurrent.Executor):void (m)]\l0x0026: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:247)\l0x0028: CONST  (r2 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:42:0x0033 \l}"];
Node_39 [shape=record,label="{39\:\ 0x002c|0x002c: INVOKE  (r1 I:boolean) = \l  (r9 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r10 I:java.lang.String A[D('provider' java.lang.String)])\l  (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat)])\l  (r0 I:androidx.core.location.LocationManagerCompat$LocationListenerTransport A[D('transport' androidx.core.location.LocationManagerCompat$LocationListenerTransport)])\l type: STATIC call: androidx.core.location.LocationManagerCompat.Api19Impl.tryRequestLocationUpdates(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, androidx.core.location.LocationManagerCompat$LocationListenerTransport):boolean A[MD:(android.location.LocationManager, java.lang.String, androidx.core.location.LocationRequestCompat, androidx.core.location.LocationManagerCompat$LocationListenerTransport):boolean (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0033 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:249)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|0x0033: SGET  (r1 I:java.util.WeakHashMap\<androidx.core.location.LocationManagerCompat$LocationListenerKey, java.lang.ref.WeakReference\<androidx.core.location.LocationManagerCompat$LocationListenerTransport\>\>) =  androidx.core.location.LocationManagerCompat.sLocationListeners java.util.WeakHashMap  (LINE:252)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0035|0x0035: MONITOR_ENTER  (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0036|TRY_ENTER\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:44:0x0036, B:45:0x004b), top: B:50:0x0036 \}\lCatch: all \-\> 0x004d\l|0x0036: INVOKE  (r4 I:long) = \l  (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat)])\l type: VIRTUAL call: androidx.core.location.LocationRequestCompat.getIntervalMillis():long A[Catch: all \-\> 0x004d, MD:():long (m), TRY_ENTER] (LINE:253)\l0x003a: INVOKE  (r6 I:float) = \l  (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat)])\l type: VIRTUAL call: androidx.core.location.LocationRequestCompat.getMinUpdateDistanceMeters():float A[Catch: all \-\> 0x004d, MD:():float (m)] (LINE:254)\l0x003e: INVOKE  (r8 I:android.os.Looper) =  type: STATIC call: android.os.Looper.getMainLooper():android.os.Looper A[Catch: all \-\> 0x004d, MD:():android.os.Looper (c)] (LINE:255)\l0x0042: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('locationManager' android.location.LocationManager)])  (LINE:253)\l0x0043: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('provider' java.lang.String)]) \l0x0044: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('transport' androidx.core.location.LocationManagerCompat$LocationListenerTransport)]) \l0x0045: INVOKE  \l  (r2 I:android.location.LocationManager)\l  (r3 I:java.lang.String)\l  (r4 I:long)\l  (r6 I:float)\l  (r7 I:android.location.LocationListener)\l  (r8 I:android.os.Looper)\l type: VIRTUAL call: android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper):void A[Catch: all \-\> 0x004d, MD:(java.lang.String, long, float, android.location.LocationListener, android.os.Looper):void (c)]\l0x0048: INVOKE  \l  (r9 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r0 I:androidx.core.location.LocationManagerCompat$LocationListenerTransport A[D('transport' androidx.core.location.LocationManagerCompat$LocationListenerTransport)])\l type: STATIC call: androidx.core.location.LocationManagerCompat.registerLocationListenerTransport(android.location.LocationManager, androidx.core.location.LocationManagerCompat$LocationListenerTransport):void A[Catch: all \-\> 0x004d, MD:(android.location.LocationManager, androidx.core.location.LocationManagerCompat$LocationListenerTransport):void (m)] (LINE:256)\l}"];
Node_45 [shape=record,label="{45\:\ 0x004b|TryCatch #0 \{all \-\> 0x004d, blocks: (B:44:0x0036, B:45:0x004b), top: B:50:0x0036 \}\lCatch: all \-\> 0x004d\l|0x004b: MONITOR_EXIT  (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x004d] (LINE:257)\l}"];
Node_46 [shape=record,label="{46\:\ 0x004c|RETURN\l|0x004c: RETURN    (LINE:258)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x004d|ExcHandler: all \-\> 0x004d\l|0x004d: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x004d] (LINE:257)\l}"];
Node_48 [shape=record,label="{48\:\ 0x004e|TRY_LEAVE\lCatch: all \-\> 0x004d\l}"];
Node_49 [shape=record,label="{49\:\ 0x004f|0x004f: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.location.LocationManagerCompat.requestLocationUpdates((r9 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[D('provider' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:androidx.core.location.LocationRequestCompat A[D('locationRequest' androidx.core.location.LocationRequestCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:androidx.core.location.LocationListenerCompat A[D('listener' androidx.core.location.LocationListenerCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x001b \-\> B:27:?, CROSS_EDGE: B:41:0x0032 \-\> B:27:?, CROSS_EDGE: B:46:0x004c \-\> B:27:?, CROSS_EDGE: B:49:0x004f \-\> B:27:?, CROSS_EDGE: B:50:0x0036 \-\> B:47:0x004d, CROSS_EDGE: B:38:0x002a \-\> B:42:0x0033, CROSS_EDGE: B:33:0x0013 \-\> B:37:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x004f: r0 'transport' Landroidx\/core\/location\/LocationManagerCompat$LocationListenerTransport;\l  \-1 \-0x004f: r9 'locationManager' Landroid\/location\/LocationManager;\l  \-1 \-0x004f: r10 'provider' Ljava\/lang\/String;\l  \-1 \-0x004f: r11 'locationRequest' Landroidx\/core\/location\/LocationRequestCompat;\l  \-1 \-0x004f: r12 'executor' Ljava\/util\/concurrent\/Executor;\l  \-1 \-0x004f: r13 'listener' Landroidx\/core\/location\/LocationListenerCompat;\lTryCatch #0 \{all \-\> 0x004d, blocks: (B:44:0x0036, B:45:0x004b), top: B:50:0x0036 \}\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_27;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_27;
Node_42 -> Node_43;
Node_43 -> Node_50;
Node_50 -> Node_44;
Node_50 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_51;
Node_46 -> Node_27;
Node_51 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_27;
}

