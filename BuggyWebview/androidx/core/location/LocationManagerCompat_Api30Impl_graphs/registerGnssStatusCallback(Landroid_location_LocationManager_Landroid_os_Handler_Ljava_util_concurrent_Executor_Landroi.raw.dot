digraph "CFG forandroidx.core.location.LocationManagerCompat.Api30Impl.registerGnssStatusCallback(Landroid\/location\/LocationManager;Landroid\/os\/Handler;Ljava\/util\/concurrent\/Executor;Landroidx\/core\/location\/GnssStatusCompat$Callback;)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: SGET  (r0 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap  (LINE:1057)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x0003: SGET  (r1 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap A[Catch: all \-\> 0x0024, TRY_ENTER] (LINE:1058)\l0x0005: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:androidx.collection.SimpleArrayMap)\l  (r6 I:java.lang.Object A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0024, MD:(java.lang.Object):V (m)] (LINE:1059)\l0x0009: CHECK_CAST (r1 I:androidx.core.location.LocationManagerCompat$GnssStatusTransport) = (androidx.core.location.LocationManagerCompat$GnssStatusTransport) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0024]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transport' androidx.core.location.LocationManagerCompat$GnssStatusTransport)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0013  (LINE:1060)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|TryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x000d: NEW_INSTANCE  (r2 I:androidx.core.location.LocationManagerCompat$GnssStatusTransport) =  androidx.core.location.LocationManagerCompat$GnssStatusTransport A[Catch: all \-\> 0x0024] (LINE:1061)\l0x000f: INVOKE  \l  (r2 I:androidx.core.location.LocationManagerCompat$GnssStatusTransport)\l  (r6 I:androidx.core.location.GnssStatusCompat$Callback A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l type: DIRECT call: androidx.core.location.LocationManagerCompat.GnssStatusTransport.\<init\>(androidx.core.location.GnssStatusCompat$Callback):void A[Catch: all \-\> 0x0024, MD:(androidx.core.location.GnssStatusCompat$Callback):void (m)]\l0x0012: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('transport' androidx.core.location.LocationManagerCompat$GnssStatusTransport)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|TryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x0013: INVOKE  (r2 I:boolean) = \l  (r3 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager)])\l  (r5 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l  (r1 I:android.location.GnssStatus$Callback A[D('transport' androidx.core.location.LocationManagerCompat$GnssStatusTransport)])\l type: VIRTUAL call: android.location.LocationManager.registerGnssStatusCallback(java.util.concurrent.Executor, android.location.GnssStatus$Callback):boolean A[Catch: all \-\> 0x0024, MD:(java.util.concurrent.Executor, android.location.GnssStatus$Callback):boolean (c)] (LINE:1063)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0021 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0019|TryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x0019: SGET  (r2 I:androidx.collection.SimpleArrayMap\<java.lang.Object, java.lang.Object\>) =  androidx.core.location.LocationManagerCompat.GnssLazyLoader.sGnssStatusListeners androidx.collection.SimpleArrayMap A[Catch: all \-\> 0x0024] (LINE:1064)\l0x001b: INVOKE  \l  (r2 I:androidx.collection.SimpleArrayMap)\l  (r6 I:java.lang.Object A[D('callback' androidx.core.location.GnssStatusCompat$Callback)])\l  (r1 I:java.lang.Object A[D('transport' androidx.core.location.LocationManagerCompat$GnssStatusTransport)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0024, MD:(K, V):V (m)]\l0x001e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1065)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|TryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x001f: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0024]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|RETURN\l|0x0020: RETURN  (r2 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1067)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|TryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\lCatch: all \-\> 0x0024\l|0x0022: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0024]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|RETURN\l|0x0023: RETURN  (r2 I:boolean) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|0x0024: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0024] (LINE:1069)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|TRY_LEAVE\lCatch: all \-\> 0x0024\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|0x0026: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.location.LocationManagerCompat.Api30Impl.registerGnssStatusCallback((r3 I:android.location.LocationManager A[D('locationManager' android.location.LocationManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.os.Handler A[D('baseHandler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.core.location.GnssStatusCompat$Callback A[D('callback' androidx.core.location.GnssStatusCompat$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0023 \-\> B:20:?, CROSS_EDGE: B:24:0x000b \-\> B:26:0x0013, CROSS_EDGE: B:36:0x0026 \-\> B:20:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0024: r1 'transport' Landroidx\/core\/location\/LocationManagerCompat$GnssStatusTransport;\l  \-1 \-0x0026: r3 'locationManager' Landroid\/location\/LocationManager;\l  \-1 \-0x0026: r4 'baseHandler' Landroid\/os\/Handler;\l  \-1 \-0x0026: r5 'executor' Ljava\/util\/concurrent\/Executor;\l  \-1 \-0x0026: r6 'callback' Landroidx\/core\/location\/GnssStatusCompat$Callback;\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:23:0x0003, B:25:0x000d, B:26:0x0013, B:28:0x0019, B:29:0x001f, B:32:0x0022), top: B:37:0x0003 \}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_37;
Node_37 -> Node_23;
Node_37 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

