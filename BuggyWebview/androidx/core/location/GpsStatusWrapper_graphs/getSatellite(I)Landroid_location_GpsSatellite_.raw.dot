digraph "CFG forandroidx.core.location.GpsStatusWrapper.getSatellite(I)Landroid\/location\/GpsSatellite;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.location.GpsStatus) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mWrapped android.location.GpsStatus  (LINE:152)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x0003: IGET  (r1 I:int) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIteratorPosition int A[Catch: all \-\> 0x003f, TRY_ENTER] (LINE:153)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: IF  (r3 I:??[int, byte, short, char] A[D('satelliteIndex' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:24:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|TryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x0007: IGET  (r1 I:android.location.GpsStatus) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mWrapped android.location.GpsStatus A[Catch: all \-\> 0x003f] (LINE:154)\l0x0009: INVOKE  (r1 I:java.lang.Iterable) = (r1 I:android.location.GpsStatus) type: VIRTUAL call: android.location.GpsStatus.getSatellites():java.lang.Iterable A[Catch: all \-\> 0x003f, MD:():java.lang.Iterable\<android.location.GpsSatellite\> (c)]\l0x000d: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.lang.Iterable) type: INTERFACE call: java.lang.Iterable.iterator():java.util.Iterator A[Catch: all \-\> 0x003f, MD:():java.util.Iterator\<T\> (c)]\l0x0011: IPUT  (r1 I:java.util.Iterator\<android.location.GpsSatellite\>), (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIterator java.util.Iterator A[Catch: all \-\> 0x003f]\l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:155)\l0x0014: IPUT  (r1 I:int), (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIteratorPosition int A[Catch: all \-\> 0x003f]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|LOOP_START\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lLOOP:0: B:7:0x0016\-\>B:12:0x002a\lCatch: all \-\> 0x003f\l|0x0016: IGET  (r1 I:int) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIteratorPosition int A[Catch: all \-\> 0x003f] (LINE:157)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r1 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char] A[D('satelliteIndex' int)])  \-\> B:23:0x0035 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|TryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x001a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch: all \-\> 0x003f] (LINE:158)\l0x001c: IPUT  (r1 I:int), (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIteratorPosition int A[Catch: all \-\> 0x003f]\l0x001e: IGET  (r1 I:java.util.Iterator\<android.location.GpsSatellite\>) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIterator java.util.Iterator A[Catch: all \-\> 0x003f] (LINE:159)\l0x0020: INVOKE  (r1 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: all \-\> 0x003f, MD:():boolean (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|LOOP_END\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lLOOP:0: B:7:0x0016\-\>B:12:0x002a\lCatch: all \-\> 0x003f\l|0x002a: IGET  (r1 I:java.util.Iterator\<android.location.GpsSatellite\>) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedIterator java.util.Iterator A[Catch: all \-\> 0x003f] (LINE:163)\l0x002c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x003f, MD:():E (c)]\l0x0030: CHECK_CAST (r1 I:android.location.GpsSatellite) = (android.location.GpsSatellite) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003f]\l0x0032: IPUT  (r1 I:android.location.GpsSatellite), (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedSatellite android.location.GpsSatellite A[Catch: all \-\> 0x003f]\l0x0034: GOTO  \-\> 0x0016 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|TryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x0026: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:160)\l0x0027: IPUT  (r1 I:android.location.GpsSatellite), (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedSatellite android.location.GpsSatellite A[Catch: all \-\> 0x003f]\l0x0029: GOTO  \-\> 0x0035  (LINE:161)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|TryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x0035: IGET  (r1 I:android.location.GpsSatellite) = (r2 I:androidx.core.location.GpsStatusWrapper) androidx.core.location.GpsStatusWrapper.mCachedSatellite android.location.GpsSatellite A[Catch: all \-\> 0x003f] (LINE:166)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\lCatch: all \-\> 0x003f\l|0x0037: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003f, TRY_LEAVE] (LINE:167)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.lang.Object A[D('satellite' android.location.GpsSatellite)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:168)\l0x003c: CHECK_CAST (r0 I:android.location.GpsSatellite) = (android.location.GpsSatellite) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|RETURN\l|0x003e: RETURN  (r0 I:android.location.GpsSatellite) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0035|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|ExcHandler: all \-\> 0x003f\l|0x003f: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003f] (LINE:167)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x003f\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private android.location.GpsSatellite androidx.core.location.GpsStatusWrapper.getSatellite((r2 'this' I:androidx.core.location.GpsStatusWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('satelliteIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0041 \-\> B:1:?, BACK_EDGE: B:12:0x002a \-\> B:7:0x0016, CROSS_EDGE: B:8:0x0018 \-\> B:13:0x0035, CROSS_EDGE: B:5:0x0005 \-\> B:7:0x0016, CROSS_EDGE: B:20:0x0003 \-\> B:17:0x003f\lDebug Info:\l  0x0037\-0x003f: r1 'satellite' Landroid\/location\/GpsSatellite;\l  \-1 \-0x0041: r3 'satelliteIndex' I\lTryCatch #0 \{all \-\> 0x003f, blocks: (B:4:0x0003, B:6:0x0007, B:7:0x0016, B:9:0x001a, B:11:0x0026, B:12:0x002a, B:13:0x0035, B:14:0x0037), top: B:20:0x0003 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_20;
Node_20 -> Node_4;
Node_20 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_24;
Node_24 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_22[style=dashed];
Node_12 -> Node_7;
Node_22 -> Node_11;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_21 -> Node_17;
Node_23 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

