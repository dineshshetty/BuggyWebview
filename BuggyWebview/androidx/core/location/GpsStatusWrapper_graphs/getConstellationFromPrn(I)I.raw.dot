digraph "CFG forandroidx.core.location.GpsStatusWrapper.getConstellationFromPrn(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:7:0x0008  (LINE:189)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \> (r0 I:??[int, byte, short, char])  \-\> B:7:0x0008 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|RETURN\l|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:190)\l0x0007: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, short, byte, char]) = (33 ??[int, float, short, byte, char])  (LINE:191)\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:12:0x0012 \l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|0x000e: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \> (r1 I:??[int, byte, short, char])  \-\> B:12:0x0012 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|RETURN\l|0x0010: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:192)\l0x0011: RETURN  (r0 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:17:0x001a  (LINE:193)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|0x0014: CONST  (r0 I:??[int, float, short, byte, char]) = (88 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|0x0016: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \> (r0 I:??[int, byte, short, char])  \-\> B:17:0x001a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|RETURN\l|0x0018: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:194)\l0x0019: RETURN  (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|0x001a: CONST  (r0 I:??[int, float, short, byte, char]) = (200(0xc8, float:2.8E\-43) ??[int, float, short, byte, char])  (LINE:195)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|0x001c: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \<= (r0 I:??[int, byte, short, char])  \-\> B:23:0x0024 \l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, short, byte, char]) = (235(0xeb, float:3.3E\-43) ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|0x0020: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \> (r1 I:??[int, byte, short, char])  \-\> B:23:0x0024 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|0x0022: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:196)\l0x0023: RETURN  (r0 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|0x0024: CONST  (r1 I:??[int, float, short, byte, char]) = (193(0xc1, float:2.7E\-43) ??[int, float, short, byte, char])  (LINE:197)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|0x0026: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:28:0x002c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|0x0028: IF  (r2 I:??[int, byte, short, char] A[D('prn' int)]) \> (r0 I:??[int, byte, short, char])  \-\> B:30:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|RETURN\l|0x002a: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:198)\l0x002b: RETURN  (r0 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x002c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:200)\l0x002d: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:200)\l0x002d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int androidx.core.location.GpsStatusWrapper.getConstellationFromPrn((r2 I:int A[D('prn' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0011 \-\> B:1:?, CROSS_EDGE: B:16:0x0019 \-\> B:1:?, CROSS_EDGE: B:22:0x0023 \-\> B:1:?, CROSS_EDGE: B:27:0x002b \-\> B:1:?, CROSS_EDGE: B:29:0x002d \-\> B:1:?, CROSS_EDGE: B:24:0x0026 \-\> B:28:0x002c, CROSS_EDGE: B:18:0x001c \-\> B:23:0x0024, CROSS_EDGE: B:12:0x0012 \-\> B:17:0x001a, CROSS_EDGE: B:8:0x000c \-\> B:12:0x0012, CROSS_EDGE: B:2:0x0000 \-\> B:7:0x0008\lDebug Info:\l  \-1 \-0x002d: r2 'prn' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_1;
Node_30 -> Node_1;
Node_28 -> Node_1;
}

