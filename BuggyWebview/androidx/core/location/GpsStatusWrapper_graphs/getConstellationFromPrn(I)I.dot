digraph "CFG forandroidx.core.location.GpsStatusWrapper.getConstellationFromPrn(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r2 \<= 0) goto L6\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
Node_4 [shape=record,label="{4\:\ 0x0004|if (r2 \> 32) goto L6\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|RETURN\l|return 1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008}"];
Node_8 [shape=record,label="{8\:\ 0x000c|if (r2 \< 33) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|if (r2 \> 64) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|RETURN\l|return 2\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|if (r2 \<= 64) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014}"];
Node_14 [shape=record,label="{14\:\ 0x0016|if (r2 \> 88) goto L14\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|RETURN\l|return 3\l}"];
Node_17 [shape=record,label="{17\:\ 0x001a}"];
Node_18 [shape=record,label="{18\:\ 0x001c|if (r2 \<= 200) goto L19\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e}"];
Node_20 [shape=record,label="{20\:\ 0x0020|if (r2 \> 235) goto L19\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|RETURN\l|return 5\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024}"];
Node_24 [shape=record,label="{24\:\ 0x0026|if (r2 \< androidx.core.location.GpsStatusWrapper.QZSS_SVID_MIN) goto L24\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|if (r2 \> 200) goto L23\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|RETURN\l|return 4\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|RETURN\lORIG_RETURN\l|return 0\l}"];
MethodNode[shape=record,label="{private static int androidx.core.location.GpsStatusWrapper.getConstellationFromPrn((r2v0 'prn' int A[D('prn' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0011 \-\> B:1:?, CROSS_EDGE: B:16:0x0019 \-\> B:1:?, CROSS_EDGE: B:22:0x0023 \-\> B:1:?, CROSS_EDGE: B:27:0x002b \-\> B:1:?, CROSS_EDGE: B:29:0x002d \-\> B:1:?, CROSS_EDGE: B:24:0x0026 \-\> B:28:0x002c, CROSS_EDGE: B:18:0x001c \-\> B:23:0x0024, CROSS_EDGE: B:12:0x0012 \-\> B:17:0x001a, CROSS_EDGE: B:8:0x000c \-\> B:12:0x0012, CROSS_EDGE: B:2:0x0000 \-\> B:7:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_1;
Node_30 -> Node_1;
Node_28 -> Node_1;
}

