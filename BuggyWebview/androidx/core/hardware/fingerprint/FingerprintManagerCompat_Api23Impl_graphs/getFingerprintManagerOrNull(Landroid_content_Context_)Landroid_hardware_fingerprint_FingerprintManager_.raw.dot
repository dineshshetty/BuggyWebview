digraph "CFG forandroidx.core.hardware.fingerprint.FingerprintManagerCompat.Api23Impl.getFingerprintManagerOrNull(Landroid\/content\/Context;)Landroid\/hardware\/fingerprint\/FingerprintManager;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:307)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST_CLASS  (r0 I:java.lang.Class\<android.hardware.fingerprint.FingerprintManager\>) =  android.hardware.fingerprint.FingerprintManager.class  (LINE:308)\l0x0008: INVOKE  (r0 I:java.lang.Object) = (r2 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:java.lang.Class) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.Class):java.lang.Object A[MD:\<T\>:(java.lang.Class\<T\>):T (c)]\l0x000c: CHECK_CAST (r0 I:android.hardware.fingerprint.FingerprintManager) = (android.hardware.fingerprint.FingerprintManager) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:android.hardware.fingerprint.FingerprintManager) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:309)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: INVOKE  (r0 I:android.content.pm.PackageManager) = (r2 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getPackageManager():android.content.pm.PackageManager A[MD:():android.content.pm.PackageManager (c)]\l0x0017: CONST_STR  (r1 I:java.lang.String) =  \"android.hardware.fingerprint\"  (LINE:310)\l0x0019: INVOKE  (r0 I:boolean) = (r0 I:android.content.pm.PackageManager), (r1 I:java.lang.String) type: VIRTUAL call: android.content.pm.PackageManager.hasSystemFeature(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:? \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST_CLASS  (r0 I:java.lang.Class\<android.hardware.fingerprint.FingerprintManager\>) =  android.hardware.fingerprint.FingerprintManager.class  (LINE:311)\l0x0021: INVOKE  (r0 I:java.lang.Object) = (r2 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:java.lang.Class) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.Class):java.lang.Object A[MD:\<T\>:(java.lang.Class\<T\>):T (c)]\l0x0025: CHECK_CAST (r0 I:android.hardware.fingerprint.FingerprintManager) = (android.hardware.fingerprint.FingerprintManager) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|RETURN\l|0x0027: RETURN  (r0 I:android.hardware.fingerprint.FingerprintManager) \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|0x0028: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:313)\l0x0029: RETURN  (r0 I:android.hardware.fingerprint.FingerprintManager) A[SYNTHETIC]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:313)\l0x0029: RETURN  (r0 I:android.hardware.fingerprint.FingerprintManager) \l}"];
MethodNode[shape=record,label="{public static android.hardware.fingerprint.FingerprintManager androidx.core.hardware.fingerprint.FingerprintManagerCompat.Api23Impl.getFingerprintManagerOrNull((r2 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0027 \-\> B:1:?, CROSS_EDGE: B:13:0x0029 \-\> B:1:?, CROSS_EDGE: B:7:0x0011 \-\> B:12:0x0028\lDebug Info:\l  \-1 \-0x0029: r2 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_14 -> Node_1;
Node_12 -> Node_1;
}

