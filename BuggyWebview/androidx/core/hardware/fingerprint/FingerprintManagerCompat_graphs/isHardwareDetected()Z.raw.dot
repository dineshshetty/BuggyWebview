digraph "CFG forandroidx.core.hardware.fingerprint.FingerprintManagerCompat.isHardwareDetected()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:84)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r0 I:android.content.Context) = (r3 I:androidx.core.hardware.fingerprint.FingerprintManagerCompat) androidx.core.hardware.fingerprint.FingerprintManagerCompat.mContext android.content.Context  (LINE:85)\l0x0009: INVOKE  (r0 I:android.hardware.fingerprint.FingerprintManager) = (r0 I:android.content.Context) type: STATIC call: androidx.core.hardware.fingerprint.FingerprintManagerCompat.getFingerprintManagerOrNull(android.content.Context):android.hardware.fingerprint.FingerprintManager A[MD:(android.content.Context):android.hardware.fingerprint.FingerprintManager (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fp' android.hardware.fingerprint.FingerprintManager)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:?  (LINE:86)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r2 I:boolean) = (r0 I:java.lang.Object A[D('fp' android.hardware.fingerprint.FingerprintManager)]) type: STATIC call: androidx.core.hardware.fingerprint.FingerprintManagerCompat.Api23Impl.isHardwareDetected(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:? \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0016: RETURN  (r1 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|RETURN\l|0x0017: RETURN  (r1 I:boolean)  (LINE:88)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.hardware.fingerprint.FingerprintManagerCompat.isHardwareDetected((r3 'this' I:androidx.core.hardware.fingerprint.FingerprintManagerCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0013 \-\> B:9:0x0016, CROSS_EDGE: B:5:0x000d \-\> B:9:0x0016, CROSS_EDGE: B:10:0x0017 \-\> B:1:?\lDebug Info:\l  0x000d\-0x0017: r0 'fp' Landroid\/hardware\/fingerprint\/FingerprintManager;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_1;
Node_12 -> Node_1;
Node_11 -> Node_1;
Node_10 -> Node_1;
}

