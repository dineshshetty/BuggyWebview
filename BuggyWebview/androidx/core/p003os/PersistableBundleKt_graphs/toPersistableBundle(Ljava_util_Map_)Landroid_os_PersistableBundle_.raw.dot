digraph "CFG forandroidx.core.os.PersistableBundleKt.toPersistableBundle(Ljava\/util\/Map;)Landroid\/os\/PersistableBundle;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('$this$toPersistableBundle' java.util.Map)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r4 I:java.util.Map A[D('$this$toPersistableBundle' java.util.Map)]) type: INTERFACE call: java.util.Map.size():int A[MD:():int (c)] (LINE:59)\l0x0009: INVOKE  (r0 I:android.os.PersistableBundle) = (r0 I:int) type: STATIC call: androidx.core.os.PersistableBundleApi21ImplKt.createPersistableBundle(int):android.os.PersistableBundle A[MD:(int):android.os.PersistableBundle (m)]\l0x000d: INVOKE  (r1 I:java.util.Set) = (r4 I:java.util.Map A[D('$this$toPersistableBundle' java.util.Map)]) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:61)\l0x0011: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|LOOP_START\lLOOP:0: B:3:0x0015\-\>B:5:0x001b\l|0x0015: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|LOOP_END\lLOOP:0: B:3:0x0015\-\>B:5:0x001b\l|0x001b: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001f: CHECK_CAST (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map$Entry) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0025: CHECK_CAST (r3 I:java.lang.String) = (java.lang.String) (r3 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map$Entry) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x002b: INVOKE  \l  (r0 I:android.os.PersistableBundle A[D('persistableBundle' android.os.PersistableBundle)])\l  (r3 I:java.lang.String A[D('key' java.lang.String)])\l  (r2 I:java.lang.Object A[D('value' java.lang.Object)])\l type: STATIC call: androidx.core.os.PersistableBundleApi21ImplKt.putValue(android.os.PersistableBundle, java.lang.String, java.lang.Object):void A[MD:(android.os.PersistableBundle, java.lang.String, java.lang.Object):void (m)] (LINE:62)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:android.os.PersistableBundle A[D('persistableBundle' android.os.PersistableBundle)])  (LINE:65)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.os.PersistableBundle androidx.core.os.PersistableBundleKt.toPersistableBundle((r4 I:java.util.Map\<java.lang.String, ? extends java.lang.Object\> A[D('$this$toPersistableBundle' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x001b \-\> B:3:0x0015\lDebug Info:\l  0x002b\-0x002e: r2 'value' Ljava\/lang\/Object;\l  0x0027\-0x002e: r3 'key' Ljava\/lang\/String;\l  0x000d\-0x002f: r0 'persistableBundle' Landroid\/os\/PersistableBundle;\l  \-1 \-0x002f: r4 '$this$toPersistableBundle' Ljava\/util\/Map;\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/String;+Ljava\/lang\/Object;\>;)Landroid\/os\/PersistableBundle;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

