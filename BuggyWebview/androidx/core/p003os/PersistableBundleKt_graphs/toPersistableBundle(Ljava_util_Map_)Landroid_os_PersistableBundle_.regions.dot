digraph "CFG forandroidx.core.os.PersistableBundleKt.toPersistableBundle(Ljava\/util\/Map;)Landroid\/os\/PersistableBundle;" {
subgraph cluster_Region_930224743 {
label = "R(3:1|(1:4)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r4, \"\<this\>\")\landroid.os.PersistableBundle android.os.PersistableBundle r0 = androidx.core.p003os.PersistableBundle.createPersistableBundle(r4.size())\ljava.util.Iterator r1 = r4.entrySet().iterator()\l\l}"];
subgraph cluster_LoopRegion_320144041 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|java.util.Map$Entry \lif (r1.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_1752332066 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|LOOP_END\lLOOP:0: B:3:0x0015\-\>B:5:0x001b\l|java.util.Map$Entry r2 = r1.next()\ljava.lang.String java.lang.String r3 = r2.getKey()\ljava.lang.Object java.lang.Object r2 = r2.getValue()\landroidx.core.p003os.PersistableBundle.putValue(r0, r3, r2)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002f|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0015|LOOP_START\lLOOP:0: B:3:0x0015\-\>B:5:0x001b\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002f|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.os.PersistableBundle androidx.core.os.PersistableBundleKt.toPersistableBundle((r4v0 java.util.Map\<java.lang.String, ? extends java.lang.Object\> A[D('$this$toPersistableBundle' java.util.Map), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x001b \-\> B:3:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/String;+Ljava\/lang\/Object;\>;)Landroid\/os\/PersistableBundle;\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_7 -> Node_6;
}

