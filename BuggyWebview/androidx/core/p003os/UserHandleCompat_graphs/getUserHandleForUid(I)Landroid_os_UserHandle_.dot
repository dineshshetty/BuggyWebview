digraph "CFG forandroidx.core.os.UserHandleCompat.getUserHandleForUid(I)Landroid\/os\/UserHandle;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 24) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return androidx.core.p003os.UserHandleCompat.Api24Impl.getUserHandleForUid(r6)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0040, InstantiationException \-\> 0x0036, NoSuchMethodException \-\> 0x004a, InvocationTargetException \-\> 0x002f, blocks: (B:6:0x000b), top: B:20:0x000b \}\lCatch: InvocationTargetException \-\> 0x002f, InstantiationException \-\> 0x0036, IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x004a\l|java.lang.Integer r0 = (java.lang.Integer) getGetUserIdMethod().invoke(null, new java.lang.Object[]\{java.lang.Integer.valueOf(r6)\})     \/\/ Catch: java.lang.reflect.InvocationTargetException \-\> L2f java.lang.InstantiationException \-\> L36 java.lang.IllegalAccessException \-\> L40 java.lang.NoSuchMethodException \-\> L4a\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|RETURN\l|return getUserHandleConstructor().newInstance(new java.lang.Object[]\{r0\})\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|ExcHandler: IllegalAccessException \-\> 0x0040\l|java.lang.IllegalAccessException r0 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|java.lang.IllegalAccessError r1 = new java.lang.IllegalAccessError()\lr1.initCause(r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|throw r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|ExcHandler: InstantiationException \-\> 0x0036\l|java.lang.InstantiationException r0 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|java.lang.InstantiationError r1 = new java.lang.InstantiationError()\lr1.initCause(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003f|throw r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|ExcHandler: NoSuchMethodException \-\> 0x004a\l|java.lang.NoSuchMethodException r0 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|java.lang.NoSuchMethodError r1 = new java.lang.NoSuchMethodError()\lr1.initCause(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|throw r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|ExcHandler: InvocationTargetException \-\> 0x002f\l|java.lang.reflect.InvocationTargetException r0 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030}"];
Node_10 [shape=record,label="{10\:\ 0x0035|throw new java.lang.RuntimeException(r0)\l}"];
MethodNode[shape=record,label="{public static android.os.UserHandle androidx.core.os.UserHandleCompat.getUserHandleForUid((r6v0 'uid' int A[D('uid' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x002e \-\> B:1:?, CROSS_EDGE: B:16:0x0049 \-\> B:1:?, CROSS_EDGE: B:13:0x003f \-\> B:1:?, CROSS_EDGE: B:19:0x0053 \-\> B:1:?, CROSS_EDGE: B:10:0x0035 \-\> B:1:?, CROSS_EDGE: B:20:0x000b \-\> B:14:0x0040, CROSS_EDGE: B:20:0x000b \-\> B:11:0x0036, CROSS_EDGE: B:20:0x000b \-\> B:17:0x004a, CROSS_EDGE: B:20:0x000b \-\> B:8:0x002f\lTryCatch #2 \{IllegalAccessException \-\> 0x0040, InstantiationException \-\> 0x0036, NoSuchMethodException \-\> 0x004a, InvocationTargetException \-\> 0x002f, blocks: (B:6:0x000b), top: B:20:0x000b \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_20 -> Node_6;
Node_20 -> Node_14;
Node_20 -> Node_11;
Node_20 -> Node_17;
Node_20 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_21;
Node_7 -> Node_1;
Node_21 -> Node_14;
Node_21 -> Node_11;
Node_21 -> Node_17;
Node_21 -> Node_8;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

