digraph "CFG forandroidx.core.os.TraceCompat.beginAsyncSection(Ljava\/lang\/String;I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:137)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:22:0x000a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: INVOKE  (r6 I:java.lang.String A[D('methodName' java.lang.String)]), (r7 I:int A[D('cookie' int)]) type: STATIC call: androidx.core.os.TraceCompat.Api29Impl.beginAsyncSection(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)] (LINE:138)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:146)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:139)\l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:32:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x002d, blocks: (B:24:0x0010), top: B:29:0x0010 \}\lCatch: Exception \-\> 0x002d\l|0x0010: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.os.TraceCompat.sAsyncTraceBeginMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x002d, TRY_ENTER] (LINE:141)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0014: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x002d]\l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: SGET  (r4 I:long) =  androidx.core.os.TraceCompat.sTraceTagApp long A[Catch: Exception \-\> 0x002d]\l0x0019: INVOKE  (r4 I:java.lang.Long) = (r4 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[Catch: Exception \-\> 0x002d, MD:(long):java.lang.Long (c)]\l0x001d: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x002d]\l0x001f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0020: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('methodName' java.lang.String)])\l A[Catch: Exception \-\> 0x002d]\l0x0022: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0023: INVOKE  (r4 I:java.lang.Integer) = (r7 I:int A[D('cookie' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: Exception \-\> 0x002d, MD:(int):java.lang.Integer (c)]\l0x0027: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x002d]\l0x0029: INVOKE  (r0 I:java.lang.reflect.Method), (r1 I:java.lang.Object), (r2 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x002d, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:146)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002d|ExcHandler: Exception \-\> 0x002d\l|0x002d: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x002d] (LINE:142)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002e|0x002e: CONST_STR  (r1 I:java.lang.String) =  \"TraceCompat\"  (LINE:143)\l0x0030: CONST_STR  (r2 I:java.lang.String) =  \"Unable to invoke asyncTraceBegin() via reflection.\" \l0x0032: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) type: STATIC call: android.util.Log.v(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0035|RETURN\lORIG_RETURN\l|0x0035: RETURN    (LINE:146)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:146)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.os.TraceCompat.beginAsyncSection((r6 I:java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('cookie' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x000e \-\> B:28:0x0035, CROSS_EDGE: B:24:0x0010 \-\> B:28:0x0035, CROSS_EDGE: B:27:0x002e \-\> B:28:0x0035, CROSS_EDGE: B:29:0x0010 \-\> B:26:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x0035: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0035: r6 'methodName' Ljava\/lang\/String;\l  \-1 \-0x0035: r7 'cookie' I\lTryCatch #0 \{Exception \-\> 0x002d, blocks: (B:24:0x0010), top: B:29:0x0010 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_31;
Node_31 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_29[style=dashed];
Node_23 -> Node_32;
Node_29 -> Node_24;
Node_29 -> Node_26;
Node_24 -> Node_30;
Node_24 -> Node_33;
Node_30 -> Node_26;
Node_33 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_32 -> Node_18;
}

