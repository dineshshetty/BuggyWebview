digraph "CFG forandroidx.core.os.TraceCompat.\<clinit\>()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 18) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006}"];
Node_21 [shape=record,label="{21\:\ 0x000a|if (android.os.Build.VERSION.SDK_INT \>= 29) goto L13\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0078, blocks: (B:22:0x000c), top: B:27:0x000c \}\lCatch: Exception \-\> 0x0078\l|java.lang.reflect.Field r0 = android.os.Trace.class.getField(\"TRACE_TAG_APP\")     \/\/ Catch: java.lang.Exception \-\> L78\landroidx.core.p003os.TraceCompat.sTraceTagApp = r0.getLong(null)     \/\/ Catch: java.lang.Exception \-\> L78\landroidx.core.p003os.TraceCompat.sIsTagEnabledMethod = android.os.Trace.class.getMethod(\"isTagEnabled\", new java.lang.Class[]\{java.lang.Long.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L78\landroidx.core.p003os.TraceCompat.sAsyncTraceBeginMethod = android.os.Trace.class.getMethod(\"asyncTraceBegin\", new java.lang.Class[]\{java.lang.Long.TYPE, java.lang.String.class, java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L78\landroidx.core.p003os.TraceCompat.sAsyncTraceEndMethod = android.os.Trace.class.getMethod(\"asyncTraceEnd\", new java.lang.Class[]\{java.lang.Long.TYPE, java.lang.String.class, java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L78\landroidx.core.p003os.TraceCompat.sTraceCounterMethod = android.os.Trace.class.getMethod(\"traceCounter\", new java.lang.Class[]\{java.lang.Long.TYPE, java.lang.String.class, java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L78\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|ExcHandler: Exception \-\> 0x0078\l|java.lang.Exception r0 = move\-exception\l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|android.util.Log.i(androidx.core.p003os.TraceCompat.TAG, \"Unable to initialize via reflection.\", r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|RETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void androidx.core.os.TraceCompat.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000c \-\> B:26:0x0080, CROSS_EDGE: B:25:0x0079 \-\> B:26:0x0080, CROSS_EDGE: B:27:0x000c \-\> B:24:0x0078, CROSS_EDGE: B:19:0x0004 \-\> B:26:0x0080\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0078, blocks: (B:22:0x000c), top: B:27:0x000c \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_27[style=dashed];
Node_21 -> Node_30;
Node_27 -> Node_22;
Node_27 -> Node_24;
Node_22 -> Node_28;
Node_22 -> Node_31;
Node_28 -> Node_24;
Node_31 -> Node_17;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_17;
Node_30 -> Node_17;
Node_29 -> Node_17;
}

