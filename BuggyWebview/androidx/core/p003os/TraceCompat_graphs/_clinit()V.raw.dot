digraph "CFG forandroidx.core.os.TraceCompat.\<clinit\>()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:53)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:29:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0008: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:30:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0078, blocks: (B:22:0x000c), top: B:27:0x000c \}\lCatch: Exception \-\> 0x0078\l|0x000c: CONST_CLASS  (r0 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class A[TRY_ENTER] (LINE:55)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"TRACE_TAG_APP\" \l0x0010: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getField(java.lang.String):java.lang.reflect.Field A[Catch: Exception \-\> 0x0078, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:56)\l0x0015: INVOKE  (r1 I:long) = (r0 I:java.lang.reflect.Field A[D('traceTagAppField' java.lang.reflect.Field)]), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.reflect.Field.getLong(java.lang.Object):long A[Catch: Exception \-\> 0x0078, MD:(java.lang.Object):long throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l0x0019: SPUT  (r1 I:long) androidx.core.os.TraceCompat.sTraceTagApp long A[Catch: Exception \-\> 0x0078]\l0x001b: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class  (LINE:58)\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"isTagEnabled\" \l0x001f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0020: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x0078]\l0x0022: SGET  (r5 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x0024: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: APUT  (r4 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0027: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x0078, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x002b: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.os.TraceCompat.sIsTagEnabledMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x0078]\l0x002d: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class  (LINE:59)\l0x002f: CONST_STR  (r2 I:java.lang.String) =  \"asyncTraceBegin\" \l0x0031: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0032: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x0078]\l0x0034: SGET  (r7 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x0036: APUT  (r5 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0038: CONST_CLASS  (r7 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x003a: APUT  (r5 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x003c: SGET  (r7 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x003e: CONST  (r8 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x003f: APUT  (r5 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0041: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x0078, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0045: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.os.TraceCompat.sAsyncTraceBeginMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x0078]\l0x0047: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class  (LINE:61)\l0x0049: CONST_STR  (r2 I:java.lang.String) =  \"asyncTraceEnd\" \l0x004b: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x0078]\l0x004d: SGET  (r7 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x004f: APUT  (r5 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0051: CONST_CLASS  (r7 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0053: APUT  (r5 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0055: SGET  (r7 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x0057: APUT  (r5 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0059: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x0078, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x005d: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.os.TraceCompat.sAsyncTraceEndMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x0078]\l0x005f: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class  (LINE:63)\l0x0061: CONST_STR  (r2 I:java.lang.String) =  \"traceCounter\" \l0x0063: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x0078]\l0x0065: SGET  (r5 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x0067: APUT  (r4 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0069: CONST_CLASS  (r5 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x006b: APUT  (r4 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x006d: SGET  (r3 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: Exception \-\> 0x0078]\l0x006f: APUT  (r4 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0078]\l0x0071: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x0078, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0075: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.os.TraceCompat.sTraceCounterMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x0078, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0080: RETURN   A[SYNTHETIC] (LINE:69)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|ExcHandler: Exception \-\> 0x0078\l|0x0078: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0078] (LINE:65)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|0x0079: CONST_STR  (r1 I:java.lang.String) =  \"TraceCompat\"  (LINE:66)\l0x007b: CONST_STR  (r2 I:java.lang.String) =  \"Unable to initialize via reflection.\" \l0x007d: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|RETURN\lORIG_RETURN\l|0x0080: RETURN    (LINE:69)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0080: RETURN   A[SYNTHETIC] (LINE:69)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0080: RETURN   A[SYNTHETIC] (LINE:69)\l}"];
MethodNode[shape=record,label="{static void androidx.core.os.TraceCompat.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000c \-\> B:26:0x0080, CROSS_EDGE: B:25:0x0079 \-\> B:26:0x0080, CROSS_EDGE: B:27:0x000c \-\> B:24:0x0078, CROSS_EDGE: B:19:0x0004 \-\> B:26:0x0080\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0077: r0 'traceTagAppField' Ljava\/lang\/reflect\/Field;\l  0x0079\-0x0080: r0 'e' Ljava\/lang\/Exception;\lTryCatch #0 \{Exception \-\> 0x0078, blocks: (B:22:0x000c), top: B:27:0x000c \}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_27[style=dashed];
Node_21 -> Node_30;
Node_27 -> Node_22;
Node_27 -> Node_24;
Node_22 -> Node_28;
Node_22 -> Node_31;
Node_28 -> Node_24;
Node_31 -> Node_17;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_17;
Node_30 -> Node_17;
Node_29 -> Node_17;
}

