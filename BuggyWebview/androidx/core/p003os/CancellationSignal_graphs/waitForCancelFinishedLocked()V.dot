digraph "CFG forandroidx.core.os.CancellationSignal.waitForCancelFinishedLocked()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|LOOP_START\lLOOP:0: B:17:0x0000\-\>B:27:0x0000\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r1.mCancelInProgress == false) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{InterruptedException \-\> 0x0008, blocks: (B:19:0x0004), top: B:24:0x0004 \}\lCatch: InterruptedException \-\> 0x0008\l|wait()     \/\/ Catch: java.lang.InterruptedException \-\> L8\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:17:0x0000\-\>B:27:0x0000\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|ExcHandler: InterruptedException \-\> 0x0008\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.core.os.CancellationSignal.waitForCancelFinishedLocked((r1v0 'this' androidx.core.os.CancellationSignal A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0004 \-\> B:17:0x0000, BACK_EDGE: B:21:0x0008 \-\> B:17:0x0000, CROSS_EDGE: B:24:0x0004 \-\> B:21:0x0008\lINLINE_NOT_NEEDED\lTryCatch #0 \{InterruptedException \-\> 0x0008, blocks: (B:19:0x0004), top: B:24:0x0004 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_24[style=dashed];
Node_18 -> Node_26;
Node_24 -> Node_19;
Node_24 -> Node_21;
Node_19 -> Node_25;
Node_19 -> Node_28;
Node_25 -> Node_21;
Node_28 -> Node_27;
Node_27 -> Node_17;
Node_21 -> Node_29;
Node_29 -> Node_27;
Node_26 -> Node_23;
Node_23 -> Node_16;
}

