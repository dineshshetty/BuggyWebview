digraph "CFG forandroidx.core.os.LocaleListCompat.forLanguageTagCompat(Ljava\/lang\/String;)Ljava\/util\/Locale;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\-\"  (LINE:176)\l0x0002: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.CharSequence) type: VIRTUAL call: java.lang.String.contains(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l0x0006: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0007: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0038 \l}"];
Node_40 [shape=record,label="{40\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.String[]) = (r6 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.String), (r2 I:int) type: VIRTUAL call: java.lang.String.split(java.lang.String, int):java.lang.String[] A[MD:(java.lang.String, int):java.lang.String[] (c)] (LINE:177)\l0x0010: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:178)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|0x0011: IF  (r1 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char])  \-\> B:44:0x001f \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:179)\l0x0015: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x0017: AGET  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r5 I:??[int, short, byte, char]) \l0x0019: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r3 I:??[int, short, byte, char]) \l0x001b: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String, java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String, java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.util.Locale) \l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x001f|0x001f: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:180)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|0x0020: IF  (r1 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:48:0x002c \l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|0x0022: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:181)\l0x0024: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x0026: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r5 I:??[int, short, byte, char]) \l0x0028: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String), (r3 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String):void (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x002b|RETURN\l|0x002b: RETURN  (r1 I:java.util.Locale) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|0x002c: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:182)\l}"];
Node_49 [shape=record,label="{49\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x006c \l}"];
Node_50 [shape=record,label="{50\:\ 0x002f|0x002f: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:183)\l0x0031: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x0033: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0036|RETURN\l|0x0036: RETURN  (r1 I:java.util.Locale) \l}"];
Node_68 [shape=record,label="{68\:\ 0x006c|0x006c: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:198)\l0x006e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0070: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0073: CONST_STR  (r2 I:java.lang.String) =  \"Can not parse language tag: [\" \l0x0075: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0078: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.String A[D('str' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007b: CONST_STR  (r2 I:java.lang.String) =  \"]\" \l0x007d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0080: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0084: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0087|0x0087: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0038|0x0038: CONST_STR  (r0 I:java.lang.String) =  \"_\" \l0x003a: INVOKE  (r1 I:boolean) = (r6 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.CharSequence) type: VIRTUAL call: java.lang.String.contains(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x003e|0x003e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0088 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|0x0040: INVOKE  (r0 I:java.lang.String[]) = (r6 I:java.lang.String A[D('str' java.lang.String)]), (r0 I:java.lang.String), (r2 I:int) type: VIRTUAL call: java.lang.String.split(java.lang.String, int):java.lang.String[] A[MD:(java.lang.String, int):java.lang.String[] (c)] (LINE:186)\l0x0044: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:187)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0045|0x0045: IF  (r1 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char])  \-\> B:59:0x0053 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0047|0x0047: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:188)\l0x0049: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x004b: AGET  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r5 I:??[int, short, byte, char]) \l0x004d: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r3 I:??[int, short, byte, char]) \l0x004f: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String, java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String, java.lang.String):void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0052|RETURN\l|0x0052: RETURN  (r1 I:java.util.Locale) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0053|0x0053: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:189)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0054|0x0054: IF  (r1 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:63:0x0060 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0056|0x0056: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:190)\l0x0058: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x005a: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r5 I:??[int, short, byte, char]) \l0x005c: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String), (r3 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String, java.lang.String):void A[MD:(java.lang.String, java.lang.String):void (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x005f|RETURN\l|0x005f: RETURN  (r1 I:java.util.Locale) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0060|0x0060: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('args' java.lang.String[])])  (LINE:191)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0061|0x0061: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x006c \l}"];
Node_65 [shape=record,label="{65\:\ 0x0063|0x0063: NEW_INSTANCE  (r1 I:java.util.Locale) =  java.util.Locale  (LINE:192)\l0x0065: AGET  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][] A[D('args' java.lang.String[])]), (r4 I:??[int, short, byte, char]) \l0x0067: INVOKE  (r1 I:java.util.Locale), (r2 I:java.lang.String) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x006a|RETURN\l|0x006a: RETURN  (r1 I:java.util.Locale) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0088|0x0088: NEW_INSTANCE  (r0 I:java.util.Locale) =  java.util.Locale  (LINE:195)\l0x008a: INVOKE  (r0 I:java.util.Locale), (r6 I:java.lang.String A[D('str' java.lang.String)]) type: DIRECT call: java.util.Locale.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x008d|RETURN\l|0x008d: RETURN  (r0 I:java.util.Locale) \l}"];
MethodNode[shape=record,label="{public static java.util.Locale androidx.core.os.LocaleListCompat.forLanguageTagCompat((r6 I:java.lang.String A[D('str' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x002b \-\> B:37:?, CROSS_EDGE: B:51:0x0036 \-\> B:37:?, CROSS_EDGE: B:69:0x0087 \-\> B:37:?, CROSS_EDGE: B:58:0x0052 \-\> B:37:?, CROSS_EDGE: B:62:0x005f \-\> B:37:?, CROSS_EDGE: B:66:0x006a \-\> B:37:?, CROSS_EDGE: B:64:0x0061 \-\> B:68:0x006c, CROSS_EDGE: B:71:0x008d \-\> B:37:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0037: r0 'args' [Ljava\/lang\/String;\l  0x0044\-0x006b: r0 'args' [Ljava\/lang\/String;\l  \-1 \-0x008d: r6 'str' Ljava\/lang\/String;\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_53;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_37;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_37;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_68;
Node_50 -> Node_51;
Node_51 -> Node_37;
Node_68 -> Node_69;
Node_69 -> Node_37;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_70;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_59;
Node_57 -> Node_58;
Node_58 -> Node_37;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_63;
Node_61 -> Node_62;
Node_62 -> Node_37;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_68;
Node_65 -> Node_66;
Node_66 -> Node_37;
Node_70 -> Node_71;
Node_71 -> Node_37;
}

