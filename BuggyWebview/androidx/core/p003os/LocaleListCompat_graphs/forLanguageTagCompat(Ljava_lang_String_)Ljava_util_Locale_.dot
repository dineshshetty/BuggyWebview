digraph "CFG forandroidx.core.os.LocaleListCompat.forLanguageTagCompat(Ljava\/lang\/String;)Ljava\/util\/Locale;" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000}"];
Node_39 [shape=record,label="{39\:\ 0x000a|if (r6.contains(\"\-\") == false) goto L18\l}"];
Node_40 [shape=record,label="{40\:\ 0x000c|java.lang.String[] r0 = r6.split(\"\-\", \-1)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|if (r0.length \<= 2) goto L8\l}"];
Node_42 [shape=record,label="{42\:\ 0x0013}"];
Node_43 [shape=record,label="{43\:\ 0x001e|RETURN\l|return new java.util.Locale(r0[0], r0[1], r0[2])\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x001f}"];
Node_45 [shape=record,label="{45\:\ 0x0020|if (r0.length \<= 1) goto L12\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022}"];
Node_47 [shape=record,label="{47\:\ 0x002b|RETURN\l|return new java.util.Locale(r0[0], r0[1])\l}"];
Node_48 [shape=record,label="{48\:\ 0x002c}"];
Node_49 [shape=record,label="{49\:\ 0x002d|if (r0.length != 1) goto L16\l}"];
Node_50 [shape=record,label="{50\:\ 0x002f}"];
Node_51 [shape=record,label="{51\:\ 0x0036|RETURN\l|return new java.util.Locale(r0[0])\l}"];
Node_68 [shape=record,label="{68\:\ 0x006c|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Can not parse language tag: [\")\lr1.append(r6)\lr1.append(\"]\")\l}"];
Node_69 [shape=record,label="{69\:\ 0x0087|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_53 [shape=record,label="{53\:\ 0x0038}"];
Node_54 [shape=record,label="{54\:\ 0x003e|if (r6.contains(\"_\") == false) goto L32\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|java.lang.String[] r0 = r6.split(\"_\", \-1)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0045|if (r0.length \<= 2) goto L24\l}"];
Node_57 [shape=record,label="{57\:\ 0x0047}"];
Node_58 [shape=record,label="{58\:\ 0x0052|RETURN\l|return new java.util.Locale(r0[0], r0[1], r0[2])\l}"];
Node_59 [shape=record,label="{59\:\ 0x0053}"];
Node_60 [shape=record,label="{60\:\ 0x0054|if (r0.length \<= 1) goto L28\l}"];
Node_61 [shape=record,label="{61\:\ 0x0056}"];
Node_62 [shape=record,label="{62\:\ 0x005f|RETURN\l|return new java.util.Locale(r0[0], r0[1])\l}"];
Node_63 [shape=record,label="{63\:\ 0x0060}"];
Node_64 [shape=record,label="{64\:\ 0x0061|if (r0.length != 1) goto L16\l}"];
Node_65 [shape=record,label="{65\:\ 0x0063}"];
Node_66 [shape=record,label="{66\:\ 0x006a|RETURN\l|return new java.util.Locale(r0[0])\l}"];
Node_70 [shape=record,label="{70\:\ 0x0088}"];
Node_71 [shape=record,label="{71\:\ 0x008d|RETURN\l|return new java.util.Locale(r6)\l}"];
MethodNode[shape=record,label="{public static java.util.Locale androidx.core.os.LocaleListCompat.forLanguageTagCompat((r6v0 'str' java.lang.String A[D('str' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x002b \-\> B:37:?, CROSS_EDGE: B:51:0x0036 \-\> B:37:?, CROSS_EDGE: B:69:0x0087 \-\> B:37:?, CROSS_EDGE: B:58:0x0052 \-\> B:37:?, CROSS_EDGE: B:62:0x005f \-\> B:37:?, CROSS_EDGE: B:66:0x006a \-\> B:37:?, CROSS_EDGE: B:64:0x0061 \-\> B:68:0x006c, CROSS_EDGE: B:71:0x008d \-\> B:37:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_53;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_37;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_37;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_68;
Node_50 -> Node_51;
Node_51 -> Node_37;
Node_68 -> Node_69;
Node_69 -> Node_37;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_70;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_59;
Node_57 -> Node_58;
Node_58 -> Node_37;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_63;
Node_61 -> Node_62;
Node_62 -> Node_37;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_68;
Node_65 -> Node_66;
Node_66 -> Node_37;
Node_70 -> Node_71;
Node_71 -> Node_37;
}

