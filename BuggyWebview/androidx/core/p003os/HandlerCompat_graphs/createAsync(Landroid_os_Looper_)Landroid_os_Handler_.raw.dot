digraph "CFG forandroidx.core.os.HandlerCompat.createAsync(Landroid\/os\/Looper;)Landroid\/os\/Handler;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:65)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:37:0x000b \l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|0x0006: INVOKE  (r0 I:android.os.Handler) = (r7 I:android.os.Looper A[D('looper' android.os.Looper)]) type: STATIC call: androidx.core.os.HandlerCompat.Api28Impl.createAsync(android.os.Looper):android.os.Handler A[MD:(android.os.Looper):android.os.Handler (m)] (LINE:66)\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.os.Handler) \l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:67)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:58:0x0068 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0068|0x0068: NEW_INSTANCE  (r0 I:android.os.Handler A[D('wrappedException' java.lang.Exception)]) =  android.os.Handler  (LINE:95)\l0x006a: INVOKE  (r0 I:android.os.Handler), (r7 I:android.os.Looper A[D('looper' android.os.Looper)]) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x006d|RETURN\l|0x006d: RETURN  (r0 I:android.os.Handler) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x005e, InstantiationException \-\> 0x005b, NoSuchMethodException \-\> 0x0058, InvocationTargetException \-\> 0x003d, blocks: (B:39:0x0011), top: B:60:0x0011 \}\lCatch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e\l|0x0011: CONST_CLASS  (r0 I:java.lang.Class\<android.os.Handler\>) =  android.os.Handler.class A[TRY_ENTER] (LINE:71)\l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0014: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0016: CONST_CLASS  (r3 I:java.lang.Class\<android.os.Looper\>) =  android.os.Looper.class \l0x0018: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: APUT  (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x001b: CONST_CLASS  (r3 I:java.lang.Class\<android.os.Handler$Callback\>) =  android.os.Handler$Callback.class \l0x001d: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: APUT  (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0020: SGET  (r3 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0022: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0023: APUT  (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0025: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0029: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x002b: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r7 I:??[OBJECT, ARRAY] A[D('looper' android.os.Looper)])\l A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: APUT  (r1 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0030: INVOKE  (r2 I:java.lang.Boolean) = (r5 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e, MD:(boolean):java.lang.Boolean (c)] (LINE:73)\l0x0034: APUT  (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e]\l0x0036: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Constructor), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x003a: CHECK_CAST (r0 I:android.os.Handler) = (android.os.Handler) (r0 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0058, InstantiationException \-\> 0x005b, IllegalAccessException \-\> 0x005e, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x003c|RETURN\l|0x003c: RETURN  (r0 I:android.os.Handler)  (LINE:71)\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x005e|ExcHandler: IllegalAccessException \-\> 0x005e\l|0x005e: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x005e] (LINE:74)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0060|0x0061: CONST_STR  (r1 I:java.lang.String) =  \"HandlerCompat\"  (LINE:92)\l0x0063: CONST_STR  (r2 I:java.lang.String) =  \"Unable to invoke Handler(Looper, Callback, boolean) constructor\" \l0x0065: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('wrappedException' java.lang.Exception)])\l type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x005b|ExcHandler: InstantiationException \-\> 0x005b\l|0x005b: MOVE_EXCEPTION  (r0 I:java.lang.InstantiationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InstantiationException \-\> 0x005b] (LINE:76)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0058|ExcHandler: NoSuchMethodException \-\> 0x0058\l|0x0058: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0058] (LINE:78)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d|ExcHandler: InvocationTargetException \-\> 0x003d\l|0x003d: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x003d] (LINE:80)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|0x003e: INVOKE  (r1 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)] (LINE:81)\l0x0042: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) java.lang.RuntimeException  (LINE:82)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0044|0x0044: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0054 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0046|0x0046: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) java.lang.Error  (LINE:85)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0048|0x0048: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x004e \l}"];
Node_46 [shape=record,label="{46\:\ 0x004a|0x004a: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:86)\l0x004b: CHECK_CAST (r2 I:java.lang.Error) = (java.lang.Error) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x004d|0x004d: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ 0x004e|0x004e: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:88)\l0x0050: INVOKE  (r2 I:java.lang.RuntimeException), (r1 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0053|0x0053: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0054|0x0054: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:83)\l0x0055: CHECK_CAST (r2 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0057|0x0057: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.os.Handler androidx.core.os.HandlerCompat.createAsync((r7 I:android.os.Looper A[D('looper' android.os.Looper), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:59:0x006d \-\> B:32:?, CROSS_EDGE: B:40:0x003c \-\> B:32:?, CROSS_EDGE: B:57:0x0060 \-\> B:58:0x0068, CROSS_EDGE: B:54:0x005b \-\> B:57:0x0060, CROSS_EDGE: B:52:0x0058 \-\> B:57:0x0060, CROSS_EDGE: B:47:0x004d \-\> B:32:?, CROSS_EDGE: B:49:0x0053 \-\> B:32:?, CROSS_EDGE: B:51:0x0057 \-\> B:32:?, CROSS_EDGE: B:60:0x0011 \-\> B:56:0x005e, CROSS_EDGE: B:60:0x0011 \-\> B:54:0x005b, CROSS_EDGE: B:60:0x0011 \-\> B:52:0x0058, CROSS_EDGE: B:60:0x0011 \-\> B:41:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003e\-0x0058: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0042\-0x0058: r1 'cause' Ljava\/lang\/Throwable;\l  0x0059\-0x005a: r0 'e' Ljava\/lang\/NoSuchMethodException;\l  0x005a\-0x005b: r0 'wrappedException' Ljava\/lang\/Exception;\l  0x005c\-0x005d: r0 'e' Ljava\/lang\/InstantiationException;\l  0x005d\-0x005e: r0 'wrappedException' Ljava\/lang\/Exception;\l  0x005f\-0x0060: r0 'e' Ljava\/lang\/IllegalAccessException;\l  0x0060\-0x0068: r0 'wrappedException' Ljava\/lang\/Exception;\l  \-1 \-0x006d: r7 'looper' Landroid\/os\/Looper;\lTryCatch #2 \{IllegalAccessException \-\> 0x005e, InstantiationException \-\> 0x005b, NoSuchMethodException \-\> 0x0058, InvocationTargetException \-\> 0x003d, blocks: (B:39:0x0011), top: B:60:0x0011 \}\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_32;
Node_37 -> Node_38;
Node_38 -> Node_58;
Node_38 -> Node_60[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_32;
Node_60 -> Node_39;
Node_60 -> Node_56;
Node_60 -> Node_54;
Node_60 -> Node_52;
Node_60 -> Node_41;
Node_39 -> Node_40;
Node_39 -> Node_61;
Node_40 -> Node_32;
Node_61 -> Node_56;
Node_61 -> Node_54;
Node_61 -> Node_52;
Node_61 -> Node_41;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_54 -> Node_57;
Node_52 -> Node_57;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_32;
Node_48 -> Node_49;
Node_49 -> Node_32;
Node_50 -> Node_51;
Node_51 -> Node_32;
}

