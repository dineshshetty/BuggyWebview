digraph "CFG forandroidx.core.os.HandlerCompat.hasCallbacks(Landroid\/os\/Handler;Ljava\/lang\/Runnable;)Z" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:211)\l0x0001: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:213)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:38:0x000c \l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|0x0007: INVOKE  (r1 I:boolean) = (r7 I:android.os.Handler A[D('handler' android.os.Handler)]), (r8 I:java.lang.Runnable A[D('r' java.lang.Runnable)]) type: STATIC call: androidx.core.os.HandlerCompat.Api29Impl.hasCallbacks(android.os.Handler, java.lang.Runnable):boolean A[MD:(android.os.Handler, java.lang.Runnable):boolean (m)] (LINE:214)\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|RETURN\l|0x000b: RETURN  (r1 I:boolean) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x000c|0x000c: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:215)\l0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:60:0x0055 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0055|0x0055: NEW_INSTANCE  (r1 I:java.lang.UnsupportedOperationException A[D('e' java.lang.reflect.InvocationTargetException)]) =  java.lang.UnsupportedOperationException  (LINE:241)\l0x0057: CONST_STR  (r2 I:java.lang.String) =  \"Failed to call Handler.hasCallbacks(), but there is no safe failure mode for this method. Raising exception.\" \l0x0059: INVOKE  \l  (r1 I:java.lang.UnsupportedOperationException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('wrappedException' java.lang.Exception)])\l type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x005c|0x005c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0037, NoSuchMethodException \-\> 0x0034, NullPointerException \-\> 0x0031, InvocationTargetException \-\> 0x003a, blocks: (B:40:0x0012), top: B:62:0x0012 \}\lCatch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a\l|0x0012: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Handler\>) =  android.os.Handler.class A[TRY_ENTER] (LINE:220)\l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"hasCallbacks\" \l0x0016: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a]\l0x0019: CONST_CLASS  (r5 I:java.lang.Class\<java.lang.Runnable\>) =  java.lang.Runnable.class \l0x001b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: APUT  (r4 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a]\l0x001e: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0022: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a] (LINE:222)\l0x0024: APUT  (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r8 I:??[OBJECT, ARRAY] A[D('r' java.lang.Runnable)]) A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a]\l0x0026: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:java.lang.reflect.Method A[D('hasCallbacksMethod' java.lang.reflect.Method)])\l  (r7 I:java.lang.Object A[D('handler' android.os.Handler)])\l  (r2 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x002a: CHECK_CAST (r2 I:java.lang.Boolean) = (java.lang.Boolean) (r2 I:??[OBJECT, ARRAY]) A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a]\l0x002c: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: NullPointerException \-\> 0x0031, NoSuchMethodException \-\> 0x0034, IllegalAccessException \-\> 0x0037, InvocationTargetException \-\> 0x003a, MD:():boolean (c), TRY_LEAVE]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|RETURN\l|0x0030: RETURN  (r2 I:boolean) \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ 0x0037|ExcHandler: IllegalAccessException \-\> 0x0037\l|0x0037: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0037] (LINE:232)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0038|0x0038: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('wrappedException' java.lang.Exception)]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)])  (LINE:233)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0034|ExcHandler: NoSuchMethodException \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r1 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0034] (LINE:234)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0035|0x0035: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('wrappedException' java.lang.Exception)]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.NoSuchMethodException)])  (LINE:235)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|ExcHandler: NullPointerException \-\> 0x0031\l|0x0031: MOVE_EXCEPTION  (r1 I:java.lang.NullPointerException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NullPointerException \-\> 0x0031] (LINE:236)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0032|0x0032: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('wrappedException' java.lang.Exception)]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.NullPointerException)])  (LINE:237)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|ExcHandler: InvocationTargetException \-\> 0x003a\l|0x003a: MOVE_EXCEPTION  (r1 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x003a] (LINE:223)\l}"];
Node_50 [shape=record,label="{50\:\ 0x003b|0x003b: INVOKE  (r2 I:java.lang.Throwable) = (r1 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)] (LINE:224)\l0x003f: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) java.lang.RuntimeException  (LINE:225)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0041|0x0041: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0051 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0043|0x0043: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)]) java.lang.Error  (LINE:228)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0045|0x0045: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x004b \l}"];
Node_54 [shape=record,label="{54\:\ 0x0047|0x0047: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:229)\l0x0048: CHECK_CAST (r3 I:java.lang.Error) = (java.lang.Error) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x004a|0x004a: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_56 [shape=record,label="{56\:\ 0x004b|0x004b: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:231)\l0x004d: INVOKE  (r3 I:java.lang.RuntimeException), (r2 I:java.lang.Throwable A[D('cause' java.lang.Throwable)]) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0050|0x0050: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0051|0x0051: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('cause' java.lang.Throwable)])  (LINE:226)\l0x0052: CHECK_CAST (r3 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0054|0x0054: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.os.HandlerCompat.hasCallbacks((r7 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Runnable A[D('r' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:61:0x005c \-\> B:33:?, CROSS_EDGE: B:41:0x0030 \-\> B:33:?, CROSS_EDGE: B:47:0x0038 \-\> B:60:0x0055, CROSS_EDGE: B:45:0x0035 \-\> B:60:0x0055, CROSS_EDGE: B:43:0x0032 \-\> B:60:0x0055, CROSS_EDGE: B:55:0x004a \-\> B:33:?, CROSS_EDGE: B:57:0x0050 \-\> B:33:?, CROSS_EDGE: B:59:0x0054 \-\> B:33:?, CROSS_EDGE: B:62:0x0012 \-\> B:46:0x0037, CROSS_EDGE: B:62:0x0012 \-\> B:44:0x0034, CROSS_EDGE: B:62:0x0012 \-\> B:42:0x0031, CROSS_EDGE: B:62:0x0012 \-\> B:49:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0031: r1 'hasCallbacksMethod' Ljava\/lang\/reflect\/Method;\l  0x0032\-0x0034: r1 'e' Ljava\/lang\/NullPointerException;\l  0x0035\-0x0036: r1 'e' Ljava\/lang\/NoSuchMethodException;\l  0x0038\-0x0039: r1 'e' Ljava\/lang\/IllegalAccessException;\l  0x003b\-0x0055: r1 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x003f\-0x0055: r2 'cause' Ljava\/lang\/Throwable;\l  0x0001\-0x005c: r0 'wrappedException' Ljava\/lang\/Exception;\l  \-1 \-0x005c: r7 'handler' Landroid\/os\/Handler;\l  \-1 \-0x005c: r8 'r' Ljava\/lang\/Runnable;\lTryCatch #2 \{IllegalAccessException \-\> 0x0037, NoSuchMethodException \-\> 0x0034, NullPointerException \-\> 0x0031, InvocationTargetException \-\> 0x003a, blocks: (B:40:0x0012), top: B:62:0x0012 \}\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_33;
Node_38 -> Node_39;
Node_39 -> Node_60;
Node_39 -> Node_62[style=dashed];
Node_60 -> Node_61;
Node_61 -> Node_33;
Node_62 -> Node_40;
Node_62 -> Node_46;
Node_62 -> Node_44;
Node_62 -> Node_42;
Node_62 -> Node_49;
Node_40 -> Node_41;
Node_40 -> Node_63;
Node_41 -> Node_33;
Node_63 -> Node_46;
Node_63 -> Node_44;
Node_63 -> Node_42;
Node_63 -> Node_49;
Node_46 -> Node_47;
Node_47 -> Node_60;
Node_44 -> Node_45;
Node_45 -> Node_60;
Node_42 -> Node_43;
Node_43 -> Node_60;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_58;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_33;
Node_56 -> Node_57;
Node_57 -> Node_33;
Node_58 -> Node_59;
Node_59 -> Node_33;
}

