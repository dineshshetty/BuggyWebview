digraph "CFG forandroidx.core.os.MessageCompat.setAsynchronous(Landroid\/os\/Message;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 22) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|androidx.core.p003os.MessageCompat.Api22Impl.setAsynchronous(r2, r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a}"];
Node_7 [shape=record,label="{7\:\ 0x000c|if (androidx.core.p003os.MessageCompat.sTrySetAsynchronous == false) goto L18\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (android.os.Build.VERSION.SDK_INT \< 16) goto L17\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodError \-\> 0x0018, blocks: (B:10:0x0014), top: B:15:0x0014 \}\lCatch: NoSuchMethodError \-\> 0x0018\l|androidx.core.p003os.MessageCompat.Api22Impl.setAsynchronous(r2, r3)     \/\/ Catch: java.lang.NoSuchMethodError \-\> L18\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|ExcHandler: NoSuchMethodError \-\> 0x0018\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|androidx.core.p003os.MessageCompat.sTrySetAsynchronous = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|RETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.core.os.MessageCompat.setAsynchronous((r2v0 'message' android.os.Message A[D('message' android.os.Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'async' boolean A[D('async' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x001c \-\> B:1:?, CROSS_EDGE: B:10:0x0014 \-\> B:14:0x001c, CROSS_EDGE: B:13:0x0019 \-\> B:14:0x001c, CROSS_EDGE: B:15:0x0014 \-\> B:12:0x0018, CROSS_EDGE: B:7:0x000c \-\> B:14:0x001c\lTryCatch #0 \{NoSuchMethodError \-\> 0x0018, blocks: (B:10:0x0014), top: B:15:0x0014 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_15[style=dashed];
Node_9 -> Node_18;
Node_15 -> Node_10;
Node_15 -> Node_12;
Node_10 -> Node_16;
Node_10 -> Node_19;
Node_16 -> Node_12;
Node_19 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_18 -> Node_1;
Node_17 -> Node_1;
}

