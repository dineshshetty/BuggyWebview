digraph "CFG forandroidx.core.os.MessageCompat.setAsynchronous(Landroid\/os\/Message;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:74)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (22 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r2 I:android.os.Message A[D('message' android.os.Message)]), (r3 I:boolean A[D('async' boolean)]) type: STATIC call: androidx.core.os.MessageCompat.Api22Impl.setAsynchronous(android.os.Message, boolean):void A[MD:(android.os.Message, boolean):void (m)] (LINE:75)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:76)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: SGET  (r0 I:boolean) =  androidx.core.os.MessageCompat.sTrySetAsynchronous boolean  (LINE:78)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:? \l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0010: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodError \-\> 0x0018, blocks: (B:10:0x0014), top: B:15:0x0014 \}\lCatch: NoSuchMethodError \-\> 0x0018\l|0x0014: INVOKE  (r2 I:android.os.Message A[D('message' android.os.Message)]), (r3 I:boolean A[D('async' boolean)]) type: STATIC call: androidx.core.os.MessageCompat.Api22Impl.setAsynchronous(android.os.Message, boolean):void A[Catch: NoSuchMethodError \-\> 0x0018, MD:(android.os.Message, boolean):void (m), TRY_ENTER, TRY_LEAVE] (LINE:82)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001c: RETURN   A[SYNTHETIC] (LINE:87)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|ExcHandler: NoSuchMethodError \-\> 0x0018\l|0x0018: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodError A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodError \-\> 0x0018] (LINE:83)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:84)\l0x001a: SPUT  (r1 I:boolean) androidx.core.os.MessageCompat.sTrySetAsynchronous boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: RETURN    (LINE:87)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x001c: RETURN   A[SYNTHETIC] (LINE:87)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x001c: RETURN   A[SYNTHETIC] (LINE:87)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.os.MessageCompat.setAsynchronous((r2 I:android.os.Message A[D('message' android.os.Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('async' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x001c \-\> B:1:?, CROSS_EDGE: B:10:0x0014 \-\> B:14:0x001c, CROSS_EDGE: B:13:0x0019 \-\> B:14:0x001c, CROSS_EDGE: B:15:0x0014 \-\> B:12:0x0018, CROSS_EDGE: B:7:0x000c \-\> B:14:0x001c\lDebug Info:\l  0x0019\-0x001c: r0 'e' Ljava\/lang\/NoSuchMethodError;\l  \-1 \-0x001c: r2 'message' Landroid\/os\/Message;\l  \-1 \-0x001c: r3 'async' Z\lTryCatch #0 \{NoSuchMethodError \-\> 0x0018, blocks: (B:10:0x0014), top: B:15:0x0014 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_15[style=dashed];
Node_9 -> Node_18;
Node_15 -> Node_10;
Node_15 -> Node_12;
Node_10 -> Node_16;
Node_10 -> Node_19;
Node_16 -> Node_12;
Node_19 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_18 -> Node_1;
Node_17 -> Node_1;
}

