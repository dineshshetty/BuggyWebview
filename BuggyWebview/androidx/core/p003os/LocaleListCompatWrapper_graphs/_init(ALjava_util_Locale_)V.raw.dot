digraph "CFG forandroidx.core.os.LocaleListCompatWrapper.\<init\>([Ljava\/util\/Locale;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r8 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:125)\l0x0003: ARRAY_LENGTH  (r0 I:int) = (r9 I:??[] A[D('list' java.util.Locale[])])  (LINE:126)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: SGET  (r0 I:java.util.Locale[]) =  androidx.core.os.LocaleListCompatWrapper.sEmptyList java.util.Locale[]  (LINE:127)\l0x0008: IPUT  (r0 I:java.util.Locale[]), (r8 I:androidx.core.os.LocaleListCompatWrapper) androidx.core.os.LocaleListCompatWrapper.mList java.util.Locale[] \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"\"  (LINE:128)\l0x000c: IPUT  (r0 I:java.lang.String), (r8 I:androidx.core.os.LocaleListCompatWrapper) androidx.core.os.LocaleListCompatWrapper.mStringRepresentation java.lang.String \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0075: RETURN   A[SYNTHETIC] (LINE:150)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:130)\l0x0011: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0014: NEW_INSTANCE  (r1 I:java.util.HashSet) =  java.util.HashSet  (LINE:131)\l0x0016: INVOKE  (r1 I:java.util.HashSet) type: DIRECT call: java.util.HashSet.\<init\>():void A[MD:():void (c)]\l0x0019: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:132)\l0x001b: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x001e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:133)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|LOOP_START\lLOOP:0: B:6:0x001f\-\>B:16:0x0045\l|0x001f: ARRAY_LENGTH  (r4 I:int) = (r9 I:??[] A[D('list' java.util.Locale[])]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:21:0x0064 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: AGET  (r4 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][] A[D('list' java.util.Locale[])]), (r3 I:??[int, short, byte, char] A[D('i' int)])  (LINE:134)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('l' java.util.Locale)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0048  (LINE:135)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: INVOKE  (r5 I:boolean) = \l  (r1 I:java.util.HashSet A[D('seenLocales' java.util.HashSet\<java.util.Locale\>)])\l  (r4 I:java.lang.Object A[D('l' java.util.Locale)])\l type: VIRTUAL call: java.util.HashSet.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:137)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0045 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Locale A[D('l' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.clone():java.lang.Object A[MD:():java.lang.Object (c)] (LINE:138)\l0x0030: CHECK_CAST (r5 I:java.util.Locale) = (java.util.Locale) (r5 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  \l  (r0 I:java.util.List A[D('localeList' java.util.List\<java.util.Locale\>)])\l  (r5 I:java.lang.Object A[D('localeClone' java.util.Locale)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:139)\l0x0035: INVOKE  \l  (r2 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)])\l  (r5 I:java.util.Locale A[D('localeClone' java.util.Locale)])\l type: STATIC call: androidx.core.os.LocaleListCompatWrapper.toLanguageTag(java.lang.StringBuilder, java.util.Locale):void A[MD:(java.lang.StringBuilder, java.util.Locale):void (m)] (LINE:140)\l0x0038: ARRAY_LENGTH  (r6 I:int) = (r9 I:??[] A[D('list' java.util.Locale[])])  (LINE:141)\l0x0039: ARITH  (r6 I:int) = (r6 I:int) + (\-1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: CONST  (r6 I:??[int, float, short, byte, char]) = (44 ??[int, float, short, byte, char])  (LINE:142)\l0x003f: INVOKE  (r2 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r6 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: INVOKE  \l  (r1 I:java.util.HashSet A[D('seenLocales' java.util.HashSet\<java.util.Locale\>)])\l  (r5 I:java.lang.Object A[D('localeClone' java.util.Locale)])\l type: VIRTUAL call: java.util.HashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:144)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|LOOP_END\lLOOP:0: B:6:0x001f\-\>B:16:0x0045\l|0x0045: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:133)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0045|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: NEW_INSTANCE  (r5 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:136)\l0x004a: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004c: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004f: CONST_STR  (r7 I:java.lang.String) =  \"list[\" \l0x0051: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0054: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0057: CONST_STR  (r7 I:java.lang.String) =  \"] is null\" \l0x0059: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005c: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0060: INVOKE  (r5 I:java.lang.NullPointerException), (r6 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|0x0063: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0064|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|0x0064: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:147)\l0x0065: NEW_ARRAY  (r3 I:java.util.Locale[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.util.Locale[] \l0x0067: INVOKE  (r3 I:java.lang.Object[]) = (r0 I:java.util.List A[D('localeList' java.util.List\<java.util.Locale\>)]), (r3 I:java.lang.Object[]) type: INTERFACE call: java.util.List.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x006b: CHECK_CAST (r3 I:java.util.Locale[]) = (java.util.Locale[]) (r3 I:??[OBJECT, ARRAY]) \l0x006d: IPUT  (r3 I:java.util.Locale[]), (r8 I:androidx.core.os.LocaleListCompatWrapper) androidx.core.os.LocaleListCompatWrapper.mList java.util.Locale[] \l0x006f: INVOKE  (r3 I:java.lang.String) = (r2 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:148)\l0x0073: IPUT  (r3 I:java.lang.String), (r8 I:androidx.core.os.LocaleListCompatWrapper) androidx.core.os.LocaleListCompatWrapper.mStringRepresentation java.lang.String \l}"];
Node_20 [shape=record,label="{20\:\ 0x0075|RETURN\lORIG_RETURN\l|0x0075: RETURN    (LINE:150)\l}"];
MethodNode[shape=record,label="{void androidx.core.os.LocaleListCompatWrapper.\<init\>((r8 'this' I:androidx.core.os.LocaleListCompatWrapper A[IMMUTABLE_TYPE, THIS]), (r9 I:java.util.Locale[] A[D('list' java.util.Locale[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x0045 \-\> B:6:0x001f, CROSS_EDGE: B:13:0x003b \-\> B:15:0x0042, CROSS_EDGE: B:11:0x002a \-\> B:16:0x0045, CROSS_EDGE: B:18:0x0063 \-\> B:1:?, CROSS_EDGE: B:19:0x0064 \-\> B:20:0x0075\lDebug Info:\l  0x0024\-0x0045: r4 'l' Ljava\/util\/Locale;\l  0x0032\-0x0045: r5 'localeClone' Ljava\/util\/Locale;\l  0x001f\-0x0064: r3 'i' I\l  0x0048\-0x0064: r4 'l' Ljava\/util\/Locale;\l  0x0014\-0x0075: r0 'localeList' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/util\/Locale;\>;\l  0x0019\-0x0075: r1 'seenLocales' Ljava\/util\/HashSet;, signature: Ljava\/util\/HashSet\<Ljava\/util\/Locale;\>;\l  0x001e\-0x0075: r2 'sb' Ljava\/lang\/StringBuilder;\l  \-1 \-0x0075: r9 'list' [Ljava\/util\/Locale;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_25;
Node_25 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_23;
Node_23 -> Node_16;
Node_16 -> Node_6;
Node_24 -> Node_16;
Node_22 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_21 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

