digraph "CFG forandroidx.core.os.LocaleListCompatWrapper.isPseudoLocale(Ljava\/util\/Locale;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:java.util.Locale) =  androidx.core.os.LocaleListCompatWrapper.LOCALE_EN_XA java.util.Locale  (LINE:180)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.Locale), (r1 I:java.lang.Object A[D('locale' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: SGET  (r0 I:java.util.Locale) =  androidx.core.os.LocaleListCompatWrapper.LOCALE_AR_XB java.util.Locale \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:java.util.Locale), (r1 I:java.lang.Object A[D('locale' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|SYNTHETIC\lRETURN\l|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0014: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.os.LocaleListCompatWrapper.isPseudoLocale((r1 I:java.util.Locale A[D('locale' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0013 \-\> B:9:0x0014, CROSS_EDGE: B:3:0x0006 \-\> B:8:0x0013\lDebug Info:\l  \-1 \-0x0014: r1 'locale' Ljava\/util\/Locale;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_1;
Node_8 -> Node_1;
}

