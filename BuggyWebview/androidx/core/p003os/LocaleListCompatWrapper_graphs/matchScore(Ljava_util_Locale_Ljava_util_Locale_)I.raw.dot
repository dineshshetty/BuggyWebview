digraph "CFG forandroidx.core.os.LocaleListCompatWrapper.matchScore(Ljava\/util\/Locale;Ljava\/util\/Locale;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:java.util.Locale A[D('supported' java.util.Locale)]), (r6 I:java.lang.Object A[D('desired' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:185)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:int)  (LINE:186)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.String) = (r5 I:java.util.Locale A[D('supported' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.getLanguage():java.lang.String A[MD:():java.lang.String (c)] (LINE:188)\l0x000c: INVOKE  (r2 I:java.lang.String) = (r6 I:java.util.Locale A[D('desired' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.getLanguage():java.lang.String A[MD:():java.lang.String (c)]\l0x0010: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:int)  (LINE:189)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = (r5 I:java.util.Locale A[D('supported' java.util.Locale)]) type: STATIC call: androidx.core.os.LocaleListCompatWrapper.isPseudoLocale(java.util.Locale):boolean A[MD:(java.util.Locale):boolean (m)] (LINE:191)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0051 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) = (r6 I:java.util.Locale A[D('desired' java.util.Locale)]) type: STATIC call: androidx.core.os.LocaleListCompatWrapper.isPseudoLocale(java.util.Locale):boolean A[MD:(java.util.Locale):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0025 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: INVOKE  (r0 I:java.lang.String) = (r5 I:java.util.Locale A[D('supported' java.util.Locale)]) type: STATIC call: androidx.core.os.LocaleListCompatWrapper.getLikelyScript(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (m)] (LINE:196)\l0x0029: INVOKE  (r3 I:boolean) = (r0 I:java.lang.String A[D('supportedScr' java.lang.String)]) type: VIRTUAL call: java.lang.String.isEmpty():boolean A[MD:():boolean (c)] (LINE:197)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0048 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: INVOKE  (r3 I:java.lang.String) = (r5 I:java.util.Locale A[D('supported' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.getCountry():java.lang.String A[MD:():java.lang.String (c)] (LINE:201)\l0x0033: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String A[D('supportedRegion' java.lang.String)]) type: VIRTUAL call: java.lang.String.isEmpty():boolean A[MD:():boolean (c)] (LINE:202)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: INVOKE  (r4 I:java.lang.String) = (r6 I:java.util.Locale A[D('desired' java.util.Locale)]) type: VIRTUAL call: java.util.Locale.getCountry():java.lang.String A[MD:():java.lang.String (c)]\l0x003d: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String A[D('supportedRegion' java.lang.String)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0044 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|RETURN\lORIG_RETURN\l|0x0044: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:204)\l0x0047: RETURN  (r1 I:int)  (LINE:202)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0047: RETURN  (r1 I:int) A[SYNTHETIC] (LINE:202)\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0047: RETURN  (r1 I:int) A[SYNTHETIC] (LINE:202)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|0x0048: INVOKE  (r1 I:java.lang.String) = (r6 I:java.util.Locale A[D('desired' java.util.Locale)]) type: STATIC call: androidx.core.os.LocaleListCompatWrapper.getLikelyScript(java.util.Locale):java.lang.String A[MD:(java.util.Locale):java.lang.String (m)] (LINE:206)\l0x004c: INVOKE  (r2 I:boolean) = \l  (r0 I:java.lang.String A[D('supportedScr' java.lang.String)])\l  (r1 I:java.lang.Object A[D('desiredScr' java.lang.String)])\l type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:209)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|RETURN\l|0x0050: RETURN  (r2 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0051|RETURN\l|0x0051: RETURN  (r2 I:int)  (LINE:194)\l}"];
MethodNode[shape=record,label="{private static int androidx.core.os.LocaleListCompatWrapper.matchScore((r5 I:java.util.Locale A[D('supported' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Locale A[D('desired' java.util.Locale), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0017 \-\> B:1:?, CROSS_EDGE: B:22:0x0047 \-\> B:1:?, CROSS_EDGE: B:18:0x0041 \-\> B:22:0x0047, CROSS_EDGE: B:16:0x0037 \-\> B:22:0x0047, CROSS_EDGE: B:24:0x0050 \-\> B:1:?, CROSS_EDGE: B:25:0x0051 \-\> B:1:?, CROSS_EDGE: B:9:0x001c \-\> B:25:0x0051\lDebug Info:\l  0x0033\-0x0048: r3 'supportedRegion' Ljava\/lang\/String;\l  0x0029\-0x0051: r0 'supportedScr' Ljava\/lang\/String;\l  0x004c\-0x0051: r1 'desiredScr' Ljava\/lang\/String;\l  \-1 \-0x0051: r5 'supported' Ljava\/util\/Locale;\l  \-1 \-0x0051: r6 'desired' Ljava\/util\/Locale;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_25;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_25[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_27[style=dashed];
Node_20 -> Node_1;
Node_27 -> Node_1;
Node_26 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_25 -> Node_1;
}

