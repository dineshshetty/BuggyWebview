digraph "CFG forandroidx.core.os.BundleApi21ImplKt.putSize(Landroid\/os\/Bundle;Ljava\/lang\/String;Landroid\/util\/Size;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"bundle\" \l0x0002: INVOKE  (r1 I:java.lang.Object A[D('bundle' android.os.Bundle)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"key\" \l0x0007: INVOKE  (r2 I:java.lang.Object A[D('key' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  \l  (r1 I:android.os.Bundle A[D('bundle' android.os.Bundle)])\l  (r2 I:java.lang.String A[D('key' java.lang.String)])\l  (r3 I:android.util.Size A[D('value' android.util.Size)])\l type: VIRTUAL call: android.os.Bundle.putSize(java.lang.String, android.util.Size):void A[MD:(java.lang.String, android.util.Size):void (c)] (LINE:125)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void androidx.core.os.BundleApi21ImplKt.putSize((r1 I:android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.util.Size A[D('value' android.util.Size), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Lkotlin\/jvm\/JvmStatic;=Annotation\{RUNTIME, type=Lkotlin\/jvm\/JvmStatic;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r1 'bundle' Landroid\/os\/Bundle;\l  \-1 \-0x000d: r2 'key' Ljava\/lang\/String;\l  \-1 \-0x000d: r3 'value' Landroid\/util\/Size;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

