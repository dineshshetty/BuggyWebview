digraph "CFG forandroidx.core.text.BidiFormatter.DirectionalityEstimator.getExitDir()I" {
Node_52 [shape=record,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.length int  (LINE:744)\l0x0002: IPUT  (r0 I:int), (r5 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:745)\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:746)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|LOOP_START\lLOOP:0: B:55:0x0006\-\>B:93:0x0006\l|0x0006: IGET  (r2 I:int) = (r5 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int  (LINE:747)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0008|0x0008: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:85:0x0035 \l}"];
Node_57 [shape=record,label="{57\:\ 0x000a|0x000a: INVOKE  (r2 I:byte) = (r5 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) type: VIRTUAL call: androidx.core.text.BidiFormatter.DirectionalityEstimator.dirTypeBackward():byte A[MD:():byte (m)] (LINE:748)\l0x000e: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0010|0x0010: SWITCH  (r2 I:??)\l case 0: goto B:84:0x002e\l case 1: goto B:83:0x0027\l case 2: goto B:83:0x0027\l case 9: goto B:94:0x0006\l case 14: goto B:82:0x0020\l case 15: goto B:82:0x0020\l case 16: goto B:81:0x001a\l case 17: goto B:81:0x001a\l case 18: goto B:80:0x0017\l default: goto B:79:0x0013 \l}"];
Node_79 [shape=record,label="{79\:\ 0x0013|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastNonEmptyEmbeddingLevel' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0006  (LINE:786)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0015|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0015|0x0015: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastNonEmptyEmbeddingLevel' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddingLevel' int)])  (LINE:787)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0006|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:55:0x0006\-\>B:93:0x0006\l}"];
Node_95 [shape=record,label="{95\:\ 0x0006|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0017|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x0017|0x0017: ARITH  (r0 I:int) = (r0 I:int A[D('embeddingLevel' int)]) + (1 int)  (LINE:781)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0006|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x001a|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastNonEmptyEmbeddingLevel' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('embeddingLevel' int)])  \-\> B:64:0x001d  (LINE:775)\l}"];
Node_64 [shape=record,label="{64\:\ 0x001d|0x001d: ARITH  (r0 I:int) = (r0 I:int A[D('embeddingLevel' int)]) + (\-1 int)  (LINE:778)\l}"];
Node_98 [shape=record,label="{98\:\ 0x0006|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x001c|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x001c|RETURN\l|0x001c: RETURN  (r3 I:int)  (LINE:776)\l}"];
Node_53 [shape=record,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,label="{82\:\ 0x0020|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastNonEmptyEmbeddingLevel' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('embeddingLevel' int)])  \-\> B:67:0x0023  (LINE:759)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0023|0x0023: ARITH  (r0 I:int) = (r0 I:int A[D('embeddingLevel' int)]) + (\-1 int)  (LINE:762)\l}"];
Node_99 [shape=record,label="{99\:\ 0x0006|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x0022|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0022|RETURN\l|0x0022: RETURN  (r4 I:int)  (LINE:760)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0027|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('embeddingLevel' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x002a  (LINE:766)\l}"];
Node_71 [shape=record,label="{71\:\ 0x002a|0x002a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastNonEmptyEmbeddingLevel' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x0006  (LINE:769)\l}"];
Node_90 [shape=record,label="{90\:\ 0x002c|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x002c|0x002c: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastNonEmptyEmbeddingLevel' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddingLevel' int)])  (LINE:770)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0006|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x0006|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0029|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0029|RETURN\l|0x0029: RETURN  (r3 I:int)  (LINE:767)\l}"];
Node_84 [shape=record,label="{84\:\ 0x002e|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x002e|0x002e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('embeddingLevel' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0031  (LINE:750)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastNonEmptyEmbeddingLevel' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0006  (LINE:753)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0033|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0033|0x0033: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastNonEmptyEmbeddingLevel' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddingLevel' int)])  (LINE:754)\l}"];
Node_103 [shape=record,label="{103\:\ 0x0006|SYNTHETIC\l}"];
Node_102 [shape=record,label="{102\:\ 0x0006|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0030|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0030|RETURN\l|0x0030: RETURN  (r4 I:int)  (LINE:751)\l}"];
Node_94 [shape=record,label="{94\:\ 0x0006|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0035|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x0035|RETURN\l|0x0035: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:792)\l0x0036: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{int androidx.core.text.BidiFormatter.DirectionalityEstimator.getExitDir((r5 'this' I:androidx.core.text.BidiFormatter$DirectionalityEstimator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:59:0x0013 \-\> B:55:0x0006, BACK_EDGE: B:60:0x0015 \-\> B:55:0x0006, BACK_EDGE: B:61:0x0017 \-\> B:55:0x0006, BACK_EDGE: B:64:0x001d \-\> B:55:0x0006, CROSS_EDGE: B:66:0x0022 \-\> B:53:?, BACK_EDGE: B:67:0x0023 \-\> B:55:0x0006, CROSS_EDGE: B:70:0x0029 \-\> B:53:?, BACK_EDGE: B:71:0x002a \-\> B:55:0x0006, BACK_EDGE: B:72:0x002c \-\> B:55:0x0006, CROSS_EDGE: B:74:0x0030 \-\> B:53:?, BACK_EDGE: B:75:0x0031 \-\> B:55:0x0006, BACK_EDGE: B:76:0x0033 \-\> B:55:0x0006, BACK_EDGE: B:58:0x0010 \-\> B:55:0x0006, CROSS_EDGE: B:78:0x0036 \-\> B:53:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x005d: r0 'embeddingLevel' I\l  0x0006\-0x005d: r1 'lastNonEmptyEmbeddingLevel' I\l}"];
MethodNode -> Node_52;Node_52 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_85;
Node_57 -> Node_58;
Node_58 -> Node_79;
Node_58 -> Node_80;
Node_58 -> Node_81;
Node_58 -> Node_82;
Node_58 -> Node_83;
Node_58 -> Node_84;
Node_58 -> Node_94;
Node_79 -> Node_59;
Node_59 -> Node_86[style=dashed];
Node_59 -> Node_95;
Node_86 -> Node_60;
Node_60 -> Node_96;
Node_96 -> Node_93;
Node_93 -> Node_55;
Node_95 -> Node_93;
Node_80 -> Node_61;
Node_61 -> Node_97;
Node_97 -> Node_93;
Node_81 -> Node_62;
Node_62 -> Node_64;
Node_62 -> Node_87[style=dashed];
Node_64 -> Node_98;
Node_98 -> Node_93;
Node_87 -> Node_63;
Node_63 -> Node_53;
Node_82 -> Node_65;
Node_65 -> Node_67;
Node_65 -> Node_88[style=dashed];
Node_67 -> Node_99;
Node_99 -> Node_93;
Node_88 -> Node_66;
Node_66 -> Node_53;
Node_83 -> Node_69;
Node_69 -> Node_71;
Node_69 -> Node_89[style=dashed];
Node_71 -> Node_90[style=dashed];
Node_71 -> Node_100;
Node_90 -> Node_72;
Node_72 -> Node_101;
Node_101 -> Node_93;
Node_100 -> Node_93;
Node_89 -> Node_70;
Node_70 -> Node_53;
Node_84 -> Node_73;
Node_73 -> Node_75;
Node_73 -> Node_92[style=dashed];
Node_75 -> Node_91[style=dashed];
Node_75 -> Node_102;
Node_91 -> Node_76;
Node_76 -> Node_103;
Node_103 -> Node_93;
Node_102 -> Node_93;
Node_92 -> Node_74;
Node_74 -> Node_53;
Node_94 -> Node_93;
Node_85 -> Node_77;
Node_77 -> Node_53;
}

