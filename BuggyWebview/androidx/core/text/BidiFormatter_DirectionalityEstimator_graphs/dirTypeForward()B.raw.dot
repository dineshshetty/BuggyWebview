digraph "CFG forandroidx.core.text.BidiFormatter.DirectionalityEstimator.dirTypeForward()B" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.CharSequence) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.text java.lang.CharSequence  (LINE:816)\l0x0002: IGET  (r1 I:int) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x0004: INVOKE  (r0 I:char) = (r0 I:java.lang.CharSequence), (r1 I:int) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)]\l0x0008: IPUT  (r0 I:char), (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.lastChar char \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:char) type: STATIC call: java.lang.Character.isHighSurrogate(char):boolean A[MD:(char):boolean (c)] (LINE:817)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0026 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IGET  (r0 I:java.lang.CharSequence) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.text java.lang.CharSequence  (LINE:818)\l0x0012: IGET  (r1 I:int) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x0014: INVOKE  (r0 I:int) = (r0 I:java.lang.CharSequence), (r1 I:int) type: STATIC call: java.lang.Character.codePointAt(java.lang.CharSequence, int):int A[MD:(java.lang.CharSequence, int):int (c)]\l0x0018: IGET  (r1 I:int) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int  (LINE:819)\l0x001a: INVOKE  (r2 I:int) = (r0 I:int A[D('codePoint' int)]) type: STATIC call: java.lang.Character.charCount(int):int A[MD:(int):int (c)]\l0x001e: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x001f: IPUT  (r1 I:int), (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x0021: INVOKE  (r1 I:byte) = (r0 I:int A[D('codePoint' int)]) type: STATIC call: java.lang.Character.getDirectionality(int):byte A[MD:(int):byte (c)] (LINE:820)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:byte) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|0x0026: IGET  (r0 I:int A[D('codePoint' int)]) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int  (LINE:822)\l0x0028: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x002a: IPUT  (r0 I:int), (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.charIndex int \l0x002c: IGET  (r0 I:char) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.lastChar char  (LINE:823)\l0x002e: INVOKE  (r0 I:byte) = (r0 I:char) type: STATIC call: androidx.core.text.BidiFormatter.DirectionalityEstimator.getCachedDirectionality(char):byte A[MD:(char):byte (m)]\l0x0032: IGET  (r1 I:boolean) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.isHtml boolean  (LINE:824)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|0x0034: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x0036|0x0036: IGET  (r1 I:char) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) androidx.core.text.BidiFormatter.DirectionalityEstimator.lastChar char  (LINE:826)\l0x0038: CONST  (r2 I:??[int, float, short, byte, char]) = (60 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|0x003a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0041 \l}"];
Node_28 [shape=record,label="{28\:\ 0x003c|0x003c: INVOKE  (r0 I:byte A[D('dirType' byte)]) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) type: DIRECT call: androidx.core.text.BidiFormatter.DirectionalityEstimator.skipTagForward():byte A[MD:():byte (m)] (LINE:827)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0049: RETURN  (r0 I:byte A[D('dirType' byte)]) A[SYNTHETIC] (LINE:832)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0041|0x0041: CONST  (r2 I:??[int, float, short, byte, char]) = (38 ??[int, float, short, byte, char])  (LINE:828)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0043|0x0043: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_31 [shape=record,label="{31\:\ 0x0045|0x0045: INVOKE  (r0 I:byte A[D('dirType' byte)]) = (r3 I:androidx.core.text.BidiFormatter$DirectionalityEstimator) type: DIRECT call: androidx.core.text.BidiFormatter.DirectionalityEstimator.skipEntityForward():byte A[MD:():byte (m)] (LINE:829)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0049|RETURN\lORIG_RETURN\l|0x0049: RETURN  (r0 I:byte A[D('dirType' byte)])  (LINE:832)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0049: RETURN  (r0 I:byte A[D('dirType' byte)]) A[SYNTHETIC] (LINE:832)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0049: RETURN  (r0 I:byte A[D('dirType' byte)]) A[SYNTHETIC] (LINE:832)\l}"];
MethodNode[shape=record,label="{byte androidx.core.text.BidiFormatter.DirectionalityEstimator.dirTypeForward((r3 'this' I:androidx.core.text.BidiFormatter$DirectionalityEstimator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0049 \-\> B:19:?, CROSS_EDGE: B:31:0x0045 \-\> B:32:0x0049, CROSS_EDGE: B:30:0x0043 \-\> B:32:0x0049, CROSS_EDGE: B:25:0x0034 \-\> B:32:0x0049\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0026: r0 'codePoint' I\l  0x0032\-0x0049: r0 'dirType' B\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_34;
Node_34 -> Node_19;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_19;
Node_35 -> Node_19;
Node_33 -> Node_19;
}

