digraph "CFG forandroidx.core.text.BidiFormatter.DirectionalityEstimator.getEntryDir()I" {
subgraph cluster_Region_1873779235 {
label = "R(3:1|(1:6)|(2:(1:36)|(1:(2:(1:38)|(2:(1:42)|61)))))";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0000|r8.charIndex = 0\lint r1 = 0\lint r2 = 0\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1323594877 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x000c|if (r8.charIndex \< r8.length) goto L4\l}"];
Node_71 [shape=record,label="{71\:\ 0x000e|ADDED_TO_REGION\l|if (r3 == 0) goto L5\l}"];
subgraph cluster_Region_580735591 {
label = "R(1:6)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1155079298 {
label = "Switch: 7
 case 0 -> R(1:(2:29|1)(1:32))
 case 1, 2 -> R(1:(2:22|1)(1:25))
 case 9 -> R(1:1)
 case 14, 15 -> R(2:18|1)
 case 16, 17 -> R(2:15|1)
 case 18 -> R(2:12|1)
 case default -> R(2:8|1)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0014|switch(dirTypeForward()) \{\l    case 0: goto L27;\l    case 1: goto L20;\l    case 2: goto L20;\l    case 9: goto L33;\l    case 14: goto L17;\l    case 15: goto L17;\l    case 16: goto L14;\l    case 17: goto L14;\l    case 18: goto L11;\l    default: goto L7;\l\}\l}"];
subgraph cluster_Region_1384635208 {
label = "R(1:(2:29|1)(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1632561910 {
label = "IF [B:82:0x002b] THEN: R(2:29|1) ELSE: R(1:32)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x002b|if (r1 != 0) goto L29\l}"];
subgraph cluster_Region_1134581754 {
label = "R(2:29|1)";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x002e|r3 = r1\l}"];
Node_InsnContainer_1071414179 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1998194773 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x002d|RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_2074818360 {
label = "R(1:(2:22|1)(1:25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1626245331 {
label = "IF [B:79:0x0026] THEN: R(2:22|1) ELSE: R(1:25)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0026|if (r1 != 0) goto L22\l}"];
subgraph cluster_Region_2095514083 {
label = "R(2:22|1)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0029|r3 = r1\l}"];
Node_InsnContainer_387640990 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1262980797 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x0028|RETURN\l|return 1\l}"];
}
}
}
subgraph cluster_Region_1824030496 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1309181816 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_329657672 {
label = "R(2:18|1)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0021|r1++\lr2 = \-1\l}"];
Node_InsnContainer_245825081 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1945768695 {
label = "R(2:15|1)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x001d|r1++\lr2 = 1\l}"];
Node_InsnContainer_2044967734 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1070884909 {
label = "R(2:12|1)";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0019|r1\-\-\lr2 = 0\l}"];
Node_InsnContainer_1452120661 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1785220563 {
label = "R(2:8|1)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0017|r3 = r1\l}"];
Node_InsnContainer_1555363003 [shape=record,label="{|break\l}"];
}
}
}
}
subgraph cluster_Region_1700433442 {
label = "R(2:(1:36)|(1:(2:(1:38)|(2:(1:42)|61))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_573081650 {
label = "IF [B:85:0x0030] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x0030|if (r3 == 0) goto L36\l}"];
subgraph cluster_Region_25473972 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x0032|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_996265699 {
label = "R(1:(2:(1:38)|(2:(1:42)|61)))";
node [shape=record,color=blue];
subgraph cluster_Region_1074525208 {
label = "R(2:(1:38)|(2:(1:42)|61))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2066125661 {
label = "IF [B:87:0x0033] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x0033|if (r2 != 0) goto L38\l}"];
subgraph cluster_Region_1401446207 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_88 [shape=record,label="{88\:\ 0x0035|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_1905346981 {
label = "R(2:(1:42)|61)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1428970800 {
label = "LOOP:1: (1:42)";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x0038|if (r8.charIndex \> 0) goto L41\l}"];
subgraph cluster_Region_1611634592 {
label = "R(1:42)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_2142962829 {
label = "Switch: 3
 case 14, 15 -> R(1:(2:55|1)(1:58))
 case 16, 17 -> R(1:(2:49|1)(1:52))
 case 18 -> R(2:44|1)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x003e|switch(dirTypeBackward()) \{\l    case 14: goto L53;\l    case 15: goto L53;\l    case 16: goto L47;\l    case 17: goto L47;\l    case 18: goto L43;\l    default: goto L59;\l\}\l}"];
subgraph cluster_Region_68990654 {
label = "R(1:(2:55|1)(1:58))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_733399267 {
label = "IF [B:98:0x004b] THEN: R(2:55|1) ELSE: R(1:58)";
node [shape=record,color=blue];
Node_98 [shape=record,label="{98\:\ 0x004b|if (r3 != r1) goto L55\l}"];
subgraph cluster_Region_1446433098 {
label = "R(2:55|1)";
node [shape=record,color=blue];
Node_100 [shape=record,label="{100\:\ 0x004e|r1\-\-\l}"];
Node_InsnContainer_871280336 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_792759706 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_99 [shape=record,label="{99\:\ 0x004d|RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_142113683 {
label = "R(1:(2:49|1)(1:52))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1066038614 {
label = "IF [B:95:0x0045] THEN: R(2:49|1) ELSE: R(1:52)";
node [shape=record,color=blue];
Node_95 [shape=record,label="{95\:\ 0x0045|if (r3 != r1) goto L49\l}"];
subgraph cluster_Region_1343462947 {
label = "R(2:49|1)";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x0048|r1\-\-\l}"];
Node_InsnContainer_1764787556 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_804142780 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0047|RETURN\l|return 1\l}"];
}
}
}
subgraph cluster_Region_4964832 {
label = "R(2:44|1)";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x0042|r1++\l}"];
Node_InsnContainer_82397830 [shape=record,label="{|break\l}"];
}
}
}
}
Node_102 [shape=record,label="{102\:\ 0x0052|RETURN\l|return 0\l}"];
}
}
}
}
}
Node_66 [shape=record,color=red,label="{66\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0006|LOOP_START\lLOOP:0: B:69:0x0006\-\>B:113:0x0006\lPHI: r1 r2 r3 \l  PHI: (r1v1 'embeddingLevel' int) = (r1v0 'embeddingLevel' int), (r1v10 'embeddingLevel' int) binds: [B:68:0x0000, B:113:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'embeddingLevelDir' int) = (r2v0 'embeddingLevelDir' int), (r2v5 'embeddingLevelDir' int) binds: [B:68:0x0000, B:113:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'firstNonEmptyEmbeddingLevel' int) = (r3v0 'firstNonEmptyEmbeddingLevel' int), (r3v4 'firstNonEmptyEmbeddingLevel' int) binds: [B:68:0x0000, B:113:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0010}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x0017|SYNTHETIC\l}"];
Node_115 [shape=record,color=red,label="{115\:\ 0x0006|SYNTHETIC\l}"];
Node_113 [shape=record,color=red,label="{113\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:69:0x0006\-\>B:113:0x0006\lPHI: r1 r2 r3 \l  PHI: (r1v10 'embeddingLevel' int) = (r1v1 'embeddingLevel' int), (r1v1 'embeddingLevel' int), (r1v1 'embeddingLevel' int), (r1v7 'embeddingLevel' int), (r1v8 'embeddingLevel' int), (r1v9 'embeddingLevel' int), (r1v1 'embeddingLevel' int) binds: [B:114:0x0006, B:120:0x0006, B:119:0x0006, B:118:0x0006, B:117:0x0006, B:116:0x0006, B:115:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 'embeddingLevelDir' int) = (r2v1 'embeddingLevelDir' int), (r2v1 'embeddingLevelDir' int), (r2v1 'embeddingLevelDir' int), (r2v2 'embeddingLevelDir' int), (r2v3 'embeddingLevelDir' int), (r2v4 'embeddingLevelDir' int), (r2v1 'embeddingLevelDir' int) binds: [B:114:0x0006, B:120:0x0006, B:119:0x0006, B:118:0x0006, B:117:0x0006, B:116:0x0006, B:115:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'firstNonEmptyEmbeddingLevel' int) = (r3v1 'firstNonEmptyEmbeddingLevel' int), (r3v2 'firstNonEmptyEmbeddingLevel' int), (r3v3 'firstNonEmptyEmbeddingLevel' int), (r3v1 'firstNonEmptyEmbeddingLevel' int), (r3v1 'firstNonEmptyEmbeddingLevel' int), (r3v1 'firstNonEmptyEmbeddingLevel' int), (r3v5 'firstNonEmptyEmbeddingLevel' int) binds: [B:114:0x0006, B:120:0x0006, B:119:0x0006, B:118:0x0006, B:117:0x0006, B:116:0x0006, B:115:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_104 [shape=record,color=red,label="{104\:\ 0x0019|SYNTHETIC\l}"];
Node_116 [shape=record,color=red,label="{116\:\ 0x0006|SYNTHETIC\l}"];
Node_105 [shape=record,color=red,label="{105\:\ 0x001d|SYNTHETIC\l}"];
Node_117 [shape=record,color=red,label="{117\:\ 0x0006|SYNTHETIC\l}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x0021|SYNTHETIC\l}"];
Node_118 [shape=record,color=red,label="{118\:\ 0x0006|SYNTHETIC\l}"];
Node_107 [shape=record,color=red,label="{107\:\ 0x0026|SYNTHETIC\l}"];
Node_119 [shape=record,color=red,label="{119\:\ 0x0006|SYNTHETIC\l}"];
Node_111 [shape=record,color=red,label="{111\:\ 0x0028|SYNTHETIC\l}"];
Node_67 [shape=record,color=red,label="{67\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_108 [shape=record,color=red,label="{108\:\ 0x002b|SYNTHETIC\l}"];
Node_120 [shape=record,color=red,label="{120\:\ 0x0006|SYNTHETIC\l}"];
Node_112 [shape=record,color=red,label="{112\:\ 0x002d|SYNTHETIC\l}"];
Node_114 [shape=record,color=red,label="{114\:\ 0x0006|SYNTHETIC\l}"];
Node_110 [shape=record,color=red,label="{110\:\ 0x0030|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0036|LOOP_START\lLOOP:1: B:89:0x0036\-\>B:127:0x0036\lPHI: r1 \l  PHI: (r1v2 'embeddingLevel' int) = (r1v1 'embeddingLevel' int), (r1v5 'embeddingLevel' int) binds: [B:87:0x0033, B:127:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x003a}"];
Node_122 [shape=record,color=red,label="{122\:\ 0x0042|SYNTHETIC\l}"];
Node_129 [shape=record,color=red,label="{129\:\ 0x0036|SYNTHETIC\l}"];
Node_127 [shape=record,color=red,label="{127\:\ 0x0036|LOOP_END\lSYNTHETIC\lLOOP:1: B:89:0x0036\-\>B:127:0x0036\lPHI: r1 \l  PHI: (r1v5 'embeddingLevel' int) = (r1v2 'embeddingLevel' int), (r1v3 'embeddingLevel' int), (r1v4 'embeddingLevel' int), (r1v6 'embeddingLevel' int) binds: [B:128:0x0036, B:131:0x0036, B:130:0x0036, B:129:0x0036] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_123 [shape=record,color=red,label="{123\:\ 0x0045|SYNTHETIC\l}"];
Node_130 [shape=record,color=red,label="{130\:\ 0x0036|SYNTHETIC\l}"];
Node_125 [shape=record,color=red,label="{125\:\ 0x0047|SYNTHETIC\l}"];
Node_124 [shape=record,color=red,label="{124\:\ 0x004b|SYNTHETIC\l}"];
Node_131 [shape=record,color=red,label="{131\:\ 0x0036|SYNTHETIC\l}"];
Node_126 [shape=record,color=red,label="{126\:\ 0x004d|SYNTHETIC\l}"];
Node_128 [shape=record,color=red,label="{128\:\ 0x0036|SYNTHETIC\l}"];
Node_121 [shape=record,color=red,label="{121\:\ 0x0052|SYNTHETIC\l}"];
Node_109 [shape=record,color=red,label="{109\:\ 0x0030|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{int androidx.core.text.BidiFormatter.DirectionalityEstimator.getEntryDir((r8v0 'this' androidx.core.text.BidiFormatter$DirectionalityEstimator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:74:0x0017 \-\> B:69:0x0006, BACK_EDGE: B:75:0x0019 \-\> B:69:0x0006, BACK_EDGE: B:76:0x001d \-\> B:69:0x0006, BACK_EDGE: B:77:0x0021 \-\> B:69:0x0006, BACK_EDGE: B:81:0x0029 \-\> B:69:0x0006, CROSS_EDGE: B:83:0x002d \-\> B:67:?, BACK_EDGE: B:84:0x002e \-\> B:69:0x0006, BACK_EDGE: B:73:0x0014 \-\> B:69:0x0006, CROSS_EDGE: B:86:0x0032 \-\> B:67:?, CROSS_EDGE: B:88:0x0035 \-\> B:67:?, BACK_EDGE: B:94:0x0042 \-\> B:89:0x0036, CROSS_EDGE: B:96:0x0047 \-\> B:67:?, BACK_EDGE: B:97:0x0048 \-\> B:89:0x0036, CROSS_EDGE: B:99:0x004d \-\> B:67:?, BACK_EDGE: B:100:0x004e \-\> B:89:0x0036, BACK_EDGE: B:92:0x003e \-\> B:89:0x0036, CROSS_EDGE: B:102:0x0052 \-\> B:67:?, CROSS_EDGE: B:70:0x000c \-\> B:85:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_66;Node_68 -> Node_69;
Node_70 -> Node_71;
Node_70 -> Node_109[style=dashed];
Node_71 -> Node_72;
Node_71 -> Node_110[style=dashed];
Node_73 -> Node_103;
Node_73 -> Node_104;
Node_73 -> Node_105;
Node_73 -> Node_106;
Node_73 -> Node_107;
Node_73 -> Node_108;
Node_73 -> Node_114;
Node_82 -> Node_84;
Node_82 -> Node_112[style=dashed];
Node_84 -> Node_120;
Node_83 -> Node_67;
Node_79 -> Node_81;
Node_79 -> Node_111[style=dashed];
Node_81 -> Node_119;
Node_80 -> Node_67;
Node_77 -> Node_118;
Node_76 -> Node_117;
Node_75 -> Node_116;
Node_74 -> Node_115;
Node_85 -> Node_86;
Node_85 -> Node_87[style=dashed];
Node_86 -> Node_67;
Node_87 -> Node_88;
Node_87 -> Node_89[style=dashed];
Node_88 -> Node_67;
Node_90 -> Node_91;
Node_90 -> Node_121[style=dashed];
Node_92 -> Node_122;
Node_92 -> Node_123;
Node_92 -> Node_124;
Node_92 -> Node_128;
Node_98 -> Node_100;
Node_98 -> Node_126[style=dashed];
Node_100 -> Node_131;
Node_99 -> Node_67;
Node_95 -> Node_97;
Node_95 -> Node_125[style=dashed];
Node_97 -> Node_130;
Node_96 -> Node_67;
Node_94 -> Node_129;
Node_102 -> Node_67;
Node_66 -> Node_68;
Node_69 -> Node_70;
Node_72 -> Node_73;
Node_103 -> Node_74;
Node_115 -> Node_113;
Node_113 -> Node_69;
Node_104 -> Node_75;
Node_116 -> Node_113;
Node_105 -> Node_76;
Node_117 -> Node_113;
Node_106 -> Node_77;
Node_118 -> Node_113;
Node_107 -> Node_79;
Node_119 -> Node_113;
Node_111 -> Node_80;
Node_108 -> Node_82;
Node_120 -> Node_113;
Node_112 -> Node_83;
Node_114 -> Node_113;
Node_110 -> Node_85;
Node_89 -> Node_90;
Node_91 -> Node_92;
Node_122 -> Node_94;
Node_129 -> Node_127;
Node_127 -> Node_89;
Node_123 -> Node_95;
Node_130 -> Node_127;
Node_125 -> Node_96;
Node_124 -> Node_98;
Node_131 -> Node_127;
Node_126 -> Node_99;
Node_128 -> Node_127;
Node_121 -> Node_102;
Node_109 -> Node_85;
}

