digraph "CFG forandroidx.core.text.BidiFormatter.DirectionalityEstimator.getExitDir()I" {
subgraph cluster_Region_294732804 {
label = "R(3:1|(1:5)|49)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0000|r5.charIndex = r5.length\lint r0 = 0\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1325796715 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0008|if (r5.charIndex \> 0) goto L4\l}"];
subgraph cluster_Region_586201674 {
label = "R(1:5)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_2092264310 {
label = "Switch: 7
 case 0 -> R(1:(1:(1:1)(2:42|1))(1:46))
 case 1, 2 -> R(1:(1:(1:1)(2:33|1))(1:37))
 case 9 -> R(1:1)
 case 14, 15 -> R(1:(2:25|1)(1:28))
 case 16, 17 -> R(1:(2:18|1)(1:21))
 case 18 -> R(2:14|1)
 case default -> R(1:(1:1)(2:9|1))";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0010|switch(dirTypeBackward()) \{\l    case 0: goto L38;\l    case 1: goto L29;\l    case 2: goto L29;\l    case 9: goto L47;\l    case 14: goto L23;\l    case 15: goto L23;\l    case 16: goto L16;\l    case 17: goto L16;\l    case 18: goto L13;\l    default: goto L6;\l\}\l}"];
subgraph cluster_Region_843494172 {
label = "R(1:(1:(1:1)(2:42|1))(1:46))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2073723628 {
label = "IF [B:73:0x002e] THEN: R(1:(1:1)(2:42|1)) ELSE: R(1:46)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x002e|if (r0 != 0) goto L40\l}"];
subgraph cluster_Region_1297390954 {
label = "R(1:(1:1)(2:42|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_214823068 {
label = "IF [B:75:0x0031] THEN: R(1:1) ELSE: R(2:42|1)";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x0031|if (r1 != 0) goto L44\l}"];
subgraph cluster_Region_1783712864 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1038640263 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_2100980820 {
label = "R(2:42|1)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0033|r1 = r0\l}"];
Node_InsnContainer_984743541 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1399294852 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0030|RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_859176900 {
label = "R(1:(1:(1:1)(2:33|1))(1:37))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2051933085 {
label = "IF [B:69:0x0027] THEN: R(1:(1:1)(2:33|1)) ELSE: R(1:37)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0027|if (r0 != 0) goto L31\l}"];
subgraph cluster_Region_1292331385 {
label = "R(1:(1:1)(2:33|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_800207577 {
label = "IF [B:71:0x002a] THEN: R(1:1) ELSE: R(2:33|1)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x002a|if (r1 != 0) goto L35\l}"];
subgraph cluster_Region_2029020410 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_396688331 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_415296453 {
label = "R(2:33|1)";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x002c|r1 = r0\l}"];
Node_InsnContainer_200535332 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_2101940610 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0029|RETURN\l|return 1\l}"];
}
}
}
subgraph cluster_Region_107314533 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_909096129 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_581039597 {
label = "R(1:(2:25|1)(1:28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_929208275 {
label = "IF [B:65:0x0020] THEN: R(2:25|1) ELSE: R(1:28)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0020|if (r1 != r0) goto L25\l}"];
subgraph cluster_Region_2006857500 {
label = "R(2:25|1)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x0023|r0\-\-\l}"];
Node_InsnContainer_391193914 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_980610272 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0022|RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_1899028179 {
label = "R(1:(2:18|1)(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_429135271 {
label = "IF [B:62:0x001a] THEN: R(2:18|1) ELSE: R(1:21)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x001a|if (r1 != r0) goto L18\l}"];
subgraph cluster_Region_1084816253 {
label = "R(2:18|1)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x001d|r0\-\-\l}"];
Node_InsnContainer_1553159045 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1123407320 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x001c|RETURN\l|return 1\l}"];
}
}
}
subgraph cluster_Region_1622170522 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0017|r0++\l}"];
Node_InsnContainer_1867326602 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_419215862 {
label = "R(1:(1:1)(2:9|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_372384677 {
label = "IF [B:59:0x0013] THEN: R(1:1) ELSE: R(2:9|1)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0013|if (r1 != 0) goto L12\l}"];
subgraph cluster_Region_1580588567 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_847420188 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_332181475 {
label = "R(2:9|1)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0015|r1 = r0\l}"];
Node_InsnContainer_879595698 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
Node_77 [shape=record,label="{77\:\ 0x0035|RETURN\l|return 0\l}"];
}
Node_52 [shape=record,color=red,label="{52\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0006|LOOP_START\lLOOP:0: B:55:0x0006\-\>B:93:0x0006\lPHI: r0 r1 \l  PHI: (r0v2 'embeddingLevel' int) = (r0v1 'embeddingLevel' int), (r0v6 'embeddingLevel' int) binds: [B:54:0x0000, B:93:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'lastNonEmptyEmbeddingLevel' int) = (r1v0 'lastNonEmptyEmbeddingLevel' int), (r1v4 'lastNonEmptyEmbeddingLevel' int) binds: [B:54:0x0000, B:93:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x000a}"];
Node_79 [shape=record,color=red,label="{79\:\ 0x0013|SYNTHETIC\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0015|SYNTHETIC\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0006|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:55:0x0006\-\>B:93:0x0006\lPHI: r0 r1 \l  PHI: (r0v6 'embeddingLevel' int) = (r0v2 'embeddingLevel' int), (r0v2 'embeddingLevel' int), (r0v2 'embeddingLevel' int), (r0v2 'embeddingLevel' int), (r0v2 'embeddingLevel' int), (r0v3 'embeddingLevel' int), (r0v4 'embeddingLevel' int), (r0v5 'embeddingLevel' int), (r0v2 'embeddingLevel' int), (r0v2 'embeddingLevel' int) binds: [B:94:0x0006, B:102:0x0006, B:103:0x0006, B:100:0x0006, B:101:0x0006, B:99:0x0006, B:98:0x0006, B:97:0x0006, B:95:0x0006, B:96:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 'lastNonEmptyEmbeddingLevel' int) = (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v2 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v3 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v1 'lastNonEmptyEmbeddingLevel' int), (r1v5 'lastNonEmptyEmbeddingLevel' int) binds: [B:94:0x0006, B:102:0x0006, B:103:0x0006, B:100:0x0006, B:101:0x0006, B:99:0x0006, B:98:0x0006, B:97:0x0006, B:95:0x0006, B:96:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x0006|SYNTHETIC\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0017|SYNTHETIC\l}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x0006|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x001a|SYNTHETIC\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0006|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x001c|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0020|SYNTHETIC\l}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x0006|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0022|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0027|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x002c|SYNTHETIC\l}"];
Node_101 [shape=record,color=red,label="{101\:\ 0x0006|SYNTHETIC\l}"];
Node_100 [shape=record,color=red,label="{100\:\ 0x0006|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0029|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x002e|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0033|SYNTHETIC\l}"];
Node_103 [shape=record,color=red,label="{103\:\ 0x0006|SYNTHETIC\l}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x0006|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0030|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0006|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int androidx.core.text.BidiFormatter.DirectionalityEstimator.getExitDir((r5v0 'this' androidx.core.text.BidiFormatter$DirectionalityEstimator A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:59:0x0013 \-\> B:55:0x0006, BACK_EDGE: B:60:0x0015 \-\> B:55:0x0006, BACK_EDGE: B:61:0x0017 \-\> B:55:0x0006, BACK_EDGE: B:64:0x001d \-\> B:55:0x0006, CROSS_EDGE: B:66:0x0022 \-\> B:53:?, BACK_EDGE: B:67:0x0023 \-\> B:55:0x0006, CROSS_EDGE: B:70:0x0029 \-\> B:53:?, BACK_EDGE: B:71:0x002a \-\> B:55:0x0006, BACK_EDGE: B:72:0x002c \-\> B:55:0x0006, CROSS_EDGE: B:74:0x0030 \-\> B:53:?, BACK_EDGE: B:75:0x0031 \-\> B:55:0x0006, BACK_EDGE: B:76:0x0033 \-\> B:55:0x0006, BACK_EDGE: B:58:0x0010 \-\> B:55:0x0006, CROSS_EDGE: B:78:0x0036 \-\> B:53:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_52;Node_54 -> Node_55;
Node_56 -> Node_57;
Node_56 -> Node_85[style=dashed];
Node_58 -> Node_79;
Node_58 -> Node_80;
Node_58 -> Node_81;
Node_58 -> Node_82;
Node_58 -> Node_83;
Node_58 -> Node_84;
Node_58 -> Node_94;
Node_73 -> Node_75;
Node_73 -> Node_92[style=dashed];
Node_75 -> Node_91[style=dashed];
Node_75 -> Node_102;
Node_76 -> Node_103;
Node_74 -> Node_53;
Node_69 -> Node_71;
Node_69 -> Node_89[style=dashed];
Node_71 -> Node_90[style=dashed];
Node_71 -> Node_100;
Node_72 -> Node_101;
Node_70 -> Node_53;
Node_65 -> Node_67;
Node_65 -> Node_88[style=dashed];
Node_67 -> Node_99;
Node_66 -> Node_53;
Node_62 -> Node_64;
Node_62 -> Node_87[style=dashed];
Node_64 -> Node_98;
Node_63 -> Node_53;
Node_61 -> Node_97;
Node_59 -> Node_86[style=dashed];
Node_59 -> Node_95;
Node_60 -> Node_96;
Node_77 -> Node_53;
Node_52 -> Node_54;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_79 -> Node_59;
Node_86 -> Node_60;
Node_96 -> Node_93;
Node_93 -> Node_55;
Node_95 -> Node_93;
Node_80 -> Node_61;
Node_97 -> Node_93;
Node_81 -> Node_62;
Node_98 -> Node_93;
Node_87 -> Node_63;
Node_82 -> Node_65;
Node_99 -> Node_93;
Node_88 -> Node_66;
Node_83 -> Node_69;
Node_90 -> Node_72;
Node_101 -> Node_93;
Node_100 -> Node_93;
Node_89 -> Node_70;
Node_84 -> Node_73;
Node_91 -> Node_76;
Node_103 -> Node_93;
Node_102 -> Node_93;
Node_92 -> Node_74;
Node_94 -> Node_93;
Node_85 -> Node_77;
}

