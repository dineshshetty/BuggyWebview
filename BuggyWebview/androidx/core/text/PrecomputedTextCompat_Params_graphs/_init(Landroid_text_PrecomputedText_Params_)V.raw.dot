digraph "CFG forandroidx.core.text.PrecomputedTextCompat.Params.\<init\>(Landroid\/text\/PrecomputedText$Params;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:213)\l0x0003: INVOKE  (r0 I:android.text.TextPaint) = (r3 I:android.text.PrecomputedText$Params A[D('wrapped' android.text.PrecomputedText$Params)]) type: VIRTUAL call: android.text.PrecomputedText.Params.getTextPaint():android.text.TextPaint A[MD:():android.text.TextPaint (c)] (LINE:214)\l0x0007: IPUT  (r0 I:android.text.TextPaint), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mPaint android.text.TextPaint \l0x0009: INVOKE  (r0 I:android.text.TextDirectionHeuristic) = (r3 I:android.text.PrecomputedText$Params A[D('wrapped' android.text.PrecomputedText$Params)]) type: VIRTUAL call: android.text.PrecomputedText.Params.getTextDirection():android.text.TextDirectionHeuristic A[MD:():android.text.TextDirectionHeuristic (c)] (LINE:215)\l0x000d: IPUT  (r0 I:android.text.TextDirectionHeuristic), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mTextDir android.text.TextDirectionHeuristic \l0x000f: INVOKE  (r0 I:int) = (r3 I:android.text.PrecomputedText$Params A[D('wrapped' android.text.PrecomputedText$Params)]) type: VIRTUAL call: android.text.PrecomputedText.Params.getBreakStrategy():int A[MD:():int (c)] (LINE:216)\l0x0013: IPUT  (r0 I:int), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mBreakStrategy int \l0x0015: INVOKE  (r0 I:int) = (r3 I:android.text.PrecomputedText$Params A[D('wrapped' android.text.PrecomputedText$Params)]) type: VIRTUAL call: android.text.PrecomputedText.Params.getHyphenationFrequency():int A[MD:():int (c)] (LINE:217)\l0x0019: IPUT  (r0 I:int), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mHyphenationFrequency int \l0x001b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:218)\l0x001d: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:13:0x0023 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('wrapped' android.text.PrecomputedText$Params)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: IPUT  (r0 I:android.text.PrecomputedText$Params), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mWrapped android.text.PrecomputedText$Params \l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:219)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.core.text.PrecomputedTextCompat.Params.\<init\>((r2 'this' I:androidx.core.text.PrecomputedTextCompat$Params A[IMMUTABLE_TYPE, THIS]), (r3 I:android.text.PrecomputedText$Params A[D('wrapped' android.text.PrecomputedText$Params), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0023 \-\> B:14:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0026: r3 'wrapped' Landroid\/text\/PrecomputedText$Params;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

