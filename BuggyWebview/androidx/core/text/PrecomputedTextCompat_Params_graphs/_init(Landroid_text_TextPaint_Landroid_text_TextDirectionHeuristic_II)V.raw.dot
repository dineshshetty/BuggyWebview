digraph "CFG forandroidx.core.text.PrecomputedTextCompat.Params.\<init\>(Landroid\/text\/TextPaint;Landroid\/text\/TextDirectionHeuristic;II)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:196)\l0x0003: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:197)\l0x0005: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:13:0x0021 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:android.text.PrecomputedText$Params$Builder) =  android.text.PrecomputedText$Params$Builder  (LINE:198)\l0x000b: INVOKE  (r0 I:android.text.PrecomputedText$Params$Builder), (r3 I:android.text.TextPaint A[D('paint' android.text.TextPaint)]) type: DIRECT call: android.text.PrecomputedText.Params.Builder.\<init\>(android.text.TextPaint):void A[MD:(android.text.TextPaint):void (c)]\l0x000e: INVOKE  (r0 I:android.text.PrecomputedText$Params$Builder) = (r0 I:android.text.PrecomputedText$Params$Builder), (r5 I:int A[D('strategy' int)]) type: VIRTUAL call: android.text.PrecomputedText.Params.Builder.setBreakStrategy(int):android.text.PrecomputedText$Params$Builder A[MD:(int):android.text.PrecomputedText$Params$Builder (c)] (LINE:199)\l0x0012: INVOKE  (r0 I:android.text.PrecomputedText$Params$Builder) = (r0 I:android.text.PrecomputedText$Params$Builder), (r6 I:int A[D('frequency' int)]) type: VIRTUAL call: android.text.PrecomputedText.Params.Builder.setHyphenationFrequency(int):android.text.PrecomputedText$Params$Builder A[MD:(int):android.text.PrecomputedText$Params$Builder (c)] (LINE:200)\l0x0016: INVOKE  (r0 I:android.text.PrecomputedText$Params$Builder) = \l  (r0 I:android.text.PrecomputedText$Params$Builder)\l  (r4 I:android.text.TextDirectionHeuristic A[D('textDir' android.text.TextDirectionHeuristic)])\l type: VIRTUAL call: android.text.PrecomputedText.Params.Builder.setTextDirection(android.text.TextDirectionHeuristic):android.text.PrecomputedText$Params$Builder A[MD:(android.text.TextDirectionHeuristic):android.text.PrecomputedText$Params$Builder (c)] (LINE:201)\l0x001a: INVOKE  (r0 I:android.text.PrecomputedText$Params) = (r0 I:android.text.PrecomputedText$Params$Builder) type: VIRTUAL call: android.text.PrecomputedText.Params.Builder.build():android.text.PrecomputedText$Params A[MD:():android.text.PrecomputedText$Params (c)] (LINE:202)\l0x001e: IPUT  (r0 I:android.text.PrecomputedText$Params), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mWrapped android.text.PrecomputedText$Params \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: IPUT  \l  (r3 I:android.text.TextPaint A[D('paint' android.text.TextPaint)])\l  (r2 I:androidx.core.text.PrecomputedTextCompat$Params)\l androidx.core.text.PrecomputedTextCompat.Params.mPaint android.text.TextPaint  (LINE:206)\l0x0026: IPUT  \l  (r4 I:android.text.TextDirectionHeuristic A[D('textDir' android.text.TextDirectionHeuristic)])\l  (r2 I:androidx.core.text.PrecomputedTextCompat$Params)\l androidx.core.text.PrecomputedTextCompat.Params.mTextDir android.text.TextDirectionHeuristic  (LINE:207)\l0x0028: IPUT  (r5 I:int A[D('strategy' int)]), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mBreakStrategy int  (LINE:208)\l0x002a: IPUT  (r6 I:int A[D('frequency' int)]), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mHyphenationFrequency int  (LINE:209)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|RETURN\l|0x002c: RETURN    (LINE:210)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:204)\l0x0022: IPUT  (r0 I:android.text.PrecomputedText$Params), (r2 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mWrapped android.text.PrecomputedText$Params \l}"];
MethodNode[shape=record,label="{void androidx.core.text.PrecomputedTextCompat.Params.\<init\>((r2 'this' I:androidx.core.text.PrecomputedTextCompat$Params A[IMMUTABLE_TYPE, THIS]), (r3 I:android.text.TextPaint A[D('paint' android.text.TextPaint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.text.TextDirectionHeuristic A[D('textDir' android.text.TextDirectionHeuristic), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('strategy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('frequency' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0021 \-\> B:14:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002c: r3 'paint' Landroid\/text\/TextPaint;\l  \-1 \-0x002c: r4 'textDir' Landroid\/text\/TextDirectionHeuristic;\l  \-1 \-0x002c: r5 'strategy' I\l  \-1 \-0x002c: r6 'frequency' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

