digraph "CFG forandroidx.core.text.PrecomputedTextCompat.Params.equals(Ljava\/lang\/Object;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:331)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|0x0001: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('o' java.lang.Object)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0004 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean)  (LINE:332)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)]) androidx.core.text.PrecomputedTextCompat$Params  (LINE:334)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|RETURN\l|0x0009: RETURN  (r2 I:boolean)  (LINE:335)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)])  (LINE:337)\l0x000b: CHECK_CAST (r1 I:androidx.core.text.PrecomputedTextCompat$Params) = (androidx.core.text.PrecomputedTextCompat$Params) (r1 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r3 I:boolean) = \l  (r5 I:androidx.core.text.PrecomputedTextCompat$Params)\l  (r1 I:androidx.core.text.PrecomputedTextCompat$Params A[D('other' androidx.core.text.PrecomputedTextCompat$Params)])\l type: VIRTUAL call: androidx.core.text.PrecomputedTextCompat.Params.equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):boolean A[MD:(androidx.core.text.PrecomputedTextCompat$Params):boolean (m)] (LINE:338)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0014 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:boolean)  (LINE:339)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|0x0014: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:341)\l0x0016: CONST  (r4 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:33:0x0023 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: IGET  (r3 I:android.text.TextDirectionHeuristic) = (r5 I:androidx.core.text.PrecomputedTextCompat$Params) androidx.core.text.PrecomputedTextCompat.Params.mTextDir android.text.TextDirectionHeuristic  (LINE:342)\l0x001c: INVOKE  (r4 I:android.text.TextDirectionHeuristic) = (r1 I:androidx.core.text.PrecomputedTextCompat$Params A[D('other' androidx.core.text.PrecomputedTextCompat$Params)]) type: VIRTUAL call: androidx.core.text.PrecomputedTextCompat.Params.getTextDirection():android.text.TextDirectionHeuristic A[MD:():android.text.TextDirectionHeuristic (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0023 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|RETURN\l|0x0022: RETURN  (r2 I:boolean)  (LINE:343)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:boolean)  (LINE:346)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.text.PrecomputedTextCompat.Params.equals((r5 'this' I:androidx.core.text.PrecomputedTextCompat$Params A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0009 \-\> B:18:?, CROSS_EDGE: B:27:0x0013 \-\> B:18:?, CROSS_EDGE: B:32:0x0022 \-\> B:18:?, CROSS_EDGE: B:33:0x0023 \-\> B:18:?, CROSS_EDGE: B:29:0x0018 \-\> B:33:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0023: r1 'other' Landroidx\/core\/text\/PrecomputedTextCompat$Params;\l  \-1 \-0x0023: r6 'o' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_18;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_18;
Node_33 -> Node_18;
}

