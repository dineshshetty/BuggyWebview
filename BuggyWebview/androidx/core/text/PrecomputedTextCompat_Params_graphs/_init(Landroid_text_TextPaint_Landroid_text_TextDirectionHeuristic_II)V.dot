digraph "CFG forandroidx.core.text.PrecomputedTextCompat.Params.\<init\>(Landroid\/text\/TextPaint;Landroid\/text\/TextDirectionHeuristic;II)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0007|if (android.os.Build.VERSION.SDK_INT \< 29) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|r2.mWrapped = new android.text.PrecomputedText.Params.Builder(r3).setBreakStrategy(r5).setHyphenationFrequency(r6).setTextDirection(r4).build()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|r2.mPaint = r3\lr2.mTextDir = r4\lr2.mBreakStrategy = r5\lr2.mHyphenationFrequency = r6\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|r2.mWrapped = null\l}"];
MethodNode[shape=record,label="{void androidx.core.text.PrecomputedTextCompat.Params.\<init\>((r2v0 'this' androidx.core.text.PrecomputedTextCompat$Params A[IMMUTABLE_TYPE, THIS]), (r3v0 'paint' android.text.TextPaint A[D('paint' android.text.TextPaint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'textDir' android.text.TextDirectionHeuristic A[D('textDir' android.text.TextDirectionHeuristic), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'strategy' int A[D('strategy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'frequency' int A[D('frequency' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0021 \-\> B:14:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

