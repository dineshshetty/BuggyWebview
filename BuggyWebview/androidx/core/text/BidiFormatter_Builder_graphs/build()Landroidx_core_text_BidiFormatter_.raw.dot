digraph "CFG forandroidx.core.text.BidiFormatter.Builder.build()Landroidx\/core\/text\/BidiFormatter;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mFlags int  (LINE:205)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0012 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: IGET  (r0 I:androidx.core.text.TextDirectionHeuristicCompat) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mTextDirectionHeuristicCompat androidx.core.text.TextDirectionHeuristicCompat \l0x0007: SGET  (r1 I:androidx.core.text.TextDirectionHeuristicCompat) =  androidx.core.text.BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC androidx.core.text.TextDirectionHeuristicCompat \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0012 \l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: IGET  (r0 I:boolean) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mIsRtlContext boolean  (LINE:207)\l0x000d: INVOKE  (r0 I:androidx.core.text.BidiFormatter) = (r0 I:boolean) type: STATIC call: androidx.core.text.BidiFormatter.Builder.getDefaultInstanceFromContext(boolean):androidx.core.text.BidiFormatter A[MD:(boolean):androidx.core.text.BidiFormatter (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:androidx.core.text.BidiFormatter) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:androidx.core.text.BidiFormatter) =  androidx.core.text.BidiFormatter  (LINE:209)\l0x0014: IGET  (r1 I:boolean) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mIsRtlContext boolean \l0x0016: IGET  (r2 I:int) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mFlags int \l0x0018: IGET  (r3 I:androidx.core.text.TextDirectionHeuristicCompat) = (r4 I:androidx.core.text.BidiFormatter$Builder) androidx.core.text.BidiFormatter.Builder.mTextDirectionHeuristicCompat androidx.core.text.TextDirectionHeuristicCompat \l0x001a: INVOKE  \l  (r0 I:androidx.core.text.BidiFormatter)\l  (r1 I:boolean)\l  (r2 I:int)\l  (r3 I:androidx.core.text.TextDirectionHeuristicCompat)\l type: DIRECT call: androidx.core.text.BidiFormatter.\<init\>(boolean, int, androidx.core.text.TextDirectionHeuristicCompat):void A[MD:(boolean, int, androidx.core.text.TextDirectionHeuristicCompat):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:androidx.core.text.BidiFormatter) \l}"];
MethodNode[shape=record,label="{public androidx.core.text.BidiFormatter androidx.core.text.BidiFormatter.Builder.build((r4 'this' I:androidx.core.text.BidiFormatter$Builder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001d \-\> B:11:?, CROSS_EDGE: B:13:0x0003 \-\> B:18:0x0012\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

