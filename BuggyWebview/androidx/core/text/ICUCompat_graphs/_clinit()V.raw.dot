digraph "CFG forandroidx.core.text.ICUCompat.\<clinit\>()V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:40)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"addLikelySubtags\" \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"libcore.icu.ICU\" \l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0008: CONST  (r5 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:33:0x0037 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0037|0x0037: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:52)\l0x0039: CONST  (r5 I:??[int, float, short, byte, char]) = (24 ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x003b|0x003b: IF  (r0 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:40:0x0055 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|RETURN\lORIG_RETURN\l|0x0055: RETURN    (LINE:61)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x003d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x004e, blocks: (B:35:0x003d), top: B:41:0x003d \}\lCatch: Exception \-\> 0x004e\l|0x003d: INVOKE  (r0 I:java.lang.Class) = (r2 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: Exception \-\> 0x004e, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c), TRY_ENTER] (LINE:55)\l0x0041: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x004e] (LINE:56)\l0x0043: CONST_CLASS  (r4 I:java.lang.Class\<java.util.Locale\>) =  java.util.Locale.class \l0x0045: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x004e]\l0x0047: INVOKE  (r1 I:java.lang.reflect.Method) = (r0 I:java.lang.Class A[D('clazz' java.lang.Class\<?\>)]), (r1 I:java.lang.String), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x004e, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x004b: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.text.ICUCompat.sAddLikelySubtagsMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x004e, TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0055: RETURN   A[SYNTHETIC] (LINE:61)\l}"];
Node_37 [shape=record,label="{37\:\ 0x004e|ExcHandler: Exception \-\> 0x004e\l|0x004e: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x004e] (LINE:57)\l}"];
Node_38 [shape=record,label="{38\:\ 0x004f|0x004f: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:58)\l0x0051: INVOKE  (r1 I:java.lang.IllegalStateException), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0054|0x0054: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_43 [shape=record,label="{43\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x002b, blocks: (B:28:0x000c), top: B:43:0x000c \}\lCatch: Exception \-\> 0x002b\l|0x000c: INVOKE  (r0 I:java.lang.Class) = (r2 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: Exception \-\> 0x002b, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c), TRY_ENTER] (LINE:42)\l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"getScript\"  (LINE:43)\l0x0012: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x002b]\l0x0014: CONST_CLASS  (r6 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0016: APUT  (r5 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x002b]\l0x0018: INVOKE  (r2 I:java.lang.reflect.Method) = (r0 I:java.lang.Class A[D('clazz' java.lang.Class\<?\>)]), (r2 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x002b, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x001c: SPUT  (r2 I:java.lang.reflect.Method) androidx.core.text.ICUCompat.sGetScriptMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x002b]\l0x001e: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x002b] (LINE:44)\l0x0020: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x0022: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x002b]\l0x0024: INVOKE  (r1 I:java.lang.reflect.Method) = (r0 I:java.lang.Class A[D('clazz' java.lang.Class\<?\>)]), (r1 I:java.lang.String), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x002b, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0028: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.text.ICUCompat.sAddLikelySubtagsMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x002b, TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x0055: RETURN   A[SYNTHETIC] (LINE:61)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|ExcHandler: Exception \-\> 0x002b\l|0x002b: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x002b] (LINE:45)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002c|0x002c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:46)\l0x002d: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.text.ICUCompat.sGetScriptMethod java.lang.reflect.Method \l0x002f: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.text.ICUCompat.sAddLikelySubtagsMethod java.lang.reflect.Method  (LINE:47)\l0x0031: CONST_STR  (r1 I:java.lang.String) =  \"ICUCompat\"  (LINE:50)\l0x0033: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x0055: RETURN   A[SYNTHETIC] (LINE:61)\l}"];
MethodNode[shape=record,label="{static void androidx.core.text.ICUCompat.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x003d \-\> B:40:0x0055, CROSS_EDGE: B:39:0x0054 \-\> B:25:?, CROSS_EDGE: B:41:0x003d \-\> B:37:0x004e, CROSS_EDGE: B:28:0x000c \-\> B:40:0x0055, CROSS_EDGE: B:31:0x002c \-\> B:40:0x0055, CROSS_EDGE: B:43:0x000c \-\> B:30:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x002a: r0 'clazz' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x002c\-0x0036: r0 'e' Ljava\/lang\/Exception;\l  0x0041\-0x004d: r0 'clazz' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x004f\-0x0055: r0 'e' Ljava\/lang\/Exception;\lTryCatch #0 \{Exception \-\> 0x004e, blocks: (B:35:0x003d), top: B:41:0x003d \}, TryCatch #1 \{Exception \-\> 0x002b, blocks: (B:28:0x000c), top: B:43:0x000c \}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_33;
Node_27 -> Node_43[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_40;
Node_34 -> Node_41[style=dashed];
Node_40 -> Node_25;
Node_41 -> Node_35;
Node_41 -> Node_37;
Node_35 -> Node_42;
Node_35 -> Node_47;
Node_42 -> Node_37;
Node_47 -> Node_25;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_25;
Node_43 -> Node_28;
Node_43 -> Node_30;
Node_28 -> Node_44;
Node_28 -> Node_46;
Node_44 -> Node_30;
Node_46 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_45;
Node_45 -> Node_25;
}

