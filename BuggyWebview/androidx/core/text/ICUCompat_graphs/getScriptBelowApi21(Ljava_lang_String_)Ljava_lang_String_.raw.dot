digraph "CFG forandroidx.core.text.ICUCompat.getScriptBelowApi21(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"ICUCompat\"  (LINE:116)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x0019, InvocationTargetException \-\> 0x0014, blocks: (B:18:0x0003, B:20:0x0007), top: B:28:0x0003 \}\lCatch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019\l|0x0003: SGET  (r2 I:java.lang.reflect.Method) =  androidx.core.text.ICUCompat.sGetScriptMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019, TRY_ENTER]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001e \l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0019, InvocationTargetException \-\> 0x0014, blocks: (B:18:0x0003, B:20:0x0007), top: B:28:0x0003 \}\lCatch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019\l|0x0007: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:117)\l0x0008: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019]\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('localeStr' java.lang.String)])\l A[Catch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019]\l0x000d: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.reflect.Method), (r1 I:java.lang.Object), (r3 I:java.lang.Object[] A[D('args' java.lang.Object[])]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)] (LINE:118)\l0x0011: CHECK_CAST (r2 I:java.lang.String) = (java.lang.String) (r2 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0014, IllegalAccessException \-\> 0x0019, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:java.lang.String) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.lang.String)  (LINE:127)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|ExcHandler: IllegalAccessException \-\> 0x0019\l|0x0019: MOVE_EXCEPTION  (r2 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0019] (LINE:120)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: INVOKE  (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.Throwable):int (c)] (LINE:122)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|ExcHandler: InvocationTargetException \-\> 0x0014\l|0x0014: MOVE_EXCEPTION  (r2 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0014] (LINE:123)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|0x0015: INVOKE  (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.Throwable):int (c)] (LINE:125)\l}"];
MethodNode[shape=record,label="{private static java.lang.String androidx.core.text.ICUCompat.getScriptBelowApi21((r5 I:java.lang.String A[D('localeStr' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x001e \-\> B:16:?, CROSS_EDGE: B:23:0x0015 \-\> B:27:0x001e, CROSS_EDGE: B:19:0x0005 \-\> B:27:0x001e, CROSS_EDGE: B:28:0x0003 \-\> B:24:0x0019, CROSS_EDGE: B:28:0x0003 \-\> B:22:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0014: r3 'args' [Ljava\/lang\/Object;\l  0x0015\-0x0019: r2 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x001a\-0x001d: r2 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x001e: r5 'localeStr' Ljava\/lang\/String;\lTryCatch #2 \{IllegalAccessException \-\> 0x0019, InvocationTargetException \-\> 0x0014, blocks: (B:18:0x0003, B:20:0x0007), top: B:28:0x0003 \}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_28;
Node_28 -> Node_18;
Node_28 -> Node_24;
Node_28 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_16;
Node_29 -> Node_24;
Node_29 -> Node_22;
Node_27 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_27;
}

