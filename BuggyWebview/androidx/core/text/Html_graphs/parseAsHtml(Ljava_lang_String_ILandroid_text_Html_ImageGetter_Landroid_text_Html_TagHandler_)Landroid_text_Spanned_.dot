digraph "CFG forandroidx.core.text.HtmlKt.parseAsHtml(Ljava\/lang\/String;ILandroid\/text\/Html$ImageGetter;Landroid\/text\/Html$TagHandler;)Landroid\/text\/Spanned;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\landroid.text.Spanned r1 = androidx.core.text.HtmlCompat.fromHtml(r3, r4, r5, r6)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r1, \"fromHtml(this, flags, imageGetter, tagHandler)\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return r1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final android.text.Spanned androidx.core.text.HtmlKt.parseAsHtml((r3v0 '$this$parseAsHtml' java.lang.String A[D('$this$parseAsHtml' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'flags' int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'imageGetter' android.text.Html$ImageGetter A[D('imageGetter' android.text.Html$ImageGetter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'tagHandler' android.text.Html$TagHandler A[D('tagHandler' android.text.Html$TagHandler), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

