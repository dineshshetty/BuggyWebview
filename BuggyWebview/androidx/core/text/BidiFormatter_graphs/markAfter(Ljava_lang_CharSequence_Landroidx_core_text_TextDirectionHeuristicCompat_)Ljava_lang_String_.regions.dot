digraph "CFG forandroidx.core.text.BidiFormatter.markAfter(Ljava\/lang\/CharSequence;Landroidx\/core\/text\/TextDirectionHeuristicCompat;)Ljava\/lang\/String;" {
subgraph cluster_Region_1448700171 {
label = "R(2:1|(2:(1:7)|(1:(2:(1:(2:(1:16)|(1:14)))|(1:17)))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|boolean boolean r0 = r5.isRtl(r4, 0, r4.length())\l}"];
subgraph cluster_Region_1163248722 {
label = "R(2:(1:7)|(1:(2:(1:(2:(1:16)|(1:14)))|(1:17))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_154185637 {
label = "IF [B:22:0x000b, B:23:0x000d, B:25:0x0014] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000b|if (r3.mIsRtlContext == false) goto L3\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|ADDED_TO_REGION\l|if (r0 != false) goto L6\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|ADDED_TO_REGION\l|if (getExitDir(r4) == 1) goto L6\l}"];
subgraph cluster_Region_260357402 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\l|return androidx.core.text.BidiFormatter.LRM_STRING\l}"];
}
}
subgraph cluster_Region_274303556 {
label = "R(1:(2:(1:(2:(1:16)|(1:14)))|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_1460132466 {
label = "R(2:(1:(2:(1:16)|(1:14)))|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1008460692 {
label = "IF [B:29:0x001b] THEN: R(1:(2:(1:16)|(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x001b|if (r3.mIsRtlContext == true) goto L11\l}"];
subgraph cluster_Region_383645024 {
label = "R(1:(2:(1:16)|(1:14)))";
node [shape=record,color=blue];
subgraph cluster_Region_1250580053 {
label = "R(2:(1:16)|(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1216907430 {
label = "IF [B:30:0x001d, B:32:0x0024] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001d|if (r0 == false) goto L15\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|ADDED_TO_REGION\l|if (getExitDir(r4) == (\-1)) goto L15\l}"];
subgraph cluster_Region_599245116 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0028|RETURN\l|return androidx.core.text.BidiFormatter.RLM_STRING\l}"];
}
}
subgraph cluster_Region_1087607197 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return androidx.core.text.BidiFormatter.EMPTY_STRING\l}"];
}
}
}
}
subgraph cluster_Region_962333202 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0029|RETURN\lORIG_RETURN\l|return androidx.core.text.BidiFormatter.EMPTY_STRING\l}"];
}
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000f}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0016}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0019}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001f}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0026}"];
MethodNode[shape=record,label="{private java.lang.String androidx.core.text.BidiFormatter.markAfter((r3v0 'this' androidx.core.text.BidiFormatter A[IMMUTABLE_TYPE, THIS]), (r4v0 'str' java.lang.CharSequence A[D('str' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'heuristic' androidx.core.text.TextDirectionHeuristicCompat A[D('heuristic' androidx.core.text.TextDirectionHeuristicCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0028 \-\> B:20:?, CROSS_EDGE: B:36:0x002b \-\> B:20:?, CROSS_EDGE: B:30:0x001d \-\> B:33:0x0026, CROSS_EDGE: B:29:0x001b \-\> B:35:0x0029, CROSS_EDGE: B:23:0x000d \-\> B:26:0x0016, CROSS_EDGE: B:22:0x000b \-\> B:28:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_28[style=dashed];
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_25 -> Node_26;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_20;
Node_29 -> Node_30;
Node_29 -> Node_35[style=dashed];
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_32 -> Node_33;
Node_32 -> Node_37[style=dashed];
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_35 -> Node_20;
Node_19 -> Node_21;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_31 -> Node_32;
Node_33 -> Node_34;
}

