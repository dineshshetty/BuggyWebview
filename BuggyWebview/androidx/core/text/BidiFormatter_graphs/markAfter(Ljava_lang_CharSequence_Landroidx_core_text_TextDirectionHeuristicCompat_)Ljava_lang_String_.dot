digraph "CFG forandroidx.core.text.BidiFormatter.markAfter(Ljava\/lang\/CharSequence;Landroidx\/core\/text\/TextDirectionHeuristicCompat;)Ljava\/lang\/String;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|boolean r0 = r5.isRtl(r4, 0, r4.length())\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|if (r3.mIsRtlContext != false) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|if (r0 != false) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f}"];
Node_25 [shape=record,label="{25\:\ 0x0014|if (getExitDir(r4) != 1) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016}"];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\l|return androidx.core.text.BidiFormatter.LRM_STRING\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0019}"];
Node_29 [shape=record,label="{29\:\ 0x001b|if (r3.mIsRtlContext == false) goto L17\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|if (r0 == false) goto L15\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f}"];
Node_32 [shape=record,label="{32\:\ 0x0024|if (getExitDir(r4) != (\-1)) goto L14\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return androidx.core.text.BidiFormatter.EMPTY_STRING\l}"];
Node_33 [shape=record,label="{33\:\ 0x0026}"];
Node_34 [shape=record,label="{34\:\ 0x0028|RETURN\l|return androidx.core.text.BidiFormatter.RLM_STRING\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029|RETURN\lORIG_RETURN\l|return androidx.core.text.BidiFormatter.EMPTY_STRING\l}"];
MethodNode[shape=record,label="{private java.lang.String androidx.core.text.BidiFormatter.markAfter((r3v0 'this' androidx.core.text.BidiFormatter A[IMMUTABLE_TYPE, THIS]), (r4v0 'str' java.lang.CharSequence A[D('str' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'heuristic' androidx.core.text.TextDirectionHeuristicCompat A[D('heuristic' androidx.core.text.TextDirectionHeuristicCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0028 \-\> B:20:?, CROSS_EDGE: B:36:0x002b \-\> B:20:?, CROSS_EDGE: B:30:0x001d \-\> B:33:0x0026, CROSS_EDGE: B:29:0x001b \-\> B:35:0x0029, CROSS_EDGE: B:23:0x000d \-\> B:26:0x0016, CROSS_EDGE: B:22:0x000b \-\> B:28:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_37 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_35 -> Node_20;
}

