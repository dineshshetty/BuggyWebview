digraph "CFG forandroidx.core.text.BidiFormatter.unicodeWrap(Ljava\/lang\/CharSequence;Landroidx\/core\/text\/TextDirectionHeuristicCompat;)Ljava\/lang\/CharSequence;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:456)\l0x0001: INVOKE  (r0 I:java.lang.CharSequence) = \l  (r1 I:androidx.core.text.BidiFormatter)\l  (r2 I:java.lang.CharSequence A[D('str' java.lang.CharSequence)])\l  (r3 I:androidx.core.text.TextDirectionHeuristicCompat A[D('heuristic' androidx.core.text.TextDirectionHeuristicCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat, boolean):java.lang.CharSequence A[MD:(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat, boolean):java.lang.CharSequence (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.core.text.BidiFormatter.unicodeWrap((r1 'this' I:androidx.core.text.BidiFormatter A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.CharSequence A[D('str' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.core.text.TextDirectionHeuristicCompat A[D('heuristic' androidx.core.text.TextDirectionHeuristicCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'str' Ljava\/lang\/CharSequence;\l  \-1 \-0x0005: r3 'heuristic' Landroidx\/core\/text\/TextDirectionHeuristicCompat;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

