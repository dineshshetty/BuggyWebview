digraph "CFG forandroidx.core.text.PrecomputedTextCompat.setSpan(Ljava\/lang\/Object;III)V" {
subgraph cluster_Region_1967543389 {
label = "R(1:(2:(1:11)|(1:(1:5)(1:8))))";
node [shape=record,color=blue];
subgraph cluster_Region_1802719685 {
label = "R(2:(1:11)|(1:(1:5)(1:8)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_539632716 {
label = "IF [B:15:0x0002] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|if ((r3 instanceof android.text.style.MetricAffectingSpan) != false) goto L10\l}"];
subgraph cluster_Region_295820758 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x001d|throw new java.lang.IllegalArgumentException(\"MetricAffectingSpan can not be set to PrecomputedText.\")\l}"];
}
}
subgraph cluster_Region_1451394819 {
label = "R(1:(1:5)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_663624047 {
label = "IF [B:17:0x0008] THEN: R(1:5) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0008|if (android.os.Build.VERSION.SDK_INT \>= 29) goto L5\l}"];
subgraph cluster_Region_1450660246 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000a|r2.mWrapped.setSpan(r3, r4, r5, r6)\l}"];
}
subgraph cluster_Region_1227319779 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0010|r2.mText.setSpan(r3, r4, r5, r6)\l}"];
}
}
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0000}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0004}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0015|ORIG_RETURN\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0016}"];
MethodNode[shape=record,label="{public void androidx.core.text.PrecomputedTextCompat.setSpan((r2v0 'this' androidx.core.text.PrecomputedTextCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 'what' java.lang.Object A[D('what' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'flags' int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:20:0x0015, CROSS_EDGE: B:22:0x001d \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.text.Spannable.setSpan(java.lang.Object, int, int, int):void\}]\l}"];
MethodNode -> Node_12;Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_22 -> Node_13;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_23 -> Node_13;
Node_20 -> Node_13;
Node_21 -> Node_22;
}

