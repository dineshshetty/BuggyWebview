digraph "CFG forandroidx.core.text.PrecomputedTextCompat.getSpans(IILjava\/lang\/Class;)[Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:707)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:14:0x000d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: IGET  (r0 I:android.text.PrecomputedText) = (r2 I:androidx.core.text.PrecomputedTextCompat) androidx.core.text.PrecomputedTextCompat.mWrapped android.text.PrecomputedText  (LINE:708)\l0x0008: INVOKE  (r0 I:java.lang.Object[]) = \l  (r0 I:android.text.PrecomputedText)\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('end' int)])\l  (r5 I:java.lang.Class A[D('type' java.lang.Class\<T\>)])\l type: VIRTUAL call: android.text.PrecomputedText.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:T[]) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|0x000d: IGET  (r0 I:android.text.Spannable) = (r2 I:androidx.core.text.PrecomputedTextCompat) androidx.core.text.PrecomputedTextCompat.mText android.text.Spannable  (LINE:710)\l0x000f: INVOKE  (r0 I:java.lang.Object[]) = \l  (r0 I:android.text.Spannable)\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('end' int)])\l  (r5 I:java.lang.Class A[D('type' java.lang.Class\<T\>)])\l type: INTERFACE call: android.text.Spannable.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:T[]) \l}"];
MethodNode[shape=record,label="{public T[] androidx.core.text.PrecomputedTextCompat.getSpans((r2 'this' I:androidx.core.text.PrecomputedTextCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Class\<T\> A[D('type' java.lang.Class\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0013 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(IILjava\/lang\/Class\<TT;\>;)[TT;\lDebug Info:\l  \-1 \-0x0013: r3 'start' I\l  \-1 \-0x0013: r4 'end' I\l  0x0000\-0x0013: r5 'type' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<TT;\>;\lMETHOD_OVERRIDE: [ClspMth\{\<T\> android.text.Spanned.getSpans(int, int, java.lang.Class\<T\>):T[]\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

