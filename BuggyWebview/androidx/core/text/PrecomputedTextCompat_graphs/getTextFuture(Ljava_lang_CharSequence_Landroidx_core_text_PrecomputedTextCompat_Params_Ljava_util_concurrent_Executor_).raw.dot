digraph "CFG forandroidx.core.text.PrecomputedTextCompat.getTextFuture(Ljava\/lang\/CharSequence;Landroidx\/core\/text\/PrecomputedTextCompat$Params;Ljava\/util\/concurrent\/Executor;)Ljava\/util\/concurrent\/Future;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask) =  androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask  (LINE:649)\l0x0002: INVOKE  \l  (r0 I:androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask)\l  (r4 I:androidx.core.text.PrecomputedTextCompat$Params A[D('params' androidx.core.text.PrecomputedTextCompat$Params)])\l  (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence)])\l type: DIRECT call: androidx.core.text.PrecomputedTextCompat.PrecomputedTextFutureTask.\<init\>(androidx.core.text.PrecomputedTextCompat$Params, java.lang.CharSequence):void A[MD:(androidx.core.text.PrecomputedTextCompat$Params, java.lang.CharSequence):void (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('executor' java.util.concurrent.Executor)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001d  (LINE:650)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: SGET  (r1 I:java.lang.Object) =  androidx.core.text.PrecomputedTextCompat.sLock java.lang.Object  (LINE:651)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: MONITOR_ENTER  (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x001a, blocks: (B:25:0x000a, B:27:0x000e, B:28:0x0015, B:29:0x0018), top: B:36:0x000a \}\lCatch: all \-\> 0x001a\l|0x000a: SGET  (r2 I:java.util.concurrent.Executor) =  androidx.core.text.PrecomputedTextCompat.sExecutor java.util.concurrent.Executor A[Catch: all \-\> 0x001a, TRY_ENTER] (LINE:652)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0015 \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|TryCatch #0 \{all \-\> 0x001a, blocks: (B:25:0x000a, B:27:0x000e, B:28:0x0015, B:29:0x0018), top: B:36:0x000a \}\lCatch: all \-\> 0x001a\l|0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:653)\l0x000f: INVOKE  (r2 I:java.util.concurrent.ExecutorService) = (r2 I:int) type: STATIC call: java.util.concurrent.Executors.newFixedThreadPool(int):java.util.concurrent.ExecutorService A[Catch: all \-\> 0x001a, MD:(int):java.util.concurrent.ExecutorService (c)]\l0x0013: SPUT  (r2 I:java.util.concurrent.Executor) androidx.core.text.PrecomputedTextCompat.sExecutor java.util.concurrent.Executor A[Catch: all \-\> 0x001a]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|TryCatch #0 \{all \-\> 0x001a, blocks: (B:25:0x000a, B:27:0x000e, B:28:0x0015, B:29:0x0018), top: B:36:0x000a \}\lCatch: all \-\> 0x001a\l|0x0015: SGET  (r2 I:java.util.concurrent.Executor) =  androidx.core.text.PrecomputedTextCompat.sExecutor java.util.concurrent.Executor A[Catch: all \-\> 0x001a] (LINE:655)\l0x0017: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('executor' java.util.concurrent.Executor)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|TryCatch #0 \{all \-\> 0x001a, blocks: (B:25:0x000a, B:27:0x000e, B:28:0x0015, B:29:0x0018), top: B:36:0x000a \}\lCatch: all \-\> 0x001a\l|0x0018: MONITOR_EXIT  (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x001a] (LINE:656)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: GOTO  \-\> 0x001d \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|ExcHandler: all \-\> 0x001a\l|0x001a: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001a]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|TRY_LEAVE\lCatch: all \-\> 0x001a\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|0x001d: INVOKE  \l  (r5 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor)])\l  (r0 I:java.lang.Runnable A[D('task' androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask)])\l type: INTERFACE call: java.util.concurrent.Executor.execute(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (c)] (LINE:658)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|RETURN\l|0x0020: RETURN  \l  (r0 I:java.util.concurrent.Future\<androidx.core.text.PrecomputedTextCompat\> A[D('task' androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask)])\l  (LINE:659)\l}"];
MethodNode[shape=record,label="{public static java.util.concurrent.Future\<androidx.core.text.PrecomputedTextCompat\> androidx.core.text.PrecomputedTextCompat.getTextFuture((r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.core.text.PrecomputedTextCompat$Params A[D('params' androidx.core.text.PrecomputedTextCompat$Params), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x001c \-\> B:20:?, CROSS_EDGE: B:26:0x000c \-\> B:28:0x0015, CROSS_EDGE: B:36:0x000a \-\> B:31:0x001a, CROSS_EDGE: B:22:0x0005 \-\> B:34:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0020: r0 'task' Landroidx\/core\/text\/PrecomputedTextCompat$PrecomputedTextFutureTask;\l  \-1 \-0x0020: r3 'charSequence' Ljava\/lang\/CharSequence;\l  \-1 \-0x0020: r4 'params' Landroidx\/core\/text\/PrecomputedTextCompat$Params;\l  \-1 \-0x0020: r5 'executor' Ljava\/util\/concurrent\/Executor;\lTryCatch #0 \{all \-\> 0x001a, blocks: (B:25:0x000a, B:27:0x000e, B:28:0x0015, B:29:0x0018), top: B:36:0x000a \}\lSIGNATURE: (Ljava\/lang\/CharSequence;Landroidx\/core\/text\/PrecomputedTextCompat$Params;Ljava\/util\/concurrent\/Executor;)Ljava\/util\/concurrent\/Future\<Landroidx\/core\/text\/PrecomputedTextCompat;\>;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_36;
Node_36 -> Node_25;
Node_36 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_37;
Node_30 -> Node_34;
Node_37 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_34 -> Node_35;
Node_35 -> Node_20;
}

