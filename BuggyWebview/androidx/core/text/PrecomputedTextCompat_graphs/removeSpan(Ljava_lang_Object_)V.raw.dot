digraph "CFG forandroidx.core.text.PrecomputedTextCompat.removeSpan(Ljava\/lang\/Object;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('what' java.lang.Object)]) android.text.style.MetricAffectingSpan  (LINE:689)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0016 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:693)\l0x0006: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:19:0x0010 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IGET  (r0 I:android.text.PrecomputedText) = (r2 I:androidx.core.text.PrecomputedTextCompat) androidx.core.text.PrecomputedTextCompat.mWrapped android.text.PrecomputedText  (LINE:694)\l0x000c: INVOKE  (r0 I:android.text.PrecomputedText), (r3 I:java.lang.Object A[D('what' java.lang.Object)]) type: VIRTUAL call: android.text.PrecomputedText.removeSpan(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN   A[SYNTHETIC] (LINE:698)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IGET  (r0 I:android.text.Spannable) = (r2 I:androidx.core.text.PrecomputedTextCompat) androidx.core.text.PrecomputedTextCompat.mText android.text.Spannable  (LINE:696)\l0x0012: INVOKE  (r0 I:android.text.Spannable), (r3 I:java.lang.Object A[D('what' java.lang.Object)]) type: INTERFACE call: android.text.Spannable.removeSpan(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN    (LINE:698)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:690)\l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"MetricAffectingSpan can not be removed from PrecomputedText.\" \l0x001a: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.core.text.PrecomputedTextCompat.removeSpan((r2 'this' I:androidx.core.text.PrecomputedTextCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('what' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:20:0x0015, CROSS_EDGE: B:22:0x001d \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r3 'what' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{android.text.Spannable.removeSpan(java.lang.Object):void\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_23 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

