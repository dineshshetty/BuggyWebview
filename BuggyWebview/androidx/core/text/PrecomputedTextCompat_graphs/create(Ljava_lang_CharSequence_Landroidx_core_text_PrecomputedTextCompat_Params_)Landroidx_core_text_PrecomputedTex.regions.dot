digraph "CFG forandroidx.core.text.PrecomputedTextCompat.create(Ljava\/lang\/CharSequence;Landroidx\/core\/text\/PrecomputedTextCompat$Params;)Landroidx\/core\/text\/PrecomputedTextCompat;" {
subgraph cluster_Region_1430843705 {
label = "R(2:1|(2:3|(2:(1:9)|(7:11|(3:13|(1:15)(1:18)|17)|21|(1:24)|26|(1:28)(1:(1:34))|31)))) | DECL_VAR: int paraEnd\l";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0000|androidx.core.util.Preconditions.checkNotNull(r14)\landroidx.core.util.Preconditions.checkNotNull(r15)\l}"];
subgraph cluster_TryCatchRegion_60229840 {
label = "Try: R(2:3|(2:(1:9)|(7:11|(3:13|(1:15)(1:18)|17)|21|(1:24)|26|(1:28)(1:(1:34))|31))) finally: R(3:35|36|37)";
node [shape=record,color=blue];
subgraph cluster_Region_1979940861 {
label = "R(2:3|(2:(1:9)|(7:11|(3:13|(1:15)(1:18)|17)|21|(1:24)|26|(1:28)(1:(1:34))|31)))";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0006|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|androidx.core.p003os.TraceCompat.beginSection(\"PrecomputedText\")     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
subgraph cluster_Region_1580242871 {
label = "R(2:(1:9)|(7:11|(3:13|(1:15)(1:18)|17)|21|(1:24)|26|(1:28)(1:(1:34))|31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1281582193 {
label = "IF [B:42:0x000f, B:44:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \>= 29) goto L5\l}"];
Node_44 [shape=record,label="{44\:\ 0x0013|ADDED_TO_REGION\l|if (r15.mWrapped != null) goto L7\l}"];
subgraph cluster_Region_2005476517 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0023|RETURN\l|return new androidx.core.text.PrecomputedTextCompat(android.text.PrecomputedText.create(r14, r15.mWrapped), r15)\l}"];
}
}
subgraph cluster_Region_248280463 {
label = "R(7:11|(3:13|(1:15)(1:18)|17)|21|(1:24)|26|(1:28)(1:(1:34))|31)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0024|TRY_ENTER\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|java.util.ArrayList java.util.ArrayList\<java.lang.Integer\> r0 = new java.util.ArrayList\<\>()     \/\/ Catch: java.lang.Throwable \-\> Lb7\lint int r2 = r14.length()     \/\/ Catch: java.lang.Throwable \-\> Lb7\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_614122869 {
label = "LOOP:0: (3:13|(1:15)(1:18)|17)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x002f|LOOP_START\lLOOP:0: B:49:0x002f\-\>B:54:0x003e\lPHI: r3 \l  PHI: (r3v1 'paraStart' int) = (r3v0 'paraStart' int), (r3v4 'paraStart' int) binds: [B:48:0x0024, B:54:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L13\l}"];
subgraph cluster_Region_503859542 {
label = "R(3:13|(1:15)(1:18)|17)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0031|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|int int r4 = android.text.TextUtils.indexOf(r14, (char) androidx.core.text.PrecomputedTextCompat.LINE_FEED, r3, r2)     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
subgraph cluster_IfRegion_817474803 {
label = "IF [B:51:0x0038] THEN: R(1:15) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0038|if (r4 \< 0) goto L15\l}"];
subgraph cluster_Region_2013555273 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x003a|r1 = r2\l}"];
}
subgraph cluster_Region_1115322108 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x003c|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|int r1 = r4 + 1     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
}
}
Node_54 [shape=record,label="{54\:\ 0x003e|LOOP_END\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lLOOP:0: B:49:0x002f\-\>B:54:0x003e\lCatch: all \-\> 0x00b7\lPHI: r1 \l  PHI: (r1v4 'paraEnd' int) = (r1v3 'paraEnd' int), (r1v5 'paraEnd' int) binds: [B:73:0x003e, B:74:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r0.add(java.lang.Integer.valueOf(r1))     \/\/ Catch: java.lang.Throwable \-\> Lb7\lr3 = r1\l}"];
}
}
Node_55 [shape=record,label="{55\:\ 0x0047|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|int int r3 = r0.size()     \/\/ Catch: java.lang.Throwable \-\> Lb7\lint[] int[] r3 = new int[r3]     \/\/ Catch: java.lang.Throwable \-\> Lb7\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_767698369 {
label = "LOOP:1: (1:24)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0052|if (r4 \< r0.size()) goto L24\l}"];
subgraph cluster_Region_1226285525 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0054|LOOP_END\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lLOOP:1: B:56:0x004e\-\>B:58:0x0054\lCatch: all \-\> 0x00b7\l|r3[r4] = r0.get(r4).intValue()     \/\/ Catch: java.lang.Throwable \-\> Lb7\lr4++     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
}
}
Node_59 [shape=record,label="{59\:\ 0x0063|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|int int r4 = android.os.Build.VERSION.SDK_INT     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
subgraph cluster_IfRegion_1146397861 {
label = "IF [B:60:0x0067] THEN: R(1:28) ELSE: R(1:(1:34))";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0067|if (r4 \>= 23) goto L28\l}"];
subgraph cluster_Region_446189886 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0069|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|android.text.StaticLayout.Builder.obtain(r14, 0, r14.length(), r15.getTextPaint(), Integer.MAX_VALUE).setBreakStrategy(r15.getBreakStrategy()).setHyphenationFrequency(r15.getHyphenationFrequency()).setTextDirection(r15.getTextDirection()).build()     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
}
subgraph cluster_Region_1087369461 {
label = "R(1:(1:34)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_391660657 {
label = "IF [B:63:0x0099] THEN: R(1:34) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0099|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L34\l}"];
subgraph cluster_Region_692774451 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x009b|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l|new android.text.StaticLayout(r14, r15.getTextPaint(), Integer.MAX_VALUE, android.text.Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false)     \/\/ Catch: java.lang.Throwable \-\> Lb7\l}"];
}
}
}
}
Node_67 [shape=record,label="{67\:\ 0x00b6|RETURN\l|return new androidx.core.text.PrecomputedTextCompat(r14, r15, r3)\l}"];
}
}
}
subgraph cluster_Region_1904427909 {
label = "R(3:35|36|37) | ExcHandler: all \-\> 0x00b7\l";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x00b7|ExcHandler: all \-\> 0x00b7\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b8|FINALLY_INSNS\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_70 [shape=record,label="{70\:\ 0x00bb|throw r0\l}"];
}
}
}
subgraph cluster_Region_1904427909 {
label = "R(3:35|36|37) | ExcHandler: all \-\> 0x00b7\l";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x00b7|ExcHandler: all \-\> 0x00b7\l}"];
Node_69 [shape=record,label="{69\:\ 0x00b8|FINALLY_INSNS\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_70 [shape=record,label="{70\:\ 0x00bb|throw r0\l}"];
}
Node_38 [shape=record,color=red,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0011|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0015|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0020|DONT_GENERATE\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x003e|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x003e|SYNTHETIC\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0047|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x004e|LOOP_START\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lLOOP:1: B:56:0x004e\-\>B:58:0x0054\lCatch: all \-\> 0x00b7\lPHI: r4 \l  PHI: (r4v1 'i' int) = (r4v0 'i' int), (r4v10 'i' int) binds: [B:55:0x0047, B:58:0x0054] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0063|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x00ae|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x00b3|DONT_GENERATE\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0095|TryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lCatch: all \-\> 0x00b7\l}"];
MethodNode[shape=record,label="{public static androidx.core.text.PrecomputedTextCompat androidx.core.text.PrecomputedTextCompat.create((r14v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'params' androidx.core.text.PrecomputedTextCompat$Params A[D('params' androidx.core.text.PrecomputedTextCompat$Params), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:54:0x003e \-\> B:49:0x002f, CROSS_EDGE: B:53:0x003c \-\> B:54:0x003e, BACK_EDGE: B:58:0x0054 \-\> B:56:0x004e, CROSS_EDGE: B:67:0x00b6 \-\> B:39:?, CROSS_EDGE: B:64:0x009b \-\> B:65:0x00ae, CROSS_EDGE: B:63:0x0099 \-\> B:65:0x00ae, CROSS_EDGE: B:42:0x000f \-\> B:48:0x0024, CROSS_EDGE: B:70:0x00bb \-\> B:39:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x00b7, blocks: (B:41:0x0006, B:43:0x0011, B:45:0x0015, B:48:0x0024, B:50:0x0031, B:54:0x003e, B:53:0x003c, B:55:0x0047, B:56:0x004e, B:58:0x0054, B:59:0x0063, B:61:0x0069, B:65:0x00ae, B:62:0x0095, B:64:0x009b), top: B:71:0x0006 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_38;Node_40 -> Node_71;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_48[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_48[style=dashed];
Node_47 -> Node_39;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_72[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_53[style=dashed];
Node_52 -> Node_74;
Node_53 -> Node_73;
Node_54 -> Node_49;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_57 -> Node_75[style=dashed];
Node_58 -> Node_56;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_60 -> Node_62[style=dashed];
Node_61 -> Node_65;
Node_63 -> Node_64;
Node_63 -> Node_65[style=dashed];
Node_64 -> Node_65;
Node_67 -> Node_39;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_39;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_39;
Node_38 -> Node_40;
Node_71 -> Node_41;
Node_71 -> Node_68;
Node_43 -> Node_44;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_74 -> Node_54;
Node_73 -> Node_54;
Node_72 -> Node_55;
Node_56 -> Node_57;
Node_75 -> Node_59;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_62 -> Node_63;
}

