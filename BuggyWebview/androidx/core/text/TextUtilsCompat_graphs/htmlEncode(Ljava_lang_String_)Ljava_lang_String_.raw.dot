digraph "CFG forandroidx.core.text.TextUtilsCompat.htmlEncode(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:47)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:33:0x000b \l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.String A[D('s' java.lang.String)]) type: STATIC call: android.text.TextUtils.htmlEncode(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)] (LINE:48)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:java.lang.String) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:50)\l0x000d: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0010: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:52)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|LOOP_START\lLOOP:0: B:34:0x0011\-\>B:44:0x0040\l|0x0011: INVOKE  (r2 I:int) = (r4 I:java.lang.String A[D('s' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|0x0015: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:47:0x0043 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|0x0017: INVOKE  (r2 I:char) = (r4 I:java.lang.String A[D('s' java.lang.String)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.lang.String.charAt(int):char A[MD:(int):char (c)] (LINE:53)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|0x001b: SWITCH  (r2 I:?? A[D('c' char)])\l case 34: goto B:43:0x003a\l case 38: goto B:42:0x0034\l case 39: goto B:41:0x002e\l case 60: goto B:40:0x0028\l case 62: goto B:39:0x0022\l default: goto B:38:0x001e  (LINE:54)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|0x001e: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r2 I:char A[D('c' char)]) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)] (LINE:76)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0040|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0040|LOOP_END\lLOOP:0: B:34:0x0011\-\>B:44:0x0040\l|0x0040: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:52)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0022|0x0022: CONST_STR  (r3 I:java.lang.String) =  \"&gt;\"  (LINE:59)\l0x0024: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0040|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|0x0028: CONST_STR  (r3 I:java.lang.String) =  \"&lt;\"  (LINE:56)\l0x002a: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0040|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x002e|0x002e: CONST_STR  (r3 I:java.lang.String) =  \"&#39;\"  (LINE:70)\l0x0030: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0040|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|0x0034: CONST_STR  (r3 I:java.lang.String) =  \"&amp;\"  (LINE:62)\l0x0036: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0040|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x003a|0x003a: CONST_STR  (r3 I:java.lang.String) =  \"&quot;\"  (LINE:73)\l0x003c: INVOKE  (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0040|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0043|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0043|0x0043: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:79)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0047|RETURN\l|0x0047: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String androidx.core.text.TextUtilsCompat.htmlEncode((r4 I:java.lang.String A[D('s' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0040 \-\> B:34:0x0011, CROSS_EDGE: B:39:0x0022 \-\> B:44:0x0040, CROSS_EDGE: B:40:0x0028 \-\> B:44:0x0040, CROSS_EDGE: B:41:0x002e \-\> B:44:0x0040, CROSS_EDGE: B:42:0x0034 \-\> B:44:0x0040, CROSS_EDGE: B:43:0x003a \-\> B:44:0x0040, CROSS_EDGE: B:46:0x0047 \-\> B:28:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0043: r1 'i' I\l  0x001b\-0x0043: r2 'c' C\l  0x0010\-0x005d: r0 'sb' Ljava\/lang\/StringBuilder;\l  \-1 \-0x005d: r4 's' Ljava\/lang\/String;\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_47;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_37 -> Node_40;
Node_37 -> Node_41;
Node_37 -> Node_42;
Node_37 -> Node_43;
Node_38 -> Node_49;
Node_49 -> Node_44;
Node_44 -> Node_34;
Node_39 -> Node_50;
Node_50 -> Node_44;
Node_40 -> Node_51;
Node_51 -> Node_44;
Node_41 -> Node_52;
Node_52 -> Node_44;
Node_42 -> Node_53;
Node_53 -> Node_44;
Node_43 -> Node_48;
Node_48 -> Node_44;
Node_47 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_28;
}

