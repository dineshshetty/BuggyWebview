digraph "CFG forandroidx.core.text.SpannableStringKt.clearSpans(Landroid\/text\/Spannable;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r8 I:java.lang.Object A[D('$this$clearSpans' android.text.Spannable)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('$this$clearSpans' android.text.Spannable)])  (LINE:34)\l0x0007: CHECK_CAST (r1 I:android.text.Spanned) = (android.text.Spanned) (r1 I:??[OBJECT, ARRAY]) \l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:70)\l0x000c: INVOKE  (r3 I:int) = (r1 I:android.text.Spanned A[D('$this$getSpans_u24default$iv' android.text.Spanned)]) type: INTERFACE call: android.text.Spanned.length():int A[MD:():int (c)] (LINE:71)\l0x0010: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:69)\l0x0011: CONST_CLASS  (r5 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class  (LINE:72)\l0x0013: INVOKE  (r5 I:java.lang.Object[]) = \l  (r1 I:android.text.Spanned A[D('$this$getSpans_u24default$iv' android.text.Spanned)])\l  (r2 I:int A[D('start$iv' int)])\l  (r3 I:int A[D('end$iv' int)])\l  (r5 I:java.lang.Class)\l type: INTERFACE call: android.text.Spanned.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l0x0017: CONST_STR  (r6 I:java.lang.String) =  \"getSpans(start, end, T::class.java)\" \l0x0019: INVOKE  (r5 I:java.lang.Object), (r6 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x001c: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('$this$getSpans_u24default$iv' android.text.Spanned)]) = (r5 I:??[OBJECT, ARRAY])  (LINE:34)\l0x001d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('$this$forEach$iv' java.lang.Object[])])  (LINE:73)\l0x001f: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|LOOP_START\lLOOP:0: B:3:0x0020\-\>B:4:0x0022\l|0x0020: IF  (r4 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:7:0x002d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|LOOP_END\lLOOP:0: B:3:0x0020\-\>B:4:0x0022\l|0x0022: AGET  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('$this$forEach$iv' java.lang.Object[])]), (r4 I:??[int, short, byte, char]) \l0x0024: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x0025: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r8 I:android.text.Spannable A[D('$this$clearSpans' android.text.Spannable)])\l  (r6 I:java.lang.Object A[D('it' java.lang.Object)])\l type: INTERFACE call: android.text.Spannable.removeSpan(java.lang.Object):void A[MD:(java.lang.Object):void (c)] (LINE:34)\l0x0029: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:34)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void androidx.core.text.SpannableStringKt.clearSpans((r8 I:android.text.Spannable A[D('$this$clearSpans' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | BACK_EDGE: B:4:0x0022 \-\> B:3:0x0020\lDebug Info:\l  0x0009\-0x001c: r1 '$this$getSpans_u24default$iv' Landroid\/text\/Spanned;\l  0x000b\-0x001c: r2 'start$iv' I\l  0x0010\-0x001c: r3 'end$iv' I\l  0x0011\-0x001c: r4 '$i$f$getSpans' I\l  0x0025\-0x0029: r6 'it' Ljava\/lang\/Object;\l  0x0026\-0x0029: r7 '$i$a$\-forEach\-SpannableStringKt$clearSpans$1' I\l  0x0024\-0x002c: r5 'element$iv' Ljava\/lang\/Object;\l  0x001d\-0x002d: r1 '$this$forEach$iv' [Ljava\/lang\/Object;\l  0x001e\-0x002d: r2 '$i$f$forEach' I\l  0x0006\-0x002d: r0 '$i$f$clearSpans' I\l  \-1 \-0x002d: r8 '$this$clearSpans' Landroid\/text\/Spannable;\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [34=4]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

