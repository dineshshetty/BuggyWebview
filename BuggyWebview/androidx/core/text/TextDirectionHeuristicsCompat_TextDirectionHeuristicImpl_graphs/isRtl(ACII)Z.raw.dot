digraph "CFG forandroidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl.isRtl([CII)Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.nio.CharBuffer) = (r2 I:char[] A[D('array' char[])]) type: STATIC call: java.nio.CharBuffer.wrap(char[]):java.nio.CharBuffer A[MD:(char[]):java.nio.CharBuffer (c)] (LINE:125)\l0x0004: INVOKE  (r0 I:boolean) = \l  (r1 I:androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl)\l  (r0 I:java.lang.CharSequence)\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('count' int)])\l type: VIRTUAL call: androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl.isRtl(java.lang.CharSequence, int, int):boolean A[MD:(java.lang.CharSequence, int, int):boolean (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.text.TextDirectionHeuristicsCompat.TextDirectionHeuristicImpl.isRtl((r1 'this' I:androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:char[] A[D('array' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'array' [C\l  \-1 \-0x0008: r3 'start' I\l  \-1 \-0x0008: r4 'count' I\lMETHOD_OVERRIDE: [androidx.core.text.TextDirectionHeuristicCompat.isRtl(char[], int, int):boolean]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

