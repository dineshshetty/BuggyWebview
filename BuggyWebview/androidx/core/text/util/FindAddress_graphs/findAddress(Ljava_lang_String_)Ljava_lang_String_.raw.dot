digraph "CFG forandroidx.core.text.util.FindAddress.findAddress(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:java.util.regex.Pattern) =  androidx.core.text.util.FindAddress.sHouseNumberRe java.util.regex.Pattern  (LINE:500)\l0x0002: INVOKE  (r0 I:java.util.regex.Matcher) = (r0 I:java.util.regex.Pattern), (r4 I:java.lang.CharSequence A[D('content' java.lang.String)]) type: VIRTUAL call: java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher A[MD:(java.lang.CharSequence):java.util.regex.Matcher (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:501)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|LOOP_START\lLOOP:0: B:25:0x0007\-\>B:41:0x0007\l|0x0007: INVOKE  (r2 I:boolean) = (r0 I:java.util.regex.Matcher A[D('houseNumberMatcher' java.util.regex.Matcher)]), (r1 I:int A[D('start' int)]) type: VIRTUAL call: java.util.regex.Matcher.find(int):boolean A[MD:(int):boolean (c)] (LINE:502)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x002e \l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:503)\l0x000e: INVOKE  (r2 I:java.lang.String) = (r0 I:java.util.regex.Matcher A[D('houseNumberMatcher' java.util.regex.Matcher)]), (r2 I:int) type: VIRTUAL call: java.util.regex.Matcher.group(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0012: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) type: STATIC call: androidx.core.text.util.FindAddress.checkHouseNumber(java.lang.String):boolean A[MD:(java.lang.String):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0029 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0029|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: INVOKE  (r1 I:int A[D('start' int)]) = (r0 I:java.util.regex.Matcher A[D('houseNumberMatcher' java.util.regex.Matcher)]) type: VIRTUAL call: java.util.regex.Matcher.end():int A[MD:():int (c)] (LINE:511)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0007|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0007|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x0007\-\>B:41:0x0007\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: INVOKE  (r1 I:int A[D('start' int)]) = (r0 I:java.util.regex.Matcher A[D('houseNumberMatcher' java.util.regex.Matcher)]) type: VIRTUAL call: java.util.regex.Matcher.start():int A[MD:():int (c)] (LINE:504)\l0x001c: INVOKE  (r2 I:int) = \l  (r4 I:java.lang.String A[D('content' java.lang.String)])\l  (r0 I:java.util.regex.MatchResult A[D('houseNumberMatcher' java.util.regex.Matcher)])\l type: STATIC call: androidx.core.text.util.FindAddress.attemptMatch(java.lang.String, java.util.regex.MatchResult):int A[MD:(java.lang.String, java.util.regex.MatchResult):int (m)] (LINE:505)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|0x0020: IF  (r2 I:??[int, byte, short, char] A[D('end' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:33:0x0027  (LINE:506)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: NEG  (r1 I:int A[D('start' int)]) = (r2 I:int A[D('end' int)])  (LINE:509)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0007|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: INVOKE  (r3 I:java.lang.String) = (r4 I:java.lang.String A[D('content' java.lang.String)]), (r1 I:int A[D('start' int)]), (r2 I:int A[D('end' int)]) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)] (LINE:507)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|RETURN\l|0x0026: RETURN  (r3 I:java.lang.String) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x002e|RETURN\l|0x002e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:514)\l0x002f: RETURN  (r2 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String androidx.core.text.util.FindAddress.findAddress((r4 I:java.lang.String A[D('content' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0027 \-\> B:25:0x0007, BACK_EDGE: B:34:0x0029 \-\> B:25:0x0007, CROSS_EDGE: B:36:0x002f \-\> B:23:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0028: r2 'end' I\l  0x0006\-0x002f: r0 'houseNumberMatcher' Ljava\/util\/regex\/Matcher;\l  0x0007\-0x002f: r1 'start' I\l  \-1 \-0x002f: r4 'content' Ljava\/lang\/String;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_28 -> Node_38;
Node_28 -> Node_40[style=dashed];
Node_38 -> Node_34;
Node_34 -> Node_42;
Node_42 -> Node_41;
Node_41 -> Node_25;
Node_40 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_33;
Node_30 -> Node_37[style=dashed];
Node_33 -> Node_43;
Node_43 -> Node_41;
Node_37 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_23;
Node_39 -> Node_35;
Node_35 -> Node_23;
}

