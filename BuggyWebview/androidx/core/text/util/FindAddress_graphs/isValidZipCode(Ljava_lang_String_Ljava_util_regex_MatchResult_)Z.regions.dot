digraph "CFG forandroidx.core.text.util.FindAddress.isValidZipCode(Ljava\/lang\/String;Ljava\/util\/regex\/MatchResult;)Z" {
subgraph cluster_Region_1804388848 {
label = "R(1:(2:(1:3)|(3:5|(1:(2:(1:19)|(2:7|(2:(2:11|1)|(1:9)))))|13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1428036283 {
label = "R(2:(1:3)|(3:5|(1:(2:(1:19)|(2:7|(2:(2:11|1)|(1:9)))))|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1469340439 {
label = "IF [B:25:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0001|if (r4 == null) goto L3\l}"];
subgraph cluster_Region_1220535970 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0003|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1762884872 {
label = "R(3:5|(1:(2:(1:19)|(2:7|(2:(2:11|1)|(1:9)))))|13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0004|int int r1 = r4.groupCount()\l}"];
subgraph cluster_LoopRegion_1173447948 {
label = "LOOP:0: (1:(2:(1:19)|(2:7|(2:(2:11|1)|(1:9)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1612674251 {
label = "R(1:(2:(1:19)|(2:7|(2:(2:11|1)|(1:9)))))";
node [shape=record,color=blue];
subgraph cluster_Region_363251516 {
label = "R(2:(1:19)|(2:7|(2:(2:11|1)|(1:9))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1524473063 {
label = "IF [B:28:0x0008] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0008|LOOP_START\lLOOP:0: B:28:0x0008\-\>B:32:0x0014\lPHI: r1 \l  PHI: (r1v1 'stateIndex' int) = (r1v0 'stateIndex' int), (r1v5 'stateIndex' int) binds: [B:27:0x0004, B:32:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \<= 0) goto L19\l}"];
subgraph cluster_Region_580631004 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0016|SYNTHETIC\lEDGE_INSN: B:41:0x0016\-\>B:33:0x0016 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_676610441 {
label = "R(2:7|(2:(2:11|1)|(1:9)))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x000a|int int r2 = r1 \- 1\l}"];
subgraph cluster_Region_1812754822 {
label = "R(2:(2:11|1)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_289762419 {
label = "IF [B:30:0x0010] THEN: R(2:11|1) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0010|if (r4.group(r1) != null) goto L10\l}"];
subgraph cluster_Region_1697353824 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0012|EDGE_INSN: B:31:0x0012\-\>B:33:0x0016 ?: BREAK  \l|r1 = r2\l}"];
Node_InsnContainer_2007955936 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_2093803142 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0014|LOOP_END\lLOOP:0: B:28:0x0008\-\>B:32:0x0014\l|r1 = r2\l}"];
}
}
}
}
}
}
Node_34 [shape=record,label="{34\:\ 0x0020|RETURN\l|return androidx.core.text.util.FindAddress.sZipCodeRe.matcher(r3).matches() && androidx.core.text.util.FindAddress.sStateZipCodeRanges[r1].matches(r3)\l}"];
}
}
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0012|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0016|EDGE_INSN: B:31:0x0012\-\>B:33:0x0016 ?: BREAK  , EDGE_INSN: B:41:0x0016\-\>B:33:0x0016 ?: BREAK  \lPHI: r1 \l  PHI: (r1v2 'stateIndex' int) = (r1v1 'stateIndex' int), (r1v4 'stateIndex' int) binds: [B:41:0x0016, B:31:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0022}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x002a|REMOVE\lADDED_TO_REGION\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x002c|ORIG_RETURN\l}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.text.util.FindAddress.isValidZipCode((r3v0 'zipCode' java.lang.String A[D('zipCode' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'stateMatch' java.util.regex.MatchResult A[D('stateMatch' java.util.regex.MatchResult), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x002f \-\> B:23:?, CROSS_EDGE: B:36:0x002a \-\> B:39:0x002f, CROSS_EDGE: B:34:0x0020 \-\> B:39:0x002f, BACK_EDGE: B:32:0x0014 \-\> B:28:0x0008, CROSS_EDGE: B:28:0x0008 \-\> B:33:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_41;
Node_41 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_32[style=dashed];
Node_30 -> Node_40;
Node_31 -> Node_33;
Node_32 -> Node_28;
Node_34 -> Node_35;
Node_34 -> Node_42;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_40 -> Node_31;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_43;
Node_37 -> Node_23;
Node_43 -> Node_23;
Node_42 -> Node_23;
}

