digraph "CFG forandroidx.core.text.util.LinkifyCompat.addLinks(Landroid\/text\/Spannable;I)Z" {
Node_41 [shape=record,label="{41\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: androidx.core.text.util.LinkifyCompat.shouldAddLinksFallbackToFramework():boolean A[MD:():boolean (m)] (LINE:93)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x000b \l}"];
Node_45 [shape=record,label="{45\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]), (r11 I:int A[D('mask' int)]) type: STATIC call: android.text.util.Linkify.addLinks(android.text.Spannable, int):boolean A[MD:(android.text.Spannable, int):boolean (c)] (LINE:94)\l}"];
Node_46 [shape=record,label="{46\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_42 [shape=record,label="{42\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:96)\l}"];
Node_48 [shape=record,label="{48\:\ 0x000c|0x000c: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mask' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x000f \l}"];
Node_49 [shape=record,label="{49\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:boolean)  (LINE:97)\l}"];
Node_50 [shape=record,label="{50\:\ 0x000f|0x000f: INVOKE  (r1 I:int) = (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]) type: INTERFACE call: android.text.Spannable.length():int A[MD:():int (s)] (LINE:100)\l0x0013: CONST_CLASS  (r2 I:java.lang.Class\<android.text.style.URLSpan\>) =  android.text.style.URLSpan.class \l0x0015: INVOKE  (r1 I:java.lang.Object[]) = (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]), (r0 I:int), (r1 I:int), (r2 I:java.lang.Class) type: INTERFACE call: android.text.Spannable.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l0x0019: CHECK_CAST (r1 I:android.text.style.URLSpan[]) = (android.text.style.URLSpan[]) (r1 I:??[OBJECT, ARRAY]) \l0x001b: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[] A[D('old' android.text.style.URLSpan[])])  (LINE:102)\l0x001c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_51 [shape=record,label="{51\:\ 0x001e|LOOP_START\lLOOP:0: B:51:0x001e\-\>B:52:0x0020\l|0x001e: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:76:0x0028 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0020|LOOP_END\lLOOP:0: B:51:0x001e\-\>B:52:0x0020\l|0x0020: AGET  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('old' android.text.style.URLSpan[])]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:103)\l0x0022: INVOKE  (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]), (r4 I:java.lang.Object) type: INTERFACE call: android.text.Spannable.removeSpan(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l0x0025: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int)  (LINE:102)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0028|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0028|0x0028: ARITH  (r2 I:??[int, boolean] A[D('i' int)]) = (r11 I:??[int, boolean, short, byte, char] A[D('mask' int)]) & (4 ??[int, float, short, byte, char])  (LINE:106)\l}"];
Node_54 [shape=record,label="{54\:\ 0x002a|0x002a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0030 \l}"];
Node_55 [shape=record,label="{55\:\ 0x002c|0x002c: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:107)\l0x002d: INVOKE  (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]), (r2 I:int) type: STATIC call: android.text.util.Linkify.addLinks(android.text.Spannable, int):boolean A[MD:(android.text.Spannable, int):boolean (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0030|0x0030: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:110)\l0x0032: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0035: ARITH  (r4 I:??[int, boolean]) = (r11 I:??[int, boolean, short, byte, char] A[D('mask' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:112)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0037|0x0037: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x004d \l}"];
Node_58 [shape=record,label="{58\:\ 0x0039|0x0039: SGET  (r6 I:java.util.regex.Pattern) =  androidx.core.util.PatternsCompat.AUTOLINK_WEB_URL java.util.regex.Pattern  (LINE:113)\l0x003b: CONST_STR  (r4 I:java.lang.String) =  \"http:\/\/\" \l0x003d: CONST_STR  (r5 I:java.lang.String) =  \"https:\/\/\" \l0x003f: CONST_STR  (r7 I:java.lang.String) =  \"rtsp:\/\/\" \l0x0041: FILLED_NEW_ARRAY  (r7 I:java.lang.String[]) = (r4 I:java.lang.String), (r5 I:java.lang.String), (r7 I:java.lang.String) elemType: java.lang.String \l0x0045: SGET  (r8 I:android.text.util.Linkify$MatchFilter) =  android.text.util.Linkify.sUrlMatchFilter android.text.util.Linkify$MatchFilter \l0x0047: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0048: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)]) \l0x0049: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('text' android.text.Spannable)]) \l0x004a: INVOKE  \l  (r4 I:java.util.ArrayList)\l  (r5 I:android.text.Spannable)\l  (r6 I:java.util.regex.Pattern)\l  (r7 I:java.lang.String[])\l  (r8 I:android.text.util.Linkify$MatchFilter)\l  (r9 I:android.text.util.Linkify$TransformFilter)\l type: STATIC call: androidx.core.text.util.LinkifyCompat.gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void A[MD:(java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|0x004d: ARITH  (r4 I:??[int, boolean]) = (r11 I:??[int, boolean, short, byte, char] A[D('mask' int)]) & (2 ??[int, float, short, byte, char])  (LINE:118)\l}"];
Node_60 [shape=record,label="{60\:\ 0x004f|0x004f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0060 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0051|0x0051: SGET  (r6 I:java.util.regex.Pattern) =  androidx.core.util.PatternsCompat.AUTOLINK_EMAIL_ADDRESS java.util.regex.Pattern  (LINE:119)\l0x0053: CONST_STR  (r4 I:java.lang.String) =  \"mailto:\" \l0x0055: FILLED_NEW_ARRAY  (r7 I:java.lang.String[]) = (r4 I:java.lang.String) elemType: java.lang.String \l0x0059: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005a: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)]) \l0x005c: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('text' android.text.Spannable)]) \l0x005d: INVOKE  \l  (r4 I:java.util.ArrayList)\l  (r5 I:android.text.Spannable)\l  (r6 I:java.util.regex.Pattern)\l  (r7 I:java.lang.String[])\l  (r8 I:android.text.util.Linkify$MatchFilter)\l  (r9 I:android.text.util.Linkify$TransformFilter)\l type: STATIC call: androidx.core.text.util.LinkifyCompat.gatherLinks(java.util.ArrayList, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void A[MD:(java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>, android.text.Spannable, java.util.regex.Pattern, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0060|0x0060: ARITH  (r4 I:??[int, boolean]) = (r11 I:??[int, boolean, short, byte, char] A[D('mask' int)]) & (8 ??[int, float, short, byte, char])  (LINE:124)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0062|0x0062: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0067 \l}"];
Node_64 [shape=record,label="{64\:\ 0x0064|0x0064: INVOKE  \l  (r2 I:java.util.ArrayList A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)])\l  (r10 I:android.text.Spannable A[D('text' android.text.Spannable)])\l type: STATIC call: androidx.core.text.util.LinkifyCompat.gatherMapLinks(java.util.ArrayList, android.text.Spannable):void A[MD:(java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>, android.text.Spannable):void (m)] (LINE:125)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0067|0x0067: INVOKE  \l  (r2 I:java.util.ArrayList A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)])\l  (r10 I:android.text.Spannable A[D('text' android.text.Spannable)])\l type: STATIC call: androidx.core.text.util.LinkifyCompat.pruneOverlaps(java.util.ArrayList, android.text.Spannable):void A[MD:(java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>, android.text.Spannable):void (m)] (LINE:128)\l0x006a: INVOKE  (r4 I:int) = (r2 I:java.util.ArrayList A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:130)\l}"];
Node_66 [shape=record,label="{66\:\ 0x006e|0x006e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0071 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0070|RETURN\l|0x0070: RETURN  (r0 I:boolean)  (LINE:131)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0071|0x0071: INVOKE  (r0 I:java.util.Iterator) = (r2 I:java.util.ArrayList A[D('links' java.util.ArrayList\<androidx.core.text.util.LinkifyCompat$LinkSpec\>)]) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:134)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0075|LOOP_START\lLOOP:1: B:69:0x0075\-\>B:79:0x0075\l|0x0075: INVOKE  (r4 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x0079|0x0079: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x008f \l}"];
Node_71 [shape=record,label="{71\:\ 0x007b|0x007b: INVOKE  (r4 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x007f: CHECK_CAST (r4 I:androidx.core.text.util.LinkifyCompat$LinkSpec) = (androidx.core.text.util.LinkifyCompat$LinkSpec) (r4 I:??[OBJECT, ARRAY]) \l0x0081: IGET  (r5 I:android.text.style.URLSpan) = (r4 I:androidx.core.text.util.LinkifyCompat$LinkSpec A[D('link' androidx.core.text.util.LinkifyCompat$LinkSpec)]) androidx.core.text.util.LinkifyCompat.LinkSpec.frameworkAddedSpan android.text.style.URLSpan  (LINE:135)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0083|0x0083: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0075 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0085|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0085|0x0085: IGET  (r5 I:java.lang.String) = (r4 I:androidx.core.text.util.LinkifyCompat$LinkSpec A[D('link' androidx.core.text.util.LinkifyCompat$LinkSpec)]) androidx.core.text.util.LinkifyCompat.LinkSpec.url java.lang.String  (LINE:136)\l0x0087: IGET  (r6 I:int) = (r4 I:androidx.core.text.util.LinkifyCompat$LinkSpec A[D('link' androidx.core.text.util.LinkifyCompat$LinkSpec)]) androidx.core.text.util.LinkifyCompat.LinkSpec.start int \l0x0089: IGET  (r7 I:int) = (r4 I:androidx.core.text.util.LinkifyCompat$LinkSpec A[D('link' androidx.core.text.util.LinkifyCompat$LinkSpec)]) androidx.core.text.util.LinkifyCompat.LinkSpec.end int \l0x008b: INVOKE  (r5 I:java.lang.String), (r6 I:int), (r7 I:int), (r10 I:android.text.Spannable A[D('text' android.text.Spannable)]) type: STATIC call: androidx.core.text.util.LinkifyCompat.applyLink(java.lang.String, int, int, android.text.Spannable):void A[MD:(java.lang.String, int, int, android.text.Spannable):void (m)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0075|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0075|LOOP_END\lSYNTHETIC\lLOOP:1: B:69:0x0075\-\>B:79:0x0075\l}"];
Node_80 [shape=record,label="{80\:\ 0x0075|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x008f|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x008f|RETURN\l|0x008f: RETURN  (r3 I:boolean)  (LINE:140)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.text.util.LinkifyCompat.addLinks((r10 I:android.text.Spannable A[D('text' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('mask' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:49:0x000e \-\> B:42:?, BACK_EDGE: B:52:0x0020 \-\> B:51:0x001e, CROSS_EDGE: B:67:0x0070 \-\> B:42:?, BACK_EDGE: B:73:0x0085 \-\> B:69:0x0075, BACK_EDGE: B:72:0x0083 \-\> B:69:0x0075, CROSS_EDGE: B:75:0x008f \-\> B:42:?, CROSS_EDGE: B:63:0x0062 \-\> B:65:0x0067, CROSS_EDGE: B:60:0x004f \-\> B:62:0x0060, CROSS_EDGE: B:57:0x0037 \-\> B:59:0x004d, CROSS_EDGE: B:54:0x002a \-\> B:56:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0028: r2 'i' I\l  0x0081\-0x008e: r4 'link' Landroidx\/core\/text\/util\/LinkifyCompat$LinkSpec;\l  0x001b\-0x008f: r1 'old' [Landroid\/text\/style\/URLSpan;\l  0x0035\-0x008f: r2 'links' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/core\/text\/util\/LinkifyCompat$LinkSpec;\>;\l  \-1 \-0x008f: r10 'text' Landroid\/text\/Spannable;\l  \-1 \-0x008f: r11 'mask' I\l}"];
MethodNode -> Node_41;Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_46;
Node_46 -> Node_42;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_42;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_76;
Node_52 -> Node_51;
Node_76 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_42;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_78;
Node_71 -> Node_72;
Node_72 -> Node_77[style=dashed];
Node_72 -> Node_80;
Node_77 -> Node_73;
Node_73 -> Node_81;
Node_81 -> Node_79;
Node_79 -> Node_69;
Node_80 -> Node_79;
Node_78 -> Node_75;
Node_75 -> Node_42;
}

