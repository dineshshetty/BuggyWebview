digraph "CFG forandroidx.core.text.util.LinkifyCompat.addLinks(Landroid\/text\/Spannable;Ljava\/util\/regex\/Pattern;Ljava\/lang\/String;[Ljava\/lang\/String;Landroid\/text\/util\/Linkify$MatchFilter;Landroid\/text\/util\/Linkify$TransformFilter;)Z" {
subgraph cluster_Region_1727063936 {
label = "R(1:(2:(1:4)|(7:(1:7)|(1:40)|12|(2:15|19)|23|(3:26|(1:28)|(1:33))|39)))";
node [shape=record,color=blue];
subgraph cluster_Region_1802248440 {
label = "R(2:(1:4)|(7:(1:7)|(1:40)|12|(2:15|19)|23|(3:26|(1:28)|(1:33))|39))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_775102248 {
label = "IF [B:45:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0004|if (shouldAddLinksFallbackToFramework() != false) goto L3\l}"];
subgraph cluster_Region_463908304 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x000a|RETURN\l|return androidx.core.text.util.LinkifyCompat.Api24Impl.addLinks(r9, r10, r11, r12, r13, r14)\l}"];
}
}
subgraph cluster_Region_35642512 {
label = "R(7:(1:7)|(1:40)|12|(2:15|19)|23|(3:26|(1:28)|(1:33))|39)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2055964099 {
label = "IF [B:48:0x000b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x000b|if (r11 == null) goto L7\l}"];
subgraph cluster_Region_1885999498 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x000d|java.lang.String r11 = \"\"\l}"];
}
}
subgraph cluster_IfRegion_1184271088 {
label = "IF [B:51:0x0010, B:53:0x0013] THEN: R(1:40) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0010|if (r12 == null) goto L40\l}"];
Node_53 [shape=record,label="{53\:\ 0x0013|ADDED_TO_REGION\l|if (r12.length \< 1) goto L40\l}"];
subgraph cluster_Region_1752197087 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0015|java.lang.String[] r12 = androidx.core.text.util.LinkifyCompat.EMPTY_STRING\l}"];
}
}
Node_55 [shape=record,label="{55\:\ 0x0017|PHI: r12 \l  PHI: (r12v2 'schemes' java.lang.String[]) = (r12v1 'schemes' java.lang.String[]), (r12v0 'schemes' java.lang.String[]) binds: [B:54:0x0015, B:53:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String[] java.lang.String[] r0 = new java.lang.String[r12.length + 1]\lr0[0] = r11.toLowerCase(java.util.Locale.ROOT)\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1924616024 {
label = "LOOP:0: (2:15|19)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0026|if (r1 \< r12.length) goto L15\l}"];
subgraph cluster_Region_1228960339 {
label = "R(2:15|19)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0028|java.lang.String r3 = r12[r1]\l}"];
Node_62 [shape=record,label="{62\:\ 0x0037|LOOP_END\lLOOP:0: B:56:0x0025\-\>B:62:0x0037\lPHI: r5 \l  PHI: (r5v3 java.lang.String A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r0[r1 + 1] = r3 == null ? \"\" : r3.toLowerCase(java.util.Locale.ROOT)\lr1++\l}"];
}
}
Node_63 [shape=record,label="{63\:\ 0x003c|boolean r1 = false\ljava.util.regex.Matcher java.util.regex.Matcher r3 = r10.matcher(r9)\l}"];
subgraph cluster_LoopRegion_238085826 {
label = "LOOP:1: (3:26|(1:28)|(1:33))";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0045|if (r3.find() != false) goto L26\l}"];
subgraph cluster_Region_1151918013 {
label = "R(3:26|(1:28)|(1:33))";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x0047|int int r4 = r3.start()\lint int r5 = r3.end()\ljava.lang.String java.lang.String r6 = r3.group(0)\lboolean r7 = true\l}"];
subgraph cluster_IfRegion_1316180623 {
label = "IF [B:67:0x0054] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x0054|if (r13 != null) goto L28\l}"];
subgraph cluster_Region_899740045 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0056|boolean r7 = r13.acceptMatch(r9, r4, r5)\l}"];
}
}
subgraph cluster_IfRegion_2108012014 {
label = "IF [B:69:0x005a, B:70:0x005c] THEN: R(1:33) ELSE: null";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x005a|PHI: r7 \l  PHI: (r7v1 'allowed' boolean) = (r7v0 'allowed' boolean), (r7v2 'allowed' boolean) binds: [B:67:0x0054, B:68:0x0056] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 != false) goto L30\l}"];
Node_70 [shape=record,label="{70\:\ 0x005c|ADDED_TO_REGION\l|if (r6 != null) goto L32\l}"];
subgraph cluster_Region_1158057978 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x005e|java.lang.String java.lang.String r8 = makeUrl(r6, r0, r3, r14)\lapplyLink(r8, r4, r5, r9)\lr1 = true\l}"];
}
}
}
}
Node_73 [shape=record,label="{73\:\ 0x0067|RETURN\l|return r1\l}"];
}
}
}
Node_42 [shape=record,color=red,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0000}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0006}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x000f|PHI: r11 \l  PHI: (r11v1 'defaultScheme' java.lang.String) = (r11v0 'defaultScheme' java.lang.String), (r11v2 'defaultScheme' java.lang.String) binds: [B:48:0x000b, B:49:0x000d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0012}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0025|LOOP_START\lLOOP:0: B:56:0x0025\-\>B:62:0x0037\lPHI: r1 \l  PHI: (r1v5 'index' int) = (r1v4 'index' int), (r1v10 'index' int) binds: [B:55:0x0017, B:62:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x002c}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x002e}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x0037|SYNTHETIC\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0031}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0037|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x003c|SYNTHETIC\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0041|LOOP_START\lLOOP:1: B:64:0x0041\-\>B:80:0x0041\lPHI: r1 \l  PHI: (r1v7 'hasMatches' boolean) = (r1v6 'hasMatches' boolean), (r1v8 'hasMatches' boolean) binds: [B:63:0x003c, B:80:0x0041] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x005c|SYNTHETIC\l}"];
Node_79 [shape=record,color=red,label="{79\:\ 0x005e|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0041|SYNTHETIC\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0041|LOOP_END\lSYNTHETIC\lLOOP:1: B:64:0x0041\-\>B:80:0x0041\lPHI: r1 \l  PHI: (r1v8 'hasMatches' boolean) = (r1v7 'hasMatches' boolean), (r1v7 'hasMatches' boolean), (r1v9 'hasMatches' boolean) binds: [B:81:0x0041, B:82:0x0041, B:83:0x0041] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0041|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x0041|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x0067|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.text.util.LinkifyCompat.addLinks((r9v0 'spannable' android.text.Spannable A[D('spannable' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'pattern' java.util.regex.Pattern A[D('pattern' java.util.regex.Pattern), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'defaultScheme' java.lang.String A[D('defaultScheme' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'schemes' java.lang.String[] A[D('schemes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'matchFilter' android.text.util.Linkify$MatchFilter A[D('matchFilter' android.text.util.Linkify$MatchFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'transformFilter' android.text.util.Linkify$TransformFilter A[D('transformFilter' android.text.util.Linkify$TransformFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:62:0x0037 \-\> B:56:0x0025, CROSS_EDGE: B:61:0x0031 \-\> B:62:0x0037, BACK_EDGE: B:71:0x005e \-\> B:64:0x0041, BACK_EDGE: B:70:0x005c \-\> B:64:0x0041, BACK_EDGE: B:69:0x005a \-\> B:64:0x0041, CROSS_EDGE: B:67:0x0054 \-\> B:69:0x005a, CROSS_EDGE: B:73:0x0067 \-\> B:43:?, CROSS_EDGE: B:53:0x0013 \-\> B:55:0x0017, CROSS_EDGE: B:51:0x0010 \-\> B:54:0x0015, CROSS_EDGE: B:48:0x000b \-\> B:50:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_42;Node_45 -> Node_46;
Node_45 -> Node_48[style=dashed];
Node_47 -> Node_43;
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_50;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_53 -> Node_54;
Node_53 -> Node_55[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_57 -> Node_74[style=dashed];
Node_58 -> Node_59;
Node_62 -> Node_56;
Node_63 -> Node_64;
Node_65 -> Node_66;
Node_65 -> Node_77[style=dashed];
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_67 -> Node_69[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_78;
Node_69 -> Node_81[style=dashed];
Node_70 -> Node_79;
Node_70 -> Node_82[style=dashed];
Node_71 -> Node_83;
Node_73 -> Node_43;
Node_42 -> Node_44;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_56 -> Node_57;
Node_59 -> Node_60;
Node_59 -> Node_61;
Node_60 -> Node_76;
Node_76 -> Node_62;
Node_61 -> Node_75;
Node_75 -> Node_62;
Node_74 -> Node_63;
Node_64 -> Node_65;
Node_78 -> Node_70;
Node_79 -> Node_71;
Node_83 -> Node_80;
Node_80 -> Node_64;
Node_82 -> Node_80;
Node_81 -> Node_80;
Node_77 -> Node_73;
}

