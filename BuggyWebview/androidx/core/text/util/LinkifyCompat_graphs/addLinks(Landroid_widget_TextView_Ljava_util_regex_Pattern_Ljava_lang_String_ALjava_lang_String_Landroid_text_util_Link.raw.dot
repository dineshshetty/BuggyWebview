digraph "CFG forandroidx.core.text.util.LinkifyCompat.addLinks(Landroid\/widget\/TextView;Ljava\/util\/regex\/Pattern;Ljava\/lang\/String;[Ljava\/lang\/String;Landroid\/text\/util\/Linkify$MatchFilter;Landroid\/text\/util\/Linkify$TransformFilter;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: androidx.core.text.util.LinkifyCompat.shouldAddLinksFallbackToFramework():boolean A[MD:():boolean (m)] (LINE:248)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  \l  (r7 I:android.widget.TextView A[D('text' android.widget.TextView)])\l  (r8 I:java.util.regex.Pattern A[D('pattern' java.util.regex.Pattern)])\l  (r9 I:java.lang.String A[D('defaultScheme' java.lang.String)])\l  (r10 I:java.lang.String[] A[D('schemes' java.lang.String[])])\l  (r11 I:android.text.util.Linkify$MatchFilter A[D('matchFilter' android.text.util.Linkify$MatchFilter)])\l  (r12 I:android.text.util.Linkify$TransformFilter A[D('transformFilter' android.text.util.Linkify$TransformFilter)])\l type: STATIC call: androidx.core.text.util.LinkifyCompat.Api24Impl.addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void A[MD:(android.widget.TextView, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):void (m)] (LINE:249)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:250)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: INVOKE  (r0 I:java.lang.CharSequence) = (r7 I:android.widget.TextView A[D('text' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:252)\l0x000e: INVOKE  (r0 I:android.text.SpannableString) = (r0 I:java.lang.CharSequence) type: STATIC call: android.text.SpannableString.valueOf(java.lang.CharSequence):android.text.SpannableString A[MD:(java.lang.CharSequence):android.text.SpannableString (c)]\l0x0012: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('spannable' android.text.SpannableString)])  (LINE:254)\l0x0013: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('pattern' java.util.regex.Pattern)]) \l0x0014: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('defaultScheme' java.lang.String)]) \l0x0015: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('schemes' java.lang.String[])]) \l0x0016: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('matchFilter' android.text.util.Linkify$MatchFilter)]) \l0x0017: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('transformFilter' android.text.util.Linkify$TransformFilter)]) \l0x0018: INVOKE  (r1 I:boolean) = \l  (r1 I:android.text.Spannable)\l  (r2 I:java.util.regex.Pattern)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l  (r5 I:android.text.util.Linkify$MatchFilter)\l  (r6 I:android.text.util.Linkify$TransformFilter)\l type: STATIC call: androidx.core.text.util.LinkifyCompat.addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):boolean A[MD:(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify$MatchFilter, android.text.util.Linkify$TransformFilter):boolean (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('linksAdded' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:?  (LINE:256)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|0x001e: INVOKE  \l  (r7 I:android.widget.TextView A[D('text' android.widget.TextView)])\l  (r0 I:java.lang.CharSequence A[D('spannable' android.text.SpannableString)])\l type: VIRTUAL call: android.widget.TextView.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)] (LINE:257)\l0x0021: INVOKE  (r7 I:android.widget.TextView A[D('text' android.widget.TextView)]) type: STATIC call: androidx.core.text.util.LinkifyCompat.addLinkMovementMethod(android.widget.TextView):void A[MD:(android.widget.TextView):void (m)] (LINE:258)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:260)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:260)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.text.util.LinkifyCompat.addLinks((r7 I:android.widget.TextView A[D('text' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.regex.Pattern A[D('pattern' java.util.regex.Pattern), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[D('defaultScheme' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String[] A[D('schemes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.text.util.Linkify$MatchFilter A[D('matchFilter' android.text.util.Linkify$MatchFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.text.util.Linkify$TransformFilter A[D('transformFilter' android.text.util.Linkify$TransformFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0024 \-\> B:12:?, CROSS_EDGE: B:18:0x001c \-\> B:20:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0024: r0 'spannable' Landroid\/text\/SpannableString;\l  0x001c\-0x0024: r1 'linksAdded' Z\l  \-1 \-0x0024: r7 'text' Landroid\/widget\/TextView;\l  \-1 \-0x0024: r8 'pattern' Ljava\/util\/regex\/Pattern;\l  \-1 \-0x0024: r9 'defaultScheme' Ljava\/lang\/String;\l  \-1 \-0x0024: r10 'schemes' [Ljava\/lang\/String;\l  \-1 \-0x0024: r11 'matchFilter' Landroid\/text\/util\/Linkify$MatchFilter;\l  \-1 \-0x0024: r12 'transformFilter' Landroid\/text\/util\/Linkify$TransformFilter;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

