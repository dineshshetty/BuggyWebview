digraph "CFG forandroidx.core.text.SpannedStringKt.getSpans$default(Landroid\/text\/Spanned;IIILjava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:31)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:32)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:31)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: INVOKE  (r3 I:int A[D('end' int)]) = (r1 I:android.text.Spanned A[D('$this$getSpans_u24default' android.text.Spanned)]) type: INTERFACE call: android.text.Spanned.length():int A[MD:():int (c)] (LINE:33)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: CONST_STR  (r4 I:java.lang.String) =  \"\<this\>\"  (LINE:31)\l0x000f: INVOKE  (r1 I:java.lang.Object A[D('$this$getSpans_u24default' android.text.Spanned)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:34)\l0x0014: CONST_STR  (r0 I:java.lang.String) =  \"T\" \l0x0016: INVOKE  (r5 I:int), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(int, java.lang.String):void A[MD:(int, java.lang.String):void (m)]\l0x0019: CONST_CLASS  (r5 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l0x001b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x001c: CHECK_CAST (r0 I:java.lang.Class) = (java.lang.Class) (r0 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  (r5 I:java.lang.Object[]) = \l  (r1 I:android.text.Spanned A[D('$this$getSpans_u24default' android.text.Spanned)])\l  (r2 I:int A[D('start' int)])\l  (r3 I:int A[D('end' int)])\l  (r5 I:java.lang.Class)\l type: INTERFACE call: android.text.Spanned.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l0x0022: CONST_STR  (r0 I:java.lang.String) =  \"getSpans(start, end, T::class.java)\" \l0x0024: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0027: CHECK_CAST (r5 I:java.lang.Object[]) = (java.lang.Object[]) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|0x0029: RETURN  (r5 I:java.lang.Object[]) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ java.lang.Object[] androidx.core.text.SpannedStringKt.getSpans$default((r1 I:android.text.Spanned A[D('$this$getSpans_u24default' android.text.Spanned), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:6:0x0007 \-\> B:8:0x000d, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0005\lDebug Info:\l  \-1 \-0x0029: r1 '$this$getSpans_u24default' Landroid\/text\/Spanned;\l  \-1 \-0x0029: r2 'start' I\l  \-1 \-0x0029: r3 'end' I\l  0x0013\-0x0029: r4 '$i$f$getSpans' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

