digraph "CFG forandroidx.core.util.AtomicFile.startWrite()Ljava\/io\/FileOutputStream;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mLegacyBackupName java.io.File  (LINE:96)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.io.File) type: VIRTUAL call: java.io.File.exists():boolean A[MD:():boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mLegacyBackupName java.io.File  (LINE:97)\l0x000a: IGET  (r1 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mBaseName java.io.File \l0x000c: INVOKE  (r0 I:java.io.File), (r1 I:java.io.File) type: STATIC call: androidx.core.util.AtomicFile.rename(java.io.File, java.io.File):void A[MD:(java.io.File, java.io.File):void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{FileNotFoundException \-\> 0x0017, blocks: (B:5:0x000f), top: B:17:0x000f \}\lCatch: FileNotFoundException \-\> 0x0017\l|0x000f: NEW_INSTANCE  (r0 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch: FileNotFoundException \-\> 0x0017, TRY_ENTER] (LINE:101)\l0x0011: IGET  (r1 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mNewName java.io.File A[Catch: FileNotFoundException \-\> 0x0017]\l0x0013: INVOKE  (r0 I:java.io.FileOutputStream), (r1 I:java.io.File) type: DIRECT call: java.io.FileOutputStream.\<init\>(java.io.File):void A[Catch: FileNotFoundException \-\> 0x0017, MD:(java.io.File):void throws java.io.FileNotFoundException (c), TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:java.io.FileOutputStream) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|ExcHandler: FileNotFoundException \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r0 I:java.io.FileNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: FileNotFoundException \-\> 0x0017] (LINE:102)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r1 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mNewName java.io.File  (LINE:103)\l0x001a: INVOKE  (r1 I:java.io.File) = (r1 I:java.io.File) type: VIRTUAL call: java.io.File.getParentFile():java.io.File A[MD:():java.io.File (c)]\l0x001e: INVOKE  (r2 I:boolean) = (r1 I:java.io.File A[D('parent' java.io.File)]) type: VIRTUAL call: java.io.File.mkdirs():boolean A[MD:():boolean (c)] (LINE:104)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0046 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: NEW_INSTANCE  (r2 I:java.io.IOException A[D('e2' java.io.FileNotFoundException)]) =  java.io.IOException  (LINE:105)\l0x0048: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004a: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004d: CONST_STR  (r4 I:java.lang.String) =  \"Failed to create directory for \" \l0x004f: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0052: IGET  (r4 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mNewName java.io.File \l0x0054: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0057: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005b: INVOKE  (r2 I:java.io.IOException), (r3 I:java.lang.String) type: DIRECT call: java.io.IOException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{FileNotFoundException \-\> 0x002c, blocks: (B:10:0x0024), top: B:19:0x0024 \}\lCatch: FileNotFoundException \-\> 0x002c\l|0x0024: NEW_INSTANCE  (r2 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch: FileNotFoundException \-\> 0x002c, TRY_ENTER] (LINE:108)\l0x0026: IGET  (r3 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mNewName java.io.File A[Catch: FileNotFoundException \-\> 0x002c]\l0x0028: INVOKE  (r2 I:java.io.FileOutputStream), (r3 I:java.io.File) type: DIRECT call: java.io.FileOutputStream.\<init\>(java.io.File):void A[Catch: FileNotFoundException \-\> 0x002c, MD:(java.io.File):void throws java.io.FileNotFoundException (c), TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|RETURN\l|0x002b: RETURN  (r2 I:java.io.FileOutputStream) \l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|ExcHandler: FileNotFoundException \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r2 I:java.io.FileNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: FileNotFoundException \-\> 0x002c] (LINE:109)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: NEW_INSTANCE  (r3 I:java.io.IOException) =  java.io.IOException  (LINE:110)\l0x002f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0031: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0034: CONST_STR  (r5 I:java.lang.String) =  \"Failed to create new file \" \l0x0036: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0039: IGET  (r5 I:java.io.File) = (r6 I:androidx.core.util.AtomicFile) androidx.core.util.AtomicFile.mNewName java.io.File \l0x003b: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x003e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0042: INVOKE  \l  (r3 I:java.io.IOException)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('e2' java.io.FileNotFoundException)])\l type: DIRECT call: java.io.IOException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.FileOutputStream androidx.core.util.AtomicFile.startWrite((r6 'this' I:androidx.core.util.AtomicFile A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x005e \-\> B:1:?, CROSS_EDGE: B:11:0x002b \-\> B:1:?, CROSS_EDGE: B:14:0x0045 \-\> B:1:?, CROSS_EDGE: B:19:0x0024 \-\> B:12:0x002c, CROSS_EDGE: B:17:0x000f \-\> B:7:0x0017, CROSS_EDGE: B:3:0x0006 \-\> B:17:0x000f\lDebug Info:\l  0x002d\-0x0046: r2 'e2' Ljava\/io\/FileNotFoundException;\l  0x0018\-0x005e: r0 'e' Ljava\/io\/FileNotFoundException;\l  0x001e\-0x005e: r1 'parent' Ljava\/io\/File;\lTryCatch #0 \{FileNotFoundException \-\> 0x0017, blocks: (B:5:0x000f), top: B:17:0x000f \}, TryCatch #1 \{FileNotFoundException \-\> 0x002c, blocks: (B:10:0x0024), top: B:19:0x0024 \}\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_17;
Node_17 -> Node_5;
Node_17 -> Node_7;
Node_5 -> Node_6;
Node_5 -> Node_18;
Node_6 -> Node_1;
Node_18 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_15;
Node_9 -> Node_19[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_19 -> Node_10;
Node_19 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_20;
Node_11 -> Node_1;
Node_20 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

