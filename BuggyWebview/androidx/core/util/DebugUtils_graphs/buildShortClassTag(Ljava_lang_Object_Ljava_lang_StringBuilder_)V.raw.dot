digraph "CFG forandroidx.core.util.DebugUtils.buildShortClassTag(Ljava\/lang\/Object;Ljava\/lang\/StringBuilder;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cls' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0008  (LINE:32)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: CONST_STR  (r0 I:java.lang.String) =  \"null\"  (LINE:33)\l0x0004: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0041: RETURN   A[SYNTHETIC] (LINE:47)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Class) = (r3 I:java.lang.Object A[D('cls' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:35)\l0x000c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('simpleName' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0018  (LINE:36)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('simpleName' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: IF  (r1 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:25:0x002e \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: INVOKE  \l  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)])\l  (r0 I:java.lang.String A[D('simpleName' java.lang.String)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:43)\l0x0031: CONST  (r1 I:??[int, float, short, byte, char]) = (123(0x7b, float:1.72E\-43) ??[int, float, short, byte, char])  (LINE:44)\l0x0033: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r1 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0036: INVOKE  (r1 I:int) = (r3 I:java.lang.Object A[D('cls' java.lang.Object)]) type: STATIC call: java.lang.System.identityHashCode(java.lang.Object):int A[MD:(java.lang.Object):int (c)] (LINE:45)\l0x003a: INVOKE  (r1 I:java.lang.String) = (r1 I:int) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x003e: INVOKE  (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0041|RETURN\lORIG_RETURN\l|0x0041: RETURN    (LINE:47)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: INVOKE  (r1 I:java.lang.Class) = (r3 I:java.lang.Object A[D('cls' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:37)\l0x001c: INVOKE  (r0 I:java.lang.String A[D('simpleName' java.lang.String)]) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0020: CONST  (r1 I:??[int, float, short, byte, char]) = (46 ??[int, float, short, byte, char])  (LINE:38)\l0x0022: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('simpleName' java.lang.String)]), (r1 I:int) type: VIRTUAL call: java.lang.String.lastIndexOf(int):int A[MD:(int):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: IF  (r1 I:??[int, byte, short, char] A[D('end' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x002e  (LINE:39)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: ARITH  (r2 I:int) = (r1 I:int A[D('end' int)]) + (1 int)  (LINE:40)\l0x002a: INVOKE  (r0 I:java.lang.String A[D('simpleName' java.lang.String)]) = (r0 I:java.lang.String A[D('simpleName' java.lang.String)]), (r2 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
MethodNode[shape=record,label="{public static void androidx.core.util.DebugUtils.buildShortClassTag((r3 I:java.lang.Object A[D('cls' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.StringBuilder A[D('out' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x002e \-\> B:26:0x0041, CROSS_EDGE: B:23:0x0026 \-\> B:25:0x002e, CROSS_EDGE: B:21:0x0016 \-\> B:25:0x002e, CROSS_EDGE: B:19:0x0010 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x002e: r1 'end' I\l  0x0010\-0x0041: r0 'simpleName' Ljava\/lang\/String;\l  \-1 \-0x0041: r3 'cls' Ljava\/lang\/Object;\l  \-1 \-0x0041: r4 'out' Ljava\/lang\/StringBuilder;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_27;
Node_27 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
}

