digraph "CFG forandroidx.core.util.ObjectsCompat.equals(Ljava\/lang\/Object;Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_690069536 {
label = "R(1:(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1288510046 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1771066577 {
label = "IF [B:18:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 19) goto L3\l}"];
subgraph cluster_Region_1966984818 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x000a|RETURN\l|return androidx.core.util.ObjectsCompat.Api19Impl.equals(r2, r3)\l}"];
}
}
subgraph cluster_Region_1371099221 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000b|RETURN\l|return r2 == r3 \|\| (r2 != null && r2.equals(r3))\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0006}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000d|REMOVE\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0013|REMOVE\lADDED_TO_REGION\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0018|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.util.ObjectsCompat.equals((r2v0 'a' java.lang.Object A[D('a' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'b' java.lang.Object A[D('b' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0019 \-\> B:16:?, CROSS_EDGE: B:27:0x0018 \-\> B:28:0x0019, CROSS_EDGE: B:22:0x000d \-\> B:26:0x0016, CROSS_EDGE: B:21:0x000b \-\> B:27:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_21 -> Node_27;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27;
Node_26 -> Node_16;
Node_27 -> Node_16;
}

