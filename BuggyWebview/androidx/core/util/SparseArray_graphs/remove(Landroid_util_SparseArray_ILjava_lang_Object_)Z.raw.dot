digraph "CFG forandroidx.core.util.SparseArrayKt.remove(Landroid\/util\/SparseArray;ILjava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$remove' android.util.SparseArray)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:int) = (r2 I:android.util.SparseArray A[D('$this$remove' android.util.SparseArray)]), (r3 I:int A[D('key' int)]) type: VIRTUAL call: android.util.SparseArray.indexOfKey(int):int A[MD:(int):int (c)] (LINE:63)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:8:0x001a  (LINE:64)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r1 I:java.lang.Object) = (r2 I:android.util.SparseArray A[D('$this$remove' android.util.SparseArray)]), (r0 I:int A[D('index' int)]) type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: INVOKE  (r1 I:boolean) = (r4 I:java.lang.Object A[D('value' java.lang.Object)]), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:? \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r2 I:android.util.SparseArray A[D('$this$remove' android.util.SparseArray)]), (r0 I:int A[D('index' int)]) type: VIRTUAL call: android.util.SparseArray.removeAt(int):void A[MD:(int):void (c)] (LINE:65)\l0x0018: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:66)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:68)\l0x001b: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:68)\l0x001b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean androidx.core.util.SparseArrayKt.remove((r2 I:android.util.SparseArray\<T\> A[D('$this$remove' android.util.SparseArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:T A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x001b \-\> B:1:?, CROSS_EDGE: B:3:0x0009 \-\> B:8:0x001a\lDebug Info:\l  0x0009\-0x001b: r0 'index' I\l  \-1 \-0x001b: r2 '$this$remove' Landroid\/util\/SparseArray;\l  \-1 \-0x001b: r3 'key' I\l  \-1 \-0x001b: r4 'value' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Landroid\/util\/SparseArray\<TT;\>;ITT;)Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_10 -> Node_1;
Node_8 -> Node_1;
}

