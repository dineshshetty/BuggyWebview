digraph "CFG forandroidx.core.util.SparseArrayKt.getOrElse(Landroid\/util\/SparseArray;ILkotlin\/jvm\/functions\/Function0;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$getOrElse' android.util.SparseArray)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"defaultValue\" \l0x0007: INVOKE  (r4 I:java.lang.Object A[D('defaultValue' kotlin.jvm.functions.Function0)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.lang.Object) = (r2 I:android.util.SparseArray A[D('$this$getOrElse' android.util.SparseArray)]), (r3 I:int A[D('key' int)]) type: VIRTUAL call: android.util.SparseArray.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:53)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Object) = (r4 I:kotlin.jvm.functions.Function0 A[D('defaultValue' kotlin.jvm.functions.Function0)]) type: INTERFACE call: kotlin.jvm.functions.Function0.invoke():java.lang.Object A[MD:():R (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: RETURN  (r1 I:T) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x0015: RETURN  (r1 I:T) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static final T androidx.core.util.SparseArrayKt.getOrElse((r2 I:android.util.SparseArray\<T\> A[D('$this$getOrElse' android.util.SparseArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function0\<? extends T\> A[D('defaultValue' kotlin.jvm.functions.Function0), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x000f \-\> B:5:0x0015\lDebug Info:\l  0x000b\-0x0015: r0 '$i$f$getOrElse' I\l  \-1 \-0x0015: r2 '$this$getOrElse' Landroid\/util\/SparseArray;\l  \-1 \-0x0015: r3 'key' I\l  \-1 \-0x0015: r4 'defaultValue' Lkotlin\/jvm\/functions\/Function0;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Landroid\/util\/SparseArray\<TT;\>;ILkotlin\/jvm\/functions\/Function0\<+TT;\>;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

