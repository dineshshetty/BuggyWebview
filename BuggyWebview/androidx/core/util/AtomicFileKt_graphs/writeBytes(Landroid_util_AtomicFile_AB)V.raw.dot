digraph "CFG forandroidx.core.util.AtomicFileKt.writeBytes(Landroid\/util\/AtomicFile;[B)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$writeBytes' android.util.AtomicFile)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"array\" \l0x0007: INVOKE  (r7 I:java.lang.Object A[D('array' byte[])]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('$this$writeBytes' android.util.AtomicFile)])  (LINE:53)\l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: INVOKE  (r2 I:java.io.FileOutputStream) = (r0 I:android.util.AtomicFile A[D('$this$tryWrite$iv' android.util.AtomicFile)]) type: VIRTUAL call: android.util.AtomicFile.startWrite():java.io.FileOutputStream A[MD:():java.io.FileOutputStream throws java.io.IOException (c)] (LINE:85)\l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:86)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:3:0x0012), top: B:9:0x0012 \}\lCatch: all \-\> 0x0025\l|0x0012: CONST_STR  (r4 I:java.lang.String) =  \"stream\" A[TRY_ENTER] (LINE:88)\l0x0014: INVOKE  (r2 I:java.lang.Object A[D('stream$iv' java.io.FileOutputStream)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: all \-\> 0x0025, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0017: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('stream$iv' java.io.FileOutputStream)]) \l0x0018: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: INVOKE  (r4 I:java.io.FileOutputStream A[D('it' java.io.FileOutputStream)]), (r7 I:byte[] A[D('array' byte[])]) type: VIRTUAL call: java.io.FileOutputStream.write(byte[]):void A[Catch: all \-\> 0x0025, MD:(byte[]):void throws java.io.IOException (c), TRY_LEAVE] (LINE:54)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('success$iv' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:89)\l0x001f: INVOKE  \l  (r0 I:android.util.AtomicFile A[D('$this$tryWrite$iv' android.util.AtomicFile)])\l  (r2 I:java.io.FileOutputStream A[D('stream$iv' java.io.FileOutputStream)])\l type: VIRTUAL call: android.util.AtomicFile.finishWrite(java.io.FileOutputStream):void A[MD:(java.io.FileOutputStream):void (c)] (LINE:92)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|RETURN\l|0x0024: RETURN    (LINE:56)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|ExcHandler: all \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0025] (LINE:90)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: INVOKE  \l  (r0 I:android.util.AtomicFile A[D('$this$tryWrite$iv' android.util.AtomicFile)])\l  (r2 I:java.io.FileOutputStream A[D('stream$iv' java.io.FileOutputStream)])\l type: VIRTUAL call: android.util.AtomicFile.failWrite(java.io.FileOutputStream):void A[MD:(java.io.FileOutputStream):void (c)] (LINE:94)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void androidx.core.util.AtomicFileKt.writeBytes((r6 I:android.util.AtomicFile A[D('$this$writeBytes' android.util.AtomicFile), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:byte[] A[D('array' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x002a \-\> B:1:?, CROSS_EDGE: B:9:0x0012 \-\> B:6:0x0025\lDebug Info:\l  0x0018\-0x001d: r4 'it' Ljava\/io\/FileOutputStream;\l  0x0019\-0x001d: r5 '$i$a$\-tryWrite\-AtomicFileKt$writeBytes$1' I\l  0x000b\-0x0024: r0 '$this$tryWrite$iv' Landroid\/util\/AtomicFile;\l  0x000c\-0x0024: r1 '$i$f$tryWrite' I\l  0x0010\-0x0024: r2 'stream$iv' Ljava\/io\/FileOutputStream;\l  0x0011\-0x0024: r3 'success$iv' Z\l  0x0025\-0x002a: r0 '$this$tryWrite$iv' Landroid\/util\/AtomicFile;\l  0x0025\-0x002a: r1 '$i$f$tryWrite' I\l  0x0025\-0x002a: r2 'stream$iv' Ljava\/io\/FileOutputStream;\l  0x0025\-0x002a: r3 'success$iv' Z\l  \-1 \-0x002a: r6 '$this$writeBytes' Landroid\/util\/AtomicFile;\l  \-1 \-0x002a: r7 'array' [B\lTryCatch #0 \{all \-\> 0x0025, blocks: (B:3:0x0012), top: B:9:0x0012 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_10 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

