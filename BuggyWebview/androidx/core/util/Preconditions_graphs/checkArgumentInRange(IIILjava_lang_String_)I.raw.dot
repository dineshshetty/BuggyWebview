digraph "CFG forandroidx.core.util.Preconditions.checkArgumentInRange(IIILjava\/lang\/String;)I" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:245)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r6 I:??[int, byte, short, char] A[D('value' int)]) \< (r7 I:??[int, byte, short, char] A[D('lower' int)])  \-\> B:18:0x0027 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r6 I:??[int, byte, short, char] A[D('value' int)]) \> (r8 I:??[int, byte, short, char] A[D('upper' int)])  \-\> B:16:0x0009  (LINE:249)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|RETURN\l|0x0008: RETURN  (r6 I:int A[D('value' int)])  (LINE:255)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:250)\l0x000b: SGET  (r5 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x000d: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x000f: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r9 I:??[OBJECT, ARRAY] A[D('valueName' java.lang.String)])\l \l0x0011: INVOKE  (r2 I:java.lang.Integer) = (r7 I:int A[D('lower' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:252)\l0x0015: APUT  (r3 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r1 I:java.lang.Integer) = (r8 I:int A[D('upper' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x001b: APUT  (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY]) \l0x001d: CONST_STR  (r0 I:java.lang.String) =  \"%s is out of range of [%d, %d] (too high)\"  (LINE:251)\l0x001f: INVOKE  (r0 I:java.lang.String) = (r5 I:java.util.Locale), (r0 I:java.lang.String), (r3 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0023: INVOKE  (r4 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0027: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:246)\l0x0029: SGET  (r5 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x002b: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x002d: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r9 I:??[OBJECT, ARRAY] A[D('valueName' java.lang.String)])\l \l0x002f: INVOKE  (r2 I:java.lang.Integer) = (r7 I:int A[D('lower' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:248)\l0x0033: APUT  (r3 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r1 I:java.lang.Integer) = (r8 I:int A[D('upper' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0039: APUT  (r3 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY]) \l0x003b: CONST_STR  (r0 I:java.lang.String) =  \"%s is out of range of [%d, %d] (too low)\"  (LINE:247)\l0x003d: INVOKE  (r0 I:java.lang.String) = (r5 I:java.util.Locale), (r0 I:java.lang.String), (r3 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.util.Locale, java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0041: INVOKE  (r4 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static int androidx.core.util.Preconditions.checkArgumentInRange((r6 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('lower' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('upper' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[D('valueName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0026 \-\> B:11:?, CROSS_EDGE: B:19:0x0044 \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0044: r6 'value' I\l  \-1 \-0x0044: r7 'lower' I\l  \-1 \-0x0044: r8 'upper' I\l  \-1 \-0x0044: r9 'valueName' Ljava\/lang\/String;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

