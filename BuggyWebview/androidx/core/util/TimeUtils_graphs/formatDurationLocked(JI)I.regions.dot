digraph "CFG forandroidx.core.util.TimeUtils.formatDurationLocked(JI)I" {
subgraph cluster_Region_1889459374 {
label = "R(4:1|(1:3)|4|(2:(4:6|(1:8)|10|11)|(16:(1:15)(1:80)|16|(1:79)(1:18)|(1:78)(1:21)|(1:77)(1:24)|25|(6:27|30|33|36|39|(1:41))|46|49|54|59|64|(1:66)(1:71)|68|69|70))) | DECL_VAR: char prefix, int days, int hours, int seconds, int minutes, int start\l";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x0000|long r0 = r27\l}"];
subgraph cluster_IfRegion_726861986 {
label = "IF [B:87:0x0007] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x0007|if (androidx.core.util.TimeUtils.sFormatStr.length \< r29) goto L3\l}"];
subgraph cluster_Region_347114572 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_88 [shape=record,label="{88\:\ 0x0009|androidx.core.util.TimeUtils.sFormatStr = new char[r29]\l}"];
}
}
Node_89 [shape=record,label="{89\:\ 0x000d|char[] char[] r3 = androidx.core.util.TimeUtils.sFormatStr\l}"];
subgraph cluster_Region_2115328096 {
label = "R(2:(4:6|(1:8)|10|11)|(16:(1:15)(1:80)|16|(1:79)(1:18)|(1:78)(1:21)|(1:77)(1:24)|25|(6:27|30|33|36|39|(1:41))|46|49|54|59|64|(1:66)(1:71)|68|69|70))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2009731715 {
label = "IF [B:90:0x0015] THEN: R(4:6|(1:8)|10|11) ELSE: null";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x0015|if (r0 == 0) goto L6\l}"];
subgraph cluster_Region_1440059868 {
label = "R(4:6|(1:8)|10|11)";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x0017|int int r2 = r29 \- 1\l}"];
subgraph cluster_LoopRegion_2060677644 {
label = "LOOP:0: (1:8)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x001a|LOOP_START\lLOOP:0: B:92:0x001a\-\>B:93:0x001c\l|if (0 \< r2) goto L8\l}"];
subgraph cluster_Region_1915542288 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x001c|LOOP_END\lLOOP:0: B:92:0x001a\-\>B:93:0x001c\l|r3[0] = ' '\l}"];
}
}
Node_94 [shape=record,label="{94\:\ 0x001f|r3[0] = '0'\l}"];
Node_95 [shape=record,label="{95\:\ 0x0025|RETURN\l|return 0 + 1\l}"];
}
}
subgraph cluster_Region_503212078 {
label = "R(16:(1:15)(1:80)|16|(1:79)(1:18)|(1:78)(1:21)|(1:77)(1:24)|25|(6:27|30|33|36|39|(1:41))|46|49|54|59|64|(1:66)(1:71)|68|69|70)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_453225548 {
label = "IF [B:97:0x0028] THEN: R(1:15) ELSE: R(1:80)";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x0028|if (r0 \> 0) goto L15\l}"];
subgraph cluster_Region_1029934006 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_98 [shape=record,label="{98\:\ 0x002a|r10 = '+'\l}"];
}
subgraph cluster_Region_1079373068 {
label = "R(1:80)";
node [shape=record,color=blue];
Node_99 [shape=record,label="{99\:\ 0x002e|long r0 = \-r0\lr10 = '\-'\l}"];
}
}
Node_100 [shape=record,label="{100\:\ 0x0032|PHI: r0 r10 \l  PHI: (r0v2 'duration' long) = (r0v1 'duration' long), (r0v0 'duration' long) binds: [B:99:0x002e, B:98:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'prefix' char A[IMMUTABLE_TYPE]) = (r10v0 'prefix' char), (r10v2 'prefix' char) binds: [B:99:0x002e, B:98:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|int int r11 = (int) (r0 % 1000)\lint int r5 = (int) java.lang.Math.floor(r0 \/ 1000)\l}"];
subgraph cluster_IfRegion_63972988 {
label = "IF [B:101:0x0045] THEN: R(1:79) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_101 [shape=record,label="{101\:\ 0x0045|if (r5 \<= androidx.core.util.TimeUtils.SECONDS_PER_DAY) goto L79\l}"];
subgraph cluster_Region_668440904 {
label = "R(1:79)";
node [shape=record,color=blue];
Node_103 [shape=record,label="{103\:\ 0x004e|r12 = 0\l}"];
}
subgraph cluster_Region_863605481 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_102 [shape=record,label="{102\:\ 0x0047|int int r6 = r5 \/ androidx.core.util.TimeUtils.SECONDS_PER_DAY\lr5 \-= androidx.core.util.TimeUtils.SECONDS_PER_DAY * r6\lr12 = r6\l}"];
}
}
subgraph cluster_IfRegion_1540328742 {
label = "IF [B:105:0x0051] THEN: R(1:78) ELSE: R(1:21)";
node [shape=record,color=blue];
Node_105 [shape=record,label="{105\:\ 0x0051|if (r5 \<= androidx.core.util.TimeUtils.SECONDS_PER_HOUR) goto L78\l}"];
subgraph cluster_Region_1851609740 {
label = "R(1:78)";
node [shape=record,color=blue];
Node_107 [shape=record,label="{107\:\ 0x005a|r13 = 0\l}"];
}
subgraph cluster_Region_308712744 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_106 [shape=record,label="{106\:\ 0x0053|int int r7 = r5 \/ androidx.core.util.TimeUtils.SECONDS_PER_HOUR\lr5 \-= r7 * androidx.core.util.TimeUtils.SECONDS_PER_HOUR\lr13 = r7\l}"];
}
}
subgraph cluster_IfRegion_2099678370 {
label = "IF [B:109:0x005d] THEN: R(1:77) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_109 [shape=record,label="{109\:\ 0x005d|if (r5 \<= 60) goto L77\l}"];
subgraph cluster_Region_37201717 {
label = "R(1:77)";
node [shape=record,color=blue];
Node_111 [shape=record,label="{111\:\ 0x0067|r14 = r5\lr15 = 0\l}"];
}
subgraph cluster_Region_14058185 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_110 [shape=record,label="{110\:\ 0x005f|int int r8 = r5 \/ 60\lr14 = r5 \- (r8 * 60)\lr15 = r8\l}"];
}
}
Node_112 [shape=record,label="{112\:\ 0x0069|PHI: r14 r15 \l  PHI: (r14v1 'seconds' int) = (r14v0 'seconds' int), (r14v2 'seconds' int) binds: [B:111:0x0067, B:110:0x005f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'minutes' int) = (r15v0 'minutes' int), (r15v2 'minutes' int) binds: [B:111:0x0067, B:110:0x005f] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = 0\lint r16 = 3\l}"];
subgraph cluster_IfRegion_2012916519 {
label = "IF [B:113:0x006f] THEN: R(6:27|30|33|36|39|(1:41)) ELSE: null";
node [shape=record,color=blue];
Node_113 [shape=record,label="{113\:\ 0x006f|if (r29 != 0) goto L27\l}"];
subgraph cluster_Region_688071505 {
label = "R(6:27|30|33|36|39|(1:41))";
node [shape=record,color=blue];
Node_114 [shape=record,label="{114\:\ 0x0071|int int r6 = accumField(r12, 1, false, 0)\l}"];
Node_117 [shape=record,label="{117\:\ 0x0078|PHI: r8 \l  PHI: (r8v11 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|int int r6 = r6 + accumField(r13, 1, r6 \> 0, 2)\l}"];
Node_121 [shape=record,label="{121\:\ 0x0082|PHI: r8 \l  PHI: (r8v14 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r6 = r6 + accumField(r15, 1, r6 \> 0, 2)\l}"];
Node_125 [shape=record,label="{125\:\ 0x008c|PHI: r8 \l  PHI: (r8v17 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r6 = r6 + accumField(r14, 1, r6 \> 0, 2)\l}"];
Node_129 [shape=record,label="{129\:\ 0x0096|PHI: r8 \l  PHI: (r8v20 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r6 = r6 + accumField(r11, 2, true, r6 \> 0 ? 3 : 0) + 1\l}"];
subgraph cluster_LoopRegion_1352735964 {
label = "LOOP:1: (1:41)";
node [shape=record,color=blue];
Node_130 [shape=record,label="{130\:\ 0x009c|LOOP_START\lLOOP:1: B:130:0x009c\-\>B:131:0x009e\lPHI: r5 r6 \l  PHI: (r5v18 'pos' int) = (r5v9 'pos' int), (r5v19 'pos' int) binds: [B:129:0x0096, B:131:0x009e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v13 'myLen' int) = (r6v12 'myLen' int), (r6v14 'myLen' int) binds: [B:129:0x0096, B:131:0x009e] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \< r29) goto L41\l}"];
subgraph cluster_Region_1395799782 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_131 [shape=record,label="{131\:\ 0x009e|LOOP_END\lLOOP:1: B:130:0x009c\-\>B:131:0x009e\l|r3[r5] = ' '\lr5++\lr6++\l}"];
}
}
}
}
Node_132 [shape=record,label="{132\:\ 0x00a5|PHI: r5 \l  PHI: (r5v10 'pos' int) = (r5v9 'pos' int), (r5v18 'pos' int) binds: [B:113:0x006f, B:167:0x00a5] A[DONT_GENERATE, DONT_INLINE]\l|r3[r5] = r10\lint int r17 = r5 + 1\l}"];
Node_136 [shape=record,label="{136\:\ 0x00b0|PHI: r4 \l  PHI: (r4v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r18 = r29 != 0\lint int r9 = printField(r3, r12, 'd', r17, false, 0)\l}"];
Node_143 [shape=record,label="{143\:\ 0x00de|PHI: r20 \l  PHI: (r20v2 'pos' int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r9 = printField(r3, r13, 'h', r9, r9 != r17, r18 ? 2 : 0)\l}"];
Node_150 [shape=record,label="{150\:\ 0x00ff|PHI: r20 \l  PHI: (r20v4 'pos' int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r9 = printField(r3, r15, 'm', r9, r9 != r17, r18 ? 2 : 0)\l}"];
Node_157 [shape=record,label="{157\:\ 0x011c|PHI: r19 \l  PHI: (r19v2 'pos' int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|int int r9 = printField(r3, r14, 's', r9, r9 != r17, r18 ? 2 : 0)\l}"];
subgraph cluster_IfRegion_2124318305 {
label = "IF [B:158:0x012e] THEN: R(1:66) ELSE: R(1:71)";
node [shape=record,color=blue];
Node_158 [shape=record,label="{158\:\ 0x012e|if (r18 != false) goto L66\l}"];
subgraph cluster_Region_1374445181 {
label = "R(1:66)";
node [shape=record,color=blue];
Node_159 [shape=record,label="{159\:\ 0x0130|r7 = r17\l}"];
}
subgraph cluster_Region_1704480323 {
label = "R(1:71)";
node [shape=record,color=blue];
Node_162 [shape=record,label="{162\:\ 0x0135|r7 = r17\l}"];
}
}
Node_163 [shape=record,label="{163\:\ 0x0137|PHI: r7 \l  PHI: (r7v12 'start' int) = (r7v9 'start' int), (r7v13 'start' int) binds: [B:162:0x0135, B:160:0x0132] A[DONT_GENERATE, DONT_INLINE]\l|r16 = 0\l}"];
Node_164 [shape=record,label="{164\:\ 0x0139|PHI: r7 r16 \l  PHI: (r7v10 'start' int) = (r7v12 'start' int), (r7v13 'start' int) binds: [B:163:0x0137, B:160:0x0132] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 'pos' int) = (r16v2 'pos' int), (r16v0 'pos' int) binds: [B:163:0x0137, B:160:0x0132] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = printField(r3, r11, 'm', r9, true, r16)\lr3[r4] = 's'\l}"];
Node_165 [shape=record,label="{165\:\ 0x014c|RETURN\l|return r4 + 1\l}"];
}
}
}
Node_84 [shape=record,color=red,label="{84\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_166 [shape=record,color=red,label="{166\:\ 0x001f|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0026}"];
Node_104 [shape=record,color=red,label="{104\:\ 0x004f|PHI: r5 r12 \l  PHI: (r5v7 'seconds' int) = (r5v6 'seconds' int), (r5v22 'seconds' int) binds: [B:103:0x004e, B:102:0x0047] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'days' int) = (r12v0 'days' int), (r12v2 'days' int) binds: [B:103:0x004e, B:102:0x0047] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_108 [shape=record,color=red,label="{108\:\ 0x005b|PHI: r5 r13 \l  PHI: (r5v8 'seconds' int) = (r5v7 'seconds' int), (r5v21 'seconds' int) binds: [B:107:0x005a, B:106:0x0053] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'hours' int) = (r13v0 'hours' int), (r13v2 'hours' int) binds: [B:107:0x005a, B:106:0x0053] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_115 [shape=record,color=red,label="{115\:\ 0x0075}"];
Node_116 [shape=record,color=red,label="{116\:\ 0x0077}"];
Node_118 [shape=record,color=red,label="{118\:\ 0x007d}"];
Node_119 [shape=record,color=red,label="{119\:\ 0x007f}"];
Node_122 [shape=record,color=red,label="{122\:\ 0x0087}"];
Node_123 [shape=record,color=red,label="{123\:\ 0x0089}"];
Node_126 [shape=record,color=red,label="{126\:\ 0x0091}"];
Node_127 [shape=record,color=red,label="{127\:\ 0x0093}"];
Node_167 [shape=record,color=red,label="{167\:\ 0x00a5|SYNTHETIC\l}"];
Node_128 [shape=record,color=red,label="{128\:\ 0x0095}"];
Node_124 [shape=record,color=red,label="{124\:\ 0x008b}"];
Node_120 [shape=record,color=red,label="{120\:\ 0x0081}"];
Node_133 [shape=record,color=red,label="{133\:\ 0x00ab}"];
Node_134 [shape=record,color=red,label="{134\:\ 0x00ad}"];
Node_137 [shape=record,color=red,label="{137\:\ 0x00d0}"];
Node_138 [shape=record,color=red,label="{138\:\ 0x00d2}"];
Node_140 [shape=record,color=red,label="{140\:\ 0x00d7|PHI: r17 \l  PHI: (r17v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_141 [shape=record,color=red,label="{141\:\ 0x00d9}"];
Node_144 [shape=record,color=red,label="{144\:\ 0x00f1}"];
Node_145 [shape=record,color=red,label="{145\:\ 0x00f3}"];
Node_147 [shape=record,color=red,label="{147\:\ 0x00f8|PHI: r17 \l  PHI: (r17v5 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_148 [shape=record,color=red,label="{148\:\ 0x00fa}"];
Node_151 [shape=record,color=red,label="{151\:\ 0x0112}"];
Node_153 [shape=record,color=red,label="{153\:\ 0x0115}"];
Node_154 [shape=record,color=red,label="{154\:\ 0x0117|PHI: r21 \l  PHI: (r21v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l}"];
Node_156 [shape=record,color=red,label="{156\:\ 0x011a}"];
Node_160 [shape=record,color=red,label="{160\:\ 0x0132|if (r9 != r7) goto L69\l}"];
Node_149 [shape=record,color=red,label="{149\:\ 0x00fd}"];
Node_146 [shape=record,color=red,label="{146\:\ 0x00f6}"];
Node_142 [shape=record,color=red,label="{142\:\ 0x00dc}"];
Node_139 [shape=record,color=red,label="{139\:\ 0x00d5}"];
Node_135 [shape=record,color=red,label="{135\:\ 0x00af}"];
MethodNode[shape=record,label="{private static int androidx.core.util.TimeUtils.formatDurationLocked((r27v0 'duration' long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 'fieldLen' int A[D('fieldLen' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:93:0x001c \-\> B:92:0x001a, BACK_EDGE: B:131:0x009e \-\> B:130:0x009c, CROSS_EDGE: B:165:0x014c \-\> B:85:?, CROSS_EDGE: B:160:0x0132 \-\> B:164:0x0139, CROSS_EDGE: B:162:0x0135 \-\> B:163:0x0137, CROSS_EDGE: B:154:0x0117 \-\> B:157:0x011c, CROSS_EDGE: B:151:0x0112 \-\> B:154:0x0117, CROSS_EDGE: B:149:0x00fd \-\> B:150:0x00ff, CROSS_EDGE: B:146:0x00f6 \-\> B:147:0x00f8, CROSS_EDGE: B:142:0x00dc \-\> B:143:0x00de, CROSS_EDGE: B:139:0x00d5 \-\> B:140:0x00d7, CROSS_EDGE: B:135:0x00af \-\> B:136:0x00b0, CROSS_EDGE: B:128:0x0095 \-\> B:129:0x0096, CROSS_EDGE: B:124:0x008b \-\> B:125:0x008c, CROSS_EDGE: B:120:0x0081 \-\> B:121:0x0082, CROSS_EDGE: B:115:0x0075 \-\> B:117:0x0078, CROSS_EDGE: B:113:0x006f \-\> B:132:0x00a5, CROSS_EDGE: B:111:0x0067 \-\> B:112:0x0069, CROSS_EDGE: B:107:0x005a \-\> B:108:0x005b, CROSS_EDGE: B:103:0x004e \-\> B:104:0x004f, CROSS_EDGE: B:99:0x002e \-\> B:100:0x0032, CROSS_EDGE: B:87:0x0007 \-\> B:89:0x000d\lINLINE_NOT_NEEDED\lJadxCommentsAttr\{\l WARN: \l \-\> Code restructure failed: missing block: B:160:0x0132, code lost:\l    if (r9 != r7) goto L69;\l\}\l}"];
MethodNode -> Node_84;Node_86 -> Node_87;
Node_87 -> Node_88;
Node_87 -> Node_89[style=dashed];
Node_88 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_90 -> Node_96[style=dashed];
Node_91 -> Node_92;
Node_92 -> Node_93;
Node_92 -> Node_166[style=dashed];
Node_93 -> Node_92;
Node_94 -> Node_95;
Node_95 -> Node_85;
Node_97 -> Node_98;
Node_97 -> Node_99[style=dashed];
Node_98 -> Node_100;
Node_99 -> Node_100;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_103;
Node_103 -> Node_104;
Node_102 -> Node_104;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_107;
Node_107 -> Node_108;
Node_106 -> Node_108;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_111;
Node_111 -> Node_112;
Node_110 -> Node_112;
Node_112 -> Node_113;
Node_113 -> Node_114;
Node_113 -> Node_132[style=dashed];
Node_114 -> Node_115;
Node_117 -> Node_118;
Node_121 -> Node_122;
Node_125 -> Node_126;
Node_129 -> Node_130;
Node_130 -> Node_131;
Node_130 -> Node_167[style=dashed];
Node_131 -> Node_130;
Node_132 -> Node_133;
Node_136 -> Node_137;
Node_143 -> Node_144;
Node_150 -> Node_151;
Node_157 -> Node_158;
Node_158 -> Node_159;
Node_158 -> Node_162[style=dashed];
Node_159 -> Node_160;
Node_162 -> Node_163;
Node_163 -> Node_164;
Node_164 -> Node_165;
Node_165 -> Node_85;
Node_84 -> Node_86;
Node_166 -> Node_94;
Node_96 -> Node_97;
Node_104 -> Node_105;
Node_108 -> Node_109;
Node_115 -> Node_116;
Node_115 -> Node_117;
Node_116 -> Node_117;
Node_118 -> Node_119;
Node_118 -> Node_120;
Node_119 -> Node_121;
Node_122 -> Node_123;
Node_122 -> Node_124;
Node_123 -> Node_125;
Node_126 -> Node_127;
Node_126 -> Node_128;
Node_127 -> Node_129;
Node_167 -> Node_132;
Node_128 -> Node_129;
Node_124 -> Node_125;
Node_120 -> Node_121;
Node_133 -> Node_134;
Node_133 -> Node_135;
Node_134 -> Node_136;
Node_137 -> Node_138;
Node_137 -> Node_139;
Node_138 -> Node_140;
Node_140 -> Node_141;
Node_140 -> Node_142;
Node_141 -> Node_143;
Node_144 -> Node_145;
Node_144 -> Node_146;
Node_145 -> Node_147;
Node_147 -> Node_148;
Node_147 -> Node_149;
Node_148 -> Node_150;
Node_151 -> Node_153;
Node_151 -> Node_154;
Node_153 -> Node_154;
Node_154 -> Node_156;
Node_154 -> Node_157;
Node_156 -> Node_157;
Node_160 -> Node_163[style=dashed];
Node_160 -> Node_164;
Node_149 -> Node_150;
Node_146 -> Node_147;
Node_142 -> Node_143;
Node_139 -> Node_140;
Node_135 -> Node_136;
}

