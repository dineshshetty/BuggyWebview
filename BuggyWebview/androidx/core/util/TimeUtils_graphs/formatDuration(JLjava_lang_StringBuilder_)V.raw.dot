digraph "CFG forandroidx.core.util.TimeUtils.formatDuration(JLjava\/lang\/StringBuilder;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: SGET  (r0 I:java.lang.Object) =  androidx.core.util.TimeUtils.sFormatSync java.lang.Object  (LINE:154)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0010, blocks: (B:18:0x0004, B:19:0x000e), top: B:24:0x0004 \}\lCatch: all \-\> 0x0010\l|0x0004: INVOKE  (r2 I:int) = (r4 I:long A[D('duration' long)]), (r1 I:int) type: STATIC call: androidx.core.util.TimeUtils.formatDurationLocked(long, int):int A[Catch: all \-\> 0x0010, MD:(long, int):int (m), TRY_ENTER]\l0x0008: SGET  (r3 I:char[]) =  androidx.core.util.TimeUtils.sFormatStr char[] A[Catch: all \-\> 0x0010] (LINE:156)\l0x000a: INVOKE  \l  (r6 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r3 I:char[])\l  (r1 I:int)\l  (r2 I:int A[D('len' int)])\l type: VIRTUAL call: java.lang.StringBuilder.append(char[], int, int):java.lang.StringBuilder A[Catch: all \-\> 0x0010, MD:(char[], int, int):java.lang.StringBuilder (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|TryCatch #0 \{all \-\> 0x0010, blocks: (B:18:0x0004, B:19:0x000e), top: B:24:0x0004 \}\lCatch: all \-\> 0x0010\l|0x000e: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0010]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:158)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|ExcHandler: all \-\> 0x0010\l|0x0010: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0010] (LINE:157)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|TRY_LEAVE\lCatch: all \-\> 0x0010\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.util.TimeUtils.formatDuration((r4 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0012 \-\> B:14:?, CROSS_EDGE: B:24:0x0004 \-\> B:21:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x000e: r2 'len' I\l  \-1 \-0x0012: r4 'duration' J\l  \-1 \-0x0012: r6 'builder' Ljava\/lang\/StringBuilder;\lTryCatch #0 \{all \-\> 0x0010, blocks: (B:18:0x0004, B:19:0x000e), top: B:24:0x0004 \}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_24;
Node_24 -> Node_18;
Node_24 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_25;
Node_20 -> Node_14;
Node_25 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

