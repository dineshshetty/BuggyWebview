digraph "CFG forandroidx.core.util.LruCacheKt.lruCache$default(ILkotlin\/jvm\/functions\/Function2;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function4;ILjava\/lang\/Object;)Landroid\/util\/LruCache;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:38)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r5 I:androidx.core.util.LruCacheKt$lruCache$1) =  androidx.core.util.LruCacheKt$lruCache$1.INSTANCE androidx.core.util.LruCacheKt$lruCache$1  (LINE:40)\l0x0006: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('sizeOf' kotlin.jvm.functions.Function2)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0007: CHECK_CAST (r1 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r1 I:??[OBJECT, ARRAY] A[D('sizeOf' kotlin.jvm.functions.Function2)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:38)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: SGET  (r5 I:androidx.core.util.LruCacheKt$lruCache$2) =  androidx.core.util.LruCacheKt$lruCache$2.INSTANCE androidx.core.util.LruCacheKt$lruCache$2  (LINE:42)\l0x000f: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('create' kotlin.jvm.functions.Function1)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0010: CHECK_CAST (r2 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r2 I:??[OBJECT, ARRAY] A[D('create' kotlin.jvm.functions.Function1)]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char])  (LINE:38)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: SGET  (r4 I:androidx.core.util.LruCacheKt$lruCache$3) =  androidx.core.util.LruCacheKt$lruCache$3.INSTANCE androidx.core.util.LruCacheKt$lruCache$3  (LINE:44)\l0x0018: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('onEntryRemoved' kotlin.jvm.functions.Function4)]) = (r4 I:??[OBJECT, ARRAY]) \l0x0019: CHECK_CAST (r3 I:kotlin.jvm.functions.Function4) = (kotlin.jvm.functions.Function4) (r3 I:??[OBJECT, ARRAY] A[D('onEntryRemoved' kotlin.jvm.functions.Function4)]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: CONST_STR  (r4 I:java.lang.String) =  \"sizeOf\"  (LINE:38)\l0x001d: INVOKE  (r1 I:java.lang.Object A[D('sizeOf' kotlin.jvm.functions.Function2)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0020: CONST_STR  (r4 I:java.lang.String) =  \"create\" \l0x0022: INVOKE  (r2 I:java.lang.Object A[D('create' kotlin.jvm.functions.Function1)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0025: CONST_STR  (r4 I:java.lang.String) =  \"onEntryRemoved\" \l0x0027: INVOKE  (r3 I:java.lang.Object A[D('onEntryRemoved' kotlin.jvm.functions.Function4)]), (r4 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x002a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: NEW_INSTANCE  (r5 I:androidx.core.util.LruCacheKt$lruCache$4) =  androidx.core.util.LruCacheKt$lruCache$4  (LINE:46)\l0x002d: INVOKE  \l  (r5 I:androidx.core.util.LruCacheKt$lruCache$4)\l  (r0 I:int A[D('maxSize' int)])\l  (r1 I:kotlin.jvm.functions.Function2 A[D('sizeOf' kotlin.jvm.functions.Function2)])\l  (r2 I:kotlin.jvm.functions.Function1 A[D('create' kotlin.jvm.functions.Function1)])\l  (r3 I:kotlin.jvm.functions.Function4 A[D('onEntryRemoved' kotlin.jvm.functions.Function4)])\l type: DIRECT call: androidx.core.util.LruCacheKt$lruCache$4.\<init\>(int, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function4):void A[MD:(int, kotlin.jvm.functions.Function2\<? super K, ? super V, java.lang.Integer\>, kotlin.jvm.functions.Function1\<? super K, ? extends V\>, kotlin.jvm.functions.Function4\<? super java.lang.Boolean, ? super K, ? super V, ? super V, kotlin.Unit\>):void (m)]\l0x0030: CHECK_CAST (r5 I:android.util.LruCache) = (android.util.LruCache) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|RETURN\l|0x0032: RETURN  (r5 I:android.util.LruCache) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ android.util.LruCache androidx.core.util.LruCacheKt.lruCache$default((r0 I:int A[D('maxSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:kotlin.jvm.functions.Function2 A[D('sizeOf' kotlin.jvm.functions.Function2), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function1 A[D('create' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function4 A[D('onEntryRemoved' kotlin.jvm.functions.Function4), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:9:0x0014 \-\> B:11:0x001b, CROSS_EDGE: B:6:0x000b \-\> B:8:0x0012, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0009\lDebug Info:\l  \-1 \-0x0032: r0 'maxSize' I\l  \-1 \-0x0032: r1 'sizeOf' Lkotlin\/jvm\/functions\/Function2;\l  \-1 \-0x0032: r2 'create' Lkotlin\/jvm\/functions\/Function1;\l  \-1 \-0x0032: r3 'onEntryRemoved' Lkotlin\/jvm\/functions\/Function4;\l  0x002b\-0x0032: r4 '$i$f$lruCache' I\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [38=4]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

