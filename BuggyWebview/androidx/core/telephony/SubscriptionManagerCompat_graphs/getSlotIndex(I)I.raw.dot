digraph "CFG forandroidx.core.telephony.SubscriptionManagerCompat.getSlotIndex(I)I" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:43)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('subId' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0004 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:int)  (LINE:44)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0004|0x0004: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:47)\l0x0006: CONST  (r2 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0008|0x0008: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:58:0x000f \l}"];
Node_37 [shape=record,label="{37\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r7 I:int A[D('subId' int)]) type: STATIC call: androidx.core.telephony.SubscriptionManagerCompat.Api29Impl.getSlotIndex(int):int A[MD:(int):int (m)] (LINE:48)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ 0x000f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x000f|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x000f: SGET  (r1 I:java.lang.reflect.Method) =  androidx.core.telephony.SubscriptionManagerCompat.sGetSlotIndexMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, TRY_ENTER] (LINE:51)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0041 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0015|TryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x0015: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e] (LINE:52)\l0x0017: CONST  (r4 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:44:0x002c \l}"];
Node_43 [shape=record,label="{43\:\ 0x001b|TryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x001b: CONST_CLASS  (r1 I:java.lang.Class\<android.telephony.SubscriptionManager\>) =  android.telephony.SubscriptionManager.class  (LINE:53)\l0x001d: CONST_STR  (r4 I:java.lang.String) =  \"getSlotIndex\" \l0x001f: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0021: SGET  (r6 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0023: APUT  (r5 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0025: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r4 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0029: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.telephony.SubscriptionManagerCompat.sGetSlotIndexMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x002b: GOTO  \-\> 0x003c \l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|TryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x003c: SGET  (r1 I:java.lang.reflect.Method) =  androidx.core.telephony.SubscriptionManagerCompat.sGetSlotIndexMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e] (LINE:59)\l0x003e: INVOKE  (r1 I:java.lang.reflect.Method), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:(boolean):void (s)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x002c|TryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x002c: CONST_CLASS  (r1 I:java.lang.Class\<android.telephony.SubscriptionManager\>) =  android.telephony.SubscriptionManager.class  (LINE:56)\l0x002e: CONST_STR  (r4 I:java.lang.String) =  \"getSlotId\" \l0x0030: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0032: SGET  (r6 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0034: APUT  (r5 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0036: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r4 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x003a: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.telephony.SubscriptionManagerCompat.sGetSlotIndexMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0041|TryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x0041: SGET  (r1 I:java.lang.reflect.Method) =  androidx.core.telephony.SubscriptionManagerCompat.sGetSlotIndexMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e] (LINE:62)\l0x0043: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0044: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x0046: INVOKE  (r5 I:java.lang.Integer) = (r7 I:int A[D('subId' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:(int):java.lang.Integer (c)]\l0x004a: APUT  (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l0x004c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.reflect.Method), (r4 I:java.lang.Object), (r3 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0050: CHECK_CAST (r1 I:java.lang.Integer) = (java.lang.Integer) (r1 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0052|0x0052: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('slotIdx' java.lang.Integer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0060  (LINE:63)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0054|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\lCatch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e\l|0x0054: INVOKE  (r0 I:int) = (r1 I:java.lang.Integer A[D('slotIdx' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: InvocationTargetException \-\> 0x005a, IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, MD:():int (c), TRY_LEAVE] (LINE:64)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0058|RETURN\l|0x0058: RETURN  (r0 I:int) \l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_57 [shape=record,label="{57\:\ 0x0060|RETURN\l|0x0060: RETURN  (r0 I:int)  (LINE:71)\l}"];
Node_53 [shape=record,label="{53\:\ 0x005c|ExcHandler: IllegalAccessException \-\> 0x005c\l|0x005c: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x005c] (LINE:67)\l}"];
Node_55 [shape=record,label="{55\:\ 0x005e|ExcHandler: NoSuchMethodException \-\> 0x005e\l|0x005e: MOVE_EXCEPTION  (r1 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x005e] (LINE:66)\l}"];
Node_51 [shape=record,label="{51\:\ 0x005a|ExcHandler: InvocationTargetException \-\> 0x005a\l|0x005a: MOVE_EXCEPTION  (r1 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x005a] (LINE:68)\l}"];
MethodNode[shape=record,label="{public static int androidx.core.telephony.SubscriptionManagerCompat.getSlotIndex((r7 I:int A[D('subId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x000e \-\> B:31:?, CROSS_EDGE: B:49:0x0058 \-\> B:31:?, CROSS_EDGE: B:57:0x0060 \-\> B:31:?, CROSS_EDGE: B:55:0x005e \-\> B:57:0x0060, CROSS_EDGE: B:51:0x005a \-\> B:57:0x0060, CROSS_EDGE: B:47:0x0052 \-\> B:57:0x0060, CROSS_EDGE: B:44:0x002c \-\> B:45:0x003c, CROSS_EDGE: B:40:0x0013 \-\> B:46:0x0041, CROSS_EDGE: B:58:0x000f \-\> B:53:0x005c, CROSS_EDGE: B:58:0x000f \-\> B:55:0x005e, CROSS_EDGE: B:58:0x000f \-\> B:51:0x005a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0052\-0x0059: r1 'slotIdx' Ljava\/lang\/Integer;\l  \-1 \-0x0060: r7 'subId' I\lTryCatch #2 \{IllegalAccessException \-\> 0x005c, NoSuchMethodException \-\> 0x005e, InvocationTargetException \-\> 0x005a, blocks: (B:39:0x000f, B:41:0x0015, B:43:0x001b, B:45:0x003c, B:44:0x002c, B:46:0x0041, B:48:0x0054), top: B:58:0x000f \}\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_31;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_58;
Node_37 -> Node_38;
Node_38 -> Node_31;
Node_58 -> Node_39;
Node_58 -> Node_53;
Node_58 -> Node_55;
Node_58 -> Node_51;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_57;
Node_48 -> Node_49;
Node_48 -> Node_59;
Node_49 -> Node_31;
Node_59 -> Node_53;
Node_59 -> Node_55;
Node_59 -> Node_51;
Node_57 -> Node_31;
Node_53 -> Node_57;
Node_55 -> Node_57;
Node_51 -> Node_57;
}

