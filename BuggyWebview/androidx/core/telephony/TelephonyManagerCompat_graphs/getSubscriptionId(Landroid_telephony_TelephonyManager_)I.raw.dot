digraph "CFG forandroidx.core.telephony.TelephonyManagerCompat.getSubscriptionId(Landroid\/telephony\/TelephonyManager;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:112)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r4 I:android.telephony.TelephonyManager A[D('telephonyManager' android.telephony.TelephonyManager)]) type: STATIC call: androidx.core.telephony.TelephonyManagerCompat.Api30Impl.getSubscriptionId(android.telephony.TelephonyManager):int A[MD:(android.telephony.TelephonyManager):int (m)] (LINE:113)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:114)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (22 ??[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:26:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\lCatch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042\l|0x0011: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.telephony.TelephonyManagerCompat.sGetSubIdMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, TRY_ENTER] (LINE:116)\l0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|TryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\lCatch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042\l|0x0016: CONST_CLASS  (r0 I:java.lang.Class\<android.telephony.TelephonyManager\>) =  android.telephony.TelephonyManager.class  (LINE:117)\l0x0018: CONST_STR  (r2 I:java.lang.String) =  \"getSubId\" \l0x001a: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042]\l0x001c: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r2 I:java.lang.String), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0020: SPUT  (r0 I:java.lang.reflect.Method) androidx.core.telephony.TelephonyManagerCompat.sGetSubIdMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042]\l0x0022: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:118)\l0x0023: INVOKE  (r0 I:java.lang.reflect.Method), (r2 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, MD:(boolean):void (s)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|TryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\lCatch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042\l|0x0026: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.telephony.TelephonyManagerCompat.sGetSubIdMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042] (LINE:121)\l0x0028: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042]\l0x002a: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r4 I:java.lang.Object A[D('telephonyManager' android.telephony.TelephonyManager)])\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x002e: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('subId' java.lang.Integer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:?  (LINE:122)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|TryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\lCatch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042\l|0x0032: INVOKE  (r1 I:int) = (r0 I:java.lang.Integer A[D('subId' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, MD:():int (c)]\l0x0036: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\lCatch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042\l|0x0039: INVOKE  (r1 I:int) = (r0 I:java.lang.Integer A[D('subId' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: NoSuchMethodException \-\> 0x003e, IllegalAccessException \-\> 0x0040, InvocationTargetException \-\> 0x0042, MD:():int (c), TRY_LEAVE] (LINE:123)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|RETURN\l|0x003d: RETURN  (r1 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:131)\l0x0046: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:131)\l0x0046: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|ExcHandler: IllegalAccessException \-\> 0x0040\l|0x0040: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0040] (LINE:126)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:131)\l0x0046: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|ExcHandler: NoSuchMethodException \-\> 0x003e\l|0x003e: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x003e] (LINE:127)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:131)\l0x0046: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|ExcHandler: InvocationTargetException \-\> 0x0042\l|0x0042: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0042] (LINE:125)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|RETURN\lORIG_RETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char])  (LINE:131)\l0x0046: RETURN  (r0 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:131)\l0x0046: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static int androidx.core.telephony.TelephonyManagerCompat.getSubscriptionId((r4 I:android.telephony.TelephonyManager A[D('telephonyManager' android.telephony.TelephonyManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0046 \-\> B:1:?, CROSS_EDGE: B:16:0x003d \-\> B:1:?, CROSS_EDGE: B:19:0x0040 \-\> B:22:0x0043, CROSS_EDGE: B:17:0x003e \-\> B:22:0x0043, CROSS_EDGE: B:21:0x0042 \-\> B:22:0x0043, CROSS_EDGE: B:14:0x0037 \-\> B:22:0x0043, CROSS_EDGE: B:12:0x0030 \-\> B:22:0x0043, CROSS_EDGE: B:9:0x0014 \-\> B:11:0x0026, CROSS_EDGE: B:24:0x0011 \-\> B:19:0x0040, CROSS_EDGE: B:24:0x0011 \-\> B:17:0x003e, CROSS_EDGE: B:24:0x0011 \-\> B:21:0x0042\lDebug Info:\l  0x0030\-0x003e: r0 'subId' Ljava\/lang\/Integer;\l  \-1 \-0x0046: r4 'telephonyManager' Landroid\/telephony\/TelephonyManager;\lTryCatch #2 \{IllegalAccessException \-\> 0x0040, NoSuchMethodException \-\> 0x003e, InvocationTargetException \-\> 0x0042, blocks: (B:8:0x0011, B:10:0x0016, B:11:0x0026, B:13:0x0032, B:15:0x0039), top: B:24:0x0011 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_24[style=dashed];
Node_7 -> Node_26;
Node_24 -> Node_8;
Node_24 -> Node_19;
Node_24 -> Node_17;
Node_24 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_27;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_28;
Node_15 -> Node_16;
Node_15 -> Node_25;
Node_16 -> Node_1;
Node_25 -> Node_19;
Node_25 -> Node_17;
Node_25 -> Node_21;
Node_28 -> Node_1;
Node_27 -> Node_1;
Node_19 -> Node_30;
Node_30 -> Node_1;
Node_17 -> Node_29;
Node_29 -> Node_1;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_26 -> Node_1;
}

