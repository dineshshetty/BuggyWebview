digraph "CFG forandroidx.core.net.TrafficStatsCompat.tagDatagramSocket(Ljava\/net\/DatagramSocket;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 24) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|androidx.core.net.TrafficStatsCompat.Api24Impl.tagDatagramSocket(r3)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|android.os.ParcelFileDescriptor r0 = android.os.ParcelFileDescriptor.fromDatagramSocket(r3)\landroid.net.TrafficStats.tagSocket(new androidx.core.net.DatagramSocketWrapper(r3, r0.getFileDescriptor()))\lr0.detachFd()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.core.net.TrafficStatsCompat.tagDatagramSocket((r3v0 'socket' java.net.DatagramSocket A[D('socket' java.net.DatagramSocket), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000a \-\> B:6:0x001d\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/net\/SocketException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

