digraph "CFG forandroidx.core.net.UriKt.toFile(Landroid\/net\/Uri;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r3 I:java.lang.Object A[D('$this$toFile' android.net.Uri)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.lang.String) = (r3 I:android.net.Uri A[D('$this$toFile' android.net.Uri)]) type: VIRTUAL call: android.net.Uri.getScheme():java.lang.String A[MD:():java.lang.String (c)] (LINE:43)\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"file\" \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0039 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r0 I:java.lang.String) = (r3 I:android.net.Uri A[D('$this$toFile' android.net.Uri)]) type: VIRTUAL call: android.net.Uri.getPath():java.lang.String A[MD:():java.lang.String (c)] (LINE:44)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x0019: INVOKE  (r1 I:java.io.File), (r0 I:java.lang.String) type: DIRECT call: java.io.File.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:java.io.File) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:47)\l0x001e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:44)\l0x0020: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"Uri path is null: \" \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object A[D('$this$toFile' android.net.Uri)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-requireNotNull\-UriKt$toFile$2' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x002f: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0031: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0035: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:47)\l0x003a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:43)\l0x003c: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"Uri lacks 'file' scheme: \" \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object A[D('$this$toFile' android.net.Uri)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-require\-UriKt$toFile$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0051: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.io.File androidx.core.net.UriKt.toFile((r3 I:android.net.Uri A[D('$this$toFile' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0038 \-\> B:1:?, CROSS_EDGE: B:11:0x0054 \-\> B:1:?\lDebug Info:\l  0x001e\-0x002f: r0 '$i$a$\-requireNotNull\-UriKt$toFile$2' I\l  0x003a\-0x004b: r0 '$i$a$\-require\-UriKt$toFile$1' I\l  \-1 \-0x0054: r3 '$this$toFile' Landroid\/net\/Uri;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

