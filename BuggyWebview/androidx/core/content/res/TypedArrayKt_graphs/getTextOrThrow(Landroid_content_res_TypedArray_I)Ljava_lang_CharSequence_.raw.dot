digraph "CFG forandroidx.core.content.res.TypedArrayKt.getTextOrThrow(Landroid\/content\/res\/TypedArray;I)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$getTextOrThrow' android.content.res.TypedArray)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  \l  (r2 I:android.content.res.TypedArray A[D('$this$getTextOrThrow' android.content.res.TypedArray)])\l  (r3 I:int A[D('index' int)])\l type: STATIC call: androidx.core.content.res.TypedArrayKt.checkAttribute(android.content.res.TypedArray, int):void A[MD:(android.content.res.TypedArray, int):void (m)] (LINE:209)\l0x0008: INVOKE  (r0 I:java.lang.CharSequence) = \l  (r2 I:android.content.res.TypedArray A[D('$this$getTextOrThrow' android.content.res.TypedArray)])\l  (r3 I:int A[D('index' int)])\l type: VIRTUAL call: android.content.res.TypedArray.getText(int):java.lang.CharSequence A[MD:(int):java.lang.CharSequence (c)] (LINE:210)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('$i$a$\-checkNotNull\-TypedArrayKt$getTextOrThrow$1' int)]) =  java.lang.IllegalStateException  (LINE:210)\l0x0013: CONST_STR  (r1 I:java.lang.String) =  \"Attribute value could not be coerced to CharSequence.\" \l0x0015: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0019: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence androidx.core.content.res.TypedArrayKt.getTextOrThrow((r2 I:android.content.res.TypedArray A[D('$this$getTextOrThrow' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x001c \-\> B:1:?\lDebug Info:\l  0x0010\-0x0011: r0 '$i$a$\-checkNotNull\-TypedArrayKt$getTextOrThrow$1' I\l  \-1 \-0x001c: r2 '$this$getTextOrThrow' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x001c: r3 'index' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

