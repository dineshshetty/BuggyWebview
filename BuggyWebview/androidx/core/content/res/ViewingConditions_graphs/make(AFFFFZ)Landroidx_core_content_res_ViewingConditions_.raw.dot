digraph "CFG forandroidx.core.content.res.ViewingConditions.make([FFFFZ)Landroidx\/core\/content\/res\/ViewingConditions;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('adaptingLuminance' float)])  (LINE:130)\l0x0002: SGET  (r1 I:float[][]) =  androidx.core.content.res.CamUtils.XYZ_TO_CAM16RGB float[][] \l0x0004: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r31 I:??[OBJECT, ARRAY] A[D('whitepoint' float[])])  (LINE:131)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:132)\l0x0007: AGET  (r4 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r3 I:??[int, short, byte, char]) \l0x0009: AGET  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r3 I:??[int, short, byte, char]) \l0x000b: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x000d: ARITH  (r4 I:float) = (r4 I:float) * (r5 I:float) \l0x000f: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: AGET  (r6 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r5 I:??[int, short, byte, char]) \l0x0012: AGET  (r7 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r3 I:??[int, short, byte, char]) \l0x0014: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r5 I:??[int, short, byte, char]) \l0x0016: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x0018: ARITH  (r4 I:float) = (r4 I:float) + (r6 I:float) \l0x0019: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x001a: AGET  (r7 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r6 I:??[int, short, byte, char]) \l0x001c: AGET  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r3 I:??[int, short, byte, char]) \l0x001e: AGET  (r8 I:??[int, float, short, byte, char]) = (r8 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x0020: ARITH  (r7 I:float) = (r7 I:float) * (r8 I:float) \l0x0022: ARITH  (r4 I:float) = (r4 I:float) + (r7 I:float) \l0x0023: AGET  (r7 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r3 I:??[int, short, byte, char])  (LINE:133)\l0x0025: AGET  (r8 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r5 I:??[int, short, byte, char]) \l0x0027: AGET  (r8 I:??[int, float, short, byte, char]) = (r8 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0029: ARITH  (r7 I:float) = (r7 I:float) * (r8 I:float) \l0x002b: AGET  (r8 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r5 I:??[int, short, byte, char]) \l0x002d: AGET  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r5 I:??[int, short, byte, char]) \l0x002f: AGET  (r9 I:??[int, float, short, byte, char]) = (r9 I:??[int, float][]), (r5 I:??[int, short, byte, char]) \l0x0031: ARITH  (r8 I:float) = (r8 I:float) * (r9 I:float) \l0x0033: ARITH  (r7 I:float) = (r7 I:float) + (r8 I:float) \l0x0034: AGET  (r8 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r6 I:??[int, short, byte, char]) \l0x0036: AGET  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r5 I:??[int, short, byte, char]) \l0x0038: AGET  (r9 I:??[int, float, short, byte, char]) = (r9 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x003a: ARITH  (r8 I:float) = (r8 I:float) * (r9 I:float) \l0x003c: ARITH  (r7 I:float) = (r7 I:float) + (r8 I:float) \l0x003d: AGET  (r8 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r3 I:??[int, short, byte, char])  (LINE:134)\l0x003f: AGET  (r9 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r6 I:??[int, short, byte, char]) \l0x0041: AGET  (r9 I:??[int, float, short, byte, char]) = (r9 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0043: ARITH  (r8 I:float) = (r8 I:float) * (r9 I:float) \l0x0045: AGET  (r9 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r5 I:??[int, short, byte, char]) \l0x0047: AGET  (r10 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r6 I:??[int, short, byte, char]) \l0x0049: AGET  (r10 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][]), (r5 I:??[int, short, byte, char]) \l0x004b: ARITH  (r9 I:float) = (r9 I:float) * (r10 I:float) \l0x004d: ARITH  (r8 I:float) = (r8 I:float) + (r9 I:float) \l0x004e: AGET  (r9 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('xyz' float[])]), (r6 I:??[int, short, byte, char]) \l0x0050: AGET  (r10 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('matrix' float[][])]), (r6 I:??[int, short, byte, char]) \l0x0052: AGET  (r10 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x0054: ARITH  (r9 I:float) = (r9 I:float) * (r10 I:float) \l0x0056: ARITH  (r8 I:float) = (r8 I:float) + (r9 I:float) \l0x0057: CONST  (r9 I:??[int, float, short, byte, char]) = (1092616192(0x41200000, float:10.0) ??[int, float, short, byte, char])  (LINE:137)\l0x0059: ARITH  (r10 I:float) = (r34 I:float A[D('surround' float)]) \/ (r9 I:float) \l0x005b: CONST  (r11 I:??[int, float, short, byte, char]) = (1061997773(0x3f4ccccd, float:0.8) ??[int, float, short, byte, char]) \l0x005e: ARITH  (r10 I:float) = (r10 I:float) + (r11 I:float) \l0x005f: CAST (r12 I:double) = (double) (r10 I:float A[D('f' float)])  (LINE:139)\l0x0060: CONST  (r14 I:??[int, float, short, byte, char]) = (1058474557(0x3f170a3d, float:0.59) ??[int, float, short, byte, char]) \l0x0063: CONST  (r15 I:??[long, double]) = (4606281698874543309(0x3feccccccccccccd, double:0.9) ??[long, double]) \l0x0068: CMP_L  (r17 I:int) = (r12 I:double), (r15 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|0x006a: IF  (r17 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x007b \l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|0x006c: CONST  (r11 I:??[int, float, short, byte, char]) = (1060152279(0x3f30a3d7, float:0.69) ??[int, float, short, byte, char]) \l0x006f: CONST  (r12 I:??[int, float, short, byte, char]) = (1063675494(0x3f666666, float:0.9) ??[int, float, short, byte, char]) \l0x0072: ARITH  (r12 I:float) = (r10 I:float A[D('f' float)]) \- (r12 I:float) \l0x0074: ARITH  (r12 I:float) = (r12 I:float) * (r9 I:float) \l0x0076: INVOKE  (r9 I:float) = (r14 I:float), (r11 I:float), (r12 I:float) type: STATIC call: androidx.core.content.res.CamUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0086|0x0086: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0088: CONST  (r9 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:142)\l}"];
Node_26 [shape=record,label="{26\:\ 0x008a|0x008a: IF  (r35 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('discountingIlluminant' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x008f \l}"];
Node_27 [shape=record,label="{27\:\ 0x008c|0x008c: CONST  (r11 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a5|0x00a5: CAST (r12 I:double) = (double) (r11 I:float A[D('d' float)])  (LINE:145)\l0x00a6: CONST  (r14 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x00a8: CMP_L  (r16 I:int) = (r12 I:double), (r14 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00aa|0x00aa: IF  (r16 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:32:0x00af \l}"];
Node_31 [shape=record,label="{31\:\ 0x00ac|0x00ac: CONST  (r12 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b9|0x00b9: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d' float)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00ba: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('f' float)])  (LINE:147)\l0x00bc: CONST  (r12 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:159)\l0x00bd: NEW_ARRAY  (r13 I:float[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x00bf: CONST  (r14 I:??[int, float, short, byte, char]) = (1120403456(0x42c80000, float:100.0) ??[int, float, short, byte, char]) \l0x00c1: ARITH  (r15 I:float) = (r14 I:float) \/ (r4 I:float A[D('rW' float)]) \l0x00c3: ARITH  (r15 I:float) = (r15 I:float) * (r11 I:float A[D('d' float)]) \l0x00c5: ARITH  (r15 I:float) = (r15 I:float) + (r9 I:float) \l0x00c6: ARITH  (r15 I:float) = (r15 I:float) \- (r11 I:float A[D('d' float)]) \l0x00c7: APUT  (r13 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r15 I:??[int, float, short, byte, char]) \l0x00c9: ARITH  (r15 I:float) = (r14 I:float) \/ (r7 I:float A[D('gW' float)]) \l0x00cb: ARITH  (r15 I:float) = (r15 I:float) * (r11 I:float A[D('d' float)]) \l0x00cd: ARITH  (r15 I:float) = (r15 I:float) + (r9 I:float) \l0x00ce: ARITH  (r15 I:float) = (r15 I:float) \- (r11 I:float A[D('d' float)]) \l0x00cf: APUT  (r13 I:??[int, float][]), (r5 I:??[int, short, byte, char]), (r15 I:??[int, float, short, byte, char]) \l0x00d1: ARITH  (r14 I:float) = (r14 I:float) \/ (r8 I:float A[D('bW' float)]) \l0x00d2: ARITH  (r14 I:float) = (r14 I:float) * (r11 I:float A[D('d' float)]) \l0x00d4: ARITH  (r14 I:float) = (r14 I:float) + (r9 I:float) \l0x00d5: ARITH  (r14 I:float) = (r14 I:float) \- (r11 I:float A[D('d' float)]) \l0x00d6: APUT  (r13 I:??[int, float][]), (r6 I:??[int, short, byte, char]), (r14 I:??[int, float, short, byte, char]) \l0x00d8: MOVE  (r23 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l0x00da: CONST  (r13 I:??[int, float, short, byte, char]) = (1084227584(0x40a00000, float:5.0) ??[int, float, short, byte, char])  (LINE:162)\l0x00dc: ARITH  (r13 I:float) = (r13 I:float) * (r0 I:float) \l0x00de: ARITH  (r13 I:float) = (r13 I:float) + (r9 I:float) \l0x00df: ARITH  (r24 I:float) = (r9 I:float) \/ (r13 I:float) \l0x00e1: ARITH  (r13 I:float) = (r24 I:float A[D('k' float)]) * (r24 I:float A[D('k' float)])  (LINE:163)\l0x00e3: ARITH  (r13 I:float) = (r13 I:float) * (r24 I:float A[D('k' float)]) \l0x00e5: ARITH  (r25 I:float) = (r13 I:float) * (r24 I:float A[D('k' float)]) \l0x00e7: ARITH  (r9 I:float) = (r9 I:float) \- (r25 I:float A[D('k4' float)])  (LINE:164)\l0x00e9: ARITH  (r13 I:float) = (r25 I:float A[D('k4' float)]) * (r0 I:float)  (LINE:165)\l0x00eb: CONST  (r14 I:??[int, float, short, byte, char]) = (1036831949(0x3dcccccd, float:0.1) ??[int, float, short, byte, char]) \l0x00ee: ARITH  (r14 I:float) = (r14 I:float) * (r9 I:float A[D('k4F' float)]) \l0x00f0: ARITH  (r14 I:float) = (r14 I:float) * (r9 I:float A[D('k4F' float)]) \l0x00f2: CONST  (r15 I:??[long, double]) = (4617315517961601024(0x4014000000000000, double:5.0) ??[long, double]) \l0x00f4: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('gW' float)]) \l0x00f6: CAST (r6 I:double) = (double) (r0 I:float) \l0x00f7: ARITH  (r6 I:double) = (r6 I:double) * (r15 I:double) \l0x00f9: INVOKE  (r6 I:double) = (r6 I:double) type: STATIC call: java.lang.Math.cbrt(double):double A[MD:(double):double (c)]\l0x00fd: CAST (r6 I:float) = (float) (r6 I:double) \l0x00fe: ARITH  (r14 I:float) = (r14 I:float) * (r6 I:float) \l0x0100: ARITH  (r6 I:float) = (r13 I:float) + (r14 I:float) \l0x0102: INVOKE  (r7 I:float) = (r33 I:float A[D('backgroundLstar' float)]) type: STATIC call: androidx.core.content.res.CamUtils.yFromLStar(float):float A[MD:(float):float (m)] (LINE:169)\l0x0106: AGET  (r13 I:??[int, float, short, byte, char]) = (r31 I:??[int, float][] A[D('whitepoint' float[])]), (r5 I:??[int, short, byte, char]) \l0x0108: ARITH  (r7 I:float) = (r7 I:float) \/ (r13 I:float) \l0x0109: CONST  (r13 I:??[int, float, short, byte, char]) = (1069379748(0x3fbd70a4, float:1.48) ??[int, float, short, byte, char])  (LINE:173)\l0x010c: CAST (r14 I:double) = (double) (r7 I:float A[D('n' float)]) \l0x010d: INVOKE  (r14 I:double) = (r14 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0111: CAST (r14 I:float) = (float) (r14 I:double) \l0x0112: ARITH  (r27 I:float) = (r14 I:float) + (r13 I:float) \l0x0114: CONST  (r13 I:??[int, float, short, byte, char]) = (1060739482(0x3f39999a, float:0.725) ??[int, float, short, byte, char])  (LINE:176)\l0x0117: CAST (r14 I:double) = (double) (r7 I:float A[D('n' float)]) \l0x0118: MOVE  (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fl' float)]) \l0x011a: CONST  (r5 I:??[long, double]) = (4596373779694328218(0x3fc999999999999a, double:0.2) ??[long, double]) \l0x011f: INVOKE  (r5 I:double) = (r14 I:double), (r5 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0123: CAST (r5 I:float) = (float) (r5 I:double) \l0x0124: ARITH  (r5 I:float) = (r13 I:float) \/ (r5 I:float) \l0x0126: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nbb' float)])  (LINE:177)\l0x0128: NEW_ARRAY  (r6 I:float[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: float[]  (LINE:181)\l0x012a: AGET  (r13 I:??[int, float, short, byte, char]) = (r23 I:??[int, float][] A[D('rgbD' float[])]), (r3 I:??[int, short, byte, char]) \l0x012c: ARITH  (r13 I:float) = (r13 I:float) * (r28 I:float A[D('fl' float)]) \l0x012e: ARITH  (r13 I:float) = (r13 I:float) * (r4 I:float A[D('rW' float)]) \l0x0130: CAST (r13 I:double) = (double) (r13 I:float) \l0x0131: CONST  (r21 I:??[long, double]) = (4636737291354636288(0x4059000000000000, double:100.0) ??[long, double]) \l0x0133: ARITH  (r13 I:double) = (r13 I:double) \/ (r21 I:double) \l0x0135: MOVE  (r29 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rW' float)]) \l0x0137: CONST  (r3 I:??[long, double]) = (4601237667291888353(0x3fdae147ae147ae1, double:0.42) ??[long, double]) \l0x013c: INVOKE  (r13 I:double) = (r13 I:double), (r3 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0140: CAST (r13 I:float) = (float) (r13 I:double) \l0x0141: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0142: APUT  (r6 I:??[int, float][]), (r14 I:??[int, short, byte, char]), (r13 I:??[int, float, short, byte, char]) \l0x0144: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0145: AGET  (r14 I:??[int, float, short, byte, char]) = (r23 I:??[int, float][] A[D('rgbD' float[])]), (r13 I:??[int, short, byte, char]) \l0x0147: ARITH  (r14 I:float) = (r14 I:float) * (r28 I:float A[D('fl' float)]) \l0x0149: ARITH  (r14 I:float) = (r14 I:float) * (r26 I:float A[D('gW' float)]) \l0x014b: CAST (r12 I:double) = (double) (r14 I:float) \l0x014c: ARITH  (r12 I:double) = (r12 I:double) \/ (r21 I:double) \l0x014e: INVOKE  (r12 I:double) = (r12 I:double), (r3 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)] (LINE:182)\l0x0152: CAST (r12 I:float) = (float) (r12 I:double) \l0x0153: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0154: APUT  (r6 I:??[int, float][]), (r13 I:??[int, short, byte, char]), (r12 I:??[int, float, short, byte, char]) \l0x0156: CONST  (r12 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0157: AGET  (r13 I:??[int, float, short, byte, char]) = (r23 I:??[int, float][] A[D('rgbD' float[])]), (r12 I:??[int, short, byte, char]) \l0x0159: ARITH  (r13 I:float) = (r13 I:float) * (r28 I:float A[D('fl' float)]) \l0x015b: ARITH  (r13 I:float) = (r13 I:float) * (r8 I:float A[D('bW' float)]) \l0x015d: CAST (r13 I:double) = (double) (r13 I:float) \l0x015e: ARITH  (r13 I:double) = (r13 I:double) \/ (r21 I:double) \l0x0160: INVOKE  (r3 I:double) = (r13 I:double), (r3 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x0164: CAST (r3 I:float) = (float) (r3 I:double) \l0x0165: APUT  (r6 I:??[int, float][]), (r12 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char]) \l0x0167: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0168: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:185)\l0x0169: NEW_ARRAY  (r4 I:float[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x016b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x016c: AGET  (r12 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x016e: CONST  (r13 I:??[int, float, short, byte, char]) = (1137180672(0x43c80000, float:400.0) ??[int, float, short, byte, char]) \l0x0170: ARITH  (r12 I:float) = (r12 I:float) * (r13 I:float) \l0x0172: AGET  (r14 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x0174: CONST  (r21 I:??[int, float, short, byte, char]) = (1104742973(0x41d90a3d, float:27.13) ??[int, float, short, byte, char]) \l0x0177: ARITH  (r14 I:float) = (r14 I:float) + (r21 I:float) \l0x0179: ARITH  (r12 I:float) = (r12 I:float) \/ (r14 I:float) \l0x017a: APUT  (r4 I:??[int, float][]), (r6 I:??[int, short, byte, char]), (r12 I:??[int, float, short, byte, char]) \l0x017c: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x017d: AGET  (r12 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x017f: ARITH  (r12 I:float) = (r12 I:float) * (r13 I:float) \l0x0181: AGET  (r14 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x0183: ARITH  (r14 I:float) = (r14 I:float) + (r21 I:float) \l0x0185: ARITH  (r12 I:float) = (r12 I:float) \/ (r14 I:float) \l0x0186: APUT  (r4 I:??[int, float][]), (r6 I:??[int, short, byte, char]), (r12 I:??[int, float, short, byte, char]) \l0x0188: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0189: AGET  (r12 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x018b: ARITH  (r12 I:float) = (r12 I:float) * (r13 I:float) \l0x018d: AGET  (r13 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('rgbAFactors' float[])]), (r6 I:??[int, short, byte, char]) \l0x018f: ARITH  (r13 I:float) = (r13 I:float) + (r21 I:float) \l0x0191: ARITH  (r12 I:float) = (r12 I:float) \/ (r13 I:float) \l0x0192: APUT  (r4 I:??[int, float][]), (r6 I:??[int, short, byte, char]), (r12 I:??[int, float, short, byte, char]) \l0x0194: CONST  (r12 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:189)\l0x0196: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0197: AGET  (r13 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][] A[D('rgbA' float[])]), (r13 I:??[int, short, byte, char]) \l0x0199: ARITH  (r13 I:float) = (r13 I:float) * (r12 I:float) \l0x019b: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x019c: AGET  (r12 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][] A[D('rgbA' float[])]), (r12 I:??[int, short, byte, char]) \l0x019e: ARITH  (r13 I:float) = (r13 I:float) + (r12 I:float) \l0x019f: CONST  (r12 I:??[int, float, short, byte, char]) = (1028443341(0x3d4ccccd, float:0.05) ??[int, float, short, byte, char]) \l0x01a2: AGET  (r6 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][] A[D('rgbA' float[])]), (r6 I:??[int, short, byte, char]) \l0x01a4: ARITH  (r6 I:float) = (r6 I:float) * (r12 I:float) \l0x01a6: ARITH  (r13 I:float) = (r13 I:float) + (r6 I:float) \l0x01a7: ARITH  (r6 I:float) = (r13 I:float) * (r5 I:float A[D('nbb' float)]) \l0x01a9: NEW_INSTANCE  (r30 I:androidx.core.content.res.ViewingConditions) =  androidx.core.content.res.ViewingConditions  (LINE:191)\l0x01ab: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fl' float)]) \l0x01ad: CAST (r12 I:double) = (double) (r15 I:float A[D('fl' float)]) \l0x01ae: MOVE  (r28 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('matrix' float[][])]) \l0x01b0: CONST  (r0 I:??[long, double]) = (4598175219545276416(0x3fd0000000000000, double:0.25) ??[long, double]) \l0x01b2: INVOKE  (r0 I:double) = (r12 I:double), (r0 I:double) type: STATIC call: java.lang.Math.pow(double, double):double A[MD:(double, double):double (c)]\l0x01b6: CAST (r0 I:float) = (float) (r0 I:double) \l0x01b7: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r30 I:??[OBJECT, ARRAY]) \l0x01b9: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('n' float)]) \l0x01ba: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('aw' float)]) \l0x01bb: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fl' float)]) \l0x01bc: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fl' float)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nbb' float)]) \l0x01bd: MOVE  (r19 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('rgbD' float[])]) \l0x01bf: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fl' float)]) \l0x01c1: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x01c3: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('z' float)]) \l0x01c5: INVOKE  \l  (r12 I:androidx.core.content.res.ViewingConditions)\l  (r13 I:float)\l  (r14 I:float)\l  (r15 I:float)\l  (r16 I:float A[D('ncb' float)])\l  (r17 I:float A[D('c' float)])\l  (r18 I:float A[D('nc' float)])\l  (r19 I:float[])\l  (r20 I:float)\l  (r21 I:float)\l  (r22 I:float)\l type: DIRECT call: androidx.core.content.res.ViewingConditions.\<init\>(float, float, float, float, float, float, float[], float, float, float):void A[MD:(float, float, float, float, float, float, float[], float, float, float):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x01c8|RETURN\l|0x01c8: RETURN  (r30 I:androidx.core.content.res.ViewingConditions) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x00af|0x00af: CAST (r12 I:double) = (double) (r11 I:float A[D('d' float)]) \l0x00b0: CONST  (r14 I:??[long, double]) = (0 ??[long, double]) \l0x00b2: CMP_G  (r16 I:int) = (r12 I:double), (r14 I:double) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b4|0x00b4: IF  (r16 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:35:0x00b8 \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b6|0x00b6: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00b8|0x00b8: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('d' float)]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x008f|0x008f: CONST  (r11 I:??[int, float, short, byte, char]) = (1049508068(0x3e8e38e4, float:0.2777778) ??[int, float, short, byte, char]) \l0x0092: NEG  (r12 I:float) = (r0 I:float) \l0x0093: CONST  (r13 I:??[int, float, short, byte, char]) = (1109917696(0x42280000, float:42.0) ??[int, float, short, byte, char]) \l0x0095: ARITH  (r12 I:float) = (r12 I:float) \- (r13 I:float) \l0x0096: CONST  (r13 I:??[int, float, short, byte, char]) = (1119354880(0x42b80000, float:92.0) ??[int, float, short, byte, char]) \l0x0098: ARITH  (r12 I:float) = (r12 I:float) \/ (r13 I:float) \l0x0099: CAST (r12 I:double) = (double) (r12 I:float) \l0x009a: INVOKE  (r12 I:double) = (r12 I:double) type: STATIC call: java.lang.Math.exp(double):double A[MD:(double):double (c)]\l0x009e: CAST (r12 I:float) = (float) (r12 I:double) \l0x009f: ARITH  (r12 I:float) = (r12 I:float) * (r11 I:float) \l0x00a1: ARITH  (r11 I:float) = (r9 I:float) \- (r12 I:float) \l0x00a3: ARITH  (r11 I:float) = (r11 I:float) * (r10 I:float A[D('f' float)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x007b|0x007b: CONST  (r12 I:??[int, float, short, byte, char]) = (1057384038(0x3f066666, float:0.525) ??[int, float, short, byte, char]) \l0x007e: ARITH  (r11 I:float) = (r10 I:float A[D('f' float)]) \- (r11 I:float) \l0x0080: ARITH  (r11 I:float) = (r11 I:float) * (r9 I:float) \l0x0082: INVOKE  (r9 I:float) = (r12 I:float), (r14 I:float), (r11 I:float) type: STATIC call: androidx.core.content.res.CamUtils.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l}"];
MethodNode[shape=record,label="{static androidx.core.content.res.ViewingConditions androidx.core.content.res.ViewingConditions.make((r31 I:float[] A[D('whitepoint' float[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:float A[D('adaptingLuminance' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:float A[D('backgroundLstar' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:float A[D('surround' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:boolean A[D('discountingIlluminant' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x00b6 \-\> B:36:0x00b9, CROSS_EDGE: B:35:0x00b8 \-\> B:36:0x00b9, CROSS_EDGE: B:28:0x008f \-\> B:29:0x00a5, CROSS_EDGE: B:24:0x007b \-\> B:25:0x0086\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x00f6: r7 'gW' F\l  0x0102\-0x011a: r6 'fl' F\l  0x0023\-0x0137: r4 'rW' F\l  0x011a\-0x01ad: r28 'fl' F\l  0x0004\-0x01b0: r1 'matrix' [[F\l  0x01ad\-0x01bc: r15 'fl' F\l  0x01bc\-0x01c8: r1 'fl' F\l  0x0006\-0x01c8: r2 'xyz' [F\l  0x0168\-0x01c8: r3 'rgbAFactors' [F\l  0x0194\-0x01c8: r4 'rgbA' [F\l  0x0126\-0x01c8: r5 'nbb' F\l  0x01a9\-0x01c8: r6 'aw' F\l  0x0109\-0x01c8: r7 'n' F\l  0x0057\-0x01c8: r8 'bW' F\l  0x00e9\-0x01c8: r9 'k4F' F\l  0x005f\-0x01c8: r10 'f' F\l  0x00a5\-0x01c8: r11 'd' F\l  0x0128\-0x01c8: r16 'ncb' F\l  0x0088\-0x01c8: r17 'c' F\l  0x00bc\-0x01c8: r18 'nc' F\l  0x00da\-0x01c8: r23 'rgbD' [F\l  0x00e1\-0x01c8: r24 'k' F\l  0x00e7\-0x01c8: r25 'k4' F\l  0x00f6\-0x01c8: r26 'gW' F\l  0x0114\-0x01c8: r27 'z' F\l  0x01b0\-0x01c8: r28 'matrix' [[F\l  0x0137\-0x01c8: r29 'rW' F\l  \-1 \-0x01c8: r31 'whitepoint' [F\l  \-1 \-0x01c8: r32 'adaptingLuminance' F\l  \-1 \-0x01c8: r33 'backgroundLstar' F\l  \-1 \-0x01c8: r34 'surround' F\l  \-1 \-0x01c8: r35 'discountingIlluminant' Z\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_28 -> Node_29;
Node_24 -> Node_25;
}

