digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.readFont(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFileResourceEntry;" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: INVOKE  (r0 I:android.util.AttributeSet) = (r21 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet A[MD:(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet (c)] (LINE:315)\l0x0004: SGET  (r1 I:int[]) =  androidx.core.R.styleable.FontFamilyFont int[]  (LINE:316)\l0x0006: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY] A[D('resources' android.content.res.Resources)]) \l0x0008: INVOKE  (r1 I:android.content.res.TypedArray) = \l  (r2 I:android.content.res.Resources)\l  (r0 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r1 I:int[])\l type: VIRTUAL call: android.content.res.Resources.obtainAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x000c: SGET  (r3 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontWeight int  (LINE:317)\l0x000e: INVOKE  (r3 I:boolean) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r3 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|0x0012: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0017 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: SGET  (r3 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontWeight int  (LINE:318)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x001a: CONST  (r4 I:??[int, float, short, byte, char]) = (400(0x190, float:5.6E\-43) ??[int, float, short, byte, char])  (LINE:320)\l0x001c: INVOKE  (r4 I:int) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r3 I:int A[D('weightAttr' int)])\l  (r4 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getInt(int, int):int A[MD:(int, int):int (c)]\l0x0020: SGET  (r5 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontStyle int  (LINE:321)\l0x0022: INVOKE  (r5 I:boolean) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r5 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0026|0x0026: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x002b \l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|0x0028: SGET  (r5 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontStyle int  (LINE:322)\l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|0x002d: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:324)\l0x002f: INVOKE  (r6 I:int) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r12 I:int A[D('styleAttr' int)])\l  (r5 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getInt(int, int):int A[MD:(int, int):int (c)]\l0x0033: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0034|0x0034: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0038 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|0x0036: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0039|0x0039: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_ttcIndex int  (LINE:325)\l0x003b: INVOKE  (r6 I:boolean) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r6 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x003f|0x003f: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0044 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0041|0x0041: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_ttcIndex int  (LINE:326)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0046|0x0046: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0047: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontVariationSettings int  (LINE:329)\l0x0049: INVOKE  (r6 I:boolean) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r6 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x004d|0x004d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0052 \l}"];
Node_53 [shape=record,label="{53\:\ 0x004f|0x004f: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_fontVariationSettings int  (LINE:330)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0054|0x0054: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0055: INVOKE  (r15 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r14 I:int A[D('variationSettingsAttr' int)])\l type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:332)\l0x0059: INVOKE  (r16 I:int) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r13 I:int A[D('ttcIndexAttr' int)])\l  (r5 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getInt(int, int):int A[MD:(int, int):int (c)] (LINE:333)\l0x005d: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_font int  (LINE:334)\l0x005f: INVOKE  (r6 I:boolean) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r6 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0063|0x0063: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0068 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0065|0x0065: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_font int  (LINE:335)\l}"];
Node_59 [shape=record,label="{59\:\ 0x006a|0x006a: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006b: INVOKE  (r17 I:int) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r11 I:int A[D('resourceAttr' int)])\l  (r5 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)] (LINE:337)\l0x006f: INVOKE  (r18 I:java.lang.String) = \l  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)])\l  (r11 I:int A[D('resourceAttr' int)])\l type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:338)\l0x0073: INVOKE  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:339)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0076|LOOP_START\lLOOP:0: B:60:0x0076\-\>B:62:0x007d\l|0x0076: INVOKE  (r5 I:int) = (r21 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:340)\l0x007a: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x007b|0x007b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0081 \l}"];
Node_62 [shape=record,label="{62\:\ 0x007d|LOOP_END\lLOOP:0: B:60:0x0076\-\>B:62:0x007d\l|0x007d: INVOKE  (r21 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):void A[MD:(org.xmlpull.v1.XmlPullParser):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:341)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0081|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0081|0x0081: NEW_INSTANCE  (r19 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) =  androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry  (LINE:343)\l0x0083: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY]) \l0x0085: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('filename' java.lang.String)]) \l0x0087: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('weight' int)]) \l0x0088: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('variationSettings' java.lang.String)]) \l0x0089: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ttcIndex' int)]) \l0x008b: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resourceAttr' int)]) \l0x008d: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resourceAttr' int)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resourceId' int)]) \l0x008f: INVOKE  \l  (r5 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)\l  (r6 I:java.lang.String)\l  (r7 I:int)\l  (r8 I:boolean A[D('isItalic' boolean)])\l  (r9 I:java.lang.String)\l  (r10 I:int)\l  (r11 I:int)\l type: DIRECT call: androidx.core.content.res.FontResourcesParserCompat.FontFileResourceEntry.\<init\>(java.lang.String, int, boolean, java.lang.String, int, int):void A[MD:(java.lang.String, int, boolean, java.lang.String, int, int):void (m)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0092|RETURN\l|0x0092: RETURN  (r19 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) \l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x0068|0x0068: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_android_font int  (LINE:336)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0052|0x0052: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_android_fontVariationSettings int  (LINE:331)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0044|0x0044: SGET  (r6 I:int) =  androidx.core.R.styleable.FontFamilyFont_android_ttcIndex int  (LINE:327)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|0x0038: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x002b|0x002b: SGET  (r5 I:int) =  androidx.core.R.styleable.FontFamilyFont_android_fontStyle int  (LINE:323)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: SGET  (r3 I:int) =  androidx.core.R.styleable.FontFamilyFont_android_fontWeight int  (LINE:319)\l}"];
MethodNode[shape=record,label="{private static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFont((r21 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:62:0x007d \-\> B:60:0x0076, CROSS_EDGE: B:58:0x0068 \-\> B:59:0x006a, CROSS_EDGE: B:54:0x0052 \-\> B:55:0x0054, CROSS_EDGE: B:50:0x0044 \-\> B:51:0x0046, CROSS_EDGE: B:46:0x0038 \-\> B:47:0x0039, CROSS_EDGE: B:42:0x002b \-\> B:43:0x002d, CROSS_EDGE: B:38:0x0017 \-\> B:39:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x006b\-0x008d: r11 'resourceAttr' I\l  0x0004\-0x0092: r0 'attrs' Landroid\/util\/AttributeSet;\l  0x000c\-0x0092: r1 'array' Landroid\/content\/res\/TypedArray;\l  0x001a\-0x0092: r3 'weightAttr' I\l  0x0020\-0x0092: r4 'weight' I\l  0x0039\-0x0092: r8 'isItalic' Z\l  0x002e\-0x0092: r12 'styleAttr' I\l  0x0047\-0x0092: r13 'ttcIndexAttr' I\l  0x0055\-0x0092: r14 'variationSettingsAttr' I\l  0x0059\-0x0092: r15 'variationSettings' Ljava\/lang\/String;\l  0x005d\-0x0092: r16 'ttcIndex' I\l  0x006f\-0x0092: r17 'resourceId' I\l  0x0073\-0x0092: r18 'filename' Ljava\/lang\/String;\l  0x008d\-0x0092: r20 'resourceAttr' I\l  \-1 \-0x0092: r21 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0092: r22 'resources' Landroid\/content\/res\/Resources;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_65;
Node_62 -> Node_60;
Node_65 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_34;
Node_58 -> Node_59;
Node_54 -> Node_55;
Node_50 -> Node_51;
Node_46 -> Node_47;
Node_42 -> Node_43;
Node_38 -> Node_39;
}

