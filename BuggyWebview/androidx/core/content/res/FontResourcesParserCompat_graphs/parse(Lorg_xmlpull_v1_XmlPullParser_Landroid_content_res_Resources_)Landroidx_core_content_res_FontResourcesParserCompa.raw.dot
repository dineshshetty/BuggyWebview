digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.parse(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroidx\/core\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|LOOP_START\lLOOP:0: B:16:0x0000\-\>B:19:0x0009\l|0x0000: INVOKE  (r0 I:int) = (r3 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:186)\l0x0004: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|LOOP_END\lLOOP:0: B:16:0x0000\-\>B:19:0x0009\l|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000c \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0013  (LINE:191)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: INVOKE  (r0 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry) = \l  (r3 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry A[MD:(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:194)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException  (LINE:192)\l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"No start tag found\" \l0x0017: INVOKE  (r0 I:org.xmlpull.v1.XmlPullParserException), (r2 I:java.lang.String) type: DIRECT call: org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse((r3 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001a \-\> B:15:?, BACK_EDGE: B:19:0x0009 \-\> B:16:0x0000, CROSS_EDGE: B:17:0x0006 \-\> B:21:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001a: r1 'type' I\l  \-1 \-0x001a: r3 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x001a: r4 'resources' Landroid\/content\/res\/Resources;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_16[style=dashed];
Node_19 -> Node_27;
Node_27 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_21;
}

