digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.skip(Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:348)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|LOOP_START\lLOOP:0: B:21:0x0001\-\>B:32:0x0001\l|0x0001: IF  (r0 I:??[int, byte, short, char] A[D('depth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:29:0x0012  (LINE:349)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|0x0003: INVOKE  (r1 I:int) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:350)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: SWITCH  (r1 I:??)\l case 2: goto B:31:0x000e\l case 3: goto B:30:0x000b\l default: goto B:33:0x0001 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: ARITH  (r0 I:int) = (r0 I:int A[D('depth' int)]) + (\-1 int)  (LINE:355)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0001|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0001|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0001\-\>B:32:0x0001\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: ARITH  (r0 I:int) = (r0 I:int A[D('depth' int)]) + (1 int)  (LINE:352)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0001|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0001|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:359)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.core.content.res.FontResourcesParserCompat.skip((r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x000b \-\> B:21:0x0001, BACK_EDGE: B:26:0x000e \-\> B:21:0x0001, BACK_EDGE: B:23:0x0007 \-\> B:21:0x0001\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x001b: r0 'depth' I\l  \-1 \-0x001b: r2 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_23 -> Node_31;
Node_23 -> Node_33;
Node_30 -> Node_25;
Node_25 -> Node_34;
Node_34 -> Node_32;
Node_32 -> Node_21;
Node_31 -> Node_26;
Node_26 -> Node_35;
Node_35 -> Node_32;
Node_33 -> Node_32;
Node_29 -> Node_28;
Node_28 -> Node_19;
}

