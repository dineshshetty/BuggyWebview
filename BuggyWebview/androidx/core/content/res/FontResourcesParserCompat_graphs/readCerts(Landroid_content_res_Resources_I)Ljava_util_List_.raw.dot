digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.readCerts(Landroid\/content\/res\/Resources;I)Ljava\/util\/List;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('certsId' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0007  (LINE:276)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0002|0x0002: INVOKE  (r0 I:java.util.List) =  type: STATIC call: java.util.Collections.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (c)] (LINE:277)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:java.util.List\<java.util.List\<byte[]\>\>) \l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|0x0007: INVOKE  (r0 I:android.content.res.TypedArray) = (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r7 I:int A[D('certsId' int)]) type: VIRTUAL call: android.content.res.Resources.obtainTypedArray(int):android.content.res.TypedArray A[MD:(int):android.content.res.TypedArray throws android.content.res.Resources$NotFoundException (c)] (LINE:279)\l}"];
Node_58 [shape=record,label="{58\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x000b: INVOKE  (r1 I:int) = (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.length():int A[Catch: all \-\> 0x0052, MD:():int (c), TRY_ENTER] (LINE:281)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0019 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x0011: INVOKE  (r1 I:java.util.List) =  type: STATIC call: java.util.Collections.emptyList():java.util.List A[Catch: all \-\> 0x0052, MD:\<T\>:():java.util.List\<T\> (c), TRY_LEAVE] (LINE:282)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|0x0015: INVOKE  (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:300)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0018|RETURN\l|0x0018: RETURN  (r1 I:java.util.List\<java.util.List\<byte[]\>\>)  (LINE:282)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x0019: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch: all \-\> 0x0052, TRY_ENTER] (LINE:285)\l0x001b: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[Catch: all \-\> 0x0052, MD:():void (c)]\l0x001e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:288)\l0x001f: INVOKE  (r3 I:int) = (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]), (r2 I:int) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.getType(android.content.res.TypedArray, int):int A[Catch: all \-\> 0x0052, MD:(android.content.res.TypedArray, int):int (m)]\l0x0023: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0024|0x0024: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0042 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|0x0026: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:289)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0027|LOOP_START\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lLOOP:0: B:45:0x0027\-\>B:50:0x003e\lCatch: all \-\> 0x0052\l|0x0027: INVOKE  (r4 I:int) = (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.length():int A[Catch: all \-\> 0x0052, MD:():int (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|0x002b: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:59:0x0041 \l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|TryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x002d: INVOKE  (r4 I:int) = \l  (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)])\l  (r3 I:int A[D('i' int)])\l  (r2 I:int)\l type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[Catch: all \-\> 0x0052, MD:(int, int):int (c)] (LINE:290)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('certId' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x003e  (LINE:291)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|TryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x0033: INVOKE  (r5 I:java.lang.String[]) = (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r4 I:int A[D('certId' int)]) type: VIRTUAL call: android.content.res.Resources.getStringArray(int):java.lang.String[] A[Catch: all \-\> 0x0052, MD:(int):java.lang.String[] throws android.content.res.Resources$NotFoundException (c)] (LINE:292)\l0x0037: INVOKE  (r5 I:java.util.List) = (r5 I:java.lang.String[]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]):java.util.List A[Catch: all \-\> 0x0052, MD:(java.lang.String[]):java.util.List\<byte[]\> (m)]\l0x003b: INVOKE  (r1 I:java.util.List A[D('result' java.util.List\<java.util.List\<byte[]\>\>)]), (r5 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[Catch: all \-\> 0x0052, MD:(E):boolean (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x003e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|LOOP_END\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lLOOP:0: B:45:0x0027\-\>B:50:0x003e\lCatch: all \-\> 0x0052\l|0x003e: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int) A[Catch: all \-\> 0x0052] (LINE:289)\l0x0040: GOTO  \-\> 0x0027 \l}"];
Node_61 [shape=record,label="{61\:\ 0x003e|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0041|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0041|0x0041: GOTO  \-\> 0x004d \l}"];
Node_53 [shape=record,label="{53\:\ 0x004d|0x004e: INVOKE  (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:300)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0051|RETURN\l|0x0051: RETURN  (r1 I:java.util.List\<java.util.List\<byte[]\>\> A[D('result' java.util.List\<java.util.List\<byte[]\>\>)])  (LINE:298)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0042|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|0x0042: INVOKE  (r2 I:java.lang.String[]) = (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r7 I:int A[D('certsId' int)]) type: VIRTUAL call: android.content.res.Resources.getStringArray(int):java.lang.String[] A[Catch: all \-\> 0x0052, MD:(int):java.lang.String[] throws android.content.res.Resources$NotFoundException (c)] (LINE:296)\l0x0046: INVOKE  (r2 I:java.util.List) = (r2 I:java.lang.String[]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]):java.util.List A[Catch: all \-\> 0x0052, MD:(java.lang.String[]):java.util.List\<byte[]\> (m)]\l0x004a: INVOKE  (r1 I:java.util.List A[D('result' java.util.List\<java.util.List\<byte[]\>\>)]), (r2 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[Catch: all \-\> 0x0052, MD:(E):boolean (c), TRY_LEAVE]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0052|ExcHandler: all \-\> 0x0052\l|0x0052: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0052] (LINE:300)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0053|0x0053: INVOKE  (r0 I:android.content.res.TypedArray A[D('typedArray' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0056|0x0056: THROW  (r1 I:java.lang.Throwable)  (LINE:301)\l}"];
MethodNode[shape=record,label="{public static java.util.List\<java.util.List\<byte[]\>\> androidx.core.content.res.FontResourcesParserCompat.readCerts((r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('certsId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0018 \-\> B:32:?, BACK_EDGE: B:50:0x003e \-\> B:45:0x0027, CROSS_EDGE: B:48:0x0031 \-\> B:50:0x003e, CROSS_EDGE: B:54:0x0051 \-\> B:32:?, CROSS_EDGE: B:52:0x0042 \-\> B:53:0x004d, CROSS_EDGE: B:57:0x0056 \-\> B:32:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x003e: r4 'certId' I\l  0x0027\-0x0041: r3 'i' I\l  0x001e\-0x0052: r1 'result' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/util\/List\<[B\>;\>;\l  0x000b\-0x0056: r0 'typedArray' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x0056: r6 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0056: r7 'certsId' I\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lSIGNATURE: (Landroid\/content\/res\/Resources;I)Ljava\/util\/List\<Ljava\/util\/List\<[B\>;\>;\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_32;
Node_36 -> Node_58;
Node_58 -> Node_37;
Node_58 -> Node_55;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_52;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_59;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_61;
Node_49 -> Node_60;
Node_60 -> Node_50;
Node_50 -> Node_45;
Node_61 -> Node_50;
Node_59 -> Node_51;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_32;
Node_52 -> Node_53;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_32;
}

