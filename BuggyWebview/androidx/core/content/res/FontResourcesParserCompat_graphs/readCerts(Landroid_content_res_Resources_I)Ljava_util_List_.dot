digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.readCerts(Landroid\/content\/res\/Resources;I)Ljava\/util\/List;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|if (r7 != 0) goto L5\l}"];
Node_34 [shape=record,label="{34\:\ 0x0002}"];
Node_35 [shape=record,label="{35\:\ 0x0006|RETURN\l|return java.util.Collections.emptyList()\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0007|android.content.res.TypedArray r0 = r6.obtainTypedArray(r7)\l}"];
Node_58 [shape=record,label="{58\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l}"];
Node_38 [shape=record,label="{38\:\ 0x000f|if (r0.length() != 0) goto L12\l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|DONT_GENERATE\l|r0.recycle()\l}"];
Node_41 [shape=record,label="{41\:\ 0x0018|RETURN\l|return java.util.Collections.emptyList()\l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|java.util.ArrayList r1 = new java.util.ArrayList\<\>()     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_43 [shape=record,label="{43\:\ 0x0024|if (getType(r0, 0) != 1) goto L27\l}"];
Node_44 [shape=record,label="{44\:\ 0x0026|r3 = 0\l}"];
Node_45 [shape=record,label="{45\:\ 0x0027|LOOP_START\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lLOOP:0: B:45:0x0027\-\>B:50:0x003e\lCatch: all \-\> 0x0052\lPHI: r3 \l  PHI: (r3v2 'i' int) = (r3v1 'i' int), (r3v3 'i' int) binds: [B:44:0x0026, B:50:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|if (r3 \>= r0.length()) goto L23\l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|TryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|int r4 = r0.getResourceId(r3, 0)     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|if (r4 == 0) goto L22\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|TryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|r1.add(toByteArrayList(r6.getStringArray(r4)))     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_60 [shape=record,label="{60\:\ 0x003e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|LOOP_END\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lLOOP:0: B:45:0x0027\-\>B:50:0x003e\lCatch: all \-\> 0x0052\l|int r3 = r3 + 1     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_61 [shape=record,label="{61\:\ 0x003e|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0041|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0041}"];
Node_53 [shape=record,label="{53\:\ 0x004d|DONT_GENERATE\l|r0.recycle()\l}"];
Node_54 [shape=record,label="{54\:\ 0x0051|RETURN\l|return r1\l}"];
Node_52 [shape=record,label="{52\:\ 0x0042|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lCatch: all \-\> 0x0052\l|r1.add(toByteArrayList(r6.getStringArray(r7)))     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_55 [shape=record,label="{55\:\ 0x0052|ExcHandler: all \-\> 0x0052\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_56 [shape=record,label="{56\:\ 0x0053|FINALLY_INSNS\l|r0.recycle()\l}"];
Node_57 [shape=record,label="{57\:\ 0x0056|throw r1\l}"];
MethodNode[shape=record,label="{public static java.util.List\<java.util.List\<byte[]\>\> androidx.core.content.res.FontResourcesParserCompat.readCerts((r6v0 'resources' android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'certsId' int A[D('certsId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0018 \-\> B:32:?, BACK_EDGE: B:50:0x003e \-\> B:45:0x0027, CROSS_EDGE: B:48:0x0031 \-\> B:50:0x003e, CROSS_EDGE: B:54:0x0051 \-\> B:32:?, CROSS_EDGE: B:52:0x0042 \-\> B:53:0x004d, CROSS_EDGE: B:57:0x0056 \-\> B:32:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0052, blocks: (B:37:0x000b, B:39:0x0011, B:42:0x0019, B:45:0x0027, B:47:0x002d, B:49:0x0033, B:50:0x003e, B:52:0x0042), top: B:58:0x000b \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/res\/Resources;I)Ljava\/util\/List\<Ljava\/util\/List\<[B\>;\>;\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_32;
Node_36 -> Node_58;
Node_58 -> Node_37;
Node_58 -> Node_55;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_52;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_59;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_61;
Node_49 -> Node_60;
Node_60 -> Node_50;
Node_50 -> Node_45;
Node_61 -> Node_50;
Node_59 -> Node_51;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_32;
Node_52 -> Node_53;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_32;
}

