digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.skip(Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|r0 = 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0001|LOOP_START\lLOOP:0: B:21:0x0001\-\>B:32:0x0001\lPHI: r0 \l  PHI: (r0v1 'depth' int) = (r0v0 'depth' int), (r0v3 'depth' int) binds: [B:20:0x0000, B:32:0x0001] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= 0) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003}"];
Node_23 [shape=record,label="{23\:\ 0x0007|switch(r2.next()) \{\l    case 2: goto L9;\l    case 3: goto L5;\l    default: goto L12;\l\}\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|int r0 = r0 + (\-1)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0001|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0001|LOOP_END\lSYNTHETIC\lLOOP:0: B:21:0x0001\-\>B:32:0x0001\lPHI: r0 \l  PHI: (r0v3 'depth' int) = (r0v1 'depth' int), (r0v2 'depth' int), (r0v4 'depth' int) binds: [B:33:0x0001, B:35:0x0001, B:34:0x0001] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|int r0 = r0 + 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0001|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0001|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.core.content.res.FontResourcesParserCompat.skip((r2v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x000b \-\> B:21:0x0001, BACK_EDGE: B:26:0x000e \-\> B:21:0x0001, BACK_EDGE: B:23:0x0007 \-\> B:21:0x0001\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_23 -> Node_31;
Node_23 -> Node_33;
Node_30 -> Node_25;
Node_25 -> Node_34;
Node_34 -> Node_32;
Node_32 -> Node_21;
Node_31 -> Node_26;
Node_26 -> Node_35;
Node_35 -> Node_32;
Node_33 -> Node_32;
Node_29 -> Node_28;
Node_28 -> Node_19;
}

