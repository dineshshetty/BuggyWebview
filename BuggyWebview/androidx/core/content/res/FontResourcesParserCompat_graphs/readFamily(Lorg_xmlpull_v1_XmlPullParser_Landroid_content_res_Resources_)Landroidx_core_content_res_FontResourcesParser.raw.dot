digraph "CFG forandroidx.core.content.res.FontResourcesParserCompat.readFamily(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources;)Landroidx\/core\/content\/res\/FontResourcesParserCompat$FamilyResourceEntry;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: INVOKE  (r0 I:android.util.AttributeSet) = (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet A[MD:(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet (c)] (LINE:211)\l0x0004: SGET  (r1 I:int[]) =  androidx.core.R.styleable.FontFamily int[]  (LINE:212)\l0x0006: INVOKE  (r1 I:android.content.res.TypedArray) = \l  (r15 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r0 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r1 I:int[])\l type: VIRTUAL call: android.content.res.Resources.obtainAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x000a: SGET  (r2 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderAuthority int  (LINE:213)\l0x000c: INVOKE  (r2 I:java.lang.String) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r2 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0010: SGET  (r3 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderPackage int  (LINE:214)\l0x0012: INVOKE  (r3 I:java.lang.String) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r3 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0016: SGET  (r4 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderQuery int  (LINE:215)\l0x0018: INVOKE  (r4 I:java.lang.String) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r4 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x001c: SGET  (r5 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderCerts int  (LINE:216)\l0x001e: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001f: INVOKE  (r5 I:int) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r5 I:int), (r6 I:int) type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)]\l0x0023: SGET  (r7 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderFetchStrategy int  (LINE:217)\l0x0025: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0026: INVOKE  (r7 I:int) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r7 I:int), (r8 I:int) type: VIRTUAL call: android.content.res.TypedArray.getInteger(int, int):int A[MD:(int, int):int (c)]\l0x002a: SGET  (r8 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderFetchTimeout int  (LINE:219)\l0x002c: CONST  (r9 I:??[int, float, short, byte, char]) = (500(0x1f4, float:7.0E\-43) ??[int, float, short, byte, char]) \l0x002e: INVOKE  (r8 I:int) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r8 I:int), (r9 I:int) type: VIRTUAL call: android.content.res.TypedArray.getInteger(int, int):int A[MD:(int, int):int (c)]\l0x0032: SGET  (r9 I:int) =  androidx.core.R.styleable.FontFamily_fontProviderSystemFontFamily int  (LINE:221)\l0x0034: INVOKE  (r9 I:java.lang.String) = (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]), (r9 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:222)\l0x0038: INVOKE  (r1 I:android.content.res.TypedArray A[D('array' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:224)\l0x003b: CONST  (r10 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:225)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003c|0x003c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('authority' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x005b \l}"];
Node_41 [shape=record,label="{41\:\ 0x003e|0x003e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('providerPackage' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x005b \l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|0x0040: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('query' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x005b \l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|LOOP_START\lLOOP:0: B:43:0x0042\-\>B:45:0x0048\l|0x0042: INVOKE  (r6 I:int) = (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:226)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0046|0x0046: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x004c \l}"];
Node_45 [shape=record,label="{45\:\ 0x0048|LOOP_END\lLOOP:0: B:43:0x0042\-\>B:45:0x0048\l|0x0048: INVOKE  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):void A[MD:(org.xmlpull.v1.XmlPullParser):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:227)\l}"];
Node_65 [shape=record,label="{65\:\ 0x004c|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x004c|0x004c: INVOKE  (r6 I:java.util.List) = (r15 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r5 I:int A[D('certsId' int)]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources, int):java.util.List A[MD:(android.content.res.Resources, int):java.util.List\<java.util.List\<byte[]\>\> (m)] (LINE:229)\l0x0050: NEW_INSTANCE  (r10 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry) =  androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry  (LINE:230)\l0x0052: NEW_INSTANCE  (r11 I:androidx.core.provider.FontRequest) =  androidx.core.provider.FontRequest \l0x0054: INVOKE  \l  (r11 I:androidx.core.provider.FontRequest)\l  (r2 I:java.lang.String A[D('authority' java.lang.String)])\l  (r3 I:java.lang.String A[D('providerPackage' java.lang.String)])\l  (r4 I:java.lang.String A[D('query' java.lang.String)])\l  (r6 I:java.util.List A[D('certs' java.util.List\<java.util.List\<byte[]\>\>)])\l type: DIRECT call: androidx.core.provider.FontRequest.\<init\>(java.lang.String, java.lang.String, java.lang.String, java.util.List):void A[MD:(java.lang.String, java.lang.String, java.lang.String, java.util.List\<java.util.List\<byte[]\>\>):void (m)]\l0x0057: INVOKE  \l  (r10 I:androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry)\l  (r11 I:androidx.core.provider.FontRequest)\l  (r7 I:int A[D('strategy' int)])\l  (r8 I:int A[D('timeoutMs' int)])\l  (r9 I:java.lang.String A[D('systemFontFamilyName' java.lang.String)])\l type: DIRECT call: androidx.core.content.res.FontResourcesParserCompat.ProviderResourceEntry.\<init\>(androidx.core.provider.FontRequest, int, int, java.lang.String):void A[MD:(androidx.core.provider.FontRequest, int, int, java.lang.String):void (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x005a|RETURN\l|0x005a: RETURN  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x005b|0x005b: NEW_INSTANCE  (r11 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:237)\l0x005d: INVOKE  (r11 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0060|LOOP_START\lLOOP:1: B:49:0x0060\-\>B:70:0x0060\l|0x0060: INVOKE  (r12 I:int) = (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:238)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0064|0x0064: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0086 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0066|0x0066: INVOKE  (r12 I:int) = (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getEventType():int A[MD:():int throws org.xmlpull.v1.XmlPullParserException (c)] (LINE:239)\l0x006a: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x006b|0x006b: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x006e \l}"];
Node_67 [shape=record,label="{67\:\ 0x006e|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x006e|0x006e: INVOKE  (r12 I:java.lang.String) = (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:240)\l0x0072: CONST_STR  (r13 I:java.lang.String) =  \"font\"  (LINE:241)\l0x0074: INVOKE  (r13 I:boolean) = (r12 I:java.lang.String A[D('tag' java.lang.String)]), (r13 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0078|0x0078: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0082 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0082|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0082|0x0082: INVOKE  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser):void A[MD:(org.xmlpull.v1.XmlPullParser):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:244)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0060|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0060|LOOP_END\lSYNTHETIC\lLOOP:1: B:49:0x0060\-\>B:70:0x0060\l}"];
Node_69 [shape=record,label="{69\:\ 0x007a|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x007a|0x007a: INVOKE  (r13 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) = \l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r15 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l type: STATIC call: androidx.core.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry A[MD:(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:242)\l0x007e: INVOKE  \l  (r11 I:java.util.List A[D('fonts' java.util.List\<androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry\>)])\l  (r13 I:java.lang.Object)\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0060|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0060|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0086|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0086|0x0086: INVOKE  (r10 I:boolean) = \l  (r11 I:java.util.List A[D('fonts' java.util.List\<androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry\>)])\l type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)] (LINE:247)\l}"];
Node_60 [shape=record,label="{60\:\ 0x008a|0x008a: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x008e \l}"];
Node_61 [shape=record,label="{61\:\ 0x008c|RETURN\l|0x008c: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:248)\l0x008d: RETURN  (r6 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry) \l}"];
Node_63 [shape=record,label="{63\:\ 0x008e|0x008e: NEW_INSTANCE  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) =  androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry  (LINE:251)\l0x0090: NEW_ARRAY  (r6 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] \l0x0092: INVOKE  (r6 I:java.lang.Object[]) = \l  (r11 I:java.util.List A[D('fonts' java.util.List\<androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry\>)])\l  (r6 I:java.lang.Object[])\l type: INTERFACE call: java.util.List.toArray(java.lang.Object[]):java.lang.Object[] A[MD:\<T\>:(T[]):T[] (c)]\l0x0096: CHECK_CAST (r6 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) = (androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) (r6 I:??[OBJECT, ARRAY]) \l0x0098: INVOKE  \l  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)\l  (r6 I:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])\l type: DIRECT call: androidx.core.content.res.FontResourcesParserCompat.FontFamilyFilesResourceEntry.\<init\>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]):void A[MD:(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]):void (m)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x009b|RETURN\l|0x009b: RETURN  (r10 I:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry) \l}"];
MethodNode[shape=record,label="{private static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily((r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x0048 \-\> B:43:0x0042, BACK_EDGE: B:56:0x007a \-\> B:49:0x0060, BACK_EDGE: B:57:0x0082 \-\> B:49:0x0060, BACK_EDGE: B:52:0x006b \-\> B:49:0x0060, CROSS_EDGE: B:62:0x008d \-\> B:38:?, CROSS_EDGE: B:64:0x009b \-\> B:38:?, CROSS_EDGE: B:41:0x003e \-\> B:48:0x005b, CROSS_EDGE: B:40:0x003c \-\> B:48:0x005b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0050\-0x005b: r6 'certs' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/util\/List\<[B\>;\>;\l  0x0072\-0x0085: r12 'tag' Ljava\/lang\/String;\l  0x0004\-0x009b: r0 'attrs' Landroid\/util\/AttributeSet;\l  0x000a\-0x009b: r1 'array' Landroid\/content\/res\/TypedArray;\l  0x0010\-0x009b: r2 'authority' Ljava\/lang\/String;\l  0x0016\-0x009b: r3 'providerPackage' Ljava\/lang\/String;\l  0x001c\-0x009b: r4 'query' Ljava\/lang\/String;\l  0x0023\-0x009b: r5 'certsId' I\l  0x002a\-0x009b: r7 'strategy' I\l  0x0032\-0x009b: r8 'timeoutMs' I\l  0x0038\-0x009b: r9 'systemFontFamilyName' Ljava\/lang\/String;\l  0x0060\-0x009b: r11 'fonts' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/core\/content\/res\/FontResourcesParserCompat$FontFileResourceEntry;\>;\l  \-1 \-0x009b: r14 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x009b: r15 'resources' Landroid\/content\/res\/Resources;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_48;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_48;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_48;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_65;
Node_45 -> Node_43;
Node_65 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_38;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_66;
Node_51 -> Node_52;
Node_52 -> Node_67;
Node_52 -> Node_71[style=dashed];
Node_67 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_68;
Node_55 -> Node_69[style=dashed];
Node_68 -> Node_57;
Node_57 -> Node_72;
Node_72 -> Node_70;
Node_70 -> Node_49;
Node_69 -> Node_56;
Node_56 -> Node_73;
Node_73 -> Node_70;
Node_71 -> Node_70;
Node_66 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_63;
Node_61 -> Node_38;
Node_63 -> Node_64;
Node_64 -> Node_38;
}

