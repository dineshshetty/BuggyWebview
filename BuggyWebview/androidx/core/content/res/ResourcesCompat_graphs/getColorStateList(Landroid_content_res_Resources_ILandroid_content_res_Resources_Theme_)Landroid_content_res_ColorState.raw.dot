digraph "CFG forandroidx.core.content.res.ResourcesCompat.getColorStateList(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey) =  androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey  (LINE:230)\l0x0002: INVOKE  \l  (r0 I:androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey)\l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: DIRECT call: androidx.core.content.res.ResourcesCompat.ColorStateListCacheKey.\<init\>(android.content.res.Resources, android.content.res.Resources$Theme):void A[MD:(android.content.res.Resources, android.content.res.Resources$Theme):void (m)]\l0x0005: INVOKE  (r1 I:android.content.res.ColorStateList) = \l  (r0 I:androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey A[D('key' androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey)])\l  (r5 I:int A[D('id' int)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey, int):android.content.res.ColorStateList A[MD:(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey, int):android.content.res.ColorStateList (m)] (LINE:231)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('csl' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000c  (LINE:232)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|RETURN\l|0x000b: RETURN  (r1 I:android.content.res.ColorStateList A[D('csl' android.content.res.ColorStateList)])  (LINE:233)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: INVOKE  (r1 I:android.content.res.ColorStateList A[D('csl' android.content.res.ColorStateList)]) = \l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r5 I:int A[D('id' int)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.inflateColorStateList(android.content.res.Resources, int, android.content.res.Resources$Theme):android.content.res.ColorStateList A[MD:(android.content.res.Resources, int, android.content.res.Resources$Theme):android.content.res.ColorStateList (m)] (LINE:236)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('csl' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0016  (LINE:237)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: INVOKE  \l  (r0 I:androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey A[D('key' androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey)])\l  (r5 I:int A[D('id' int)])\l  (r1 I:android.content.res.ColorStateList A[D('csl' android.content.res.ColorStateList)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey, int, android.content.res.ColorStateList, android.content.res.Resources$Theme):void A[MD:(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey, int, android.content.res.ColorStateList, android.content.res.Resources$Theme):void (m)] (LINE:239)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:android.content.res.ColorStateList A[D('csl' android.content.res.ColorStateList)])  (LINE:240)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:243)\l0x0018: CONST  (r3 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:28:0x0021 \l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|0x001c: INVOKE  (r2 I:android.content.res.ColorStateList) = \l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r5 I:int A[D('id' int)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.Api23Impl.getColorStateList(android.content.res.Resources, int, android.content.res.Resources$Theme):android.content.res.ColorStateList A[MD:(android.content.res.Resources, int, android.content.res.Resources$Theme):android.content.res.ColorStateList (m)] (LINE:244)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|RETURN\l|0x0020: RETURN  (r2 I:android.content.res.ColorStateList) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|0x0021: INVOKE  (r2 I:android.content.res.ColorStateList) = (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r5 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.getColorStateList(int):android.content.res.ColorStateList A[MD:(int):android.content.res.ColorStateList throws android.content.res.Resources$NotFoundException (c)] (LINE:246)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\l|0x0025: RETURN  (r2 I:android.content.res.ColorStateList) \l}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.getColorStateList((r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0015 \-\> B:16:?, CROSS_EDGE: B:27:0x0020 \-\> B:16:?, CROSS_EDGE: B:29:0x0025 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0025: r0 'key' Landroidx\/core\/content\/res\/ResourcesCompat$ColorStateListCacheKey;\l  0x0009\-0x0025: r1 'csl' Landroid\/content\/res\/ColorStateList;\l  \-1 \-0x0025: r4 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0025: r5 'id' I\l  \-1 \-0x0025: r6 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

