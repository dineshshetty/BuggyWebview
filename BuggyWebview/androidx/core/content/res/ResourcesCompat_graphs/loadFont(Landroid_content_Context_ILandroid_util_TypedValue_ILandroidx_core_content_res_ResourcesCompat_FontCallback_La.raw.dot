digraph "CFG forandroidx.core.content.res.ResourcesCompat.loadFont(Landroid\/content\/Context;ILandroid\/util\/TypedValue;ILandroidx\/core\/content\/res\/ResourcesCompat$FontCallback;Landroid\/os\/Handler;ZZ)Landroid\/graphics\/Typeface;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r9 I:android.content.res.Resources) = (r12 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:568)\l0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:569)\l0x0005: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)]) \l0x0006: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('value' android.util.TypedValue)]) \l0x0007: INVOKE  \l  (r9 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r13 I:int A[D('id' int)])\l  (r14 I:android.util.TypedValue A[D('value' android.util.TypedValue)])\l  (r0 I:boolean)\l type: VIRTUAL call: android.content.res.Resources.getValue(int, android.util.TypedValue, boolean):void A[MD:(int, android.util.TypedValue, boolean):void throws android.content.res.Resources$NotFoundException (c)]\l0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:570)\l0x000b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('resources' android.content.res.Resources)]) \l0x000c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('value' android.util.TypedValue)]) \l0x000d: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)]) \l0x000e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('style' int)]) \l0x000f: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback)]) \l0x0011: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('handler' android.os.Handler)]) \l0x0013: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isRequestFromLayoutInflator' boolean)]) \l0x0015: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isCachedOnly' boolean)]) \l0x0017: INVOKE  (r0 I:android.graphics.Typeface) = \l  (r0 I:android.content.Context)\l  (r1 I:android.content.res.Resources)\l  (r2 I:android.util.TypedValue)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:androidx.core.content.res.ResourcesCompat$FontCallback)\l  (r6 I:android.os.Handler)\l  (r7 I:boolean)\l  (r8 I:boolean)\l type: STATIC call: androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context, android.content.res.Resources, android.util.TypedValue, int, int, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean, boolean):android.graphics.Typeface A[MD:(android.content.Context, android.content.res.Resources, android.util.TypedValue, int, int, androidx.core.content.res.ResourcesCompat$FontCallback, android.os.Handler, boolean, boolean):android.graphics.Typeface (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('typeface' android.graphics.Typeface)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0042  (LINE:572)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0042 \l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: IF  (r19 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isCachedOnly' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0022 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|0x0022: NEW_INSTANCE  (r1 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException  (LINE:573)\l0x0024: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0026: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0029: CONST_STR  (r3 I:java.lang.String) =  \"Font resource ID #0x\" \l0x002b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: INVOKE  (r3 I:java.lang.String) = (r13 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:574)\l0x0032: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0035: CONST_STR  (r3 I:java.lang.String) =  \" could not be retrieved.\" \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003e: INVOKE  (r1 I:android.content.res.Resources$NotFoundException), (r2 I:java.lang.String) type: DIRECT call: android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|RETURN\l|0x0042: RETURN  (r0 I:android.graphics.Typeface A[D('typeface' android.graphics.Typeface)])  (LINE:576)\l}"];
MethodNode[shape=record,label="{private static android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont((r12 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.util.TypedValue A[D('value' android.util.TypedValue), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:androidx.core.content.res.ResourcesCompat$FontCallback A[D('fontCallback' androidx.core.content.res.ResourcesCompat$FontCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:boolean A[D('isRequestFromLayoutInflator' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:boolean A[D('isCachedOnly' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0042 \-\> B:11:?, CROSS_EDGE: B:14:0x001d \-\> B:19:0x0042, CROSS_EDGE: B:13:0x001b \-\> B:19:0x0042\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0042: r0 'typeface' Landroid\/graphics\/Typeface;\l  0x0004\-0x0042: r9 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0042: r12 'context' Landroid\/content\/Context;\l  \-1 \-0x0042: r13 'id' I\l  \-1 \-0x0042: r14 'value' Landroid\/util\/TypedValue;\l  \-1 \-0x0042: r15 'style' I\l  \-1 \-0x0042: r16 'fontCallback' Landroidx\/core\/content\/res\/ResourcesCompat$FontCallback;\l  \-1 \-0x0042: r17 'handler' Landroid\/os\/Handler;\l  \-1 \-0x0042: r18 'isRequestFromLayoutInflator' Z\l  \-1 \-0x0042: r19 'isCachedOnly' Z\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_17;
Node_15 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

