digraph "CFG forandroidx.core.content.res.ResourcesCompat.getDrawableForDensity(Landroid\/content\/res\/Resources;IILandroid\/content\/res\/Resources$Theme;)Landroid\/graphics\/drawable\/Drawable;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 21) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|return androidx.core.content.res.ResourcesCompat.Api21Impl.getDrawableForDensity(r2, r3, r4, r5)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b}"];
Node_19 [shape=record,label="{19\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \< 15) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|return androidx.core.content.res.ResourcesCompat.Api15Impl.getDrawableForDensity(r2, r3, r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016}"];
Node_23 [shape=record,label="{23\:\ 0x001a|RETURN\l|return r2.getDrawable(r3)\l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawableForDensity((r2v0 'res' android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'density' int A[D('density' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0015 \-\> B:13:?, CROSS_EDGE: B:23:0x001a \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

