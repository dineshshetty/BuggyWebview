digraph "CFG forandroidx.core.content.res.ResourcesCompat.inflateColorStateList(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r6 I:int A[D('resId' int)]) type: STATIC call: androidx.core.content.res.ResourcesCompat.isColorInt(android.content.res.Resources, int):boolean A[MD:(android.content.res.Resources, int):boolean (m)] (LINE:256)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0008 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|RETURN\l|0x0007: RETURN  (r1 I:android.content.res.ColorStateList)  (LINE:258)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: INVOKE  (r0 I:android.content.res.XmlResourceParser) = (r5 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r6 I:int A[D('resId' int)]) type: VIRTUAL call: android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser A[MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c)] (LINE:260)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0011, blocks: (B:19:0x000c), top: B:24:0x000c \}\lCatch: Exception \-\> 0x0011\l|0x000c: INVOKE  (r1 I:android.content.res.ColorStateList) = \l  (r5 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r0 I:org.xmlpull.v1.XmlPullParser A[D('xml' org.xmlpull.v1.XmlPullParser)])\l  (r7 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):android.content.res.ColorStateList A[Catch: Exception \-\> 0x0011, MD:(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):android.content.res.ColorStateList throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m), TRY_ENTER, TRY_LEAVE] (LINE:262)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|RETURN\l|0x0010: RETURN  (r1 I:android.content.res.ColorStateList) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|ExcHandler: Exception \-\> 0x0011\l|0x0011: MOVE_EXCEPTION  (r2 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0011] (LINE:263)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: CONST_STR  (r3 I:java.lang.String) =  \"ResourcesCompat\"  (LINE:264)\l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"Failed to inflate ColorStateList, leaving it to the framework\" \l0x0016: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:android.content.res.ColorStateList)  (LINE:266)\l}"];
MethodNode[shape=record,label="{private static android.content.res.ColorStateList androidx.core.content.res.ResourcesCompat.inflateColorStateList((r5 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0010 \-\> B:14:?, CROSS_EDGE: B:23:0x0019 \-\> B:14:?, CROSS_EDGE: B:24:0x000c \-\> B:21:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0019: r2 'e' Ljava\/lang\/Exception;\l  0x000c\-0x0019: r0 'xml' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0019: r5 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0019: r6 'resId' I\l  \-1 \-0x0019: r7 'theme' Landroid\/content\/res\/Resources$Theme;\lTryCatch #0 \{Exception \-\> 0x0011, blocks: (B:19:0x000c), top: B:24:0x000c \}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_24;
Node_24 -> Node_19;
Node_24 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_25;
Node_20 -> Node_14;
Node_25 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

