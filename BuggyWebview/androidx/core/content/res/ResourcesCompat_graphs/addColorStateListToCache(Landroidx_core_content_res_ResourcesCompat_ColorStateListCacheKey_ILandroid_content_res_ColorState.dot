digraph "CFG forandroidx.core.content.res.ResourcesCompat.addColorStateListToCache(Landroidx\/core\/content\/res\/ResourcesCompat$ColorStateListCacheKey;ILandroid\/content\/res\/ColorStateList;Landroid\/content\/res\/Resources$Theme;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|java.lang.Object r0 = androidx.core.content.res.ResourcesCompat.sColorStateCacheLock\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:19:0x0003, B:21:0x000d, B:22:0x0016, B:23:0x0024), top: B:28:0x0003 \}\lCatch: all \-\> 0x0026\l|java.util.WeakHashMap\<androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey, android.util.SparseArray\<androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry\>\> r1 = androidx.core.content.res.ResourcesCompat.sColorStateCaches     \/\/ Catch: java.lang.Throwable \-\> L26\landroid.util.SparseArray r2 = r1.get(r4)     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|if (r2 != null) goto L7\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|TryCatch #0 \{, blocks: (B:19:0x0003, B:21:0x000d, B:22:0x0016, B:23:0x0024), top: B:28:0x0003 \}\lCatch: all \-\> 0x0026\l|r2 = new android.util.SparseArray\<\>()     \/\/ Catch: java.lang.Throwable \-\> L26\lr1.put(r4, r2)     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|TryCatch #0 \{, blocks: (B:19:0x0003, B:21:0x000d, B:22:0x0016, B:23:0x0024), top: B:28:0x0003 \}\lCatch: all \-\> 0x0026\lPHI: r2 \l  PHI: (r2v2 'entries' android.util.SparseArray\<androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry\>) = (r2v1 'entries' android.util.SparseArray\<androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry\>), (r2v3 'entries' android.util.SparseArray\<androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry\>) binds: [B:20:0x000b, B:21:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r2.append(r5, new androidx.core.content.res.ResourcesCompat.ColorStateListCacheEntry(r6, r4.mResources.getConfiguration(), r7))     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|TryCatch #0 \{, blocks: (B:19:0x0003, B:21:0x000d, B:22:0x0016, B:23:0x0024), top: B:28:0x0003 \}\lCatch: all \-\> 0x0026\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L26\l}"];
Node_24 [shape=record,label="{24\:\ 0x0025|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|REMOVE\lExcHandler: all \-\> 0x0026\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0026\l}"];
Node_27 [shape=record,label="{27\:\ 0x0028|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{private static void androidx.core.content.res.ResourcesCompat.addColorStateListToCache((r4v0 'key' androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey A[D('key' androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'resId' int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'value' android.content.res.ColorStateList A[D('value' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0028 \-\> B:16:?, CROSS_EDGE: B:20:0x000b \-\> B:22:0x0016, CROSS_EDGE: B:28:0x0003 \-\> B:25:0x0026\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_28;
Node_28 -> Node_19;
Node_28 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_29;
Node_24 -> Node_16;
Node_29 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
}

