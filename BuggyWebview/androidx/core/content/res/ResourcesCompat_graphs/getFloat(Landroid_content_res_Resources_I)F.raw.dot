digraph "CFG forandroidx.core.content.res.ResourcesCompat.getFloat(Landroid\/content\/res\/Resources;I)F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:373)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:float) = (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r5 I:int A[D('id' int)]) type: STATIC call: androidx.core.content.res.ResourcesCompat.Api29Impl.getFloat(android.content.res.Resources, int):float A[MD:(android.content.res.Resources, int):float (m)] (LINE:374)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: INVOKE  (r0 I:android.util.TypedValue) =  type: STATIC call: androidx.core.content.res.ResourcesCompat.getTypedValue():android.util.TypedValue A[MD:():android.util.TypedValue (m)] (LINE:377)\l0x000f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:378)\l0x0010: INVOKE  \l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r5 I:int A[D('id' int)])\l  (r0 I:android.util.TypedValue A[D('value' android.util.TypedValue)])\l  (r1 I:boolean)\l type: VIRTUAL call: android.content.res.Resources.getValue(int, android.util.TypedValue, boolean):void A[MD:(int, android.util.TypedValue, boolean):void throws android.content.res.Resources$NotFoundException (c)]\l0x0013: IGET  (r1 I:int) = (r0 I:android.util.TypedValue A[D('value' android.util.TypedValue)]) android.util.TypedValue.type int  (LINE:379)\l0x0015: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001d \l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|0x0018: INVOKE  (r1 I:float) = (r0 I:android.util.TypedValue A[D('value' android.util.TypedValue)]) type: VIRTUAL call: android.util.TypedValue.getFloat():float A[MD:():float (c)] (LINE:380)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException  (LINE:382)\l0x001f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0021: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0024: CONST_STR  (r3 I:java.lang.String) =  \"Resource ID #0x\" \l0x0026: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0029: INVOKE  (r3 I:java.lang.String) = (r5 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x002d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0030: CONST_STR  (r3 I:java.lang.String) =  \" type #0x\" \l0x0032: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0035: IGET  (r3 I:int) = (r0 I:android.util.TypedValue A[D('value' android.util.TypedValue)]) android.util.TypedValue.type int \l0x0037: INVOKE  (r3 I:java.lang.String) = (r3 I:int) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:383)\l0x003b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003e: CONST_STR  (r3 I:java.lang.String) =  \" is not valid\" \l0x0040: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0043: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0047: INVOKE  (r1 I:android.content.res.Resources$NotFoundException), (r2 I:java.lang.String) type: DIRECT call: android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004a|0x004a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static float androidx.core.content.res.ResourcesCompat.getFloat((r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:13:?, CROSS_EDGE: B:23:0x004a \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x004a: r0 'value' Landroid\/util\/TypedValue;\l  \-1 \-0x004a: r4 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x004a: r5 'id' I\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

