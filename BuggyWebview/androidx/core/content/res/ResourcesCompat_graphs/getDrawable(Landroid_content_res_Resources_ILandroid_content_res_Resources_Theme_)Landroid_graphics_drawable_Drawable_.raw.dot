digraph "CFG forandroidx.core.content.res.ResourcesCompat.getDrawable(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/graphics\/drawable\/Drawable;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:136)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:14:0x000b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r3 I:int A[D('id' int)])\l  (r4 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.Api21Impl.getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable (m)] (LINE:137)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|0x000b: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r3 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.getDrawable(int):android.graphics.drawable.Drawable A[MD:(int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (c)] (LINE:139)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawable((r2 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x000f: r3 'id' I\l  \-1 \-0x000f: r4 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

