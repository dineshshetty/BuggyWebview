digraph "CFG forandroidx.core.content.res.ResourcesCompat.getDrawableForDensity(Landroid\/content\/res\/Resources;IILandroid\/content\/res\/Resources$Theme;)Landroid\/graphics\/drawable\/Drawable;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:169)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r3 I:int A[D('id' int)])\l  (r4 I:int A[D('density' int)])\l  (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.Api21Impl.getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources, int, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable (m)] (LINE:170)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:171)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (15 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r3 I:int A[D('id' int)])\l  (r4 I:int A[D('density' int)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.Api15Impl.getDrawableForDensity(android.content.res.Resources, int, int):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources, int, int):android.graphics.drawable.Drawable (m)] (LINE:172)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r2 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r3 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.getDrawable(int):android.graphics.drawable.Drawable A[MD:(int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (c)] (LINE:174)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.content.res.ResourcesCompat.getDrawableForDensity((r2 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('density' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0015 \-\> B:13:?, CROSS_EDGE: B:23:0x001a \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r2 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x001a: r3 'id' I\l  \-1 \-0x001a: r4 'density' I\l  \-1 \-0x001a: r5 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

