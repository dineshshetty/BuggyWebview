digraph "CFG forandroidx.core.content.res.ColorStateListInflaterCompat.inflate(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0009, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lCatch: Exception \-\> 0x0009\l|android.content.res.XmlResourceParser r0 = r3.getXml(r4)     \/\/ Catch: java.lang.Exception \-\> L9\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|RETURN\l|return createFromXml(r3, r0, r5)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|ExcHandler: Exception \-\> 0x0009\l|java.lang.Exception r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|android.util.Log.e(\"CSLCompat\", \"Failed to inflate ColorStateList.\", r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate((r3v0 'resources' android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'resId' int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0012 \-\> B:10:?, CROSS_EDGE: B:16:0x0000 \-\> B:13:0x0009\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0009, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_9 -> Node_16;
Node_16 -> Node_11;
Node_16 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_17;
Node_12 -> Node_10;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_10;
}

