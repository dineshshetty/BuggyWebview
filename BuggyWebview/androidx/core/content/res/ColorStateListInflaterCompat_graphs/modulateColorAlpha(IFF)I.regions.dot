digraph "CFG forandroidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha(IFF)I" {
subgraph cluster_Region_1414231043 {
label = "R(2:2|(2:(1:9)|(3:11|(1:13)|15)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|boolean r1 = r8 \>= 0.0f && r8 \<= 100.0f\l}"];
subgraph cluster_Region_91287 {
label = "R(2:(1:9)|(3:11|(1:13)|15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1631885741 {
label = "IF [B:26:0x0013, B:27:0x0015] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0013|if (r7 == 1.0f) goto L8\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|ADDED_TO_REGION\l|if (r1 == false) goto L9\l}"];
subgraph cluster_Region_1120111060 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0017|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_1585915792 {
label = "R(3:11|(1:13)|15)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0018|int int r2 = android.graphics.Color.alpha(r6)\lint int r0 = androidx.core.math.MathUtils.clamp((int) ((r2 * r7) + 0.5f), 0, 255)\l}"];
subgraph cluster_IfRegion_333542688 {
label = "IF [B:30:0x0029] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0029|if (r1 != false) goto L13\l}"];
subgraph cluster_Region_1373879087 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x002b|androidx.core.content.res.CamColor androidx.core.content.res.CamColor r3 = androidx.core.content.res.CamColor.fromColor(r6)\lint r6 = androidx.core.content.res.CamColor.toColor(r3.getHue(), r3.getChroma(), r8)\l}"];
}
}
Node_33 [shape=record,label="{33\:\ 0x0042|RETURN\l|return (16777215 & r6) \| (r0 \<\< 24)\l}"];
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0006}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000f|PHI: r1 \l  PHI: (r1v3 'validLStar' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x003b|PHI: r6 \l  PHI: (r6v1 'color' int) = (r6v0 'color' int), (r6v2 'color' int) binds: [B:30:0x0029, B:31:0x002b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000e}"];
MethodNode[shape=record,label="{private static int androidx.core.content.res.ColorStateListInflaterCompat.modulateColorAlpha((r6v0 'color' int A[D('color' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'alphaMod' float A[D('alphaMod' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'lStar' float A[D('lStar' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0042 \-\> B:18:?, CROSS_EDGE: B:30:0x0029 \-\> B:32:0x003b, CROSS_EDGE: B:26:0x0013 \-\> B:29:0x0018, CROSS_EDGE: B:24:0x000e \-\> B:25:0x000f, CROSS_EDGE: B:20:0x0004 \-\> B:24:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_24;
Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_18;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_33 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_32 -> Node_33;
Node_24 -> Node_25;
}

