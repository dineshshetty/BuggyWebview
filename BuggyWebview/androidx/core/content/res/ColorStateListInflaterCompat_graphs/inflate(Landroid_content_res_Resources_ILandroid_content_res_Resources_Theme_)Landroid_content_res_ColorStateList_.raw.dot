digraph "CFG forandroidx.core.content.res.ColorStateListInflaterCompat.inflate(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroid\/content\/res\/ColorStateList;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0009, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lCatch: Exception \-\> 0x0009\l|0x0000: INVOKE  (r0 I:android.content.res.XmlResourceParser) = (r3 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r4 I:int A[D('resId' int)]) type: VIRTUAL call: android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser A[Catch: Exception \-\> 0x0009, MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c), TRY_ENTER] (LINE:71)\l0x0004: INVOKE  (r1 I:android.content.res.ColorStateList) = \l  (r3 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r0 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):android.content.res.ColorStateList A[Catch: Exception \-\> 0x0009, MD:(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):android.content.res.ColorStateList throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m), TRY_LEAVE] (LINE:72)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|RETURN\l|0x0008: RETURN  (r1 I:android.content.res.ColorStateList) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|ExcHandler: Exception \-\> 0x0009\l|0x0009: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0009] (LINE:73)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: CONST_STR  (r1 I:java.lang.String) =  \"CSLCompat\"  (LINE:74)\l0x000c: CONST_STR  (r2 I:java.lang.String) =  \"Failed to inflate ColorStateList.\" \l0x000e: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.Exception)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:76)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:android.content.res.ColorStateList) \l}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList androidx.core.content.res.ColorStateListInflaterCompat.inflate((r3 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0012 \-\> B:10:?, CROSS_EDGE: B:16:0x0000 \-\> B:13:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0009: r0 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  0x000a\-0x0011: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0012: r3 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0012: r4 'resId' I\l  \-1 \-0x0012: r5 'theme' Landroid\/content\/res\/Resources$Theme;\lTryCatch #0 \{Exception \-\> 0x0009, blocks: (B:11:0x0000), top: B:16:0x0000 \}\l}"];
MethodNode -> Node_9;Node_9 -> Node_16;
Node_16 -> Node_11;
Node_16 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_17;
Node_12 -> Node_10;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_10;
}

