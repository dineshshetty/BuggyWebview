digraph "CFG forandroidx.core.content.res.GrowingArrayUtils.insert([Ljava\/lang\/Object;IILjava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r4 I:int A[D('currentSize' int)]) + (1 int)  (LINE:104)\l0x0002: ARRAY_LENGTH  (r1 I:int) = (r3 I:??[] A[D('array' T[])]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \> (r1 I:??[int, byte, short, char])  \-\> B:14:0x000f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: ARITH  (r0 I:int) = (r5 I:int A[D('index' int)]) + (1 int)  (LINE:105)\l0x0007: ARITH  (r1 I:int) = (r4 I:int A[D('currentSize' int)]) \- (r5 I:int A[D('index' int)]) \l0x0009: INVOKE  \l  (r3 I:java.lang.Object A[D('array' T[])])\l  (r5 I:int A[D('index' int)])\l  (r3 I:java.lang.Object A[D('array' T[])])\l  (r0 I:int)\l  (r1 I:int)\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x000c: APUT  \l  (r3 I:??[OBJECT, ARRAY][] A[D('array' T[])])\l  (r5 I:??[int, short, byte, char] A[D('index' int)])\l  (r6 I:??[OBJECT, ARRAY] A[D('element' T)])\l  (LINE:106)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|0x000e: RETURN  (r3 I:T[] A[D('array' T[])])  (LINE:107)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.Class) = (r3 I:java.lang.Object A[D('array' T[])]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:110)\l0x0013: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getComponentType():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x0017: INVOKE  (r1 I:int) = (r4 I:int A[D('currentSize' int)]) type: STATIC call: androidx.core.content.res.GrowingArrayUtils.growSize(int):int A[MD:(int):int (m)] (LINE:111)\l0x001b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Class), (r1 I:int) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object A[MD:(java.lang.Class\<?\>, int):java.lang.Object throws java.lang.NegativeArraySizeException (c)] (LINE:110)\l0x001f: CHECK_CAST (r0 I:java.lang.Object[]) = (java.lang.Object[]) (r0 I:??[OBJECT, ARRAY]) \l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:112)\l0x0022: INVOKE  \l  (r3 I:java.lang.Object A[D('array' T[])])\l  (r1 I:int)\l  (r0 I:java.lang.Object A[D('newArray' T[])])\l  (r1 I:int)\l  (r5 I:int A[D('index' int)])\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0025: APUT  \l  (r0 I:??[OBJECT, ARRAY][] A[D('newArray' T[])])\l  (r5 I:??[int, short, byte, char] A[D('index' int)])\l  (r6 I:??[OBJECT, ARRAY] A[D('element' T)])\l  (LINE:113)\l0x0027: ARITH  (r1 I:int) = (r5 I:int A[D('index' int)]) + (1 int)  (LINE:114)\l0x0029: ARRAY_LENGTH  (r2 I:int) = (r3 I:??[] A[D('array' T[])]) \l0x002a: ARITH  (r2 I:int) = (r2 I:int) \- (r5 I:int A[D('index' int)]) \l0x002b: INVOKE  \l  (r3 I:java.lang.Object A[D('array' T[])])\l  (r5 I:int A[D('index' int)])\l  (r0 I:java.lang.Object A[D('newArray' T[])])\l  (r1 I:int)\l  (r2 I:int)\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|0x002e: RETURN  (r0 I:T[] A[D('newArray' T[])])  (LINE:115)\l}"];
MethodNode[shape=record,label="{public static T[] androidx.core.content.res.GrowingArrayUtils.insert((r3 I:T[] A[D('array' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('currentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T A[D('element' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002e \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x002e: r0 'newArray' [Ljava\/lang\/Object;, signature: [TT;\l  0x0000\-0x002e: r3 'array' [Ljava\/lang\/Object;, signature: [TT;\l  \-1 \-0x002e: r4 'currentSize' I\l  \-1 \-0x002e: r5 'index' I\l  0x0000\-0x002e: r6 'element' Ljava\/lang\/Object;, signature: TT;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;IITT;)[TT;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

