digraph "CFG forandroidx.core.content.res.GrowingArrayUtils.append([Ljava\/lang\/Object;ILjava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000}"];
Node_10 [shape=record,label="{10\:\ 0x0003|if ((r3 + 1) \<= r2.length) goto L4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|java.lang.Object[] r0 = (java.lang.Object[]) java.lang.reflect.Array.newInstance(r2.getClass().getComponentType(), growSize(r3))\ljava.lang.System.arraycopy(r2, 0, r0, 0, r3)\lr2 = r0\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|PHI: r2 \l  PHI: (r2v1 'array' T[]) = (r2v0 'array' T[]), (r2v2 'array' T[]) binds: [B:10:0x0003, B:11:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|r2[r3] = r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|RETURN\l|return r2\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static T[] androidx.core.content.res.GrowingArrayUtils.append((r2v0 'array' T[] A[D('array' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'currentSize' int A[D('currentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'element' T A[D('element' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0003 \-\> B:12:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;ITT;)[TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r0v4, types: [java.lang.Object[], java.lang.Object]\}\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

