digraph "CFG forandroidx.core.content.res.GrowingArrayUtils.append([JIJ)[J" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r3 I:int A[D('currentSize' int)]) + (1 int)  (LINE:69)\l0x0002: ARRAY_LENGTH  (r1 I:int) = (r2 I:??[] A[D('array' long[])]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:12:0x0010 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0005|0x0005: INVOKE  (r0 I:int) = (r3 I:int A[D('currentSize' int)]) type: STATIC call: androidx.core.content.res.GrowingArrayUtils.growSize(int):int A[MD:(int):int (m)] (LINE:70)\l0x0009: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:71)\l0x000c: INVOKE  \l  (r2 I:java.lang.Object A[D('array' long[])])\l  (r1 I:int)\l  (r0 I:java.lang.Object A[D('newArray' long[])])\l  (r1 I:int)\l  (r3 I:int A[D('currentSize' int)])\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x000f: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('array' long[])]) = (r0 I:??[OBJECT, ARRAY] A[D('newArray' long[])])  (LINE:72)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: APUT  \l  (r2 I:??[long, double][] A[D('array' long[])])\l  (r3 I:??[int, short, byte, char] A[D('currentSize' int)])\l  (r4 I:??[long, double] A[D('element' long)])\l  (LINE:74)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN  (r2 I:long[] A[D('array' long[])])  (LINE:75)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static long[] androidx.core.content.res.GrowingArrayUtils.append((r2 I:long[] A[D('array' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('currentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('element' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0003 \-\> B:12:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0010: r0 'newArray' [J\l  \-1 \-0x0012: r2 'array' [J\l  \-1 \-0x0012: r3 'currentSize' I\l  \-1 \-0x0012: r4 'element' J\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

