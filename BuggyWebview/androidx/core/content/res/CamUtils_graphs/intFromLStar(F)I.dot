digraph "CFG forandroidx.core.content.res.CamUtils.intFromLStar(F)I" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000}"];
Node_32 [shape=record,label="{32\:\ 0x0004|if ((r21 \> 1.0f ? 1 : (r21 == 1.0f ? 0 : \-1)) \>= 0) goto L5\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|RETURN\l|return androidx.core.view.ViewCompat.MEASURED_STATE_MASK\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009}"];
Node_36 [shape=record,label="{36\:\ 0x000d|if ((r21 \> 99.0f ? 1 : (r21 == 99.0f ? 0 : \-1)) \<= 0) goto L8\l}"];
Node_37 [shape=record,label="{37\:\ 0x000f|RETURN\l|return \-1\l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|float r1 = (r21 + 16.0f) \/ 116.0f\l}"];
Node_40 [shape=record,label="{40\:\ 0x0026|if ((r21 \> 8.0f ? 1 : (r21 == 8.0f ? 0 : \-1)) \<= 0) goto L26\l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|r7 = true\l}"];
Node_43 [shape=record,label="{43\:\ 0x002b|PHI: r7 \l  PHI: (r7v3 'lExceedsEpsilonKappa' boolean) = (r7v2 'lExceedsEpsilonKappa' boolean), (r7v4 'lExceedsEpsilonKappa' boolean) binds: [B:42:0x002a, B:41:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == false) goto L25\l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|float r10 = (r1 * r1) * r1\l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|PHI: r10 \l  PHI: (r10v1 'yT' float) = (r10v0 'yT' float), (r10v3 'yT' float) binds: [B:45:0x0032, B:44:0x002d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|if ((((r1 * r1) * r1) \> 0.008856452f ? 1 : (((r1 * r1) * r1) == 0.008856452f ? 0 : \-1)) \<= 0) goto L24\l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|r11 = true\l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|PHI: r11 \l  PHI: (r11v4 'cubeExceedEpsilon' boolean) = (r11v3 'cubeExceedEpsilon' boolean), (r11v5 'cubeExceedEpsilon' boolean) binds: [B:49:0x003e, B:48:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 == false) goto L23\l}"];
Node_51 [shape=record,label="{51\:\ 0x0041|float r12 = (r1 * r1) * r1\l}"];
Node_53 [shape=record,label="{53\:\ 0x004a|PHI: r12 \l  PHI: (r12v3 'xT' float) = (r12v2 'xT' float), (r12v5 'xT' float) binds: [B:52:0x0046, B:51:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 == false) goto L22\l}"];
Node_54 [shape=record,label="{54\:\ 0x004c|float r0 = (r1 * r1) * r1\l}"];
Node_56 [shape=record,label="{56\:\ 0x0056|PHI: r0 \l  PHI: (r0v6 'zT' float) = (r0v5 'zT' float), (r0v10 'zT' float) binds: [B:55:0x0051, B:54:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|float[] r2 = androidx.core.content.res.CamUtils.WHITE_POINT_D65\l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|RETURN\l|return androidx.core.graphics.ColorUtils.XYZToColor((double) (r2[0] * r12), (double) (r2[1] * r10), (double) (r2[2] * r0))\l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|float r0 = ((116.0f * r1) \- 16.0f) \/ 903.2963f\l}"];
Node_52 [shape=record,label="{52\:\ 0x0046|float r12 = ((r1 * 116.0f) \- 16.0f) \/ 903.2963f\l}"];
Node_49 [shape=record,label="{49\:\ 0x003e|r11 = false\l}"];
Node_45 [shape=record,label="{45\:\ 0x0032|float r10 = r21 \/ 903.2963f\l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|r7 = false\l}"];
MethodNode[shape=record,label="{public static int androidx.core.content.res.CamUtils.intFromLStar((r21v0 'lStar' float A[D('lStar' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0010 \-\> B:30:?, CROSS_EDGE: B:57:0x0073 \-\> B:30:?, CROSS_EDGE: B:55:0x0051 \-\> B:56:0x0056, CROSS_EDGE: B:52:0x0046 \-\> B:53:0x004a, CROSS_EDGE: B:49:0x003e \-\> B:50:0x003f, CROSS_EDGE: B:45:0x0032 \-\> B:46:0x0034, CROSS_EDGE: B:42:0x002a \-\> B:43:0x002b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_30;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_30;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_55 -> Node_56;
Node_52 -> Node_53;
Node_49 -> Node_50;
Node_45 -> Node_46;
Node_42 -> Node_43;
}

