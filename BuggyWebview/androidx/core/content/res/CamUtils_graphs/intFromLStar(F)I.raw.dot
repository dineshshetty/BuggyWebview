digraph "CFG forandroidx.core.content.res.CamUtils.intFromLStar(F)I" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:80)\l0x0002: CMP_G  (r0 I:int) = (r21 I:float A[D('lStar' float)]), (r0 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:35:0x0009 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|RETURN\l|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ??[int, float, short, byte, char])  (LINE:81)\l0x0008: RETURN  (r0 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|0x0009: CONST  (r0 I:??[int, float, short, byte, char]) = (1120272384(0x42c60000, float:99.0) ??[int, float, short, byte, char])  (LINE:82)\l0x000b: CMP_L  (r0 I:int) = (r21 I:float A[D('lStar' float)]), (r0 I:float) \l}"];
Node_36 [shape=record,label="{36\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:39:0x0011 \l}"];
Node_37 [shape=record,label="{37\:\ 0x000f|RETURN\l|0x000f: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:83)\l0x0010: RETURN  (r0 I:int) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, short, byte, char]) = (1098907648(0x41800000, float:16.0) ??[int, float, short, byte, char])  (LINE:87)\l0x0013: ARITH  (r1 I:float) = (r21 I:float A[D('lStar' float)]) + (r0 I:float) \l0x0015: CONST  (r2 I:??[int, float, short, byte, char]) = (1122500608(0x42e80000, float:116.0) ??[int, float, short, byte, char]) \l0x0017: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x0018: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fy' float)])  (LINE:90)\l0x0019: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fy' float)])  (LINE:91)\l0x001a: CONST  (r5 I:??[int, float, short, byte, char]) = (1147261687(0x4461d2f7, float:903.2963) ??[int, float, short, byte, char])  (LINE:93)\l0x001d: CONST  (r6 I:??[int, float, short, byte, char]) = (1007753895(0x3c111aa7, float:0.008856452) ??[int, float, short, byte, char])  (LINE:94)\l0x0020: CONST  (r7 I:??[int, float, short, byte, char]) = (1090519040(0x41000000, float:8.0) ??[int, float, short, byte, char])  (LINE:95)\l0x0022: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0023: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: CMP_L  (r7 I:int) = (r21 I:float A[D('lStar' float)]), (r7 I:float) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0026|0x0026: IF  (r7 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:42:0x002a \l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|0x0028: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002b|0x002b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lExceedsEpsilonKappa' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0032  (LINE:96)\l}"];
Node_44 [shape=record,label="{44\:\ 0x002d|0x002d: ARITH  (r10 I:float) = (r1 I:float A[D('fy' float)]) * (r1 I:float A[D('fy' float)]) \l0x002f: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float A[D('fy' float)]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|0x0034: ARITH  (r11 I:float) = (r1 I:float A[D('fy' float)]) * (r1 I:float A[D('fy' float)])  (LINE:97)\l0x0036: ARITH  (r11 I:float) = (r11 I:float) * (r1 I:float A[D('fy' float)]) \l0x0038: CMP_L  (r11 I:int) = (r11 I:float), (r6 I:float A[D('epsilon' float)]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|0x003a: IF  (r11 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:49:0x003e \l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|0x003c: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|0x003f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cubeExceedEpsilon' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0046  (LINE:98)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0041|0x0041: ARITH  (r12 I:float) = (r4 I:float A[D('fx' float)]) * (r4 I:float A[D('fx' float)]) \l0x0043: ARITH  (r12 I:float) = (r12 I:float) * (r4 I:float A[D('fx' float)]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x004a|0x004a: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cubeExceedEpsilon' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0051  (LINE:99)\l}"];
Node_54 [shape=record,label="{54\:\ 0x004c|0x004c: ARITH  (r0 I:float) = (r3 I:float A[D('fz' float)]) * (r3 I:float A[D('fz' float)]) \l0x004e: ARITH  (r0 I:float) = (r0 I:float) * (r3 I:float A[D('fz' float)]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0056|0x0056: SGET  (r2 I:float[]) =  androidx.core.content.res.CamUtils.WHITE_POINT_D65 float[]  (LINE:101)\l0x0058: AGET  (r9 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r9 I:??[int, short, byte, char]) \l0x005a: ARITH  (r9 I:float) = (r9 I:float) * (r12 I:float A[D('xT' float)]) \l0x005c: CAST (r13 I:double) = (double) (r9 I:float) \l0x005d: AGET  (r8 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r8 I:??[int, short, byte, char]) \l0x005f: ARITH  (r8 I:float) = (r8 I:float) * (r10 I:float A[D('yT' float)]) \l0x0061: CAST (r8 I:double) = (double) (r8 I:float) \l0x0062: CONST  (r15 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0063: AGET  (r2 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][]), (r15 I:??[int, short, byte, char]) \l0x0065: ARITH  (r2 I:float) = (r2 I:float) * (r0 I:float A[D('zT' float)]) \l0x0067: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('zT' float)]) \l0x0069: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fy' float)]) \l0x006b: CAST (r0 I:double A[D('zT' float)]) = (double) (r2 I:float) \l0x006c: MOVE  (r15 I:??[long, double]) = (r8 I:??[long, double]) \l0x006d: MOVE  (r17 I:??[long, double]) = (r0 I:??[long, double]) \l0x006f: INVOKE  (r0 I:int) = (r13 I:double), (r15 I:double), (r17 I:double) type: STATIC call: androidx.core.graphics.ColorUtils.XYZToColor(double, double, double):int A[MD:(double, double, double):int (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|RETURN\l|0x0073: RETURN  (r0 I:int) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|0x0051: ARITH  (r2 I:float) = (r2 I:float) * (r4 I:float A[D('fx' float)]) \l0x0053: ARITH  (r2 I:float) = (r2 I:float) \- (r0 I:float) \l0x0054: ARITH  (r0 I:float) = (r2 I:float) \/ (r5 I:float A[D('kappa' float)]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0046|0x0046: ARITH  (r12 I:float) = (r4 I:float A[D('fx' float)]) * (r2 I:float) \l0x0048: ARITH  (r12 I:float) = (r12 I:float) \- (r0 I:float) \l0x0049: ARITH  (r12 I:float) = (r12 I:float) \/ (r5 I:float A[D('kappa' float)]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x003e|0x003e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0032|0x0032: ARITH  (r10 I:float) = (r21 I:float A[D('lStar' float)]) \/ (r5 I:float A[D('kappa' float)]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|0x002a: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static int androidx.core.content.res.CamUtils.intFromLStar((r21 I:float A[D('lStar' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0010 \-\> B:30:?, CROSS_EDGE: B:57:0x0073 \-\> B:30:?, CROSS_EDGE: B:55:0x0051 \-\> B:56:0x0056, CROSS_EDGE: B:52:0x0046 \-\> B:53:0x004a, CROSS_EDGE: B:49:0x003e \-\> B:50:0x003f, CROSS_EDGE: B:45:0x0032 \-\> B:46:0x0034, CROSS_EDGE: B:42:0x002a \-\> B:43:0x002b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0056\-0x006b: r0 'zT' F\l  0x0018\-0x006b: r1 'fy' F\l  0x0019\-0x0073: r3 'fz' F\l  0x001a\-0x0073: r4 'fx' F\l  0x001d\-0x0073: r5 'kappa' F\l  0x0020\-0x0073: r6 'epsilon' F\l  0x002b\-0x0073: r7 'lExceedsEpsilonKappa' Z\l  0x0034\-0x0073: r10 'yT' F\l  0x003f\-0x0073: r11 'cubeExceedEpsilon' Z\l  0x004a\-0x0073: r12 'xT' F\l  0x006b\-0x0073: r19 'fy' F\l  0x006b\-0x0073: r20 'zT' F\l  \-1 \-0x0073: r21 'lStar' F\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_30;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_39;
Node_37 -> Node_30;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_55 -> Node_56;
Node_52 -> Node_53;
Node_49 -> Node_50;
Node_45 -> Node_46;
Node_42 -> Node_43;
}

