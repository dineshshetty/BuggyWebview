digraph "CFG forandroidx.core.content.res.GradientColorInflaterCompat.inflateChildElements(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)Landroidx\/core\/content\/res\/GradientColorInflaterCompat$ColorStops;" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)] (LINE:150)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0006: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:154)\l0x0008: CONST  (r3 I:??[int, float, short, byte, char]) = (20 ??[int, float, short, byte, char]) \l0x000a: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x000d: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:155)\l0x000f: INVOKE  (r4 I:java.util.ArrayList), (r3 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0012: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0013|LOOP_START\lLOOP:0: B:43:0x0013\-\>B:75:0x0013\l|0x0013: INVOKE  (r4 I:int) = (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:157)\l0x0017: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0088 \l}"];
Node_45 [shape=record,label="{45\:\ 0x001a|0x001a: INVOKE  (r4 I:int) = (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)] (LINE:158)\l0x001e: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x001f|0x001f: IF  (r4 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('innerDepth' int)])  \-\> B:49:0x0024 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0021|0x0021: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0022|0x0022: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0088 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0088|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0088|0x0088: INVOKE  (r1 I:int) = (r3 I:java.util.List A[D('colors' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:185)\l}"];
Node_63 [shape=record,label="{63\:\ 0x008c|0x008c: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:66:0x0094 \l}"];
Node_64 [shape=record,label="{64\:\ 0x008e|0x008e: NEW_INSTANCE  (r1 I:androidx.core.content.res.GradientColorInflaterCompat$ColorStops) =  androidx.core.content.res.GradientColorInflaterCompat$ColorStops \l0x0090: INVOKE  \l  (r1 I:androidx.core.content.res.GradientColorInflaterCompat$ColorStops)\l  (r3 I:java.util.List A[D('colors' java.util.List\<java.lang.Integer\>)])\l  (r2 I:java.util.List A[D('offsets' java.util.List\<java.lang.Float\>)])\l type: DIRECT call: androidx.core.content.res.GradientColorInflaterCompat.ColorStops.\<init\>(java.util.List, java.util.List):void A[MD:(java.util.List\<java.lang.Integer\>, java.util.List\<java.lang.Float\>):void (m)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0093|RETURN\l|0x0093: RETURN  (r1 I:androidx.core.content.res.GradientColorInflaterCompat$ColorStops) \l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_66 [shape=record,label="{66\:\ 0x0094|RETURN\l|0x0094: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:186)\l0x0095: RETURN  (r1 I:androidx.core.content.res.GradientColorInflaterCompat$ColorStops) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0024|0x0024: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:160)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0025|0x0025: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0028 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0028|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0028|0x0028: IF  (r6 I:??[int, byte, short, char] A[D('depth' int)]) \> (r0 I:??[int, byte, short, char] A[D('innerDepth' int)])  \-\> B:77:0x0013  (LINE:163)\l}"];
Node_71 [shape=record,label="{71\:\ 0x002a|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x002a|0x002a: INVOKE  (r4 I:java.lang.String) = (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x002e: CONST_STR  (r7 I:java.lang.String) =  \"item\" \l0x0030: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r7 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0034|0x0034: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0037 \l}"];
Node_72 [shape=record,label="{72\:\ 0x0037|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0037|0x0037: SGET  (r4 I:int[]) =  androidx.core.R.styleable.GradientColorItem int[]  (LINE:167)\l0x0039: INVOKE  (r4 I:android.content.res.TypedArray) = \l  (r12 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r15 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r4 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l0x003d: SGET  (r7 I:int) =  androidx.core.R.styleable.GradientColorItem_android_color int  (LINE:169)\l0x003f: INVOKE  (r7 I:boolean) = (r4 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r7 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l0x0043: SGET  (r8 I:int) =  androidx.core.R.styleable.GradientColorItem_android_offset int  (LINE:170)\l0x0045: INVOKE  (r8 I:boolean) = (r4 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r8 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0049|0x0049: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasColor' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x006d  (LINE:171)\l}"];
Node_58 [shape=record,label="{58\:\ 0x004b|0x004b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasOffset' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x006d \l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|0x004d: SGET  (r9 I:int) =  androidx.core.R.styleable.GradientColorItem_android_color int  (LINE:178)\l0x004f: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0050: INVOKE  (r9 I:int) = (r4 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r9 I:int), (r10 I:int) type: VIRTUAL call: android.content.res.TypedArray.getColor(int, int):int A[MD:(int, int):int (c)]\l0x0054: SGET  (r10 I:int) =  androidx.core.R.styleable.GradientColorItem_android_offset int  (LINE:179)\l0x0056: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0057: INVOKE  (r10 I:float) = (r4 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r10 I:int), (r11 I:float) type: VIRTUAL call: android.content.res.TypedArray.getFloat(int, float):float A[MD:(int, float):float (c)]\l0x005b: INVOKE  (r4 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:180)\l0x005e: INVOKE  (r11 I:java.lang.Integer) = (r9 I:int A[D('color' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:182)\l0x0062: INVOKE  (r3 I:java.util.List A[D('colors' java.util.List\<java.lang.Integer\>)]), (r11 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0065: INVOKE  (r11 I:java.lang.Float) = (r10 I:float A[D('offset' float)]) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)] (LINE:183)\l0x0069: INVOKE  (r2 I:java.util.List A[D('offsets' java.util.List\<java.lang.Float\>)]), (r11 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0013|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:43:0x0013\-\>B:75:0x0013\l}"];
Node_74 [shape=record,label="{74\:\ 0x006d|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x006d|0x006d: NEW_INSTANCE  (r1 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException  (LINE:172)\l0x006f: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0071: INVOKE  (r9 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0074: INVOKE  (r10 I:java.lang.String) = (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getPositionDescription():java.lang.String A[MD:():java.lang.String (c)] (LINE:173)\l0x0078: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007b: CONST_STR  (r10 I:java.lang.String) =  \": \<item\> tag requires a 'color' attribute and a 'offset' attribute!\" \l0x007d: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0080: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0084: INVOKE  (r1 I:org.xmlpull.v1.XmlPullParserException), (r9 I:java.lang.String) type: DIRECT call: org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0087|0x0087: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_73 [shape=record,label="{73\:\ 0x006d|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x0013|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x0013|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0013|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0088|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static androidx.core.content.res.GradientColorInflaterCompat$ColorStops androidx.core.content.res.GradientColorInflaterCompat.inflateChildElements((r12 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:52:0x0028 \-\> B:43:0x0013, BACK_EDGE: B:59:0x004d \-\> B:43:0x0013, CROSS_EDGE: B:57:0x0049 \-\> B:60:0x006d, BACK_EDGE: B:54:0x0034 \-\> B:43:0x0013, BACK_EDGE: B:50:0x0025 \-\> B:43:0x0013, CROSS_EDGE: B:65:0x0093 \-\> B:41:?, CROSS_EDGE: B:67:0x0095 \-\> B:41:?, CROSS_EDGE: B:46:0x001f \-\> B:49:0x0024, CROSS_EDGE: B:44:0x0018 \-\> B:62:0x0088\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x006c: r4 'a' Landroid\/content\/res\/TypedArray;\l  0x0043\-0x006c: r7 'hasColor' Z\l  0x0049\-0x006c: r8 'hasOffset' Z\l  0x0054\-0x006c: r9 'color' I\l  0x005b\-0x006c: r10 'offset' F\l  0x006d\-0x0088: r4 'a' Landroid\/content\/res\/TypedArray;\l  0x001f\-0x0088: r6 'depth' I\l  0x006d\-0x0088: r7 'hasColor' Z\l  0x006d\-0x0088: r8 'hasOffset' Z\l  0x0006\-0x0095: r0 'innerDepth' I\l  0x000d\-0x0095: r2 'offsets' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Float;\>;\l  0x0013\-0x0095: r3 'colors' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x0018\-0x0095: r5 'type' I\l  \-1 \-0x0095: r12 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0095: r13 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0095: r14 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0095: r15 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_70;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_68;
Node_68 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_41;
Node_66 -> Node_41;
Node_49 -> Node_50;
Node_50 -> Node_69;
Node_50 -> Node_76[style=dashed];
Node_69 -> Node_52;
Node_52 -> Node_71[style=dashed];
Node_52 -> Node_77;
Node_71 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_72;
Node_54 -> Node_78[style=dashed];
Node_72 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_73;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_74;
Node_59 -> Node_79;
Node_79 -> Node_75;
Node_75 -> Node_43;
Node_74 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_41;
Node_73 -> Node_60;
Node_78 -> Node_75;
Node_77 -> Node_75;
Node_76 -> Node_75;
Node_70 -> Node_62;
}

