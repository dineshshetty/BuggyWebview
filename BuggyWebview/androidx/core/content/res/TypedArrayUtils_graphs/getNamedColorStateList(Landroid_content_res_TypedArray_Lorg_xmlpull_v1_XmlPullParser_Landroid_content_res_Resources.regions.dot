digraph "CFG forandroidx.core.content.res.TypedArrayUtils.getNamedColorStateList(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;Ljava\/lang\/String;I)Landroid\/content\/res\/ColorStateList;" {
subgraph cluster_Region_1705777504 {
label = "R(1:(2:(2:3|(2:14|15)(1:(1:10)(1:13)))|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_638536195 {
label = "R(2:(2:3|(2:14|15)(1:(1:10)(1:13)))|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1675212599 {
label = "IF [B:21:0x0004] THEN: R(2:3|(2:14|15)(1:(1:10)(1:13))) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0004|if (hasAttribute(r5, r7) != false) goto L3\l}"];
subgraph cluster_Region_13300204 {
label = "R(2:3|(2:14|15)(1:(1:10)(1:13)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0006|android.util.TypedValue android.util.TypedValue r0 = new android.util.TypedValue()\lr4.getValue(r8, r0)\l}"];
subgraph cluster_IfRegion_1328650211 {
label = "IF [B:23:0x0011] THEN: R(2:14|15) ELSE: R(1:(1:10)(1:13))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r0.type == 2) goto L14\l}"];
subgraph cluster_Region_1080543519 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0032}"];
Node_33 [shape=record,label="{33\:\ 0x0050|throw new java.lang.UnsupportedOperationException(\"Failed to resolve attribute at index \" + r8 + \": \" + r0)\l}"];
}
subgraph cluster_Region_2120090306 {
label = "R(1:(1:10)(1:13)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_602535709 {
label = "IF [B:25:0x0017, B:27:0x001d] THEN: R(1:10) ELSE: R(1:13) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0017|if (r0.type \>= 28) goto L7\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|ADDED_TO_REGION\l|if (r0.type \<= 31) goto L9\l}"];
subgraph cluster_Region_1954227997 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0023|RETURN\l|return getNamedColorStateListFromInt(r0)\l}"];
}
subgraph cluster_Region_2075947888 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0031|RETURN\l|return androidx.core.content.res.ColorStateListInflaterCompat.inflate(r4.getResources(), r4.getResourceId(r8, 0), r6)\l}"];
}
}
}
}
}
}
subgraph cluster_Region_666853718 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0051|RETURN\l|return null\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0013}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0019}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001f}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0024}"];
MethodNode[shape=record,label="{public static android.content.res.ColorStateList androidx.core.content.res.TypedArrayUtils.getNamedColorStateList((r4v0 'a' android.content.res.TypedArray A[D('a' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'attrName' java.lang.String A[D('attrName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'resId' int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0031 \-\> B:19:?, CROSS_EDGE: B:25:0x0017 \-\> B:30:0x0024, CROSS_EDGE: B:33:0x0050 \-\> B:19:?, CROSS_EDGE: B:35:0x0052 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_34[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_25 -> Node_26;
Node_25 -> Node_30[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_19;
Node_31 -> Node_19;
Node_34 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

