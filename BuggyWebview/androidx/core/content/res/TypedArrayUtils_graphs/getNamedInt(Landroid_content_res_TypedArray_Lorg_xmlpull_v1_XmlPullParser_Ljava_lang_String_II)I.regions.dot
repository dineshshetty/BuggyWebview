digraph "CFG forandroidx.core.content.res.TypedArrayUtils.getNamedInt(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/lang\/String;II)I" {
subgraph cluster_Region_184714647 {
label = "R(2:1|(2:(1:3)|(1:6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|boolean boolean r0 = hasAttribute(r3, r4)\l}"];
subgraph cluster_Region_1744948955 {
label = "R(2:(1:3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_974982788 {
label = "IF [B:10:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0004|if (r0 == false) goto L3\l}"];
subgraph cluster_Region_38074781 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_1599684920 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000b|RETURN\l|return r2.getInt(r5, r6)\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0007}"];
MethodNode[shape=record,label="{public static int androidx.core.content.res.TypedArrayUtils.getNamedInt((r2v0 'a' android.content.res.TypedArray A[D('a' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attrName' java.lang.String A[D('attrName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'resId' int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'defaultValue' int A[D('defaultValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
Node_12 -> Node_13;
}

