digraph "CFG forandroidx.core.content.MimeTypeFilter.mimeTypeAgainstFilter([Ljava\/lang\/String;[Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r6 I:??[] A[D('filterParts' java.lang.String[])])  (LINE:48)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x004b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:52)\l0x0005: AGET  (r2 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r0 I:??[int, short, byte, char]) \l0x0007: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) type: VIRTUAL call: java.lang.String.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0043 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: AGET  (r3 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r2 I:??[int, short, byte, char]) \l0x0010: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0043 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: ARRAY_LENGTH  (r3 I:int) = (r5 I:??[] A[D('mimeTypeParts' java.lang.String[])])  (LINE:56)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:boolean)  (LINE:57)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: AGET  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r0 I:??[int, short, byte, char])  (LINE:59)\l0x001c: CONST_STR  (r3 I:java.lang.String) =  \"*\" \l0x001e: INVOKE  (r1 I:boolean) = (r3 I:java.lang.String), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: AGET  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r0 I:??[int, short, byte, char]) \l0x0026: AGET  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('mimeTypeParts' java.lang.String[])]), (r0 I:??[int, short, byte, char]) \l0x0028: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:60)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002f \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|0x002e: RETURN  (r0 I:boolean)  (LINE:61)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|0x002f: AGET  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r2 I:??[int, short, byte, char])  (LINE:63)\l0x0031: INVOKE  (r1 I:boolean) = (r3 I:java.lang.String), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: AGET  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('filterParts' java.lang.String[])]), (r2 I:??[int, short, byte, char]) \l0x0039: AGET  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('mimeTypeParts' java.lang.String[])]), (r2 I:??[int, short, byte, char]) \l0x003b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:64)\l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0042 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|RETURN\l|0x0041: RETURN  (r0 I:boolean)  (LINE:65)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|RETURN\l|0x0042: RETURN  (r2 I:boolean)  (LINE:68)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|0x0043: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:53)\l0x0045: CONST_STR  (r1 I:java.lang.String) =  \"Ill\-formatted MIME type filter. Type or subtype empty.\" \l0x0047: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004a|0x004a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:49)\l0x004d: CONST_STR  (r1 I:java.lang.String) =  \"Ill\-formatted MIME type filter. Must be type\/subtype.\" \l0x004f: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|0x0052: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.content.MimeTypeFilter.mimeTypeAgainstFilter((r5 I:java.lang.String[] A[D('mimeTypeParts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[D('filterParts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002e \-\> B:1:?, CROSS_EDGE: B:20:0x0041 \-\> B:1:?, CROSS_EDGE: B:21:0x0042 \-\> B:1:?, CROSS_EDGE: B:17:0x0035 \-\> B:21:0x0042, CROSS_EDGE: B:12:0x0022 \-\> B:16:0x002f, CROSS_EDGE: B:23:0x004a \-\> B:1:?, CROSS_EDGE: B:5:0x000b \-\> B:22:0x0043, CROSS_EDGE: B:25:0x0052 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0052: r5 'mimeTypeParts' [Ljava\/lang\/String;\l  \-1 \-0x0052: r6 'filterParts' [Ljava\/lang\/String;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_1;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_1;
}

