digraph "CFG forandroidx.core.content.MimeTypeFilter.mimeTypeAgainstFilter([Ljava\/lang\/String;[Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r6.length != 2) goto L24\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r6[0].isEmpty() != false) goto L22\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r6[1].isEmpty() != false) goto L22\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x0017|if (r5.length == 2) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a}"];
Node_12 [shape=record,label="{12\:\ 0x0022|if (\"*\".equals(r6[0]) != false) goto L16\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024}"];
Node_14 [shape=record,label="{14\:\ 0x002c|if (r6[0].equals(r5[0]) != false) goto L16\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f}"];
Node_17 [shape=record,label="{17\:\ 0x0035|if (\"*\".equals(r6[1]) != false) goto L21\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037}"];
Node_19 [shape=record,label="{19\:\ 0x003f|if (r6[1].equals(r5[1]) != false) goto L21\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|RETURN\l|return false\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|RETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043}"];
Node_23 [shape=record,label="{23\:\ 0x004a|throw new java.lang.IllegalArgumentException(\"Ill\-formatted MIME type filter. Type or subtype empty.\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x004b}"];
Node_25 [shape=record,label="{25\:\ 0x0052|throw new java.lang.IllegalArgumentException(\"Ill\-formatted MIME type filter. Must be type\/subtype.\")\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.content.MimeTypeFilter.mimeTypeAgainstFilter((r5v0 'mimeTypeParts' java.lang.String[] A[D('mimeTypeParts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'filterParts' java.lang.String[] A[D('filterParts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002e \-\> B:1:?, CROSS_EDGE: B:20:0x0041 \-\> B:1:?, CROSS_EDGE: B:21:0x0042 \-\> B:1:?, CROSS_EDGE: B:17:0x0035 \-\> B:21:0x0042, CROSS_EDGE: B:12:0x0022 \-\> B:16:0x002f, CROSS_EDGE: B:23:0x004a \-\> B:1:?, CROSS_EDGE: B:5:0x000b \-\> B:22:0x0043, CROSS_EDGE: B:25:0x0052 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_24;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_22;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_1;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_24 -> Node_25;
Node_25 -> Node_1;
}

