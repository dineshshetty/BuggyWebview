digraph "CFG forandroidx.core.content.LocusIdCompat.equals(Ljava\/lang\/Object;)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000}"];
Node_24 [shape=record,label="{24\:\ 0x0001|if (r4 != r5) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|RETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004}"];
Node_27 [shape=record,label="{27\:\ 0x0005|if (r5 != null) goto L8\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|RETURN\l|return false\l}"];
Node_29 [shape=record,label="{29\:\ 0x0008}"];
Node_30 [shape=record,label="{30\:\ 0x0010|if (getClass() == r5.getClass()) goto L11\l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|RETURN\l|return false\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|androidx.core.content.LocusIdCompat r2 = (androidx.core.content.LocusIdCompat) r5\ljava.lang.String r3 = r4.mId\l}"];
Node_33 [shape=record,label="{33\:\ 0x0018|if (r3 != null) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a}"];
Node_35 [shape=record,label="{35\:\ 0x001c|if (r2.mId != null) goto L15\l}"];
Node_37 [shape=record,label="{37\:\ 0x001f|RETURN\lORIG_RETURN\l|return false\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_39 [shape=record,label="{39\:\ 0x0021}"];
Node_40 [shape=record,label="{40\:\ 0x0027|RETURN\l|return r3.equals(r2.mId)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.content.LocusIdCompat.equals((r4v0 'this' androidx.core.content.LocusIdCompat A[IMMUTABLE_TYPE, THIS]), (r5v0 'obj' java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0007 \-\> B:22:?, CROSS_EDGE: B:31:0x0012 \-\> B:22:?, CROSS_EDGE: B:38:0x0020 \-\> B:22:?, CROSS_EDGE: B:35:0x001c \-\> B:38:0x0020, CROSS_EDGE: B:40:0x0027 \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_22;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_41[style=dashed];
Node_37 -> Node_22;
Node_41 -> Node_22;
Node_39 -> Node_40;
Node_40 -> Node_22;
}

