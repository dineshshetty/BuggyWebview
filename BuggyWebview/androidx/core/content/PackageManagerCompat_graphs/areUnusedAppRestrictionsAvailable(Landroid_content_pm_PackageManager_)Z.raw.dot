digraph "CFG forandroidx.core.content.PackageManagerCompat.areUnusedAppRestrictionsAvailable(Landroid\/content\/pm\/PackageManager;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:202)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:29:0x000a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: SGET  (r4 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:203)\l0x000d: CONST  (r5 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|0x000f: IF  (r4 I:??[int, byte, short, char]) \< (r5 I:??[int, byte, short, char])  \-\> B:35:0x0017 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: SGET  (r4 I:int) =  android.os.Build.VERSION.SDK_INT int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0013|0x0013: IF  (r4 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:35:0x0017 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0015|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0018|0x0018: INVOKE  (r4 I:java.lang.String) = (r6 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager)]) type: STATIC call: androidx.core.content.PackageManagerCompat.getPermissionRevocationVerifierApp(android.content.pm.PackageManager):java.lang.String A[MD:(android.content.pm.PackageManager):java.lang.String (m)] (LINE:206)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0020 \l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|0x001e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('restrictionsBuiltIntoOs' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:?  (LINE:208)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isOsMThroughQ' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0028 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|0x0025: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasBackportFeature' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0028 \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: RETURN  (r2 I:boolean) \l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x0029: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0020|0x0020: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0017|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.content.PackageManagerCompat.areUnusedAppRestrictionsAvailable((r6 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0025 \-\> B:45:0x0029, CROSS_EDGE: B:41:0x0023 \-\> B:44:0x0028, CROSS_EDGE: B:40:0x0021 \-\> B:45:0x0029, CROSS_EDGE: B:39:0x0020 \-\> B:40:0x0021, CROSS_EDGE: B:35:0x0017 \-\> B:36:0x0018, CROSS_EDGE: B:31:0x000f \-\> B:35:0x0017, CROSS_EDGE: B:29:0x000a \-\> B:30:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0029: r0 'restrictionsBuiltIntoOs' Z\l  0x0018\-0x0029: r1 'isOsMThroughQ' Z\l  0x0021\-0x0029: r4 'hasBackportFeature' Z\l  \-1 \-0x0029: r6 'packageManager' Landroid\/content\/pm\/PackageManager;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_44;
Node_42 -> Node_47[style=dashed];
Node_47 -> Node_25;
Node_44 -> Node_25;
Node_46 -> Node_25;
Node_39 -> Node_40;
Node_35 -> Node_36;
Node_29 -> Node_30;
}

