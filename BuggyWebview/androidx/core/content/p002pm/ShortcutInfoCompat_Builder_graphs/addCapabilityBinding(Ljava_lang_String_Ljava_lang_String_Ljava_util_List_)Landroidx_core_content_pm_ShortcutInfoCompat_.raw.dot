digraph "CFG forandroidx.core.content.pm.ShortcutInfoCompat.Builder.addCapabilityBinding(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/util\/List;)Landroidx\/core\/content\/pm\/ShortcutInfoCompat$Builder;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder), (r3 I:java.lang.String A[D('capability' java.lang.String)]) type: VIRTUAL call: androidx.core.content.pm.ShortcutInfoCompat.Builder.addCapabilityBinding(java.lang.String):androidx.core.content.pm.ShortcutInfoCompat$Builder A[MD:(java.lang.String):androidx.core.content.pm.ShortcutInfoCompat$Builder (m)] (LINE:930)\l0x0003: INVOKE  (r0 I:boolean) = (r5 I:java.util.List A[D('parameterValues' java.util.List\<java.lang.String\>)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)] (LINE:932)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0031 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: IGET  (r0 I:java.util.Map\<java.lang.String, java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>\>) = (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder) androidx.core.content.pm.ShortcutInfoCompat.Builder.mCapabilityBindingParams java.util.Map  (LINE:933)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0014 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap  (LINE:934)\l0x000f: INVOKE  (r0 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0012: IPUT  \l  (r0 I:java.util.Map\<java.lang.String, java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>\>)\l  (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder)\l androidx.core.content.pm.ShortcutInfoCompat.Builder.mCapabilityBindingParams java.util.Map \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IGET  (r0 I:java.util.Map\<java.lang.String, java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>\>) = (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder) androidx.core.content.pm.ShortcutInfoCompat.Builder.mCapabilityBindingParams java.util.Map  (LINE:936)\l0x0016: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object A[D('capability' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0026 \l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|0x001c: IGET  (r0 I:java.util.Map\<java.lang.String, java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>\>) = (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder) androidx.core.content.pm.ShortcutInfoCompat.Builder.mCapabilityBindingParams java.util.Map  (LINE:937)\l0x001e: NEW_INSTANCE  (r1 I:java.util.HashMap) =  java.util.HashMap \l0x0020: INVOKE  (r1 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x0023: INVOKE  (r0 I:java.util.Map), (r3 I:java.lang.Object A[D('capability' java.lang.String)]), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|0x0026: IGET  (r0 I:java.util.Map\<java.lang.String, java.util.Map\<java.lang.String, java.util.List\<java.lang.String\>\>\>) = (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder) androidx.core.content.pm.ShortcutInfoCompat.Builder.mCapabilityBindingParams java.util.Map  (LINE:940)\l0x0028: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object A[D('capability' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x002c: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  \l  (r0 I:java.util.Map)\l  (r4 I:java.lang.Object A[D('parameter' java.lang.String)])\l  (r5 I:java.lang.Object A[D('parameterValues' java.util.List\<java.lang.String\>)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0031|RETURN\l|0x0031: RETURN  (r2 I:androidx.core.content.pm.ShortcutInfoCompat$Builder)  (LINE:942)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.core.content.pm.ShortcutInfoCompat$Builder androidx.core.content.pm.ShortcutInfoCompat.Builder.addCapabilityBinding((r2 'this' I:androidx.core.content.pm.ShortcutInfoCompat$Builder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('capability' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('parameter' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<java.lang.String\> A[D('parameterValues' java.util.List\<java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x001a \-\> B:22:0x0026, CROSS_EDGE: B:17:0x000b \-\> B:19:0x0014, CROSS_EDGE: B:15:0x0007 \-\> B:23:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0031: r3 'capability' Ljava\/lang\/String;\l  \-1 \-0x0031: r4 'parameter' Ljava\/lang\/String;\l  0x0000\-0x0031: r5 'parameterValues' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/String;\>;\lSIGNATURE: (Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/util\/List\<Ljava\/lang\/String;\>;)Landroidx\/core\/content\/pm\/ShortcutInfoCompat$Builder;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

