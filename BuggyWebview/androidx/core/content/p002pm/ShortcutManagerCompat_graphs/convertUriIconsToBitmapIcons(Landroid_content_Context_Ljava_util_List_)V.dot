digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.convertUriIconsToBitmapIcons(Landroid\/content\/Context;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.ArrayList r0 = new java.util.ArrayList\<\>(r5)\ljava.util.Iterator r1 = r0.iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_START\lLOOP:0: B:3:0x0009\-\>B:12:0x0009\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r1.hasNext() == false) goto L11\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|androidx.core.content.pm.ShortcutInfoCompat r2 = r1.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|if (convertUriIconToBitmapIcon(r4, r2) != false) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|r5.remove(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0009\-\>B:12:0x0009\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void androidx.core.content.pm.ShortcutManagerCompat.convertUriIconsToBitmapIcons((r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'shortcutInfoList' java.util.List\<androidx.core.content.pm.ShortcutInfoCompat\> A[D('shortcutInfoList' java.util.List\<androidx.core.content.pm.ShortcutInfoCompat\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x001b \-\> B:3:0x0009, BACK_EDGE: B:6:0x0019 \-\> B:3:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/Context;Ljava\/util\/List\<Landroidx\/core\/content\/pm\/ShortcutInfoCompat;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_10[style=dashed];
Node_6 -> Node_13;
Node_10 -> Node_7;
Node_7 -> Node_14;
Node_14 -> Node_12;
Node_12 -> Node_3;
Node_13 -> Node_12;
Node_11 -> Node_9;
Node_9 -> Node_1;
}

