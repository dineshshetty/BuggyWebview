digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.getShortcuts(Landroid\/content\/Context;I)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 30) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return androidx.core.content.p002pm.ShortcutInfoCompat.fromShortcuts(r3, ((android.content.pm.ShortcutManager) r3.getSystemService(android.content.pm.ShortcutManager.class)).getShortcuts(r4))\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (android.os.Build.VERSION.SDK_INT \< 25) goto L19\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|android.content.pm.ShortcutManager r0 = (android.content.pm.ShortcutManager) r3.getSystemService(android.content.pm.ShortcutManager.class)\ljava.util.ArrayList r1 = new java.util.ArrayList\<\>()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if ((r4 & 1) == 0) goto L11\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|r1.addAll(r0.getManifestShortcuts())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035}"];
Node_12 [shape=record,label="{12\:\ 0x0037|if ((r4 & 2) == 0) goto L14\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|r1.addAll(r0.getDynamicShortcuts())\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040}"];
Node_15 [shape=record,label="{15\:\ 0x0042|if ((r4 & 4) == 0) goto L17\l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|r1.addAll(r0.getPinnedShortcuts())\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b}"];
Node_18 [shape=record,label="{18\:\ 0x004f|RETURN\l|return androidx.core.content.p002pm.ShortcutInfoCompat.fromShortcuts(r3, r1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050}"];
Node_20 [shape=record,label="{20\:\ 0x0052|if ((r4 & 2) == 0) goto L21\l}"];
Node_24 [shape=record,label="{24\:\ 0x005e}"];
Node_25 [shape=record,label="{25\:\ 0x0062|RETURN\l|return java.util.Collections.emptyList()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0054|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x005d, blocks: (B:21:0x0054), top: B:26:0x0054 \}\lCatch: Exception \-\> 0x005d\l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|RETURN\l|return getShortcutInfoSaverInstance(r3).getShortcuts()\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|ExcHandler: Exception \-\> 0x005d\l}"];
MethodNode[shape=record,label="{public static java.util.List\<androidx.core.content.pm.ShortcutInfoCompat\> androidx.core.content.pm.ShortcutManagerCompat.getShortcuts((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'matchFlags' int A[D('matchFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x004f \-\> B:1:?, CROSS_EDGE: B:15:0x0042 \-\> B:17:0x004b, CROSS_EDGE: B:12:0x0037 \-\> B:14:0x0040, CROSS_EDGE: B:9:0x002c \-\> B:11:0x0035, CROSS_EDGE: B:25:0x0062 \-\> B:1:?, CROSS_EDGE: B:22:0x005c \-\> B:1:?, CROSS_EDGE: B:23:0x005d \-\> B:24:0x005e, CROSS_EDGE: B:26:0x0054 \-\> B:23:0x005d\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x005d, blocks: (B:21:0x0054), top: B:26:0x0054 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/Context;I)Ljava\/util\/List\<Landroidx\/core\/content\/pm\/ShortcutInfoCompat;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_24;
Node_20 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_26 -> Node_21;
Node_26 -> Node_23;
Node_21 -> Node_22;
Node_21 -> Node_27;
Node_22 -> Node_1;
Node_27 -> Node_23;
Node_23 -> Node_24;
}

