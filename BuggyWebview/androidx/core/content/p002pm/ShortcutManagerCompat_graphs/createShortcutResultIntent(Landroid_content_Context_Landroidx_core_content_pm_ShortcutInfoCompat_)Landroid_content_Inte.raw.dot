digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.createShortcutResultIntent(Landroid\/content\/Context;Landroidx\/core\/content\/pm\/ShortcutInfoCompat;)Landroid\/content\/Intent;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:239)\l0x0001: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:240)\l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST_CLASS  (r1 I:java.lang.Class\<android.content.pm.ShortcutManager\>) =  android.content.pm.ShortcutManager.class  (LINE:241)\l0x0009: INVOKE  (r1 I:java.lang.Object) = (r3 I:android.content.Context A[D('context' android.content.Context)]), (r1 I:java.lang.Class) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.Class):java.lang.Object A[MD:\<T\>:(java.lang.Class\<T\>):T (c)]\l0x000d: CHECK_CAST (r1 I:android.content.pm.ShortcutManager) = (android.content.pm.ShortcutManager) (r1 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r2 I:android.content.pm.ShortcutInfo) = (r4 I:androidx.core.content.pm.ShortcutInfoCompat A[D('shortcut' androidx.core.content.pm.ShortcutInfoCompat)]) type: VIRTUAL call: androidx.core.content.pm.ShortcutInfoCompat.toShortcutInfo():android.content.pm.ShortcutInfo A[MD:():android.content.pm.ShortcutInfo (m)] (LINE:242)\l0x0013: INVOKE  (r0 I:android.content.Intent A[D('result' android.content.Intent)]) = (r1 I:android.content.pm.ShortcutManager), (r2 I:android.content.pm.ShortcutInfo) type: VIRTUAL call: android.content.pm.ShortcutManager.createShortcutResultIntent(android.content.pm.ShortcutInfo):android.content.Intent A[MD:(android.content.pm.ShortcutInfo):android.content.Intent (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' android.content.Intent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f  (LINE:244)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: NEW_INSTANCE  (r1 I:android.content.Intent) =  android.content.Intent  (LINE:245)\l0x001b: INVOKE  (r1 I:android.content.Intent) type: DIRECT call: android.content.Intent.\<init\>():void A[MD:():void (c)]\l0x001e: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' android.content.Intent)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r1 I:android.content.Intent) = \l  (r4 I:androidx.core.content.pm.ShortcutInfoCompat A[D('shortcut' androidx.core.content.pm.ShortcutInfoCompat)])\l  (r0 I:android.content.Intent A[D('result' android.content.Intent)])\l type: VIRTUAL call: androidx.core.content.pm.ShortcutInfoCompat.addToIntent(android.content.Intent):android.content.Intent A[MD:(android.content.Intent):android.content.Intent (m)] (LINE:247)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:android.content.Intent) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.content.Intent androidx.core.content.pm.ShortcutManagerCompat.createShortcutResultIntent((r3 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.core.content.pm.ShortcutInfoCompat A[D('shortcut' androidx.core.content.pm.ShortcutInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0017 \-\> B:7:0x001f, CROSS_EDGE: B:3:0x0005 \-\> B:5:0x0017\lDebug Info:\l  0x0001\-0x0023: r0 'result' Landroid\/content\/Intent;\l  \-1 \-0x0023: r3 'context' Landroid\/content\/Context;\l  \-1 \-0x0023: r4 'shortcut' Landroidx\/core\/content\/pm\/ShortcutInfoCompat;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
}

