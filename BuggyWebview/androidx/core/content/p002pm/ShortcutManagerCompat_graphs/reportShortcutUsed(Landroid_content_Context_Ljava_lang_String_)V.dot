digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.reportShortcutUsed(Landroid\/content\/Context;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.core.util.Preconditions.checkNotNull(r3)\landroidx.core.util.Preconditions.checkNotNull(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (android.os.Build.VERSION.SDK_INT \< 25) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|((android.content.pm.ShortcutManager) r3.getSystemService(android.content.pm.ShortcutManager.class)).reportShortcutUsed(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|java.util.Iterator r0 = getShortcutInfoListeners(r3).iterator()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|LOOP_START\lLOOP:0: B:6:0x001f\-\>B:8:0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r0.hasNext() == false) goto L8\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|LOOP_END\lLOOP:0: B:6:0x001f\-\>B:8:0x0025\l|androidx.core.content.pm.ShortcutInfoChangeListener r1 = r0.next()\lr1.onShortcutUsageReported(java.util.Collections.singletonList(r4))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static void androidx.core.content.pm.ShortcutManagerCompat.reportShortcutUsed((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'shortcutId' java.lang.String A[D('shortcutId' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x0025 \-\> B:6:0x001f, CROSS_EDGE: B:3:0x000a \-\> B:5:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_6;
Node_10 -> Node_9;
Node_9 -> Node_1;
}

