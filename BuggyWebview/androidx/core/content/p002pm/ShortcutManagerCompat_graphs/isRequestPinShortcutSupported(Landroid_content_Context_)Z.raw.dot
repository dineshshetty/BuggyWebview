digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.isRequestPinShortcutSupported(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:154)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST_CLASS  (r0 I:java.lang.Class\<android.content.pm.ShortcutManager\>) =  android.content.pm.ShortcutManager.class  (LINE:155)\l0x0008: INVOKE  (r0 I:java.lang.Object) = (r6 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:java.lang.Class) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.Class):java.lang.Object A[MD:\<T\>:(java.lang.Class\<T\>):T (c)]\l0x000c: CHECK_CAST (r0 I:android.content.pm.ShortcutManager) = (android.content.pm.ShortcutManager) (r0 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:boolean) = (r0 I:android.content.pm.ShortcutManager) type: VIRTUAL call: android.content.pm.ShortcutManager.isRequestPinShortcutSupported():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST_STR  (r0 I:java.lang.String) =  \"com.android.launcher.permission.INSTALL_SHORTCUT\"  (LINE:158)\l0x0015: INVOKE  (r1 I:int) = (r6 I:android.content.Context A[D('context' android.content.Context)]), (r0 I:java.lang.String) type: STATIC call: androidx.core.content.ContextCompat.checkSelfPermission(android.content.Context, java.lang.String):int A[MD:(android.content.Context, java.lang.String):int (m)]\l0x0019: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\l|0x001c: RETURN  (r2 I:boolean)  (LINE:160)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: INVOKE  (r1 I:android.content.pm.PackageManager) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getPackageManager():android.content.pm.PackageManager A[MD:():android.content.pm.PackageManager (c)] (LINE:162)\l0x0021: NEW_INSTANCE  (r3 I:android.content.Intent) =  android.content.Intent \l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"com.android.launcher.action.INSTALL_SHORTCUT\" \l0x0025: INVOKE  (r3 I:android.content.Intent), (r4 I:java.lang.String) type: DIRECT call: android.content.Intent.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0028: INVOKE  (r1 I:java.util.List) = (r1 I:android.content.pm.PackageManager), (r3 I:android.content.Intent), (r2 I:int) type: VIRTUAL call: android.content.pm.PackageManager.queryBroadcastReceivers(android.content.Intent, int):java.util.List A[MD:(android.content.Intent, int):java.util.List\<android.content.pm.ResolveInfo\> (c)]\l0x002c: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|LOOP_START\lLOOP:0: B:10:0x0030\-\>B:15:0x004a\l|0x0030: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0050 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003a: CHECK_CAST (r3 I:android.content.pm.ResolveInfo) = (android.content.pm.ResolveInfo) (r3 I:??[OBJECT, ARRAY]) \l0x003c: IGET  (r4 I:android.content.pm.ActivityInfo) = (r3 I:android.content.pm.ResolveInfo A[D('info' android.content.pm.ResolveInfo)]) android.content.pm.ResolveInfo.activityInfo android.content.pm.ActivityInfo  (LINE:164)\l0x003e: IGET  (r4 I:java.lang.String) = (r4 I:android.content.pm.ActivityInfo) android.content.pm.ActivityInfo.permission java.lang.String \l0x0040: INVOKE  (r5 I:boolean) = (r4 I:java.lang.CharSequence A[D('permission' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:165)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004e \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: INVOKE  (r5 I:boolean) = (r0 I:java.lang.String), (r4 I:java.lang.Object A[D('permission' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|LOOP_END\lLOOP:0: B:10:0x0030\-\>B:15:0x004a\l|0x004a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0030 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x004e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) A[SYNTHETIC] (LINE:166)\l0x004f: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x004e|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|RETURN\lORIG_RETURN\l|0x004e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:166)\l0x004f: RETURN  (r0 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|RETURN\l|0x0050: RETURN  (r2 I:boolean)  (LINE:169)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.content.pm.ShortcutManagerCompat.isRequestPinShortcutSupported((r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001c \-\> B:1:?, CROSS_EDGE: B:19:0x004f \-\> B:1:?, BACK_EDGE: B:15:0x004a \-\> B:10:0x0030, CROSS_EDGE: B:13:0x0044 \-\> B:18:0x004e, CROSS_EDGE: B:20:0x0050 \-\> B:1:?\lDebug Info:\l  0x003c\-0x004d: r3 'info' Landroid\/content\/pm\/ResolveInfo;\l  0x0040\-0x004d: r4 'permission' Ljava\/lang\/String;\l  0x004e\-0x0050: r3 'info' Landroid\/content\/pm\/ResolveInfo;\l  0x004e\-0x0050: r4 'permission' Ljava\/lang\/String;\l  \-1 \-0x0050: r6 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_15 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_21 -> Node_18;
Node_18 -> Node_1;
Node_22 -> Node_20;
Node_20 -> Node_1;
}

