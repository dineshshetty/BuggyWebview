digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.convertUriIconToBitmapIcon(Landroid\/content\/Context;Landroidx\/core\/content\/pm\/ShortcutInfoCompat;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.graphics.drawable.IconCompat) = (r7 I:androidx.core.content.pm.ShortcutInfoCompat A[D('info' androidx.core.content.pm.ShortcutInfoCompat)]) androidx.core.content.pm.ShortcutInfoCompat.mIcon androidx.core.graphics.drawable.IconCompat  (LINE:555)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0006 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean)  (LINE:556)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IGET  (r0 I:androidx.core.graphics.drawable.IconCompat) = (r7 I:androidx.core.content.pm.ShortcutInfoCompat A[D('info' androidx.core.content.pm.ShortcutInfoCompat)]) androidx.core.content.pm.ShortcutInfoCompat.mIcon androidx.core.graphics.drawable.IconCompat  (LINE:558)\l0x0008: IGET  (r0 I:int) = (r0 I:androidx.core.graphics.drawable.IconCompat) androidx.core.graphics.drawable.IconCompat.mType int \l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:559)\l0x000b: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0012 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0012 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|RETURN\l|0x0011: RETURN  (r2 I:boolean)  (LINE:560)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: IGET  (r4 I:androidx.core.graphics.drawable.IconCompat) = (r7 I:androidx.core.content.pm.ShortcutInfoCompat A[D('info' androidx.core.content.pm.ShortcutInfoCompat)]) androidx.core.content.pm.ShortcutInfoCompat.mIcon androidx.core.graphics.drawable.IconCompat  (LINE:562)\l0x0014: INVOKE  (r4 I:java.io.InputStream) = \l  (r4 I:androidx.core.graphics.drawable.IconCompat)\l  (r6 I:android.content.Context A[D('context' android.content.Context)])\l type: VIRTUAL call: androidx.core.graphics.drawable.IconCompat.getUriInputStream(android.content.Context):java.io.InputStream A[MD:(android.content.Context):java.io.InputStream (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('is' java.io.InputStream)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b  (LINE:563)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|RETURN\l|0x001a: RETURN  (r1 I:boolean)  (LINE:564)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|0x001b: INVOKE  (r5 I:android.graphics.Bitmap) = (r4 I:java.io.InputStream A[D('is' java.io.InputStream)]) type: STATIC call: android.graphics.BitmapFactory.decodeStream(java.io.InputStream):android.graphics.Bitmap A[MD:(java.io.InputStream):android.graphics.Bitmap (c)] (LINE:566)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bitmap' android.graphics.Bitmap)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0022  (LINE:567)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|RETURN\l|0x0021: RETURN  (r1 I:boolean)  (LINE:568)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0029  (LINE:570)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|0x0024: INVOKE  (r1 I:androidx.core.graphics.drawable.IconCompat) = (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: STATIC call: androidx.core.graphics.drawable.IconCompat.createWithAdaptiveBitmap(android.graphics.Bitmap):androidx.core.graphics.drawable.IconCompat A[MD:(android.graphics.Bitmap):androidx.core.graphics.drawable.IconCompat (m)] (LINE:571)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|0x002d: IPUT  \l  (r1 I:androidx.core.graphics.drawable.IconCompat)\l  (r7 I:androidx.core.content.pm.ShortcutInfoCompat A[D('info' androidx.core.content.pm.ShortcutInfoCompat)])\l androidx.core.content.pm.ShortcutInfoCompat.mIcon androidx.core.graphics.drawable.IconCompat \l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|RETURN\l|0x002f: RETURN  (r2 I:boolean)  (LINE:573)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: INVOKE  (r1 I:androidx.core.graphics.drawable.IconCompat) = (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: STATIC call: androidx.core.graphics.drawable.IconCompat.createWithBitmap(android.graphics.Bitmap):androidx.core.graphics.drawable.IconCompat A[MD:(android.graphics.Bitmap):androidx.core.graphics.drawable.IconCompat (m)] (LINE:572)\l}"];
MethodNode[shape=record,label="{static boolean androidx.core.content.pm.ShortcutManagerCompat.convertUriIconToBitmapIcon((r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.core.content.pm.ShortcutInfoCompat A[D('info' androidx.core.content.pm.ShortcutInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0011 \-\> B:1:?, CROSS_EDGE: B:12:0x001a \-\> B:1:?, CROSS_EDGE: B:15:0x0021 \-\> B:1:?, CROSS_EDGE: B:20:0x002f \-\> B:1:?, CROSS_EDGE: B:18:0x0029 \-\> B:19:0x002d, CROSS_EDGE: B:6:0x000c \-\> B:10:0x0012\lDebug Info:\l  0x000a\-0x002f: r0 'type' I\l  0x0018\-0x002f: r4 'is' Ljava\/io\/InputStream;\l  0x001f\-0x002f: r5 'bitmap' Landroid\/graphics\/Bitmap;\l  \-1 \-0x002f: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x002f: r7 'info' Landroidx\/core\/content\/pm\/ShortcutInfoCompat;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_18 -> Node_19;
}

