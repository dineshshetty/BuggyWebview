digraph "CFG forandroidx.core.content.pm.ShortcutManagerCompat.removeLongLivedShortcuts(Landroid\/content\/Context;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 30) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|removeDynamicShortcuts(r2, r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|((android.content.pm.ShortcutManager) r2.getSystemService(android.content.pm.ShortcutManager.class)).removeLongLivedShortcuts(r3)\lgetShortcutInfoSaverInstance(r2).removeShortcuts(r3)\ljava.util.Iterator r0 = getShortcutInfoListeners(r2).iterator()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|LOOP_START\lLOOP:0: B:7:0x0024\-\>B:9:0x002a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r0.hasNext() == false) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|LOOP_END\lLOOP:0: B:7:0x0024\-\>B:9:0x002a\l|androidx.core.content.pm.ShortcutInfoChangeListener r1 = r0.next()\lr1.onShortcutRemoved(r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.core.content.pm.ShortcutManagerCompat.removeLongLivedShortcuts((r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'shortcutIds' java.util.List\<java.lang.String\> A[D('shortcutIds' java.util.List\<java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x002a \-\> B:7:0x0024, CROSS_EDGE: B:10:0x0034 \-\> B:1:?\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/Context;Ljava\/util\/List\<Ljava\/lang\/String;\>;)V\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_7;
Node_11 -> Node_10;
Node_10 -> Node_1;
}

