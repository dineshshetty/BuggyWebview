digraph "CFG forandroidx.core.content.pm.ShortcutXmlParser.getShortcutIds(Landroid\/content\/Context;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:java.util.ArrayList\<java.lang.String\>) =  androidx.core.content.pm.ShortcutXmlParser.sShortcutIds java.util.ArrayList  (LINE:68)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: SGET  (r0 I:java.lang.Object) =  androidx.core.content.pm.ShortcutXmlParser.GET_INSTANCE_LOCK java.lang.Object  (LINE:69)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|TRY_ENTER\lTryCatch #0 \{all \-\> 0x001d, blocks: (B:6:0x0007, B:8:0x000b, B:9:0x001b), top: B:16:0x0007 \}\lCatch: all \-\> 0x001d\l|0x0007: SGET  (r1 I:java.util.ArrayList\<java.lang.String\>) =  androidx.core.content.pm.ShortcutXmlParser.sShortcutIds java.util.ArrayList A[Catch: all \-\> 0x001d, TRY_ENTER] (LINE:70)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x000b|TryCatch #0 \{all \-\> 0x001d, blocks: (B:6:0x0007, B:8:0x000b, B:9:0x001b), top: B:16:0x0007 \}\lCatch: all \-\> 0x001d\l|0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch: all \-\> 0x001d] (LINE:71)\l0x000d: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[Catch: all \-\> 0x001d, MD:():void (c)]\l0x0010: SPUT  (r1 I:java.util.ArrayList\<java.lang.String\>) androidx.core.content.pm.ShortcutXmlParser.sShortcutIds java.util.ArrayList A[Catch: all \-\> 0x001d]\l0x0012: SGET  (r1 I:java.util.ArrayList\<java.lang.String\>) =  androidx.core.content.pm.ShortcutXmlParser.sShortcutIds java.util.ArrayList A[Catch: all \-\> 0x001d] (LINE:72)\l0x0014: INVOKE  (r2 I:java.util.Set) = (r3 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: androidx.core.content.pm.ShortcutXmlParser.parseShortcutIds(android.content.Context):java.util.Set A[Catch: all \-\> 0x001d, MD:(android.content.Context):java.util.Set\<java.lang.String\> (m)]\l0x0018: INVOKE  (r1 I:java.util.ArrayList), (r2 I:java.util.Collection) type: VIRTUAL call: java.util.ArrayList.addAll(java.util.Collection):boolean A[Catch: all \-\> 0x001d, MD:(java.util.Collection\<? extends E\>):boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|TryCatch #0 \{all \-\> 0x001d, blocks: (B:6:0x0007, B:8:0x000b, B:9:0x001b), top: B:16:0x0007 \}\lCatch: all \-\> 0x001d\l|0x001b: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x001d] (LINE:74)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: GOTO  \-\> 0x0020 \l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|ExcHandler: all \-\> 0x001d\l|0x001d: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001d]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|TRY_LEAVE\lCatch: all \-\> 0x001d\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: SGET  (r0 I:java.util.ArrayList\<java.lang.String\>) =  androidx.core.content.pm.ShortcutXmlParser.sShortcutIds java.util.ArrayList  (LINE:76)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|RETURN\l|0x0022: RETURN  (r0 I:java.util.List\<java.lang.String\>) \l}"];
MethodNode[shape=record,label="{public static java.util.List\<java.lang.String\> androidx.core.content.pm.ShortcutXmlParser.getShortcutIds((r3 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x001f \-\> B:1:?, CROSS_EDGE: B:7:0x0009 \-\> B:9:0x001b, CROSS_EDGE: B:16:0x0007 \-\> B:11:0x001d, CROSS_EDGE: B:3:0x0002 \-\> B:14:0x0020\lDebug Info:\l  \-1 \-0x0022: r3 'context' Landroid\/content\/Context;\lTryCatch #0 \{all \-\> 0x001d, blocks: (B:6:0x0007, B:8:0x000b, B:9:0x001b), top: B:16:0x0007 \}\lSIGNATURE: (Landroid\/content\/Context;)Ljava\/util\/List\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_16;
Node_16 -> Node_6;
Node_16 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_14;
Node_17 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

