digraph "CFG forandroidx.core.content.pm.ShortcutXmlParser.parseShortcutIds(Landroid\/content\/Context;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.HashSet r0 = new java.util.HashSet\<\>()\landroid.content.Intent r1 = new android.content.Intent(\"android.intent.action.MAIN\")\lr1.addCategory(\"android.intent.category.LAUNCHER\")\lr1.setPackage(r9.getPackageName())\ljava.util.List r2 = r9.getPackageManager().queryIntentActivities(r1, 128)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|if (r2 == null) goto L31\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024}"];
Node_5 [shape=record,label="{5\:\ 0x0028|if (r2.size() != 0) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|TRY_ENTER\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: Exception \-\> 0x0068\l|java.util.Iterator r3 = r2.iterator()     \/\/ Catch: java.lang.Exception \-\> L68\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|LOOP_START\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lLOOP:0: B:8:0x002f\-\>B:38:0x002f\lCatch: Exception \-\> 0x0068\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|if (r3.hasNext() == false) goto L25\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|TryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: Exception \-\> 0x0068\l|android.content.pm.ResolveInfo r4 = r3.next()     \/\/ Catch: java.lang.Exception \-\> L68\landroid.content.pm.ActivityInfo r5 = r4.activityInfo     \/\/ Catch: java.lang.Exception \-\> L68\landroid.os.Bundle r6 = r5.metaData     \/\/ Catch: java.lang.Exception \-\> L68\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|if (r6 == null) goto L24\l}"];
Node_35 [shape=record,label="{35\:\ 0x0041|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|TryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: Exception \-\> 0x0068\l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|if (r6.containsKey(androidx.core.content.p002pm.ShortcutXmlParser.META_DATA_APP_SHORTCUTS) == false) goto L23\l}"];
Node_36 [shape=record,label="{36\:\ 0x0049|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|TRY_LEAVE\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: Exception \-\> 0x0068\l|android.content.res.XmlResourceParser r7 = getXmlResourceParser(r9, r5)     \/\/ Catch: java.lang.Exception \-\> L68\l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: all \-\> 0x005a\l|r0.addAll(parseShortcutIds(r7))     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|if (r7 == null) goto L22\l}"];
Node_37 [shape=record,label="{37\:\ 0x0056|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lCatch: Exception \-\> 0x0068\l|r7.close()     \/\/ Catch: java.lang.Exception \-\> L68\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|LOOP_END\lSYNTHETIC\lLOOP:0: B:8:0x002f\-\>B:38:0x002f\l}"];
Node_41 [shape=record,label="{41\:\ 0x002f|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0070|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0070|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x0068|ExcHandler: Exception \-\> 0x0068\l|java.lang.Exception r3 = move\-exception\l}"];
Node_29 [shape=record,label="{29\:\ 0x0069|android.util.Log.e(androidx.core.content.p002pm.ShortcutXmlParser.TAG, \"Failed to parse the Xml resource: \", r3)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0071|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private static java.util.Set\<java.lang.String\> androidx.core.content.pm.ShortcutXmlParser.parseShortcutIds((r9v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0056 \-\> B:8:0x002f, BACK_EDGE: B:16:0x0054 \-\> B:8:0x002f, BACK_EDGE: B:13:0x0047 \-\> B:8:0x002f, BACK_EDGE: B:11:0x003f \-\> B:8:0x002f, CROSS_EDGE: B:30:0x0070 \-\> B:1:?, CROSS_EDGE: B:29:0x0069 \-\> B:30:0x0070, CROSS_EDGE: B:32:0x002b \-\> B:28:0x0068, CROSS_EDGE: B:3:0x0022 \-\> B:31:0x0071\lINLINE_NOT_NEEDED\lTryCatch #2 \{Exception \-\> 0x0068, blocks: (B:7:0x002b, B:8:0x002f, B:10:0x0035, B:12:0x0041, B:14:0x0049, B:17:0x0056, B:15:0x004d), top: B:32:0x002b \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/Context;)Ljava\/util\/Set\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_5;
Node_5 -> Node_31[style=dashed];
Node_5 -> Node_32;
Node_32 -> Node_7;
Node_32 -> Node_28;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_33;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_34;
Node_10 -> Node_11;
Node_11 -> Node_35[style=dashed];
Node_11 -> Node_39;
Node_35 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_36[style=dashed];
Node_13 -> Node_40;
Node_36 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_37[style=dashed];
Node_16 -> Node_41;
Node_37 -> Node_17;
Node_17 -> Node_42;
Node_42 -> Node_38;
Node_38 -> Node_8;
Node_41 -> Node_38;
Node_40 -> Node_38;
Node_39 -> Node_38;
Node_34 -> Node_30;
Node_30 -> Node_1;
Node_33 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_1;
}

