digraph "CFG forandroidx.core.content.pm.PackageInfoCompat.getSignatures(Landroid\/content\/pm\/PackageManager;Ljava\/lang\/String;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:87)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r0 I:??[int, float, short, byte, char]) = (134217728(0x8000000, float:3.85186E\-34) ??[int, float, short, byte, char])  (LINE:88)\l0x0008: INVOKE  (r0 I:android.content.pm.PackageInfo) = \l  (r3 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager)])\l  (r4 I:java.lang.String A[D('packageName' java.lang.String)])\l  (r0 I:int)\l type: VIRTUAL call: android.content.pm.PackageManager.getPackageInfo(java.lang.String, int):android.content.pm.PackageInfo A[MD:(java.lang.String, int):android.content.pm.PackageInfo throws android.content.pm.PackageManager$NameNotFoundException (c)]\l0x000c: IGET  (r1 I:android.content.pm.SigningInfo) = (r0 I:android.content.pm.PackageInfo A[D('pkgInfo' android.content.pm.PackageInfo)]) android.content.pm.PackageInfo.signingInfo android.content.pm.SigningInfo  (LINE:90)\l0x000e: INVOKE  (r2 I:boolean) = (r1 I:android.content.pm.SigningInfo A[D('signingInfo' android.content.pm.SigningInfo)]) type: STATIC call: androidx.core.content.pm.PackageInfoCompat.Api28Impl.hasMultipleSigners(android.content.pm.SigningInfo):boolean A[MD:(android.content.pm.SigningInfo):boolean (m)] (LINE:91)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r2 I:android.content.pm.Signature[]) = (r1 I:android.content.pm.SigningInfo A[D('signingInfo' android.content.pm.SigningInfo)]) type: STATIC call: androidx.core.content.pm.PackageInfoCompat.Api28Impl.getApkContentsSigners(android.content.pm.SigningInfo):android.content.pm.Signature[] A[MD:(android.content.pm.SigningInfo):android.content.pm.Signature[] (m)] (LINE:92)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('array' android.content.pm.Signature[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002d  (LINE:105)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: INVOKE  (r0 I:java.util.List) =  type: STATIC call: java.util.Collections.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (c)] (LINE:106)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|RETURN\l|0x002c: RETURN  (r0 I:java.util.List\<android.content.pm.Signature\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: INVOKE  (r0 I:java.util.List) = (r2 I:java.lang.Object[] A[D('array' android.content.pm.Signature[])]) type: STATIC call: java.util.Arrays.asList(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> VARARG (c)] (LINE:108)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\l|0x0031: RETURN  (r0 I:java.util.List\<android.content.pm.Signature\>) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: INVOKE  (r2 I:android.content.pm.Signature[]) = (r1 I:android.content.pm.SigningInfo A[D('signingInfo' android.content.pm.SigningInfo)]) type: STATIC call: androidx.core.content.pm.PackageInfoCompat.Api28Impl.getSigningCertificateHistory(android.content.pm.SigningInfo):android.content.pm.Signature[] A[MD:(android.content.pm.SigningInfo):android.content.pm.Signature[] (m)] (LINE:94)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: CONST  (r0 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char])  (LINE:99)\l0x0020: INVOKE  (r0 I:android.content.pm.PackageInfo) = \l  (r3 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager)])\l  (r4 I:java.lang.String A[D('packageName' java.lang.String)])\l  (r0 I:int)\l type: VIRTUAL call: android.content.pm.PackageManager.getPackageInfo(java.lang.String, int):android.content.pm.PackageInfo A[MD:(java.lang.String, int):android.content.pm.PackageInfo throws android.content.pm.PackageManager$NameNotFoundException (c)]\l0x0024: IGET  (r2 I:android.content.pm.Signature[]) = (r0 I:android.content.pm.PackageInfo A[D('pkgInfo' android.content.pm.PackageInfo)]) android.content.pm.PackageInfo.signatures android.content.pm.Signature[]  (LINE:101)\l}"];
MethodNode[shape=record,label="{public static java.util.List\<android.content.pm.Signature\> androidx.core.content.pm.PackageInfoCompat.getSignatures((r3 I:android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('packageName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0031 \-\> B:1:?, CROSS_EDGE: B:7:0x0019 \-\> B:10:0x0026, CROSS_EDGE: B:9:0x001e \-\> B:10:0x0026\lDebug Info:\l  0x0018\-0x0019: r2 'array' [Landroid\/content\/pm\/Signature;\l  0x000c\-0x001d: r0 'pkgInfo' Landroid\/content\/pm\/PackageInfo;\l  0x000e\-0x001d: r1 'signingInfo' Landroid\/content\/pm\/SigningInfo;\l  0x001d\-0x001e: r2 'array' [Landroid\/content\/pm\/Signature;\l  0x0024\-0x0026: r0 'pkgInfo' Landroid\/content\/pm\/PackageInfo;\l  0x0026\-0x0031: r2 'array' [Landroid\/content\/pm\/Signature;\l  \-1 \-0x0031: r3 'packageManager' Landroid\/content\/pm\/PackageManager;\l  \-1 \-0x0031: r4 'packageName' Ljava\/lang\/String;\lEXCEPTIONS:[Landroid\/content\/pm\/PackageManager$NameNotFoundException;]\lSIGNATURE: (Landroid\/content\/pm\/PackageManager;Ljava\/lang\/String;)Ljava\/util\/List\<Landroid\/content\/pm\/Signature;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_7 -> Node_10;
Node_9 -> Node_10;
}

