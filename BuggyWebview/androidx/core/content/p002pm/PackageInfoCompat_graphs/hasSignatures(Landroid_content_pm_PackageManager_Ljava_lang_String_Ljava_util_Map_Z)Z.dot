digraph "CFG forandroidx.core.content.pm.PackageInfoCompat.hasSignatures(Landroid\/content\/pm\/PackageManager;Ljava\/lang\/String;Ljava\/util\/Map;Z)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r12.isEmpty() == false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|java.util.Set r0 = r12.keySet()\ljava.util.Iterator r2 = r0.iterator()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_START\lLOOP:0: B:6:0x0010\-\>B:13:0x002c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r2.hasNext() == false) goto L23\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|byte[] r3 = r2.next()\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if (r3 == null) goto L20\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|java.lang.Integer r5 = r12.get(r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|if (r5 == null) goto L17\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028}"];
Node_13 [shape=record,label="{13\:\ 0x002c|LOOP_END\lLOOP:0: B:6:0x0010\-\>B:13:0x002c\l|switch(r5.intValue()) \{\l    case 0: goto L6;\l    case 1: goto L6;\l    default: goto L14;\l\}\l}"];
Node_64 [shape=record,label="{64\:\ 0x002f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Unsupported certificate type \")\lr2.append(r5)\lr2.append(\" when verifying \")\lr2.append(r11)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_62 [shape=record,label="{62\:\ 0x004e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Type must be specified for cert when verifying \")\lr2.append(r11)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_65 [shape=record,label="{65\:\ 0x0065|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Cert byte array cannot be null when verifying \")\lr2.append(r11)\l}"];
Node_20 [shape=record,label="{20\:\ 0x007b|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
Node_63 [shape=record,label="{63\:\ 0x007c|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|java.util.List r2 = getSignatures(r10, r11)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0081|if (r13 != false) goto L37\l}"];
Node_23 [shape=record,label="{23\:\ 0x0083}"];
Node_24 [shape=record,label="{24\:\ 0x0087|if (android.os.Build.VERSION.SDK_INT \< 28) goto L37\l}"];
Node_25 [shape=record,label="{25\:\ 0x0089|java.util.Iterator r4 = r0.iterator()\l}"];
Node_26 [shape=record,label="{26\:\ 0x008d|LOOP_START\lLOOP:1: B:26:0x008d\-\>B:29:0x00a7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|if (r4.hasNext() == false) goto L35\l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|byte[] r5 = r4.next()\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a7|LOOP_END\lLOOP:1: B:26:0x008d\-\>B:29:0x00a7\l|if (androidx.core.content.p002pm.PackageInfoCompat.Api28Impl.hasSigningCertificate(r10, r11, r5, r12.get(r5).intValue()) != false) goto L29\l}"];
Node_67 [shape=record,label="{67\:\ 0x00a9|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a9|RETURN\l|return false\l}"];
Node_66 [shape=record,label="{66\:\ 0x00ab|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|RETURN\l|return true\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ac}"];
Node_34 [shape=record,label="{34\:\ 0x00b0|if (r2.size() == 0) goto L65\l}"];
Node_35 [shape=record,label="{35\:\ 0x00b2}"];
Node_36 [shape=record,label="{36\:\ 0x00ba|if (r12.size() \> r2.size()) goto L65\l}"];
Node_37 [shape=record,label="{37\:\ 0x00bc|if (r13 == false) goto L44\l}"];
Node_38 [shape=record,label="{38\:\ 0x00be}"];
Node_39 [shape=record,label="{39\:\ 0x00c6|if (r12.size() == r2.size()) goto L44\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c9|boolean r5 = r12.containsValue(1)\lr6 = null\l}"];
Node_42 [shape=record,label="{42\:\ 0x00d2|if (r5 == false) goto L51\l}"];
Node_43 [shape=record,label="{43\:\ 0x00d4|byte[][] r6 = new byte[r2.size()]\lr7 = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x00db|LOOP_START\lLOOP:2: B:44:0x00db\-\>B:46:0x00e1\lPHI: r7 \l  PHI: (r7v5 'index' int) = (r7v4 'index' int), (r7v6 'index' int) binds: [B:43:0x00d4, B:46:0x00e1] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_45 [shape=record,label="{45\:\ 0x00df|if (r7 \>= r2.size()) goto L50\l}"];
Node_46 [shape=record,label="{46\:\ 0x00e1|LOOP_END\lLOOP:2: B:44:0x00db\-\>B:46:0x00e1\l|r6[r7] = computeSHA256Digest(r2.get(r7).toByteArray())\lint r7 = r7 + 1\l}"];
Node_68 [shape=record,label="{68\:\ 0x00f4|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f4|PHI: r6 \l  PHI: (r6v2 'sha256Digests' byte[][]) = (r6v1 'sha256Digests' byte[][]), (r6v3 'sha256Digests' byte[][]) binds: [B:42:0x00d2, B:68:0x00f4] A[DONT_GENERATE, DONT_INLINE]\l|java.util.Iterator r7 = r0.iterator()\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fc|if (r7.hasNext() == false) goto L64\l}"];
Node_49 [shape=record,label="{49\:\ 0x00fe|byte[] r7 = r7.next()\ljava.lang.Integer r8 = r12.get(r7)\l}"];
Node_50 [shape=record,label="{50\:\ 0x010e|switch(r8.intValue()) \{\l    case 0: goto L61;\l    case 1: goto L57;\l    default: goto L55;\l\}\l}"];
Node_51 [shape=record,label="{51\:\ 0x0111|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Unsupported certificate type \")\lr3.append(r8)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0125|throw new java.lang.IllegalArgumentException(r3.toString())\l}"];
Node_53 [shape=record,label="{53\:\ 0x0126}"];
Node_54 [shape=record,label="{54\:\ 0x012a|if (byteArrayContains(r6, r7) != false) goto L60\l}"];
Node_55 [shape=record,label="{55\:\ 0x012c|RETURN\l|return false\l}"];
Node_59 [shape=record,label="{59\:\ 0x0139|RETURN\l|return true\l}"];
Node_56 [shape=record,label="{56\:\ 0x012d|android.content.pm.Signature r4 = new android.content.pm.Signature(r7)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0136|if (r2.contains(r4) != false) goto L60\l}"];
Node_58 [shape=record,label="{58\:\ 0x0138|RETURN\l|return false\l}"];
Node_60 [shape=record,label="{60\:\ 0x013a|RETURN\l|return false\l}"];
Node_61 [shape=record,label="{61\:\ 0x013b|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.content.pm.PackageInfoCompat.hasSignatures((r10v0 'packageManager' android.content.pm.PackageManager A[D('packageManager' android.content.pm.PackageManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'packageName' java.lang.String A[D('packageName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'certificatesAndType' java.util.Map\<byte[], java.lang.Integer\> A[D('certificatesAndType' java.util.Map\<byte[], java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'matchExact' boolean A[D('matchExact' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x004b \-\> B:1:?, BACK_EDGE: B:13:0x002c \-\> B:6:0x0010, CROSS_EDGE: B:18:0x0064 \-\> B:1:?, CROSS_EDGE: B:20:0x007b \-\> B:1:?, CROSS_EDGE: B:30:0x00a9 \-\> B:1:?, BACK_EDGE: B:29:0x00a7 \-\> B:26:0x008d, CROSS_EDGE: B:32:0x00ab \-\> B:1:?, BACK_EDGE: B:46:0x00e1 \-\> B:44:0x00db, CROSS_EDGE: B:52:0x0125 \-\> B:1:?, CROSS_EDGE: B:55:0x012c \-\> B:1:?, CROSS_EDGE: B:59:0x0139 \-\> B:1:?, CROSS_EDGE: B:58:0x0138 \-\> B:1:?, CROSS_EDGE: B:57:0x0136 \-\> B:59:0x0139, CROSS_EDGE: B:60:0x013a \-\> B:1:?, CROSS_EDGE: B:42:0x00d2 \-\> B:47:0x00f4, CROSS_EDGE: B:61:0x013b \-\> B:1:?, CROSS_EDGE: B:37:0x00bc \-\> B:41:0x00c9, CROSS_EDGE: B:36:0x00ba \-\> B:61:0x013b, CROSS_EDGE: B:34:0x00b0 \-\> B:61:0x013b, CROSS_EDGE: B:22:0x0081 \-\> B:33:0x00ac\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroid\/content\/pm\/PackageManager$NameNotFoundException;]\lSIGNATURE: (Landroid\/content\/pm\/PackageManager;Ljava\/lang\/String;Ljava\/util\/Map\<[BLjava\/lang\/Integer;\>;Z)Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_63;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_65;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_62;
Node_12 -> Node_13;
Node_13 -> Node_6;
Node_13 -> Node_64;
Node_64 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_62 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_65 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_63 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_66;
Node_28 -> Node_29;
Node_29 -> Node_26;
Node_29 -> Node_67[style=dashed];
Node_67 -> Node_30;
Node_30 -> Node_1;
Node_66 -> Node_32;
Node_32 -> Node_1;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_61;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_61;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_61[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_68;
Node_46 -> Node_44;
Node_68 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_60;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_53;
Node_50 -> Node_56;
Node_51 -> Node_52;
Node_52 -> Node_1;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_59;
Node_55 -> Node_1;
Node_59 -> Node_1;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_1;
Node_60 -> Node_1;
Node_61 -> Node_1;
}

