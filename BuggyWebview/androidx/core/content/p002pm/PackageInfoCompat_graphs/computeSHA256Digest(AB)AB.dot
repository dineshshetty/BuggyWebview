digraph "CFG forandroidx.core.content.pm.PackageInfoCompat.computeSHA256Digest([B)[B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchAlgorithmException \-\> 0x000b, blocks: (B:2:0x0000), top: B:7:0x0000 \}\lCatch: NoSuchAlgorithmException \-\> 0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return java.security.MessageDigest.getInstance(\"SHA256\").digest(r3)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|ExcHandler: NoSuchAlgorithmException \-\> 0x000b\l|java.security.NoSuchAlgorithmException r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x0013|throw new java.lang.RuntimeException(\"Device doesn't support SHA256 cert checking\", r0)\l}"];
MethodNode[shape=record,label="{private static byte[] androidx.core.content.pm.PackageInfoCompat.computeSHA256Digest((r3v0 'bytes' byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0013 \-\> B:1:?, CROSS_EDGE: B:7:0x0000 \-\> B:4:0x000b\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoSuchAlgorithmException \-\> 0x000b, blocks: (B:2:0x0000), top: B:7:0x0000 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_7;
Node_7 -> Node_2;
Node_7 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_1;
Node_8 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

