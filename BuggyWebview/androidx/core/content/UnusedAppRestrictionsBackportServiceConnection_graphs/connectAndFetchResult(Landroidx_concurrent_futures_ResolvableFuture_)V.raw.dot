digraph "CFG forandroidx.core.content.UnusedAppRestrictionsBackportServiceConnection.connectAndFetchResult(Landroidx\/concurrent\/futures\/ResolvableFuture;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.mHasBoundService boolean  (LINE:100)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0024 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:104)\l0x0005: IPUT  (r0 I:boolean), (r3 I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.mHasBoundService boolean \l0x0007: IPUT  \l  (r4 I:androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\> A[D('resultFuture' androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\>)])\l  (r3 I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection)\l androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.mResultFuture androidx.concurrent.futures.ResolvableFuture  (LINE:105)\l0x0009: NEW_INSTANCE  (r1 I:android.content.Intent) =  android.content.Intent  (LINE:107)\l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"android.support.unusedapprestrictions.action.CustomUnusedAppRestrictionsBackportService\" \l0x000d: INVOKE  (r1 I:android.content.Intent), (r2 I:java.lang.String) type: DIRECT call: android.content.Intent.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0010: IGET  (r2 I:android.content.Context) = (r3 I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.mContext android.content.Context \l0x0012: INVOKE  (r2 I:android.content.pm.PackageManager) = (r2 I:android.content.Context) type: VIRTUAL call: android.content.Context.getPackageManager():android.content.pm.PackageManager A[MD:():android.content.pm.PackageManager (c)] (LINE:109)\l0x0016: INVOKE  (r2 I:java.lang.String) = (r2 I:android.content.pm.PackageManager) type: STATIC call: androidx.core.content.PackageManagerCompat.getPermissionRevocationVerifierApp(android.content.pm.PackageManager):java.lang.String A[MD:(android.content.pm.PackageManager):java.lang.String (m)] (LINE:108)\l0x001a: INVOKE  (r1 I:android.content.Intent) = (r1 I:android.content.Intent), (r2 I:java.lang.String) type: VIRTUAL call: android.content.Intent.setPackage(java.lang.String):android.content.Intent A[MD:(java.lang.String):android.content.Intent (c)]\l0x001e: IGET  (r2 I:android.content.Context) = (r3 I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection) androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.mContext android.content.Context  (LINE:110)\l0x0020: INVOKE  \l  (r2 I:android.content.Context)\l  (r1 I:android.content.Intent A[D('intent' android.content.Intent)])\l  (r3 I:android.content.ServiceConnection)\l  (r0 I:int)\l type: VIRTUAL call: android.content.Context.bindService(android.content.Intent, android.content.ServiceConnection, int):boolean A[MD:(android.content.Intent, android.content.ServiceConnection, int):boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:111)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:101)\l0x0026: CONST_STR  (r1 I:java.lang.String) =  \"Each UnusedAppRestrictionsBackportServiceConnection can only be bound once.\" \l0x0028: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.connectAndFetchResult((r3 'this' I:androidx.core.content.UnusedAppRestrictionsBackportServiceConnection A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\> A[D('resultFuture' androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002b \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0024: r1 'intent' Landroid\/content\/Intent;\l  0x0000\-0x002b: r4 'resultFuture' Landroidx\/concurrent\/futures\/ResolvableFuture;, signature: Landroidx\/concurrent\/futures\/ResolvableFuture\<Ljava\/lang\/Integer;\>;\lSIGNATURE: (Landroidx\/concurrent\/futures\/ResolvableFuture\<Ljava\/lang\/Integer;\>;)V\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

