digraph "CFG forandroidx.core.content.UnusedAppRestrictionsBackportServiceConnection.connectAndFetchResult(Landroidx\/concurrent\/futures\/ResolvableFuture;)V" {
subgraph cluster_Region_1023575958 {
label = "R(1:(2:(1:7)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_95711554 {
label = "R(2:(1:7)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1407636204 {
label = "IF [B:11:0x0002] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r3.mHasBoundService != false) goto L6\l}"];
subgraph cluster_Region_1927622126 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002b|throw new java.lang.IllegalStateException(\"Each UnusedAppRestrictionsBackportServiceConnection can only be bound once.\")\l}"];
}
}
subgraph cluster_Region_9228431 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|r3.mHasBoundService = true\lr3.mResultFuture = r4\landroid.content.Intent android.content.Intent r1 = new android.content.Intent(androidx.core.content.UnusedAppRestrictionsBackportService.ACTION_UNUSED_APP_RESTRICTIONS_BACKPORT_CONNECTION).setPackage(androidx.core.content.PackageManagerCompat.getPermissionRevocationVerifierApp(r3.mContext.getPackageManager()))\lr3.mContext.bindService(r1, r3, 1)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0023}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0024}"];
MethodNode[shape=record,label="{public void androidx.core.content.UnusedAppRestrictionsBackportServiceConnection.connectAndFetchResult((r3v0 'this' androidx.core.content.UnusedAppRestrictionsBackportServiceConnection A[IMMUTABLE_TYPE, THIS]), (r4v0 'resultFuture' androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\> A[D('resultFuture' androidx.concurrent.futures.ResolvableFuture\<java.lang.Integer\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002b \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroidx\/concurrent\/futures\/ResolvableFuture\<Ljava\/lang\/Integer;\>;)V\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_15 -> Node_9;
Node_12 -> Node_13;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_13 -> Node_9;
Node_14 -> Node_15;
}

