digraph "CFG forandroidx.core.content.ContextCompat.getDrawable(Landroid\/content\/Context;I)Landroid\/graphics\/drawable\/Drawable;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:482)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:30:0x000b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r4 I:android.content.Context A[D('context' android.content.Context)]), (r5 I:int A[D('id' int)]) type: STATIC call: androidx.core.content.ContextCompat.Api21Impl.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)] (LINE:483)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:484)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:34:0x001a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|0x0011: INVOKE  (r0 I:android.content.res.Resources) = (r4 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:485)\l0x0015: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.content.res.Resources), (r5 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.getDrawable(int):android.graphics.drawable.Drawable A[MD:(int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|0x001a: SGET  (r0 I:java.lang.Object) =  androidx.core.content.ContextCompat.sLock java.lang.Object  (LINE:492)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001c|0x001c: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x001d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:36:0x001d, B:38:0x0021, B:39:0x0028, B:40:0x0036), top: B:46:0x001d \}\lCatch: all \-\> 0x0040\l|0x001d: SGET  (r1 I:android.util.TypedValue) =  androidx.core.content.ContextCompat.sTempValue android.util.TypedValue A[Catch: all \-\> 0x0040, TRY_ENTER] (LINE:493)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0028 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|TryCatch #0 \{all \-\> 0x0040, blocks: (B:36:0x001d, B:38:0x0021, B:39:0x0028, B:40:0x0036), top: B:46:0x001d \}\lCatch: all \-\> 0x0040\l|0x0021: NEW_INSTANCE  (r1 I:android.util.TypedValue) =  android.util.TypedValue A[Catch: all \-\> 0x0040] (LINE:494)\l0x0023: INVOKE  (r1 I:android.util.TypedValue) type: DIRECT call: android.util.TypedValue.\<init\>():void A[Catch: all \-\> 0x0040, MD:():void (c)]\l0x0026: SPUT  (r1 I:android.util.TypedValue) androidx.core.content.ContextCompat.sTempValue android.util.TypedValue A[Catch: all \-\> 0x0040]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|TryCatch #0 \{all \-\> 0x0040, blocks: (B:36:0x001d, B:38:0x0021, B:39:0x0028, B:40:0x0036), top: B:46:0x001d \}\lCatch: all \-\> 0x0040\l|0x0028: INVOKE  (r1 I:android.content.res.Resources) = (r4 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[Catch: all \-\> 0x0040, MD:():android.content.res.Resources (c)] (LINE:496)\l0x002c: SGET  (r2 I:android.util.TypedValue) =  androidx.core.content.ContextCompat.sTempValue android.util.TypedValue A[Catch: all \-\> 0x0040]\l0x002e: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: INVOKE  (r1 I:android.content.res.Resources), (r5 I:int A[D('id' int)]), (r2 I:android.util.TypedValue), (r3 I:boolean) type: VIRTUAL call: android.content.res.Resources.getValue(int, android.util.TypedValue, boolean):void A[Catch: all \-\> 0x0040, MD:(int, android.util.TypedValue, boolean):void throws android.content.res.Resources$NotFoundException (c)]\l0x0032: SGET  (r1 I:android.util.TypedValue) =  androidx.core.content.ContextCompat.sTempValue android.util.TypedValue A[Catch: all \-\> 0x0040] (LINE:497)\l0x0034: IGET  (r1 I:int) = (r1 I:android.util.TypedValue) android.util.TypedValue.resourceId int A[Catch: all \-\> 0x0040]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0036|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:36:0x001d, B:38:0x0021, B:39:0x0028, B:40:0x0036), top: B:46:0x001d \}\lCatch: all \-\> 0x0040\l|0x0036: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0040, TRY_LEAVE] (LINE:498)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0037|0x0037: INVOKE  (r0 I:android.content.res.Resources) = (r4 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:499)\l0x003b: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.content.res.Resources), (r1 I:int A[D('resolvedId' int)]) type: VIRTUAL call: android.content.res.Resources.getDrawable(int):android.graphics.drawable.Drawable A[MD:(int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x003f|RETURN\l|0x003f: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ 0x0040|ExcHandler: all \-\> 0x0040\l|0x0040: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0040] (LINE:498)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0041|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x0040\l}"];
Node_45 [shape=record,label="{45\:\ 0x0042|0x0042: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable androidx.core.content.ContextCompat.getDrawable((r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0019 \-\> B:25:?, CROSS_EDGE: B:42:0x003f \-\> B:25:?, CROSS_EDGE: B:45:0x0042 \-\> B:25:?, CROSS_EDGE: B:37:0x001f \-\> B:39:0x0028, CROSS_EDGE: B:46:0x001d \-\> B:43:0x0040\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0036\-0x0040: r1 'resolvedId' I\l  \-1 \-0x0042: r4 'context' Landroid\/content\/Context;\l  \-1 \-0x0042: r5 'id' I\lTryCatch #0 \{all \-\> 0x0040, blocks: (B:36:0x001d, B:38:0x0021, B:39:0x0028, B:40:0x0036), top: B:46:0x001d \}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_35 -> Node_46;
Node_46 -> Node_36;
Node_46 -> Node_43;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_47;
Node_41 -> Node_42;
Node_42 -> Node_25;
Node_47 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_25;
}

