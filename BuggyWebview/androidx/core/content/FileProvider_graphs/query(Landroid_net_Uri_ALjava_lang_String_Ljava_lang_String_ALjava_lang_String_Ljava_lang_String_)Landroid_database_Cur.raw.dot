digraph "CFG forandroidx.core.content.FileProvider.query(Landroid\/net\/Uri;[Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/lang\/String;)Landroid\/database\/Cursor;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('uri' android.net.Uri)])  (LINE:517)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY]) \l0x0002: IGET  (r2 I:androidx.core.content.FileProvider$PathStrategy) = (r1 I:androidx.core.content.FileProvider) androidx.core.content.FileProvider.mStrategy androidx.core.content.FileProvider$PathStrategy \l0x0004: INVOKE  (r2 I:java.io.File) = (r2 I:androidx.core.content.FileProvider$PathStrategy), (r15 I:android.net.Uri A[D('uri' android.net.Uri)]) type: INTERFACE call: androidx.core.content.FileProvider.PathStrategy.getFileForUri(android.net.Uri):java.io.File A[MD:(android.net.Uri):java.io.File (m)]\l0x0008: CONST_STR  (r3 I:java.lang.String) =  \"displayName\"  (LINE:518)\l0x000a: INVOKE  (r3 I:java.lang.String) = (r15 I:android.net.Uri A[D('uri' android.net.Uri)]), (r3 I:java.lang.String) type: VIRTUAL call: android.net.Uri.getQueryParameter(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('projection' java.lang.String[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013  (LINE:520)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: SGET  (r4 I:java.lang.String[]) =  androidx.core.content.FileProvider.COLUMNS java.lang.String[]  (LINE:521)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[] A[D('projection' java.lang.String[])])  (LINE:524)\l0x0016: NEW_ARRAY  (r5 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0018: ARRAY_LENGTH  (r6 I:int) = (r4 I:??[] A[D('projection' java.lang.String[])])  (LINE:525)\l0x0019: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x001b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:526)\l0x001c: ARRAY_LENGTH  (r8 I:int) = (r4 I:??[] A[D('projection' java.lang.String[])])  (LINE:527)\l0x001d: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|LOOP_START\lLOOP:0: B:7:0x001e\-\>B:18:0x0051\l|0x001e: IF  (r9 I:??[int, byte, short, char]) \>= (r8 I:??[int, byte, short, char])  \-\> B:21:0x0054 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: AGET  (r10 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('projection' java.lang.String[])]), (r9 I:??[int, short, byte, char]) \l0x0022: CONST_STR  (r11 I:java.lang.String) =  \"_display_name\"  (LINE:528)\l0x0024: INVOKE  (r12 I:boolean) = (r11 I:java.lang.String), (r10 I:java.lang.Object A[D('col' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003a \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: APUT  \l  (r5 I:??[OBJECT, ARRAY][] A[D('cols' java.lang.String[])])\l  (r7 I:??[int, short, byte, char] A[D('i' int)])\l  (r11 I:??[OBJECT, ARRAY])\l  (LINE:529)\l0x002c: ARITH  (r11 I:int) = (r7 I:int A[D('i' int)]) + (1 int)  (LINE:530)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('displayName' java.lang.String)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0035 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: INVOKE  (r12 I:java.lang.String) = (r2 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.getName():java.lang.String A[MD:():java.lang.String (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: APUT  \l  (r6 I:??[OBJECT, ARRAY][] A[D('values' java.lang.Object[])])\l  (r7 I:??[int, short, byte, char])\l  (r12 I:??[OBJECT, ARRAY])\l \l0x0038: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|LOOP_END\lLOOP:0: B:7:0x001e\-\>B:18:0x0051\l|0x0051: ARITH  (r9 I:int) = (r9 I:int) + (1 int)  (LINE:527)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('displayName' java.lang.String)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: CONST_STR  (r11 I:java.lang.String A[D('i' int)]) =  \"_size\"  (LINE:531)\l0x003c: INVOKE  (r12 I:boolean) = (r11 I:java.lang.String), (r10 I:java.lang.Object A[D('col' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: APUT  \l  (r5 I:??[OBJECT, ARRAY][] A[D('cols' java.lang.String[])])\l  (r7 I:??[int, short, byte, char] A[D('i' int)])\l  (r11 I:??[OBJECT, ARRAY])\l  (LINE:532)\l0x0044: ARITH  (r11 I:int) = (r7 I:int A[D('i' int)]) + (1 int)  (LINE:533)\l0x0046: INVOKE  (r12 I:long) = (r2 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.length():long A[MD:():long (c)]\l0x004a: INVOKE  (r12 I:java.lang.Long) = (r12 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[MD:(long):java.lang.Long (c)]\l0x004e: APUT  \l  (r6 I:??[OBJECT, ARRAY][] A[D('values' java.lang.Object[])])\l  (r7 I:??[int, short, byte, char])\l  (r12 I:??[OBJECT, ARRAY])\l \l0x0050: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|0x0054: INVOKE  (r5 I:java.lang.String[] A[D('cols' java.lang.String[])]) = (r5 I:java.lang.String[] A[D('cols' java.lang.String[])]), (r7 I:int A[D('i' int)]) type: STATIC call: androidx.core.content.FileProvider.copyOf(java.lang.String[], int):java.lang.String[] A[MD:(java.lang.String[], int):java.lang.String[] (m)] (LINE:537)\l0x0058: INVOKE  (r6 I:java.lang.Object[] A[D('values' java.lang.Object[])]) = (r6 I:java.lang.Object[] A[D('values' java.lang.Object[])]), (r7 I:int A[D('i' int)]) type: STATIC call: androidx.core.content.FileProvider.copyOf(java.lang.Object[], int):java.lang.Object[] A[MD:(java.lang.Object[], int):java.lang.Object[] (m)] (LINE:538)\l0x005c: NEW_INSTANCE  (r8 I:android.database.MatrixCursor) =  android.database.MatrixCursor  (LINE:540)\l0x005e: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x005f: INVOKE  (r8 I:android.database.MatrixCursor), (r5 I:java.lang.String[] A[D('cols' java.lang.String[])]), (r9 I:int) type: DIRECT call: android.database.MatrixCursor.\<init\>(java.lang.String[], int):void A[MD:(java.lang.String[], int):void (c)]\l0x0062: INVOKE  \l  (r8 I:android.database.MatrixCursor A[D('cursor' android.database.MatrixCursor)])\l  (r6 I:java.lang.Object[] A[D('values' java.lang.Object[])])\l type: VIRTUAL call: android.database.MatrixCursor.addRow(java.lang.Object[]):void A[MD:(java.lang.Object[]):void (c)] (LINE:541)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0065|RETURN\l|0x0065: RETURN  (r8 I:android.database.Cursor A[D('cursor' android.database.MatrixCursor)])  (LINE:542)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])]) = (r16 I:??[OBJECT, ARRAY] A[D('projection' java.lang.String[])])  (LINE:520)\l}"];
MethodNode[shape=record,label="{public android.database.Cursor androidx.core.content.FileProvider.query((r14 'this' I:androidx.core.content.FileProvider A[IMMUTABLE_TYPE, THIS]), (r15 I:android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.String[] A[D('projection' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.String A[D('selection' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.String[] A[D('selectionArgs' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[D('sortOrder' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:18:0x0051 \-\> B:7:0x001e, CROSS_EDGE: B:13:0x0035 \-\> B:14:0x0036, CROSS_EDGE: B:17:0x0042 \-\> B:18:0x0051, CROSS_EDGE: B:16:0x0040 \-\> B:18:0x0051, CROSS_EDGE: B:5:0x0013 \-\> B:6:0x0015\lDebug Info:\l  \-1 \-0x0012: r16 'projection' [Ljava\/lang\/String;\l  0x0012\-0x0013: r4 'projection' [Ljava\/lang\/String;\l  0x0013\-0x0015: r16 'projection' [Ljava\/lang\/String;\l  0x001c\-0x002e: r7 'i' I\l  0x002e\-0x003a: r11 'i' I\l  0x003a\-0x0046: r7 'i' I\l  0x0022\-0x0051: r10 'col' Ljava\/lang\/String;\l  0x0046\-0x0051: r11 'i' I\l  0x0008\-0x0065: r2 'file' Ljava\/io\/File;\l  0x000e\-0x0065: r3 'displayName' Ljava\/lang\/String;\l  0x0015\-0x0065: r4 'projection' [Ljava\/lang\/String;\l  0x0018\-0x0065: r5 'cols' [Ljava\/lang\/String;\l  0x001b\-0x0065: r6 'values' [Ljava\/lang\/Object;\l  0x0051\-0x0065: r7 'i' I\l  0x0062\-0x0065: r8 'cursor' Landroid\/database\/MatrixCursor;\l  \-1 \-0x0065: r15 'uri' Landroid\/net\/Uri;\l  \-1 \-0x0065: r17 'selection' Ljava\/lang\/String;\l  \-1 \-0x0065: r18 'selectionArgs' [Ljava\/lang\/String;\l  \-1 \-0x0065: r19 'sortOrder' Ljava\/lang\/String;\lMETHOD_OVERRIDE: [ClspMth\{android.content.ContentProvider.query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String):android.database.Cursor\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_23;
Node_23 -> Node_18;
Node_18 -> Node_7;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_22;
Node_22 -> Node_18;
Node_24 -> Node_18;
Node_21 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_5 -> Node_6;
}

