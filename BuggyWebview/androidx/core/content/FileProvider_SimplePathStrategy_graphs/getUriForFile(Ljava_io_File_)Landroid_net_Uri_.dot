digraph "CFG forandroidx.core.content.FileProvider.SimplePathStrategy.getUriForFile(Ljava\/io\/File;)Landroid\/net\/Uri;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lCatch: IOException \-\> 0x00be\l|java.lang.String r0 = r8.getCanonicalPath()     \/\/ Catch: java.io.IOException \-\> Lbe\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|r1 = null\ljava.util.Iterator r2 = r7.mRoots.entrySet().iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|LOOP_START\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\lPHI: r1 \l  PHI: (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) = (r1v1 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v3 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) binds: [B:3:0x0005, B:31:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r2.hasNext() == false) goto L19\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|java.util.Map$Entry r3 = r2.next()\ljava.lang.String r4 = r3.getValue().getPath()\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|if (r0.startsWith(r4) == false) goto L18\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|if (r1 == null) goto L17\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e}"];
Node_10 [shape=record,label="{10\:\ 0x0040|if (r4.length() \<= r1.getValue().getPath().length()) goto L16\l}"];
Node_29 [shape=record,label="{29\:\ 0x0042|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|r1 = r3\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\lPHI: r1 \l  PHI: (r1v3 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) = (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v4 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) binds: [B:32:0x0010, B:34:0x0010, B:33:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0010|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0042|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0044|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|if (r1 == null) goto L28\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|java.lang.String r2 = r1.getValue().getPath()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|if (r2.endsWith(\"\/\") == false) goto L27\l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|java.lang.String r0 = r0.substring(r2.length())\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|PHI: r0 \l  PHI: (r0v3 'path' java.lang.String) = (r0v2 'path' java.lang.String), (r0v5 'path' java.lang.String) binds: [B:17:0x0061, B:16:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(android.net.Uri.encode(r1.getKey()))\lr4.append('\/')\lr4.append(android.net.Uri.encode(r0, \"\/\"))\ljava.lang.String r0 = r4.toString()\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a6|RETURN\l|return new android.net.Uri.Builder().scheme(\"content\").authority(r7.mAuthority).encodedPath(r0).build()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|java.lang.String r0 = r0.substring(r2.length() + 1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Failed to find configured root that contains \")\lr3.append(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00bd|throw new java.lang.IllegalArgumentException(r3.toString())\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x00be|ExcHandler: IOException \-\> 0x00be\l}"];
Node_23 [shape=record,label="{23\:\ 0x00bf|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Failed to resolve canonical path for \")\lr2.append(r8)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d5|throw new java.lang.IllegalArgumentException(r2.toString())\l}"];
MethodNode[shape=record,label="{public android.net.Uri androidx.core.content.FileProvider.SimplePathStrategy.getUriForFile((r7v0 'this' androidx.core.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r8v0 'file' java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0042 \-\> B:4:0x0010, BACK_EDGE: B:10:0x0040 \-\> B:4:0x0010, CROSS_EDGE: B:8:0x002c \-\> B:11:0x0042, BACK_EDGE: B:7:0x002a \-\> B:4:0x0010, CROSS_EDGE: B:17:0x0061 \-\> B:18:0x006b, CROSS_EDGE: B:21:0x00bd \-\> B:1:?, CROSS_EDGE: B:24:0x00d5 \-\> B:1:?, CROSS_EDGE: B:25:0x0000 \-\> B:22:0x00be\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.content.FileProvider.PathStrategy.getUriForFile(java.io.File):android.net.Uri]\l}"];
MethodNode -> Node_0;Node_0 -> Node_25;
Node_25 -> Node_2;
Node_25 -> Node_22;
Node_2 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_27;
Node_6 -> Node_7;
Node_7 -> Node_28[style=dashed];
Node_7 -> Node_32;
Node_28 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_30;
Node_9 -> Node_10;
Node_10 -> Node_29[style=dashed];
Node_10 -> Node_33;
Node_29 -> Node_11;
Node_11 -> Node_34;
Node_34 -> Node_31;
Node_31 -> Node_4;
Node_33 -> Node_31;
Node_30 -> Node_11;
Node_32 -> Node_31;
Node_27 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_26 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_1;
}

