digraph "CFG forandroidx.core.content.FileProvider.SimplePathStrategy.getUriForFile(Ljava\/io\/File;)Landroid\/net\/Uri;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lCatch: IOException \-\> 0x00be\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r8 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.getCanonicalPath():java.lang.String A[Catch: IOException \-\> 0x00be, MD:():java.lang.String throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:809)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:815)\l0x0006: IGET  (r2 I:java.util.HashMap\<java.lang.String, java.io.File\>) = (r7 I:androidx.core.content.FileProvider$SimplePathStrategy) androidx.core.content.FileProvider.SimplePathStrategy.mRoots java.util.HashMap  (LINE:816)\l0x0008: INVOKE  (r2 I:java.util.Set) = (r2 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)]\l0x000c: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|LOOP_START\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\l|0x0010: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x001a: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Map$Entry A[D('root' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:817)\l0x0020: CHECK_CAST (r4 I:java.io.File) = (java.io.File) (r4 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: INVOKE  (r5 I:boolean) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r4 I:java.lang.String A[D('rootPath' java.lang.String)]) type: VIRTUAL call: java.lang.String.startsWith(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)] (LINE:818)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0010 \l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0042 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: INVOKE  (r5 I:int) = (r4 I:java.lang.String A[D('rootPath' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:819)\l0x0032: INVOKE  (r6 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x0036: CHECK_CAST (r6 I:java.io.File) = (java.io.File) (r6 I:??[OBJECT, ARRAY]) \l0x0038: INVOKE  (r6 I:java.lang.String) = (r6 I:java.io.File) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)]\l0x003c: INVOKE  (r6 I:int) = (r6 I:java.lang.String) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:33:0x0010 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0042|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) = (r3 I:??[OBJECT, ARRAY] A[D('root' java.util.Map$Entry\<java.lang.String, java.io.File\>)])  (LINE:820)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\l}"];
Node_33 [shape=record,label="{33\:\ 0x0010|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0042|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0044|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00a7  (LINE:824)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:830)\l0x004a: CHECK_CAST (r2 I:java.io.File) = (java.io.File) (r2 I:??[OBJECT, ARRAY]) \l0x004c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.io.File) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)]\l0x0050: CONST_STR  (r3 I:java.lang.String) =  \"\/\"  (LINE:831)\l0x0052: INVOKE  (r4 I:boolean) = (r2 I:java.lang.String A[D('rootPath' java.lang.String)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.String.endsWith(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0061 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|0x0058: INVOKE  (r4 I:int) = (r2 I:java.lang.String A[D('rootPath' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:832)\l0x005c: INVOKE  (r0 I:java.lang.String A[D('path' java.lang.String)]) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r4 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|0x006b: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:838)\l0x006d: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0070: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.util.Map$Entry A[D('mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0074: CHECK_CAST (r5 I:java.lang.String) = (java.lang.String) (r5 I:??[OBJECT, ARRAY]) \l0x0076: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.String) type: STATIC call: android.net.Uri.encode(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l0x007a: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007d: CONST  (r5 I:??[int, float, short, byte, char]) = (47 ??[int, float, short, byte, char]) \l0x007f: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0082: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r3 I:java.lang.String) type: STATIC call: android.net.Uri.encode(java.lang.String, java.lang.String):java.lang.String A[MD:(java.lang.String, java.lang.String):java.lang.String (c)]\l0x0086: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0089: INVOKE  (r0 I:java.lang.String A[D('path' java.lang.String)]) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x008d: NEW_INSTANCE  (r3 I:android.net.Uri$Builder) =  android.net.Uri$Builder  (LINE:839)\l0x008f: INVOKE  (r3 I:android.net.Uri$Builder) type: DIRECT call: android.net.Uri.Builder.\<init\>():void A[MD:():void (c)]\l0x0092: CONST_STR  (r4 I:java.lang.String) =  \"content\" \l0x0094: INVOKE  (r3 I:android.net.Uri$Builder) = (r3 I:android.net.Uri$Builder), (r4 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.scheme(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)]\l0x0098: IGET  (r4 I:java.lang.String) = (r7 I:androidx.core.content.FileProvider$SimplePathStrategy) androidx.core.content.FileProvider.SimplePathStrategy.mAuthority java.lang.String \l0x009a: INVOKE  (r3 I:android.net.Uri$Builder) = (r3 I:android.net.Uri$Builder), (r4 I:java.lang.String) type: VIRTUAL call: android.net.Uri.Builder.authority(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)] (LINE:840)\l0x009e: INVOKE  (r3 I:android.net.Uri$Builder) = (r3 I:android.net.Uri$Builder), (r0 I:java.lang.String A[D('path' java.lang.String)]) type: VIRTUAL call: android.net.Uri.Builder.encodedPath(java.lang.String):android.net.Uri$Builder A[MD:(java.lang.String):android.net.Uri$Builder (c)]\l0x00a2: INVOKE  (r3 I:android.net.Uri) = (r3 I:android.net.Uri$Builder) type: VIRTUAL call: android.net.Uri.Builder.build():android.net.Uri A[MD:():android.net.Uri (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a6|RETURN\l|0x00a6: RETURN  (r3 I:android.net.Uri)  (LINE:839)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|0x0061: INVOKE  (r4 I:int) = (r2 I:java.lang.String A[D('rootPath' java.lang.String)]) type: VIRTUAL call: java.lang.String.length():int A[MD:():int (c)] (LINE:834)\l0x0065: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0067: INVOKE  (r0 I:java.lang.String A[D('path' java.lang.String)]) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r4 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|0x00a7: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException A[D('rootPath' java.lang.String)]) =  java.lang.IllegalArgumentException  (LINE:825)\l0x00a9: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ab: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x00ae: CONST_STR  (r4 I:java.lang.String) =  \"Failed to find configured root that contains \" \l0x00b0: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b3: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String A[D('path' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b6: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00ba: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00bd|0x00bd: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x00be|ExcHandler: IOException \-\> 0x00be\l|0x00be: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x00be] (LINE:810)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00bf|0x00bf: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:811)\l0x00c1: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00c3: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x00c6: CONST_STR  (r3 I:java.lang.String) =  \"Failed to resolve canonical path for \" \l0x00c8: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00cb: INVOKE  (r2 I:java.lang.StringBuilder), (r8 I:java.lang.Object A[D('file' java.io.File)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x00ce: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x00d2: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d5|0x00d5: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.net.Uri androidx.core.content.FileProvider.SimplePathStrategy.getUriForFile((r7 'this' I:androidx.core.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r8 I:java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0042 \-\> B:4:0x0010, BACK_EDGE: B:10:0x0040 \-\> B:4:0x0010, CROSS_EDGE: B:8:0x002c \-\> B:11:0x0042, BACK_EDGE: B:7:0x002a \-\> B:4:0x0010, CROSS_EDGE: B:17:0x0061 \-\> B:18:0x006b, CROSS_EDGE: B:21:0x00bd \-\> B:1:?, CROSS_EDGE: B:24:0x00d5 \-\> B:1:?, CROSS_EDGE: B:25:0x0000 \-\> B:22:0x00be\lDebug Info:\l  0x001c\-0x0043: r3 'root' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/String;Ljava\/io\/File;\>;\l  0x0026\-0x0043: r4 'rootPath' Ljava\/lang\/String;\l  0x0050\-0x00a7: r2 'rootPath' Ljava\/lang\/String;\l  0x0004\-0x00be: r0 'path' Ljava\/lang\/String;\l  0x0006\-0x00be: r1 'mostSpecific' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/String;Ljava\/io\/File;\>;\l  0x00bf\-0x00d5: r0 'e' Ljava\/io\/IOException;\l  \-1 \-0x00d5: r8 'file' Ljava\/io\/File;\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lMETHOD_OVERRIDE: [androidx.core.content.FileProvider.PathStrategy.getUriForFile(java.io.File):android.net.Uri]\l}"];
MethodNode -> Node_0;Node_0 -> Node_25;
Node_25 -> Node_2;
Node_25 -> Node_22;
Node_2 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_27;
Node_6 -> Node_7;
Node_7 -> Node_28[style=dashed];
Node_7 -> Node_32;
Node_28 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_30;
Node_9 -> Node_10;
Node_10 -> Node_29[style=dashed];
Node_10 -> Node_33;
Node_29 -> Node_11;
Node_11 -> Node_34;
Node_34 -> Node_31;
Node_31 -> Node_4;
Node_33 -> Node_31;
Node_30 -> Node_11;
Node_32 -> Node_31;
Node_27 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_26 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_1;
}

