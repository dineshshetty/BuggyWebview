digraph "CFG forandroidx.core.content.FileProvider.SimplePathStrategy.getUriForFile(Ljava\/io\/File;)Landroid\/net\/Uri;" {
subgraph cluster_Region_2043770449 {
label = "R(1:(4:2|3|(2:6|(1:13))|(2:(2:28|29)|(4:21|(1:23)(1:27)|24|25)))) | DECL_VAR: java.lang.String path\l";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_212718726 {
label = "Try: R(4:2|3|(2:6|(1:13))|(2:(2:28|29)|(4:21|(1:23)(1:27)|24|25))) catches: R(2:32|33)";
node [shape=record,color=blue];
subgraph cluster_Region_1615777342 {
label = "R(4:2|3|(2:6|(1:13))|(2:(2:28|29)|(4:21|(1:23)(1:27)|24|25)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lCatch: IOException \-\> 0x00be\l|java.lang.String java.lang.String r0 = r8.getCanonicalPath()     \/\/ Catch: java.io.IOException \-\> Lbe\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|java.util.Map.Entry\<java.lang.String, java.io.File\> r1 = null\ljava.util.Iterator r2 = r7.mRoots.entrySet().iterator()\l\l}"];
subgraph cluster_LoopRegion_101635377 {
label = "LOOP:0: (2:6|(1:13))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|java.util.Map$Entry \lif (r2.hasNext() != false) goto L6\l}"];
subgraph cluster_Region_405000030 {
label = "R(2:6|(1:13))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|java.util.Map$Entry r3 = r2.next()\ljava.lang.String java.lang.String r4 = r3.getValue().getPath()\l}"];
subgraph cluster_IfRegion_1193971164 {
label = "IF [B:7:0x002a, B:8:0x002c, B:10:0x0040] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|if (r0.startsWith(r4) != false) goto L8\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|ADDED_TO_REGION\l|if (r1 == null) goto L17\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|ADDED_TO_REGION\l|if (r4.length() \> r1.getValue().getPath().length()) goto L12\l}"];
subgraph cluster_Region_1320778182 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0042|r1 = r3\l}"];
}
}
}
}
subgraph cluster_Region_444423971 {
label = "R(2:(2:28|29)|(4:21|(1:23)(1:27)|24|25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1139105534 {
label = "IF [B:13:0x0044] THEN: R(2:28|29) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0044|if (r1 == null) goto L28\l}"];
subgraph cluster_Region_1714253696 {
label = "R(2:28|29)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x00a7}"];
Node_21 [shape=record,label="{21\:\ 0x00bd|throw new java.lang.IllegalArgumentException(\"Failed to find configured root that contains \" + r0)\l}"];
}
}
subgraph cluster_Region_852414323 {
label = "R(4:21|(1:23)(1:27)|24|25)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0046|java.lang.String java.lang.String r2 = r1.getValue().getPath()\l}"];
subgraph cluster_IfRegion_491909755 {
label = "IF [B:15:0x0056] THEN: R(1:23) ELSE: R(1:27)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0056|if (r2.endsWith(\"\/\") != false) goto L23\l}"];
subgraph cluster_Region_1271350178 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0058|java.lang.String r0 = r0.substring(r2.length())\l}"];
}
subgraph cluster_Region_1567513562 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0061|java.lang.String r0 = r0.substring(r2.length() + 1)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x006b|PHI: r0 \l  PHI: (r0v3 'path' java.lang.String) = (r0v2 'path' java.lang.String), (r0v5 'path' java.lang.String) binds: [B:17:0x0061, B:16:0x0058] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a6|RETURN\l|return new android.net.Uri.Builder().scheme(\"content\").authority(r7.mAuthority).encodedPath(android.net.Uri.encode(r1.getKey()) + '\/' + android.net.Uri.encode(r0, \"\/\")).build()\l}"];
}
}
}
subgraph cluster_Region_1760350659 {
label = "R(2:32|33) | ExcHandler: IOException \-\> 0x00be\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00bf}"];
Node_24 [shape=record,label="{24\:\ 0x00d5|throw new java.lang.IllegalArgumentException(\"Failed to resolve canonical path for \" + r8)\l}"];
}
}
}
subgraph cluster_Region_1760350659 {
label = "R(2:32|33) | ExcHandler: IOException \-\> 0x00be\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00bf}"];
Node_24 [shape=record,label="{24\:\ 0x00d5|throw new java.lang.IllegalArgumentException(\"Failed to resolve canonical path for \" + r8)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010|LOOP_START\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\lPHI: r1 \l  PHI: (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) = (r1v1 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v3 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) binds: [B:3:0x0005, B:31:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x002c|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002e}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0042|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0010|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0010|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0010\-\>B:31:0x0010\lPHI: r1 \l  PHI: (r1v3 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) = (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v4 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>), (r1v2 'mostSpecific' java.util.Map$Entry\<java.lang.String, java.io.File\>) binds: [B:32:0x0010, B:34:0x0010, B:33:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0010|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0042|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0010|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0044|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x00be|ExcHandler: IOException \-\> 0x00be\l}"];
MethodNode[shape=record,label="{public android.net.Uri androidx.core.content.FileProvider.SimplePathStrategy.getUriForFile((r7v0 'this' androidx.core.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r8v0 'file' java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0042 \-\> B:4:0x0010, BACK_EDGE: B:10:0x0040 \-\> B:4:0x0010, CROSS_EDGE: B:8:0x002c \-\> B:11:0x0042, BACK_EDGE: B:7:0x002a \-\> B:4:0x0010, CROSS_EDGE: B:17:0x0061 \-\> B:18:0x006b, CROSS_EDGE: B:21:0x00bd \-\> B:1:?, CROSS_EDGE: B:24:0x00d5 \-\> B:1:?, CROSS_EDGE: B:25:0x0000 \-\> B:22:0x00be\lINLINE_NOT_NEEDED\lTryCatch #0 \{IOException \-\> 0x00be, blocks: (B:2:0x0000), top: B:25:0x0000 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.content.FileProvider.PathStrategy.getUriForFile(java.io.File):android.net.Uri]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_27[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_28;
Node_7 -> Node_32[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_30;
Node_10 -> Node_29;
Node_10 -> Node_33[style=dashed];
Node_11 -> Node_34;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_1;
Node_0 -> Node_25;
Node_25 -> Node_2;
Node_25 -> Node_22;
Node_4 -> Node_5;
Node_28 -> Node_8;
Node_9 -> Node_10;
Node_29 -> Node_11;
Node_34 -> Node_31;
Node_31 -> Node_4;
Node_33 -> Node_31;
Node_30 -> Node_11;
Node_32 -> Node_31;
Node_27 -> Node_13;
Node_26 -> Node_22;
Node_22 -> Node_23;
}

