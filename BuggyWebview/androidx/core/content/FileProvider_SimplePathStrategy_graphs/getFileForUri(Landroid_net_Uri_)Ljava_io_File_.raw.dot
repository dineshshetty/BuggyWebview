digraph "CFG forandroidx.core.content.FileProvider.SimplePathStrategy.getFileForUri(Landroid\/net\/Uri;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r10 I:android.net.Uri A[D('uri' android.net.Uri)]) type: VIRTUAL call: android.net.Uri.getEncodedPath():java.lang.String A[MD:():java.lang.String (c)] (LINE:845)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (47 ??[int, float, short, byte, char])  (LINE:847)\l0x0006: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  (r1 I:int) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r1 I:int), (r2 I:int) type: VIRTUAL call: java.lang.String.indexOf(int, int):int A[MD:(int, int):int (c)]\l0x000b: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r2 I:int), (r1 I:int A[D('splitIndex' int)]) type: VIRTUAL call: java.lang.String.substring(int, int):java.lang.String A[MD:(int, int):java.lang.String (c)] (LINE:848)\l0x000f: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.String) type: STATIC call: android.net.Uri.decode(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l0x0013: ARITH  (r3 I:int) = (r1 I:int A[D('splitIndex' int)]) + (1 int)  (LINE:849)\l0x0015: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.String A[D('path' java.lang.String)]), (r3 I:int) type: VIRTUAL call: java.lang.String.substring(int):java.lang.String A[MD:(int):java.lang.String (c)]\l0x0019: INVOKE  (r0 I:java.lang.String A[D('path' java.lang.String)]) = (r3 I:java.lang.String) type: STATIC call: android.net.Uri.decode(java.lang.String):java.lang.String A[MD:(java.lang.String):java.lang.String (c)]\l0x001d: IGET  (r3 I:java.util.HashMap\<java.lang.String, java.io.File\>) = (r9 I:androidx.core.content.FileProvider$SimplePathStrategy) androidx.core.content.FileProvider.SimplePathStrategy.mRoots java.util.HashMap  (LINE:851)\l0x001f: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.HashMap), (r2 I:java.lang.Object A[D('tag' java.lang.String)]) type: VIRTUAL call: java.util.HashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0023: CHECK_CAST (r3 I:java.io.File) = (java.io.File) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('root' java.io.File)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0061  (LINE:852)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: NEW_INSTANCE  (r4 I:java.io.File) =  java.io.File  (LINE:856)\l0x0029: INVOKE  \l  (r4 I:java.io.File)\l  (r3 I:java.io.File A[D('root' java.io.File)])\l  (r0 I:java.lang.String A[D('path' java.lang.String)])\l type: DIRECT call: java.io.File.\<init\>(java.io.File, java.lang.String):void A[MD:(java.io.File, java.lang.String):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0049, blocks: (B:5:0x002c), top: B:16:0x002c \}\lCatch: IOException \-\> 0x0049\l|0x002c: INVOKE  (r5 I:java.io.File) = (r4 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.getCanonicalFile():java.io.File A[Catch: IOException \-\> 0x0049, MD:():java.io.File throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:858)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('file' java.io.File)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  (r5 I:java.lang.String) = (r4 I:java.io.File A[D('file' java.io.File)]) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)] (LINE:863)\l0x0036: INVOKE  (r6 I:java.lang.String) = (r3 I:java.io.File A[D('root' java.io.File)]) type: VIRTUAL call: java.io.File.getPath():java.lang.String A[MD:():java.lang.String (c)]\l0x003a: INVOKE  (r5 I:boolean) = (r5 I:java.lang.String), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.String.startsWith(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|RETURN\l|0x0040: RETURN  (r4 I:java.io.File A[D('file' java.io.File)])  (LINE:867)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: NEW_INSTANCE  (r5 I:java.lang.SecurityException) =  java.lang.SecurityException  (LINE:864)\l0x0043: CONST_STR  (r6 I:java.lang.String) =  \"Resolved path jumped beyond configured root\" \l0x0045: INVOKE  (r5 I:java.lang.SecurityException), (r6 I:java.lang.String) type: DIRECT call: java.lang.SecurityException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|ExcHandler: IOException \-\> 0x0049\l|0x0049: MOVE_EXCEPTION  (r5 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0049] (LINE:859)\l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:860)\l0x004c: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r7 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0051: CONST_STR  (r8 I:java.lang.String) =  \"Failed to resolve canonical path for \" \l0x0053: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0056: INVOKE  (r7 I:java.lang.StringBuilder), (r4 I:java.lang.Object A[D('file' java.io.File)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0059: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005d: INVOKE  (r6 I:java.lang.IllegalArgumentException), (r7 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|0x0060: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|0x0061: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException A[D('file' java.io.File)]) =  java.lang.IllegalArgumentException  (LINE:853)\l0x0063: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0065: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0068: CONST_STR  (r6 I:java.lang.String) =  \"Unable to find configured root for \" \l0x006a: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006d: INVOKE  (r5 I:java.lang.StringBuilder), (r10 I:java.lang.Object A[D('uri' android.net.Uri)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0070: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0074: INVOKE  (r4 I:java.lang.IllegalArgumentException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0077|0x0077: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.File androidx.core.content.FileProvider.SimplePathStrategy.getFileForUri((r9 'this' I:androidx.core.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r10 I:android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0048 \-\> B:1:?, CROSS_EDGE: B:13:0x0060 \-\> B:1:?, CROSS_EDGE: B:16:0x002c \-\> B:11:0x0049, CROSS_EDGE: B:15:0x0077 \-\> B:1:?\lDebug Info:\l  0x002c\-0x0061: r4 'file' Ljava\/io\/File;\l  0x004a\-0x0061: r5 'e' Ljava\/io\/IOException;\l  0x0004\-0x0077: r0 'path' Ljava\/lang\/String;\l  0x000b\-0x0077: r1 'splitIndex' I\l  0x0013\-0x0077: r2 'tag' Ljava\/lang\/String;\l  0x0025\-0x0077: r3 'root' Ljava\/io\/File;\l  \-1 \-0x0077: r10 'uri' Landroid\/net\/Uri;\lTryCatch #0 \{IOException \-\> 0x0049, blocks: (B:5:0x002c), top: B:16:0x002c \}\lMETHOD_OVERRIDE: [androidx.core.content.FileProvider.PathStrategy.getFileForUri(android.net.Uri):java.io.File]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_16;
Node_16 -> Node_5;
Node_16 -> Node_11;
Node_5 -> Node_6;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_17 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

