digraph "CFG forandroidx.core.content.FileProvider.SimplePathStrategy.addRoot(Ljava\/lang\/String;Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:java.lang.CharSequence A[D('name' java.lang.String)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:790)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002a \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('e' java.io.IOException)]) =  java.lang.IllegalArgumentException  (LINE:791)\l0x002c: CONST_STR  (r1 I:java.lang.String) =  \"Name must not be empty\" \l0x002e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0012, blocks: (B:4:0x0006), top: B:12:0x0006 \}\lCatch: IOException \-\> 0x0012\l|0x0006: INVOKE  (r0 I:java.io.File) = (r6 I:java.io.File A[D('root' java.io.File)]) type: VIRTUAL call: java.io.File.getCanonicalFile():java.io.File A[Catch: IOException \-\> 0x0012, MD:():java.io.File throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:796)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('root' java.io.File)]) = (r0 I:??[OBJECT, ARRAY]) \l0x000c: IGET  (r0 I:java.util.HashMap\<java.lang.String, java.io.File\>) = (r4 I:androidx.core.content.FileProvider$SimplePathStrategy) androidx.core.content.FileProvider.SimplePathStrategy.mRoots java.util.HashMap  (LINE:802)\l0x000e: INVOKE  \l  (r0 I:java.util.HashMap)\l  (r5 I:java.lang.Object A[D('name' java.lang.String)])\l  (r6 I:java.lang.Object A[D('root' java.io.File)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:803)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|ExcHandler: IOException \-\> 0x0012\l|0x0012: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0012] (LINE:797)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:798)\l0x0015: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"Failed to resolve canonical path for \" \l0x001c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001f: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.Object A[D('root' java.io.File)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0022: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.io.IOException)])\l type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void androidx.core.content.FileProvider.SimplePathStrategy.addRoot((r4 'this' I:androidx.core.content.FileProvider$SimplePathStrategy A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.File A[D('root' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0011 \-\> B:1:?, CROSS_EDGE: B:9:0x0029 \-\> B:1:?, CROSS_EDGE: B:12:0x0006 \-\> B:7:0x0012\lDebug Info:\l  0x0013\-0x002a: r0 'e' Ljava\/io\/IOException;\l  \-1 \-0x0031: r5 'name' Ljava\/lang\/String;\l  \-1 \-0x0031: r6 'root' Ljava\/io\/File;\lTryCatch #0 \{IOException \-\> 0x0012, blocks: (B:4:0x0006), top: B:12:0x0006 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_10;
Node_3 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_4;
Node_12 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_13 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

