digraph "CFG forandroidx.core.database.sqlite.SQLiteDatabaseKt.transaction(Landroid\/database\/sqlite\/SQLiteDatabase;ZLkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r5, \"body\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r4 == false) goto L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|r3.beginTransaction()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|r1 = 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0029, blocks: (B:7:0x0016), top: B:13:0x0016 \}\lCatch: all \-\> 0x0029\l|java.lang.Object r2 = r5.invoke(r3)     \/\/ Catch: java.lang.Throwable \-\> L29\lr3.setTransactionSuccessful()     \/\/ Catch: java.lang.Throwable \-\> L29\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|DONT_GENERATE\l|kotlin.jvm.internal.InlineMarker.finallyStart(r1)\lr3.endTransaction()\lkotlin.jvm.internal.InlineMarker.finallyEnd(r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|RETURN\l|return r2\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|ExcHandler: all \-\> 0x0029\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|FINALLY_INSNS\l|kotlin.jvm.internal.InlineMarker.finallyStart(1)\lr3.endTransaction()\lkotlin.jvm.internal.InlineMarker.finallyEnd(1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|throw r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r3.beginTransactionNonExclusive()\l}"];
MethodNode[shape=record,label="{public static final T androidx.core.database.sqlite.SQLiteDatabaseKt.transaction((r3v0 '$this$transaction' android.database.sqlite.SQLiteDatabase A[D('$this$transaction' android.database.sqlite.SQLiteDatabase), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'exclusive' boolean A[D('exclusive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'body' kotlin.jvm.functions.Function1\<? super android.database.sqlite.SQLiteDatabase, ? extends T\> A[D('body' kotlin.jvm.functions.Function1), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0033 \-\> B:1:?, CROSS_EDGE: B:13:0x0016 \-\> B:10:0x0029, CROSS_EDGE: B:5:0x0011 \-\> B:6:0x0014\lTryCatch #0 \{all \-\> 0x0029, blocks: (B:7:0x0016), top: B:13:0x0016 \}\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Landroid\/database\/sqlite\/SQLiteDatabase;ZLkotlin\/jvm\/functions\/Function1\<\-Landroid\/database\/sqlite\/SQLiteDatabase;+TT;\>;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_10;
Node_7 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_14 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_5 -> Node_6;
}

