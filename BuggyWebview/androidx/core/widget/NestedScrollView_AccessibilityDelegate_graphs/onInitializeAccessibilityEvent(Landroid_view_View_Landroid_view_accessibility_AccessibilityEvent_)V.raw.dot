digraph "CFG forandroidx.core.widget.NestedScrollView.AccessibilityDelegate.onInitializeAccessibilityEvent(Landroid\/view\/View;Landroid\/view\/accessibility\/AccessibilityEvent;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  \l  (r3 I:androidx.core.view.AccessibilityDelegateCompat)\l  (r4 I:android.view.View A[D('host' android.view.View)])\l  (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l type: SUPER call: androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent):void A[MD:(android.view.View, android.view.accessibility.AccessibilityEvent):void (m)] (LINE:2327)\l0x0003: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('host' android.view.View)])  (LINE:2328)\l0x0004: CHECK_CAST (r0 I:androidx.core.widget.NestedScrollView) = (androidx.core.widget.NestedScrollView) (r0 I:??[OBJECT, ARRAY]) \l0x0006: CONST_CLASS  (r1 I:java.lang.Class\<android.widget.ScrollView\>) =  android.widget.ScrollView.class  (LINE:2329)\l0x0008: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x000c: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r1 I:java.lang.CharSequence)\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setClassName(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x000f: INVOKE  (r1 I:int) = (r0 I:androidx.core.widget.NestedScrollView A[D('nsvHost' androidx.core.widget.NestedScrollView)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollRange():int A[MD:():int (m)] (LINE:2330)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:13:0x0017 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r1 I:boolean A[D('scrollable' boolean)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setScrollable(boolean):void A[MD:(boolean):void (c)] (LINE:2331)\l0x001b: INVOKE  (r2 I:int) = (r0 I:androidx.core.widget.NestedScrollView A[D('nsvHost' androidx.core.widget.NestedScrollView)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollX():int A[MD:():int (s)] (LINE:2332)\l0x001f: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r2 I:int)\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setScrollX(int):void A[MD:(int):void (c)]\l0x0022: INVOKE  (r2 I:int) = (r0 I:androidx.core.widget.NestedScrollView A[D('nsvHost' androidx.core.widget.NestedScrollView)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:2333)\l0x0026: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r2 I:int)\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setScrollY(int):void A[MD:(int):void (c)]\l0x0029: INVOKE  (r2 I:int) = (r0 I:androidx.core.widget.NestedScrollView A[D('nsvHost' androidx.core.widget.NestedScrollView)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollX():int A[MD:():int (s)] (LINE:2334)\l0x002d: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityRecord A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r2 I:int)\l type: STATIC call: androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollX(android.view.accessibility.AccessibilityRecord, int):void A[MD:(android.view.accessibility.AccessibilityRecord, int):void (m)]\l0x0030: INVOKE  (r2 I:int) = (r0 I:androidx.core.widget.NestedScrollView A[D('nsvHost' androidx.core.widget.NestedScrollView)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollRange():int A[MD:():int (m)] (LINE:2335)\l0x0034: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityRecord A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r2 I:int)\l type: STATIC call: androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollY(android.view.accessibility.AccessibilityRecord, int):void A[MD:(android.view.accessibility.AccessibilityRecord, int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:2336)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.core.widget.NestedScrollView.AccessibilityDelegate.onInitializeAccessibilityEvent((r3 'this' I:androidx.core.widget.NestedScrollView$AccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0017 \-\> B:14:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0037: r0 'nsvHost' Landroidx\/core\/widget\/NestedScrollView;\l  0x0018\-0x0037: r1 'scrollable' Z\l  \-1 \-0x0037: r4 'host' Landroid\/view\/View;\l  \-1 \-0x0037: r5 'event' Landroid\/view\/accessibility\/AccessibilityEvent;\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

