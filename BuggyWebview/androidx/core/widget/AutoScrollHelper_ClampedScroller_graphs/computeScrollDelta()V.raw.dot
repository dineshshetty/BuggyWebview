digraph "CFG forandroidx.core.widget.AutoScrollHelper.ClampedScroller.computeScrollDelta()V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:long) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mDeltaTime long  (LINE:831)\l0x0002: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x0004: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: INVOKE  (r0 I:long) =  type: STATIC call: android.view.animation.AnimationUtils.currentAnimationTimeMillis():long A[MD:():long (c)] (LINE:835)\l0x000c: INVOKE  (r2 I:float) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller), (r0 I:long A[D('currentTime' long)]) type: DIRECT call: androidx.core.widget.AutoScrollHelper.ClampedScroller.getValueAt(long):float A[MD:(long):float (m)] (LINE:836)\l0x0010: INVOKE  (r3 I:float) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller), (r2 I:float A[D('value' float)]) type: DIRECT call: androidx.core.widget.AutoScrollHelper.ClampedScroller.interpolateValue(float):float A[MD:(float):float (m)] (LINE:837)\l0x0014: IGET  (r4 I:long) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mDeltaTime long  (LINE:838)\l0x0016: ARITH  (r4 I:long) = (r0 I:long A[D('currentTime' long)]) \- (r4 I:long) \l0x0018: IPUT  (r0 I:long A[D('currentTime' long)]), (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mDeltaTime long  (LINE:840)\l0x001a: CAST (r6 I:float) = (float) (r4 I:long A[D('elapsedSinceDelta' long)])  (LINE:841)\l0x001b: ARITH  (r6 I:float) = (r6 I:float) * (r3 I:float A[D('scale' float)]) \l0x001d: IGET  (r7 I:float) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mTargetVelocityX float \l0x001f: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x0021: CAST (r6 I:int) = (int) (r6 I:float) \l0x0022: IPUT  (r6 I:int), (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mDeltaX int \l0x0024: CAST (r6 I:float) = (float) (r4 I:long A[D('elapsedSinceDelta' long)])  (LINE:842)\l0x0025: ARITH  (r6 I:float) = (r6 I:float) * (r3 I:float A[D('scale' float)]) \l0x0027: IGET  (r7 I:float) = (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mTargetVelocityY float \l0x0029: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x002b: CAST (r6 I:int) = (int) (r6 I:float) \l0x002c: IPUT  (r6 I:int), (r8 I:androidx.core.widget.AutoScrollHelper$ClampedScroller) androidx.core.widget.AutoScrollHelper.ClampedScroller.mDeltaY int \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:843)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: NEW_INSTANCE  (r0 I:java.lang.RuntimeException A[D('currentTime' long)]) =  java.lang.RuntimeException  (LINE:832)\l0x0031: CONST_STR  (r1 I:java.lang.String) =  \"Cannot compute scroll delta before calling start()\" \l0x0033: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.core.widget.AutoScrollHelper.ClampedScroller.computeScrollDelta((r8 'this' I:androidx.core.widget.AutoScrollHelper$ClampedScroller A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0036 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x002f: r0 'currentTime' J\l  0x0010\-0x002f: r2 'value' F\l  0x0014\-0x002f: r3 'scale' F\l  0x0018\-0x002f: r4 'elapsedSinceDelta' J\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

