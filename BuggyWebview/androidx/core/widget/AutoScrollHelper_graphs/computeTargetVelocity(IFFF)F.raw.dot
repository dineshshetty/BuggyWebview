digraph "CFG forandroidx.core.widget.AutoScrollHelper.computeTargetVelocity(IFFF)F" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:float[]) = (r8 I:androidx.core.widget.AutoScrollHelper) androidx.core.widget.AutoScrollHelper.mRelativeEdges float[]  (LINE:549)\l0x0002: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r9 I:??[int, short, byte, char] A[D('direction' int)]) \l0x0004: IGET  (r1 I:float[]) = (r8 I:androidx.core.widget.AutoScrollHelper) androidx.core.widget.AutoScrollHelper.mMaximumEdges float[]  (LINE:550)\l0x0006: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r9 I:??[int, short, byte, char] A[D('direction' int)]) \l0x0008: INVOKE  (r2 I:float) = \l  (r8 I:androidx.core.widget.AutoScrollHelper)\l  (r0 I:float A[D('relativeEdge' float)])\l  (r11 I:float A[D('srcSize' float)])\l  (r1 I:float A[D('maximumEdge' float)])\l  (r10 I:float A[D('coordinate' float)])\l type: DIRECT call: androidx.core.widget.AutoScrollHelper.getEdgeValue(float, float, float, float):float A[MD:(float, float, float, float):float (m)] (LINE:551)\l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:552)\l0x000d: CMP_L  (r4 I:int) = (r2 I:float A[D('value' float)]), (r3 I:float) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0012 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|0x0011: RETURN  (r3 I:float)  (LINE:554)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: IGET  (r4 I:float[]) = (r8 I:androidx.core.widget.AutoScrollHelper) androidx.core.widget.AutoScrollHelper.mRelativeVelocity float[]  (LINE:557)\l0x0014: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r9 I:??[int, short, byte, char] A[D('direction' int)]) \l0x0016: IGET  (r5 I:float[]) = (r8 I:androidx.core.widget.AutoScrollHelper) androidx.core.widget.AutoScrollHelper.mMinimumVelocity float[]  (LINE:558)\l0x0018: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r9 I:??[int, short, byte, char] A[D('direction' int)]) \l0x001a: IGET  (r6 I:float[]) = (r8 I:androidx.core.widget.AutoScrollHelper) androidx.core.widget.AutoScrollHelper.mMaximumVelocity float[]  (LINE:559)\l0x001c: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r9 I:??[int, short, byte, char] A[D('direction' int)]) \l0x001e: ARITH  (r7 I:float) = (r4 I:float A[D('relativeVelocity' float)]) * (r12 I:float A[D('dstSize' float)])  (LINE:560)\l0x0020: CMP_L  (r3 I:int) = (r2 I:float A[D('value' float)]), (r3 I:float)  (LINE:565)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|0x0022: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:20:0x002b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: ARITH  (r3 I:float) = (r2 I:float A[D('value' float)]) * (r7 I:float A[D('targetVelocity' float)])  (LINE:566)\l0x0026: INVOKE  (r3 I:float) = (r3 I:float), (r5 I:float A[D('minimumVelocity' float)]), (r6 I:float A[D('maximumVelocity' float)]) type: STATIC call: androidx.core.widget.AutoScrollHelper.constrain(float, float, float):float A[MD:(float, float, float):float (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|0x002a: RETURN  (r3 I:float) \l}"];
Node_20 [shape=record,label="{20\:\ 0x002b|0x002b: NEG  (r3 I:float) = (r2 I:float A[D('value' float)])  (LINE:568)\l0x002c: ARITH  (r3 I:float) = (r3 I:float) * (r7 I:float A[D('targetVelocity' float)]) \l0x002e: INVOKE  (r3 I:float) = (r3 I:float), (r5 I:float A[D('minimumVelocity' float)]), (r6 I:float A[D('maximumVelocity' float)]) type: STATIC call: androidx.core.widget.AutoScrollHelper.constrain(float, float, float):float A[MD:(float, float, float):float (m)]\l0x0032: NEG  (r3 I:float) = (r3 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|RETURN\l|0x0033: RETURN  (r3 I:float) \l}"];
MethodNode[shape=record,label="{private float androidx.core.widget.AutoScrollHelper.computeTargetVelocity((r8 'this' I:androidx.core.widget.AutoScrollHelper A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('coordinate' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[D('srcSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('dstSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x002a \-\> B:12:?, CROSS_EDGE: B:21:0x0033 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0033: r0 'relativeEdge' F\l  0x0008\-0x0033: r1 'maximumEdge' F\l  0x000c\-0x0033: r2 'value' F\l  0x0016\-0x0033: r4 'relativeVelocity' F\l  0x001a\-0x0033: r5 'minimumVelocity' F\l  0x001e\-0x0033: r6 'maximumVelocity' F\l  0x0020\-0x0033: r7 'targetVelocity' F\l  \-1 \-0x0033: r9 'direction' I\l  \-1 \-0x0033: r10 'coordinate' F\l  \-1 \-0x0033: r11 'srcSize' F\l  \-1 \-0x0033: r12 'dstSize' F\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

