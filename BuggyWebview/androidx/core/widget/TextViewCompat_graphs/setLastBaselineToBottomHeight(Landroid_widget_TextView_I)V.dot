digraph "CFG forandroidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(Landroid\/widget\/TextView;I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|androidx.core.util.Preconditions.checkArgumentNonnegative(r7)\landroid.graphics.Paint$FontMetricsInt r0 = r6.getPaint().getFontMetricsInt()\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \< 16) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011}"];
Node_19 [shape=record,label="{19\:\ 0x0015|if (androidx.core.widget.TextViewCompat.Api16Impl.getIncludeFontPadding(r6) == false) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|int r1 = r0.descent\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|PHI: r1 \l  PHI: (r1v2 'fontMetricsBottom' int) = (r1v1 'fontMetricsBottom' int), (r1v4 'fontMetricsBottom' int) binds: [B:22:0x001b, B:21:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|if (r7 \<= java.lang.Math.abs(r1)) goto L11\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|int r2 = r7 \- r1\lr6.setPadding(r6.getPaddingLeft(), r6.getPaddingTop(), r6.getPaddingRight(), r2)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|int r1 = r0.bottom\l}"];
MethodNode[shape=record,label="{public static void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight((r6v0 'textView' android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'lastBaselineToBottomHeight' int A[D('lastBaselineToBottomHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0021 \-\> B:26:0x0034, CROSS_EDGE: B:22:0x001b \-\> B:23:0x001d, CROSS_EDGE: B:17:0x000f \-\> B:22:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_22 -> Node_23;
}

