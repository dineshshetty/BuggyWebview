digraph "CFG forandroidx.core.widget.TextViewCompat.getMinLines(Landroid\/widget\/TextView;)I" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:257)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:30:0x000b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r2 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.Api16Impl.getMinLines(android.widget.TextView):int A[MD:(android.widget.TextView):int (m)] (LINE:258)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: SGET  (r0 I:boolean) =  androidx.core.widget.TextViewCompat.sMinModeFieldFetched boolean  (LINE:261)\l0x000d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x001a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|0x0010: CONST_STR  (r0 I:java.lang.String) =  \"mMinMode\"  (LINE:262)\l0x0012: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.String) type: STATIC call: androidx.core.widget.TextViewCompat.retrieveField(java.lang.String):java.lang.reflect.Field A[MD:(java.lang.String):java.lang.reflect.Field (m)]\l0x0016: SPUT  (r0 I:java.lang.reflect.Field) androidx.core.widget.TextViewCompat.sMinModeField java.lang.reflect.Field \l0x0018: SPUT  (r1 I:boolean) androidx.core.widget.TextViewCompat.sMinModeFieldFetched boolean  (LINE:263)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: SGET  (r0 I:java.lang.reflect.Field) =  androidx.core.widget.TextViewCompat.sMinModeField java.lang.reflect.Field  (LINE:265)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x003b \l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|0x001e: INVOKE  (r0 I:int) = (r0 I:java.lang.reflect.Field), (r2 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.retrieveIntFromField(java.lang.reflect.Field, android.widget.TextView):int A[MD:(java.lang.reflect.Field, android.widget.TextView):int (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:? \l}"];
Node_37 [shape=record,label="{37\:\ 0x0024|0x0024: SGET  (r0 I:boolean) =  androidx.core.widget.TextViewCompat.sMinimumFieldFetched boolean  (LINE:267)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0032 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: CONST_STR  (r0 I:java.lang.String) =  \"mMinimum\"  (LINE:268)\l0x002a: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.String) type: STATIC call: androidx.core.widget.TextViewCompat.retrieveField(java.lang.String):java.lang.reflect.Field A[MD:(java.lang.String):java.lang.reflect.Field (m)]\l0x002e: SPUT  (r0 I:java.lang.reflect.Field) androidx.core.widget.TextViewCompat.sMinimumField java.lang.reflect.Field \l0x0030: SPUT  (r1 I:boolean) androidx.core.widget.TextViewCompat.sMinimumFieldFetched boolean  (LINE:269)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|0x0032: SGET  (r0 I:java.lang.reflect.Field) =  androidx.core.widget.TextViewCompat.sMinimumField java.lang.reflect.Field  (LINE:271)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0034|0x0034: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|0x0036: INVOKE  (r0 I:int) = (r0 I:java.lang.reflect.Field), (r2 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.retrieveIntFromField(java.lang.reflect.Field, android.widget.TextView):int A[MD:(java.lang.reflect.Field, android.widget.TextView):int (m)] (LINE:272)\l}"];
Node_43 [shape=record,label="{43\:\ 0x003a|RETURN\l|0x003a: RETURN  (r0 I:int) \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x003b: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:275)\l0x003c: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x003b: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:275)\l0x003c: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_44 [shape=record,label="{44\:\ 0x003b|RETURN\lORIG_RETURN\l|0x003b: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:275)\l0x003c: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int androidx.core.widget.TextViewCompat.getMinLines((r2 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x003a \-\> B:25:?, CROSS_EDGE: B:45:0x003c \-\> B:25:?, CROSS_EDGE: B:38:0x0026 \-\> B:40:0x0032, CROSS_EDGE: B:36:0x0022 \-\> B:44:0x003b, CROSS_EDGE: B:34:0x001c \-\> B:44:0x003b, CROSS_EDGE: B:31:0x000e \-\> B:33:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x003c: r2 'textView' Landroid\/widget\/TextView;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_44;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_46;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_47 -> Node_25;
Node_46 -> Node_25;
Node_44 -> Node_25;
}

