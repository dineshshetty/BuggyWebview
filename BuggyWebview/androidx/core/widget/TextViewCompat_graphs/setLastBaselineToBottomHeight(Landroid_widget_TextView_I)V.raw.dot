digraph "CFG forandroidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(Landroid\/widget\/TextView;I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r7 I:int A[D('lastBaselineToBottomHeight' int)]) type: STATIC call: androidx.core.util.Preconditions.checkArgumentNonnegative(int):int A[MD:(int):int (m)] (LINE:763)\l0x0003: INVOKE  (r0 I:android.text.TextPaint) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaint():android.text.TextPaint A[MD:():android.text.TextPaint (c)] (LINE:765)\l0x0007: INVOKE  (r0 I:android.graphics.Paint$FontMetricsInt) = (r0 I:android.text.TextPaint) type: VIRTUAL call: android.text.TextPaint.getFontMetricsInt():android.graphics.Paint$FontMetricsInt A[MD:():android.graphics.Paint$FontMetricsInt (c)]\l0x000b: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:767)\l0x000d: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:22:0x001b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  (r1 I:boolean) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.Api16Impl.getIncludeFontPadding(android.widget.TextView):boolean A[MD:(android.widget.TextView):boolean (m)] (LINE:770)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0018 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|0x0018: IGET  (r1 I:int) = (r0 I:android.graphics.Paint$FontMetricsInt A[D('fontMetrics' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.descent int  (LINE:773)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|0x001d: INVOKE  (r2 I:int) = (r1 I:int A[D('fontMetricsBottom' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:779)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|0x0021: IF  (r7 I:??[int, byte, short, char] A[D('lastBaselineToBottomHeight' int)]) \<= (r2 I:??[int, byte, short, char])  \-\> B:27:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|0x0023: ARITH  (r2 I:int) = (r7 I:int A[D('lastBaselineToBottomHeight' int)]) \- (r1 I:int A[D('fontMetricsBottom' int)])  (LINE:780)\l0x0025: INVOKE  (r3 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingLeft():int A[MD:():int (c)] (LINE:781)\l0x0029: INVOKE  (r4 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingTop():int A[MD:():int (c)]\l0x002d: INVOKE  (r5 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingRight():int A[MD:():int (c)] (LINE:782)\l0x0031: INVOKE  \l  (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r2 I:int A[D('paddingBottom' int)])\l type: VIRTUAL call: android.widget.TextView.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:781)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|RETURN\lORIG_RETURN\l|0x0034: RETURN    (LINE:784)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0034: RETURN   A[SYNTHETIC] (LINE:784)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|0x001b: IGET  (r1 I:int A[D('fontMetricsBottom' int)]) = (r0 I:android.graphics.Paint$FontMetricsInt A[D('fontMetrics' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.bottom int  (LINE:771)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight((r6 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('lastBaselineToBottomHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0021 \-\> B:26:0x0034, CROSS_EDGE: B:22:0x001b \-\> B:23:0x001d, CROSS_EDGE: B:17:0x000f \-\> B:22:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x001b: r1 'fontMetricsBottom' I\l  0x0025\-0x0034: r2 'paddingBottom' I\l  0x000b\-0x0034: r0 'fontMetrics' Landroid\/graphics\/Paint$FontMetricsInt;\l  0x001d\-0x0034: r1 'fontMetricsBottom' I\l  \-1 \-0x0034: r6 'textView' Landroid\/widget\/TextView;\l  \-1 \-0x0034: r7 'lastBaselineToBottomHeight' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_22 -> Node_23;
}

