digraph "CFG forandroidx.core.widget.TextViewCompat.getCompoundDrawablesRelative(Landroid\/widget\/TextView;)[Landroid\/graphics\/drawable\/Drawable;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:300)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:24:0x000b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable[]) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.Api17Impl.getCompoundDrawablesRelative(android.widget.TextView):android.graphics.drawable.Drawable[] A[MD:(android.widget.TextView):android.graphics.drawable.Drawable[] (m)] (LINE:301)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.graphics.drawable.Drawable[]) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:303)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:34:0x002c \l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: INVOKE  (r0 I:int) = (r6 I:android.view.View A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.Api17Impl.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:304)\l0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001a \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: INVOKE  (r1 I:android.graphics.drawable.Drawable[]) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getCompoundDrawables():android.graphics.drawable.Drawable[] A[MD:():android.graphics.drawable.Drawable[] (c)] (LINE:305)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x002b  (LINE:306)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|0x0022: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:308)\l0x0023: AGET  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('compounds' android.graphics.drawable.Drawable[])]), (r3 I:??[int, short, byte, char]) \l0x0025: AGET  (r5 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('compounds' android.graphics.drawable.Drawable[])]), (r2 I:??[int, short, byte, char])  (LINE:309)\l0x0027: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('compounds' android.graphics.drawable.Drawable[])])\l  (r2 I:??[int, short, byte, char])\l  (r4 I:??[OBJECT, ARRAY] A[D('start' android.graphics.drawable.Drawable)])\l  (LINE:310)\l0x0029: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('compounds' android.graphics.drawable.Drawable[])])\l  (r3 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('end' android.graphics.drawable.Drawable)])\l  (LINE:311)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|RETURN\l|0x002b: RETURN  (r1 I:android.graphics.drawable.Drawable[] A[D('compounds' android.graphics.drawable.Drawable[])])  (LINE:313)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|0x002c: INVOKE  (r0 I:android.graphics.drawable.Drawable[]) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getCompoundDrawables():android.graphics.drawable.Drawable[] A[MD:():android.graphics.drawable.Drawable[] (c)] (LINE:315)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0030|RETURN\l|0x0030: RETURN  (r0 I:android.graphics.drawable.Drawable[]) \l}"];
MethodNode[shape=record,label="{public static android.graphics.drawable.Drawable[] androidx.core.widget.TextViewCompat.getCompoundDrawablesRelative((r6 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x002b \-\> B:19:?, CROSS_EDGE: B:31:0x0020 \-\> B:33:0x002b, CROSS_EDGE: B:27:0x0017 \-\> B:30:0x001b, CROSS_EDGE: B:35:0x0030 \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0025\-0x002b: r4 'start' Landroid\/graphics\/drawable\/Drawable;\l  0x0027\-0x002b: r5 'end' Landroid\/graphics\/drawable\/Drawable;\l  0x001c\-0x002c: r0 'rtl' Z\l  0x0020\-0x002c: r1 'compounds' [Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0030: r6 'textView' Landroid\/widget\/TextView;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_34 -> Node_35;
Node_35 -> Node_19;
}

