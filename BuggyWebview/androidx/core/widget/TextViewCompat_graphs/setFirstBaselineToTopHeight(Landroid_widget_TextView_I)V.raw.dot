digraph "CFG forandroidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight(Landroid\/widget\/TextView;I)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r7 I:int A[D('firstBaselineToTopHeight' int)]) type: STATIC call: androidx.core.util.Preconditions.checkArgumentNonnegative(int):int A[MD:(int):int (m)] (LINE:718)\l0x0003: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:719)\l0x0005: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:24:0x000d \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: INVOKE  \l  (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)])\l  (r7 I:int A[D('firstBaselineToTopHeight' int)])\l type: STATIC call: androidx.core.widget.TextViewCompat.Api28Impl.setFirstBaselineToTopHeight(android.widget.TextView, int):void A[MD:(android.widget.TextView, int):void (m)] (LINE:720)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:721)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: INVOKE  (r0 I:android.text.TextPaint) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaint():android.text.TextPaint A[MD:():android.text.TextPaint (c)] (LINE:724)\l0x0011: INVOKE  (r0 I:android.graphics.Paint$FontMetricsInt) = (r0 I:android.text.TextPaint) type: VIRTUAL call: android.text.TextPaint.getFontMetricsInt():android.graphics.Paint$FontMetricsInt A[MD:():android.graphics.Paint$FontMetricsInt (c)]\l0x0015: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:726)\l0x0017: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:30:0x0025 \l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|0x001b: INVOKE  (r1 I:boolean) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: STATIC call: androidx.core.widget.TextViewCompat.Api16Impl.getIncludeFontPadding(android.widget.TextView):boolean A[MD:(android.widget.TextView):boolean (m)] (LINE:729)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0022 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: IGET  (r1 I:int) = (r0 I:android.graphics.Paint$FontMetricsInt A[D('fontMetrics' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.ascent int  (LINE:732)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|0x0027: INVOKE  (r2 I:int) = (r1 I:int A[D('fontMetricsTop' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:738)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002b|0x002b: IF  (r7 I:??[int, byte, short, char] A[D('firstBaselineToTopHeight' int)]) \<= (r2 I:??[int, byte, short, char])  \-\> B:35:? \l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|0x002d: ARITH  (r2 I:int) = (r7 I:int A[D('firstBaselineToTopHeight' int)]) + (r1 I:int A[D('fontMetricsTop' int)])  (LINE:739)\l0x002f: INVOKE  (r3 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingLeft():int A[MD:():int (c)] (LINE:740)\l0x0033: INVOKE  (r4 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingRight():int A[MD:():int (c)] (LINE:741)\l0x0037: INVOKE  (r5 I:int) = (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getPaddingBottom():int A[MD:():int (c)]\l0x003b: INVOKE  \l  (r6 I:android.widget.TextView A[D('textView' android.widget.TextView)])\l  (r3 I:int)\l  (r2 I:int A[D('paddingTop' int)])\l  (r4 I:int)\l  (r5 I:int)\l type: VIRTUAL call: android.widget.TextView.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:740)\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|RETURN\lORIG_RETURN\l|0x003e: RETURN    (LINE:743)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x003e: RETURN   A[SYNTHETIC] (LINE:743)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: IGET  (r1 I:int A[D('fontMetricsTop' int)]) = (r0 I:android.graphics.Paint$FontMetricsInt A[D('fontMetrics' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.top int  (LINE:730)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight((r6 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('firstBaselineToTopHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x003e \-\> B:19:?, CROSS_EDGE: B:32:0x002b \-\> B:34:0x003e, CROSS_EDGE: B:30:0x0025 \-\> B:31:0x0027, CROSS_EDGE: B:25:0x0019 \-\> B:30:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0025: r1 'fontMetricsTop' I\l  0x002f\-0x003e: r2 'paddingTop' I\l  0x0015\-0x003e: r0 'fontMetrics' Landroid\/graphics\/Paint$FontMetricsInt;\l  0x0027\-0x003e: r1 'fontMetricsTop' I\l  \-1 \-0x003e: r6 'textView' Landroid\/widget\/TextView;\l  \-1 \-0x003e: r7 'firstBaselineToTopHeight' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_19;
Node_35 -> Node_19;
Node_30 -> Node_31;
}

