digraph "CFG forandroidx.core.widget.TextViewOnReceiveContentListener.onReceiveContent(Landroid\/view\/View;Landroidx\/core\/view\/ContentInfoCompat;)Landroidx\/core\/view\/ContentInfoCompat;" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"ReceiveContent\"  (LINE:56)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0003: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:int) type: STATIC call: android.util.Log.isLoggable(java.lang.String, int):boolean A[MD:(java.lang.String, int):boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001d \l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:57)\l0x000b: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x000e: CONST_STR  (r2 I:java.lang.String) =  \"onReceive: \" \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r13 I:java.lang.Object A[D('payload' androidx.core.view.ContentInfoCompat)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0016: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001a: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.d(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|0x001d: INVOKE  (r0 I:int) = (r13 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)]) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.getSource():int A[MD:():int (m)] (LINE:59)\l0x0021: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:60)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0025 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|RETURN\l|0x0024: RETURN  (r13 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)])  (LINE:63)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0025|0x0025: INVOKE  (r1 I:android.content.ClipData) = (r13 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)]) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.getClip():android.content.ClipData A[MD:():android.content.ClipData (m)] (LINE:71)\l0x0029: INVOKE  (r2 I:int) = (r13 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)]) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.getFlags():int A[MD:():int (m)] (LINE:72)\l0x002d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:73)\l0x002e: CHECK_CAST (r3 I:android.widget.TextView) = (android.widget.TextView) (r3 I:??[OBJECT, ARRAY]) \l0x0030: INVOKE  (r4 I:java.lang.CharSequence) = (r3 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:74)\l0x0034: CHECK_CAST (r4 I:android.text.Editable) = (android.text.Editable) (r4 I:??[OBJECT, ARRAY]) \l0x0036: INVOKE  (r5 I:android.content.Context) = (r3 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:75)\l0x003a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:76)\l0x003b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:77)\l}"];
Node_32 [shape=record,label="{32\:\ 0x003c|LOOP_START\lLOOP:0: B:32:0x003c\-\>B:39:0x0063\l|0x003c: INVOKE  (r8 I:int) = (r1 I:android.content.ClipData A[D('clip' android.content.ClipData)]) type: VIRTUAL call: android.content.ClipData.getItemCount():int A[MD:():int (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0040|0x0040: IF  (r7 I:??[int, byte, short, char] A[D('i' int)]) \>= (r8 I:??[int, byte, short, char])  \-\> B:42:0x0066 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: INVOKE  (r8 I:android.content.ClipData$Item) = (r1 I:android.content.ClipData A[D('clip' android.content.ClipData)]), (r7 I:int A[D('i' int)]) type: VIRTUAL call: android.content.ClipData.getItemAt(int):android.content.ClipData$Item A[MD:(int):android.content.ClipData$Item (c)] (LINE:78)\l0x0046: INVOKE  (r8 I:java.lang.CharSequence) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r8 I:android.content.ClipData$Item)\l  (r2 I:int A[D('flags' int)])\l type: STATIC call: androidx.core.widget.TextViewOnReceiveContentListener.coerceToText(android.content.Context, android.content.ClipData$Item, int):java.lang.CharSequence A[MD:(android.content.Context, android.content.ClipData$Item, int):java.lang.CharSequence (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x004a|0x004a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemText' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0063  (LINE:79)\l}"];
Node_36 [shape=record,label="{36\:\ 0x004c|0x004c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('didFirst' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0053  (LINE:80)\l}"];
Node_37 [shape=record,label="{37\:\ 0x004e|0x004e: INVOKE  \l  (r4 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r8 I:java.lang.CharSequence A[D('itemText' java.lang.CharSequence)])\l type: STATIC call: androidx.core.widget.TextViewOnReceiveContentListener.replaceSelection(android.text.Editable, java.lang.CharSequence):void A[MD:(android.text.Editable, java.lang.CharSequence):void (m)] (LINE:81)\l0x0051: CONST  (r6 I:??[boolean, int, float, short, byte, char] A[D('didFirst' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:82)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0063|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0063|LOOP_END\lLOOP:0: B:32:0x003c\-\>B:39:0x0063\l|0x0063: ARITH  (r7 I:int) = (r7 I:int A[D('i' int)]) + (1 int)  (LINE:77)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0053|0x0053: INVOKE  (r9 I:int) = (r4 I:java.lang.CharSequence A[D('editable' android.text.Editable)]) type: STATIC call: android.text.Selection.getSelectionEnd(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (c)] (LINE:84)\l0x0057: CONST_STR  (r10 I:java.lang.String) =  \"n\" \l0x0059: INVOKE  (r4 I:android.text.Editable A[D('editable' android.text.Editable)]), (r9 I:int), (r10 I:java.lang.CharSequence) type: INTERFACE call: android.text.Editable.insert(int, java.lang.CharSequence):android.text.Editable A[MD:(int, java.lang.CharSequence):android.text.Editable (c)]\l0x005c: INVOKE  (r9 I:int) = (r4 I:java.lang.CharSequence A[D('editable' android.text.Editable)]) type: STATIC call: android.text.Selection.getSelectionEnd(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (c)] (LINE:85)\l0x0060: INVOKE  \l  (r4 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r9 I:int)\l  (r8 I:java.lang.CharSequence A[D('itemText' java.lang.CharSequence)])\l type: INTERFACE call: android.text.Editable.insert(int, java.lang.CharSequence):android.text.Editable A[MD:(int, java.lang.CharSequence):android.text.Editable (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0063|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0063|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0066|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0066|RETURN\l|0x0066: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:89)\l0x0067: RETURN  (r7 I:androidx.core.view.ContentInfoCompat) \l}"];
MethodNode[shape=record,label="{public androidx.core.view.ContentInfoCompat androidx.core.widget.TextViewOnReceiveContentListener.onReceiveContent((r11 'this' I:androidx.core.widget.TextViewOnReceiveContentListener A[IMMUTABLE_TYPE, THIS]), (r12 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x0063 \-\> B:32:0x003c, CROSS_EDGE: B:38:0x0053 \-\> B:39:0x0063, CROSS_EDGE: B:35:0x004a \-\> B:39:0x0063, CROSS_EDGE: B:41:0x0067 \-\> B:24:?, CROSS_EDGE: B:26:0x0007 \-\> B:28:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x004a\-0x0063: r8 'itemText' Ljava\/lang\/CharSequence;\l  0x003c\-0x0066: r7 'i' I\l  0x0021\-0x0067: r0 'source' I\l  0x0029\-0x0067: r1 'clip' Landroid\/content\/ClipData;\l  0x002d\-0x0067: r2 'flags' I\l  0x0030\-0x0067: r3 'textView' Landroid\/widget\/TextView;\l  0x0036\-0x0067: r4 'editable' Landroid\/text\/Editable;\l  0x003a\-0x0067: r5 'context' Landroid\/content\/Context;\l  0x003b\-0x0067: r6 'didFirst' Z\l  \-1 \-0x0067: r12 'view' Landroid\/view\/View;\l  \-1 \-0x0067: r13 'payload' Landroidx\/core\/view\/ContentInfoCompat;\lMETHOD_OVERRIDE: [androidx.core.view.OnReceiveContentListener.onReceiveContent(android.view.View, androidx.core.view.ContentInfoCompat):androidx.core.view.ContentInfoCompat]\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_24;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_45;
Node_45 -> Node_39;
Node_39 -> Node_32;
Node_38 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_39;
Node_42 -> Node_40;
Node_40 -> Node_24;
}

