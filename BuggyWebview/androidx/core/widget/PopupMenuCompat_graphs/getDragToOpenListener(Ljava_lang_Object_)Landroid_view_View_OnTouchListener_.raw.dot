digraph "CFG forandroidx.core.widget.PopupMenuCompat.getDragToOpenListener(Ljava\/lang\/Object;)Landroid\/view\/View$OnTouchListener;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:57)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('popupMenu' java.lang.Object)])  (LINE:58)\l0x0007: CHECK_CAST (r0 I:android.widget.PopupMenu) = (android.widget.PopupMenu) (r0 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r0 I:android.view.View$OnTouchListener) = (r0 I:android.widget.PopupMenu) type: STATIC call: androidx.core.widget.PopupMenuCompat.Api19Impl.getDragToOpenListener(android.widget.PopupMenu):android.view.View$OnTouchListener A[MD:(android.widget.PopupMenu):android.view.View$OnTouchListener (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:android.view.View$OnTouchListener) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:60)\l0x000f: RETURN  (r0 I:android.view.View$OnTouchListener) \l}"];
MethodNode[shape=record,label="{public static android.view.View$OnTouchListener androidx.core.widget.PopupMenuCompat.getDragToOpenListener((r2 I:java.lang.Object A[D('popupMenu' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x000f \-\> B:1:?\lDebug Info:\l  \-1 \-0x000f: r2 'popupMenu' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

