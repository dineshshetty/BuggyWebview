digraph "CFG forandroidx.core.widget.CheckedTextViewCompat.Api14Impl.getCheckMarkDrawable(Landroid\/widget\/CheckedTextView;)Landroid\/graphics\/drawable\/Drawable;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.core.widget.CheckedTextViewCompat.Api14Impl.sResolved boolean  (LINE:177)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"CheckedTextViewCompat\" \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x001d \l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:179)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchFieldException \-\> 0x0015, blocks: (B:26:0x0007), top: B:38:0x0007 \}\lCatch: NoSuchFieldException \-\> 0x0015\l|0x0007: CONST_CLASS  (r2 I:java.lang.Class\<android.widget.CheckedTextView\>) =  android.widget.CheckedTextView.class A[TRY_ENTER]\l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"mCheckMarkDrawable\" \l0x000b: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)] (LINE:180)\l0x000f: SPUT  (r2 I:java.lang.reflect.Field) androidx.core.widget.CheckedTextViewCompat.Api14Impl.sCheckMarkDrawableField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015]\l0x0011: INVOKE  (r2 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0015, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:181)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: SPUT  (r0 I:boolean) androidx.core.widget.CheckedTextViewCompat.Api14Impl.sResolved boolean  (LINE:185)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|ExcHandler: NoSuchFieldException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r2 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0015] (LINE:182)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|0x0016: CONST_STR  (r3 I:java.lang.String) =  \"Failed to retrieve mCheckMarkDrawable field\"  (LINE:183)\l0x0018: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: SGET  (r0 I:java.lang.reflect.Field) =  androidx.core.widget.CheckedTextViewCompat.Api14Impl.sCheckMarkDrawableField java.lang.reflect.Field  (LINE:188)\l0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0031 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0031|RETURN\l|0x0031: RETURN  (r2 I:android.graphics.drawable.Drawable)  (LINE:196)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{IllegalAccessException \-\> 0x0029, blocks: (B:33:0x0022), top: B:40:0x0022 \}\lCatch: IllegalAccessException \-\> 0x0029\l|0x0022: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r4 I:java.lang.Object A[D('textView' android.widget.CheckedTextView)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0029, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER] (LINE:190)\l0x0026: CHECK_CAST (r0 I:android.graphics.drawable.Drawable) = (android.graphics.drawable.Drawable) (r0 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0029, TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|RETURN\l|0x0028: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0029|ExcHandler: IllegalAccessException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0029] (LINE:191)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: CONST_STR  (r3 I:java.lang.String) =  \"Failed to get check mark drawable via reflection\"  (LINE:192)\l0x002c: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l0x002f: SPUT  (r2 I:java.lang.reflect.Field) androidx.core.widget.CheckedTextViewCompat.Api14Impl.sCheckMarkDrawableField java.lang.reflect.Field  (LINE:193)\l}"];
MethodNode[shape=record,label="{static android.graphics.drawable.Drawable androidx.core.widget.CheckedTextViewCompat.Api14Impl.getCheckMarkDrawable((r4 I:android.widget.CheckedTextView A[D('textView' android.widget.CheckedTextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0028 \-\> B:22:?, CROSS_EDGE: B:36:0x002a \-\> B:37:0x0031, CROSS_EDGE: B:40:0x0022 \-\> B:35:0x0029, CROSS_EDGE: B:29:0x0016 \-\> B:30:0x001b, CROSS_EDGE: B:38:0x0007 \-\> B:28:0x0015, CROSS_EDGE: B:24:0x0004 \-\> B:31:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001b: r2 'e' Ljava\/lang\/NoSuchFieldException;\l  0x002a\-0x0031: r0 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x0031: r4 'textView' Landroid\/widget\/CheckedTextView;\lTryCatch #0 \{NoSuchFieldException \-\> 0x0015, blocks: (B:26:0x0007), top: B:38:0x0007 \}, TryCatch #1 \{IllegalAccessException \-\> 0x0029, blocks: (B:33:0x0022), top: B:40:0x0022 \}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_38;
Node_38 -> Node_26;
Node_38 -> Node_28;
Node_26 -> Node_30;
Node_26 -> Node_39;
Node_30 -> Node_31;
Node_39 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_37;
Node_32 -> Node_40[style=dashed];
Node_37 -> Node_22;
Node_40 -> Node_33;
Node_40 -> Node_35;
Node_33 -> Node_34;
Node_33 -> Node_41;
Node_34 -> Node_22;
Node_41 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
}

