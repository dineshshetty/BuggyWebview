digraph "CFG forandroidx.core.widget.NestedScrollView.onRequestFocusInDescendants(ILandroid\/graphics\/Rect;)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1943)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0001|0x0001: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('direction' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0006 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|0x0003: CONST  (r4 I:??[int, float, short, byte, char] A[D('direction' int)]) = (130(0x82, float:1.82E\-43) ??[int, float, short, byte, char])  (LINE:1944)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previouslyFocusedRect' android.graphics.Rect)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0017  (LINE:1949)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|0x000d: INVOKE  (r0 I:android.view.FocusFinder) =  type: STATIC call: android.view.FocusFinder.getInstance():android.view.FocusFinder A[MD:():android.view.FocusFinder (c)] (LINE:1950)\l0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:android.view.View) = \l  (r0 I:android.view.FocusFinder)\l  (r3 I:android.view.ViewGroup)\l  (r1 I:android.view.View)\l  (r4 I:int A[D('direction' int)])\l type: VIRTUAL call: android.view.FocusFinder.findNextFocus(android.view.ViewGroup, android.view.View, int):android.view.View A[MD:(android.view.ViewGroup, android.view.View, int):android.view.View (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x0020: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1954)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextFocus' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0024 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:boolean)  (LINE:1955)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|0x0024: INVOKE  (r2 I:boolean) = (r3 I:androidx.core.widget.NestedScrollView), (r0 I:android.view.View A[D('nextFocus' android.view.View)]) type: DIRECT call: androidx.core.widget.NestedScrollView.isOffScreen(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1958)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|0x0028: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002b \l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|RETURN\l|0x002a: RETURN  (r1 I:boolean)  (LINE:1959)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|0x002b: INVOKE  (r1 I:boolean) = \l  (r0 I:android.view.View A[D('nextFocus' android.view.View)])\l  (r4 I:int A[D('direction' int)])\l  (r5 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect)])\l type: VIRTUAL call: android.view.View.requestFocus(int, android.graphics.Rect):boolean A[MD:(int, android.graphics.Rect):boolean (c)] (LINE:1962)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:boolean) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: INVOKE  (r0 I:android.view.FocusFinder) =  type: STATIC call: android.view.FocusFinder.getInstance():android.view.FocusFinder A[MD:():android.view.FocusFinder (c)] (LINE:1951)\l0x001b: INVOKE  (r0 I:android.view.View) = \l  (r0 I:android.view.FocusFinder)\l  (r3 I:android.view.ViewGroup)\l  (r5 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect)])\l  (r4 I:int A[D('direction' int)])\l type: VIRTUAL call: android.view.FocusFinder.findNextFocusFromRect(android.view.ViewGroup, android.graphics.Rect, int):android.view.View A[MD:(android.view.ViewGroup, android.graphics.Rect, int):android.view.View (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1945)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|0x0007: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('direction' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000b \l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: CONST  (r4 I:??[int, float, short, byte, char] A[D('direction' int)]) = (33 ??[int, float, short, byte, char])  (LINE:1946)\l}"];
MethodNode[shape=record,label="{protected boolean androidx.core.widget.NestedScrollView.onRequestFocusInDescendants((r3 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x002a \-\> B:20:?, CROSS_EDGE: B:37:0x002f \-\> B:20:?, CROSS_EDGE: B:29:0x0017 \-\> B:30:0x001f, CROSS_EDGE: B:26:0x0009 \-\> B:27:0x000b, CROSS_EDGE: B:25:0x0007 \-\> B:27:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x002f: r0 'nextFocus' Landroid\/view\/View;\l  \-1 \-0x002f: r4 'direction' I\l  \-1 \-0x002f: r5 'previouslyFocusedRect' Landroid\/graphics\/Rect;\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.onRequestFocusInDescendants(int, android.graphics.Rect):boolean\}]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_20;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_29 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
}

