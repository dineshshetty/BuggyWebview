digraph "CFG forandroidx.core.widget.NestedScrollView.findFocusableViewInBounds(ZII)Landroid\/view\/View;" {
Node_42 [shape=record,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1241)\l0x0001: INVOKE  (r0 I:java.util.ArrayList) = (r12 I:androidx.core.widget.NestedScrollView), (r0 I:int) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getFocusables(int):java.util.ArrayList A[MD:(int):java.util.ArrayList (s)]\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1242)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1251)\l0x0007: INVOKE  (r3 I:int) = (r0 I:java.util.List A[D('focusables' java.util.List\<android.view.View\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:1253)\l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1254)\l}"];
Node_45 [shape=record,label="{45\:\ 0x000c|LOOP_START\lLOOP:0: B:45:0x000c\-\>B:72:0x0051\l|0x000c: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:74:0x0054 \l}"];
Node_46 [shape=record,label="{46\:\ 0x000e|0x000e: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.List A[D('focusables' java.util.List\<android.view.View\>)]), (r4 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:1255)\l0x0012: CHECK_CAST (r5 I:android.view.View) = (android.view.View) (r5 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r6 I:int) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1256)\l0x0018: INVOKE  (r7 I:int) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:1257)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001c|0x001c: IF  (r14 I:??[int, byte, short, char] A[D('top' int)]) \>= (r7 I:??[int, byte, short, char] A[D('viewBottom' int)])  \-\> B:76:0x0051  (LINE:1259)\l}"];
Node_48 [shape=record,label="{48\:\ 0x001e|0x001e: IF  (r6 I:??[int, byte, short, char] A[D('viewTop' int)]) \>= (r15 I:??[int, byte, short, char] A[D('bottom' int)])  \-\> B:77:0x0051 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0020|0x0020: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1265)\l0x0021: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0022|0x0022: IF  (r14 I:??[int, byte, short, char] A[D('top' int)]) \>= (r6 I:??[int, byte, short, char] A[D('viewTop' int)])  \-\> B:53:0x0028 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0024|0x0024: IF  (r7 I:??[int, byte, short, char] A[D('viewBottom' int)]) \>= (r15 I:??[int, byte, short, char] A[D('bottom' int)])  \-\> B:53:0x0028 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0026|0x0026: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|0x0029: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('focusCandidate' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x002e  (LINE:1267)\l}"];
Node_55 [shape=record,label="{55\:\ 0x002b|0x002b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('focusCandidate' android.view.View)]) = (r5 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:1269)\l0x002c: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('foundFullyContainedFocusable' boolean)]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('viewIsFullyContained' boolean)])  (LINE:1270)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0051|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0051|LOOP_END\lLOOP:0: B:45:0x000c\-\>B:72:0x0051\l|0x0051: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:1254)\l}"];
Node_56 [shape=record,label="{56\:\ 0x002e|0x002e: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('topFocus' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0036  (LINE:1272)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0030|0x0030: INVOKE  (r11 I:int) = (r1 I:android.view.View A[D('focusCandidate' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1273)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0034|0x0034: IF  (r6 I:??[int, byte, short, char] A[D('viewTop' int)]) \< (r11 I:??[int, byte, short, char])  \-\> B:62:0x003e \l}"];
Node_62 [shape=record,label="{62\:\ 0x003e|0x003e: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0041|0x0041: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('foundFullyContainedFocusable' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0049  (LINE:1276)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0043|0x0043: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewIsFullyContained' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0051  (LINE:1277)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0045|0x0045: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewIsCloserToBoundary' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0051 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0047|0x0047: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('focusCandidate' android.view.View)]) = (r5 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:1283)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0051|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0051|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0051|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0049|0x0049: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewIsFullyContained' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x004e  (LINE:1286)\l}"];
Node_69 [shape=record,label="{69\:\ 0x004b|0x004b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('focusCandidate' android.view.View)]) = (r5 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:1288)\l0x004c: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('foundFullyContainedFocusable' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1289)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0051|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x004e|0x004e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewIsCloserToBoundary' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x0051  (LINE:1290)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0050|0x0050: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('focusCandidate' android.view.View)]) = (r5 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:1295)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0051|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0051|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0036|0x0036: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('topFocus' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0041 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0038|0x0038: INVOKE  (r11 I:int) = (r1 I:android.view.View A[D('focusCandidate' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:1274)\l}"];
Node_61 [shape=record,label="{61\:\ 0x003c|0x003c: IF  (r7 I:??[int, byte, short, char] A[D('viewBottom' int)]) \<= (r11 I:??[int, byte, short, char])  \-\> B:64:0x0041 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0028|0x0028: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x0051|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0051|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0054|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0054|RETURN\l|0x0054: RETURN  (r1 I:android.view.View A[D('focusCandidate' android.view.View)])  (LINE:1302)\l}"];
Node_43 [shape=record,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.view.View androidx.core.widget.NestedScrollView.findFocusableViewInBounds((r12 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r13 I:boolean A[D('topFocus' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:72:0x0051 \-\> B:45:0x000c, CROSS_EDGE: B:67:0x0047 \-\> B:72:0x0051, CROSS_EDGE: B:66:0x0045 \-\> B:72:0x0051, CROSS_EDGE: B:65:0x0043 \-\> B:72:0x0051, CROSS_EDGE: B:69:0x004b \-\> B:72:0x0051, CROSS_EDGE: B:71:0x0050 \-\> B:72:0x0051, CROSS_EDGE: B:70:0x004e \-\> B:72:0x0051, CROSS_EDGE: B:61:0x003c \-\> B:64:0x0041, CROSS_EDGE: B:59:0x0036 \-\> B:64:0x0041, CROSS_EDGE: B:58:0x0034 \-\> B:62:0x003e, CROSS_EDGE: B:56:0x002e \-\> B:59:0x0036, CROSS_EDGE: B:53:0x0028 \-\> B:54:0x0029, CROSS_EDGE: B:50:0x0022 \-\> B:53:0x0028, CROSS_EDGE: B:48:0x001e \-\> B:72:0x0051, CROSS_EDGE: B:47:0x001c \-\> B:72:0x0051\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0051: r5 'view' Landroid\/view\/View;\l  0x0018\-0x0051: r6 'viewTop' I\l  0x001c\-0x0051: r7 'viewBottom' I\l  0x0041\-0x0051: r8 'viewIsCloserToBoundary' Z\l  0x0029\-0x0051: r10 'viewIsFullyContained' Z\l  0x000c\-0x0054: r4 'i' I\l  0x0005\-0x0054: r0 'focusables' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/view\/View;\>;\l  0x0006\-0x0054: r1 'focusCandidate' Landroid\/view\/View;\l  0x0007\-0x0054: r2 'foundFullyContainedFocusable' Z\l  0x000b\-0x0054: r3 'count' I\l  \-1 \-0x0054: r13 'topFocus' Z\l  \-1 \-0x0054: r14 'top' I\l  \-1 \-0x0054: r15 'bottom' I\l}"];
MethodNode -> Node_42;Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_74;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_76;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_77;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_53;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_78;
Node_78 -> Node_72;
Node_72 -> Node_45;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_59;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_62;
Node_62 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_68;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_79;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_80;
Node_67 -> Node_81;
Node_81 -> Node_72;
Node_80 -> Node_72;
Node_79 -> Node_72;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_82;
Node_82 -> Node_72;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_83;
Node_71 -> Node_75;
Node_75 -> Node_72;
Node_83 -> Node_72;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_64;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_64;
Node_53 -> Node_54;
Node_77 -> Node_72;
Node_76 -> Node_72;
Node_74 -> Node_73;
Node_73 -> Node_43;
}

