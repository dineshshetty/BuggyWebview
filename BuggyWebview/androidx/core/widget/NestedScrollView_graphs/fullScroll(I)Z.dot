digraph "CFG forandroidx.core.widget.NestedScrollView.fullScroll(I)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r9 != 130) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|r1 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|PHI: r1 \l  PHI: (r1v2 'down' boolean) = (r1v1 'down' boolean), (r1v3 'down' boolean) binds: [B:18:0x0007, B:17:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = getHeight()\lr8.mTempRect.top = 0\lr8.mTempRect.bottom = r2\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|if (r1 == false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|int r0 = getChildCount()\l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|if (r0 \<= 0) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|android.view.View r3 = getChildAt(r0 + (\-1))\landroid.widget.FrameLayout$LayoutParams r4 = (android.widget.FrameLayout.LayoutParams) r3.getLayoutParams()\landroid.graphics.Rect r5 = r8.mTempRect\lr5.bottom = (r3.getBottom() + r4.bottomMargin) + getPaddingBottom()\landroid.graphics.Rect r5 = r8.mTempRect\lr5.top = r5.bottom \- r2\l}"];
Node_24 [shape=record,label="{24\:\ 0x003f}"];
Node_25 [shape=record,label="{25\:\ 0x004b|RETURN\l|return scrollAndFocus(r9, r8.mTempRect.top, r8.mTempRect.bottom)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|r1 = false\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.widget.NestedScrollView.fullScroll((r8v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r9v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001a \-\> B:24:0x003f, CROSS_EDGE: B:20:0x0014 \-\> B:24:0x003f, CROSS_EDGE: B:18:0x0007 \-\> B:19:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_18 -> Node_19;
}

