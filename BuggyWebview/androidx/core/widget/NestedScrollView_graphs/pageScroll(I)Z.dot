digraph "CFG forandroidx.core.widget.NestedScrollView.pageScroll(I)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0003|if (r9 != 130) goto L17\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|r1 = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|PHI: r1 \l  PHI: (r1v2 'down' boolean) = (r1v1 'down' boolean), (r1v3 'down' boolean) binds: [B:24:0x0007, B:23:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = getHeight()\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|if (r1 == false) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|android.graphics.Rect r0 = r8.mTempRect\lr0.top = getScrollY() + r2\lint r0 = getChildCount()\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|if (r0 \<= 0) goto L11\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|android.view.View r3 = getChildAt(r0 + (\-1))\landroid.widget.FrameLayout$LayoutParams r4 = (android.widget.FrameLayout.LayoutParams) r3.getLayoutParams()\lint r5 = (r3.getBottom() + r4.bottomMargin) + getPaddingBottom()\l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|if ((r8.mTempRect.top + r2) \<= r5) goto L11\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|int r7 = r5 \- r2\lr8.mTempRect.top = r7\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|android.graphics.Rect r0 = r8.mTempRect\lr0.bottom = r0.top + r2\l}"];
Node_37 [shape=record,label="{37\:\ 0x0069|RETURN\l|return scrollAndFocus(r9, r8.mTempRect.top, r8.mTempRect.bottom)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0043|android.graphics.Rect r3 = r8.mTempRect\lr3.top = getScrollY() \- r2\l}"];
Node_34 [shape=record,label="{34\:\ 0x0050|if (r8.mTempRect.top \>= 0) goto L11\l}"];
Node_35 [shape=record,label="{35\:\ 0x0052|r8.mTempRect.top = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|r1 = false\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.widget.NestedScrollView.pageScroll((r8v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r9v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x003a \-\> B:36:0x0056, CROSS_EDGE: B:28:0x001b \-\> B:36:0x0056, CROSS_EDGE: B:35:0x0052 \-\> B:36:0x0056, CROSS_EDGE: B:34:0x0050 \-\> B:36:0x0056, CROSS_EDGE: B:24:0x0007 \-\> B:25:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_36;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_24 -> Node_25;
}

