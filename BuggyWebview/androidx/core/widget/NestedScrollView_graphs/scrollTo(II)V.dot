digraph "CFG forandroidx.core.widget.NestedScrollView.scrollTo(II)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0004|if (getChildCount() \<= 0) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|android.view.View r0 = getChildAt(0)\landroid.widget.FrameLayout$LayoutParams r1 = (android.widget.FrameLayout.LayoutParams) r0.getLayoutParams()\lint r2 = (getWidth() \- getPaddingLeft()) \- getPaddingRight()\lint r3 = (r0.getWidth() + r1.leftMargin) + r1.rightMargin\lint r4 = (getHeight() \- getPaddingTop()) \- getPaddingBottom()\lint r5 = (r0.getHeight() + r1.topMargin) + r1.bottomMargin\lint r8 = clamp(r8, r2, r3)\lint r9 = clamp(r9, r4, r5)\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|if (r8 != getScrollX()) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f}"];
Node_19 [shape=record,label="{19\:\ 0x0053|if (r9 == getScrollY()) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|super.scrollTo(r8, r9)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|RETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.core.widget.NestedScrollView.scrollTo((r7v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r8v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0053 \-\> B:21:0x0058, CROSS_EDGE: B:17:0x004d \-\> B:20:0x0055, CROSS_EDGE: B:15:0x0004 \-\> B:21:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.scrollTo(int, int):void\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_23 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_13;
}

