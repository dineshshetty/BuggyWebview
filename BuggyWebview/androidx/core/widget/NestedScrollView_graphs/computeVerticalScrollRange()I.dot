digraph "CFG forandroidx.core.widget.NestedScrollView.computeVerticalScrollRange()I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|int r0 = getChildCount()\lint r1 = (getHeight() \- getPaddingBottom()) \- getPaddingTop()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|if (r0 != 0) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|RETURN\l|return r1\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|android.view.View r3 = getChildAt(0)\landroid.widget.FrameLayout$LayoutParams r4 = (android.widget.FrameLayout.LayoutParams) r3.getLayoutParams()\lint r5 = r3.getBottom() + r4.bottomMargin\lint r6 = getScrollY()\lint r2 = java.lang.Math.max(0, r5 \- r1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0031|if (r6 \>= 0) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0033}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return r5 \- r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|if (r6 \<= r2) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x0037}"];
Node_23 [shape=record,label="{23\:\ 0x003a|RETURN\lORIG_RETURN\l|return r5 + (r6 \- r2)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
MethodNode[shape=record,label="{public int androidx.core.widget.NestedScrollView.computeVerticalScrollRange((r8v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x003a \-\> B:14:?, CROSS_EDGE: B:22:0x0037 \-\> B:23:0x003a, CROSS_EDGE: B:21:0x0035 \-\> B:23:0x003a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.computeVerticalScrollRange():int\}, androidx.core.view.ScrollingView.computeVerticalScrollRange():int]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_24;
Node_24 -> Node_14;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
}

