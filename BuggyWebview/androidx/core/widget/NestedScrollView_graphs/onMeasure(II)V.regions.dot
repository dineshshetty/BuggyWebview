digraph "CFG forandroidx.core.widget.NestedScrollView.onMeasure(II)V" {
subgraph cluster_Region_2135981744 {
label = "R(2:1|(2:(1:3)|(2:5|(1:(2:10|(1:(1:12)))))))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|super.onMeasure(r8, r9)\l}"];
subgraph cluster_Region_557830848 {
label = "R(2:(1:3)|(2:5|(1:(2:10|(1:(1:12))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1075767886 {
label = "IF [B:19:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0005|if (r7.mFillViewport == false) goto L3\l}"];
subgraph cluster_Region_443481536 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0007|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_582355752 {
label = "R(2:5|(1:(2:10|(1:(1:12)))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0008|int int r0 = android.view.View.MeasureSpec.getMode(r9)\l}"];
subgraph cluster_Region_1714922947 {
label = "R(1:(2:10|(1:(1:12))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1914833112 {
label = "IF [B:22:0x000c, B:25:0x0013] THEN: R(2:10|(1:(1:12))) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000c|if (r0 != 0) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|ADDED_TO_REGION\l|if (getChildCount() \> 0) goto L10\l}"];
subgraph cluster_Region_1031644036 {
label = "R(2:10|(1:(1:12)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0015|android.view.View android.view.View r1 = getChildAt(0)\landroid.widget.FrameLayout$LayoutParams android.widget.FrameLayout.LayoutParams r2 = (android.widget.FrameLayout.LayoutParams) r1.getLayoutParams()\lint int r3 = r1.getMeasuredHeight()\lint int r4 = (((getMeasuredHeight() \- getPaddingTop()) \- getPaddingBottom()) \- r2.topMargin) \- r2.bottomMargin\l}"];
subgraph cluster_Region_968999447 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_450718004 {
label = "IF [B:27:0x0038] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0038|if (r3 \< r4) goto L12\l}"];
subgraph cluster_Region_144755779 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x003b|int int r5 = getChildMeasureSpec(r8, getPaddingLeft() + getPaddingRight() + r2.leftMargin + r2.rightMargin, r2.width)\lint int r6 = android.view.View.MeasureSpec.makeMeasureSpec(r4, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr1.measure(r5, r6)\l}"];
}
}
}
}
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000e|RETURN\lADDED_TO_REGION\l|return\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000f}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0059|ORIG_RETURN\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void androidx.core.widget.NestedScrollView.onMeasure((r7v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r8v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x000e \-\> B:17:?, CROSS_EDGE: B:29:0x0059 \-\> B:17:?, CROSS_EDGE: B:27:0x0038 \-\> B:29:0x0059, CROSS_EDGE: B:25:0x0013 \-\> B:29:0x0059\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_30[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_28 -> Node_29;
Node_16 -> Node_18;
Node_23 -> Node_17;
Node_24 -> Node_25;
Node_29 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_17;
}

