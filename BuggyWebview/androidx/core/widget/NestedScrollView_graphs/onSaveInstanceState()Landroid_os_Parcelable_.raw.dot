digraph "CFG forandroidx.core.widget.NestedScrollView.onSaveInstanceState()Landroid\/os\/Parcelable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Parcelable) = (r3 I:android.widget.FrameLayout) type: SUPER call: android.widget.FrameLayout.onSaveInstanceState():android.os.Parcelable A[MD:():android.os.Parcelable (s)] (LINE:2209)\l0x0004: NEW_INSTANCE  (r1 I:androidx.core.widget.NestedScrollView$SavedState) =  androidx.core.widget.NestedScrollView$SavedState  (LINE:2210)\l0x0006: INVOKE  \l  (r1 I:androidx.core.widget.NestedScrollView$SavedState)\l  (r0 I:android.os.Parcelable A[D('superState' android.os.Parcelable)])\l type: DIRECT call: androidx.core.widget.NestedScrollView.SavedState.\<init\>(android.os.Parcelable):void A[MD:(android.os.Parcelable):void (m)]\l0x0009: INVOKE  (r2 I:int) = (r3 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:2211)\l0x000d: IPUT  \l  (r2 I:int)\l  (r1 I:androidx.core.widget.NestedScrollView$SavedState A[D('ss' androidx.core.widget.NestedScrollView$SavedState)])\l androidx.core.widget.NestedScrollView.SavedState.scrollPosition int \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:android.os.Parcelable A[D('ss' androidx.core.widget.NestedScrollView$SavedState)])  (LINE:2212)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected android.os.Parcelable androidx.core.widget.NestedScrollView.onSaveInstanceState((r3 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x000f: r0 'superState' Landroid\/os\/Parcelable;\l  0x0009\-0x000f: r1 'ss' Landroidx\/core\/widget\/NestedScrollView$SavedState;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onSaveInstanceState():android.os.Parcelable\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

