digraph "CFG forandroidx.core.widget.NestedScrollView.onSizeChanged(IIII)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|super.onSizeChanged(r3, r4, r5, r6)\landroid.view.View r0 = findFocus()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|if (r0 == null) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|if (r2 != r0) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c}"];
Node_20 [shape=record,label="{20\:\ 0x0011|if (isWithinDeltaOfScreen(r0, 0, r6) == false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|r0.getDrawingRect(r2.mTempRect)\loffsetDescendantRectToMyCoords(r0, r2.mTempRect)\lint r1 = computeScrollDeltaToGetChildRectOnScreen(r2.mTempRect)\ldoScrollY(r1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void androidx.core.widget.NestedScrollView.onSizeChanged((r2v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r3v0 'w' int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'h' int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'oldw' int A[D('oldw' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'oldh' int A[D('oldh' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x0011 \-\> B:22:0x0026, CROSS_EDGE: B:23:0x0027 \-\> B:14:?, CROSS_EDGE: B:16:0x0007 \-\> B:23:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onSizeChanged(int, int, int, int):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_19;
Node_17 -> Node_25[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_24 -> Node_14;
Node_25 -> Node_14;
Node_23 -> Node_14;
}

