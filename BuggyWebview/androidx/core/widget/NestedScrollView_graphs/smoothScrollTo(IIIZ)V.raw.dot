digraph "CFG forandroidx.core.widget.NestedScrollView.smoothScrollTo(IIIZ)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r2 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollX():int A[MD:():int (s)] (LINE:1602)\l0x0004: ARITH  (r0 I:int) = (r3 I:int A[D('x' int)]) \- (r0 I:int) \l0x0006: INVOKE  (r1 I:int) = (r2 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)]\l0x000a: ARITH  (r1 I:int) = (r4 I:int A[D('y' int)]) \- (r1 I:int) \l0x000c: INVOKE  \l  (r2 I:androidx.core.widget.NestedScrollView)\l  (r0 I:int)\l  (r1 I:int)\l  (r5 I:int A[D('scrollDurationMs' int)])\l  (r6 I:boolean A[D('withNestedScrolling' boolean)])\l type: DIRECT call: androidx.core.widget.NestedScrollView.smoothScrollBy(int, int, int, boolean):void A[MD:(int, int, int, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:1603)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.core.widget.NestedScrollView.smoothScrollTo((r2 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('scrollDurationMs' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('withNestedScrolling' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r3 'x' I\l  \-1 \-0x000f: r4 'y' I\l  \-1 \-0x000f: r5 'scrollDurationMs' I\l  \-1 \-0x000f: r6 'withNestedScrolling' Z\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

