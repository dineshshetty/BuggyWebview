digraph "CFG forandroidx.core.widget.NestedScrollView.scrollAndFocus(III)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1388)\l0x0001: INVOKE  (r1 I:int) = (r7 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getHeight():int A[MD:():int (s)] (LINE:1390)\l0x0005: INVOKE  (r2 I:int) = (r7 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:1391)\l0x0009: ARITH  (r3 I:int) = (r2 I:int A[D('containerTop' int)]) + (r1 I:int A[D('height' int)])  (LINE:1392)\l0x000b: CONST  (r4 I:??[int, float, short, byte, char]) = (33 ??[int, float, short, byte, char])  (LINE:1393)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('direction' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0011 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|0x000f: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: INVOKE  (r5 I:android.view.View) = \l  (r7 I:androidx.core.widget.NestedScrollView)\l  (r4 I:boolean A[D('up' boolean)])\l  (r9 I:int A[D('top' int)])\l  (r10 I:int A[D('bottom' int)])\l type: DIRECT call: androidx.core.widget.NestedScrollView.findFocusableViewInBounds(boolean, int, int):android.view.View A[MD:(boolean, int, int):android.view.View (m)] (LINE:1395)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newFocused' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0019  (LINE:1396)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('newFocused' android.view.View)]) = (r7 I:??[OBJECT, ARRAY])  (LINE:1397)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|0x0019: IF  (r9 I:??[int, byte, short, char] A[D('top' int)]) \< (r2 I:??[int, byte, short, char] A[D('containerTop' int)])  \-\> B:32:0x001f  (LINE:1400)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: IF  (r10 I:??[int, byte, short, char] A[D('bottom' int)]) \> (r3 I:??[int, byte, short, char] A[D('containerBottom' int)])  \-\> B:32:0x001f \l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('handled' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1401)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|0x0029: INVOKE  (r6 I:android.view.View) = (r7 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.findFocus():android.view.View A[MD:():android.view.View (s)] (LINE:1407)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newFocused' android.view.View)]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0032 \l}"];
Node_38 [shape=record,label="{38\:\ 0x002f|0x002f: INVOKE  (r5 I:android.view.View A[D('newFocused' android.view.View)]), (r8 I:int A[D('direction' int)]) type: VIRTUAL call: android.view.View.requestFocus(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0032|RETURN\l|0x0032: RETURN  (r0 I:boolean A[D('handled' boolean)])  (LINE:1409)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('up' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0024  (LINE:1403)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|0x0021: ARITH  (r6 I:int) = (r9 I:int A[D('top' int)]) \- (r2 I:int A[D('containerTop' int)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|0x0026: INVOKE  (r7 I:androidx.core.widget.NestedScrollView), (r6 I:int A[D('delta' int)]) type: DIRECT call: androidx.core.widget.NestedScrollView.doScrollY(int):void A[MD:(int):void (m)] (LINE:1404)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|0x0024: ARITH  (r6 I:int) = (r10 I:int A[D('bottom' int)]) \- (r3 I:int A[D('containerBottom' int)]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|0x0011: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private boolean androidx.core.widget.NestedScrollView.scrollAndFocus((r7 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x002d \-\> B:39:0x0032, CROSS_EDGE: B:35:0x0026 \-\> B:36:0x0029, CROSS_EDGE: B:34:0x0024 \-\> B:35:0x0026, CROSS_EDGE: B:29:0x0019 \-\> B:32:0x001f, CROSS_EDGE: B:27:0x0016 \-\> B:29:0x0019, CROSS_EDGE: B:25:0x0011 \-\> B:26:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x0029: r6 'delta' I\l  0x0001\-0x0032: r0 'handled' Z\l  0x0005\-0x0032: r1 'height' I\l  0x0009\-0x0032: r2 'containerTop' I\l  0x000b\-0x0032: r3 'containerBottom' I\l  0x0012\-0x0032: r4 'up' Z\l  0x0016\-0x0032: r5 'newFocused' Landroid\/view\/View;\l  \-1 \-0x0032: r8 'direction' I\l  \-1 \-0x0032: r9 'top' I\l  \-1 \-0x0032: r10 'bottom' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_34 -> Node_35;
Node_25 -> Node_26;
}

