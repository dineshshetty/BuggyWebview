digraph "CFG forandroidx.core.widget.NestedScrollView.isViewDescendantOf(Landroid\/view\/View;Landroid\/view\/View;)Z" {
subgraph cluster_Region_1709176605 {
label = "R(1:(2:(1:3)|(2:5|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_2112357196 {
label = "R(2:(1:3)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_18624208 {
label = "IF [B:16:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0001|if (r3 == r4) goto L3\l}"];
subgraph cluster_Region_1087581502 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1509196506 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0004|android.view.ViewParent android.view.ViewParent r1 = r3.getParent()\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|return (r1 instanceof android.view.ViewGroup) && isViewDescendantOf((android.view.View) r1, r4)\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000c}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0013|REMOVE\lADDED_TO_REGION\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0016|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.widget.NestedScrollView.isViewDescendantOf((r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'parent' android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0017 \-\> B:14:?, CROSS_EDGE: B:21:0x0013 \-\> B:24:0x0017, CROSS_EDGE: B:19:0x000a \-\> B:23:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_23;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25;
Node_25 -> Node_14;
Node_23 -> Node_14;
}

