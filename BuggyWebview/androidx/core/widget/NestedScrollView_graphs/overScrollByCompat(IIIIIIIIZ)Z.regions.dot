digraph "CFG forandroidx.core.widget.NestedScrollView.overScrollByCompat(IIIIIIIIZ)Z" {
subgraph cluster_Region_1408643314 {
label = "R(15:1|2|5|7|11|15|(1:45)(1:17)|18|(1:44)(1:20)|21|(1:23)(1:(1:43)(1:42))|(1:26)(1:(1:40)(1:39))|(1:30)|31|32) | DECL_VAR: int maxOverScrollX, int maxOverScrollY, boolean clampedX, boolean clampedY\l";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0000|int int r1 = getOverScrollMode()\l}"];
Node_58 [shape=record,label="{58\:\ 0x0010|boolean r2 = computeHorizontalScrollRange() \> computeHorizontalScrollExtent()\l}"];
Node_62 [shape=record,label="{62\:\ 0x001e|boolean r3 = computeVerticalScrollRange() \> computeVerticalScrollExtent()\l}"];
Node_65 [shape=record,label="{65\:\ 0x0023|PHI: r3 \l  PHI: (r3v3 'canScrollVertical' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r6 = r1 == 0 \|\| (r1 == 1 && r2)\l}"];
Node_71 [shape=record,label="{71\:\ 0x002d|PHI: r6 \l  PHI: (r6v2 'overScrollHorizontal' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r7 = r1 == 0 \|\| (r1 == 1 && r3)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0037|PHI: r7 \l  PHI: (r7v1 'overScrollVertical' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r8 = r29 + r27\l}"];
subgraph cluster_IfRegion_451749513 {
label = "IF [B:78:0x0039] THEN: R(1:45) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0039|if (r6 != false) goto L45\l}"];
subgraph cluster_Region_1627352755 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x003d|r9 = r33\l}"];
}
subgraph cluster_Region_826867475 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x003b|r9 = 0\l}"];
}
}
Node_81 [shape=record,label="{81\:\ 0x003f|PHI: r9 \l  PHI: (r9v1 'maxOverScrollX' int) = (r9v0 'maxOverScrollX' int), (r9v2 'maxOverScrollX' int) binds: [B:80:0x003d, B:79:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|int int r10 = r30 + r28\l}"];
subgraph cluster_IfRegion_556876612 {
label = "IF [B:82:0x0041] THEN: R(1:44) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x0041|if (r7 != false) goto L44\l}"];
subgraph cluster_Region_93444166 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x0045|r11 = r34\l}"];
}
subgraph cluster_Region_1878834764 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x0043|r11 = 0\l}"];
}
}
Node_85 [shape=record,label="{85\:\ 0x0047|PHI: r11 \l  PHI: (r11v1 'maxOverScrollY' int) = (r11v0 'maxOverScrollY' int), (r11v2 'maxOverScrollY' int) binds: [B:84:0x0045, B:83:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|int int r12 = \-r9\lint int r13 = r9 + r31\lint int r14 = \-r11\lint int r15 = r11 + r32\l}"];
subgraph cluster_IfRegion_935123780 {
label = "IF [B:86:0x004f] THEN: R(1:23) ELSE: R(1:(1:43)(1:42))";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x004f|if (r8 \> r13) goto L23\l}"];
subgraph cluster_Region_1150710833 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_87 [shape=record,label="{87\:\ 0x0051|r8 = r13\lr4 = true\l}"];
}
subgraph cluster_Region_1199963616 {
label = "R(1:(1:43)(1:42)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_473732500 {
label = "IF [B:88:0x0057] THEN: R(1:43) ELSE: R(1:42) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_88 [shape=record,label="{88\:\ 0x0057|if (r8 \>= r12) goto L43\l}"];
subgraph cluster_Region_357670319 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x005f|r4 = false\l}"];
}
subgraph cluster_Region_646295987 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_89 [shape=record,label="{89\:\ 0x0059|r8 = r12\lr4 = true\l}"];
}
}
}
}
subgraph cluster_IfRegion_953696757 {
label = "IF [B:92:0x0063] THEN: R(1:26) ELSE: R(1:(1:40)(1:39))";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x0063|if (r10 \> r15) goto L26\l}"];
subgraph cluster_Region_600390089 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_93 [shape=record,label="{93\:\ 0x0065|r10 = r15\lr5 = true\l}"];
}
subgraph cluster_Region_1524561369 {
label = "R(1:(1:40)(1:39)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1319010714 {
label = "IF [B:94:0x006b] THEN: R(1:40) ELSE: R(1:39) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x006b|if (r10 \>= r14) goto L40\l}"];
subgraph cluster_Region_796478670 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_96 [shape=record,label="{96\:\ 0x0073|r5 = false\l}"];
}
subgraph cluster_Region_1235242139 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_95 [shape=record,label="{95\:\ 0x006d|r10 = r14\lr5 = true\l}"];
}
}
}
}
subgraph cluster_IfRegion_1634094847 {
label = "IF [B:97:0x0075, B:99:0x007e] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x0075|PHI: r5 r10 \l  PHI: (r5v3 'clampedY' boolean) = (r5v1 'clampedY' boolean), (r5v2 'clampedY' boolean), (r5v4 'clampedY' boolean) binds: [B:96:0x0073, B:95:0x006d, B:93:0x0065] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 'newScrollY' int) = (r10v0 'newScrollY' int), (r10v1 'newScrollY' int), (r10v3 'newScrollY' int) binds: [B:96:0x0073, B:95:0x006d, B:93:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != false) goto L28\l}"];
Node_99 [shape=record,label="{99\:\ 0x007e|ADDED_TO_REGION\l|if (hasNestedScrollingParent(1) == false) goto L30\l}"];
subgraph cluster_Region_398436233 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_100 [shape=record,label="{100\:\ 0x0080|r26.mScroller.springBack(r8, r10, 0, 0, 0, getScrollRange())\l}"];
}
}
Node_102 [shape=record,label="{102\:\ 0x0098|ADDED_TO_REGION\l|onOverScrolled(r8, r10, r4, r5)\l}"];
Node_103 [shape=record,label="{103\:\ 0x009b|RETURN\l|return r4 \|\| r5\l}"];
}
Node_55 [shape=record,color=red,label="{55\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0012}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0015|PHI: r2 \l  PHI: (r2v2 'canScrollHorizontal' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0020}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0025|REMOVE\lADDED_TO_REGION\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0027|REMOVE\lADDED_TO_REGION\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x002a}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x002f|REMOVE\lADDED_TO_REGION\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x0031|REMOVE\lADDED_TO_REGION\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0034}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0061|PHI: r4 r8 \l  PHI: (r4v2 'clampedX' boolean) = (r4v0 'clampedX' boolean), (r4v1 'clampedX' boolean), (r4v3 'clampedX' boolean) binds: [B:90:0x005f, B:89:0x0059, B:87:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'newScrollX' int) = (r8v0 'newScrollX' int), (r8v1 'newScrollX' int), (r8v3 'newScrollX' int) binds: [B:90:0x005f, B:89:0x0059, B:87:0x0051] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0077}"];
Node_104 [shape=record,color=red,label="{104\:\ 0x009d|REMOVE\lADDED_TO_REGION\l}"];
Node_106 [shape=record,color=red,label="{106\:\ 0x00a0|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_107 [shape=record,color=red,label="{107\:\ 0x00a3|ORIG_RETURN\l}"];
Node_101 [shape=record,color=red,label="{101\:\ 0x0096|ADDED_TO_REGION\l}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x0036}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x002c}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0022}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0014}"];
MethodNode[shape=record,label="{boolean androidx.core.widget.NestedScrollView.overScrollByCompat((r26v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r27v0 'deltaX' int A[D('deltaX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'deltaY' int A[D('deltaY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 'scrollX' int A[D('scrollX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 'scrollY' int A[D('scrollY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 'scrollRangeX' int A[D('scrollRangeX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'scrollRangeY' int A[D('scrollRangeY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 'maxOverScrollX' int A[D('maxOverScrollX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'maxOverScrollY' int A[D('maxOverScrollY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 'isTouchEvent' boolean A[D('isTouchEvent' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:107:0x00a3 \-\> B:108:0x00a5, CROSS_EDGE: B:103:0x009b \-\> B:107:0x00a3, CROSS_EDGE: B:99:0x007e \-\> B:102:0x0098, CROSS_EDGE: B:101:0x0096 \-\> B:102:0x0098, CROSS_EDGE: B:95:0x006d \-\> B:97:0x0075, CROSS_EDGE: B:96:0x0073 \-\> B:97:0x0075, CROSS_EDGE: B:89:0x0059 \-\> B:91:0x0061, CROSS_EDGE: B:90:0x005f \-\> B:91:0x0061, CROSS_EDGE: B:84:0x0045 \-\> B:85:0x0047, CROSS_EDGE: B:80:0x003d \-\> B:81:0x003f, CROSS_EDGE: B:76:0x0036 \-\> B:77:0x0037, CROSS_EDGE: B:72:0x002f \-\> B:75:0x0034, CROSS_EDGE: B:71:0x002d \-\> B:76:0x0036, CROSS_EDGE: B:70:0x002c \-\> B:71:0x002d, CROSS_EDGE: B:66:0x0025 \-\> B:69:0x002a, CROSS_EDGE: B:65:0x0023 \-\> B:70:0x002c, CROSS_EDGE: B:64:0x0022 \-\> B:65:0x0023, CROSS_EDGE: B:60:0x0014 \-\> B:61:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_55;Node_57 -> Node_58;
Node_58 -> Node_59;
Node_58 -> Node_60;
Node_62 -> Node_63;
Node_62 -> Node_64;
Node_65 -> Node_66;
Node_65 -> Node_70;
Node_71 -> Node_72;
Node_71 -> Node_76;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_80 -> Node_81;
Node_79 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_84 -> Node_85;
Node_83 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_86 -> Node_88[style=dashed];
Node_87 -> Node_91;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_90 -> Node_91;
Node_89 -> Node_91;
Node_92 -> Node_93;
Node_92 -> Node_94[style=dashed];
Node_93 -> Node_97;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_96 -> Node_97;
Node_95 -> Node_97;
Node_97 -> Node_98;
Node_97 -> Node_101[style=dashed];
Node_99 -> Node_100;
Node_99 -> Node_102[style=dashed];
Node_100 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_104;
Node_103 -> Node_107;
Node_55 -> Node_57;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_63 -> Node_65;
Node_66 -> Node_67;
Node_66 -> Node_69;
Node_67 -> Node_69;
Node_67 -> Node_70;
Node_69 -> Node_71;
Node_72 -> Node_73;
Node_72 -> Node_75;
Node_73 -> Node_75;
Node_73 -> Node_76;
Node_75 -> Node_77;
Node_91 -> Node_92;
Node_98 -> Node_99;
Node_104 -> Node_106;
Node_104 -> Node_107;
Node_106 -> Node_56;
Node_107 -> Node_56;
Node_101 -> Node_102;
Node_76 -> Node_77;
Node_70 -> Node_71;
Node_64 -> Node_65;
Node_60 -> Node_61;
}

