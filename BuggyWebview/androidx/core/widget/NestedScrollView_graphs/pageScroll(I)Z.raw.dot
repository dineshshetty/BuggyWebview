digraph "CFG forandroidx.core.widget.NestedScrollView.pageScroll(I)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1318)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (130(0x82, float:1.82E\-43) ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|0x0003: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('direction' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0007 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: INVOKE  (r2 I:int) = (r8 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getHeight():int A[MD:():int (s)] (LINE:1319)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('down' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0043  (LINE:1321)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IGET  (r0 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1322)\l0x0010: INVOKE  (r3 I:int) = (r8 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)]\l0x0014: ARITH  (r3 I:int) = (r3 I:int) + (r2 I:int A[D('height' int)]) \l0x0015: IPUT  (r3 I:int), (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0017: INVOKE  (r0 I:int) = (r8 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getChildCount():int A[MD:():int (s)] (LINE:1323)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: IF  (r0 I:??[int, byte, short, char] A[D('count' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:36:0x0056  (LINE:1324)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|0x001d: ARITH  (r3 I:int) = (r0 I:int A[D('count' int)]) + (\-1 int)  (LINE:1325)\l0x001f: INVOKE  (r3 I:android.view.View) = (r8 I:androidx.core.widget.NestedScrollView), (r3 I:int) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x0023: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1326)\l0x0027: CHECK_CAST (r4 I:android.widget.FrameLayout$LayoutParams) = (android.widget.FrameLayout$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:1327)\l0x002d: IGET  (r6 I:int) = (r4 I:android.widget.FrameLayout$LayoutParams A[D('lp' android.widget.FrameLayout$LayoutParams)]) android.widget.FrameLayout.LayoutParams.bottomMargin int \l0x002f: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0030: INVOKE  (r6 I:int) = (r8 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getPaddingBottom():int A[MD:():int (s)]\l0x0034: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0035: IGET  (r6 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1328)\l0x0037: IGET  (r6 I:int) = (r6 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0039: ARITH  (r6 I:int) = (r6 I:int) + (r2 I:int A[D('height' int)]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|0x003a: IF  (r6 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char] A[D('bottom' int)])  \-\> B:36:0x0056 \l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|0x003c: IGET  (r6 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1329)\l0x003e: ARITH  (r7 I:int) = (r5 I:int A[D('bottom' int)]) \- (r2 I:int A[D('height' int)]) \l0x0040: IPUT  (r7 I:int), (r6 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|0x0056: IGET  (r0 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1338)\l0x0058: IGET  (r3 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x005a: ARITH  (r3 I:int) = (r3 I:int) + (r2 I:int A[D('height' int)]) \l0x005b: IPUT  (r3 I:int), (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x005d: IGET  (r0 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1340)\l0x005f: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0061: IGET  (r3 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect \l0x0063: IGET  (r3 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0065: INVOKE  (r0 I:boolean) = (r8 I:androidx.core.widget.NestedScrollView), (r9 I:int A[D('direction' int)]), (r0 I:int), (r3 I:int) type: DIRECT call: androidx.core.widget.NestedScrollView.scrollAndFocus(int, int, int):boolean A[MD:(int, int, int):boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0069|RETURN\l|0x0069: RETURN  (r0 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0043|0x0043: IGET  (r3 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1333)\l0x0045: INVOKE  (r4 I:int) = (r8 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)]\l0x0049: ARITH  (r4 I:int) = (r4 I:int) \- (r2 I:int A[D('height' int)]) \l0x004a: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l0x004c: IGET  (r3 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1334)\l0x004e: IGET  (r3 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_34 [shape=record,label="{34\:\ 0x0050|0x0050: IF  (r3 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:36:0x0056 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0052|0x0052: IGET  (r3 I:android.graphics.Rect) = (r8 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mTempRect android.graphics.Rect  (LINE:1335)\l0x0054: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.core.widget.NestedScrollView.pageScroll((r8 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x003a \-\> B:36:0x0056, CROSS_EDGE: B:28:0x001b \-\> B:36:0x0056, CROSS_EDGE: B:35:0x0052 \-\> B:36:0x0056, CROSS_EDGE: B:34:0x0050 \-\> B:36:0x0056, CROSS_EDGE: B:24:0x0007 \-\> B:25:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0042: r0 'count' I\l  0x0023\-0x0042: r3 'view' Landroid\/view\/View;\l  0x0029\-0x0042: r4 'lp' Landroid\/widget\/FrameLayout$LayoutParams;\l  0x0035\-0x0042: r5 'bottom' I\l  0x0008\-0x0069: r1 'down' Z\l  0x000c\-0x0069: r2 'height' I\l  \-1 \-0x0069: r9 'direction' I\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_36;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_24 -> Node_25;
}

