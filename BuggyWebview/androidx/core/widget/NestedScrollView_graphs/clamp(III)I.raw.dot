digraph "CFG forandroidx.core.widget.NestedScrollView.clamp(III)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IF  (r2 I:??[int, byte, short, char] A[D('my' int)]) \>= (r3 I:??[int, byte, short, char] A[D('child' int)])  \-\> B:23:0x000d  (LINE:2164)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r1 I:??[int, byte, short, char] A[D('n' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:18:0x0005 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: ARITH  (r0 I:int) = (r2 I:int A[D('my' int)]) + (r1 I:int A[D('n' int)])  (LINE:2182)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char] A[D('child' int)])  \-\> B:22:0x000c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: ARITH  (r0 I:int) = (r3 I:int A[D('child' int)]) \- (r2 I:int A[D('my' int)])  (LINE:2188)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:int A[D('n' int)])  (LINE:2190)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:2180)\l0x000e: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2180)\l0x000e: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int androidx.core.widget.NestedScrollView.clamp((r1 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('my' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('child' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000c \-\> B:14:?, CROSS_EDGE: B:24:0x000e \-\> B:14:?, CROSS_EDGE: B:15:0x0000 \-\> B:23:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r1 'n' I\l  \-1 \-0x000e: r2 'my' I\l  \-1 \-0x000e: r3 'child' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_18;
Node_16 -> Node_25[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_23 -> Node_14;
}

