digraph "CFG forandroidx.core.widget.NestedScrollView.onNestedScrollInternal(II[I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r11 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:334)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:335)\l0x0005: INVOKE  (r11 I:androidx.core.widget.NestedScrollView), (r1 I:int), (r12 I:int A[D('dyUnconsumed' int)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.scrollBy(int, int):void A[MD:(int, int):void (s)]\l0x0008: INVOKE  (r1 I:int) = (r11 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:336)\l0x000c: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int A[D('oldScrollY' int)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000d|0x000d: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumed' int[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0015  (LINE:338)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000f|0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:339)\l0x0010: AGET  (r3 I:??[int, float, short, byte, char]) = (r14 I:??[int, float][] A[D('consumed' int[])]), (r2 I:??[int, short, byte, char]) \l0x0012: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('myConsumed' int)]) \l0x0013: APUT  \l  (r14 I:??[int, float][] A[D('consumed' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: ARITH  (r10 I:int) = (r12 I:int A[D('dyUnconsumed' int)]) \- (r1 I:int A[D('myConsumed' int)])  (LINE:341)\l0x0017: IGET  (r2 I:androidx.core.view.NestedScrollingChildHelper) = (r11 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mChildHelper androidx.core.view.NestedScrollingChildHelper  (LINE:343)\l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('myConsumed' int)]) \l0x001d: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('myUnconsumed' int)]) \l0x001e: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)]) \l0x001f: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('consumed' int[])]) \l0x0020: INVOKE  \l  (r2 I:androidx.core.view.NestedScrollingChildHelper)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int[])\l  (r8 I:int)\l  (r9 I:int[])\l type: VIRTUAL call: androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int, int, int, int, int[], int, int[]):void A[MD:(int, int, int, int, int[], int, int[]):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:344)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.core.widget.NestedScrollView.onNestedScrollInternal((r11 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('dyUnconsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int[] A[D('consumed' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000d \-\> B:12:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0023: r0 'oldScrollY' I\l  0x000d\-0x0023: r1 'myConsumed' I\l  0x0017\-0x0023: r10 'myUnconsumed' I\l  \-1 \-0x0023: r12 'dyUnconsumed' I\l  \-1 \-0x0023: r13 'type' I\l  \-1 \-0x0023: r14 'consumed' [I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

