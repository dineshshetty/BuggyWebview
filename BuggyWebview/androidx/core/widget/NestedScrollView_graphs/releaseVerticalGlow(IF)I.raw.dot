digraph "CFG forandroidx.core.widget.NestedScrollView.releaseVerticalGlow(IF)I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1769)\l0x0001: INVOKE  (r1 I:int) = (r6 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getWidth():int A[MD:():int (s)] (LINE:1770)\l0x0005: CAST (r1 I:float) = (float) (r1 I:int) \l0x0006: ARITH  (r1 I:float) = (r8 I:float A[D('x' float)]) \/ (r1 I:float) \l0x0008: CAST (r2 I:float) = (float) (r7 I:int A[D('deltaY' int)])  (LINE:1771)\l0x0009: INVOKE  (r3 I:int) = (r6 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getHeight():int A[MD:():int (s)]\l0x000d: CAST (r3 I:float) = (float) (r3 I:int) \l0x000e: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x000f: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowTop android.widget.EdgeEffect  (LINE:1772)\l0x0011: INVOKE  (r3 I:float) = (r3 I:android.widget.EdgeEffect) type: STATIC call: androidx.core.widget.EdgeEffectCompat.getDistance(android.widget.EdgeEffect):float A[MD:(android.widget.EdgeEffect):float (m)]\l0x0015: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: CMP_L  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0032 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowTop android.widget.EdgeEffect  (LINE:1773)\l0x001c: NEG  (r5 I:float) = (r2 I:float A[D('pullDistance' float)]) \l0x001d: INVOKE  (r3 I:float) = (r3 I:android.widget.EdgeEffect), (r5 I:float), (r1 I:float A[D('displacement' float)]) type: STATIC call: androidx.core.widget.EdgeEffectCompat.onPullDistance(android.widget.EdgeEffect, float, float):float A[MD:(android.widget.EdgeEffect, float, float):float (m)]\l0x0021: NEG  (r0 I:float A[D('consumed' float)]) = (r3 I:float) \l0x0022: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowTop android.widget.EdgeEffect  (LINE:1774)\l0x0024: INVOKE  (r3 I:float) = (r3 I:android.widget.EdgeEffect) type: STATIC call: androidx.core.widget.EdgeEffectCompat.getDistance(android.widget.EdgeEffect):float A[MD:(android.widget.EdgeEffect):float (m)]\l0x0028: CMP_L  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0054 \l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|0x002c: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowTop android.widget.EdgeEffect  (LINE:1775)\l0x002e: INVOKE  (r3 I:android.widget.EdgeEffect) type: VIRTUAL call: android.widget.EdgeEffect.onRelease():void A[MD:():void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0054|0x0054: INVOKE  (r3 I:int) = (r6 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getHeight():int A[MD:():int (s)] (LINE:1784)\l0x0058: CAST (r3 I:float) = (float) (r3 I:int) \l0x0059: ARITH  (r3 I:float) = (r3 I:float) * (r0 I:float A[D('consumed' float)]) \l0x005b: INVOKE  (r3 I:int) = (r3 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|0x005f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pixelsConsumed' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0064  (LINE:1785)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0061|0x0061: INVOKE  (r6 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.invalidate():void A[MD:():void (s)] (LINE:1786)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0064|RETURN\l|0x0064: RETURN  (r3 I:int A[D('pixelsConsumed' int)])  (LINE:1788)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0032|0x0032: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowBottom android.widget.EdgeEffect  (LINE:1777)\l0x0034: INVOKE  (r3 I:float) = (r3 I:android.widget.EdgeEffect) type: STATIC call: androidx.core.widget.EdgeEffectCompat.getDistance(android.widget.EdgeEffect):float A[MD:(android.widget.EdgeEffect):float (m)]\l0x0038: CMP_L  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0054 \l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|0x003c: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowBottom android.widget.EdgeEffect  (LINE:1778)\l0x003e: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0040: ARITH  (r5 I:float) = (r5 I:float) \- (r1 I:float A[D('displacement' float)]) \l0x0041: INVOKE  (r0 I:float A[D('consumed' float)]) = (r3 I:android.widget.EdgeEffect), (r2 I:float A[D('pullDistance' float)]), (r5 I:float) type: STATIC call: androidx.core.widget.EdgeEffectCompat.onPullDistance(android.widget.EdgeEffect, float, float):float A[MD:(android.widget.EdgeEffect, float, float):float (m)]\l0x0045: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowBottom android.widget.EdgeEffect  (LINE:1780)\l0x0047: INVOKE  (r3 I:float) = (r3 I:android.widget.EdgeEffect) type: STATIC call: androidx.core.widget.EdgeEffectCompat.getDistance(android.widget.EdgeEffect):float A[MD:(android.widget.EdgeEffect):float (m)]\l0x004b: CMP_L  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x004d|0x004d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0054 \l}"];
Node_27 [shape=record,label="{27\:\ 0x004f|0x004f: IGET  (r3 I:android.widget.EdgeEffect) = (r6 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mEdgeGlowBottom android.widget.EdgeEffect  (LINE:1781)\l0x0051: INVOKE  (r3 I:android.widget.EdgeEffect) type: VIRTUAL call: android.widget.EdgeEffect.onRelease():void A[MD:():void (c)]\l}"];
MethodNode[shape=record,label="{private int androidx.core.widget.NestedScrollView.releaseVerticalGlow((r6 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('deltaY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x005f \-\> B:31:0x0064, CROSS_EDGE: B:21:0x002a \-\> B:28:0x0054, CROSS_EDGE: B:27:0x004f \-\> B:28:0x0054, CROSS_EDGE: B:26:0x004d \-\> B:28:0x0054, CROSS_EDGE: B:24:0x003a \-\> B:28:0x0054\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0064: r0 'consumed' F\l  0x0008\-0x0064: r1 'displacement' F\l  0x000f\-0x0064: r2 'pullDistance' F\l  0x005f\-0x0064: r3 'pixelsConsumed' I\l  \-1 \-0x0064: r7 'deltaY' I\l  \-1 \-0x0064: r8 'x' F\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
}

