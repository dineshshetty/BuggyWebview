digraph "CFG forandroidx.core.widget.NestedScrollView.smoothScrollBy(IIIZ)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:1534)\l0x0002: INVOKE  (r1 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getChildCount():int A[MD:():int (s)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0009 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:1536)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: INVOKE  (r1 I:long) =  type: STATIC call: android.view.animation.AnimationUtils.currentAnimationTimeMillis():long A[MD:():long (c)] (LINE:1538)\l0x000d: IGET  (r3 I:long) = (r0 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mLastScroll long \l0x000f: ARITH  (r1 I:long) = (r1 I:long) \- (r3 I:long) \l0x0010: CONST  (r3 I:??[long, double]) = (250(0xfa, double:1.235E\-321) ??[long, double])  (LINE:1539)\l0x0012: CMP_L  (r5 I:int) = (r1 I:long A[D('duration' long)]), (r3 I:long) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r5 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:22:0x0062 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1540)\l0x0017: INVOKE  (r4 I:android.view.View) = (r0 I:androidx.core.widget.NestedScrollView), (r3 I:int) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x001b: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1541)\l0x001f: CHECK_CAST (r5 I:android.widget.FrameLayout$LayoutParams) = (android.widget.FrameLayout$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l0x0021: INVOKE  (r6 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)] (LINE:1542)\l0x0025: IGET  (r7 I:int) = (r5 I:android.widget.FrameLayout$LayoutParams A[D('lp' android.widget.FrameLayout$LayoutParams)]) android.widget.FrameLayout.LayoutParams.topMargin int \l0x0027: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0028: IGET  (r7 I:int) = (r5 I:android.widget.FrameLayout$LayoutParams A[D('lp' android.widget.FrameLayout$LayoutParams)]) android.widget.FrameLayout.LayoutParams.bottomMargin int \l0x002a: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x002b: INVOKE  (r7 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getHeight():int A[MD:():int (s)] (LINE:1543)\l0x002f: INVOKE  (r8 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getPaddingTop():int A[MD:():int (s)]\l0x0033: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0034: INVOKE  (r8 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getPaddingBottom():int A[MD:():int (s)]\l0x0038: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0039: INVOKE  (r14 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollY():int A[MD:():int (s)] (LINE:1544)\l0x003d: ARITH  (r8 I:int) = (r6 I:int A[D('childSize' int)]) \- (r7 I:int A[D('parentSpace' int)])  (LINE:1545)\l0x003f: INVOKE  (r15 I:int) = (r3 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0043: ARITH  (r8 I:int) = (r14 I:int A[D('scrollY' int)]) + (r18 I:int A[D('dy' int)])  (LINE:1546)\l0x0045: INVOKE  (r8 I:int) = (r8 I:int), (r15 I:int A[D('maxY' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0049: INVOKE  (r3 I:int) = (r3 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x004d: ARITH  (r3 I:int) = (r3 I:int) \- (r14 I:int A[D('scrollY' int)]) \l0x004e: IGET  (r8 I:android.widget.OverScroller) = (r0 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mScroller android.widget.OverScroller  (LINE:1547)\l0x0050: INVOKE  (r9 I:int) = (r16 I:androidx.core.widget.NestedScrollView) type: VIRTUAL call: androidx.core.widget.NestedScrollView.getScrollX():int A[MD:():int (s)]\l0x0054: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0055: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scrollY' int)]) \l0x0056: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dy' int)]) \l0x0057: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scrollDurationMs' int)]) \l0x0059: INVOKE  (r8 I:android.widget.OverScroller), (r9 I:int), (r10 I:int), (r11 I:int), (r12 I:int), (r13 I:int) type: VIRTUAL call: android.widget.OverScroller.startScroll(int, int, int, int, int):void A[MD:(int, int, int, int, int):void (c)]\l0x005c: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('withNestedScrolling' boolean)])  (LINE:1548)\l0x005e: INVOKE  (r0 I:androidx.core.widget.NestedScrollView), (r8 I:boolean) type: DIRECT call: androidx.core.widget.NestedScrollView.runAnimatedScroll(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0074|0x0074: INVOKE  (r4 I:long) =  type: STATIC call: android.view.animation.AnimationUtils.currentAnimationTimeMillis():long A[MD:():long (c)] (LINE:1555)\l0x0078: IPUT  (r4 I:long), (r0 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mLastScroll long \l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|RETURN\l|0x007a: RETURN    (LINE:1556)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0062|0x0062: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('withNestedScrolling' boolean)])  (LINE:1550)\l0x0064: IGET  (r3 I:android.widget.OverScroller) = (r0 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mScroller android.widget.OverScroller \l0x0066: INVOKE  (r3 I:boolean) = (r3 I:android.widget.OverScroller) type: VIRTUAL call: android.widget.OverScroller.isFinished():boolean A[MD:():boolean (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|0x006a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x006f \l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|0x006c: INVOKE  (r16 I:androidx.core.widget.NestedScrollView) type: DIRECT call: androidx.core.widget.NestedScrollView.abortAnimatedScroll():void A[MD:():void (m)] (LINE:1551)\l}"];
Node_25 [shape=record,label="{25\:\ 0x006f|0x006f: INVOKE  (r16 I:androidx.core.widget.NestedScrollView), (r17 I:int A[D('dx' int)]), (r18 I:int A[D('dy' int)]) type: VIRTUAL call: androidx.core.widget.NestedScrollView.scrollBy(int, int):void A[MD:(int, int):void (s)] (LINE:1553)\l0x0072: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dy' int)]) \l}"];
MethodNode[shape=record,label="{private void androidx.core.widget.NestedScrollView.smoothScrollBy((r16 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r17 I:int A[D('dx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('dy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('scrollDurationMs' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[D('withNestedScrolling' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x007a \-\> B:15:?, CROSS_EDGE: B:25:0x006f \-\> B:26:0x0074, CROSS_EDGE: B:23:0x006a \-\> B:25:0x006f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x004e: r18 'dy' I\l  0x001b\-0x0061: r4 'child' Landroid\/view\/View;\l  0x0021\-0x0061: r5 'lp' Landroid\/widget\/FrameLayout$LayoutParams;\l  0x002b\-0x0061: r6 'childSize' I\l  0x0039\-0x0061: r7 'parentSpace' I\l  0x003d\-0x0061: r14 'scrollY' I\l  0x0043\-0x0061: r15 'maxY' I\l  0x004e\-0x0062: r3 'dy' I\l  0x0062\-0x0074: r18 'dy' I\l  0x0010\-0x007a: r1 'duration' J\l  0x0074\-0x007a: r3 'dy' I\l  \-1 \-0x007a: r17 'dx' I\l  \-1 \-0x007a: r19 'scrollDurationMs' I\l  \-1 \-0x007a: r20 'withNestedScrolling' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

