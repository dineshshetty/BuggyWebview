digraph "CFG forandroidx.core.widget.NestedScrollView.inChild(II)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0005|if (getChildCount() \<= 0) goto L17\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|int r0 = getScrollY()\landroid.view.View r2 = getChildAt(0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|if (r6 \< (r2.getTop() \- r0)) goto L16\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016}"];
Node_27 [shape=record,label="{27\:\ 0x001b|if (r6 \>= (r2.getBottom() \- r0)) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d}"];
Node_29 [shape=record,label="{29\:\ 0x0021|if (r5 \< r2.getLeft()) goto L14\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023}"];
Node_31 [shape=record,label="{31\:\ 0x0027|if (r5 \>= r2.getRight()) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|RETURN\lORIG_RETURN\l|return true\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.widget.NestedScrollView.inChild((r4v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r5v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0027 \-\> B:34:0x002c, CROSS_EDGE: B:29:0x0021 \-\> B:34:0x002c, CROSS_EDGE: B:27:0x001b \-\> B:34:0x002c, CROSS_EDGE: B:25:0x0014 \-\> B:34:0x002c, CROSS_EDGE: B:35:0x002d \-\> B:21:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_39;
Node_32 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
Node_37 -> Node_21;
Node_36 -> Node_21;
Node_35 -> Node_21;
}

