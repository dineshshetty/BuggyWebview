digraph "CFG forandroidx.core.widget.NestedScrollView.computeScrollDeltaToGetChildRectOnScreen(Landroid\/graphics\/Rect;)I" {
subgraph cluster_Region_1409157788 {
label = "R(1:(2:(1:3)|(5:5|(1:7)|8|(1:10)|(3:16|18|19)(1:(1:31)(2:26|29)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1060866184 {
label = "R(2:(1:3)|(5:5|(1:7)|8|(1:10)|(3:16|18|19)(1:(1:31)(2:26|29))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_360826969 {
label = "IF [B:37:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0005|if (getChildCount() == 0) goto L3\l}"];
subgraph cluster_Region_1794590374 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0007|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1995020657 {
label = "R(5:5|(1:7)|8|(1:10)|(3:16|18|19)(1:(1:31)(2:26|29)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0008|int int r0 = getHeight()\lint int r2 = getScrollY()\lint int r3 = r2 + r0\lint int r5 = getVerticalFadingEdgeLength()\l}"];
subgraph cluster_IfRegion_1233001358 {
label = "IF [B:40:0x0019] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0019|if (r11.top \> 0) goto L7\l}"];
subgraph cluster_Region_689642445 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x001b|r2 += r5\l}"];
}
}
Node_42 [shape=record,label="{42\:\ 0x001c|PHI: r2 \l  PHI: (r2v1 'screenTop' int) = (r2v0 'screenTop' int), (r2v2 'screenTop' int) binds: [B:40:0x0019, B:41:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|android.view.View android.view.View r1 = getChildAt(0)\landroid.widget.FrameLayout$LayoutParams android.widget.FrameLayout.LayoutParams r6 = (android.widget.FrameLayout.LayoutParams) r1.getLayoutParams()\l}"];
subgraph cluster_IfRegion_1352886297 {
label = "IF [B:43:0x0032] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0032|if (r11.bottom \< (r1.getHeight() + r6.topMargin + r6.bottomMargin)) goto L10\l}"];
subgraph cluster_Region_555207301 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0034|r3 \-= r5\l}"];
}
}
subgraph cluster_IfRegion_318979470 {
label = "IF [B:46:0x0038, B:48:0x003c] THEN: R(3:16|18|19) ELSE: R(1:(1:31)(2:26|29))";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0038|if (r11.bottom \> r3) goto L13\l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|ADDED_TO_REGION\l|if (r11.top \> r2) goto L15\l}"];
subgraph cluster_Region_97739380 {
label = "R(3:16|18|19)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0042|int r7 = r11.height() \> r0 ? 0 + (r11.top \- r2) : 0 + (r11.bottom \- r3)\l}"];
Node_53 [shape=record,label="{53\:\ 0x004d|PHI: r7 \l  PHI: (r7v7 'scrollYDelta' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r8 = r1.getBottom() + r6.bottomMargin\lint int r9 = r8 \- r3\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Math.min(r7, r9)\l}"];
}
subgraph cluster_Region_711112161 {
label = "R(1:(1:31)(2:26|29)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_224210264 {
label = "IF [B:56:0x005d, B:58:0x0061] THEN: R(1:31) ELSE: R(2:26|29) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x005d|if (r11.top \>= r2) goto L32\l}"];
Node_58 [shape=record,label="{58\:\ 0x0061|ADDED_TO_REGION\l|if (r11.bottom \>= r3) goto L31\l}"];
subgraph cluster_Region_834298868 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
subgraph cluster_Region_23441526 {
label = "R(2:26|29)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0067|int r7 = r11.height() \> r0 ? 0 \- (r3 \- r11.bottom) : 0 \- (r2 \- r11.top)\l}"];
Node_64 [shape=record,label="{64\:\ 0x007d|RETURN\lORIG_RETURN\l|return java.lang.Math.max(r7, \-getScrollY())\l}"];
}
}
}
}
}
}
}
Node_34 [shape=record,color=red,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0000}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0035|PHI: r3 \l  PHI: (r3v1 'screenBottom' int) = (r3v0 'screenBottom' int), (r3v2 'screenBottom' int) binds: [B:43:0x0032, B:44:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x003a}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x003e}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0044}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0049}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x005b}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x005f}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0063}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0069}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0074|PHI: r7 \l  PHI: (r7v3 'scrollYDelta' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x006f}"];
Node_66 [shape=record,color=red,label="{66\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return 0\l}"];
MethodNode[shape=record,label="{protected int androidx.core.widget.NestedScrollView.computeScrollDeltaToGetChildRectOnScreen((r10v0 'this' androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r11v0 'rect' android.graphics.Rect A[D('rect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:64:0x007d \-\> B:35:?, CROSS_EDGE: B:52:0x0049 \-\> B:53:0x004d, CROSS_EDGE: B:63:0x0074 \-\> B:64:0x007d, CROSS_EDGE: B:62:0x006f \-\> B:63:0x0074, CROSS_EDGE: B:58:0x0061 \-\> B:64:0x007d, CROSS_EDGE: B:56:0x005d \-\> B:64:0x007d, CROSS_EDGE: B:46:0x0038 \-\> B:55:0x005b, CROSS_EDGE: B:43:0x0032 \-\> B:45:0x0035, CROSS_EDGE: B:40:0x0019 \-\> B:42:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_34;Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_35;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_45[style=dashed];
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_46 -> Node_55[style=dashed];
Node_48 -> Node_49;
Node_48 -> Node_55[style=dashed];
Node_50 -> Node_51;
Node_50 -> Node_52;
Node_53 -> Node_65;
Node_65 -> Node_35;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_66;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_67;
Node_67 -> Node_35;
Node_60 -> Node_61;
Node_60 -> Node_62;
Node_64 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_61 -> Node_63;
Node_63 -> Node_64;
Node_62 -> Node_63;
Node_66 -> Node_35;
}

