digraph "CFG forandroidx.core.widget.NestedScrollView.onSecondaryPointerUp(Landroid\/view\/MotionEvent;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r5 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getActionIndex():int A[MD:():int (c)] (LINE:1054)\l0x0004: INVOKE  (r1 I:int) = (r5 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r0 I:int A[D('pointerIndex' int)]) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)] (LINE:1055)\l0x0008: IGET  (r2 I:int) = (r4 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mActivePointerId int  (LINE:1056)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pointerId' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pointerIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0010  (LINE:1060)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: INVOKE  (r3 I:float) = (r5 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r2 I:int A[D('newPointerIndex' int)]) type: VIRTUAL call: android.view.MotionEvent.getY(int):float A[MD:(int):float (c)] (LINE:1061)\l0x0015: CAST (r3 I:int) = (int) (r3 I:float) \l0x0016: IPUT  (r3 I:int), (r4 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mLastMotionY int \l0x0018: INVOKE  (r3 I:int) = (r5 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]), (r2 I:int A[D('newPointerIndex' int)]) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)] (LINE:1062)\l0x001c: IPUT  (r3 I:int), (r4 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mActivePointerId int \l0x001e: IGET  (r3 I:android.view.VelocityTracker) = (r4 I:androidx.core.widget.NestedScrollView) androidx.core.widget.NestedScrollView.mVelocityTracker android.view.VelocityTracker  (LINE:1063)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|0x0022: INVOKE  (r3 I:android.view.VelocityTracker) type: VIRTUAL call: android.view.VelocityTracker.clear():void A[MD:():void (c)] (LINE:1064)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN    (LINE:1067)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:1067)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:1067)\l}"];
MethodNode[shape=record,label="{private void androidx.core.widget.NestedScrollView.onSecondaryPointerUp((r4 'this' I:androidx.core.widget.NestedScrollView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0020 \-\> B:23:0x0025, CROSS_EDGE: B:19:0x0010 \-\> B:20:0x0011, CROSS_EDGE: B:16:0x000a \-\> B:23:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0025: r2 'newPointerIndex' I\l  0x0004\-0x0025: r0 'pointerIndex' I\l  0x0008\-0x0025: r1 'pointerId' I\l  \-1 \-0x0025: r5 'ev' Landroid\/view\/MotionEvent;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_19 -> Node_20;
Node_24 -> Node_14;
}

