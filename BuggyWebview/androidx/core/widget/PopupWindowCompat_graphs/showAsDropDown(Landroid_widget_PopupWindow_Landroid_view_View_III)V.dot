digraph "CFG forandroidx.core.widget.PopupWindowCompat.showAsDropDown(Landroid\/widget\/PopupWindow;Landroid\/view\/View;III)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 19) goto L6\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|androidx.core.widget.PopupWindowCompat.Api19Impl.showAsDropDown(r4, r5, r6, r7, r8)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|r0 = r6\lr1 = androidx.core.view.GravityCompat.getAbsoluteGravity(r8, androidx.core.view.ViewCompat.getLayoutDirection(r5)) & 7\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|if (r1 != 5) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|int r0 = r0 \- (r4.getWidth() \- r5.getWidth())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0023|PHI: r0 \l  PHI: (r0v2 'xoff1' int) = (r0v1 'xoff1' int), (r0v3 'xoff1' int) binds: [B:17:0x0017, B:18:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r4.showAsDropDown(r5, r0, r7)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.core.widget.PopupWindowCompat.showAsDropDown((r4v0 'popup' android.widget.PopupWindow A[D('popup' android.widget.PopupWindow), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'anchor' android.view.View A[D('anchor' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'xoff' int A[D('xoff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'yoff' int A[D('yoff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'gravity' int A[D('gravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0023 \-\> B:20:0x0026, CROSS_EDGE: B:17:0x0017 \-\> B:19:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

