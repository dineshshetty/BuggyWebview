digraph "CFG forandroidx.core.view.WindowCompat.requireViewById(Landroid\/view\/Window;I)Landroid\/view\/View;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:89)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:17:0x000d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.Object) = (r3 I:android.view.Window A[D('window' android.view.Window)]), (r4 I:int A[D('id' int)]) type: STATIC call: androidx.core.view.WindowCompat.Api28Impl.requireViewById(android.view.Window, int):java.lang.Object A[MD:\<T\>:(android.view.Window, int):T (m)] (LINE:90)\l0x000a: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:T extends android.view.View) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: INVOKE  (r0 I:android.view.View) = (r3 I:android.view.Window A[D('window' android.view.Window)]), (r4 I:int A[D('id' int)]) type: VIRTUAL call: android.view.Window.findViewById(int):android.view.View A[MD:\<T extends android.view.View\>:(int):T extends android.view.View (c)] (LINE:93)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' T extends android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0014  (LINE:94)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:T extends android.view.View A[D('view' T extends android.view.View)])  (LINE:97)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:95)\l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"ID does not reference a View inside this Window\" \l0x0018: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|0x001b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static T extends android.view.View androidx.core.view.WindowCompat.requireViewById((r3 I:android.view.Window A[D('window' android.view.Window), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:12:?, CROSS_EDGE: B:21:0x001b \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001b: r0 'view' Landroid\/view\/View;, signature: TT;\l  \-1 \-0x001b: r3 'window' Landroid\/view\/Window;\l  \-1 \-0x001b: r4 'id' I\lTYPE_VARS: [T extends android.view.View]\lSIGNATURE: \<T:Landroid\/view\/View;\>(Landroid\/view\/Window;I)TT;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

