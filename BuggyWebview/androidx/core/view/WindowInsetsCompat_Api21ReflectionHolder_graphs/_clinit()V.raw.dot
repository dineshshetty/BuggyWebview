digraph "CFG forandroidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.\<clinit\>()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ReflectiveOperationException \-\> 0x002d, blocks: (B:12:0x0000), top: B:17:0x0000 \}\lCatch: ReflectiveOperationException \-\> 0x002d\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<android.view.View\>) =  android.view.View.class A[TRY_ENTER] (LINE:2133)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"mAttachInfo\" \l0x0004: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x0008: SPUT  (r0 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sViewAttachInfoField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d]\l0x000a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2134)\l0x000b: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(boolean):void throws java.lang.SecurityException (c)]\l0x000e: CONST_STR  (r0 I:java.lang.String) =  \"android.view.View$AttachInfo\"  (LINE:2135)\l0x0010: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"mStableInsets\"  (LINE:2136)\l0x0016: INVOKE  (r2 I:java.lang.reflect.Field) = (r0 I:java.lang.Class A[D('sAttachInfoClass' java.lang.Class\<?\>)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x001a: SPUT  (r2 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sStableInsets java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d]\l0x001c: INVOKE  (r2 I:java.lang.reflect.Field), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(boolean):void throws java.lang.SecurityException (c)] (LINE:2137)\l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"mContentInsets\"  (LINE:2138)\l0x0021: INVOKE  (r2 I:java.lang.reflect.Field) = (r0 I:java.lang.Class A[D('sAttachInfoClass' java.lang.Class\<?\>)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x0025: SPUT  (r2 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sContentInsets java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x002d]\l0x0027: INVOKE  (r2 I:java.lang.reflect.Field), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: ReflectiveOperationException \-\> 0x002d, MD:(boolean):void throws java.lang.SecurityException (c)] (LINE:2139)\l0x002a: SPUT  (r1 I:boolean) androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sReflectionSucceeded boolean A[Catch: ReflectiveOperationException \-\> 0x002d, TRY_LEAVE] (LINE:2140)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0048: RETURN   A[SYNTHETIC] (LINE:2144)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|ExcHandler: ReflectiveOperationException \-\> 0x002d\l|0x002d: MOVE_EXCEPTION  (r0 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x002d] (LINE:2141)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:2142)\l0x0030: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0033: CONST_STR  (r2 I:java.lang.String) =  \"Failed to get visible insets from AttachInfo \" \l0x0035: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.ReflectiveOperationException A[D('e' java.lang.ReflectiveOperationException)]) type: VIRTUAL call: java.lang.ReflectiveOperationException.getMessage():java.lang.String A[MD:():java.lang.String (s)]\l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0043: CONST_STR  (r2 I:java.lang.String) =  \"WindowInsetsCompat\" \l0x0045: INVOKE  \l  (r2 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|RETURN\lORIG_RETURN\l|0x0048: RETURN    (LINE:2144)\l}"];
MethodNode[shape=record,label="{static void androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002e \-\> B:16:0x0048, CROSS_EDGE: B:17:0x0000 \-\> B:14:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x002c: r0 'sAttachInfoClass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x002e\-0x0048: r0 'e' Ljava\/lang\/ReflectiveOperationException;\lTryCatch #0 \{ReflectiveOperationException \-\> 0x002d, blocks: (B:12:0x0000), top: B:17:0x0000 \}\l}"];
MethodNode -> Node_10;Node_10 -> Node_17;
Node_17 -> Node_12;
Node_17 -> Node_14;
Node_12 -> Node_18;
Node_12 -> Node_19;
Node_18 -> Node_14;
Node_19 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_11;
}

