digraph "CFG forandroidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.getRootWindowInsets(Landroid\/view\/View;)Landroidx\/core\/view\/WindowInsetsCompat;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sReflectionSucceeded boolean  (LINE:2150)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x006d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|0x0005: INVOKE  (r0 I:boolean) = (r7 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.isAttachedToWindow():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000c \l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|0x000c: INVOKE  (r0 I:android.view.View) = (r7 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getRootView():android.view.View A[MD:():android.view.View (c)] (LINE:2154)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0010|TRY_ENTER\lTryCatch #0 \{IllegalAccessException \-\> 0x0051, blocks: (B:30:0x0010, B:32:0x0018, B:35:0x002c), top: B:42:0x0010 \}\lCatch: IllegalAccessException \-\> 0x0051\l|0x0010: SGET  (r2 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sViewAttachInfoField java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x0051, TRY_ENTER] (LINE:2156)\l0x0012: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.reflect.Field), (r0 I:java.lang.Object A[D('rootView' android.view.View)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0051, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('attachInfo' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x006c  (LINE:2157)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|TryCatch #0 \{IllegalAccessException \-\> 0x0051, blocks: (B:30:0x0010, B:32:0x0018, B:35:0x002c), top: B:42:0x0010 \}\lCatch: IllegalAccessException \-\> 0x0051\l|0x0018: SGET  (r3 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sStableInsets java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x0051] (LINE:2158)\l0x001a: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.lang.reflect.Field), (r2 I:java.lang.Object A[D('attachInfo' java.lang.Object)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0051, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l0x001e: CHECK_CAST (r3 I:android.graphics.Rect) = (android.graphics.Rect) (r3 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0051]\l0x0020: SGET  (r4 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.sContentInsets java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x0051] (LINE:2159)\l0x0022: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.reflect.Field), (r2 I:java.lang.Object A[D('attachInfo' java.lang.Object)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0051, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c)]\l0x0026: CHECK_CAST (r4 I:android.graphics.Rect) = (android.graphics.Rect) (r4 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0051]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stableInsets' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x006c  (LINE:2160)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|0x002a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibleInsets' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x006c \l}"];
Node_35 [shape=record,label="{35\:\ 0x002c|TRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x0051, blocks: (B:30:0x0010, B:32:0x0018, B:35:0x002c), top: B:42:0x0010 \}\lCatch: IllegalAccessException \-\> 0x0051\l|0x002c: NEW_INSTANCE  (r5 I:androidx.core.view.WindowInsetsCompat$Builder) =  androidx.core.view.WindowInsetsCompat$Builder A[Catch: IllegalAccessException \-\> 0x0051] (LINE:2161)\l0x002e: INVOKE  (r5 I:androidx.core.view.WindowInsetsCompat$Builder) type: DIRECT call: androidx.core.view.WindowInsetsCompat.Builder.\<init\>():void A[Catch: IllegalAccessException \-\> 0x0051, MD:():void (m)]\l0x0031: INVOKE  (r6 I:androidx.core.graphics.Insets) = (r3 I:android.graphics.Rect A[D('stableInsets' android.graphics.Rect)]) type: STATIC call: androidx.core.graphics.Insets.of(android.graphics.Rect):androidx.core.graphics.Insets A[Catch: IllegalAccessException \-\> 0x0051, MD:(android.graphics.Rect):androidx.core.graphics.Insets (m)] (LINE:2162)\l0x0035: INVOKE  (r5 I:androidx.core.view.WindowInsetsCompat$Builder) = (r5 I:androidx.core.view.WindowInsetsCompat$Builder), (r6 I:androidx.core.graphics.Insets) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Builder.setStableInsets(androidx.core.graphics.Insets):androidx.core.view.WindowInsetsCompat$Builder A[Catch: IllegalAccessException \-\> 0x0051, MD:(androidx.core.graphics.Insets):androidx.core.view.WindowInsetsCompat$Builder (m)]\l0x0039: INVOKE  (r6 I:androidx.core.graphics.Insets) = (r4 I:android.graphics.Rect A[D('visibleInsets' android.graphics.Rect)]) type: STATIC call: androidx.core.graphics.Insets.of(android.graphics.Rect):androidx.core.graphics.Insets A[Catch: IllegalAccessException \-\> 0x0051, MD:(android.graphics.Rect):androidx.core.graphics.Insets (m)] (LINE:2163)\l0x003d: INVOKE  (r5 I:androidx.core.view.WindowInsetsCompat$Builder) = (r5 I:androidx.core.view.WindowInsetsCompat$Builder), (r6 I:androidx.core.graphics.Insets) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Builder.setSystemWindowInsets(androidx.core.graphics.Insets):androidx.core.view.WindowInsetsCompat$Builder A[Catch: IllegalAccessException \-\> 0x0051, MD:(androidx.core.graphics.Insets):androidx.core.view.WindowInsetsCompat$Builder (m)]\l0x0041: INVOKE  (r5 I:androidx.core.view.WindowInsetsCompat) = (r5 I:androidx.core.view.WindowInsetsCompat$Builder) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Builder.build():androidx.core.view.WindowInsetsCompat A[Catch: IllegalAccessException \-\> 0x0051, MD:():androidx.core.view.WindowInsetsCompat (m)] (LINE:2164)\l0x0045: INVOKE  \l  (r5 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l  (r5 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.setRootWindowInsets(androidx.core.view.WindowInsetsCompat):void A[Catch: IllegalAccessException \-\> 0x0051, MD:(androidx.core.view.WindowInsetsCompat):void (m)] (LINE:2168)\l0x0048: INVOKE  (r6 I:android.view.View) = (r7 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getRootView():android.view.View A[Catch: IllegalAccessException \-\> 0x0051, MD:():android.view.View (c)] (LINE:2169)\l0x004c: INVOKE  \l  (r5 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])\l  (r6 I:android.view.View)\l type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.copyRootViewBounds(android.view.View):void A[Catch: IllegalAccessException \-\> 0x0051, MD:(android.view.View):void (m), TRY_LEAVE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x004f|RETURN\l|0x004f: RETURN  (r5 I:androidx.core.view.WindowInsetsCompat A[D('insets' androidx.core.view.WindowInsetsCompat)])  (LINE:2170)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x006c|RETURN\l|0x006c: RETURN  (r1 I:androidx.core.view.WindowInsetsCompat)  (LINE:2176)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0051|ExcHandler: IllegalAccessException \-\> 0x0051\l|0x0051: MOVE_EXCEPTION  (r2 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0051] (LINE:2173)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0052|0x0052: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:2174)\l0x0054: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0057: CONST_STR  (r4 I:java.lang.String) =  \"Failed to get insets from AttachInfo. \" \l0x0059: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005c: INVOKE  (r4 I:java.lang.String) = (r2 I:java.lang.IllegalAccessException A[D('e' java.lang.IllegalAccessException)]) type: VIRTUAL call: java.lang.IllegalAccessException.getMessage():java.lang.String A[MD:():java.lang.String (s)]\l0x0060: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0063: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0067: CONST_STR  (r4 I:java.lang.String) =  \"WindowInsetsCompat\" \l0x0069: INVOKE  (r4 I:java.lang.String), (r3 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x006d|RETURN\l|0x006d: RETURN  (r1 I:androidx.core.view.WindowInsetsCompat)  (LINE:2151)\l}"];
MethodNode[shape=record,label="{public static androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.Api21ReflectionHolder.getRootWindowInsets((r7 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x006c \-\> B:23:?, CROSS_EDGE: B:34:0x002a \-\> B:40:0x006c, CROSS_EDGE: B:33:0x0028 \-\> B:40:0x006c, CROSS_EDGE: B:31:0x0016 \-\> B:40:0x006c, CROSS_EDGE: B:42:0x0010 \-\> B:38:0x0051, CROSS_EDGE: B:41:0x006d \-\> B:23:?, CROSS_EDGE: B:25:0x0003 \-\> B:41:0x006d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0050: r2 'attachInfo' Ljava\/lang\/Object;\l  0x0020\-0x0050: r3 'stableInsets' Landroid\/graphics\/Rect;\l  0x0028\-0x0050: r4 'visibleInsets' Landroid\/graphics\/Rect;\l  0x0045\-0x0050: r5 'insets' Landroidx\/core\/view\/WindowInsetsCompat;\l  0x0052\-0x006c: r2 'e' Ljava\/lang\/IllegalAccessException;\l  0x0010\-0x006d: r0 'rootView' Landroid\/view\/View;\l  \-1 \-0x006d: r7 'v' Landroid\/view\/View;\lTryCatch #0 \{IllegalAccessException \-\> 0x0051, blocks: (B:30:0x0010, B:32:0x0018, B:35:0x002c), top: B:42:0x0010 \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_41;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_41[style=dashed];
Node_29 -> Node_42;
Node_42 -> Node_30;
Node_42 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_40;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_40;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_40;
Node_35 -> Node_36;
Node_35 -> Node_43;
Node_36 -> Node_23;
Node_43 -> Node_38;
Node_40 -> Node_23;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_41 -> Node_23;
}

