digraph "CFG forandroidx.core.view.DisplayCompat.getCurrentDisplaySizeFromWorkarounds(Landroid\/content\/Context;Landroid\/view\/Display;)Landroid\/graphics\/Point;" {
subgraph cluster_Region_1369735522 {
label = "R(2:(1:3)(1:15)|(2:(1:5)|(1:(2:(1:12)|(1:13))))) | DECL_VAR: android.graphics.Point displaySize\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_161613197 {
label = "IF [B:3:0x0004] THEN: R(1:3) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 28) goto L3\l}"];
subgraph cluster_Region_1968115349 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|android.graphics.Point r0 = parsePhysicalDisplaySizeFromSystemProperties(\"sys.display\-size\", r5)\l}"];
}
subgraph cluster_Region_1672883875 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|android.graphics.Point r0 = parsePhysicalDisplaySizeFromSystemProperties(\"vendor.display\-size\", r5)\l}"];
}
}
subgraph cluster_Region_307045774 {
label = "R(2:(1:5)|(1:(2:(1:12)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_412235228 {
label = "IF [B:7:0x0014] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r0 \l  PHI: (r0v3 'displaySize' android.graphics.Point) = (r0v2 'displaySize' android.graphics.Point), (r0v5 'displaySize' android.graphics.Point) binds: [B:5:0x000d, B:4:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L5\l}"];
subgraph cluster_Region_1841825853 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1952446052 {
label = "R(1:(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_256236596 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_116401365 {
label = "IF [B:10:0x001c, B:12:0x0022] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001c|if (isSonyBravia4kTv(r4) == true) goto L9\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|ADDED_TO_REGION\l|if (isCurrentModeTheLargestMode(r5) == true) goto L11\l}"];
subgraph cluster_Region_735333846 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002f|RETURN\lORIG_RETURN\l|return new android.graphics.Point(androidx.core.view.DisplayCompat.DISPLAY_SIZE_4K_WIDTH, androidx.core.view.DisplayCompat.DISPLAY_SIZE_4K_HEIGHT)\l}"];
}
}
subgraph cluster_Region_540238366 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0030|RETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{static android.graphics.Point androidx.core.view.DisplayCompat.getCurrentDisplaySizeFromWorkarounds((r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'display' android.view.Display A[D('display' android.view.Display), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002f \-\> B:1:?, CROSS_EDGE: B:12:0x0022 \-\> B:15:0x002f, CROSS_EDGE: B:16:0x0030 \-\> B:1:?, CROSS_EDGE: B:5:0x000d \-\> B:7:0x0014\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_1;
Node_10 -> Node_11;
Node_10 -> Node_16[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_17[style=dashed];
Node_15 -> Node_1;
Node_17 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_15;
Node_16 -> Node_1;
}

