digraph "CFG forandroidx.core.view.DisplayCompat.getSystemProperty(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x001f, blocks: (B:2:0x0000), top: B:7:0x0000 \}\lCatch: Exception \-\> 0x001f\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"android.os.SystemProperties\" A[TRY_ENTER] (LINE:134)\l0x0002: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: Exception \-\> 0x001f, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"get\"  (LINE:135)\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x001f]\l0x000b: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x000d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: APUT  (r3 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x001f]\l0x0010: INVOKE  (r1 I:java.lang.reflect.Method) = (r0 I:java.lang.Class A[D('systemProperties' java.lang.Class\<?\>)]), (r1 I:java.lang.String), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x001f, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0014: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x001f] (LINE:136)\l0x0016: APUT  (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY] A[D('name' java.lang.String)]) A[Catch: Exception \-\> 0x001f]\l0x0018: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:java.lang.reflect.Method A[D('getMethod' java.lang.reflect.Method)])\l  (r0 I:java.lang.Object A[D('systemProperties' java.lang.Class\<?\>)])\l  (r2 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x001f, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x001c: CHECK_CAST (r2 I:java.lang.String) = (java.lang.String) (r2 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x001f, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|RETURN\l|0x001e: RETURN  (r2 I:java.lang.String) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|ExcHandler: Exception \-\> 0x001f\l|0x001f: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x001f] (LINE:137)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|RETURN\l|0x0020: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:138)\l0x0021: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static java.lang.String androidx.core.view.DisplayCompat.getSystemProperty((r6 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0021 \-\> B:1:?, CROSS_EDGE: B:7:0x0000 \-\> B:4:0x001f\lDebug Info:\l  0x0006\-0x001f: r0 'systemProperties' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x0014\-0x001f: r1 'getMethod' Ljava\/lang\/reflect\/Method;\l  0x0020\-0x0021: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0021: r6 'name' Ljava\/lang\/String;\lTryCatch #0 \{Exception \-\> 0x001f, blocks: (B:2:0x0000), top: B:7:0x0000 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_7;
Node_7 -> Node_2;
Node_7 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_1;
Node_8 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

