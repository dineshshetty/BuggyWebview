digraph "CFG forandroidx.core.view.WindowInsetsAnimationCompat.Impl30.ProxyCallback.getWindowInsetsAnimationCompat(Landroid\/view\/WindowInsetsAnimation;)Landroidx\/core\/view\/WindowInsetsAnimationCompat;" {
subgraph cluster_Region_2091215583 {
label = "R(2:1|(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.core.view.WindowInsetsAnimationCompat androidx.core.view.WindowInsetsAnimationCompat r0 = r2.mAnimations.get(r3)\l}"];
subgraph cluster_Region_1416865424 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_595738519 {
label = "IF [B:3:0x0008] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_256138790 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|androidx.core.view.WindowInsetsAnimationCompat androidx.core.view.WindowInsetsAnimationCompat r0 = androidx.core.view.WindowInsetsAnimationCompat.toWindowInsetsAnimationCompat(r3)\lr2.mAnimations.put(r3, r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|RETURN\lORIG_RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_765514353 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private androidx.core.view.WindowInsetsAnimationCompat androidx.core.view.WindowInsetsAnimationCompat.Impl30.ProxyCallback.getWindowInsetsAnimationCompat((r2v0 'this' androidx.core.view.WindowInsetsAnimationCompat$Impl30$ProxyCallback A[IMMUTABLE_TYPE, THIS]), (r3v0 'animation' android.view.WindowInsetsAnimation A[D('animation' android.view.WindowInsetsAnimation), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0008 \-\> B:5:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
Node_0 -> Node_2;
}

