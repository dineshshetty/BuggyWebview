digraph "CFG forandroidx.core.view.ViewKt.updatePaddingRelative$default(Landroid\/view\/View;IIIIILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r5 & 1) == 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|int r1 = r0.getPaddingStart()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|PHI: r1 \l  PHI: (r1v1 'start' int) = (r1v0 'start' int), (r1v2 'start' int) binds: [B:3:0x0002, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|if ((r5 & 2) == 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|int r2 = r0.getPaddingTop()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|PHI: r2 \l  PHI: (r2v1 'top' int) = (r2v0 'top' int), (r2v2 'top' int) binds: [B:6:0x000a, B:7:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if ((r5 & 4) == 0) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|int r3 = r0.getPaddingEnd()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|PHI: r3 \l  PHI: (r3v1 'end' int) = (r3v0 'end' int), (r3v2 'end' int) binds: [B:9:0x0012, B:10:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|if ((r5 & 8) == 0) goto L13\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|int r4 = r0.getPaddingBottom()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|PHI: r4 \l  PHI: (r4v1 'bottom' int) = (r4v0 'bottom' int), (r4v2 'bottom' int) binds: [B:12:0x001a, B:13:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r0, \"\<this\>\")\lr0.setPaddingRelative(r1, r2, r3, r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.view.ViewKt.updatePaddingRelative$default((r0v0 '$this$updatePaddingRelative_u24default' android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:12:0x001a \-\> B:14:0x0020, CROSS_EDGE: B:9:0x0012 \-\> B:11:0x0018, CROSS_EDGE: B:6:0x000a \-\> B:8:0x0010, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0008\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [139=5]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

