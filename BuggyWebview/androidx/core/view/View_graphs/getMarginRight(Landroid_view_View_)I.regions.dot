digraph "CFG forandroidx.core.view.ViewKt.getMarginRight(Landroid\/view\/View;)I" {
subgraph cluster_Region_690158892 {
label = "R(3:1|2|(2:(1:6)|(1:8)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r3, \"\<this\>\")\landroid.view.ViewGroup$LayoutParams android.view.ViewGroup.LayoutParams r1 = r3.getLayoutParams()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|android.view.ViewGroup.MarginLayoutParams r1 = r1 instanceof android.view.ViewGroup.MarginLayoutParams ? (android.view.ViewGroup.MarginLayoutParams) r1 : null\l}"];
subgraph cluster_Region_593960379 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_572346567 {
label = "IF [B:6:0x0012] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|PHI: r1 \l  PHI: (r1v2 android.view.ViewGroup$MarginLayoutParams) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L5\l}"];
subgraph cluster_Region_296559332 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return r1.rightMargin\l}"];
}
}
subgraph cluster_Region_1773628695 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|RETURN\lORIG_RETURN\l|return 0\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0011}"];
MethodNode[shape=record,label="{public static final int androidx.core.view.ViewKt.getMarginRight((r3v0 '$this$marginRight' android.view.View A[D('$this$marginRight' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0017 \-\> B:9:0x0018, CROSS_EDGE: B:5:0x0011 \-\> B:6:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_10 -> Node_1;
Node_8 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_6;
Node_7 -> Node_10;
Node_5 -> Node_6;
}

