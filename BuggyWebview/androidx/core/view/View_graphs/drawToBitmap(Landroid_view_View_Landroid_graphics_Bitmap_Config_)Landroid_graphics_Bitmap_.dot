digraph "CFG forandroidx.core.view.ViewKt.drawToBitmap(Landroid\/view\/View;Landroid\/graphics\/Bitmap$Config;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"\<this\>\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"config\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (androidx.core.view.ViewCompat.isLaidOut(r7) == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|android.graphics.Bitmap r0 = android.graphics.Bitmap.createBitmap(r7.getWidth(), r7.getHeight(), r8)\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"createBitmap(width, height, config)\")\landroid.graphics.Canvas r2 = new android.graphics.Canvas(r0)\lr2.translate(\-((float) r7.getScrollX()), \-((float) r7.getScrollY()))\lr7.draw(r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e}"];
Node_7 [shape=record,label="{7\:\ 0x0045|throw new java.lang.IllegalStateException(\"View needs to be laid out before calling drawToBitmap()\")\l}"];
MethodNode[shape=record,label="{public static final android.graphics.Bitmap androidx.core.view.ViewKt.drawToBitmap((r7v0 '$this$drawToBitmap' android.view.View A[D('$this$drawToBitmap' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'config' android.graphics.Bitmap$Config A[D('config' android.graphics.Bitmap$Config), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0045 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

