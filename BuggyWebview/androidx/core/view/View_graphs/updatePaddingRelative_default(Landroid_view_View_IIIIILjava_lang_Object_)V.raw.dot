digraph "CFG forandroidx.core.view.ViewKt.updatePaddingRelative$default(Landroid\/view\/View;IIIIILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:139)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r1 I:int A[D('start' int)]) = (r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View)]) type: VIRTUAL call: android.view.View.getPaddingStart():int A[MD:():int (c)] (LINE:140)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char])  (LINE:139)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0010 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: INVOKE  (r2 I:int A[D('top' int)]) = (r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View)]) type: VIRTUAL call: android.view.View.getPaddingTop():int A[MD:():int (c)] (LINE:141)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: ARITH  (r6 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char])  (LINE:139)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0018 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: INVOKE  (r3 I:int A[D('end' int)]) = (r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View)]) type: VIRTUAL call: android.view.View.getPaddingEnd():int A[MD:():int (c)] (LINE:142)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (8 ??[int, float, short, byte, char])  (LINE:139)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0020 \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: INVOKE  (r4 I:int A[D('bottom' int)]) = (r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View)]) type: VIRTUAL call: android.view.View.getPaddingBottom():int A[MD:():int (c)] (LINE:143)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: CONST_STR  (r5 I:java.lang.String) =  \"\<this\>\"  (LINE:139)\l0x0022: INVOKE  (r0 I:java.lang.Object A[D('$this$updatePaddingRelative_u24default' android.view.View)]), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View)])\l  (r1 I:int A[D('start' int)])\l  (r2 I:int A[D('top' int)])\l  (r3 I:int A[D('end' int)])\l  (r4 I:int A[D('bottom' int)])\l type: VIRTUAL call: android.view.View.setPaddingRelative(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:145)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|0x0029: RETURN    (LINE:146)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ void androidx.core.view.ViewKt.updatePaddingRelative$default((r0 I:android.view.View A[D('$this$updatePaddingRelative_u24default' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lCROSS_EDGE: B:12:0x001a \-\> B:14:0x0020, CROSS_EDGE: B:9:0x0012 \-\> B:11:0x0018, CROSS_EDGE: B:6:0x000a \-\> B:8:0x0010, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0008\lDebug Info:\l  \-1 \-0x0029: r0 '$this$updatePaddingRelative_u24default' Landroid\/view\/View;\l  \-1 \-0x0029: r1 'start' I\l  \-1 \-0x0029: r2 'top' I\l  \-1 \-0x0029: r3 'end' I\l  \-1 \-0x0029: r4 'bottom' I\l  0x0026\-0x0029: r5 '$i$f$updatePaddingRelative' I\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [139=5]\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

