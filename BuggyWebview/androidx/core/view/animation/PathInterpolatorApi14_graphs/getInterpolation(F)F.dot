digraph "CFG forandroidx.core.view.animation.PathInterpolatorApi14.getInterpolation(F)F" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0003|if ((r9 \> 0.0f ? 1 : (r9 == 0.0f ? 0 : \-1)) \> 0) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|RETURN\l|return 0.0f\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006}"];
Node_34 [shape=record,label="{34\:\ 0x000a|if ((r9 \> 1.0f ? 1 : (r9 == 1.0f ? 0 : \-1)) \< 0) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|RETURN\l|return 1.0f\l}"];
Node_36 [shape=record,label="{36\:\ 0x000d|r1 = 0\lint r2 = r8.f77mX.length \- 1\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|LOOP_START\lLOOP:0: B:37:0x0013\-\>B:53:0x0013\lPHI: r1 r2 \l  PHI: (r1v3 'startIndex' int) = (r1v2 'startIndex' int), (r1v4 'startIndex' int) binds: [B:36:0x000d, B:53:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 'endIndex' int) = (r2v3 'endIndex' int), (r2v6 'endIndex' int) binds: [B:36:0x000d, B:53:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|if ((r2 \- r1) \<= 1) goto L20\l}"];
Node_39 [shape=record,label="{39\:\ 0x0017|int r4 = (r1 + r2) \/ 2\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|if ((r9 \> r8.f77mX[r4] ? 1 : (r9 == r8.f77mX[r4] ? 0 : \-1)) \>= 0) goto L13\l}"];
Node_50 [shape=record,label="{50\:\ 0x0025|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|r1 = r4\l}"];
Node_54 [shape=record,label="{54\:\ 0x0013|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:37:0x0013\-\>B:53:0x0013\lPHI: r1 r2 \l  PHI: (r1v4 'startIndex' int) = (r1v3 'startIndex' int), (r1v5 'startIndex' int) binds: [B:55:0x0013, B:54:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v6 'endIndex' int) = (r2v5 'endIndex' int), (r2v4 'endIndex' int) binds: [B:55:0x0013, B:54:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0023|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0023|r2 = r4\l}"];
Node_55 [shape=record,label="{55\:\ 0x0013|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0027|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|float[] r3 = r8.f77mX\lfloat r4 = r3[r2] \- r3[r1]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0030|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) != 0) goto L25\l}"];
Node_46 [shape=record,label="{46\:\ 0x0032}"];
Node_47 [shape=record,label="{47\:\ 0x0036|RETURN\l|return r8.f78mY[r1]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|float r0 = r9 \- r3[r1]\lfloat r3 = r0 \/ r4\lfloat[] r5 = r8.f78mY\lr6 = r5[r1]\lr5 = r5[r2]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0048|RETURN\l|return ((r5 \- r6) * r3) + r6\l}"];
MethodNode[shape=record,label="{public float androidx.core.view.animation.PathInterpolatorApi14.getInterpolation((r8v0 'this' androidx.core.view.animation.PathInterpolatorApi14 A[IMMUTABLE_TYPE, THIS]), (r9v0 't' float A[D('t' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x000c \-\> B:29:?, BACK_EDGE: B:41:0x0023 \-\> B:37:0x0013, BACK_EDGE: B:42:0x0025 \-\> B:37:0x0013, CROSS_EDGE: B:47:0x0036 \-\> B:29:?, CROSS_EDGE: B:49:0x0048 \-\> B:29:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.animation.TimeInterpolator.getInterpolation(float):float\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_51;
Node_39 -> Node_40;
Node_40 -> Node_50;
Node_40 -> Node_52[style=dashed];
Node_50 -> Node_42;
Node_42 -> Node_54;
Node_54 -> Node_53;
Node_53 -> Node_37;
Node_52 -> Node_41;
Node_41 -> Node_55;
Node_55 -> Node_53;
Node_51 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_29;
Node_48 -> Node_49;
Node_49 -> Node_29;
}

