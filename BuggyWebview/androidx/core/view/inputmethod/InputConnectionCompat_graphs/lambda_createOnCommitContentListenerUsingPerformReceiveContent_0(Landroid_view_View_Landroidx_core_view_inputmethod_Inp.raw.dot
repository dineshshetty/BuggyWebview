digraph "CFG forandroidx.core.view.inputmethod.InputConnectionCompat.lambda$createOnCommitContentListenerUsingPerformReceiveContent$0(Landroid\/view\/View;Landroidx\/core\/view\/inputmethod\/InputContentInfoCompat;ILandroid\/os\/Bundle;)Z" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('opts' android.os.Bundle)])  (LINE:362)\l0x0001: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:363)\l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CONST  (r3 I:??[int, float, short, byte, char]) = (25 ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0006|0x0006: IF  (r1 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:59:0x0032 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0008|0x0008: ARITH  (r1 I:??[int, boolean]) = (r8 I:??[int, boolean, short, byte, char] A[D('flags' int)]) & (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0032 \l}"];
Node_63 [shape=record,label="{63\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_50 [shape=record,label="{50\:\ 0x000c|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0029, blocks: (B:50:0x000c), top: B:63:0x000c \}\lCatch: Exception \-\> 0x0029\l|0x000c: INVOKE  \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.requestPermission():void A[Catch: Exception \-\> 0x0029, MD:():void (m), TRY_ENTER, TRY_LEAVE] (LINE:366)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.unwrap():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:378)\l0x0015: CHECK_CAST (r1 I:android.view.inputmethod.InputContentInfo) = (android.view.inputmethod.InputContentInfo) (r1 I:??[OBJECT, ARRAY]) \l0x0017: NEW_INSTANCE  (r3 I:android.os.Bundle) =  android.os.Bundle  (LINE:379)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0019|0x0019: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('opts' android.os.Bundle)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x001f \l}"];
Node_53 [shape=record,label="{53\:\ 0x001b|0x001b: INVOKE  (r3 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0022|0x0022: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('extras' android.os.Bundle)]) = (r3 I:??[OBJECT, ARRAY]) \l0x0023: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.extra.INPUT_CONTENT_INFO\"  (LINE:380)\l0x0025: INVOKE  \l  (r0 I:android.os.Bundle A[D('extras' android.os.Bundle)])\l  (r3 I:java.lang.String)\l  (r1 I:android.os.Parcelable A[D('inputContentInfoFmk' android.view.inputmethod.InputContentInfo)])\l type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x001f|0x001f: INVOKE  (r3 I:android.os.Bundle), (r9 I:android.os.Bundle A[D('opts' android.os.Bundle)]) type: DIRECT call: android.os.Bundle.\<init\>(android.os.Bundle):void A[MD:(android.os.Bundle):void (c)]\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x0029|ExcHandler: Exception \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r1 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0029] (LINE:367)\l}"];
Node_57 [shape=record,label="{57\:\ 0x002a|0x002a: CONST_STR  (r3 I:java.lang.String) =  \"InputConnectionCompat\"  (LINE:368)\l0x002c: CONST_STR  (r4 I:java.lang.String) =  \"Can't insert content from IME; requestPermission() failed\" \l0x002e: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String), (r1 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0031|RETURN\l|0x0031: RETURN  (r2 I:boolean)  (LINE:370)\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ 0x0032|0x0032: NEW_INSTANCE  (r1 I:android.content.ClipData A[D('e' java.lang.Exception)]) =  android.content.ClipData  (LINE:382)\l0x0034: INVOKE  (r3 I:android.content.ClipDescription) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getDescription():android.content.ClipDescription A[MD:():android.content.ClipDescription (m)]\l0x0038: NEW_INSTANCE  (r4 I:android.content.ClipData$Item) =  android.content.ClipData$Item \l0x003a: INVOKE  (r5 I:android.net.Uri) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getContentUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:383)\l0x003e: INVOKE  (r4 I:android.content.ClipData$Item), (r5 I:android.net.Uri) type: DIRECT call: android.content.ClipData.Item.\<init\>(android.net.Uri):void A[MD:(android.net.Uri):void (c)]\l0x0041: INVOKE  (r1 I:android.content.ClipData), (r3 I:android.content.ClipDescription), (r4 I:android.content.ClipData$Item) type: DIRECT call: android.content.ClipData.\<init\>(android.content.ClipDescription, android.content.ClipData$Item):void A[MD:(android.content.ClipDescription, android.content.ClipData$Item):void (c)]\l0x0044: NEW_INSTANCE  (r3 I:androidx.core.view.ContentInfoCompat$Builder) =  androidx.core.view.ContentInfoCompat$Builder  (LINE:384)\l0x0046: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0047: INVOKE  \l  (r3 I:androidx.core.view.ContentInfoCompat$Builder)\l  (r1 I:android.content.ClipData A[D('clip' android.content.ClipData)])\l  (r4 I:int)\l type: DIRECT call: androidx.core.view.ContentInfoCompat.Builder.\<init\>(android.content.ClipData, int):void A[MD:(android.content.ClipData, int):void (m)]\l0x004a: INVOKE  (r4 I:android.net.Uri) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getLinkUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:385)\l0x004e: INVOKE  (r3 I:androidx.core.view.ContentInfoCompat$Builder) = (r3 I:androidx.core.view.ContentInfoCompat$Builder), (r4 I:android.net.Uri) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.Builder.setLinkUri(android.net.Uri):androidx.core.view.ContentInfoCompat$Builder A[MD:(android.net.Uri):androidx.core.view.ContentInfoCompat$Builder (m)]\l0x0052: INVOKE  (r3 I:androidx.core.view.ContentInfoCompat$Builder) = (r3 I:androidx.core.view.ContentInfoCompat$Builder), (r0 I:android.os.Bundle A[D('extras' android.os.Bundle)]) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.Builder.setExtras(android.os.Bundle):androidx.core.view.ContentInfoCompat$Builder A[MD:(android.os.Bundle):androidx.core.view.ContentInfoCompat$Builder (m)] (LINE:386)\l0x0056: INVOKE  (r3 I:androidx.core.view.ContentInfoCompat) = (r3 I:androidx.core.view.ContentInfoCompat$Builder) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.Builder.build():androidx.core.view.ContentInfoCompat A[MD:():androidx.core.view.ContentInfoCompat (m)] (LINE:387)\l0x005a: INVOKE  (r4 I:androidx.core.view.ContentInfoCompat) = \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r3 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)])\l type: STATIC call: androidx.core.view.ViewCompat.performReceiveContent(android.view.View, androidx.core.view.ContentInfoCompat):androidx.core.view.ContentInfoCompat A[MD:(android.view.View, androidx.core.view.ContentInfoCompat):androidx.core.view.ContentInfoCompat (m)] (LINE:388)\l}"];
Node_60 [shape=record,label="{60\:\ 0x005e|0x005e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:? \l}"];
Node_61 [shape=record,label="{61\:\ 0x0060|RETURN\lORIG_RETURN\l|0x0060: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0061: RETURN  (r2 I:boolean) \l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x0061: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static \/* synthetic *\/ boolean androidx.core.view.inputmethod.InputConnectionCompat.lambda$createOnCommitContentListenerUsingPerformReceiveContent$0((r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.os.Bundle A[D('opts' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lCROSS_EDGE: B:60:0x005e \-\> B:62:0x0061, CROSS_EDGE: B:55:0x0022 \-\> B:59:0x0032, CROSS_EDGE: B:54:0x001f \-\> B:55:0x0022, CROSS_EDGE: B:58:0x0031 \-\> B:45:?, CROSS_EDGE: B:63:0x000c \-\> B:56:0x0029, CROSS_EDGE: B:47:0x0006 \-\> B:59:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0029: r1 'inputContentInfoFmk' Landroid\/view\/inputmethod\/InputContentInfo;\l  0x002a\-0x0032: r1 'e' Ljava\/lang\/Exception;\l  0x0001\-0x0061: r0 'extras' Landroid\/os\/Bundle;\l  0x0044\-0x0061: r1 'clip' Landroid\/content\/ClipData;\l  0x005a\-0x0061: r3 'payload' Landroidx\/core\/view\/ContentInfoCompat;\l  \-1 \-0x0061: r6 'view' Landroid\/view\/View;\l  \-1 \-0x0061: r7 'inputContentInfo' Landroidx\/core\/view\/inputmethod\/InputContentInfoCompat;\l  \-1 \-0x0061: r8 'flags' I\l  \-1 \-0x0061: r9 'opts' Landroid\/os\/Bundle;\lTryCatch #0 \{Exception \-\> 0x0029, blocks: (B:50:0x000c), top: B:63:0x000c \}\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_59;
Node_48 -> Node_49;
Node_49 -> Node_59;
Node_49 -> Node_63[style=dashed];
Node_63 -> Node_50;
Node_63 -> Node_56;
Node_50 -> Node_51;
Node_50 -> Node_64;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_59;
Node_54 -> Node_55;
Node_64 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_45;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_65;
Node_61 -> Node_45;
Node_65 -> Node_45;
}

