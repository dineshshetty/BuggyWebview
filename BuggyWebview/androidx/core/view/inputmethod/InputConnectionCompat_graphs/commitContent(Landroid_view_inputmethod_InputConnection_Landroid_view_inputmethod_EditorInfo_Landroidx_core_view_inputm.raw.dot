digraph "CFG forandroidx.core.view.inputmethod.InputConnectionCompat.commitContent(Landroid\/view\/inputmethod\/InputConnection;Landroid\/view\/inputmethod\/EditorInfo;Landroidx\/core\/view\/inputmethod\/InputContentInfoCompat;ILandroid\/os\/Bundle;)Z" {
Node_76 [shape=record,label="{76\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_78 [shape=record,label="{78\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:151)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (25 ??[int, float, short, byte, char]) \l}"];
Node_79 [shape=record,label="{79\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:82:0x0012 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0007|0x0007: INVOKE  (r0 I:java.lang.Object) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.unwrap():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:153)\l0x000b: CHECK_CAST (r0 I:android.view.inputmethod.InputContentInfo) = (android.view.inputmethod.InputContentInfo) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:boolean) = \l  (r5 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection)])\l  (r0 I:android.view.inputmethod.InputContentInfo)\l  (r8 I:int A[D('flags' int)])\l  (r9 I:android.os.Bundle A[D('opts' android.os.Bundle)])\l type: STATIC call: androidx.core.view.inputmethod.InputConnectionCompat.Api25Impl.commitContent(android.view.inputmethod.InputConnection, android.view.inputmethod.InputContentInfo, int, android.os.Bundle):boolean A[MD:(android.view.inputmethod.InputConnection, android.view.inputmethod.InputContentInfo, int, android.os.Bundle):boolean (m)] (LINE:152)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:boolean) \l}"];
Node_77 [shape=record,label="{77\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,label="{82\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.getProtocol(android.view.inputmethod.EditorInfo):int A[MD:(android.view.inputmethod.EditorInfo):int (m)] (LINE:155)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0016|0x0016: SWITCH  (r0 I:?? A[D('protocol' int)])\l case 2: goto B:87:0x001d\l case 3: goto B:86:0x001b\l case 4: goto B:86:0x001b\l default: goto B:84:0x0019  (LINE:157)\l}"];
Node_84 [shape=record,label="{84\:\ 0x0019|RETURN\l|0x0019: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:167)\l0x001a: RETURN  (r1 I:boolean) \l}"];
Node_86 [shape=record,label="{86\:\ 0x001b|0x001b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:160)\l}"];
Node_88 [shape=record,label="{88\:\ 0x001f|0x001f: NEW_INSTANCE  (r2 I:android.os.Bundle) =  android.os.Bundle  (LINE:170)\l0x0021: INVOKE  (r2 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l}"];
Node_89 [shape=record,label="{89\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x0029  (LINE:171)\l}"];
Node_90 [shape=record,label="{90\:\ 0x0026|0x0026: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.CONTENT_URI\"  (LINE:172)\l}"];
Node_92 [shape=record,label="{92\:\ 0x002b|0x002b: INVOKE  (r4 I:android.net.Uri) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getContentUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:174)\l0x002f: INVOKE  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)]), (r3 I:java.lang.String), (r4 I:android.os.Parcelable) type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)] (LINE:171)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0032|0x0032: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0037  (LINE:175)\l}"];
Node_94 [shape=record,label="{94\:\ 0x0034|0x0034: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.CONTENT_DESCRIPTION\"  (LINE:176)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0039|0x0039: INVOKE  (r4 I:android.content.ClipDescription) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getDescription():android.content.ClipDescription A[MD:():android.content.ClipDescription (m)] (LINE:178)\l0x003d: INVOKE  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)]), (r3 I:java.lang.String), (r4 I:android.os.Parcelable) type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)] (LINE:175)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0040|0x0040: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x0045  (LINE:179)\l}"];
Node_98 [shape=record,label="{98\:\ 0x0042|0x0042: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.CONTENT_LINK_URI\"  (LINE:180)\l}"];
Node_100 [shape=record,label="{100\:\ 0x0047|0x0047: INVOKE  (r4 I:android.net.Uri) = \l  (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat)])\l type: VIRTUAL call: androidx.core.view.inputmethod.InputContentInfoCompat.getLinkUri():android.net.Uri A[MD:():android.net.Uri (m)] (LINE:182)\l0x004b: INVOKE  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)]), (r3 I:java.lang.String), (r4 I:android.os.Parcelable) type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)] (LINE:179)\l}"];
Node_101 [shape=record,label="{101\:\ 0x004e|0x004e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:103:0x0053  (LINE:183)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0050|0x0050: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.CONTENT_FLAGS\"  (LINE:184)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0055|0x0055: INVOKE  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)]), (r3 I:java.lang.String), (r8 I:int A[D('flags' int)]) type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)] (LINE:183)\l}"];
Node_105 [shape=record,label="{105\:\ 0x0058|0x0058: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:107:0x005d  (LINE:187)\l}"];
Node_106 [shape=record,label="{106\:\ 0x005a|0x005a: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.CONTENT_OPTS\"  (LINE:188)\l}"];
Node_108 [shape=record,label="{108\:\ 0x005f|0x005f: INVOKE  \l  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)])\l  (r3 I:java.lang.String)\l  (r9 I:android.os.Parcelable A[D('opts' android.os.Bundle)])\l type: VIRTUAL call: android.os.Bundle.putParcelable(java.lang.String, android.os.Parcelable):void A[MD:(java.lang.String, android.os.Parcelable):void (c)] (LINE:187)\l}"];
Node_109 [shape=record,label="{109\:\ 0x0062|0x0062: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('interop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x0067  (LINE:192)\l}"];
Node_110 [shape=record,label="{110\:\ 0x0064|0x0064: CONST_STR  (r3 I:java.lang.String) =  \"android.support.v13.view.inputmethod.InputConnectionCompat.COMMIT_CONTENT\"  (LINE:193)\l}"];
Node_112 [shape=record,label="{112\:\ 0x0069|0x0069: INVOKE  (r3 I:boolean) = \l  (r5 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection)])\l  (r3 I:java.lang.String)\l  (r2 I:android.os.Bundle A[D('params' android.os.Bundle)])\l type: INTERFACE call: android.view.inputmethod.InputConnection.performPrivateCommand(java.lang.String, android.os.Bundle):boolean A[MD:(java.lang.String, android.os.Bundle):boolean (c)] (LINE:192)\l}"];
Node_113 [shape=record,label="{113\:\ 0x006d|RETURN\l|0x006d: RETURN  (r3 I:boolean) \l}"];
Node_111 [shape=record,label="{111\:\ 0x0067|0x0067: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.COMMIT_CONTENT\"  (LINE:194)\l}"];
Node_107 [shape=record,label="{107\:\ 0x005d|0x005d: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.CONTENT_OPTS\"  (LINE:189)\l}"];
Node_103 [shape=record,label="{103\:\ 0x0053|0x0053: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.CONTENT_FLAGS\"  (LINE:185)\l}"];
Node_99 [shape=record,label="{99\:\ 0x0045|0x0045: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.CONTENT_LINK_URI\"  (LINE:181)\l}"];
Node_95 [shape=record,label="{95\:\ 0x0037|0x0037: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.CONTENT_DESCRIPTION\"  (LINE:177)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0029|0x0029: CONST_STR  (r3 I:java.lang.String) =  \"androidx.core.view.inputmethod.InputConnectionCompat.CONTENT_URI\"  (LINE:173)\l}"];
Node_87 [shape=record,label="{87\:\ 0x001d|0x001d: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('interop' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:163)\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.view.inputmethod.InputConnectionCompat.commitContent((r5 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.core.view.inputmethod.InputContentInfoCompat A[D('inputContentInfo' androidx.core.view.inputmethod.InputContentInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.os.Bundle A[D('opts' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:85:0x001a \-\> B:77:?, CROSS_EDGE: B:113:0x006d \-\> B:77:?, CROSS_EDGE: B:111:0x0067 \-\> B:112:0x0069, CROSS_EDGE: B:107:0x005d \-\> B:108:0x005f, CROSS_EDGE: B:103:0x0053 \-\> B:104:0x0055, CROSS_EDGE: B:99:0x0045 \-\> B:100:0x0047, CROSS_EDGE: B:95:0x0037 \-\> B:96:0x0039, CROSS_EDGE: B:91:0x0029 \-\> B:92:0x002b, CROSS_EDGE: B:87:0x001d \-\> B:88:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x001d: r1 'interop' Z\l  0x0016\-0x0077: r0 'protocol' I\l  0x001e\-0x0077: r1 'interop' Z\l  0x0024\-0x0077: r2 'params' Landroid\/os\/Bundle;\l  \-1 \-0x0077: r5 'inputConnection' Landroid\/view\/inputmethod\/InputConnection;\l  \-1 \-0x0077: r6 'editorInfo' Landroid\/view\/inputmethod\/EditorInfo;\l  \-1 \-0x0077: r7 'inputContentInfo' Landroidx\/core\/view\/inputmethod\/InputContentInfoCompat;\l  \-1 \-0x0077: r8 'flags' I\l  \-1 \-0x0077: r9 'opts' Landroid\/os\/Bundle;\l}"];
MethodNode -> Node_76;Node_76 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_82;
Node_80 -> Node_81;
Node_81 -> Node_77;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_83 -> Node_86;
Node_83 -> Node_87;
Node_84 -> Node_77;
Node_86 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_91;
Node_90 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_96;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_99;
Node_98 -> Node_100;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_103;
Node_102 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_107;
Node_106 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_111;
Node_110 -> Node_112;
Node_112 -> Node_113;
Node_113 -> Node_77;
Node_111 -> Node_112;
Node_107 -> Node_108;
Node_103 -> Node_104;
Node_99 -> Node_100;
Node_95 -> Node_96;
Node_91 -> Node_92;
Node_87 -> Node_88;
}

