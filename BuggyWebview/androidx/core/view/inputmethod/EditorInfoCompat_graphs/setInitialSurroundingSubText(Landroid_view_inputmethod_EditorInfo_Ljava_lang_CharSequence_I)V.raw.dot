digraph "CFG forandroidx.core.view.inputmethod.EditorInfoCompat.setInitialSurroundingSubText(Landroid\/view\/inputmethod\/EditorInfo;Ljava\/lang\/CharSequence;I)V" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: INVOKE  (r7 I:java.lang.Object A[D('subText' java.lang.CharSequence)]) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:237)\l0x0003: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:238)\l0x0005: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:37:0x000d \l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|0x0009: INVOKE  \l  (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)])\l  (r7 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence)])\l  (r8 I:int A[D('subTextStart' int)])\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.Api30Impl.setInitialSurroundingSubText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int):void (m)] (LINE:239)\l}"];
Node_36 [shape=record,label="{36\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:240)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x000d|0x000d: IGET  (r0 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelStart int  (LINE:244)\l0x000f: IGET  (r1 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelEnd int \l}"];
Node_38 [shape=record,label="{38\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:40:0x0017 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0013|0x0013: IGET  (r0 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelEnd int  (LINE:245)\l0x0015: ARITH  (r0 I:int) = (r0 I:int) \- (r8 I:int A[D('subTextStart' int)]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x001a|0x001b: IGET  (r1 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelStart int  (LINE:247)\l0x001d: IGET  (r2 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelEnd int \l}"];
Node_42 [shape=record,label="{42\:\ 0x001f|0x001f: IF  (r1 I:??[int, byte, short, char]) \<= (r2 I:??[int, byte, short, char])  \-\> B:44:0x0025 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0021|0x0021: IGET  (r1 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelStart int  (LINE:248)\l0x0023: ARITH  (r1 I:int) = (r1 I:int) \- (r8 I:int A[D('subTextStart' int)]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0028|0x0029: INVOKE  (r2 I:int) = (r7 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:251)\l0x002d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:253)\l0x002e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x002f|0x002f: IF  (r8 I:??[int, byte, short, char] A[D('subTextStart' int)]) \< (0 ??[int, byte, short, char])  \-\> B:60:0x004e \l}"];
Node_47 [shape=record,label="{47\:\ 0x0031|0x0031: IF  (r0 I:??[int, byte, short, char] A[D('subTextSelStart' int)]) \< (0 ??[int, byte, short, char])  \-\> B:60:0x004e \l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|0x0033: IF  (r1 I:??[int, byte, short, char] A[D('subTextSelEnd' int)]) \<= (r2 I:??[int, byte, short, char] A[D('subTextLength' int)])  \-\> B:50:0x0036 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0036|0x0036: IGET  (r5 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.inputType int  (LINE:259)\l0x0038: INVOKE  (r5 I:boolean) = (r5 I:int) type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.isPasswordInputType(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x003c|0x003c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0042 \l}"];
Node_52 [shape=record,label="{52\:\ 0x003e|0x003e: INVOKE  \l  (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)])\l  (r3 I:java.lang.CharSequence)\l  (r4 I:int)\l  (r4 I:int)\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.setSurroundingText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void (m)] (LINE:260)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0041|RETURN\l|0x0041: RETURN    (LINE:261)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0042|0x0042: CONST  (r3 I:??[int, float, short, byte, char]) = (2048(0x800, float:2.87E\-42) ??[int, float, short, byte, char])  (LINE:264)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0044|0x0044: IF  (r2 I:??[int, byte, short, char] A[D('subTextLength' int)]) \> (r3 I:??[int, byte, short, char])  \-\> B:58:0x004a \l}"];
Node_56 [shape=record,label="{56\:\ 0x0046|0x0046: INVOKE  \l  (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)])\l  (r7 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence)])\l  (r0 I:int A[D('subTextSelStart' int)])\l  (r1 I:int A[D('subTextSelEnd' int)])\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.setSurroundingText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void (m)] (LINE:265)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0049|RETURN\l|0x0049: RETURN    (LINE:266)\l}"];
Node_58 [shape=record,label="{58\:\ 0x004a|0x004a: INVOKE  \l  (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)])\l  (r7 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence)])\l  (r0 I:int A[D('subTextSelStart' int)])\l  (r1 I:int A[D('subTextSelEnd' int)])\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.trimLongSurroundingText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void (m)] (LINE:269)\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|RETURN\l|0x004d: RETURN    (LINE:270)\l}"];
Node_60 [shape=record,label="{60\:\ 0x004e|0x004e: INVOKE  \l  (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)])\l  (r3 I:java.lang.CharSequence)\l  (r4 I:int)\l  (r4 I:int)\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.setSurroundingText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void (m)] (LINE:254)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0051|RETURN\l|0x0051: RETURN    (LINE:255)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0025|0x0025: IGET  (r1 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelEnd int  (LINE:249)\l0x0027: ARITH  (r1 I:int) = (r1 I:int) \- (r8 I:int A[D('subTextStart' int)]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0017|0x0017: IGET  (r0 I:int) = (r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo)]) android.view.inputmethod.EditorInfo.initialSelStart int  (LINE:246)\l0x0019: ARITH  (r0 I:int) = (r0 I:int) \- (r8 I:int A[D('subTextStart' int)]) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.inputmethod.EditorInfoCompat.setInitialSurroundingSubText((r6 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('subTextStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:53:0x0041 \-\> B:32:?, CROSS_EDGE: B:57:0x0049 \-\> B:32:?, CROSS_EDGE: B:59:0x004d \-\> B:32:?, CROSS_EDGE: B:61:0x0051 \-\> B:32:?, CROSS_EDGE: B:47:0x0031 \-\> B:60:0x004e, CROSS_EDGE: B:46:0x002f \-\> B:60:0x004e, CROSS_EDGE: B:44:0x0025 \-\> B:45:0x0028, CROSS_EDGE: B:40:0x0017 \-\> B:41:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0051: r0 'subTextSelStart' I\l  0x0029\-0x0051: r1 'subTextSelEnd' I\l  0x002d\-0x0051: r2 'subTextLength' I\l  \-1 \-0x0051: r6 'editorInfo' Landroid\/view\/inputmethod\/EditorInfo;\l  \-1 \-0x0051: r7 'subText' Ljava\/lang\/CharSequence;\l  \-1 \-0x0051: r8 'subTextStart' I\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_32;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_60;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_60;
Node_48 -> Node_50;
Node_48 -> Node_60[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_53;
Node_53 -> Node_32;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_58;
Node_56 -> Node_57;
Node_57 -> Node_32;
Node_58 -> Node_59;
Node_59 -> Node_32;
Node_60 -> Node_61;
Node_61 -> Node_32;
Node_44 -> Node_45;
Node_40 -> Node_41;
}

