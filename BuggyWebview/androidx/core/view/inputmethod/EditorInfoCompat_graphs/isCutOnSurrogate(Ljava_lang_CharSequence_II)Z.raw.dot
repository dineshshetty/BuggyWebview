digraph "CFG forandroidx.core.view.inputmethod.EditorInfoCompat.isCutOnSurrogate(Ljava\/lang\/CharSequence;II)Z" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: SWITCH  (r3 I:?? A[D('policy' int)])\l case 0: goto B:16:0x000e\l case 1: goto B:14:0x0005\l default: goto B:12:0x0003  (LINE:461)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0003|RETURN\l|0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:467)\l0x0004: RETURN  (r0 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: INVOKE  (r0 I:char) = (r1 I:java.lang.CharSequence A[D('sourceText' java.lang.CharSequence)]), (r2 I:int A[D('cutPosition' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:465)\l0x0009: INVOKE  (r0 I:boolean) = (r0 I:char) type: STATIC call: java.lang.Character.isHighSurrogate(char):boolean A[MD:(char):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: INVOKE  (r0 I:char) = (r1 I:java.lang.CharSequence A[D('sourceText' java.lang.CharSequence)]), (r2 I:int A[D('cutPosition' int)]) type: INTERFACE call: java.lang.CharSequence.charAt(int):char A[MD:(int):char (c)] (LINE:463)\l0x0012: INVOKE  (r0 I:boolean) = (r0 I:char) type: STATIC call: java.lang.Character.isLowSurrogate(char):boolean A[MD:(char):boolean (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.view.inputmethod.EditorInfoCompat.isCutOnSurrogate((r1 I:java.lang.CharSequence A[D('sourceText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('cutPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('policy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:10:?, CROSS_EDGE: B:17:0x0016 \-\> B:10:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r1 'sourceText' Ljava\/lang\/CharSequence;\l  \-1 \-0x001f: r2 'cutPosition' I\l  \-1 \-0x001f: r3 'policy' I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_11 -> Node_16;
Node_12 -> Node_10;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

