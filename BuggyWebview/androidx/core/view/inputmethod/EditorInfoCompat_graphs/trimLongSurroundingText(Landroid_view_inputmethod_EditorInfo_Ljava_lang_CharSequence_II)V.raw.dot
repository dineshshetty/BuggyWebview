digraph "CFG forandroidx.core.view.inputmethod.EditorInfoCompat.trimLongSurroundingText(Landroid\/view\/inputmethod\/EditorInfo;Ljava\/lang\/CharSequence;II)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('subText' java.lang.CharSequence)])  (LINE:291)\l0x0002: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selStart' int)]) \l0x0004: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selEnd' int)]) \l0x0006: ARITH  (r3 I:int) = (r2 I:int) \- (r1 I:int) \l0x0008: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:293)\l0x0009: CONST  (r5 I:??[int, float, short, byte, char]) = (1024(0x400, float:1.435E\-42) ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: IF  (r3 I:??[int, byte, short, char] A[D('sourceSelLength' int)]) \<= (r5 I:??[int, byte, short, char])  \-\> B:23:0x000f \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:294)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: INVOKE  (r6 I:int) = (r17 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:297)\l0x0014: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) \l0x0015: ARITH  (r7 I:int) = (2048 int) \- (r5 I:int A[D('newSelLength' int)])  (LINE:298)\l0x0017: CONST  (r8 I:??[long, double]) = (4605380978949069210(0x3fe999999999999a, double:0.8) ??[long, double])  (LINE:299)\l0x001c: CAST (r10 I:double) = (double) (r7 I:int A[D('maxLengthMinusSelection' int)]) \l0x001d: ARITH  (r10 I:double) = (r10 I:double) * (r8 I:double) \l0x001f: CAST (r8 I:int) = (int) (r10 I:double) \l0x0020: INVOKE  (r8 I:int) = (r1 I:int), (r8 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:300)\l0x0024: ARITH  (r9 I:int) = (r7 I:int A[D('maxLengthMinusSelection' int)]) \- (r8 I:int A[D('possibleMaxBeforeCursorLength' int)])  (LINE:301)\l0x0026: INVOKE  (r9 I:int) = (r6 I:int A[D('subTextAfterCursorLength' int)]), (r9 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x002a: ARITH  (r10 I:int) = (r7 I:int A[D('maxLengthMinusSelection' int)]) \- (r9 I:int A[D('newAfterCursorLength' int)])  (LINE:303)\l0x002c: INVOKE  (r10 I:int) = (r1 I:int), (r10 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0030: ARITH  (r11 I:int) = (r1 I:int) \- (r10 I:int A[D('newBeforeCursorLength' int)])  (LINE:307)\l0x0032: ARITH  (r12 I:int) = (r1 I:int) \- (r10 I:int A[D('newBeforeCursorLength' int)])  (LINE:310)\l0x0034: INVOKE  (r12 I:boolean) = (r0 I:java.lang.CharSequence), (r12 I:int), (r4 I:int) type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.isCutOnSurrogate(java.lang.CharSequence, int, int):boolean A[MD:(java.lang.CharSequence, int, int):boolean (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0038|0x0038: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x003e \l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|0x003a: ARITH  (r11 I:int) = (r11 I:int A[D('newBeforeCursorHead' int)]) + (1 int)  (LINE:312)\l0x003c: ARITH  (r10 I:int) = (r10 I:int A[D('newBeforeCursorLength' int)]) + (\-1 int)  (LINE:313)\l}"];
Node_27 [shape=record,label="{27\:\ 0x003e|0x003e: ARITH  (r12 I:int) = (r2 I:int) + (r9 I:int A[D('newAfterCursorLength' int)])  (LINE:315)\l0x0040: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0041: ARITH  (r12 I:int) = (r12 I:int) \- (r13 I:int) \l0x0042: INVOKE  (r12 I:boolean) = (r0 I:java.lang.CharSequence), (r12 I:int), (r13 I:int) type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.isCutOnSurrogate(java.lang.CharSequence, int, int):boolean A[MD:(java.lang.CharSequence, int, int):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0046|0x0046: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x004a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0048|0x0048: ARITH  (r9 I:int) = (r9 I:int A[D('newAfterCursorLength' int)]) + (\-1 int)  (LINE:317)\l}"];
Node_30 [shape=record,label="{30\:\ 0x004a|0x004a: ARITH  (r12 I:int) = (r10 I:int A[D('newBeforeCursorLength' int)]) + (r5 I:int A[D('newSelLength' int)])  (LINE:321)\l0x004c: ARITH  (r12 I:int) = (r12 I:int) + (r9 I:int A[D('newAfterCursorLength' int)]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|0x004d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newSelLength' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sourceSelLength' int)])  \-\> B:33:0x0068  (LINE:323)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004f|0x004f: ARITH  (r14 I:int) = (r11 I:int A[D('newBeforeCursorHead' int)]) + (r10 I:int A[D('newBeforeCursorLength' int)])  (LINE:324)\l0x0051: INVOKE  (r14 I:java.lang.CharSequence) = (r0 I:java.lang.CharSequence), (r11 I:int A[D('newBeforeCursorHead' int)]), (r14 I:int) type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)]\l0x0055: ARITH  (r15 I:int) = (r2 I:int) + (r9 I:int A[D('newAfterCursorLength' int)])  (LINE:326)\l0x0057: INVOKE  (r15 I:java.lang.CharSequence) = (r0 I:java.lang.CharSequence), (r2 I:int), (r15 I:int) type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)]\l0x005b: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:329)\l0x005c: NEW_ARRAY  (r13 I:java.lang.CharSequence[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: java.lang.CharSequence[] \l0x005e: APUT  \l  (r13 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r14 I:??[OBJECT, ARRAY] A[D('beforeCursor' java.lang.CharSequence)])\l \l0x0060: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0061: APUT  \l  (r13 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r15 I:??[OBJECT, ARRAY] A[D('afterCursor' java.lang.CharSequence)])\l \l0x0063: INVOKE  (r4 I:java.lang.CharSequence) = (r13 I:java.lang.CharSequence[]) type: STATIC call: android.text.TextUtils.concat(java.lang.CharSequence[]):java.lang.CharSequence A[MD:(java.lang.CharSequence[]):java.lang.CharSequence VARARG (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x006e|0x006e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newBeforeCursorHead' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:337)\l0x006f: ARITH  (r13 I:int) = (r11 I:int A[D('newBeforeCursorHead' int)]) + (r10 I:int A[D('newBeforeCursorLength' int)])  (LINE:338)\l0x0071: ARITH  (r14 I:int) = (r13 I:int A[D('newSelHead' int)]) + (r5 I:int A[D('newSelLength' int)])  (LINE:339)\l0x0073: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('editorInfo' android.view.inputmethod.EditorInfo)]) \l0x0075: INVOKE  \l  (r15 I:android.view.inputmethod.EditorInfo)\l  (r4 I:java.lang.CharSequence A[D('newInitialSurroundingText' java.lang.CharSequence)])\l  (r13 I:int A[D('newSelHead' int)])\l  (r14 I:int)\l type: STATIC call: androidx.core.view.inputmethod.EditorInfoCompat.setSurroundingText(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void A[MD:(android.view.inputmethod.EditorInfo, java.lang.CharSequence, int, int):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0078|RETURN\l|0x0078: RETURN    (LINE:341)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|0x0068: ARITH  (r4 I:int A[D('newInitialSurroundingText' java.lang.CharSequence)]) = (r11 I:int A[D('newBeforeCursorHead' int)]) + (r12 I:int A[D('newTextLength' int)])  (LINE:331)\l0x006a: INVOKE  (r4 I:java.lang.CharSequence) = (r0 I:java.lang.CharSequence), (r11 I:int A[D('newBeforeCursorHead' int)]), (r4 I:int) type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)] (LINE:332)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sourceSelLength' int)]) \l}"];
MethodNode[shape=record,label="{private static void androidx.core.view.inputmethod.EditorInfoCompat.trimLongSurroundingText((r16 I:android.view.inputmethod.EditorInfo A[D('editorInfo' android.view.inputmethod.EditorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.CharSequence A[D('subText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('selStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('selEnd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0068 \-\> B:34:0x006e, CROSS_EDGE: B:28:0x0046 \-\> B:30:0x004a, CROSS_EDGE: B:25:0x0038 \-\> B:27:0x003e, CROSS_EDGE: B:23:0x000f \-\> B:24:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0055\-0x0067: r14 'beforeCursor' Ljava\/lang\/CharSequence;\l  0x005b\-0x0067: r15 'afterCursor' Ljava\/lang\/CharSequence;\l  0x0067\-0x0068: r4 'newInitialSurroundingText' Ljava\/lang\/CharSequence;\l  0x0008\-0x0078: r3 'sourceSelLength' I\l  0x006e\-0x0078: r4 'newInitialSurroundingText' Ljava\/lang\/CharSequence;\l  0x0010\-0x0078: r5 'newSelLength' I\l  0x0015\-0x0078: r6 'subTextAfterCursorLength' I\l  0x0017\-0x0078: r7 'maxLengthMinusSelection' I\l  0x0024\-0x0078: r8 'possibleMaxBeforeCursorLength' I\l  0x002a\-0x0078: r9 'newAfterCursorLength' I\l  0x0030\-0x0078: r10 'newBeforeCursorLength' I\l  0x0032\-0x0078: r11 'newBeforeCursorHead' I\l  0x004d\-0x0078: r12 'newTextLength' I\l  0x0071\-0x0078: r13 'newSelHead' I\l  \-1 \-0x0078: r16 'editorInfo' Landroid\/view\/inputmethod\/EditorInfo;\l  \-1 \-0x0078: r17 'subText' Ljava\/lang\/CharSequence;\l  \-1 \-0x0078: r18 'selStart' I\l  \-1 \-0x0078: r19 'selEnd' I\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_19;
Node_33 -> Node_34;
Node_23 -> Node_24;
}

