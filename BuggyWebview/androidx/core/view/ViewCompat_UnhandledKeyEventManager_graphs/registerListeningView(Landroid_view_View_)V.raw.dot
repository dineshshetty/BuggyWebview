digraph "CFG forandroidx.core.view.ViewCompat.UnhandledKeyEventManager.registerListeningView(Landroid\/view\/View;)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: SGET  (r0 I:java.util.ArrayList\<java.lang.ref.WeakReference\<android.view.View\>\>) =  androidx.core.view.ViewCompat.UnhandledKeyEventManager.sViewsWithListeners java.util.ArrayList  (LINE:4745)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lCatch: all \-\> 0x0028\l|0x0003: INVOKE  (r1 I:java.util.Iterator) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[Catch: all \-\> 0x0028, MD:():java.util.Iterator\<E\> (c), TRY_ENTER] (LINE:4746)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|LOOP_START\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lLOOP:0: B:26:0x0007\-\>B:32:0x001b\lCatch: all \-\> 0x0028\l|0x0007: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: all \-\> 0x0028, MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x001c \l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|TryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lCatch: all \-\> 0x0028\l|0x000d: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x0028, MD:():E (c)]\l0x0011: CHECK_CAST (r2 I:java.lang.ref.WeakReference) = (java.lang.ref.WeakReference) (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0028]\l0x0013: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.lang.ref.WeakReference A[D('wv' java.lang.ref.WeakReference\<android.view.View\>)]) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[Catch: all \-\> 0x0028, MD:():T (c)] (LINE:4747)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('v' android.view.View)])  \-\> B:32:0x001b \l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|LOOP_END\lLOOP:0: B:26:0x0007\-\>B:32:0x001b\l|0x001b: GOTO  \-\> 0x0007  (LINE:4750)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0019|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|TryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lCatch: all \-\> 0x0028\l|0x0019: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0028] (LINE:4748)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|RETURN\l|0x001a: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|TryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lCatch: all \-\> 0x0028\l|0x001c: SGET  (r1 I:java.util.ArrayList\<java.lang.ref.WeakReference\<android.view.View\>\>) =  androidx.core.view.ViewCompat.UnhandledKeyEventManager.sViewsWithListeners java.util.ArrayList A[Catch: all \-\> 0x0028] (LINE:4751)\l0x001e: NEW_INSTANCE  (r2 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference A[Catch: all \-\> 0x0028]\l0x0020: INVOKE  (r2 I:java.lang.ref.WeakReference), (r4 I:java.lang.Object A[D('v' android.view.View)]) type: DIRECT call: java.lang.ref.WeakReference.\<init\>(java.lang.Object):void A[Catch: all \-\> 0x0028, MD:(T):void (c)]\l0x0023: INVOKE  (r1 I:java.util.ArrayList), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[Catch: all \-\> 0x0028, MD:(E):boolean (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|TryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\lCatch: all \-\> 0x0028\l|0x0026: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0028] (LINE:4752)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|RETURN\l|0x0027: RETURN    (LINE:4753)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|ExcHandler: all \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0028] (LINE:4752)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0029|TRY_LEAVE\lCatch: all \-\> 0x0028\l}"];
Node_38 [shape=record,label="{38\:\ 0x002a|0x002a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static void androidx.core.view.ViewCompat.UnhandledKeyEventManager.registerListeningView((r4 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x001b \-\> B:26:0x0007, CROSS_EDGE: B:35:0x0027 \-\> B:22:?, CROSS_EDGE: B:38:0x002a \-\> B:22:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x001b: r2 'wv' Ljava\/lang\/ref\/WeakReference;, signature: Ljava\/lang\/ref\/WeakReference\<Landroid\/view\/View;\>;\l  \-1 \-0x002a: r4 'v' Landroid\/view\/View;\lTryCatch #0 \{all \-\> 0x0028, blocks: (B:25:0x0003, B:26:0x0007, B:28:0x000d, B:30:0x0019, B:33:0x001c, B:34:0x0026), top: B:39:0x0003 \}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_39;
Node_39 -> Node_25;
Node_39 -> Node_36;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_41;
Node_28 -> Node_29;
Node_29 -> Node_32;
Node_29 -> Node_40[style=dashed];
Node_32 -> Node_26;
Node_40 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_22;
Node_41 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_22;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_22;
}

