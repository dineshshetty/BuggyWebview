digraph "CFG forandroidx.core.view.ViewCompat.UnhandledKeyEventManager.at(Landroid\/view\/View;)Landroidx\/core\/view\/ViewCompat$UnhandledKeyEventManager;" {
subgraph cluster_Region_2104159419 {
label = "R(2:1|(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|androidx.core.view.ViewCompat$UnhandledKeyEventManager androidx.core.view.ViewCompat.UnhandledKeyEventManager r0 = (androidx.core.view.ViewCompat.UnhandledKeyEventManager) r2.getTag(androidx.core.C0180R.C0183id.tag_unhandled_key_event_manager)\l}"];
subgraph cluster_Region_147248554 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_344201138 {
label = "IF [B:10:0x0008] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0008|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_1935874139 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000a|androidx.core.view.ViewCompat$UnhandledKeyEventManager androidx.core.view.ViewCompat.UnhandledKeyEventManager r1 = new androidx.core.view.ViewCompat.UnhandledKeyEventManager()\lr2.setTag(androidx.core.C0180R.C0183id.tag_unhandled_key_event_manager, r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|RETURN\lORIG_RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_285061316 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static androidx.core.view.ViewCompat$UnhandledKeyEventManager androidx.core.view.ViewCompat.UnhandledKeyEventManager.at((r2v0 'root' android.view.View A[D('root' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0008 \-\> B:12:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

