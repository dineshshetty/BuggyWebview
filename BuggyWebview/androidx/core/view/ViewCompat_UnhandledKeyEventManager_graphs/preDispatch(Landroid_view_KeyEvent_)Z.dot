digraph "CFG forandroidx.core.view.ViewCompat.UnhandledKeyEventManager.preDispatch(Landroid\/view\/KeyEvent;)Z" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|java.lang.ref.WeakReference\<android.view.KeyEvent\> r0 = r6.mLastDispatchedPreViewKeyEvent\l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|if (r0 == null) goto L7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0005}"];
Node_27 [shape=record,label="{27\:\ 0x0009|if (r0.get() != r7) goto L7\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|RETURN\l|return false\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|r6.mLastDispatchedPreViewKeyEvent = new java.lang.ref.WeakReference\<\>(r7)\lr0 = null\landroid.util.SparseArray r2 = getCapturedKeys()\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|if (r7.getAction() != 1) goto L12\l}"];
Node_31 [shape=record,label="{31\:\ 0x001f|int r3 = r2.indexOfKey(r7.getKeyCode())\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|if (r3 \< 0) goto L12\l}"];
Node_33 [shape=record,label="{33\:\ 0x0029|java.lang.ref.WeakReference r0 = r2.valueAt(r3)\lr2.removeAt(r3)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|PHI: r0 \l  PHI: (r0v3 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>) = (r0v2 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>), (r0v2 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>), (r0v8 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>) binds: [B:30:0x001d, B:32:0x0027, B:33:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L14\l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|java.lang.ref.WeakReference r0 = r2.get(r7.getKeyCode())\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|PHI: r0 \l  PHI: (r0v4 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>) = (r0v3 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>), (r0v6 'currentReceiver' java.lang.ref.WeakReference\<android.view.View\>) binds: [B:34:0x0033, B:35:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L21\l}"];
Node_37 [shape=record,label="{37\:\ 0x0042|android.view.View r1 = r0.get()\l}"];
Node_38 [shape=record,label="{38\:\ 0x0048|if (r1 == null) goto L20\l}"];
Node_39 [shape=record,label="{39\:\ 0x004a}"];
Node_40 [shape=record,label="{40\:\ 0x004e|if (androidx.core.view.ViewCompat.isAttachedToWindow(r1) == false) goto L20\l}"];
Node_41 [shape=record,label="{41\:\ 0x0050|onUnhandledKeyEvent(r1, r7)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0053|RETURN\l|return true\l}"];
Node_43 [shape=record,label="{43\:\ 0x0054|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean androidx.core.view.ViewCompat.UnhandledKeyEventManager.preDispatch((r6v0 'this' androidx.core.view.ViewCompat$UnhandledKeyEventManager A[IMMUTABLE_TYPE, THIS]), (r7v0 'event' android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:42:0x0053 \-\> B:23:?, CROSS_EDGE: B:40:0x004e \-\> B:42:0x0053, CROSS_EDGE: B:38:0x0048 \-\> B:42:0x0053, CROSS_EDGE: B:43:0x0054 \-\> B:23:?, CROSS_EDGE: B:34:0x0033 \-\> B:36:0x0040, CROSS_EDGE: B:32:0x0027 \-\> B:34:0x0033, CROSS_EDGE: B:30:0x001d \-\> B:34:0x0033, CROSS_EDGE: B:25:0x0003 \-\> B:29:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_43;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_23;
Node_43 -> Node_23;
}

