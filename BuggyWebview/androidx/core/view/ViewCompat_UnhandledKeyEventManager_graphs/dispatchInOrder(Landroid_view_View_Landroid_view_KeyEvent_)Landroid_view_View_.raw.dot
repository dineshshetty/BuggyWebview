digraph "CFG forandroidx.core.view.ViewCompat.UnhandledKeyEventManager.dispatchInOrder(Landroid\/view\/View;Landroid\/view\/KeyEvent;)Landroid\/view\/View;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: IGET  (r0 I:java.util.WeakHashMap\<android.view.View, java.lang.Boolean\>) = (r5 I:androidx.core.view.ViewCompat$UnhandledKeyEventManager) androidx.core.view.ViewCompat.UnhandledKeyEventManager.mViewsContainingListeners java.util.WeakHashMap  (LINE:4668)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0031 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0005|0x0005: INVOKE  (r0 I:boolean) = (r0 I:java.util.WeakHashMap), (r6 I:java.lang.Object A[D('view' android.view.View)]) type: VIRTUAL call: java.util.WeakHashMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000c \l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|0x000c: INSTANCE_OF  (r0 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) android.view.ViewGroup  (LINE:4671)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0029 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:4672)\l0x0011: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r2 I:int) = (r0 I:android.view.ViewGroup A[D('vg' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)] (LINE:4674)\l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|LOOP_START\lLOOP:0: B:32:0x0019\-\>B:36:0x0026\l|0x0019: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:43:0x0029 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: INVOKE  (r3 I:android.view.View) = (r0 I:android.view.ViewGroup A[D('vg' android.view.ViewGroup)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:4675)\l0x001f: INVOKE  (r4 I:android.view.View) = \l  (r5 I:androidx.core.view.ViewCompat$UnhandledKeyEventManager)\l  (r3 I:android.view.View A[D('v' android.view.View)])\l  (r7 I:android.view.KeyEvent A[D('event' android.view.KeyEvent)])\l type: DIRECT call: androidx.core.view.ViewCompat.UnhandledKeyEventManager.dispatchInOrder(android.view.View, android.view.KeyEvent):android.view.View A[MD:(android.view.View, android.view.KeyEvent):android.view.View (m)] (LINE:4676)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0023|0x0023: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumer' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0026  (LINE:4677)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0026|LOOP_END\lLOOP:0: B:32:0x0019\-\>B:36:0x0026\l|0x0026: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int)  (LINE:4674)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|RETURN\l|0x0025: RETURN  (r4 I:android.view.View A[D('consumer' android.view.View)])  (LINE:4678)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0029|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0029|0x0029: INVOKE  (r0 I:boolean) = \l  (r5 I:androidx.core.view.ViewCompat$UnhandledKeyEventManager)\l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r7 I:android.view.KeyEvent A[D('event' android.view.KeyEvent)])\l type: DIRECT call: androidx.core.view.ViewCompat.UnhandledKeyEventManager.onUnhandledKeyEvent(android.view.View, android.view.KeyEvent):boolean A[MD:(android.view.View, android.view.KeyEvent):boolean (m)] (LINE:4682)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|0x002d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0030 \l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|RETURN\l|0x002f: RETURN  (r6 I:android.view.View A[D('view' android.view.View)])  (LINE:4683)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|RETURN\l|0x0030: RETURN  (r1 I:android.view.View)  (LINE:4685)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0031|RETURN\l|0x0031: RETURN  (r1 I:android.view.View)  (LINE:4669)\l}"];
MethodNode[shape=record,label="{private android.view.View androidx.core.view.ViewCompat.UnhandledKeyEventManager.dispatchInOrder((r5 'this' I:androidx.core.view.ViewCompat$UnhandledKeyEventManager A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0026 \-\> B:32:0x0019, CROSS_EDGE: B:39:0x002f \-\> B:23:?, CROSS_EDGE: B:40:0x0030 \-\> B:23:?, CROSS_EDGE: B:30:0x000e \-\> B:37:0x0029, CROSS_EDGE: B:41:0x0031 \-\> B:23:?, CROSS_EDGE: B:25:0x0003 \-\> B:41:0x0031\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0026: r3 'v' Landroid\/view\/View;\l  0x0023\-0x0026: r4 'consumer' Landroid\/view\/View;\l  0x0013\-0x0029: r0 'vg' Landroid\/view\/ViewGroup;\l  0x0019\-0x0029: r2 'i' I\l  \-1 \-0x0031: r6 'view' Landroid\/view\/View;\l  \-1 \-0x0031: r7 'event' Landroid\/view\/KeyEvent;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_41;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_41[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_43;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_42[style=dashed];
Node_36 -> Node_32;
Node_42 -> Node_35;
Node_35 -> Node_23;
Node_43 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_23;
Node_40 -> Node_23;
Node_41 -> Node_23;
}

