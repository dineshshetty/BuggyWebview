digraph "CFG forandroidx.core.view.ViewCompat.UnhandledKeyEventManager.dispatch(Landroid\/view\/View;Landroid\/view\/KeyEvent;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0004|if (r6.getAction() != 0) goto L4\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|recalcViewsWithUnhandled()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|android.view.View r0 = dispatchInOrder(r5, r6)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r6.getAction() != 0) goto L11\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|int r1 = r6.getKeyCode()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|if (r0 == null) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019}"];
Node_27 [shape=record,label="{27\:\ 0x001d|if (android.view.KeyEvent.isModifierKey(r1) != false) goto L11\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|getCapturedKeys().put(r1, new java.lang.ref.WeakReference\<\>(r0))\l}"];
Node_29 [shape=record,label="{29\:\ 0x002b|if (r0 == null) goto L14\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|SYNTHETIC\lRETURN\l|return true\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean androidx.core.view.ViewCompat.UnhandledKeyEventManager.dispatch((r4v0 'this' androidx.core.view.ViewCompat$UnhandledKeyEventManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'root' android.view.View A[D('root' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'event' android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x002f \-\> B:32:0x0030, CROSS_EDGE: B:27:0x001d \-\> B:29:0x002b, CROSS_EDGE: B:25:0x0017 \-\> B:29:0x002b, CROSS_EDGE: B:23:0x0011 \-\> B:29:0x002b, CROSS_EDGE: B:20:0x0004 \-\> B:22:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_18;
Node_31 -> Node_18;
}

