digraph "CFG forandroidx.core.view.MenuHostHelper.\<init\>(Ljava\/lang\/Runnable;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:49)\l0x0003: NEW_INSTANCE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) =  java.util.concurrent.CopyOnWriteArrayList  (LINE:39)\l0x0005: INVOKE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) type: DIRECT call: java.util.concurrent.CopyOnWriteArrayList.\<init\>():void A[MD:():void (c)]\l0x0008: IPUT  \l  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<androidx.core.view.MenuProvider\>)\l  (r1 I:androidx.core.view.MenuHostHelper)\l androidx.core.view.MenuHostHelper.mMenuProviders java.util.concurrent.CopyOnWriteArrayList \l0x000a: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap  (LINE:40)\l0x000c: INVOKE  (r0 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x000f: IPUT  \l  (r0 I:java.util.Map\<androidx.core.view.MenuProvider, androidx.core.view.MenuHostHelper$LifecycleContainer\>)\l  (r1 I:androidx.core.view.MenuHostHelper)\l androidx.core.view.MenuHostHelper.mProviderToLifecycleContainers java.util.Map \l0x0011: IPUT  (r2 I:java.lang.Runnable A[D('onInvalidateMenuCallback' java.lang.Runnable)]), (r1 I:androidx.core.view.MenuHostHelper) androidx.core.view.MenuHostHelper.mOnInvalidateMenuCallback java.lang.Runnable  (LINE:50)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN    (LINE:51)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.core.view.MenuHostHelper.\<init\>((r1 'this' I:androidx.core.view.MenuHostHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Runnable A[D('onInvalidateMenuCallback' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 'onInvalidateMenuCallback' Ljava\/lang\/Runnable;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

