digraph "CFG forandroidx.core.view.DisplayCompat.ModeCompat.\<init\>(Landroid\/view\/Display$Mode;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r3 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:344)\l0x0003: CONST_STR  (r0 I:java.lang.String) =  \"mode == null, can't wrap a null reference\"  (LINE:345)\l0x0005: INVOKE  (r4 I:java.lang.Object A[D('mode' android.view.Display$Mode)]), (r0 I:java.lang.Object) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object, java.lang.Object):java.lang.Object A[MD:\<T\>:(T, java.lang.Object):T (m)]\l0x0008: NEW_INSTANCE  (r0 I:android.graphics.Point) =  android.graphics.Point  (LINE:347)\l0x000a: INVOKE  (r1 I:int) = (r4 I:android.view.Display$Mode A[D('mode' android.view.Display$Mode)]) type: STATIC call: androidx.core.view.DisplayCompat.ModeCompat.Api23Impl.getPhysicalWidth(android.view.Display$Mode):int A[MD:(android.view.Display$Mode):int (m)]\l0x000e: INVOKE  (r2 I:int) = (r4 I:android.view.Display$Mode A[D('mode' android.view.Display$Mode)]) type: STATIC call: androidx.core.view.DisplayCompat.ModeCompat.Api23Impl.getPhysicalHeight(android.view.Display$Mode):int A[MD:(android.view.Display$Mode):int (m)] (LINE:348)\l0x0012: INVOKE  (r0 I:android.graphics.Point), (r1 I:int), (r2 I:int) type: DIRECT call: android.graphics.Point.\<init\>(int, int):void A[MD:(int, int):void (c)]\l0x0015: IPUT  (r0 I:android.graphics.Point), (r3 I:androidx.core.view.DisplayCompat$ModeCompat) androidx.core.view.DisplayCompat.ModeCompat.mPhysicalSize android.graphics.Point \l0x0017: IPUT  \l  (r4 I:android.view.Display$Mode A[D('mode' android.view.Display$Mode)])\l  (r3 I:androidx.core.view.DisplayCompat$ModeCompat)\l androidx.core.view.DisplayCompat.ModeCompat.mMode android.view.Display$Mode  (LINE:349)\l0x0019: IPUT  (r5 I:boolean A[D('isNative' boolean)]), (r3 I:androidx.core.view.DisplayCompat$ModeCompat) androidx.core.view.DisplayCompat.ModeCompat.mIsNative boolean  (LINE:350)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:351)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.core.view.DisplayCompat.ModeCompat.\<init\>((r3 'this' I:androidx.core.view.DisplayCompat$ModeCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.Display$Mode A[D('mode' android.view.Display$Mode), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('isNative' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x001b: r4 'mode' Landroid\/view\/Display$Mode;\l  \-1 \-0x001b: r5 'isNative' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

