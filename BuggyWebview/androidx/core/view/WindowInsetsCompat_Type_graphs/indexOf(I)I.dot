digraph "CFG forandroidx.core.view.WindowInsetsCompat.Type.indexOf(I)I" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|switch(r3) \{\l    case 1: goto L13;\l    case 2: goto L12;\l    case 4: goto L11;\l    case 8: goto L10;\l    case 16: goto L9;\l    case 32: goto L8;\l    case 64: goto L7;\l    case 128: goto L6;\l    case 256: goto L5;\l    default: goto L2;\l\}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0003|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"type needs to be \>= FIRST and \<= LAST, type=\")\lr1.append(r3)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\l|return 8\l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|RETURN\l|return 7\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|RETURN\l|return 6\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|RETURN\l|return 5\l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|RETURN\l|return 4\l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|RETURN\l|return 3\l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|RETURN\l|return 2\l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|RETURN\l|return 1\l}"];
Node_44 [shape=record,label="{44\:\ 0x002b|RETURN\l|return 0\l}"];
MethodNode[shape=record,label="{static int androidx.core.view.WindowInsetsCompat.Type.indexOf((r3v0 'type' int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001c \-\> B:24:?, CROSS_EDGE: B:31:0x001e \-\> B:24:?, CROSS_EDGE: B:33:0x0020 \-\> B:24:?, CROSS_EDGE: B:35:0x0022 \-\> B:24:?, CROSS_EDGE: B:37:0x0024 \-\> B:24:?, CROSS_EDGE: B:39:0x0026 \-\> B:24:?, CROSS_EDGE: B:41:0x0028 \-\> B:24:?, CROSS_EDGE: B:43:0x002a \-\> B:24:?, CROSS_EDGE: B:45:0x002c \-\> B:24:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_30;
Node_25 -> Node_32;
Node_25 -> Node_34;
Node_25 -> Node_36;
Node_25 -> Node_38;
Node_25 -> Node_40;
Node_25 -> Node_42;
Node_25 -> Node_44;
Node_26 -> Node_27;
Node_27 -> Node_24;
Node_28 -> Node_24;
Node_30 -> Node_24;
Node_32 -> Node_24;
Node_34 -> Node_24;
Node_36 -> Node_24;
Node_38 -> Node_24;
Node_40 -> Node_24;
Node_42 -> Node_24;
Node_44 -> Node_24;
}

