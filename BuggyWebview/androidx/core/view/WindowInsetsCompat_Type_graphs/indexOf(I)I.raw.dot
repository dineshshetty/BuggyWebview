digraph "CFG forandroidx.core.view.WindowInsetsCompat.Type.indexOf(I)I" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: SWITCH  (r3 I:?? A[D('type' int)])\l case 1: goto B:44:0x002b\l case 2: goto B:42:0x0029\l case 4: goto B:40:0x0027\l case 8: goto B:38:0x0025\l case 16: goto B:36:0x0023\l case 32: goto B:34:0x0021\l case 64: goto B:32:0x001f\l case 128: goto B:30:0x001d\l case 256: goto B:28:0x001a\l default: goto B:26:0x0003  (LINE:2026)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0003|0x0003: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:2046)\l0x0005: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0007: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"type needs to be \>= FIRST and \<= LAST, type=\" \l0x000c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000f: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int A[D('type' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0012: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0016: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|RETURN\l|0x001a: CONST  (r0 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:2044)\l0x001c: RETURN  (r0 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|RETURN\l|0x001d: CONST  (r0 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char])  (LINE:2042)\l0x001e: RETURN  (r0 I:int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|RETURN\l|0x001f: CONST  (r0 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char])  (LINE:2040)\l0x0020: RETURN  (r0 I:int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|RETURN\l|0x0021: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:2038)\l0x0022: RETURN  (r0 I:int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|RETURN\l|0x0023: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:2036)\l0x0024: RETURN  (r0 I:int) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|RETURN\l|0x0025: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:2034)\l0x0026: RETURN  (r0 I:int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|RETURN\l|0x0027: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:2032)\l0x0028: RETURN  (r0 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|RETURN\l|0x0029: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2030)\l0x002a: RETURN  (r0 I:int) \l}"];
Node_44 [shape=record,label="{44\:\ 0x002b|RETURN\l|0x002b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2028)\l0x002c: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{static int androidx.core.view.WindowInsetsCompat.Type.indexOf((r3 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x001c \-\> B:24:?, CROSS_EDGE: B:31:0x001e \-\> B:24:?, CROSS_EDGE: B:33:0x0020 \-\> B:24:?, CROSS_EDGE: B:35:0x0022 \-\> B:24:?, CROSS_EDGE: B:37:0x0024 \-\> B:24:?, CROSS_EDGE: B:39:0x0026 \-\> B:24:?, CROSS_EDGE: B:41:0x0028 \-\> B:24:?, CROSS_EDGE: B:43:0x002a \-\> B:24:?, CROSS_EDGE: B:45:0x002c \-\> B:24:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0053: r3 'type' I\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_25 -> Node_30;
Node_25 -> Node_32;
Node_25 -> Node_34;
Node_25 -> Node_36;
Node_25 -> Node_38;
Node_25 -> Node_40;
Node_25 -> Node_42;
Node_25 -> Node_44;
Node_26 -> Node_27;
Node_27 -> Node_24;
Node_28 -> Node_24;
Node_30 -> Node_24;
Node_32 -> Node_24;
Node_34 -> Node_24;
Node_36 -> Node_24;
Node_38 -> Node_24;
Node_40 -> Node_24;
Node_42 -> Node_24;
Node_44 -> Node_24;
}

