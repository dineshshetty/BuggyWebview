digraph "CFG forandroidx.core.view.KeyEventDispatcher.actionBarOnMenuKeyEventPre28(Landroid\/app\/ActionBar;Landroid\/view\/KeyEvent;)Z" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.core.view.KeyEventDispatcher.sActionBarFieldsFetched boolean  (LINE:98)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x001d \l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.view.KeyEventDispatcher.sActionBarOnMenuKeyMethod java.lang.reflect.Method  (LINE:106)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0037 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0037|RETURN\l|0x0037: RETURN  (r2 I:boolean)  (LINE:117)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|TRY_ENTER\lTryCatch #3 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:33:0x0021, B:36:0x002c), top: B:44:0x0021 \}\lCatch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036\l|0x0021: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036, TRY_ENTER] (LINE:108)\l0x0023: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r7 I:??[OBJECT, ARRAY] A[D('event' android.view.KeyEvent)])\l A[Catch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036]\l0x0025: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r6 I:java.lang.Object A[D('actionBar' android.app.ActionBar)])\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002c  (LINE:109)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|RETURN\l|0x002b: RETURN  (r2 I:boolean)  (LINE:110)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002c|TRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:33:0x0021, B:36:0x002c), top: B:44:0x0021 \}\lCatch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036\l|0x002c: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('value' java.lang.Object)])  (LINE:112)\l0x002d: CHECK_CAST (r1 I:java.lang.Boolean) = (java.lang.Boolean) (r1 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036]\l0x002f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[Catch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036, MD:():boolean (c), TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0033|RETURN\l|0x0033: RETURN  (r1 I:boolean) \l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_40 [shape=record,label="{40\:\ 0x0036|ExcHandler: IllegalAccessException \-\> 0x0036\l|0x0036: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0036] (LINE:113)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0034|ExcHandler: InvocationTargetException \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0034] (LINE:114)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{NoSuchMethodException \-\> 0x001a, blocks: (B:27:0x0007), top: B:42:0x0007 \}\lCatch: NoSuchMethodException \-\> 0x001a\l|0x0007: INVOKE  (r0 I:java.lang.Class) = (r6 I:java.lang.Object A[D('actionBar' android.app.ActionBar)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: NoSuchMethodException \-\> 0x001a, MD:():java.lang.Class\<?\> (c), TRY_ENTER] (LINE:101)\l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"onMenuKeyEvent\" \l0x000d: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x001a]\l0x000f: CONST_CLASS  (r5 I:java.lang.Class\<android.view.KeyEvent\>) =  android.view.KeyEvent.class \l0x0011: APUT  (r4 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x001a]\l0x0013: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r3 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001a, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0017: SPUT  (r0 I:java.lang.reflect.Method) androidx.core.view.KeyEventDispatcher.sActionBarOnMenuKeyMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001a, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: SPUT  (r1 I:boolean) androidx.core.view.KeyEventDispatcher.sActionBarFieldsFetched boolean  (LINE:104)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|ExcHandler: NoSuchMethodException \-\> 0x001a\l|0x001a: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x001a] (LINE:102)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.core.view.KeyEventDispatcher.actionBarOnMenuKeyEventPre28((r6 I:android.app.ActionBar A[D('actionBar' android.app.ActionBar), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x002b \-\> B:24:?, CROSS_EDGE: B:37:0x0033 \-\> B:24:?, CROSS_EDGE: B:40:0x0036 \-\> B:41:0x0037, CROSS_EDGE: B:38:0x0034 \-\> B:41:0x0037, CROSS_EDGE: B:44:0x0021 \-\> B:40:0x0036, CROSS_EDGE: B:44:0x0021 \-\> B:38:0x0034, CROSS_EDGE: B:30:0x001b \-\> B:31:0x001d, CROSS_EDGE: B:29:0x001a \-\> B:30:0x001b, CROSS_EDGE: B:42:0x0007 \-\> B:29:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0034: r0 'value' Ljava\/lang\/Object;\l  \-1 \-0x0037: r6 'actionBar' Landroid\/app\/ActionBar;\l  \-1 \-0x0037: r7 'event' Landroid\/view\/KeyEvent;\lTryCatch #2 \{NoSuchMethodException \-\> 0x001a, blocks: (B:27:0x0007), top: B:42:0x0007 \}, TryCatch #3 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:33:0x0021, B:36:0x002c), top: B:44:0x0021 \}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_31;
Node_26 -> Node_42[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_41;
Node_32 -> Node_44[style=dashed];
Node_41 -> Node_24;
Node_44 -> Node_33;
Node_44 -> Node_40;
Node_44 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_24;
Node_36 -> Node_37;
Node_36 -> Node_45;
Node_37 -> Node_24;
Node_45 -> Node_40;
Node_45 -> Node_38;
Node_40 -> Node_41;
Node_38 -> Node_41;
Node_42 -> Node_27;
Node_42 -> Node_29;
Node_27 -> Node_30;
Node_27 -> Node_43;
Node_30 -> Node_31;
Node_43 -> Node_29;
Node_29 -> Node_30;
}

