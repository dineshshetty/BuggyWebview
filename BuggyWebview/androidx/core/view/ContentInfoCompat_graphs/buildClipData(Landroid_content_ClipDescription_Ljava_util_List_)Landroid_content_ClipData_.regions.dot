digraph "CFG forandroidx.core.view.ContentInfoCompat.buildClipData(Landroid\/content\/ClipDescription;Ljava\/util\/List;)Landroid\/content\/ClipData;" {
subgraph cluster_Region_1790724045 {
label = "R(3:1|(1:4)|6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|android.content.ClipData android.content.ClipData r0 = new android.content.ClipData(new android.content.ClipDescription(r3), r4.get(0))\lint r1 = 1\l}"];
subgraph cluster_LoopRegion_1667526369 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0016|if (r1 \< r4.size()) goto L4\l}"];
subgraph cluster_Region_6200926 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0018|LOOP_END\lLOOP:0: B:11:0x0012\-\>B:13:0x0018\l|r0.addItem(r4.get(r1))\lr1++\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0024|RETURN\l|return r0\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0012|LOOP_START\lLOOP:0: B:11:0x0012\-\>B:13:0x0018\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:10:0x0000, B:13:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0024|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static android.content.ClipData androidx.core.view.ContentInfoCompat.buildClipData((r3v0 'description' android.content.ClipDescription A[D('description' android.content.ClipDescription), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'items' java.util.List\<android.content.ClipData$Item\> A[D('items' java.util.List\<android.content.ClipData$Item\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0018 \-\> B:11:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/content\/ClipDescription;Ljava\/util\/List\<Landroid\/content\/ClipData$Item;\>;)Landroid\/content\/ClipData;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_11;
Node_14 -> Node_9;
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_15 -> Node_14;
}

