digraph "CFG forandroidx.core.view.ContentInfoCompat.partition(Landroid\/content\/ClipData;Landroidx\/core\/util\/Predicate;)Landroid\/util\/Pair;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:275)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:276)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:277)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0003|LOOP_START\lLOOP:0: B:31:0x0003\-\>B:43:0x002e\l|0x0003: INVOKE  (r3 I:int) = (r5 I:android.content.ClipData A[D('clip' android.content.ClipData)]) type: VIRTUAL call: android.content.ClipData.getItemCount():int A[MD:():int (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0007|0x0007: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:53:0x0031 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|0x0009: INVOKE  (r3 I:android.content.ClipData$Item) = (r5 I:android.content.ClipData A[D('clip' android.content.ClipData)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.content.ClipData.getItemAt(int):android.content.ClipData$Item A[MD:(int):android.content.ClipData$Item (c)] (LINE:278)\l0x000d: INVOKE  (r4 I:boolean) = \l  (r6 I:androidx.core.util.Predicate A[D('itemPredicate' androidx.core.util.Predicate\<android.content.ClipData$Item\>)])\l  (r3 I:java.lang.Object A[D('item' android.content.ClipData$Item)])\l type: INTERFACE call: androidx.core.util.Predicate.test(java.lang.Object):boolean A[MD:(T):boolean (m)] (LINE:279)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|0x0011: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0021 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x001b  (LINE:280)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|0x0015: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0017: INVOKE  (r4 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001c|0x001c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) = (r4 I:??[OBJECT, ARRAY]) \l0x001d: INVOKE  \l  (r0 I:java.util.ArrayList A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)])\l  (r3 I:java.lang.Object A[D('item' android.content.ClipData$Item)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:281)\l}"];
Node_55 [shape=record,label="{55\:\ 0x002e|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|LOOP_END\lLOOP:0: B:31:0x0003\-\>B:43:0x002e\l|0x002e: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:277)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|0x001b: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0029  (LINE:283)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0023|0x0023: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0025: INVOKE  (r4 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x002a|0x002a: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) = (r4 I:??[OBJECT, ARRAY]) \l0x002b: INVOKE  \l  (r1 I:java.util.ArrayList A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)])\l  (r3 I:java.lang.Object A[D('item' android.content.ClipData$Item)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:284)\l}"];
Node_54 [shape=record,label="{54\:\ 0x002e|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0029|0x0029: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0031|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|0x0031: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:287)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0032|0x0032: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0039 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|0x0034: INVOKE  (r2 I:android.util.Pair) = (r2 I:java.lang.Object), (r5 I:java.lang.Object A[D('clip' android.content.ClipData)]) type: STATIC call: android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair A[MD:\<A, B\>:(A, B):android.util.Pair\<A, B\> (c)] (LINE:288)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0038|RETURN\l|0x0038: RETURN  (r2 I:android.util.Pair\<android.content.ClipData, android.content.ClipData\>) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0039|0x0039: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0040  (LINE:290)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003b|0x003b: INVOKE  (r2 I:android.util.Pair) = (r5 I:java.lang.Object A[D('clip' android.content.ClipData)]), (r2 I:java.lang.Object) type: STATIC call: android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair A[MD:\<A, B\>:(A, B):android.util.Pair\<A, B\> (c)] (LINE:291)\l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|RETURN\l|0x003f: RETURN  (r2 I:android.util.Pair\<android.content.ClipData, android.content.ClipData\>) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0040|0x0041: INVOKE  (r2 I:android.content.ClipDescription) = (r5 I:android.content.ClipData A[D('clip' android.content.ClipData)]) type: VIRTUAL call: android.content.ClipData.getDescription():android.content.ClipDescription A[MD:():android.content.ClipDescription (c)] (LINE:294)\l0x0045: INVOKE  (r2 I:android.content.ClipData) = \l  (r2 I:android.content.ClipDescription)\l  (r0 I:java.util.List A[D('acceptedItems' java.util.ArrayList\<android.content.ClipData$Item\>)])\l type: STATIC call: androidx.core.view.ContentInfoCompat.buildClipData(android.content.ClipDescription, java.util.List):android.content.ClipData A[MD:(android.content.ClipDescription, java.util.List\<android.content.ClipData$Item\>):android.content.ClipData (m)]\l0x0049: INVOKE  (r3 I:android.content.ClipDescription) = (r5 I:android.content.ClipData A[D('clip' android.content.ClipData)]) type: VIRTUAL call: android.content.ClipData.getDescription():android.content.ClipDescription A[MD:():android.content.ClipDescription (c)] (LINE:295)\l0x004d: INVOKE  (r3 I:android.content.ClipData) = \l  (r3 I:android.content.ClipDescription)\l  (r1 I:java.util.List A[D('remainingItems' java.util.ArrayList\<android.content.ClipData$Item\>)])\l type: STATIC call: androidx.core.view.ContentInfoCompat.buildClipData(android.content.ClipDescription, java.util.List):android.content.ClipData A[MD:(android.content.ClipDescription, java.util.List\<android.content.ClipData$Item\>):android.content.ClipData (m)]\l0x0051: INVOKE  (r2 I:android.util.Pair) = (r2 I:java.lang.Object), (r3 I:java.lang.Object) type: STATIC call: android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair A[MD:\<A, B\>:(A, B):android.util.Pair\<A, B\> (c)] (LINE:293)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0055|RETURN\l|0x0055: RETURN  (r2 I:android.util.Pair\<android.content.ClipData, android.content.ClipData\>) \l}"];
MethodNode[shape=record,label="{static android.util.Pair\<android.content.ClipData, android.content.ClipData\> androidx.core.view.ContentInfoCompat.partition((r5 I:android.content.ClipData A[D('clip' android.content.ClipData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.core.util.Predicate\<android.content.ClipData$Item\> A[D('itemPredicate' androidx.core.util.Predicate\<android.content.ClipData$Item\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x002e \-\> B:31:0x0003, CROSS_EDGE: B:37:0x001b \-\> B:38:0x001c, CROSS_EDGE: B:42:0x002a \-\> B:43:0x002e, CROSS_EDGE: B:41:0x0029 \-\> B:42:0x002a, CROSS_EDGE: B:50:0x003f \-\> B:29:?, CROSS_EDGE: B:52:0x0055 \-\> B:29:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002e: r3 'item' Landroid\/content\/ClipData$Item;\l  0x0003\-0x0031: r2 'i' I\l  0x0001\-0x0055: r0 'acceptedItems' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/content\/ClipData$Item;\>;\l  0x0002\-0x0055: r1 'remainingItems' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/content\/ClipData$Item;\>;\l  \-1 \-0x0055: r5 'clip' Landroid\/content\/ClipData;\l  0x0000\-0x0055: r6 'itemPredicate' Landroidx\/core\/util\/Predicate;, signature: Landroidx\/core\/util\/Predicate\<Landroid\/content\/ClipData$Item;\>;\lSIGNATURE: (Landroid\/content\/ClipData;Landroidx\/core\/util\/Predicate\<Landroid\/content\/ClipData$Item;\>;)Landroid\/util\/Pair\<Landroid\/content\/ClipData;Landroid\/content\/ClipData;\>;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_53;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_55;
Node_55 -> Node_43;
Node_43 -> Node_31;
Node_37 -> Node_38;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_42 -> Node_54;
Node_54 -> Node_43;
Node_41 -> Node_42;
Node_53 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_47 -> Node_29;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_29;
Node_51 -> Node_52;
Node_52 -> Node_29;
}

