digraph "CFG forandroidx.core.view.accessibility.AccessibilityWindowInfoCompat.wrapNonNullInstance(Ljava\/lang\/Object;)Landroidx\/core\/view\/accessibility\/AccessibilityWindowInfoCompat;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('object' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008  (LINE:82)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityWindowInfoCompat) =  androidx.core.view.accessibility.AccessibilityWindowInfoCompat  (LINE:83)\l0x0004: INVOKE  \l  (r0 I:androidx.core.view.accessibility.AccessibilityWindowInfoCompat)\l  (r1 I:java.lang.Object A[D('object' java.lang.Object)])\l type: DIRECT call: androidx.core.view.accessibility.AccessibilityWindowInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityWindowInfoCompat) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:85)\l0x0009: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityWindowInfoCompat) \l}"];
MethodNode[shape=record,label="{static androidx.core.view.accessibility.AccessibilityWindowInfoCompat androidx.core.view.accessibility.AccessibilityWindowInfoCompat.wrapNonNullInstance((r1 I:java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0009 \-\> B:1:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r1 'object' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

