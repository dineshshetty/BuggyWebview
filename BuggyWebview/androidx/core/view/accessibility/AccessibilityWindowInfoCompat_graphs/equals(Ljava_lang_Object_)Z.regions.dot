digraph "CFG forandroidx.core.view.accessibility.AccessibilityWindowInfoCompat.equals(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_738372264 {
label = "R(1:(2:(1:3)|(1:(2:(1:10)|(2:11|(2:(1:14)|(1:18)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_735872186 {
label = "R(2:(1:3)|(1:(2:(1:10)|(2:11|(2:(1:14)|(1:18))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1631987174 {
label = "IF [B:3:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0001|if (r4 == r5) goto L3\l}"];
subgraph cluster_Region_549310580 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_424896801 {
label = "R(1:(2:(1:10)|(2:11|(2:(1:14)|(1:18)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1457903589 {
label = "R(2:(1:10)|(2:11|(2:(1:14)|(1:18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_115126730 {
label = "IF [B:6:0x0005, B:9:0x000a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0005|if (r5 == null) goto L7\l}"];
Node_9 [shape=record,label="{9\:\ 0x000a|ADDED_TO_REGION\l|if ((r5 instanceof androidx.core.view.accessibility.AccessibilityWindowInfoCompat) == false) goto L10\l}"];
subgraph cluster_Region_1210904341 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000c|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_2052397415 {
label = "R(2:11|(2:(1:14)|(1:18)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000d|androidx.core.view.accessibility.AccessibilityWindowInfoCompat androidx.core.view.accessibility.AccessibilityWindowInfoCompat r2 = (androidx.core.view.accessibility.AccessibilityWindowInfoCompat) r5\ljava.lang.Object java.lang.Object r3 = r4.mInfo\l}"];
subgraph cluster_Region_1244962128 {
label = "R(2:(1:14)|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_858182266 {
label = "IF [B:12:0x0012] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0012|if (r3 == null) goto L13\l}"];
subgraph cluster_Region_931919228 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0016|RETURN\l|return r2.mInfo == null\l}"];
}
}
subgraph cluster_Region_896172541 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0021|RETURN\l|return r3.equals(r2.mInfo)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0007|RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0008}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0014}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0019|ORIG_RETURN\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x001b}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.accessibility.AccessibilityWindowInfoCompat.equals((r4v0 'this' androidx.core.view.accessibility.AccessibilityWindowInfoCompat A[IMMUTABLE_TYPE, THIS]), (r5v0 'obj' java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0007 \-\> B:1:?, CROSS_EDGE: B:10:0x000c \-\> B:1:?, CROSS_EDGE: B:17:0x001a \-\> B:1:?, CROSS_EDGE: B:14:0x0016 \-\> B:17:0x001a, CROSS_EDGE: B:19:0x0021 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_18[style=dashed];
Node_14 -> Node_16;
Node_14 -> Node_20;
Node_19 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_13 -> Node_14;
Node_16 -> Node_1;
Node_20 -> Node_1;
Node_18 -> Node_19;
}

