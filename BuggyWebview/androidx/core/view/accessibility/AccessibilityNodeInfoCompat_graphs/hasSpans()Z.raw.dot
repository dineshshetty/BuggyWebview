digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.hasSpans()Z" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"androidx.view.accessibility.AccessibilityNodeInfoCompat.SPANS_START_KEY\"  (LINE:2764)\l0x0002: INVOKE  (r0 I:java.util.List) = (r1 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat), (r0 I:java.lang.String) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.extrasIntList(java.lang.String):java.util.List A[MD:(java.lang.String):java.util.List\<java.lang.Integer\> (m)]\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l0x000a: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.hasSpans((r1 'this' I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

