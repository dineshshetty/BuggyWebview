digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(IZ)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.os.Bundle) = (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getExtras():android.os.Bundle A[MD:():android.os.Bundle (m)] (LINE:4214)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('extras' android.os.Bundle)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:4215)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: CONST_STR  (r1 I:java.lang.String) =  \"androidx.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY\"  (LINE:4216)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r3 I:int) = (r0 I:android.os.Bundle A[D('extras' android.os.Bundle)]), (r1 I:java.lang.String), (r2 I:int) type: VIRTUAL call: android.os.Bundle.getInt(java.lang.String, int):int A[MD:(java.lang.String, int):int (c)]\l0x000d: NOT  (r4 I:int) = (r6 I:int A[D('property' int)])  (LINE:4217)\l0x000e: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char] A[D('booleanProperties' int)]) & (r4 I:??[int, boolean, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|0x000f: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0012  (LINE:4218)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|0x0011: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('property' int)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) \| (r3 I:??[int, boolean, short, byte, char] A[D('booleanProperties' int)]) \l0x0013: INVOKE  \l  (r0 I:android.os.Bundle A[D('extras' android.os.Bundle)])\l  (r1 I:java.lang.String)\l  (r2 I:int A[D('booleanProperties' int)])\l type: VIRTUAL call: android.os.Bundle.putInt(java.lang.String, int):void A[MD:(java.lang.String, int):void (c)] (LINE:4219)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: RETURN    (LINE:4221)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN   A[SYNTHETIC] (LINE:4221)\l}"];
MethodNode[shape=record,label="{private void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty((r5 'this' I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('property' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:17:0x0012, CROSS_EDGE: B:13:0x0004 \-\> B:18:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0013: r3 'booleanProperties' I\l  0x0013\-0x0016: r2 'booleanProperties' I\l  0x0004\-0x0016: r0 'extras' Landroid\/os\/Bundle;\l  \-1 \-0x0016: r6 'property' I\l  \-1 \-0x0016: r7 'value' Z\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

