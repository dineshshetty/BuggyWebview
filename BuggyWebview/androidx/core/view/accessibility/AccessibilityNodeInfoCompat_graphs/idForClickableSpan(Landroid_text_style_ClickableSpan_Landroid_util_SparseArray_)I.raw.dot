digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.idForClickableSpan(Landroid\/text\/style\/ClickableSpan;Landroid\/util\/SparseArray;)I" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spans' android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0023  (LINE:2752)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2753)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|LOOP_START\lLOOP:0: B:19:0x0003\-\>B:25:0x0020\l|0x0003: INVOKE  (r1 I:int) = \l  (r5 I:android.util.SparseArray A[D('spans' android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\>)])\l type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:28:0x0023 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|0x0009: INVOKE  (r1 I:java.lang.Object) = \l  (r5 I:android.util.SparseArray A[D('spans' android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\>)])\l  (r0 I:int A[D('i' int)])\l type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)] (LINE:2754)\l0x000d: CHECK_CAST (r1 I:java.lang.ref.WeakReference) = (java.lang.ref.WeakReference) (r1 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)]\l0x0013: CHECK_CAST (r1 I:android.text.style.ClickableSpan) = (android.text.style.ClickableSpan) (r1 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  (r2 I:boolean) = \l  (r4 I:java.lang.Object A[D('span' android.text.style.ClickableSpan)])\l  (r1 I:java.lang.Object A[D('aSpan' android.text.style.ClickableSpan)])\l type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:2755)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0020 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|LOOP_END\lLOOP:0: B:19:0x0003\-\>B:25:0x0020\l|0x0020: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:2753)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: INVOKE  (r2 I:int) = \l  (r5 I:android.util.SparseArray A[D('spans' android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\>)])\l  (r0 I:int A[D('i' int)])\l type: VIRTUAL call: android.util.SparseArray.keyAt(int):int A[MD:(int):int (c)] (LINE:2756)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|0x0023: SGET  (r0 I:int A[D('i' int)]) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat.sClickableSpanId int  (LINE:2760)\l0x0025: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x0027: SPUT  (r1 I:int) androidx.core.view.accessibility.AccessibilityNodeInfoCompat.sClickableSpanId int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|RETURN\l|0x0029: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int androidx.core.view.accessibility.AccessibilityNodeInfoCompat.idForClickableSpan((r3 'this' I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.text.style.ClickableSpan A[D('span' android.text.style.ClickableSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\> A[D('spans' android.util.SparseArray\<java.lang.ref.WeakReference\<android.text.style.ClickableSpan\>\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0020 \-\> B:19:0x0003, CROSS_EDGE: B:27:0x0029 \-\> B:16:?, CROSS_EDGE: B:17:0x0000 \-\> B:26:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0020: r1 'aSpan' Landroid\/text\/style\/ClickableSpan;\l  0x0003\-0x0023: r0 'i' I\l  \-1 \-0x0029: r4 'span' Landroid\/text\/style\/ClickableSpan;\l  0x0000\-0x0029: r5 'spans' Landroid\/util\/SparseArray;, signature: Landroid\/util\/SparseArray\<Ljava\/lang\/ref\/WeakReference\<Landroid\/text\/style\/ClickableSpan;\>;\>;\lSIGNATURE: (Landroid\/text\/style\/ClickableSpan;Landroid\/util\/SparseArray\<Ljava\/lang\/ref\/WeakReference\<Landroid\/text\/style\/ClickableSpan;\>;\>;)I\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_25;
Node_22 -> Node_29[style=dashed];
Node_25 -> Node_19;
Node_29 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_28 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
}

