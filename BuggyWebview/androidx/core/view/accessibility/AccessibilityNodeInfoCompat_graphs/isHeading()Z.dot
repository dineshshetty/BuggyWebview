digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.isHeading()Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 28) goto L6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006}"];
Node_22 [shape=record,label="{22\:\ 0x000c|RETURN\l|return r3.mInfo.isHeading()\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d}"];
Node_24 [shape=record,label="{24\:\ 0x0013|if (getBooleanProperty(2) == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|RETURN\l|return true\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat r0 = getCollectionItemInfo()\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|if (r0 == null) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c}"];
Node_29 [shape=record,label="{29\:\ 0x0020|if (r0.isHeading() == false) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.accessibility.AccessibilityNodeInfoCompat.isHeading((r3v0 'this' androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0015 \-\> B:18:?, CROSS_EDGE: B:32:0x0024 \-\> B:18:?, CROSS_EDGE: B:29:0x0020 \-\> B:32:0x0024, CROSS_EDGE: B:27:0x001a \-\> B:31:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_33[style=dashed];
Node_33 -> Node_18;
Node_31 -> Node_18;
}

