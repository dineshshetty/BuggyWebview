digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty(IZ)V" {
subgraph cluster_Region_1040628780 {
label = "R(2:1|(1:(2:3|6)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|android.os.Bundle android.os.Bundle r0 = getExtras()\l}"];
subgraph cluster_Region_1399341910 {
label = "R(1:(2:3|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_307418599 {
label = "IF [B:13:0x0004] THEN: R(2:3|6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_717029177 {
label = "R(2:3|6)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|int int r3 = r0.getInt(androidx.core.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY, 0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|PHI: r2 \l  PHI: (r2v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r0.putInt(androidx.core.view.accessibility.AccessibilityNodeInfoCompat.BOOLEAN_PROPERTY_KEY, (r7 ? r6 : 0) \| (r3 & (~r6)))\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000f}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0011}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0016|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setBooleanProperty((r5v0 'this' androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[IMMUTABLE_TYPE, THIS]), (r6v0 'property' int A[D('property' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'value' boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:17:0x0012, CROSS_EDGE: B:13:0x0004 \-\> B:18:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

