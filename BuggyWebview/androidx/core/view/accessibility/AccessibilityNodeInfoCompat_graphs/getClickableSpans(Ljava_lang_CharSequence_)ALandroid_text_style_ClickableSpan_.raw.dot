digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans(Ljava\/lang\/CharSequence;)[Landroid\/text\/style\/ClickableSpan;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('text' java.lang.CharSequence)]) android.text.Spanned  (LINE:2743)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0015 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('text' java.lang.CharSequence)])  (LINE:2744)\l0x0005: CHECK_CAST (r0 I:android.text.Spanned) = (android.text.Spanned) (r0 I:??[OBJECT, ARRAY]) \l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2745)\l0x0008: INVOKE  (r2 I:int) = (r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x000c: CONST_CLASS  (r3 I:java.lang.Class\<android.text.style.ClickableSpan\>) =  android.text.style.ClickableSpan.class \l0x000e: INVOKE  (r1 I:java.lang.Object[]) = (r0 I:android.text.Spanned A[D('spanned' android.text.Spanned)]), (r1 I:int), (r2 I:int), (r3 I:java.lang.Class) type: INTERFACE call: android.text.Spanned.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l0x0012: CHECK_CAST (r1 I:android.text.style.ClickableSpan[]) = (android.text.style.ClickableSpan[]) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:android.text.style.ClickableSpan[]) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0015|RETURN\l|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('spanned' android.text.Spanned)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2747)\l0x0016: RETURN  (r0 I:android.text.style.ClickableSpan[]) \l}"];
MethodNode[shape=record,label="{public static android.text.style.ClickableSpan[] androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans((r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0016 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0015: r0 'spanned' Landroid\/text\/Spanned;\l  \-1 \-0x0016: r4 'text' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_9;
}

