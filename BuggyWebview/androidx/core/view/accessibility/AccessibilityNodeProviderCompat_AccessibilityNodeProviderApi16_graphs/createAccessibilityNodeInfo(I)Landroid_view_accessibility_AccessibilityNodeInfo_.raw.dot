digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi16.createAccessibilityNodeInfo(I)Landroid\/view\/accessibility\/AccessibilityNodeInfo;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat) = (r2 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16) androidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi16.mCompat androidx.core.view.accessibility.AccessibilityNodeProviderCompat  (LINE:45)\l0x0002: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = (r0 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat), (r3 I:int A[D('virtualViewId' int)]) type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeProviderCompat.createAccessibilityNodeInfo(int):androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[MD:(int):androidx.core.view.accessibility.AccessibilityNodeInfoCompat (m)] (LINE:46)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('compatInfo' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000a  (LINE:47)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|RETURN\l|0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:48)\l0x0009: RETURN  (r1 I:android.view.accessibility.AccessibilityNodeInfo) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: INVOKE  (r1 I:android.view.accessibility.AccessibilityNodeInfo) = \l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('compatInfo' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():android.view.accessibility.AccessibilityNodeInfo A[MD:():android.view.accessibility.AccessibilityNodeInfo (m)] (LINE:50)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:android.view.accessibility.AccessibilityNodeInfo) \l}"];
MethodNode[shape=record,label="{public android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeProviderCompat.AccessibilityNodeProviderApi16.createAccessibilityNodeInfo((r2 'this' I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('virtualViewId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x000e \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000e: r0 'compatInfo' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  \-1 \-0x000e: r3 'virtualViewId' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.accessibility.AccessibilityNodeProvider.createAccessibilityNodeInfo(int):android.view.accessibility.AccessibilityNodeInfo\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

