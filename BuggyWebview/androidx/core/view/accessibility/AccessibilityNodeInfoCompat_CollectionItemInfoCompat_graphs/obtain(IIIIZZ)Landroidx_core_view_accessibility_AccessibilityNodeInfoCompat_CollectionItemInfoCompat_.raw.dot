digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.obtain(IIIIZZ)Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat$CollectionItemInfoCompat;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:902)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x0010 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat  (LINE:903)\l0x0008: INVOKE  (r1 I:android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo) = \l  (r2 I:int A[D('rowIndex' int)])\l  (r3 I:int A[D('rowSpan' int)])\l  (r4 I:int A[D('columnIndex' int)])\l  (r5 I:int A[D('columnSpan' int)])\l  (r6 I:boolean A[D('heading' boolean)])\l  (r7 I:boolean A[D('selected' boolean)])\l type: STATIC call: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain(int, int, int, int, boolean, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo A[MD:(int, int, int, int, boolean, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo (c)]\l0x000c: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat), (r1 I:java.lang.Object) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:905)\l0x0012: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:22:0x0020 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat  (LINE:906)\l0x0018: INVOKE  (r1 I:android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo) = \l  (r2 I:int A[D('rowIndex' int)])\l  (r3 I:int A[D('rowSpan' int)])\l  (r4 I:int A[D('columnIndex' int)])\l  (r5 I:int A[D('columnSpan' int)])\l  (r6 I:boolean A[D('heading' boolean)])\l type: STATIC call: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo.obtain(int, int, int, int, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo A[MD:(int, int, int, int, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo (c)]\l0x001c: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat), (r1 I:java.lang.Object) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|0x0020: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat  (LINE:909)\l0x0022: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0023: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat), (r1 I:java.lang.Object) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\l|0x0026: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) \l}"];
MethodNode[shape=record,label="{public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat.obtain((r2 I:int A[D('rowIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('rowSpan' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('columnIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('columnSpan' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('heading' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('selected' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001f \-\> B:13:?, CROSS_EDGE: B:23:0x0026 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0026: r2 'rowIndex' I\l  \-1 \-0x0026: r3 'rowSpan' I\l  \-1 \-0x0026: r4 'columnIndex' I\l  \-1 \-0x0026: r5 'columnSpan' I\l  \-1 \-0x0026: r6 'heading' Z\l  \-1 \-0x0026: r7 'selected' Z\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

