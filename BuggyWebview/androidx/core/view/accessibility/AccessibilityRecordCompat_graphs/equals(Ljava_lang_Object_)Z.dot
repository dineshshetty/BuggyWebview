digraph "CFG forandroidx.core.view.accessibility.AccessibilityRecordCompat.equals(Ljava\/lang\/Object;)Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0001|if (r4 != r5) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|RETURN\l|return true\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004}"];
Node_24 [shape=record,label="{24\:\ 0x0007|if ((r5 instanceof androidx.core.view.accessibility.AccessibilityRecordCompat) != false) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|RETURN\l|return false\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|androidx.core.view.accessibility.AccessibilityRecordCompat r1 = (androidx.core.view.accessibility.AccessibilityRecordCompat) r5\landroid.view.accessibility.AccessibilityRecord r3 = r4.mRecord\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|if (r3 != null) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011}"];
Node_29 [shape=record,label="{29\:\ 0x0013|if (r1.mRecord != null) goto L12\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|RETURN\lORIG_RETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0018}"];
Node_34 [shape=record,label="{34\:\ 0x001e|RETURN\l|return r3.equals(r1.mRecord)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.accessibility.AccessibilityRecordCompat.equals((r4v0 'this' androidx.core.view.accessibility.AccessibilityRecordCompat A[IMMUTABLE_TYPE, THIS]), (r5v0 'obj' java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:25:0x0009 \-\> B:19:?, CROSS_EDGE: B:32:0x0017 \-\> B:19:?, CROSS_EDGE: B:29:0x0013 \-\> B:32:0x0017, CROSS_EDGE: B:34:0x001e \-\> B:19:?\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_35[style=dashed];
Node_31 -> Node_19;
Node_35 -> Node_19;
Node_33 -> Node_34;
Node_34 -> Node_19;
}

