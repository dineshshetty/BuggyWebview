digraph "CFG forandroidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.obtain(IIZ)Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat$CollectionInfoCompat;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:803)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:14:0x0010 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat  (LINE:804)\l0x0008: INVOKE  (r1 I:android.view.accessibility.AccessibilityNodeInfo$CollectionInfo) = (r2 I:int A[D('rowCount' int)]), (r3 I:int A[D('columnCount' int)]), (r4 I:boolean A[D('hierarchical' boolean)]) type: STATIC call: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo.obtain(int, int, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionInfo A[MD:(int, int, boolean):android.view.accessibility.AccessibilityNodeInfo$CollectionInfo (c)]\l0x000c: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat), (r1 I:java.lang.Object) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat  (LINE:807)\l0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat), (r1 I:java.lang.Object) type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat) \l}"];
MethodNode[shape=record,label="{public static androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat.obtain((r2 I:int A[D('rowCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('columnCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('hierarchical' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0016 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0016: r2 'rowCount' I\l  \-1 \-0x0016: r3 'columnCount' I\l  \-1 \-0x0016: r4 'hierarchical' Z\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

