digraph "CFG forandroidx.core.view.ViewCompat.AccessibilityPaneVisibilityManager.checkPaneVisibility(Landroid\/view\/View;Z)V" {
subgraph cluster_Region_303552785 {
label = "R(2:2|(1:(2:(1:8)(1:12)|9))) | DECL_VAR: int contentChangeType\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0004|boolean r0 = r5.isShown() && r5.getWindowVisibility() == 0\l}"];
subgraph cluster_Region_575503791 {
label = "R(1:(2:(1:8)(1:12)|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2144135011 {
label = "IF [B:23:0x000f] THEN: R(2:(1:8)(1:12)|9) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000f|PHI: r0 \l  PHI: (r0v2 'newVisibility' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != r0) goto L7\l}"];
subgraph cluster_Region_963076575 {
label = "R(2:(1:8)(1:12)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_896216487 {
label = "IF [B:24:0x0011] THEN: R(1:8) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0011|if (r0 != false) goto L8\l}"];
subgraph cluster_Region_226222749 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0013|r1 = 16\l}"];
}
subgraph cluster_Region_362080435 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0016|r1 = 32\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x0018|PHI: r1 \l  PHI: (r1v1 'contentChangeType' int) = (r1v0 'contentChangeType' int), (r1v2 'contentChangeType' int) binds: [B:26:0x0016, B:25:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.view.ViewCompat.notifyViewAccessibilityStateChangedIfNeeded(r5, r1)\lr4.mPanesToVisible.put(r5, java.lang.Boolean.valueOf(r0))\l}"];
}
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000a|REMOVE\lADDED_TO_REGION\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000c}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0025|ORIG_RETURN\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000e}"];
MethodNode[shape=record,label="{private void androidx.core.view.ViewCompat.AccessibilityPaneVisibilityManager.checkPaneVisibility((r4v0 'this' androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'pane' android.view.View A[D('pane' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'oldVisibility' boolean A[D('oldVisibility' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0016 \-\> B:27:0x0018, CROSS_EDGE: B:23:0x000f \-\> B:28:0x0025, CROSS_EDGE: B:22:0x000e \-\> B:23:0x000f, CROSS_EDGE: B:18:0x0004 \-\> B:22:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_18 -> Node_19;
Node_18 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_29[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_22 -> Node_23;
}

