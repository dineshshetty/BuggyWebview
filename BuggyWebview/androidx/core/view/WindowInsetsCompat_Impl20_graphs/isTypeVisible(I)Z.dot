digraph "CFG forandroidx.core.view.WindowInsetsCompat.Impl20.isTypeVisible(I)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0002|switch(r4) \{\l    case 1: goto L6;\l    case 2: goto L6;\l    case 4: goto L5;\l    case 8: goto L6;\l    case 128: goto L6;\l    default: goto L3;\l\}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0007}"];
Node_15 [shape=record,label="{15\:\ 0x0012|RETURN\l|return true ^ getInsetsForType(r4, false).equals(androidx.core.graphics.Insets.NONE)\l}"];
MethodNode[shape=record,label="{protected boolean androidx.core.view.WindowInsetsCompat.Impl20.isTypeVisible((r3v0 'this' androidx.core.view.WindowInsetsCompat$Impl20 A[IMMUTABLE_TYPE, THIS]), (r4v0 'type' int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:9:?, CROSS_EDGE: B:15:0x0012 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

