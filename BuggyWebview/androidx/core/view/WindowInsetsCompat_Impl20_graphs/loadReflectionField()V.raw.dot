digraph "CFG forandroidx.core.view.WindowInsetsCompat.Impl20.loadReflectionField()V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1171)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0037, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: ReflectiveOperationException \-\> 0x0037\l|0x0001: CONST_CLASS  (r1 I:java.lang.Class\<android.view.View\>) =  android.view.View.class A[TRY_ENTER]\l0x0003: CONST_STR  (r2 I:java.lang.String) =  \"getViewRootImpl\" \l0x0005: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: NEW_ARRAY  (r3 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: ReflectiveOperationException \-\> 0x0037]\l0x0008: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r2 I:java.lang.String), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x000c: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.view.WindowInsetsCompat.Impl20.sGetViewRootImplMethod java.lang.reflect.Method A[Catch: ReflectiveOperationException \-\> 0x0037]\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"android.view.View$AttachInfo\"  (LINE:1172)\l0x0010: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x0014: SPUT  (r1 I:java.lang.Class\<?\>) androidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoClass java.lang.Class A[Catch: ReflectiveOperationException \-\> 0x0037]\l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"mVisibleInsets\"  (LINE:1173)\l0x0018: INVOKE  (r1 I:java.lang.reflect.Field) = (r1 I:java.lang.Class), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x001c: SPUT  (r1 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.Impl20.sVisibleInsetsField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037]\l0x001e: CONST_STR  (r1 I:java.lang.String) =  \"android.view.ViewRootImpl\"  (LINE:1174)\l0x0020: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) type: STATIC call: java.lang.Class.forName(java.lang.String):java.lang.Class A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"mAttachInfo\"  (LINE:1175)\l0x0026: INVOKE  (r2 I:java.lang.reflect.Field) = (r1 I:java.lang.Class A[D('viewRootImplClass' java.lang.Class\<?\>)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x002a: SPUT  (r2 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037]\l0x002c: SGET  (r2 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.Impl20.sVisibleInsetsField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037] (LINE:1176)\l0x002e: INVOKE  (r2 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(boolean):void throws java.lang.SecurityException (c)]\l0x0031: SGET  (r2 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0037] (LINE:1177)\l0x0033: INVOKE  (r2 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: ReflectiveOperationException \-\> 0x0037, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: SPUT  (r0 I:boolean) androidx.core.view.WindowInsetsCompat.Impl20.sVisibleRectReflectionFetched boolean  (LINE:1182)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|RETURN\l|0x0054: RETURN    (LINE:1183)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|ExcHandler: ReflectiveOperationException \-\> 0x0037\l|0x0037: MOVE_EXCEPTION  (r1 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x0037] (LINE:1178)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1179)\l0x003a: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003d: CONST_STR  (r3 I:java.lang.String) =  \"Failed to get visible insets. (Reflection error). \" \l0x003f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.ReflectiveOperationException A[D('e' java.lang.ReflectiveOperationException)]) type: VIRTUAL call: java.lang.ReflectiveOperationException.getMessage():java.lang.String A[MD:():java.lang.String (s)]\l0x0046: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0049: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004d: CONST_STR  (r3 I:java.lang.String) =  \"WindowInsetsCompat\" \l0x004f: INVOKE  \l  (r3 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
MethodNode[shape=record,label="{private static void androidx.core.view.WindowInsetsCompat.Impl20.loadReflectionField()  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0038 \-\> B:18:0x0052, CROSS_EDGE: B:20:0x0001 \-\> B:16:0x0037\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0036: r1 'viewRootImplClass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x0038\-0x0052: r1 'e' Ljava\/lang\/ReflectiveOperationException;\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0037, blocks: (B:14:0x0001), top: B:20:0x0001 \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_16;
Node_14 -> Node_18;
Node_14 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

