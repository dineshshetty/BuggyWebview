digraph "CFG forandroidx.core.view.WindowInsetsCompat.Impl20.getInsetsForType(IZ)Landroidx\/core\/graphics\/Insets;" {
Node_59 [shape=record,label="{59\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_61 [shape=record,label="{61\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:953)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0002|0x0002: SWITCH  (r8 I:?? A[D('type' int)])\l case 1: goto B:113:0x00ce\l case 2: goto B:101:0x0085\l case 8: goto B:81:0x003f\l case 16: goto B:79:0x003a\l case 32: goto B:77:0x0035\l case 64: goto B:75:0x0030\l case 128: goto B:65:0x0008\l default: goto B:63:0x0005 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0005|0x0005: SGET  (r0 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets  (LINE:1042)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:androidx.core.graphics.Insets) \l}"];
Node_60 [shape=record,label="{60\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_65 [shape=record,label="{65\:\ 0x0008|0x0008: IGET  (r0 I:androidx.core.view.WindowInsetsCompat) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mRootWindowInsets androidx.core.view.WindowInsetsCompat  (LINE:1031)\l}"];
Node_66 [shape=record,label="{66\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0011 \l}"];
Node_67 [shape=record,label="{67\:\ 0x000c|0x000c: INVOKE  (r0 I:androidx.core.view.DisplayCutoutCompat) = (r0 I:androidx.core.view.WindowInsetsCompat) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getDisplayCutout():androidx.core.view.DisplayCutoutCompat A[MD:():androidx.core.view.DisplayCutoutCompat (m)] (LINE:1032)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cutout' androidx.core.view.DisplayCutoutCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x002d  (LINE:1034)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0018|0x0018: INVOKE  (r1 I:int) = (r0 I:androidx.core.view.DisplayCutoutCompat A[D('cutout' androidx.core.view.DisplayCutoutCompat)]) type: VIRTUAL call: androidx.core.view.DisplayCutoutCompat.getSafeInsetLeft():int A[MD:():int (m)] (LINE:1035)\l0x001c: INVOKE  (r2 I:int) = (r0 I:androidx.core.view.DisplayCutoutCompat A[D('cutout' androidx.core.view.DisplayCutoutCompat)]) type: VIRTUAL call: androidx.core.view.DisplayCutoutCompat.getSafeInsetTop():int A[MD:():int (m)]\l0x0020: INVOKE  (r3 I:int) = (r0 I:androidx.core.view.DisplayCutoutCompat A[D('cutout' androidx.core.view.DisplayCutoutCompat)]) type: VIRTUAL call: androidx.core.view.DisplayCutoutCompat.getSafeInsetRight():int A[MD:():int (m)] (LINE:1036)\l0x0024: INVOKE  (r4 I:int) = (r0 I:androidx.core.view.DisplayCutoutCompat A[D('cutout' androidx.core.view.DisplayCutoutCompat)]) type: VIRTUAL call: androidx.core.view.DisplayCutoutCompat.getSafeInsetBottom():int A[MD:():int (m)]\l0x0028: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)] (LINE:1035)\l}"];
Node_72 [shape=record,label="{72\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_73 [shape=record,label="{73\:\ 0x002d|0x002d: SGET  (r1 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets  (LINE:1038)\l}"];
Node_74 [shape=record,label="{74\:\ 0x002f|RETURN\l|0x002f: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0011|0x0011: INVOKE  (r0 I:androidx.core.view.DisplayCutoutCompat) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getDisplayCutout():androidx.core.view.DisplayCutoutCompat A[MD:():androidx.core.view.DisplayCutoutCompat (m)] (LINE:1033)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0030|0x0030: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getTappableElementInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1027)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0034|RETURN\l|0x0034: RETURN  (r0 I:androidx.core.graphics.Insets) \l}"];
Node_77 [shape=record,label="{77\:\ 0x0035|0x0035: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getMandatorySystemGestureInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1023)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0039|RETURN\l|0x0039: RETURN  (r0 I:androidx.core.graphics.Insets) \l}"];
Node_79 [shape=record,label="{79\:\ 0x003a|0x003a: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getSystemGestureInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1019)\l}"];
Node_80 [shape=record,label="{80\:\ 0x003e|RETURN\l|0x003e: RETURN  (r0 I:androidx.core.graphics.Insets) \l}"];
Node_81 [shape=record,label="{81\:\ 0x003f|0x003f: IGET  (r2 I:androidx.core.graphics.Insets[]) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mOverriddenInsets androidx.core.graphics.Insets[]  (LINE:995)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0041|0x0041: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x004d \l}"];
Node_83 [shape=record,label="{83\:\ 0x0043|0x0043: CONST  (r0 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:996)\l0x0045: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: androidx.core.view.WindowInsetsCompat.Type.indexOf(int):int A[MD:(int):int (m)]\l0x0049: AGET  (r0 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x004d|0x004d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('overriddenInsets' androidx.core.graphics.Insets)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0050  (LINE:997)\l}"];
Node_86 [shape=record,label="{86\:\ 0x004f|RETURN\l|0x004f: RETURN  (r0 I:androidx.core.graphics.Insets A[D('overriddenInsets' androidx.core.graphics.Insets)])  (LINE:998)\l}"];
Node_87 [shape=record,label="{87\:\ 0x0050|0x0050: INVOKE  (r2 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getSystemWindowInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1000)\l0x0054: INVOKE  (r3 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: DIRECT call: androidx.core.view.WindowInsetsCompat.Impl20.getRootStableInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1001)\l0x0058: IGET  (r4 I:int) = (r2 I:androidx.core.graphics.Insets A[D('systemWindow' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int  (LINE:1003)\l0x005a: IGET  (r5 I:int) = (r3 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int \l}"];
Node_88 [shape=record,label="{88\:\ 0x005c|0x005c: IF  (r4 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:91:0x0065 \l}"];
Node_89 [shape=record,label="{89\:\ 0x005e|0x005e: IGET  (r4 I:int) = (r2 I:androidx.core.graphics.Insets A[D('systemWindow' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int  (LINE:1006)\l0x0060: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r1 I:int), (r1 I:int), (r1 I:int), (r4 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x0064|RETURN\l|0x0064: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0065|0x0065: IGET  (r4 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mRootViewVisibleInsets androidx.core.graphics.Insets  (LINE:1007)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0067|0x0067: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x0082 \l}"];
Node_93 [shape=record,label="{93\:\ 0x0069|0x0069: SGET  (r5 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets \l0x006b: INVOKE  (r4 I:boolean) = (r4 I:androidx.core.graphics.Insets), (r5 I:java.lang.Object) type: VIRTUAL call: androidx.core.graphics.Insets.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:1008)\l}"];
Node_94 [shape=record,label="{94\:\ 0x006f|0x006f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x0082 \l}"];
Node_95 [shape=record,label="{95\:\ 0x0071|0x0071: IGET  (r4 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mRootViewVisibleInsets androidx.core.graphics.Insets  (LINE:1011)\l0x0073: IGET  (r4 I:int) = (r4 I:androidx.core.graphics.Insets) androidx.core.graphics.Insets.bottom int \l0x0075: IGET  (r5 I:int) = (r3 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int \l}"];
Node_96 [shape=record,label="{96\:\ 0x0077|0x0077: IF  (r4 I:??[int, byte, short, char]) \<= (r5 I:??[int, byte, short, char])  \-\> B:99:0x0082 \l}"];
Node_97 [shape=record,label="{97\:\ 0x0079|0x0079: IGET  (r4 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mRootViewVisibleInsets androidx.core.graphics.Insets  (LINE:1012)\l0x007b: IGET  (r4 I:int) = (r4 I:androidx.core.graphics.Insets) androidx.core.graphics.Insets.bottom int \l0x007d: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r1 I:int), (r1 I:int), (r1 I:int), (r4 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)]\l}"];
Node_98 [shape=record,label="{98\:\ 0x0081|RETURN\l|0x0081: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_99 [shape=record,label="{99\:\ 0x0082|0x0082: SGET  (r1 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets  (LINE:1015)\l}"];
Node_100 [shape=record,label="{100\:\ 0x0084|RETURN\l|0x0084: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_101 [shape=record,label="{101\:\ 0x0085|0x0085: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ignoreVisibility' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:104:0x00ac  (LINE:964)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0087|0x0087: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: DIRECT call: androidx.core.view.WindowInsetsCompat.Impl20.getRootStableInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:965)\l0x008b: INVOKE  (r2 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getStableInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:966)\l0x008f: IGET  (r3 I:int) = (r0 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int  (LINE:967)\l0x0091: IGET  (r4 I:int) = (r2 I:androidx.core.graphics.Insets A[D('stable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int \l0x0093: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:968)\l0x0097: IGET  (r4 I:int) = (r0 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int \l0x0099: IGET  (r5 I:int) = (r2 I:androidx.core.graphics.Insets A[D('stable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int \l0x009b: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:970)\l0x009f: IGET  (r5 I:int) = (r0 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int \l0x00a1: IGET  (r6 I:int) = (r2 I:androidx.core.graphics.Insets A[D('stable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int \l0x00a3: INVOKE  (r5 I:int) = (r5 I:int), (r6 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:971)\l0x00a7: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r3 I:int), (r1 I:int), (r4 I:int), (r5 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)] (LINE:967)\l}"];
Node_103 [shape=record,label="{103\:\ 0x00ab|RETURN\l|0x00ab: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_104 [shape=record,label="{104\:\ 0x00ac|0x00ac: INVOKE  (r2 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getSystemWindowInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:974)\l0x00b0: IGET  (r3 I:androidx.core.view.WindowInsetsCompat) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) androidx.core.view.WindowInsetsCompat.Impl20.mRootWindowInsets androidx.core.view.WindowInsetsCompat  (LINE:975)\l}"];
Node_105 [shape=record,label="{105\:\ 0x00b2|0x00b2: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:108:0x00ba \l}"];
Node_106 [shape=record,label="{106\:\ 0x00b4|0x00b4: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r3 I:androidx.core.view.WindowInsetsCompat) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getStableInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:976)\l}"];
Node_108 [shape=record,label="{108\:\ 0x00ba|0x00bb: IGET  (r3 I:int) = (r2 I:androidx.core.graphics.Insets A[D('systemWindow' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int  (LINE:979)\l}"];
Node_109 [shape=record,label="{109\:\ 0x00bd|0x00bd: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootStable' androidx.core.graphics.Insets)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x00c5  (LINE:980)\l}"];
Node_110 [shape=record,label="{110\:\ 0x00bf|0x00bf: IGET  (r4 I:int) = (r0 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int  (LINE:984)\l0x00c1: INVOKE  (r3 I:int A[D('bottom' int)]) = (r3 I:int A[D('bottom' int)]), (r4 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_111 [shape=record,label="{111\:\ 0x00c5|0x00c5: IGET  (r4 I:int) = (r2 I:androidx.core.graphics.Insets A[D('systemWindow' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int  (LINE:986)\l0x00c7: IGET  (r5 I:int) = (r2 I:androidx.core.graphics.Insets A[D('systemWindow' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int \l0x00c9: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r4 I:int), (r1 I:int), (r5 I:int), (r3 I:int A[D('bottom' int)]) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)]\l}"];
Node_112 [shape=record,label="{112\:\ 0x00cd|RETURN\l|0x00cd: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_113 [shape=record,label="{113\:\ 0x00ce|0x00ce: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ignoreVisibility' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:116:0x00e5  (LINE:955)\l}"];
Node_114 [shape=record,label="{114\:\ 0x00d0|0x00d0: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: DIRECT call: androidx.core.view.WindowInsetsCompat.Impl20.getRootStableInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:956)\l0x00d4: IGET  (r2 I:int) = (r0 I:androidx.core.graphics.Insets A[D('rootStable' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.top int  (LINE:957)\l0x00d6: INVOKE  (r3 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getSystemWindowInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:958)\l0x00da: IGET  (r3 I:int) = (r3 I:androidx.core.graphics.Insets) androidx.core.graphics.Insets.top int \l0x00dc: INVOKE  (r2 I:int) = (r2 I:int), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x00e0: INVOKE  (r1 I:androidx.core.graphics.Insets) = (r1 I:int), (r2 I:int), (r1 I:int), (r1 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)] (LINE:957)\l}"];
Node_115 [shape=record,label="{115\:\ 0x00e4|RETURN\l|0x00e4: RETURN  (r1 I:androidx.core.graphics.Insets) \l}"];
Node_116 [shape=record,label="{116\:\ 0x00e5|0x00e5: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r7 I:androidx.core.view.WindowInsetsCompat$Impl20) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getSystemWindowInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:960)\l0x00e9: IGET  (r0 I:int) = (r0 I:androidx.core.graphics.Insets) androidx.core.graphics.Insets.top int \l0x00eb: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r1 I:int), (r0 I:int), (r1 I:int), (r1 I:int) type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)]\l}"];
Node_117 [shape=record,label="{117\:\ 0x00ef|RETURN\l|0x00ef: RETURN  (r0 I:androidx.core.graphics.Insets) \l}"];
MethodNode[shape=record,label="{protected androidx.core.graphics.Insets androidx.core.view.WindowInsetsCompat.Impl20.getInsetsForType((r7 'this' I:androidx.core.view.WindowInsetsCompat$Impl20 A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('ignoreVisibility' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:72:0x002c \-\> B:60:?, CROSS_EDGE: B:74:0x002f \-\> B:60:?, CROSS_EDGE: B:68:0x0011 \-\> B:70:0x0016, CROSS_EDGE: B:76:0x0034 \-\> B:60:?, CROSS_EDGE: B:78:0x0039 \-\> B:60:?, CROSS_EDGE: B:80:0x003e \-\> B:60:?, CROSS_EDGE: B:86:0x004f \-\> B:60:?, CROSS_EDGE: B:90:0x0064 \-\> B:60:?, CROSS_EDGE: B:98:0x0081 \-\> B:60:?, CROSS_EDGE: B:100:0x0084 \-\> B:60:?, CROSS_EDGE: B:94:0x006f \-\> B:99:0x0082, CROSS_EDGE: B:92:0x0067 \-\> B:99:0x0082, CROSS_EDGE: B:82:0x0041 \-\> B:85:0x004d, CROSS_EDGE: B:103:0x00ab \-\> B:60:?, CROSS_EDGE: B:112:0x00cd \-\> B:60:?, CROSS_EDGE: B:109:0x00bd \-\> B:111:0x00c5, CROSS_EDGE: B:105:0x00b2 \-\> B:108:0x00ba, CROSS_EDGE: B:115:0x00e4 \-\> B:60:?, CROSS_EDGE: B:117:0x00ef \-\> B:60:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0030: r0 'cutout' Landroidx\/core\/view\/DisplayCutoutCompat;\l  0x004d\-0x0085: r0 'overriddenInsets' Landroidx\/core\/graphics\/Insets;\l  0x0054\-0x0085: r2 'systemWindow' Landroidx\/core\/graphics\/Insets;\l  0x0058\-0x0085: r3 'rootStable' Landroidx\/core\/graphics\/Insets;\l  0x008b\-0x00ac: r0 'rootStable' Landroidx\/core\/graphics\/Insets;\l  0x008f\-0x00ac: r2 'stable' Landroidx\/core\/graphics\/Insets;\l  0x00bb\-0x00ce: r0 'rootStable' Landroidx\/core\/graphics\/Insets;\l  0x00b0\-0x00ce: r2 'systemWindow' Landroidx\/core\/graphics\/Insets;\l  0x00bd\-0x00ce: r3 'bottom' I\l  0x00d4\-0x00e5: r0 'rootStable' Landroidx\/core\/graphics\/Insets;\l  \-1 \-0x010d: r8 'type' I\l  \-1 \-0x010d: r9 'ignoreVisibility' Z\l}"];
MethodNode -> Node_59;Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_62 -> Node_65;
Node_62 -> Node_75;
Node_62 -> Node_77;
Node_62 -> Node_79;
Node_62 -> Node_81;
Node_62 -> Node_101;
Node_62 -> Node_113;
Node_63 -> Node_64;
Node_64 -> Node_60;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_73;
Node_71 -> Node_72;
Node_72 -> Node_60;
Node_73 -> Node_74;
Node_74 -> Node_60;
Node_68 -> Node_70;
Node_75 -> Node_76;
Node_76 -> Node_60;
Node_77 -> Node_78;
Node_78 -> Node_60;
Node_79 -> Node_80;
Node_80 -> Node_60;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_85;
Node_83 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_60;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_91;
Node_89 -> Node_90;
Node_90 -> Node_60;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_99;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_99;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_99;
Node_97 -> Node_98;
Node_98 -> Node_60;
Node_99 -> Node_100;
Node_100 -> Node_60;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_104;
Node_102 -> Node_103;
Node_103 -> Node_60;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_108;
Node_106 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_111;
Node_110 -> Node_111;
Node_111 -> Node_112;
Node_112 -> Node_60;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_116;
Node_114 -> Node_115;
Node_115 -> Node_60;
Node_116 -> Node_117;
Node_117 -> Node_60;
}

