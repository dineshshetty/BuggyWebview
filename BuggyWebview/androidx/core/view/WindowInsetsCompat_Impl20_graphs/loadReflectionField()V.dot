digraph "CFG forandroidx.core.view.WindowInsetsCompat.Impl20.loadReflectionField()V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0037, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lCatch: ReflectiveOperationException \-\> 0x0037\l|androidx.core.view.WindowInsetsCompat.Impl20.sGetViewRootImplMethod = android.view.View.class.getDeclaredMethod(\"getViewRootImpl\", new java.lang.Class[0])     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\ljava.lang.Class r1 = java.lang.Class.forName(\"android.view.View$AttachInfo\")     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\landroidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoClass = r1     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\landroidx.core.view.WindowInsetsCompat.Impl20.sVisibleInsetsField = r1.getDeclaredField(\"mVisibleInsets\")     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\ljava.lang.Class r1 = java.lang.Class.forName(\"android.view.ViewRootImpl\")     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\landroidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoField = r1.getDeclaredField(\"mAttachInfo\")     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\landroidx.core.view.WindowInsetsCompat.Impl20.sVisibleInsetsField.setAccessible(true)     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\landroidx.core.view.WindowInsetsCompat.Impl20.sAttachInfoField.setAccessible(true)     \/\/ Catch: java.lang.ReflectiveOperationException \-\> L37\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|androidx.core.view.WindowInsetsCompat.Impl20.sVisibleRectReflectionFetched = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|ExcHandler: ReflectiveOperationException \-\> 0x0037\l|java.lang.ReflectiveOperationException r1 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Failed to get visible insets. (Reflection error). \")\lr2.append(r1.getMessage())\landroid.util.Log.e(androidx.core.view.WindowInsetsCompat.TAG, r2.toString(), r1)\l}"];
MethodNode[shape=record,label="{private static void androidx.core.view.WindowInsetsCompat.Impl20.loadReflectionField()  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0038 \-\> B:18:0x0052, CROSS_EDGE: B:20:0x0001 \-\> B:16:0x0037\lINLINE_NOT_NEEDED\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0037, blocks: (B:14:0x0001), top: B:20:0x0001 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_16;
Node_14 -> Node_18;
Node_14 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_21 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

