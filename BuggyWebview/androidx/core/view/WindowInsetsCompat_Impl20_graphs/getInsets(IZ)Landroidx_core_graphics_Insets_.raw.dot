digraph "CFG forandroidx.core.view.WindowInsetsCompat.Impl20.getInsets(IZ)Landroidx\/core\/graphics\/Insets;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: SGET  (r0 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets  (LINE:940)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:941)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|LOOP_START\lLOOP:0: B:17:0x0003\-\>B:23:0x0014\l|0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (256(0x100, float:3.59E\-43) ??[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \> (r2 I:??[int, byte, short, char])  \-\> B:25:0x0017 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: ARITH  (r2 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('typeMask' int)]) & (r1 I:??[int, boolean, short, byte, char] A[D('i' int)])  (LINE:942)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000c \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r2 I:androidx.core.graphics.Insets) = \l  (r3 I:androidx.core.view.WindowInsetsCompat$Impl20)\l  (r1 I:int A[D('i' int)])\l  (r5 I:boolean A[D('ignoreVisibility' boolean)])\l type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.Impl20.getInsetsForType(int, boolean):androidx.core.graphics.Insets A[MD:(int, boolean):androidx.core.graphics.Insets (m)] (LINE:945)\l0x0010: INVOKE  (r0 I:androidx.core.graphics.Insets A[D('result' androidx.core.graphics.Insets)]) = (r0 I:androidx.core.graphics.Insets A[D('result' androidx.core.graphics.Insets)]), (r2 I:androidx.core.graphics.Insets) type: STATIC call: androidx.core.graphics.Insets.max(androidx.core.graphics.Insets, androidx.core.graphics.Insets):androidx.core.graphics.Insets A[MD:(androidx.core.graphics.Insets, androidx.core.graphics.Insets):androidx.core.graphics.Insets (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|LOOP_END\lLOOP:0: B:17:0x0003\-\>B:23:0x0014\l|0x0014: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) \<\< (1 int)  (LINE:941)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:androidx.core.graphics.Insets A[D('result' androidx.core.graphics.Insets)])  (LINE:947)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private androidx.core.graphics.Insets androidx.core.view.WindowInsetsCompat.Impl20.getInsets((r3 'this' I:androidx.core.view.WindowInsetsCompat$Impl20 A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('typeMask' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('ignoreVisibility' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0014 \-\> B:17:0x0003, CROSS_EDGE: B:20:0x0009 \-\> B:23:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0003\-0x0017: r1 'i' I\l  0x0002\-0x0017: r0 'result' Landroidx\/core\/graphics\/Insets;\l  \-1 \-0x0017: r4 'typeMask' I\l  \-1 \-0x0017: r5 'ignoreVisibility' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_27[style=dashed];
Node_22 -> Node_26;
Node_26 -> Node_23;
Node_23 -> Node_17;
Node_27 -> Node_23;
Node_25 -> Node_24;
Node_24 -> Node_15;
}

