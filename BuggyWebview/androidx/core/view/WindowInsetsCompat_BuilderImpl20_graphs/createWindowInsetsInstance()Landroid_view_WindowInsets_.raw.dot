digraph "CFG forandroidx.core.view.WindowInsetsCompat.BuilderImpl20.createWindowInsetsInstance()Landroid\/view\/WindowInsets;" {
Node_40 [shape=record,label="{40\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConsumedFieldFetched boolean  (LINE:1761)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST_STR  (r2 I:java.lang.String) =  \"WindowInsetsCompat\" \l}"];
Node_43 [shape=record,label="{43\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x001a \l}"];
Node_49 [shape=record,label="{49\:\ 0x001a|0x001a: SGET  (r0 I:java.lang.reflect.Field) =  androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConsumedField java.lang.reflect.Field  (LINE:1769)\l0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0034 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0034|0x0034: SGET  (r0 I:boolean A[D('e' java.lang.ReflectiveOperationException)]) =  androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConstructorFetched boolean  (LINE:1782)\l0x0036: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0037|0x0037: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0050 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0050|0x0050: SGET  (r0 I:java.lang.reflect.Constructor\<android.view.WindowInsets\>) =  androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConstructor java.lang.reflect.Constructor  (LINE:1790)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0052|0x0052: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x006a \l}"];
Node_71 [shape=record,label="{71\:\ 0x006a|RETURN\l|0x006a: RETURN  (r3 I:android.view.WindowInsets)  (LINE:1799)\l}"];
Node_41 [shape=record,label="{41\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_72 [shape=record,label="{72\:\ 0x0054|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_67 [shape=record,label="{67\:\ 0x0054|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0064, blocks: (B:67:0x0054), top: B:72:0x0054 \}\lCatch: ReflectiveOperationException \-\> 0x0064\l|0x0054: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: ReflectiveOperationException \-\> 0x0064, TRY_ENTER] (LINE:1792)\l0x0056: NEW_INSTANCE  (r5 I:android.graphics.Rect) =  android.graphics.Rect A[Catch: ReflectiveOperationException \-\> 0x0064]\l0x0058: INVOKE  (r5 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[Catch: ReflectiveOperationException \-\> 0x0064, MD:():void (c)]\l0x005b: APUT  (r1 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: ReflectiveOperationException \-\> 0x0064]\l0x005d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Constructor), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: ReflectiveOperationException \-\> 0x0064, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x0061: CHECK_CAST (r0 I:android.view.WindowInsets) = (android.view.WindowInsets) (r0 I:??[OBJECT, ARRAY]) A[Catch: ReflectiveOperationException \-\> 0x0064, TRY_LEAVE]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0063|RETURN\l|0x0063: RETURN  (r0 I:android.view.WindowInsets) \l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_69 [shape=record,label="{69\:\ 0x0064|ExcHandler: ReflectiveOperationException \-\> 0x0064\l|0x0064: MOVE_EXCEPTION  (r0 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x0064] (LINE:1793)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0065|0x0065: CONST_STR  (r1 I:java.lang.String) =  \"Could not invoke WindowInsets(Rect) constructor\"  (LINE:1794)\l0x0067: INVOKE  \l  (r2 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_78 [shape=record,label="{78\:\ 0x0039|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{ReflectiveOperationException \-\> 0x0048, blocks: (B:60:0x0039), top: B:78:0x0039 \}\lCatch: ReflectiveOperationException \-\> 0x0048\l|0x0039: CONST_CLASS  (r0 I:java.lang.Class\<android.view.WindowInsets\>) =  android.view.WindowInsets.class A[TRY_ENTER] (LINE:1784)\l0x003b: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: ReflectiveOperationException \-\> 0x0048]\l0x003d: CONST_CLASS  (r6 I:java.lang.Class\<android.graphics.Rect\>) =  android.graphics.Rect.class \l0x003f: APUT  (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: ReflectiveOperationException \-\> 0x0048]\l0x0041: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: ReflectiveOperationException \-\> 0x0048, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0045: SPUT  (r0 I:java.lang.reflect.Constructor\<android.view.WindowInsets\>) androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConstructor java.lang.reflect.Constructor A[Catch: ReflectiveOperationException \-\> 0x0048, TRY_LEAVE]\l}"];
Node_64 [shape=record,label="{64\:\ 0x004e|0x004e: SPUT  (r1 I:boolean) androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConstructorFetched boolean  (LINE:1788)\l}"];
Node_79 [shape=record,label="{79\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_62 [shape=record,label="{62\:\ 0x0048|ExcHandler: ReflectiveOperationException \-\> 0x0048\l|0x0048: MOVE_EXCEPTION  (r0 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x0048] (LINE:1785)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0049|0x0049: CONST_STR  (r5 I:java.lang.String) =  \"Could not retrieve WindowInsets(Rect) constructor\"  (LINE:1786)\l0x004b: INVOKE  \l  (r2 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x001f|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_51 [shape=record,label="{51\:\ 0x001f|TRY_ENTER\lTryCatch #2 \{ReflectiveOperationException \-\> 0x002e, blocks: (B:51:0x001f, B:53:0x0027), top: B:76:0x001f \}\lCatch: ReflectiveOperationException \-\> 0x002e\l|0x001f: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: ReflectiveOperationException \-\> 0x002e, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER] (LINE:1771)\l0x0023: CHECK_CAST (r0 I:android.view.WindowInsets) = (android.view.WindowInsets) (r0 I:??[OBJECT, ARRAY]) A[Catch: ReflectiveOperationException \-\> 0x002e]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0025|0x0025: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumed' android.view.WindowInsets)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0034  (LINE:1772)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0027|TRY_LEAVE\lTryCatch #2 \{ReflectiveOperationException \-\> 0x002e, blocks: (B:51:0x001f, B:53:0x0027), top: B:76:0x001f \}\lCatch: ReflectiveOperationException \-\> 0x002e\l|0x0027: NEW_INSTANCE  (r4 I:android.view.WindowInsets) =  android.view.WindowInsets A[Catch: ReflectiveOperationException \-\> 0x002e] (LINE:1773)\l0x0029: INVOKE  (r4 I:android.view.WindowInsets), (r0 I:android.view.WindowInsets A[D('consumed' android.view.WindowInsets)]) type: DIRECT call: android.view.WindowInsets.\<init\>(android.view.WindowInsets):void A[Catch: ReflectiveOperationException \-\> 0x002e, MD:(android.view.WindowInsets):void (c), TRY_LEAVE]\l}"];
Node_54 [shape=record,label="{54\:\ 0x002c|RETURN\l|0x002c: RETURN  (r4 I:android.view.WindowInsets) \l}"];
Node_77 [shape=record,label="{77\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x002e|ExcHandler: ReflectiveOperationException \-\> 0x002e\l|0x002e: MOVE_EXCEPTION  (r0 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x002e] (LINE:1775)\l}"];
Node_57 [shape=record,label="{57\:\ 0x002f|0x002f: CONST_STR  (r4 I:java.lang.String) =  \"Could not get value from WindowInsets.CONSUMED field\"  (LINE:1776)\l0x0031: INVOKE  \l  (r2 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{ReflectiveOperationException \-\> 0x0012, blocks: (B:44:0x0007), top: B:74:0x0007 \}\lCatch: ReflectiveOperationException \-\> 0x0012\l|0x0007: CONST_CLASS  (r0 I:java.lang.Class\<android.view.WindowInsets\>) =  android.view.WindowInsets.class A[TRY_ENTER] (LINE:1763)\l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"CONSUMED\" \l0x000b: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0012, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x000f: SPUT  (r0 I:java.lang.reflect.Field) androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConsumedField java.lang.reflect.Field A[Catch: ReflectiveOperationException \-\> 0x0012, TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0018|0x0018: SPUT  (r1 I:boolean) androidx.core.view.WindowInsetsCompat.BuilderImpl20.sConsumedFieldFetched boolean  (LINE:1767)\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ 0x0012|ExcHandler: ReflectiveOperationException \-\> 0x0012\l|0x0012: MOVE_EXCEPTION  (r0 I:java.lang.ReflectiveOperationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ReflectiveOperationException \-\> 0x0012] (LINE:1764)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0013|0x0013: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve WindowInsets.CONSUMED field\"  (LINE:1765)\l0x0015: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ReflectiveOperationException)])\l type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
MethodNode[shape=record,label="{private static android.view.WindowInsets androidx.core.view.WindowInsetsCompat.BuilderImpl20.createWindowInsetsInstance()  | USE_LINES_HINTS\lCROSS_EDGE: B:68:0x0063 \-\> B:41:?, CROSS_EDGE: B:70:0x0065 \-\> B:71:0x006a, CROSS_EDGE: B:72:0x0054 \-\> B:69:0x0064, CROSS_EDGE: B:64:0x004e \-\> B:65:0x0050, CROSS_EDGE: B:63:0x0049 \-\> B:64:0x004e, CROSS_EDGE: B:78:0x0039 \-\> B:62:0x0048, CROSS_EDGE: B:54:0x002c \-\> B:41:?, CROSS_EDGE: B:57:0x002f \-\> B:58:0x0034, CROSS_EDGE: B:52:0x0025 \-\> B:58:0x0034, CROSS_EDGE: B:76:0x001f \-\> B:56:0x002e, CROSS_EDGE: B:48:0x0018 \-\> B:49:0x001a, CROSS_EDGE: B:47:0x0013 \-\> B:48:0x0018, CROSS_EDGE: B:74:0x0007 \-\> B:46:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0018: r0 'e' Ljava\/lang\/ReflectiveOperationException;\l  0x0025\-0x002d: r0 'consumed' Landroid\/view\/WindowInsets;\l  0x002f\-0x0034: r0 'e' Ljava\/lang\/ReflectiveOperationException;\l  0x0049\-0x004e: r0 'e' Ljava\/lang\/ReflectiveOperationException;\l  0x0065\-0x006a: r0 'e' Ljava\/lang\/ReflectiveOperationException;\lTryCatch #0 \{ReflectiveOperationException \-\> 0x0064, blocks: (B:67:0x0054), top: B:72:0x0054 \}, TryCatch #1 \{ReflectiveOperationException \-\> 0x0012, blocks: (B:44:0x0007), top: B:74:0x0007 \}, TryCatch #2 \{ReflectiveOperationException \-\> 0x002e, blocks: (B:51:0x001f, B:53:0x0027), top: B:76:0x001f \}, TryCatch #3 \{ReflectiveOperationException \-\> 0x0048, blocks: (B:60:0x0039), top: B:78:0x0039 \}\l}"];
MethodNode -> Node_40;Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_49;
Node_43 -> Node_74[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_58;
Node_50 -> Node_76[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_65;
Node_59 -> Node_78[style=dashed];
Node_65 -> Node_66;
Node_66 -> Node_71;
Node_66 -> Node_72[style=dashed];
Node_71 -> Node_41;
Node_72 -> Node_67;
Node_72 -> Node_69;
Node_67 -> Node_68;
Node_67 -> Node_73;
Node_68 -> Node_41;
Node_73 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_78 -> Node_60;
Node_78 -> Node_62;
Node_60 -> Node_64;
Node_60 -> Node_79;
Node_64 -> Node_65;
Node_79 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_76 -> Node_51;
Node_76 -> Node_56;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_58;
Node_53 -> Node_54;
Node_53 -> Node_77;
Node_54 -> Node_41;
Node_77 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_74 -> Node_44;
Node_74 -> Node_46;
Node_44 -> Node_48;
Node_44 -> Node_75;
Node_48 -> Node_49;
Node_75 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
}

