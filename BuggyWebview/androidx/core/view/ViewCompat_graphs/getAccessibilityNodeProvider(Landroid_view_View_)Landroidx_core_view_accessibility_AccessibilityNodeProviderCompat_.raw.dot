digraph "CFG forandroidx.core.view.ViewCompat.getAccessibilityNodeProvider(Landroid\/view\/View;)Landroidx\/core\/view\/accessibility\/AccessibilityNodeProviderCompat;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1452)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:19:0x0012 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r0 I:android.view.accessibility.AccessibilityNodeProvider) = (r2 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.Api16Impl.getAccessibilityNodeProvider(android.view.View):android.view.accessibility.AccessibilityNodeProvider A[MD:(android.view.View):android.view.accessibility.AccessibilityNodeProvider (m)] (LINE:1453)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('provider' android.view.accessibility.AccessibilityNodeProvider)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:?  (LINE:1454)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: NEW_INSTANCE  (r1 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat) =  androidx.core.view.accessibility.AccessibilityNodeProviderCompat  (LINE:1455)\l0x000e: INVOKE  \l  (r1 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat)\l  (r0 I:java.lang.Object A[D('provider' android.view.accessibility.AccessibilityNodeProvider)])\l type: DIRECT call: androidx.core.view.accessibility.AccessibilityNodeProviderCompat.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|RETURN\l|0x0011: RETURN  (r1 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('provider' android.view.accessibility.AccessibilityNodeProvider)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1458)\l0x0013: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('provider' android.view.accessibility.AccessibilityNodeProvider)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1458)\l0x0013: RETURN  (r0 I:androidx.core.view.accessibility.AccessibilityNodeProviderCompat) \l}"];
MethodNode[shape=record,label="{public static androidx.core.view.accessibility.AccessibilityNodeProviderCompat androidx.core.view.ViewCompat.getAccessibilityNodeProvider((r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0013 \-\> B:12:?, CROSS_EDGE: B:14:0x0004 \-\> B:19:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0012: r0 'provider' Landroid\/view\/accessibility\/AccessibilityNodeProvider;\l  \-1 \-0x0013: r2 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

