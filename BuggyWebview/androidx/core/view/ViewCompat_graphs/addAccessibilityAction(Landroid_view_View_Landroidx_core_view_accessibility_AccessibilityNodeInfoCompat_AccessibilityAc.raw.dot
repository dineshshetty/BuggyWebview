digraph "CFG forandroidx.core.view.ViewCompat.addAccessibilityAction(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat$AccessibilityActionCompat;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1328)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: INVOKE  (r2 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.ensureAccessibilityDelegateCompat(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:1329)\l0x0009: INVOKE  (r0 I:int) = \l  (r3 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat A[D('action' androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.getId():int A[MD:():int (m)] (LINE:1330)\l0x000d: INVOKE  (r0 I:int), (r2 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.removeActionWithId(int, android.view.View):void A[MD:(int, android.view.View):void (m)]\l0x0010: INVOKE  (r0 I:java.util.List) = (r2 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getActionList(android.view.View):java.util.List A[MD:(android.view.View):java.util.List\<androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat\> (m)] (LINE:1331)\l0x0014: INVOKE  \l  (r0 I:java.util.List)\l  (r3 I:java.lang.Object A[D('action' androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0017: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1332)\l0x0018: INVOKE  (r2 I:android.view.View A[D('view' android.view.View)]), (r0 I:int) type: STATIC call: androidx.core.view.ViewCompat.notifyViewAccessibilityStateChangedIfNeeded(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN    (LINE:1335)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN   A[SYNTHETIC] (LINE:1335)\l}"];
MethodNode[shape=record,label="{private static void androidx.core.view.ViewCompat.addAccessibilityAction((r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat A[D('action' androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r2 'view' Landroid\/view\/View;\l  \-1 \-0x001b: r3 'action' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat$AccessibilityActionCompat;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

