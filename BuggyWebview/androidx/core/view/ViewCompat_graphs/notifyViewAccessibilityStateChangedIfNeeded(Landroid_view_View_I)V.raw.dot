digraph "CFG forandroidx.core.view.ViewCompat.notifyViewAccessibilityStateChangedIfNeeded(Landroid\/view\/View;I)V" {
Node_42 [shape=record,label="{42\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0001|0x0001: INVOKE  (r0 I:android.content.Context) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)] (LINE:4482)\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"accessibility\" \l0x0007: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.content.Context), (r1 I:java.lang.String) type: VIRTUAL call: android.content.Context.getSystemService(java.lang.String):java.lang.Object A[MD:(java.lang.String):java.lang.Object (c)]\l0x000b: CHECK_CAST (r0 I:android.view.accessibility.AccessibilityManager) = (android.view.accessibility.AccessibilityManager) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r1 I:boolean) = \l  (r0 I:android.view.accessibility.AccessibilityManager A[D('accessibilityManager' android.view.accessibility.AccessibilityManager)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityManager.isEnabled():boolean A[MD:():boolean (c)] (LINE:4483)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0014 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0013|RETURN\l|0x0013: RETURN    (LINE:4484)\l}"];
Node_43 [shape=record,label="{43\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0014|0x0014: INVOKE  (r1 I:java.lang.CharSequence) = (r6 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):java.lang.CharSequence A[MD:(android.view.View):java.lang.CharSequence (m)] (LINE:4486)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0028 \l}"];
Node_49 [shape=record,label="{49\:\ 0x001a|0x001a: INVOKE  (r1 I:boolean) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.isShown():boolean A[MD:():boolean (c)] (LINE:4487)\l}"];
Node_50 [shape=record,label="{50\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0028 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0020|0x0020: INVOKE  (r1 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getWindowVisibility():int A[MD:():int (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0028 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0026|0x0026: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0029|0x0029: INVOKE  (r2 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getAccessibilityLiveRegion(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:4490)\l0x002d: CONST  (r3 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|0x002f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x008b \l}"];
Node_57 [shape=record,label="{57\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVisibleAccessibilityPane' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0034 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0034|0x0034: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('changeType' int)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0058  (LINE:4502)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0036|0x0036: INVOKE  (r2 I:android.view.accessibility.AccessibilityEvent) =  type: STATIC call: android.view.accessibility.AccessibilityEvent.obtain():android.view.accessibility.AccessibilityEvent A[MD:():android.view.accessibility.AccessibilityEvent (c)] (LINE:4503)\l0x003a: INVOKE  \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l type: VIRTUAL call: android.view.View.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):void A[MD:(android.view.accessibility.AccessibilityEvent):void (c)] (LINE:4504)\l0x003d: INVOKE  \l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r3 I:int)\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setEventType(int):void A[MD:(int):void (c)] (LINE:4505)\l0x0040: INVOKE  \l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r7 I:int A[D('changeType' int)])\l type: STATIC call: androidx.core.view.ViewCompat.Api19Impl.setContentChangeTypes(android.view.accessibility.AccessibilityEvent, int):void A[MD:(android.view.accessibility.AccessibilityEvent, int):void (m)] (LINE:4506)\l0x0043: INVOKE  \l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r6 I:android.view.View A[D('view' android.view.View)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setSource(android.view.View):void A[MD:(android.view.View):void (c)] (LINE:4507)\l0x0046: INVOKE  \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l type: VIRTUAL call: android.view.View.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent):void A[MD:(android.view.accessibility.AccessibilityEvent):void (c)] (LINE:4508)\l0x0049: INVOKE  (r3 I:java.util.List) = (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)]) type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.getText():java.util.List A[MD:():java.util.List\<java.lang.CharSequence\> (c)] (LINE:4509)\l0x004d: INVOKE  (r4 I:java.lang.CharSequence) = (r6 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):java.lang.CharSequence A[MD:(android.view.View):java.lang.CharSequence (m)]\l0x0051: INVOKE  (r3 I:java.util.List), (r4 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0054: INVOKE  \l  (r0 I:android.view.accessibility.AccessibilityManager A[D('accessibilityManager' android.view.accessibility.AccessibilityManager)])\l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityManager.sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent):void A[MD:(android.view.accessibility.AccessibilityEvent):void (c)] (LINE:4510)\l}"];
Node_82 [shape=record,label="{82\:\ ?|SYNTHETIC\lRETURN\l|0x00ae: RETURN   A[SYNTHETIC] (LINE:4520)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|0x0058: INVOKE  (r2 I:android.view.ViewParent) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:4511)\l}"];
Node_62 [shape=record,label="{62\:\ 0x005c|0x005c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:? \l}"];
Node_63 [shape=record,label="{63\:\ 0x005e|0x005e: INVOKE  (r2 I:android.view.ViewParent) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:4512)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0062|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_64 [shape=record,label="{64\:\ 0x0062|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{AbstractMethodError \-\> 0x0066, blocks: (B:64:0x0062), top: B:78:0x0062 \}\lCatch: AbstractMethodError \-\> 0x0066\l|0x0062: INVOKE  \l  (r2 I:android.view.ViewParent A[D('parent' android.view.ViewParent)])\l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r7 I:int A[D('changeType' int)])\l type: STATIC call: androidx.core.view.ViewCompat.Api19Impl.notifySubtreeAccessibilityStateChanged(android.view.ViewParent, android.view.View, android.view.View, int):void A[Catch: AbstractMethodError \-\> 0x0066, MD:(android.view.ViewParent, android.view.View, android.view.View, int):void (m), TRY_ENTER, TRY_LEAVE] (LINE:4514)\l}"];
Node_79 [shape=record,label="{79\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_81 [shape=record,label="{81\:\ ?|SYNTHETIC\lRETURN\l|0x00ae: RETURN   A[SYNTHETIC] (LINE:4520)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0066|ExcHandler: AbstractMethodError \-\> 0x0066\l|0x0066: MOVE_EXCEPTION  (r3 I:java.lang.AbstractMethodError A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: AbstractMethodError \-\> 0x0066] (LINE:4515)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0067|0x0067: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:4516)\l0x0069: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x006c: INVOKE  (r5 I:android.view.ViewParent) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)]\l0x0070: INVOKE  (r5 I:java.lang.Class) = (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x0074: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l0x0078: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x007b: CONST_STR  (r5 I:java.lang.String) =  \" does not fully implement ViewParent\" \l0x007d: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0080: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0084: CONST_STR  (r5 I:java.lang.String) =  \"ViewCompat\" \l0x0086: INVOKE  (r5 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.AbstractMethodError)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_80 [shape=record,label="{80\:\ ?|SYNTHETIC\lRETURN\l|0x00ae: RETURN   A[SYNTHETIC] (LINE:4520)\l}"];
Node_83 [shape=record,label="{83\:\ ?|SYNTHETIC\lRETURN\l|0x00ae: RETURN   A[SYNTHETIC] (LINE:4520)\l}"];
Node_69 [shape=record,label="{69\:\ 0x008b|0x008b: INVOKE  (r2 I:android.view.accessibility.AccessibilityEvent) =  type: STATIC call: android.view.accessibility.AccessibilityEvent.obtain():android.view.accessibility.AccessibilityEvent A[MD:():android.view.accessibility.AccessibilityEvent (c)] (LINE:4492)\l}"];
Node_70 [shape=record,label="{70\:\ 0x008f|0x008f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVisibleAccessibilityPane' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0092  (LINE:4493)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0092|0x0092: CONST  (r3 I:??[int, float, short, byte, char]) = (2048(0x800, float:2.87E\-42) ??[int, float, short, byte, char])  (LINE:4495)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0094|0x0094: INVOKE  \l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r3 I:int)\l type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.setEventType(int):void A[MD:(int):void (c)] (LINE:4493)\l0x0097: INVOKE  \l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l  (r7 I:int A[D('changeType' int)])\l type: STATIC call: androidx.core.view.ViewCompat.Api19Impl.setContentChangeTypes(android.view.accessibility.AccessibilityEvent, int):void A[MD:(android.view.accessibility.AccessibilityEvent, int):void (m)] (LINE:4496)\l}"];
Node_74 [shape=record,label="{74\:\ 0x009a|0x009a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVisibleAccessibilityPane' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x00aa  (LINE:4497)\l}"];
Node_75 [shape=record,label="{75\:\ 0x009c|0x009c: INVOKE  (r3 I:java.util.List) = (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)]) type: VIRTUAL call: android.view.accessibility.AccessibilityEvent.getText():java.util.List A[MD:():java.util.List\<java.lang.CharSequence\> (c)] (LINE:4498)\l0x00a0: INVOKE  (r4 I:java.lang.CharSequence) = (r6 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):java.lang.CharSequence A[MD:(android.view.View):java.lang.CharSequence (m)]\l0x00a4: INVOKE  (r3 I:java.util.List), (r4 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x00a7: INVOKE  (r6 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.setViewImportanceForAccessibilityIfNeeded(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:4499)\l}"];
Node_76 [shape=record,label="{76\:\ 0x00aa|0x00aa: INVOKE  \l  (r6 I:android.view.View A[D('view' android.view.View)])\l  (r2 I:android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent)])\l type: VIRTUAL call: android.view.View.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent):void A[MD:(android.view.accessibility.AccessibilityEvent):void (c)] (LINE:4501)\l}"];
Node_77 [shape=record,label="{77\:\ 0x00ae|RETURN\lORIG_RETURN\l|0x00ae: RETURN    (LINE:4520)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0028|0x0028: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{static void androidx.core.view.ViewCompat.notifyViewAccessibilityStateChangedIfNeeded((r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('changeType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:77:0x00ae \-\> B:43:?, CROSS_EDGE: B:64:0x0062 \-\> B:77:0x00ae, CROSS_EDGE: B:67:0x0067 \-\> B:77:0x00ae, CROSS_EDGE: B:78:0x0062 \-\> B:66:0x0066, CROSS_EDGE: B:62:0x005c \-\> B:77:0x00ae, CROSS_EDGE: B:76:0x00aa \-\> B:77:0x00ae, CROSS_EDGE: B:74:0x009a \-\> B:76:0x00aa, CROSS_EDGE: B:70:0x008f \-\> B:73:0x0094, CROSS_EDGE: B:56:0x002f \-\> B:69:0x008b, CROSS_EDGE: B:54:0x0028 \-\> B:55:0x0029, CROSS_EDGE: B:50:0x001e \-\> B:54:0x0028, CROSS_EDGE: B:48:0x0018 \-\> B:54:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003a\-0x0057: r2 'event' Landroid\/view\/accessibility\/AccessibilityEvent;\l  0x0062\-0x008a: r2 'parent' Landroid\/view\/ViewParent;\l  0x0067\-0x008a: r3 'e' Ljava\/lang\/AbstractMethodError;\l  0x008f\-0x00ad: r2 'event' Landroid\/view\/accessibility\/AccessibilityEvent;\l  0x000d\-0x00ae: r0 'accessibilityManager' Landroid\/view\/accessibility\/AccessibilityManager;\l  0x0029\-0x00ae: r1 'isVisibleAccessibilityPane' Z\l  \-1 \-0x00ae: r6 'view' Landroid\/view\/View;\l  \-1 \-0x00ae: r7 'changeType' I\lTryCatch #0 \{AbstractMethodError \-\> 0x0066, blocks: (B:64:0x0062), top: B:78:0x0062 \}\l}"];
MethodNode -> Node_42;Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_43;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_54;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_54;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_69;
Node_57 -> Node_59;
Node_57 -> Node_69[style=dashed];
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_82;
Node_82 -> Node_43;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_83;
Node_63 -> Node_78;
Node_78 -> Node_64;
Node_78 -> Node_66;
Node_64 -> Node_79;
Node_64 -> Node_81;
Node_79 -> Node_66;
Node_81 -> Node_43;
Node_66 -> Node_67;
Node_67 -> Node_80;
Node_80 -> Node_43;
Node_83 -> Node_43;
Node_69 -> Node_70;
Node_70 -> Node_72;
Node_70 -> Node_73[style=dashed];
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_43;
Node_54 -> Node_55;
}

