digraph "CFG forandroidx.core.view.ViewCompat.offsetTopAndBottom(Landroid\/view\/View;I)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:3616)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:27:0x000a \l}"];
Node_26 [shape=record,label="{26\:\ 0x0006|0x0006: INVOKE  (r8 I:android.view.View A[D('view' android.view.View)]), (r9 I:int A[D('offset' int)]) type: VIRTUAL call: android.view.View.offsetTopAndBottom(int):void A[MD:(int):void (c)] (LINE:3617)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x006f: RETURN   A[SYNTHETIC] (LINE:3644)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:3618)\l0x000c: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:38:0x006c \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: INVOKE  (r0 I:android.graphics.Rect) =  type: STATIC call: androidx.core.view.ViewCompat.getEmptyTempRect():android.graphics.Rect A[MD:():android.graphics.Rect (m)] (LINE:3619)\l0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3620)\l0x0015: INVOKE  (r2 I:android.view.ViewParent) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:3622)\l0x0019: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)]) android.view.View  (LINE:3623)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x004a \l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)])  (LINE:3624)\l0x001e: CHECK_CAST (r3 I:android.view.View) = (android.view.View) (r3 I:??[OBJECT, ARRAY]) \l0x0020: INVOKE  (r4 I:int) = (r3 I:android.view.View A[D('p' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:3625)\l0x0024: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('p' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0028: INVOKE  (r6 I:int) = (r3 I:android.view.View A[D('p' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)]\l0x002c: INVOKE  (r7 I:int) = (r3 I:android.view.View A[D('p' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x0030: INVOKE  (r0 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)]), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int) type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0033: INVOKE  (r4 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:3628)\l0x0037: INVOKE  (r5 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x003b: INVOKE  (r6 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:3629)\l0x003f: INVOKE  (r7 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x0043: INVOKE  (r4 I:boolean) = (r0 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)]), (r4 I:int), (r5 I:int), (r6 I:int), (r7 I:int) type: VIRTUAL call: android.graphics.Rect.intersects(int, int, int, int):boolean A[MD:(int, int, int, int):boolean (c)] (LINE:3628)\l0x0047: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l0x0049: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needInvalidateWorkaround' boolean)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x004a|0x004a: INVOKE  (r8 I:android.view.View A[D('view' android.view.View)]), (r9 I:int A[D('offset' int)]) type: STATIC call: androidx.core.view.ViewCompat.compatOffsetTopAndBottom(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:3633)\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|0x004d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needInvalidateWorkaround' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:?  (LINE:3637)\l}"];
Node_34 [shape=record,label="{34\:\ 0x004f|0x004f: INVOKE  (r3 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l0x0053: INVOKE  (r4 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0057: INVOKE  (r5 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:3638)\l0x005b: INVOKE  (r6 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x005f: INVOKE  (r3 I:boolean) = (r0 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)]), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int) type: VIRTUAL call: android.graphics.Rect.intersect(int, int, int, int):boolean A[MD:(int, int, int, int):boolean (c)] (LINE:3637)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0063|0x0063: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:? \l}"];
Node_36 [shape=record,label="{36\:\ 0x0065|0x0065: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)])  (LINE:3639)\l0x0066: CHECK_CAST (r3 I:android.view.View) = (android.view.View) (r3 I:??[OBJECT, ARRAY]) \l0x0068: INVOKE  (r3 I:android.view.View), (r0 I:android.graphics.Rect A[D('parentRect' android.graphics.Rect)]) type: VIRTUAL call: android.view.View.invalidate(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x006f: RETURN   A[SYNTHETIC] (LINE:3644)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x006f: RETURN   A[SYNTHETIC] (LINE:3644)\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x006f: RETURN   A[SYNTHETIC] (LINE:3644)\l}"];
Node_38 [shape=record,label="{38\:\ 0x006c|0x006c: INVOKE  (r8 I:android.view.View A[D('view' android.view.View)]), (r9 I:int A[D('offset' int)]) type: STATIC call: androidx.core.view.ViewCompat.compatOffsetTopAndBottom(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:3642)\l}"];
Node_39 [shape=record,label="{39\:\ 0x006f|RETURN\lORIG_RETURN\l|0x006f: RETURN    (LINE:3644)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.offsetTopAndBottom((r8 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0065 \-\> B:39:0x006f, CROSS_EDGE: B:35:0x0063 \-\> B:39:0x006f, CROSS_EDGE: B:33:0x004d \-\> B:39:0x006f, CROSS_EDGE: B:30:0x001b \-\> B:32:0x004a, CROSS_EDGE: B:38:0x006c \-\> B:39:0x006f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x004a: r3 'p' Landroid\/view\/View;\l  0x0014\-0x006b: r0 'parentRect' Landroid\/graphics\/Rect;\l  0x0015\-0x006b: r1 'needInvalidateWorkaround' Z\l  0x0019\-0x006b: r2 'parent' Landroid\/view\/ViewParent;\l  \-1 \-0x006f: r8 'view' Landroid\/view\/View;\l  \-1 \-0x006f: r9 'offset' I\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_40;
Node_40 -> Node_23;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_38;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_42;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_43;
Node_36 -> Node_41;
Node_41 -> Node_23;
Node_43 -> Node_23;
Node_42 -> Node_23;
Node_38 -> Node_39;
Node_39 -> Node_23;
}

