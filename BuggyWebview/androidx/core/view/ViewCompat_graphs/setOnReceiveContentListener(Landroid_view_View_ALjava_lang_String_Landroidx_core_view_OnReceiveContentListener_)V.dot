digraph "CFG forandroidx.core.view.ViewCompat.setOnReceiveContentListener(Landroid\/view\/View;[Ljava\/lang\/String;Landroidx\/core\/view\/OnReceiveContentListener;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000}"];
Node_33 [shape=record,label="{33\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 31) goto L6\l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|androidx.core.view.ViewCompat.Api31Impl.setOnReceiveContentListener(r5, r6, r7)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|if (r6 == null) goto L28\l}"];
Node_37 [shape=record,label="{37\:\ 0x000c}"];
Node_38 [shape=record,label="{38\:\ 0x000d|if (r6.length != 0) goto L9\l}"];
Node_40 [shape=record,label="{40\:\ 0x0010|r0 = r6\l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|PHI: r0 \l  PHI: (r0v2 java.lang.String[]) = (r0v1 java.lang.String[]), (r0v10 java.lang.String[]) binds: [B:41:0x0012, B:40:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r6 = r0\lr0 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x0015|if (r7 == null) goto L16\l}"];
Node_44 [shape=record,label="{44\:\ 0x0017|if (r6 == null) goto L15\l}"];
Node_45 [shape=record,label="{45\:\ 0x0019|r1 = true\l}"];
Node_47 [shape=record,label="{47\:\ 0x001c|PHI: r1 \l  PHI: (r1v5 boolean) = (r1v4 boolean), (r1v6 boolean) binds: [B:46:0x001b, B:45:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.util.Preconditions.checkArgument(r1, \"When the listener is set, MIME types must also be set\")\l}"];
Node_46 [shape=record,label="{46\:\ 0x001b|r1 = false\l}"];
Node_48 [shape=record,label="{48\:\ 0x0021|if (r6 == null) goto L26\l}"];
Node_49 [shape=record,label="{49\:\ 0x0023|r1 = false\lint r2 = r6.length\l}"];
Node_50 [shape=record,label="{50\:\ 0x0025|LOOP_START\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\lPHI: r0 \l  PHI: (r0v6 int) = (r0v3 int), (r0v8 int) binds: [B:49:0x0023, B:54:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \>= r2) goto L25\l}"];
Node_51 [shape=record,label="{51\:\ 0x0027|r3 = r6[r0]\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|if (r3.startsWith(\"*\") == false) goto L21\l}"];
Node_54 [shape=record,label="{54\:\ 0x0033|LOOP_END\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\l|int r0 = r0 + 1\l}"];
Node_59 [shape=record,label="{59\:\ 0x0031|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0031|r1 = true\l}"];
Node_55 [shape=record,label="{55\:\ 0x0036|PHI: r1 \l  PHI: (r1v2 'hasLeadingWildcard' boolean) = (r1v1 'hasLeadingWildcard' boolean), (r1v3 'hasLeadingWildcard' boolean) binds: [B:58:0x0036, B:53:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"A MIME type set here must not start with *: \")\lr2.append(java.util.Arrays.toString(r6))\landroidx.core.util.Preconditions.checkArgument(r1 ^ true, r2.toString())\l}"];
Node_58 [shape=record,label="{58\:\ 0x0036|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|r5.setTag(androidx.core.C0180R.C0183id.tag_on_receive_content_mime_types, r6)\lr5.setTag(androidx.core.C0180R.C0183id.tag_on_receive_content_listener, r7)\l}"];
Node_57 [shape=record,label="{57\:\ 0x005a|RETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|r0 = null\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setOnReceiveContentListener((r5v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'mimeTypes' java.lang.String[] A[D('mimeTypes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'listener' androidx.core.view.OnReceiveContentListener A[D('listener' androidx.core.view.OnReceiveContentListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x005a \-\> B:31:?, BACK_EDGE: B:54:0x0033 \-\> B:50:0x0025, CROSS_EDGE: B:50:0x0025 \-\> B:55:0x0036, CROSS_EDGE: B:48:0x0021 \-\> B:56:0x0050, CROSS_EDGE: B:46:0x001b \-\> B:47:0x001c, CROSS_EDGE: B:43:0x0015 \-\> B:48:0x0021, CROSS_EDGE: B:41:0x0012 \-\> B:42:0x0013, CROSS_EDGE: B:36:0x000a \-\> B:41:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_31;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_46 -> Node_47;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_56;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_58;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_59[style=dashed];
Node_54 -> Node_50;
Node_59 -> Node_53;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_58 -> Node_55;
Node_56 -> Node_57;
Node_57 -> Node_31;
Node_41 -> Node_42;
}

