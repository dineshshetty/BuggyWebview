digraph "CFG forandroidx.core.view.ViewCompat.dispatchFinishTemporaryDetach(Landroid\/view\/View;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1933)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (24 ??[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:28:0x000a \l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|0x0006: INVOKE  (r3 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.Api24Impl.dispatchFinishTemporaryDetach(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:1934)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:1950)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|0x000a: SGET  (r0 I:boolean) =  androidx.core.view.ViewCompat.sTempDetachBound boolean  (LINE:1936)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0011 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: INVOKE   type: STATIC call: androidx.core.view.ViewCompat.bindTempDetach():void A[MD:():void (m)] (LINE:1937)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: SGET  (r0 I:java.lang.reflect.Method) =  androidx.core.view.ViewCompat.sDispatchFinishTemporaryDetach java.lang.reflect.Method  (LINE:1939)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0025 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1941)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0016|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x001c, blocks: (B:34:0x0016), top: B:41:0x0016 \}\lCatch: Exception \-\> 0x001c\l|0x0016: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x001c, TRY_ENTER]\l0x0018: INVOKE  (r0 I:java.lang.reflect.Method), (r3 I:java.lang.Object A[D('view' android.view.View)]), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x001c, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:1950)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|ExcHandler: Exception \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x001c] (LINE:1942)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|0x001d: CONST_STR  (r1 I:java.lang.String) =  \"ViewCompat\"  (LINE:1943)\l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"Error calling dispatchFinishTemporaryDetach\" \l0x0021: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:1950)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0025|0x0025: INVOKE  (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.onFinishTemporaryDetach():void A[MD:():void (c)] (LINE:1947)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:1950)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.dispatchFinishTemporaryDetach((r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0016 \-\> B:40:0x0028, CROSS_EDGE: B:37:0x001d \-\> B:40:0x0028, CROSS_EDGE: B:41:0x0016 \-\> B:36:0x001c, CROSS_EDGE: B:39:0x0025 \-\> B:40:0x0028, CROSS_EDGE: B:29:0x000c \-\> B:31:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0024: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0028: r3 'view' Landroid\/view\/View;\lTryCatch #0 \{Exception \-\> 0x001c, blocks: (B:34:0x0016), top: B:41:0x0016 \}\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_43;
Node_43 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_41;
Node_41 -> Node_34;
Node_41 -> Node_36;
Node_34 -> Node_42;
Node_34 -> Node_45;
Node_42 -> Node_36;
Node_45 -> Node_24;
Node_36 -> Node_37;
Node_37 -> Node_44;
Node_44 -> Node_24;
Node_39 -> Node_40;
Node_40 -> Node_24;
}

