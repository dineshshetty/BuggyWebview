digraph "CFG forandroidx.core.view.ViewCompat.isLaidOut(Landroid\/view\/View;)Z" {
subgraph cluster_Region_996086793 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_94949744 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_698170390 {
label = "IF [B:17:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 19) goto L3\l}"];
subgraph cluster_Region_771134133 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|return androidx.core.view.ViewCompat.Api19Impl.isLaidOut(r2)\l}"];
}
}
subgraph cluster_Region_1858741342 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000f|RETURN\l|return r2.getWidth() \> 0 && r2.getHeight() \> 0\l}"];
}
}
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000b}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0011}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0015|REMOVE\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0017|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0019|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.view.ViewCompat.isLaidOut((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001a \-\> B:15:?, CROSS_EDGE: B:25:0x0019 \-\> B:26:0x001a, CROSS_EDGE: B:21:0x000f \-\> B:25:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_15;
Node_21 -> Node_22;
Node_21 -> Node_25;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_15;
}

