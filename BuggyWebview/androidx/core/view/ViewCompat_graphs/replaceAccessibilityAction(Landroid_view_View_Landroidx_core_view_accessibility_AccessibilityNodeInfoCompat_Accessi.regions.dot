digraph "CFG forandroidx.core.view.ViewCompat.replaceAccessibilityAction(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat$AccessibilityActionCompat;Ljava\/lang\/CharSequence;Landroidx\/core\/view\/accessibility\/AccessibilityViewCommand;)V" {
subgraph cluster_Region_971027585 {
label = "R(1:(1:3)(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2032034361 {
label = "IF [B:10:0x0000, B:11:0x0002] THEN: R(1:3) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|if (r4 == null) goto L2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|ADDED_TO_REGION\l|if (r3 == null) goto L3\l}"];
subgraph cluster_Region_381891951 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|removeAccessibilityAction(r1, r2.getId())\l}"];
}
subgraph cluster_Region_1557601675 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000c|addAccessibilityAction(r1, r2.createReplacementAction(r3, r4))\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0013|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.replaceAccessibilityAction((r1v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'replacedAction' androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat A[D('replacedAction' androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'label' java.lang.CharSequence A[D('label' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'command' androidx.core.view.accessibility.AccessibilityViewCommand A[D('command' androidx.core.view.accessibility.AccessibilityViewCommand), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000c \-\> B:14:0x0013, CROSS_EDGE: B:10:0x0000 \-\> B:13:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_8 -> Node_10;
Node_15 -> Node_9;
Node_14 -> Node_9;
}

