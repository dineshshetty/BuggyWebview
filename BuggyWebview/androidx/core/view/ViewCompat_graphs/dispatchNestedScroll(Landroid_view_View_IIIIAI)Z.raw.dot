digraph "CFG forandroidx.core.view.ViewCompat.dispatchNestedScroll(Landroid\/view\/View;IIII[I)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:3224)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = \l  (r7 I:android.view.View A[D('view' android.view.View)])\l  (r8 I:int A[D('dxConsumed' int)])\l  (r9 I:int A[D('dyConsumed' int)])\l  (r10 I:int A[D('dxUnconsumed' int)])\l  (r11 I:int A[D('dyUnconsumed' int)])\l  (r12 I:int[] A[D('offsetInWindow' int[])])\l type: STATIC call: androidx.core.view.ViewCompat.Api21Impl.dispatchNestedScroll(android.view.View, int, int, int, int, int[]):boolean A[MD:(android.view.View, int, int, int, int, int[]):boolean (m)] (LINE:3225)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) androidx.core.view.NestedScrollingChild  (LINE:3228)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001c \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:3229)\l0x0010: CHECK_CAST (r1 I:androidx.core.view.NestedScrollingChild) = (androidx.core.view.NestedScrollingChild) (r1 I:??[OBJECT, ARRAY]) \l0x0012: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dxConsumed' int)]) \l0x0013: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dyConsumed' int)]) \l0x0014: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dxUnconsumed' int)]) \l0x0015: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dyUnconsumed' int)]) \l0x0016: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('offsetInWindow' int[])]) \l0x0017: INVOKE  (r0 I:boolean) = (r1 I:androidx.core.view.NestedScrollingChild), (r2 I:int), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int[]) type: INTERFACE call: androidx.core.view.NestedScrollingChild.dispatchNestedScroll(int, int, int, int, int[]):boolean A[MD:(int, int, int, int, int[]):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|RETURN\l|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3232)\l0x001d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.core.view.ViewCompat.dispatchNestedScroll((r7 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('dxConsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('dyConsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('dxUnconsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('dyUnconsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int[] A[D('offsetInWindow' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001b \-\> B:13:?, CROSS_EDGE: B:23:0x001d \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r7 'view' Landroid\/view\/View;\l  \-1 \-0x001d: r8 'dxConsumed' I\l  \-1 \-0x001d: r9 'dyConsumed' I\l  \-1 \-0x001d: r10 'dxUnconsumed' I\l  \-1 \-0x001d: r11 'dyUnconsumed' I\l  \-1 \-0x001d: r12 'offsetInWindow' [I\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_13;
}

