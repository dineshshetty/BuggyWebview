digraph "CFG forandroidx.core.view.ViewCompat.setPointerIcon(Landroid\/view\/View;Landroidx\/core\/view\/PointerIconCompat;)V" {
subgraph cluster_Region_2069894616 {
label = "R(1:(1:(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_607565968 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_271019408 {
label = "IF [B:13:0x0004] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 24) goto L3\l}"];
subgraph cluster_Region_2128561803 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000e|PHI: r0 \l  PHI: (r0v2 java.lang.Object A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.view.ViewCompat.Api24Impl.setPointerIcon(r2, (android.view.PointerIcon) (r3 != null ? r3.getPointerIcon() : null))\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0008}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0013|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000d}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setPointerIcon((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'pointerIcon' androidx.core.view.PointerIconCompat A[D('pointerIcon' androidx.core.view.PointerIconCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000d \-\> B:17:0x000e, CROSS_EDGE: B:13:0x0004 \-\> B:18:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_11;
Node_16 -> Node_17;
Node_19 -> Node_11;
}

