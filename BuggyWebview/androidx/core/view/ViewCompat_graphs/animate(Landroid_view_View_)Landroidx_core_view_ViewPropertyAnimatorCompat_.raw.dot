digraph "CFG forandroidx.core.view.ViewCompat.animate(Landroid\/view\/View;)Landroidx\/core\/view\/ViewPropertyAnimatorCompat;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: SGET  (r0 I:java.util.WeakHashMap\<android.view.View, androidx.core.view.ViewPropertyAnimatorCompat\>) =  androidx.core.view.ViewCompat.sViewPropertyAnimatorMap java.util.WeakHashMap  (LINE:2082)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.util.WeakHashMap) =  java.util.WeakHashMap  (LINE:2083)\l0x0006: INVOKE  (r0 I:java.util.WeakHashMap) type: DIRECT call: java.util.WeakHashMap.\<init\>():void A[MD:():void (c)]\l0x0009: SPUT  (r0 I:java.util.WeakHashMap\<android.view.View, androidx.core.view.ViewPropertyAnimatorCompat\>) androidx.core.view.ViewCompat.sViewPropertyAnimatorMap java.util.WeakHashMap \l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: SGET  (r0 I:java.util.WeakHashMap\<android.view.View, androidx.core.view.ViewPropertyAnimatorCompat\>) =  androidx.core.view.ViewCompat.sViewPropertyAnimatorMap java.util.WeakHashMap  (LINE:2085)\l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.WeakHashMap), (r2 I:java.lang.Object A[D('view' android.view.View)]) type: VIRTUAL call: java.util.WeakHashMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0011: CHECK_CAST (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (androidx.core.view.ViewPropertyAnimatorCompat) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('vpa' androidx.core.view.ViewPropertyAnimatorCompat)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:2086)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: NEW_INSTANCE  (r1 I:androidx.core.view.ViewPropertyAnimatorCompat) =  androidx.core.view.ViewPropertyAnimatorCompat  (LINE:2087)\l0x0017: INVOKE  (r1 I:androidx.core.view.ViewPropertyAnimatorCompat), (r2 I:android.view.View A[D('view' android.view.View)]) type: DIRECT call: androidx.core.view.ViewPropertyAnimatorCompat.\<init\>(android.view.View):void A[MD:(android.view.View):void (m)]\l0x001a: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('vpa' androidx.core.view.ViewPropertyAnimatorCompat)]) = (r1 I:??[OBJECT, ARRAY]) \l0x001b: SGET  (r1 I:java.util.WeakHashMap\<android.view.View, androidx.core.view.ViewPropertyAnimatorCompat\>) =  androidx.core.view.ViewCompat.sViewPropertyAnimatorMap java.util.WeakHashMap  (LINE:2088)\l0x001d: INVOKE  \l  (r1 I:java.util.WeakHashMap)\l  (r2 I:java.lang.Object A[D('view' android.view.View)])\l  (r0 I:java.lang.Object A[D('vpa' androidx.core.view.ViewPropertyAnimatorCompat)])\l type: VIRTUAL call: java.util.WeakHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat A[D('vpa' androidx.core.view.ViewPropertyAnimatorCompat)])  (LINE:2090)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat A[D('vpa' androidx.core.view.ViewPropertyAnimatorCompat)]) A[SYNTHETIC] (LINE:2090)\l}"];
MethodNode[shape=record,label="{public static androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewCompat.animate((r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0013 \-\> B:18:0x0020, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0020: r0 'vpa' Landroidx\/core\/view\/ViewPropertyAnimatorCompat;\l  \-1 \-0x0020: r2 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

