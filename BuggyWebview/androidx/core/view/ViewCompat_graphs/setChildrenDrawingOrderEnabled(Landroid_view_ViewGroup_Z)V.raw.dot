digraph "CFG forandroidx.core.view.ViewCompat.setChildrenDrawingOrderEnabled(Landroid\/view\/ViewGroup;Z)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Unable to invoke childrenDrawingOrderEnabled\"  (LINE:2472)\l0x0002: SGET  (r1 I:java.lang.reflect.Method) =  androidx.core.view.ViewCompat.sChildrenDrawingOrderMethod java.lang.reflect.Method \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0006: CONST_STR  (r4 I:java.lang.String) =  \"ViewCompat\" \l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0026 \l}"];
Node_45 [shape=record,label="{45\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{NoSuchMethodException \-\> 0x001b, blocks: (B:30:0x000a), top: B:45:0x000a \}\lCatch: NoSuchMethodException \-\> 0x001b\l|0x000a: CONST_CLASS  (r1 I:java.lang.Class\<android.view.ViewGroup\>) =  android.view.ViewGroup.class A[TRY_ENTER] (LINE:2474)\l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"setChildrenDrawingOrderEnabled\" \l0x000e: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x001b]\l0x0010: SGET  (r7 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch: NoSuchMethodException \-\> 0x001b]\l0x0012: APUT  (r6 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x001b]\l0x0014: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r5 I:java.lang.String), (r6 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001b, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)] (LINE:2475)\l0x0018: SPUT  (r1 I:java.lang.reflect.Method) androidx.core.view.ViewCompat.sChildrenDrawingOrderMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x001b, TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|0x0021: SGET  (r1 I:java.lang.reflect.Method A[D('e' java.lang.NoSuchMethodException)]) =  androidx.core.view.ViewCompat.sChildrenDrawingOrderMethod java.lang.reflect.Method  (LINE:2479)\l0x0023: INVOKE  (r1 I:java.lang.reflect.Method), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[MD:(boolean):void (s)]\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|ExcHandler: NoSuchMethodException \-\> 0x001b\l|0x001b: MOVE_EXCEPTION  (r1 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x001b] (LINE:2476)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: CONST_STR  (r5 I:java.lang.String) =  \"Unable to find childrenDrawingOrderEnabled\"  (LINE:2477)\l0x001e: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.String), (r1 I:java.lang.Throwable A[D('e' java.lang.NoSuchMethodException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x003e, IllegalArgumentException \-\> 0x0039, InvocationTargetException \-\> 0x0034, blocks: (B:35:0x0026), top: B:47:0x0026 \}\lCatch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e\l|0x0026: SGET  (r1 I:java.lang.reflect.Method) =  androidx.core.view.ViewCompat.sChildrenDrawingOrderMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e, TRY_ENTER] (LINE:2482)\l0x0028: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e]\l0x002a: INVOKE  (r5 I:java.lang.Boolean) = (r9 I:boolean A[D('enabled' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e, MD:(boolean):java.lang.Boolean (c)]\l0x002e: APUT  (r3 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e]\l0x0030: INVOKE  \l  (r1 I:java.lang.reflect.Method)\l  (r8 I:java.lang.Object A[D('viewGroup' android.view.ViewGroup)])\l  (r3 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0034, IllegalArgumentException \-\> 0x0039, IllegalAccessException \-\> 0x003e, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:2490)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x003e|ExcHandler: IllegalAccessException \-\> 0x003e\l|0x003e: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x003e] (LINE:2483)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003f|0x003f: INVOKE  (r4 I:java.lang.String), (r0 I:java.lang.String), (r1 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:2484)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:2490)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|ExcHandler: IllegalArgumentException \-\> 0x0039\l|0x0039: MOVE_EXCEPTION  (r1 I:java.lang.IllegalArgumentException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalArgumentException \-\> 0x0039] (LINE:2485)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003a|0x003a: INVOKE  \l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('e' java.lang.IllegalArgumentException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:2486)\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:2490)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|ExcHandler: InvocationTargetException \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r1 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0034] (LINE:2487)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0035|0x0035: INVOKE  \l  (r4 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:2488)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0043|RETURN\lORIG_RETURN\l|0x0043: RETURN    (LINE:2490)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setChildrenDrawingOrderEnabled((r8 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('enabled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x0021: r1 'e' Ljava\/lang\/NoSuchMethodException;\l  0x0035\-0x0039: r1 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x003a\-0x003d: r1 'e' Ljava\/lang\/IllegalArgumentException;\l  0x003f\-0x0042: r1 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x0043: r8 'viewGroup' Landroid\/view\/ViewGroup;\l  \-1 \-0x0043: r9 'enabled' Z\lTryCatch #1 \{NoSuchMethodException \-\> 0x001b, blocks: (B:30:0x000a), top: B:45:0x000a \}, TryCatch #3 \{IllegalAccessException \-\> 0x003e, IllegalArgumentException \-\> 0x0039, InvocationTargetException \-\> 0x0034, blocks: (B:35:0x0026), top: B:47:0x0026 \}\lCROSS_EDGE: B:42:0x003f \-\> B:44:0x0043, CROSS_EDGE: B:40:0x003a \-\> B:44:0x0043, CROSS_EDGE: B:38:0x0035 \-\> B:44:0x0043, CROSS_EDGE: B:47:0x0026 \-\> B:41:0x003e, CROSS_EDGE: B:47:0x0026 \-\> B:39:0x0039, CROSS_EDGE: B:47:0x0026 \-\> B:37:0x0034, CROSS_EDGE: B:33:0x001c \-\> B:34:0x0021, CROSS_EDGE: B:45:0x000a \-\> B:32:0x001b, CROSS_EDGE: B:29:0x0008 \-\> B:47:0x0026\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_45[style=dashed];
Node_29 -> Node_47;
Node_45 -> Node_30;
Node_45 -> Node_32;
Node_30 -> Node_34;
Node_30 -> Node_46;
Node_34 -> Node_47;
Node_46 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_47 -> Node_35;
Node_47 -> Node_41;
Node_47 -> Node_39;
Node_47 -> Node_37;
Node_35 -> Node_48;
Node_35 -> Node_51;
Node_48 -> Node_41;
Node_48 -> Node_39;
Node_48 -> Node_37;
Node_51 -> Node_27;
Node_41 -> Node_42;
Node_42 -> Node_49;
Node_49 -> Node_27;
Node_39 -> Node_40;
Node_40 -> Node_50;
Node_50 -> Node_27;
Node_37 -> Node_38;
Node_38 -> Node_44;
Node_44 -> Node_27;
}

