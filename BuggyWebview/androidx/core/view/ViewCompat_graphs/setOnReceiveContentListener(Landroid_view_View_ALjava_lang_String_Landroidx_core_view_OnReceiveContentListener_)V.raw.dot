digraph "CFG forandroidx.core.view.ViewCompat.setOnReceiveContentListener(Landroid\/view\/View;[Ljava\/lang\/String;Landroidx\/core\/view\/OnReceiveContentListener;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:2759)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (31 ??[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:36:0x000a \l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|0x0006: INVOKE  \l  (r5 I:android.view.View A[D('view' android.view.View)])\l  (r6 I:java.lang.String[] A[D('mimeTypes' java.lang.String[])])\l  (r7 I:androidx.core.view.OnReceiveContentListener A[D('listener' androidx.core.view.OnReceiveContentListener)])\l type: STATIC call: androidx.core.view.ViewCompat.Api31Impl.setOnReceiveContentListener(android.view.View, java.lang.String[], androidx.core.view.OnReceiveContentListener):void A[MD:(android.view.View, java.lang.String[], androidx.core.view.OnReceiveContentListener):void (m)] (LINE:2760)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:2761)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|0x000a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeTypes' java.lang.String[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0012  (LINE:2763)\l}"];
Node_37 [shape=record,label="{37\:\ 0x000c|0x000c: ARRAY_LENGTH  (r0 I:int) = (r6 I:??[] A[D('mimeTypes' java.lang.String[])]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0010 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0010|0x0010: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('mimeTypes' java.lang.String[])]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('mimeTypes' java.lang.String[])]) = (r0 I:??[OBJECT, ARRAY]) \l0x0014: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2764)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0015|0x0015: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('listener' androidx.core.view.OnReceiveContentListener)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0021 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0017|0x0017: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeTypes' java.lang.String[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x001b  (LINE:2765)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0019|0x0019: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x001c|0x001c: CONST_STR  (r2 I:java.lang.String) =  \"When the listener is set, MIME types must also be set\" \l0x001e: INVOKE  (r1 I:boolean), (r2 I:java.lang.Object) type: STATIC call: androidx.core.util.Preconditions.checkArgument(boolean, java.lang.Object):void A[MD:(boolean, java.lang.Object):void (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x001b|0x001b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0021|0x0021: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeTypes' java.lang.String[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0050  (LINE:2768)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0023|0x0023: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2769)\l0x0024: ARRAY_LENGTH  (r2 I:int) = (r6 I:??[] A[D('mimeTypes' java.lang.String[])])  (LINE:2770)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0025|LOOP_START\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\l|0x0025: IF  (r0 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:58:0x0036 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0027|0x0027: AGET  (r3 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY][] A[D('mimeTypes' java.lang.String[])]), (r0 I:??[int, short, byte, char]) \l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"*\"  (LINE:2771)\l0x002b: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String A[D('mimeType' java.lang.String)]), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.String.startsWith(java.lang.String):boolean A[MD:(java.lang.String):boolean (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|0x002f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0033 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0033|LOOP_END\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\l|0x0033: ARITH  (r0 I:int) = (r0 I:int) + (1 int)  (LINE:2770)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0031|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0031|0x0031: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('hasLeadingWildcard' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2772)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0036|0x0036: ARITH  (r0 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('hasLeadingWildcard' boolean)]) ^ (1 ??[boolean, int, float, short, byte, char])  (LINE:2776)\l0x0038: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003d: CONST_STR  (r3 I:java.lang.String) =  \"A MIME type set here must not start with *: \" \l0x003f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.Object[] A[D('mimeTypes' java.lang.String[])]) type: STATIC call: java.util.Arrays.toString(java.lang.Object[]):java.lang.String A[MD:(java.lang.Object[]):java.lang.String (c)] (LINE:2777)\l0x0046: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0049: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x004d: INVOKE  (r0 I:boolean), (r2 I:java.lang.Object) type: STATIC call: androidx.core.util.Preconditions.checkArgument(boolean, java.lang.Object):void A[MD:(boolean, java.lang.Object):void (m)] (LINE:2776)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0036|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|0x0050: SGET  (r0 I:int) =  androidx.core.R.id.tag_on_receive_content_mime_types int  (LINE:2779)\l0x0052: INVOKE  \l  (r5 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:int)\l  (r6 I:java.lang.Object A[D('mimeTypes' java.lang.String[])])\l type: VIRTUAL call: android.view.View.setTag(int, java.lang.Object):void A[MD:(int, java.lang.Object):void (c)]\l0x0055: SGET  (r0 I:int) =  androidx.core.R.id.tag_on_receive_content_listener int  (LINE:2780)\l0x0057: INVOKE  \l  (r5 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:int)\l  (r7 I:java.lang.Object A[D('listener' androidx.core.view.OnReceiveContentListener)])\l type: VIRTUAL call: android.view.View.setTag(int, java.lang.Object):void A[MD:(int, java.lang.Object):void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x005a|RETURN\l|0x005a: RETURN    (LINE:2781)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setOnReceiveContentListener((r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[D('mimeTypes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.core.view.OnReceiveContentListener A[D('listener' androidx.core.view.OnReceiveContentListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x005a \-\> B:31:?, BACK_EDGE: B:54:0x0033 \-\> B:50:0x0025, CROSS_EDGE: B:50:0x0025 \-\> B:55:0x0036, CROSS_EDGE: B:48:0x0021 \-\> B:56:0x0050, CROSS_EDGE: B:46:0x001b \-\> B:47:0x001c, CROSS_EDGE: B:43:0x0015 \-\> B:48:0x0021, CROSS_EDGE: B:41:0x0012 \-\> B:42:0x0013, CROSS_EDGE: B:36:0x000a \-\> B:41:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0033: r3 'mimeType' Ljava\/lang\/String;\l  0x0024\-0x0050: r1 'hasLeadingWildcard' Z\l  \-1 \-0x005a: r5 'view' Landroid\/view\/View;\l  \-1 \-0x005a: r6 'mimeTypes' [Ljava\/lang\/String;\l  \-1 \-0x005a: r7 'listener' Landroidx\/core\/view\/OnReceiveContentListener;\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_31;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_46 -> Node_47;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_56;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_58;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_59[style=dashed];
Node_54 -> Node_50;
Node_59 -> Node_53;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_58 -> Node_55;
Node_56 -> Node_57;
Node_57 -> Node_31;
Node_41 -> Node_42;
}

