digraph "CFG forandroidx.core.view.ViewCompat.setViewImportanceForAccessibilityIfNeeded(Landroid\/view\/View;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0004|if (getImportantForAccessibility(r3) != 0) goto L4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|setImportantForAccessibility(r3, 1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|android.view.ViewParent r0 = r3.getParent()\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|LOOP_START\lLOOP:0: B:22:0x000e\-\>B:27:0x0021\lPHI: r0 \l  PHI: (r0v2 'parent' android.view.ViewParent) = (r0v1 'parent' android.view.ViewParent), (r0v3 'parent' android.view.ViewParent) binds: [B:21:0x000a, B:27:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|if ((r0 instanceof android.view.View) == false) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012}"];
Node_25 [shape=record,label="{25\:\ 0x001a|if (getImportantForAccessibility((android.view.View) r0) != 4) goto L9\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|LOOP_END\lLOOP:0: B:22:0x000e\-\>B:27:0x0021\l|android.view.ViewParent r0 = r0.getParent()\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|setImportantForAccessibility(r3, 2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void androidx.core.view.ViewCompat.setViewImportanceForAccessibilityIfNeeded((r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0021 \-\> B:22:0x000e, CROSS_EDGE: B:23:0x0010 \-\> B:28:0x0026, CROSS_EDGE: B:19:0x0004 \-\> B:21:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_30[style=dashed];
Node_27 -> Node_22;
Node_30 -> Node_26;
Node_26 -> Node_28;
Node_28 -> Node_17;
Node_29 -> Node_31;
Node_31 -> Node_17;
}

