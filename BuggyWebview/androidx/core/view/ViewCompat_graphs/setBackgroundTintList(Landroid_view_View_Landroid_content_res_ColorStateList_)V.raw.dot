digraph "CFG forandroidx.core.view.ViewCompat.setBackgroundTintList(Landroid\/view\/View;Landroid\/content\/res\/ColorStateList;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:3028)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:49:0x0036 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|0x0006: INVOKE  \l  (r3 I:android.view.View A[D('view' android.view.View)])\l  (r4 I:android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList)])\l type: STATIC call: androidx.core.view.ViewCompat.Api21Impl.setBackgroundTintList(android.view.View, android.content.res.ColorStateList):void A[MD:(android.view.View, android.content.res.ColorStateList):void (m)] (LINE:3029)\l0x0009: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:3031)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:? \l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|0x000d: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:3034)\l0x0011: INVOKE  (r1 I:android.content.res.ColorStateList) = (r3 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.Api21Impl.getBackgroundTintList(android.view.View):android.content.res.ColorStateList A[MD:(android.view.View):android.content.res.ColorStateList (m)] (LINE:3035)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0020 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|0x0017: INVOKE  (r1 I:android.graphics.PorterDuff$Mode) = (r3 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.Api21Impl.getBackgroundTintMode(android.view.View):android.graphics.PorterDuff$Mode A[MD:(android.view.View):android.graphics.PorterDuff$Mode (m)] (LINE:3036)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x001e \l}"];
Node_40 [shape=record,label="{40\:\ 0x001e|0x001e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('background' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:?  (LINE:3037)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasTint' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:? \l}"];
Node_44 [shape=record,label="{44\:\ 0x0025|0x0025: INVOKE  (r2 I:boolean) = (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.isStateful():boolean A[MD:():boolean (c)] (LINE:3038)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0029|0x0029: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0032 \l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|0x002b: INVOKE  (r2 I:int[]) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getDrawableState():int[] A[MD:():int[] (c)] (LINE:3039)\l0x002f: INVOKE  (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)]), (r2 I:int[]) type: VIRTUAL call: android.graphics.drawable.Drawable.setState(int[]):boolean A[MD:(int[]):boolean (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0032|0x0032: INVOKE  \l  (r3 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l type: STATIC call: androidx.core.view.ViewCompat.Api16Impl.setBackground(android.view.View, android.graphics.drawable.Drawable):void A[MD:(android.view.View, android.graphics.drawable.Drawable):void (m)] (LINE:3041)\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:3047)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:3047)\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:3047)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0020|0x0020: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:3047)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0036|0x0036: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) androidx.core.view.TintableBackgroundView  (LINE:3044)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0038|0x0038: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:? \l}"];
Node_51 [shape=record,label="{51\:\ 0x003a|0x003a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:3045)\l0x003b: CHECK_CAST (r0 I:androidx.core.view.TintableBackgroundView) = (androidx.core.view.TintableBackgroundView) (r0 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  \l  (r0 I:androidx.core.view.TintableBackgroundView)\l  (r4 I:android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList)])\l type: INTERFACE call: androidx.core.view.TintableBackgroundView.setSupportBackgroundTintList(android.content.res.ColorStateList):void A[MD:(android.content.res.ColorStateList):void (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0040|RETURN\lORIG_RETURN\l|0x0040: RETURN    (LINE:3047)\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:3047)\l}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setBackgroundTintList((r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:45:0x0029 \-\> B:47:0x0032, CROSS_EDGE: B:43:0x0023 \-\> B:52:0x0040, CROSS_EDGE: B:42:0x0021 \-\> B:52:0x0040, CROSS_EDGE: B:41:0x0020 \-\> B:42:0x0021, CROSS_EDGE: B:36:0x0015 \-\> B:41:0x0020, CROSS_EDGE: B:34:0x000b \-\> B:52:0x0040, CROSS_EDGE: B:51:0x003a \-\> B:52:0x0040, CROSS_EDGE: B:50:0x0038 \-\> B:52:0x0040\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0035: r0 'background' Landroid\/graphics\/drawable\/Drawable;\l  0x0021\-0x0035: r1 'hasTint' Z\l  \-1 \-0x0040: r3 'view' Landroid\/view\/View;\l  \-1 \-0x0040: r4 'tintList' Landroid\/content\/res\/ColorStateList;\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_49;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_53;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_56;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_57;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_55;
Node_55 -> Node_30;
Node_57 -> Node_30;
Node_56 -> Node_30;
Node_41 -> Node_42;
Node_53 -> Node_30;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_54;
Node_51 -> Node_52;
Node_52 -> Node_30;
Node_54 -> Node_30;
}

