digraph "CFG forandroidx.core.view.ViewCompat.setOnReceiveContentListener(Landroid\/view\/View;[Ljava\/lang\/String;Landroidx\/core\/view\/OnReceiveContentListener;)V" {
subgraph cluster_Region_627556982 {
label = "R(1:(2:(2:3|4)|(4:10|(1:14)|(3:17|(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))|24)|26)))";
node [shape=record,color=blue];
subgraph cluster_Region_1725285916 {
label = "R(2:(2:3|4)|(4:10|(1:14)|(3:17|(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))|24)|26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1430906318 {
label = "IF [B:33:0x0004] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \>= 31) goto L3\l}"];
subgraph cluster_Region_2100656638 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0006|androidx.core.view.ViewCompat.Api31Impl.setOnReceiveContentListener(r5, r6, r7)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_701470419 {
label = "R(4:10|(1:14)|(3:17|(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))|24)|26)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0013|PHI: r0 \l  PHI: (r0v2 java.lang.String[] A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String[] r6 = (r6 == null \|\| r6.length == 0) ? null : r6\lint r0 = 0\l}"];
subgraph cluster_IfRegion_1725591644 {
label = "IF [B:43:0x0015] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0015|if (r7 != null) goto L12\l}"];
subgraph cluster_Region_365636677 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x001c|PHI: r1 \l  PHI: (r1v5 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.util.Preconditions.checkArgument(r6 != null, \"When the listener is set, MIME types must also be set\")\l}"];
}
}
subgraph cluster_IfRegion_1484369596 {
label = "IF [B:48:0x0021] THEN: R(3:17|(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))|24) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0021|if (r6 != null) goto L17\l}"];
subgraph cluster_Region_341236539 {
label = "R(3:17|(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))|24)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0023|boolean r1 = false\lint int r2 = r6.length\l}"];
subgraph cluster_LoopRegion_779595709 {
label = "LOOP:0: (1:(2:(1:25)|(2:19|(1:21)(2:23|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_881477672 {
label = "R(1:(2:(1:25)|(2:19|(1:21)(2:23|1))))";
node [shape=record,color=blue];
subgraph cluster_Region_1655061966 {
label = "R(2:(1:25)|(2:19|(1:21)(2:23|1)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_411453507 {
label = "IF [B:50:0x0025] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0025|LOOP_START\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\lPHI: r0 \l  PHI: (r0v6 int) = (r0v3 int), (r0v8 int) binds: [B:49:0x0023, B:54:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \>= r2) goto L25\l}"];
subgraph cluster_Region_1472981334 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0036|SYNTHETIC\lEDGE_INSN: B:58:0x0036\-\>B:55:0x0036 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1106947692 {
label = "R(2:19|(1:21)(2:23|1))";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0027|java.lang.String r3 = r6[r0]\l}"];
subgraph cluster_IfRegion_775329692 {
label = "IF [B:52:0x002f] THEN: R(1:21) ELSE: R(2:23|1)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x002f|if (r3.startsWith(\"*\") == false) goto L21\l}"];
subgraph cluster_Region_220142354 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0033|LOOP_END\lLOOP:0: B:50:0x0025\-\>B:54:0x0033\l|r0++\l}"];
}
subgraph cluster_Region_984336235 {
label = "R(2:23|1)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0031|EDGE_INSN: B:53:0x0031\-\>B:55:0x0036 ?: BREAK  \l|r1 = true\l}"];
Node_InsnContainer_1154661973 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
Node_55 [shape=record,label="{55\:\ 0x0036|EDGE_INSN: B:58:0x0036\-\>B:55:0x0036 ?: BREAK  , EDGE_INSN: B:53:0x0031\-\>B:55:0x0036 ?: BREAK  \lPHI: r1 \l  PHI: (r1v2 'hasLeadingWildcard' boolean) = (r1v1 'hasLeadingWildcard' boolean), (r1v3 'hasLeadingWildcard' boolean) binds: [B:58:0x0036, B:53:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|androidx.core.util.Preconditions.checkArgument(!r1, \"A MIME type set here must not start with *: \" + java.util.Arrays.toString(r6))\l}"];
}
}
Node_56 [shape=record,label="{56\:\ 0x0050|r5.setTag(androidx.core.C0180R.C0183id.tag_on_receive_content_mime_types, r6)\lr5.setTag(androidx.core.C0180R.C0183id.tag_on_receive_content_listener, r7)\l}"];
}
}
}
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x000a}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x000c}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x000d|REMOVE\lADDED_TO_REGION\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0010}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0017}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0019}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x001b}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0031|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x005a}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0012}"];
MethodNode[shape=record,label="{public static void androidx.core.view.ViewCompat.setOnReceiveContentListener((r5v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'mimeTypes' java.lang.String[] A[D('mimeTypes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'listener' androidx.core.view.OnReceiveContentListener A[D('listener' androidx.core.view.OnReceiveContentListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x005a \-\> B:31:?, BACK_EDGE: B:54:0x0033 \-\> B:50:0x0025, CROSS_EDGE: B:50:0x0025 \-\> B:55:0x0036, CROSS_EDGE: B:48:0x0021 \-\> B:56:0x0050, CROSS_EDGE: B:46:0x001b \-\> B:47:0x001c, CROSS_EDGE: B:43:0x0015 \-\> B:48:0x0021, CROSS_EDGE: B:41:0x0012 \-\> B:42:0x0013, CROSS_EDGE: B:36:0x000a \-\> B:41:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_33 -> Node_34;
Node_33 -> Node_36[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_31;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_48[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_48 -> Node_56[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_58;
Node_58 -> Node_55;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_59[style=dashed];
Node_54 -> Node_50;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_36 -> Node_37;
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_41;
Node_40 -> Node_42;
Node_44 -> Node_45;
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_59 -> Node_53;
Node_57 -> Node_31;
Node_41 -> Node_42;
}

