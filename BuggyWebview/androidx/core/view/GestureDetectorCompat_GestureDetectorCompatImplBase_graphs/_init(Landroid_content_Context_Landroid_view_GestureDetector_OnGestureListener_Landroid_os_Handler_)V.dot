digraph "CFG forandroidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.\<init\>(Landroid\/content\/Context;Landroid\/view\/GestureDetector$OnGestureListener;Landroid\/os\/Handler;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0003|if (r4 == null) goto L10\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|r1.mHandler = new androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.GestureHandler(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|r1.mListener = r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|if ((r3 instanceof android.view.GestureDetector.OnDoubleTapListener) == false) goto L7\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|setOnDoubleTapListener((android.view.GestureDetector.OnDoubleTapListener) r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|init(r2)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|r1.mHandler = new androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.GestureHandler()\l}"];
MethodNode[shape=record,label="{void androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.\<init\>((r1v0 'this' androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'listener' android.view.GestureDetector$OnGestureListener A[D('listener' android.view.GestureDetector$OnGestureListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'handler' android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0018 \-\> B:20:0x0020, CROSS_EDGE: B:16:0x000d \-\> B:17:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

