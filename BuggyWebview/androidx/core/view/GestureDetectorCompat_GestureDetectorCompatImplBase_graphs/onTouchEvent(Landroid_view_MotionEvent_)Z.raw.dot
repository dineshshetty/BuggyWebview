digraph "CFG forandroidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_123 [shape=record,label="{123\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_125 [shape=record,label="{125\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r22 I:??[OBJECT, ARRAY])  (LINE:232)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('ev' android.view.MotionEvent)]) \l0x0004: INVOKE  (r2 I:int) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getAction():int A[MD:():int (c)]\l0x0008: IGET  (r3 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:234)\l}"];
Node_126 [shape=record,label="{126\:\ 0x000a|0x000a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:128:0x0012 \l}"];
Node_127 [shape=record,label="{127\:\ 0x000c|0x000c: INVOKE  (r3 I:android.view.VelocityTracker) =  type: STATIC call: android.view.VelocityTracker.obtain():android.view.VelocityTracker A[MD:():android.view.VelocityTracker (c)] (LINE:235)\l0x0010: IPUT  (r3 I:android.view.VelocityTracker), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker \l}"];
Node_128 [shape=record,label="{128\:\ 0x0012|0x0012: IGET  (r3 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:237)\l0x0014: INVOKE  (r3 I:android.view.VelocityTracker), (r1 I:android.view.MotionEvent) type: VIRTUAL call: android.view.VelocityTracker.addMovement(android.view.MotionEvent):void A[MD:(android.view.MotionEvent):void (c)]\l0x0017: ARITH  (r3 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('action' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:239)\l0x0019: CONST  (r4 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char]) \l}"];
Node_129 [shape=record,label="{129\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:131:0x001e \l}"];
Node_130 [shape=record,label="{130\:\ 0x001c|0x001c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_132 [shape=record,label="{132\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pointerUp' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:134:0x0026  (LINE:241)\l}"];
Node_133 [shape=record,label="{133\:\ 0x0021|0x0021: INVOKE  (r4 I:int) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getActionIndex():int A[MD:():int (c)]\l}"];
Node_135 [shape=record,label="{135\:\ 0x0027|0x0027: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:244)\l0x0028: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r9 I:int) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getPointerCount():int A[MD:():int (c)] (LINE:245)\l0x002d: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:246)\l}"];
Node_136 [shape=record,label="{136\:\ 0x002e|LOOP_START\lLOOP:0: B:136:0x002e\-\>B:140:0x003d\l|0x002e: IF  (r10 I:??[int, byte, short, char] A[D('i' int)]) \>= (r9 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:227:0x0040 \l}"];
Node_137 [shape=record,label="{137\:\ 0x0030|0x0030: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('skipIndex' int)]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)])  \-\> B:139:0x0033  (LINE:247)\l}"];
Node_139 [shape=record,label="{139\:\ 0x0033|0x0033: INVOKE  (r11 I:float) = (r1 I:android.view.MotionEvent), (r10 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getX(int):float A[MD:(int):float (c)] (LINE:248)\l0x0037: ARITH  (r7 I:float) = (r7 I:float A[D('sumX' float)]) + (r11 I:float) \l0x0038: INVOKE  (r11 I:float) = (r1 I:android.view.MotionEvent), (r10 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getY(int):float A[MD:(int):float (c)] (LINE:249)\l0x003c: ARITH  (r8 I:float) = (r8 I:float A[D('sumY' float)]) + (r11 I:float) \l}"];
Node_228 [shape=record,label="{228\:\ 0x003d|SYNTHETIC\l}"];
Node_140 [shape=record,label="{140\:\ 0x003d|LOOP_END\lLOOP:0: B:136:0x002e\-\>B:140:0x003d\l|0x003d: ARITH  (r10 I:int) = (r10 I:int A[D('i' int)]) + (1 int)  (LINE:246)\l}"];
Node_229 [shape=record,label="{229\:\ 0x003d|SYNTHETIC\l}"];
Node_227 [shape=record,label="{227\:\ 0x0040|SYNTHETIC\l}"];
Node_141 [shape=record,label="{141\:\ 0x0040|0x0040: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pointerUp' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:143:0x0045  (LINE:251)\l}"];
Node_142 [shape=record,label="{142\:\ 0x0042|0x0042: ARITH  (r10 I:int) = (r9 I:int A[D('count' int)]) + (\-1 int) \l}"];
Node_144 [shape=record,label="{144\:\ 0x0046|0x0046: CAST (r11 I:float) = (float) (r10 I:int A[D('div' int)])  (LINE:252)\l0x0047: ARITH  (r11 I:float) = (r7 I:float A[D('sumX' float)]) \/ (r11 I:float) \l0x0049: CAST (r12 I:float) = (float) (r10 I:int A[D('div' int)])  (LINE:253)\l0x004a: ARITH  (r12 I:float) = (r8 I:float A[D('sumY' float)]) \/ (r12 I:float) \l0x004c: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:255)\l0x004d: ARITH  (r14 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('action' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:257)\l0x004f: CONST  (r15 I:??[int, float, short, byte, char]) = (1000(0x3e8, float:1.401E\-42) ??[int, float, short, byte, char]) \l}"];
Node_145 [shape=record,label="{145\:\ 0x0051|0x0051: SWITCH  (r14 I:??)\l case 0: goto B:205:0x0204\l case 1: goto B:180:0x016e\l case 2: goto B:160:0x00ec\l case 3: goto B:159:0x00e1\l case 4: goto B:146:0x0054\l case 5: goto B:158:0x00ce\l case 6: goto B:147:0x005c\l default: goto B:146:0x0054 \l}"];
Node_146 [shape=record,label="{146\:\ 0x0054|0x0054: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) \l0x0056: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x0058: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l}"];
Node_234 [shape=record,label="{234\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_124 [shape=record,label="{124\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_147 [shape=record,label="{147\:\ 0x005c|0x005c: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float  (LINE:266)\l0x005e: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusX float \l0x0060: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:267)\l0x0062: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusY float \l0x0064: IGET  (r5 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:271)\l0x0066: IGET  (r6 I:int) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMaximumFlingVelocity int \l0x0068: CAST (r6 I:float) = (float) (r6 I:int) \l0x0069: INVOKE  (r5 I:android.view.VelocityTracker), (r15 I:int), (r6 I:float) type: VIRTUAL call: android.view.VelocityTracker.computeCurrentVelocity(int, float):void A[MD:(int, float):void (c)]\l0x006c: INVOKE  (r5 I:int) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getActionIndex():int A[MD:():int (c)] (LINE:272)\l0x0070: INVOKE  (r6 I:int) = (r1 I:android.view.MotionEvent), (r5 I:int A[D('upIndex' int)]) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)] (LINE:273)\l0x0074: IGET  (r14 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:274)\l0x0076: INVOKE  (r14 I:float) = (r14 I:android.view.VelocityTracker), (r6 I:int A[D('id1' int)]) type: VIRTUAL call: android.view.VelocityTracker.getXVelocity(int):float A[MD:(int):float (c)]\l0x007a: IGET  (r15 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:275)\l0x007c: INVOKE  (r15 I:float) = (r15 I:android.view.VelocityTracker), (r6 I:int A[D('id1' int)]) type: VIRTUAL call: android.view.VelocityTracker.getYVelocity(int):float A[MD:(int):float (c)]\l0x0080: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:276)\l0x0082: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) \l0x0084: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_148 [shape=record,label="{148\:\ 0x0086|LOOP_START\lLOOP:1: B:148:0x0086\-\>B:155:0x00bd\l|0x0086: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r9 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:231:0x00c6 \l}"];
Node_149 [shape=record,label="{149\:\ 0x0088|0x0088: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('upIndex' int)])  \-\> B:151:0x0091  (LINE:277)\l}"];
Node_150 [shape=record,label="{150\:\ 0x008a|0x008a: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x008c: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x008e: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('upIndex' int)]) \l}"];
Node_233 [shape=record,label="{233\:\ 0x00bd|SYNTHETIC\l}"];
Node_155 [shape=record,label="{155\:\ 0x00bd|LOOP_END\lLOOP:1: B:148:0x0086\-\>B:155:0x00bd\l|0x00bd: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:276)\l0x00bf: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('upIndex' int)]) \l0x00c1: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x00c3: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l}"];
Node_151 [shape=record,label="{151\:\ 0x0091|0x0091: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)])  (LINE:279)\l0x0093: INVOKE  (r3 I:int) = (r1 I:android.view.MotionEvent), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)]\l0x0097: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)])  (LINE:280)\l0x0099: IGET  (r4 I:android.view.VelocityTracker A[D('skipIndex' int)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker \l0x009b: INVOKE  (r4 I:float) = (r4 I:android.view.VelocityTracker), (r3 I:int A[D('id2' int)]) type: VIRTUAL call: android.view.VelocityTracker.getXVelocity(int):float A[MD:(int):float (c)]\l0x009f: ARITH  (r4 I:float) = (r4 I:float) * (r14 I:float A[D('x1' float)]) \l0x00a1: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('upIndex' int)])  (LINE:281)\l0x00a3: IGET  (r5 I:android.view.VelocityTracker A[D('upIndex' int)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker \l0x00a5: INVOKE  (r5 I:float) = (r5 I:android.view.VelocityTracker), (r3 I:int A[D('id2' int)]) type: VIRTUAL call: android.view.VelocityTracker.getYVelocity(int):float A[MD:(int):float (c)]\l0x00a9: ARITH  (r5 I:float) = (r5 I:float) * (r15 I:float A[D('y1' float)]) \l0x00ab: ARITH  (r17 I:float) = (r4 I:float A[D('x' float)]) + (r5 I:float A[D('y' float)])  (LINE:283)\l0x00ad: CONST  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:284)\l0x00af: CMP_G  (r21 I:int) = (r17 I:float A[D('dot' float)]), (r21 I:float) \l}"];
Node_152 [shape=record,label="{152\:\ 0x00b1|0x00b1: IF  (r21 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:154:0x00bb \l}"];
Node_154 [shape=record,label="{154\:\ 0x00bb|0x00bb: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id2' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id2' int)])  (LINE:284)\l}"];
Node_232 [shape=record,label="{232\:\ 0x00bd|SYNTHETIC\l}"];
Node_230 [shape=record,label="{230\:\ 0x00b3|SYNTHETIC\l}"];
Node_153 [shape=record,label="{153\:\ 0x00b3|0x00b3: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id2' int)])  (LINE:285)\l0x00b5: IGET  (r3 I:android.view.VelocityTracker A[D('id2' int)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker \l0x00b7: INVOKE  (r3 I:android.view.VelocityTracker) type: VIRTUAL call: android.view.VelocityTracker.clear():void A[MD:():void (c)]\l}"];
Node_241 [shape=record,label="{241\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_231 [shape=record,label="{231\:\ 0x00c6|SYNTHETIC\l}"];
Node_156 [shape=record,label="{156\:\ 0x00c6|0x00c6: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x00c8: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x00ca: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('upIndex' int)]) \l}"];
Node_240 [shape=record,label="{240\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_158 [shape=record,label="{158\:\ 0x00ce|0x00ce: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)])  (LINE:259)\l0x00d0: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x00d2: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x00d4: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float \l0x00d6: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusX float \l0x00d8: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:260)\l0x00da: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusY float \l0x00dc: INVOKE  (r22 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) type: DIRECT call: androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.cancelTaps():void A[MD:():void (m)] (LINE:262)\l}"];
Node_235 [shape=record,label="{235\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_159 [shape=record,label="{159\:\ 0x00e1|0x00e1: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)])  (LINE:410)\l0x00e3: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x00e5: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x00e7: INVOKE  (r22 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) type: DIRECT call: androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.cancel():void A[MD:():void (m)]\l}"];
Node_236 [shape=record,label="{236\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_160 [shape=record,label="{160\:\ 0x00ec|0x00ec: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)])  (LINE:333)\l0x00ee: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x00f0: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x00f2: IGET  (r2 I:boolean A[D('action' int)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mInLongPress boolean \l}"];
Node_161 [shape=record,label="{161\:\ 0x00f4|0x00f4: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:163:0x00f8 \l}"];
Node_163 [shape=record,label="{163\:\ 0x00f8|0x00f8: IGET  (r2 I:float) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float  (LINE:336)\l0x00fa: ARITH  (r2 I:float) = (r2 I:float) \- (r11 I:float A[D('focusX' float)]) \l0x00fb: IGET  (r3 I:float) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:337)\l0x00fd: ARITH  (r3 I:float) = (r3 I:float) \- (r12 I:float A[D('focusY' float)]) \l0x00fe: IGET  (r4 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsDoubleTapping boolean  (LINE:338)\l}"];
Node_164 [shape=record,label="{164\:\ 0x0100|0x0100: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:166:0x010b \l}"];
Node_165 [shape=record,label="{165\:\ 0x0102|0x0102: IGET  (r4 I:android.view.GestureDetector$OnDoubleTapListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener  (LINE:340)\l0x0104: INVOKE  (r4 I:boolean) = (r4 I:android.view.GestureDetector$OnDoubleTapListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnDoubleTapListener.onDoubleTapEvent(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x0108: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char] A[D('handled' boolean)]) \| (r4 I:??[int, boolean, short, byte, char]) \l}"];
Node_237 [shape=record,label="{237\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_166 [shape=record,label="{166\:\ 0x010b|0x010b: IGET  (r4 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInTapRegion boolean  (LINE:341)\l}"];
Node_167 [shape=record,label="{167\:\ 0x010d|0x010d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:175:0x014e \l}"];
Node_168 [shape=record,label="{168\:\ 0x010f|0x010f: IGET  (r4 I:float) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusX float  (LINE:342)\l0x0111: ARITH  (r4 I:float) = (r11 I:float A[D('focusX' float)]) \- (r4 I:float) \l0x0113: CAST (r4 I:int) = (int) (r4 I:float) \l0x0114: IGET  (r14 I:float) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusY float  (LINE:343)\l0x0116: ARITH  (r14 I:float) = (r12 I:float A[D('focusY' float)]) \- (r14 I:float) \l0x0118: CAST (r14 I:int) = (int) (r14 I:float) \l0x0119: ARITH  (r15 I:int) = (r4 I:int A[D('deltaX' int)]) * (r4 I:int A[D('deltaX' int)])  (LINE:344)\l0x011b: ARITH  (r21 I:int) = (r14 I:int A[D('deltaY' int)]) * (r14 I:int A[D('deltaY' int)]) \l0x011d: ARITH  (r15 I:int) = (r15 I:int) + (r21 I:int) \l0x011f: IGET  (r6 I:int) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mTouchSlopSquare int  (LINE:345)\l}"];
Node_169 [shape=record,label="{169\:\ 0x0121|0x0121: IF  (r15 I:??[int, byte, short, char] A[D('distance' int)]) \<= (r6 I:??[int, byte, short, char])  \-\> B:171:0x0145 \l}"];
Node_170 [shape=record,label="{170\:\ 0x0123|0x0123: IGET  (r6 I:android.view.GestureDetector$OnGestureListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:346)\l0x0125: IGET  (r5 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x0127: INVOKE  (r5 I:boolean) = \l  (r6 I:android.view.GestureDetector$OnGestureListener)\l  (r5 I:android.view.MotionEvent)\l  (r1 I:android.view.MotionEvent)\l  (r2 I:float A[D('scrollX' float)])\l  (r3 I:float A[D('scrollY' float)])\l type: INTERFACE call: android.view.GestureDetector.OnGestureListener.onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean A[MD:(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean (c)]\l0x012b: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float  (LINE:347)\l0x012d: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:348)\l0x012f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:349)\l0x0130: IPUT  (r6 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInTapRegion boolean \l0x0132: IGET  (r6 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:350)\l0x0134: CONST  (r13 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0135: INVOKE  (r6 I:android.os.Handler), (r13 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x0138: IGET  (r6 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:351)\l0x013a: CONST  (r13 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x013b: INVOKE  (r6 I:android.os.Handler), (r13 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x013e: IGET  (r6 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:352)\l0x0140: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0141: INVOKE  (r6 I:android.os.Handler), (r13 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x0144: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('handled' boolean)]) \l}"];
Node_171 [shape=record,label="{171\:\ 0x0145|0x0145: IGET  (r5 I:int A[D('handled' boolean)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mTouchSlopSquare int  (LINE:354)\l}"];
Node_172 [shape=record,label="{172\:\ 0x0147|0x0147: IF  (r15 I:??[int, byte, short, char] A[D('distance' int)]) \<= (r5 I:??[int, byte, short, char])  \-\> B:244:? \l}"];
Node_173 [shape=record,label="{173\:\ 0x0149|0x0149: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:355)\l0x014a: IPUT  (r5 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInBiggerTapRegion boolean \l}"];
Node_243 [shape=record,label="{243\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_244 [shape=record,label="{244\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_175 [shape=record,label="{175\:\ 0x014e|0x014e: INVOKE  (r4 I:float) = (r2 I:float A[D('scrollX' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0152: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0154: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_176 [shape=record,label="{176\:\ 0x0156|0x0156: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:179:0x0160 \l}"];
Node_177 [shape=record,label="{177\:\ 0x0158|0x0158: INVOKE  (r4 I:float) = (r3 I:float A[D('scrollY' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x015c: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_178 [shape=record,label="{178\:\ 0x015e|0x015e: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:245:? \l}"];
Node_245 [shape=record,label="{245\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_179 [shape=record,label="{179\:\ 0x0160|0x0160: IGET  (r4 I:android.view.GestureDetector$OnGestureListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:358)\l0x0162: IGET  (r5 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x0164: INVOKE  (r13 I:boolean A[D('handled' boolean)]) = \l  (r4 I:android.view.GestureDetector$OnGestureListener)\l  (r5 I:android.view.MotionEvent)\l  (r1 I:android.view.MotionEvent)\l  (r2 I:float A[D('scrollX' float)])\l  (r3 I:float A[D('scrollY' float)])\l type: INTERFACE call: android.view.GestureDetector.OnGestureListener.onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean A[MD:(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean (c)]\l0x0168: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float  (LINE:359)\l0x016a: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:360)\l}"];
Node_238 [shape=record,label="{238\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_242 [shape=record,label="{242\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_180 [shape=record,label="{180\:\ 0x016e|0x016e: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)])  (LINE:365)\l0x0170: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x0172: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x0174: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0175: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mStillDown boolean \l0x0177: INVOKE  (r2 I:android.view.MotionEvent) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: STATIC call: android.view.MotionEvent.obtain(android.view.MotionEvent):android.view.MotionEvent A[MD:(android.view.MotionEvent):android.view.MotionEvent (c)] (LINE:366)\l0x017b: IGET  (r3 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsDoubleTapping boolean  (LINE:367)\l}"];
Node_181 [shape=record,label="{181\:\ 0x017d|0x017d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:183:0x0187 \l}"];
Node_182 [shape=record,label="{182\:\ 0x017f|0x017f: IGET  (r3 I:android.view.GestureDetector$OnDoubleTapListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener  (LINE:369)\l0x0181: INVOKE  (r3 I:boolean) = (r3 I:android.view.GestureDetector$OnDoubleTapListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnDoubleTapListener.onDoubleTapEvent(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x0185: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char] A[D('handled' boolean)]) \| (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_198 [shape=record,label="{198\:\ 0x01de|0x01de: IGET  (r3 I:android.view.MotionEvent A[D('velocityTracker' android.view.VelocityTracker)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mPreviousUpEvent android.view.MotionEvent  (LINE:392)\l}"];
Node_199 [shape=record,label="{199\:\ 0x01e0|0x01e0: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:201:0x01e5 \l}"];
Node_200 [shape=record,label="{200\:\ 0x01e2|0x01e2: INVOKE  (r3 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.recycle():void A[MD:():void (c)] (LINE:393)\l}"];
Node_201 [shape=record,label="{201\:\ 0x01e5|0x01e5: IPUT  \l  (r2 I:android.view.MotionEvent A[D('currentUpEvent' android.view.MotionEvent)])\l  (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase)\l androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mPreviousUpEvent android.view.MotionEvent  (LINE:396)\l0x01e7: IGET  (r3 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:397)\l}"];
Node_202 [shape=record,label="{202\:\ 0x01e9|0x01e9: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:204:0x01f1 \l}"];
Node_203 [shape=record,label="{203\:\ 0x01eb|0x01eb: INVOKE  (r3 I:android.view.VelocityTracker) type: VIRTUAL call: android.view.VelocityTracker.recycle():void A[MD:():void (c)] (LINE:400)\l0x01ee: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:401)\l0x01ef: IPUT  (r3 I:android.view.VelocityTracker), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker \l}"];
Node_204 [shape=record,label="{204\:\ 0x01f1|0x01f1: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:403)\l0x01f2: IPUT  (r3 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsDoubleTapping boolean \l0x01f4: IPUT  (r3 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDeferConfirmSingleTap boolean  (LINE:404)\l0x01f6: IGET  (r3 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:405)\l0x01f8: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x01f9: INVOKE  (r3 I:android.os.Handler), (r4 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x01fc: IGET  (r3 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:406)\l0x01fe: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x01ff: INVOKE  (r3 I:android.os.Handler), (r4 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l}"];
Node_239 [shape=record,label="{239\:\ ?|SYNTHETIC\lRETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)]) A[SYNTHETIC] (LINE:414)\l}"];
Node_183 [shape=record,label="{183\:\ 0x0187|0x0187: IGET  (r3 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mInLongPress boolean  (LINE:370)\l}"];
Node_184 [shape=record,label="{184\:\ 0x0189|0x0189: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:186:0x0195 \l}"];
Node_185 [shape=record,label="{185\:\ 0x018b|0x018b: IGET  (r3 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:371)\l0x018d: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x018e: INVOKE  (r3 I:android.os.Handler), (r4 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x0191: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:372)\l0x0192: IPUT  (r3 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mInLongPress boolean \l}"];
Node_186 [shape=record,label="{186\:\ 0x0195|0x0195: IGET  (r3 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInTapRegion boolean  (LINE:373)\l}"];
Node_187 [shape=record,label="{187\:\ 0x0197|0x0197: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:193:0x01ab \l}"];
Node_188 [shape=record,label="{188\:\ 0x0199|0x0199: IGET  (r3 I:android.view.GestureDetector$OnGestureListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:374)\l0x019b: INVOKE  (r13 I:boolean A[D('handled' boolean)]) = (r3 I:android.view.GestureDetector$OnGestureListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnGestureListener.onSingleTapUp(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x019f: IGET  (r3 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDeferConfirmSingleTap boolean  (LINE:375)\l}"];
Node_189 [shape=record,label="{189\:\ 0x01a1|0x01a1: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:198:0x01de \l}"];
Node_190 [shape=record,label="{190\:\ 0x01a3|0x01a3: IGET  (r3 I:android.view.GestureDetector$OnDoubleTapListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener \l}"];
Node_191 [shape=record,label="{191\:\ 0x01a5|0x01a5: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:198:0x01de \l}"];
Node_192 [shape=record,label="{192\:\ 0x01a7|0x01a7: INVOKE  (r3 I:android.view.GestureDetector$OnDoubleTapListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnDoubleTapListener.onSingleTapConfirmed(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)] (LINE:376)\l}"];
Node_193 [shape=record,label="{193\:\ 0x01ab|0x01ab: IGET  (r3 I:android.view.VelocityTracker) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mVelocityTracker android.view.VelocityTracker  (LINE:380)\l0x01ad: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:381)\l0x01ae: INVOKE  (r5 I:int) = (r1 I:android.view.MotionEvent), (r4 I:int) type: VIRTUAL call: android.view.MotionEvent.getPointerId(int):int A[MD:(int):int (c)]\l0x01b2: IGET  (r4 I:int) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMaximumFlingVelocity int  (LINE:382)\l0x01b4: CAST (r4 I:float) = (float) (r4 I:int) \l0x01b5: INVOKE  (r3 I:android.view.VelocityTracker A[D('velocityTracker' android.view.VelocityTracker)]), (r15 I:int), (r4 I:float) type: VIRTUAL call: android.view.VelocityTracker.computeCurrentVelocity(int, float):void A[MD:(int, float):void (c)]\l0x01b8: INVOKE  (r4 I:float) = \l  (r3 I:android.view.VelocityTracker A[D('velocityTracker' android.view.VelocityTracker)])\l  (r5 I:int A[D('pointerId' int)])\l type: VIRTUAL call: android.view.VelocityTracker.getYVelocity(int):float A[MD:(int):float (c)] (LINE:383)\l0x01bc: INVOKE  (r6 I:float) = \l  (r3 I:android.view.VelocityTracker A[D('velocityTracker' android.view.VelocityTracker)])\l  (r5 I:int A[D('pointerId' int)])\l type: VIRTUAL call: android.view.VelocityTracker.getXVelocity(int):float A[MD:(int):float (c)] (LINE:384)\l0x01c0: INVOKE  (r14 I:float) = (r4 I:float A[D('velocityY' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:386)\l0x01c4: IGET  (r15 I:int) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMinimumFlingVelocity int \l0x01c6: CAST (r15 I:float) = (float) (r15 I:int) \l0x01c7: CMP_L  (r14 I:int) = (r14 I:float), (r15 I:float) \l}"];
Node_194 [shape=record,label="{194\:\ 0x01c9|0x01c9: IF  (r14 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:197:0x01d6 \l}"];
Node_195 [shape=record,label="{195\:\ 0x01cb|0x01cb: INVOKE  (r14 I:float) = (r6 I:float A[D('velocityX' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:387)\l0x01cf: IGET  (r15 I:int) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMinimumFlingVelocity int \l0x01d1: CAST (r15 I:float) = (float) (r15 I:int) \l0x01d2: CMP_L  (r14 I:int) = (r14 I:float), (r15 I:float) \l}"];
Node_196 [shape=record,label="{196\:\ 0x01d4|0x01d4: IF  (r14 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:198:0x01de \l}"];
Node_197 [shape=record,label="{197\:\ 0x01d6|0x01d6: IGET  (r14 I:android.view.GestureDetector$OnGestureListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:388)\l0x01d8: IGET  (r15 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x01da: INVOKE  (r13 I:boolean A[D('handled' boolean)]) = \l  (r14 I:android.view.GestureDetector$OnGestureListener)\l  (r15 I:android.view.MotionEvent)\l  (r1 I:android.view.MotionEvent)\l  (r6 I:float A[D('velocityX' float)])\l  (r4 I:float A[D('velocityY' float)])\l type: INTERFACE call: android.view.GestureDetector.OnGestureListener.onFling(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean A[MD:(android.view.MotionEvent, android.view.MotionEvent, float, float):boolean (c)]\l}"];
Node_205 [shape=record,label="{205\:\ 0x0204|0x0204: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('action' int)])  (LINE:292)\l0x0206: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pointerUp' boolean)]) \l0x0208: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skipIndex' int)]) \l0x020a: IGET  (r2 I:android.view.GestureDetector$OnDoubleTapListener A[D('action' int)]) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener \l}"];
Node_206 [shape=record,label="{206\:\ 0x020c|0x020c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:219:0x024a \l}"];
Node_207 [shape=record,label="{207\:\ 0x020e|0x020e: IGET  (r2 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:293)\l0x0210: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0211: INVOKE  (r2 I:boolean) = (r2 I:android.os.Handler), (r3 I:int) type: VIRTUAL call: android.os.Handler.hasMessages(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_208 [shape=record,label="{208\:\ 0x0215|0x0215: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hadTapMessage' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:210:0x021c  (LINE:294)\l}"];
Node_209 [shape=record,label="{209\:\ 0x0217|0x0217: IGET  (r4 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler \l0x0219: INVOKE  (r4 I:android.os.Handler), (r3 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l}"];
Node_210 [shape=record,label="{210\:\ 0x021c|0x021c: IGET  (r3 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent  (LINE:295)\l}"];
Node_211 [shape=record,label="{211\:\ 0x021e|0x021e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:218:0x0241 \l}"];
Node_212 [shape=record,label="{212\:\ 0x0220|0x0220: IGET  (r4 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mPreviousUpEvent android.view.MotionEvent \l}"];
Node_213 [shape=record,label="{213\:\ 0x0222|0x0222: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:218:0x0241 \l}"];
Node_214 [shape=record,label="{214\:\ 0x0224|0x0224: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hadTapMessage' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:218:0x0241 \l}"];
Node_215 [shape=record,label="{215\:\ 0x0226|0x0226: INVOKE  (r3 I:boolean) = \l  (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase)\l  (r3 I:android.view.MotionEvent)\l  (r4 I:android.view.MotionEvent)\l  (r1 I:android.view.MotionEvent)\l type: DIRECT call: androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.isConsideredDoubleTap(android.view.MotionEvent, android.view.MotionEvent, android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent, android.view.MotionEvent, android.view.MotionEvent):boolean (m)] (LINE:296)\l}"];
Node_216 [shape=record,label="{216\:\ 0x022a|0x022a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:218:0x0241 \l}"];
Node_217 [shape=record,label="{217\:\ 0x022c|0x022c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:299)\l0x022d: IPUT  (r3 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsDoubleTapping boolean \l0x022f: IGET  (r3 I:android.view.GestureDetector$OnDoubleTapListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener  (LINE:301)\l0x0231: IGET  (r4 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x0233: INVOKE  (r3 I:boolean) = (r3 I:android.view.GestureDetector$OnDoubleTapListener), (r4 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnDoubleTapListener.onDoubleTap(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x0237: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) \| (r13 I:??[int, boolean, short, byte, char] A[D('handled' boolean)]) \l0x0238: IGET  (r4 I:android.view.GestureDetector$OnDoubleTapListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapListener android.view.GestureDetector$OnDoubleTapListener  (LINE:303)\l0x023a: INVOKE  (r4 I:boolean) = (r4 I:android.view.GestureDetector$OnDoubleTapListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnDoubleTapListener.onDoubleTapEvent(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x023e: ARITH  (r13 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char] A[D('handled' boolean)]) \| (r4 I:??[int, boolean, short, byte, char]) \l}"];
Node_218 [shape=record,label="{218\:\ 0x0241|0x0241: IGET  (r3 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:306)\l0x0243: SGET  (r4 I:int) =  androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.DOUBLE_TAP_TIMEOUT int \l0x0245: CAST (r4 I:long) = (long) (r4 I:int) \l0x0246: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0247: INVOKE  (r3 I:android.os.Handler), (r6 I:int), (r4 I:long) type: VIRTUAL call: android.os.Handler.sendEmptyMessageDelayed(int, long):boolean A[MD:(int, long):boolean (c)]\l}"];
Node_219 [shape=record,label="{219\:\ 0x024a|0x024a: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusX float  (LINE:310)\l0x024c: IPUT  (r11 I:float A[D('focusX' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusX float \l0x024e: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mLastFocusY float  (LINE:311)\l0x0250: IPUT  (r12 I:float A[D('focusY' float)]), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDownFocusY float \l0x0252: IGET  (r2 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent  (LINE:312)\l}"];
Node_220 [shape=record,label="{220\:\ 0x0254|0x0254: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:222:0x0259 \l}"];
Node_221 [shape=record,label="{221\:\ 0x0256|0x0256: INVOKE  (r2 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.recycle():void A[MD:():void (c)] (LINE:313)\l}"];
Node_222 [shape=record,label="{222\:\ 0x0259|0x0259: INVOKE  (r2 I:android.view.MotionEvent) = (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: STATIC call: android.view.MotionEvent.obtain(android.view.MotionEvent):android.view.MotionEvent A[MD:(android.view.MotionEvent):android.view.MotionEvent (c)] (LINE:315)\l0x025d: IPUT  (r2 I:android.view.MotionEvent), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x025f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:316)\l0x0260: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInTapRegion boolean \l0x0262: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInBiggerTapRegion boolean  (LINE:317)\l0x0264: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mStillDown boolean  (LINE:318)\l0x0266: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:319)\l0x0267: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mInLongPress boolean \l0x0269: IPUT  (r2 I:boolean), (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDeferConfirmSingleTap boolean  (LINE:320)\l0x026b: IGET  (r2 I:boolean) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsLongpressEnabled boolean  (LINE:322)\l}"];
Node_223 [shape=record,label="{223\:\ 0x026d|0x026d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:225:0x028b \l}"];
Node_224 [shape=record,label="{224\:\ 0x026f|0x026f: IGET  (r2 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:323)\l0x0271: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0272: INVOKE  (r2 I:android.os.Handler), (r3 I:int) type: VIRTUAL call: android.os.Handler.removeMessages(int):void A[MD:(int):void (c)]\l0x0275: IGET  (r2 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:324)\l0x0277: IGET  (r3 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x0279: INVOKE  (r3 I:long) = (r3 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.getDownTime():long A[MD:():long (c)]\l0x027d: SGET  (r5 I:int) =  androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.TAP_TIMEOUT int \l0x027f: CAST (r5 I:long) = (long) (r5 I:int) \l0x0280: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x0281: INVOKE  (r5 I:int) =  type: STATIC call: android.view.ViewConfiguration.getLongPressTimeout():int A[MD:():int (c)] (LINE:325)\l0x0285: CAST (r5 I:long) = (long) (r5 I:int) \l0x0286: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x0287: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:324)\l0x0288: INVOKE  (r2 I:android.os.Handler), (r5 I:int), (r3 I:long) type: VIRTUAL call: android.os.Handler.sendEmptyMessageAtTime(int, long):boolean A[MD:(int, long):boolean (c)]\l}"];
Node_225 [shape=record,label="{225\:\ 0x028b|0x028b: IGET  (r2 I:android.os.Handler) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mHandler android.os.Handler  (LINE:327)\l0x028d: IGET  (r3 I:android.view.MotionEvent) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mCurrentDownEvent android.view.MotionEvent \l0x028f: INVOKE  (r3 I:long) = (r3 I:android.view.MotionEvent) type: VIRTUAL call: android.view.MotionEvent.getDownTime():long A[MD:():long (c)] (LINE:328)\l0x0293: SGET  (r5 I:int) =  androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.TAP_TIMEOUT int \l0x0295: CAST (r5 I:long) = (long) (r5 I:int) \l0x0296: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x0297: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:327)\l0x0298: INVOKE  (r2 I:android.os.Handler), (r5 I:int), (r3 I:long) type: VIRTUAL call: android.os.Handler.sendEmptyMessageAtTime(int, long):boolean A[MD:(int, long):boolean (c)]\l0x029b: IGET  (r2 I:android.view.GestureDetector$OnGestureListener) = (r0 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:329)\l0x029d: INVOKE  (r2 I:boolean) = (r2 I:android.view.GestureDetector$OnGestureListener), (r1 I:android.view.MotionEvent) type: INTERFACE call: android.view.GestureDetector.OnGestureListener.onDown(android.view.MotionEvent):boolean A[MD:(android.view.MotionEvent):boolean (c)]\l0x02a1: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char] A[D('handled' boolean)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_226 [shape=record,label="{226\:\ 0x02a3|RETURN\lORIG_RETURN\l|0x02a3: RETURN  (r13 I:boolean A[D('handled' boolean)])  (LINE:414)\l}"];
Node_143 [shape=record,label="{143\:\ 0x0045|0x0045: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)]) \l}"];
Node_134 [shape=record,label="{134\:\ 0x0026|0x0026: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_131 [shape=record,label="{131\:\ 0x001e|0x001e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.onTouchEvent((r22 'this' I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase A[IMMUTABLE_TYPE, THIS]), (r23 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:140:0x003d \-\> B:136:0x002e, CROSS_EDGE: B:137:0x0030 \-\> B:140:0x003d, BACK_EDGE: B:155:0x00bd \-\> B:148:0x0086, CROSS_EDGE: B:153:0x00b3 \-\> B:226:0x02a3, CROSS_EDGE: B:154:0x00bb \-\> B:155:0x00bd, CROSS_EDGE: B:156:0x00c6 \-\> B:226:0x02a3, CROSS_EDGE: B:158:0x00ce \-\> B:226:0x02a3, CROSS_EDGE: B:159:0x00e1 \-\> B:226:0x02a3, CROSS_EDGE: B:165:0x0102 \-\> B:226:0x02a3, CROSS_EDGE: B:173:0x0149 \-\> B:226:0x02a3, CROSS_EDGE: B:172:0x0147 \-\> B:226:0x02a3, CROSS_EDGE: B:169:0x0121 \-\> B:171:0x0145, CROSS_EDGE: B:179:0x0160 \-\> B:226:0x02a3, CROSS_EDGE: B:178:0x015e \-\> B:226:0x02a3, CROSS_EDGE: B:176:0x0156 \-\> B:179:0x0160, CROSS_EDGE: B:161:0x00f4 \-\> B:226:0x02a3, CROSS_EDGE: B:204:0x01f1 \-\> B:226:0x02a3, CROSS_EDGE: B:202:0x01e9 \-\> B:204:0x01f1, CROSS_EDGE: B:199:0x01e0 \-\> B:201:0x01e5, CROSS_EDGE: B:185:0x018b \-\> B:198:0x01de, CROSS_EDGE: B:192:0x01a7 \-\> B:198:0x01de, CROSS_EDGE: B:191:0x01a5 \-\> B:198:0x01de, CROSS_EDGE: B:189:0x01a1 \-\> B:198:0x01de, CROSS_EDGE: B:197:0x01d6 \-\> B:198:0x01de, CROSS_EDGE: B:196:0x01d4 \-\> B:198:0x01de, CROSS_EDGE: B:194:0x01c9 \-\> B:197:0x01d6, CROSS_EDGE: B:225:0x028b \-\> B:226:0x02a3, CROSS_EDGE: B:223:0x026d \-\> B:225:0x028b, CROSS_EDGE: B:220:0x0254 \-\> B:222:0x0259, CROSS_EDGE: B:218:0x0241 \-\> B:219:0x024a, CROSS_EDGE: B:214:0x0224 \-\> B:218:0x0241, CROSS_EDGE: B:213:0x0222 \-\> B:218:0x0241, CROSS_EDGE: B:211:0x021e \-\> B:218:0x0241, CROSS_EDGE: B:208:0x0215 \-\> B:210:0x021c, CROSS_EDGE: B:206:0x020c \-\> B:219:0x024a, CROSS_EDGE: B:143:0x0045 \-\> B:144:0x0046, CROSS_EDGE: B:134:0x0026 \-\> B:135:0x0027, CROSS_EDGE: B:131:0x001e \-\> B:132:0x001f, CROSS_EDGE: B:126:0x000a \-\> B:128:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x0040: r10 'i' I\l  0x0008\-0x005a: r2 'action' I\l  0x001f\-0x005a: r3 'pointerUp' Z\l  0x0027\-0x005a: r4 'skipIndex' I\l  0x005a\-0x005c: r18 'action' I\l  0x005a\-0x005c: r19 'pointerUp' Z\l  0x005a\-0x005c: r20 'skipIndex' I\l  0x005c\-0x0086: r2 'action' I\l  0x005c\-0x0093: r3 'pointerUp' Z\l  0x005c\-0x0099: r4 'skipIndex' I\l  0x0070\-0x00a3: r5 'upIndex' I\l  0x0097\-0x00b5: r3 'id2' I\l  0x00b5\-0x00bb: r21 'id2' I\l  0x00bb\-0x00bd: r3 'id2' I\l  0x00a1\-0x00bd: r4 'x' F\l  0x00ab\-0x00bd: r5 'y' F\l  0x00ad\-0x00bd: r17 'dot' F\l  0x00a3\-0x00c6: r16 'upIndex' I\l  0x0093\-0x00c6: r19 'pointerUp' Z\l  0x0099\-0x00c6: r20 'skipIndex' I\l  0x0086\-0x00cc: r2 'i' I\l  0x00c6\-0x00cc: r3 'pointerUp' Z\l  0x00c6\-0x00cc: r4 'skipIndex' I\l  0x00c6\-0x00cc: r5 'upIndex' I\l  0x0074\-0x00ce: r6 'id1' I\l  0x007a\-0x00ce: r14 'x1' F\l  0x0080\-0x00ce: r15 'y1' F\l  0x00cc\-0x00ce: r16 'upIndex' I\l  0x0086\-0x00ce: r18 'action' I\l  0x00cc\-0x00ce: r19 'pointerUp' Z\l  0x00cc\-0x00ce: r20 'skipIndex' I\l  0x00ce\-0x00d4: r2 'action' I\l  0x00ce\-0x00d4: r3 'pointerUp' Z\l  0x00ce\-0x00d4: r4 'skipIndex' I\l  0x00d4\-0x00e1: r18 'action' I\l  0x00d4\-0x00e1: r19 'pointerUp' Z\l  0x00d4\-0x00e1: r20 'skipIndex' I\l  0x00e1\-0x00e7: r2 'action' I\l  0x00e1\-0x00e7: r3 'pointerUp' Z\l  0x00e1\-0x00e7: r4 'skipIndex' I\l  0x00e7\-0x00ec: r18 'action' I\l  0x00e7\-0x00ec: r19 'pointerUp' Z\l  0x00e7\-0x00ec: r20 'skipIndex' I\l  0x00ec\-0x00f2: r2 'action' I\l  0x00ec\-0x00f2: r3 'pointerUp' Z\l  0x00ec\-0x00f2: r4 'skipIndex' I\l  0x004d\-0x012b: r13 'handled' Z\l  0x012b\-0x0145: r5 'handled' Z\l  0x0114\-0x014c: r4 'deltaX' I\l  0x0119\-0x014c: r14 'deltaY' I\l  0x011f\-0x014c: r15 'distance' I\l  0x00f2\-0x016e: r18 'action' I\l  0x00f2\-0x016e: r19 'pointerUp' Z\l  0x00f2\-0x016e: r20 'skipIndex' I\l  0x00fb\-0x016e: r2 'scrollX' F\l  0x00fe\-0x016e: r3 'scrollY' F\l  0x016e\-0x0174: r2 'action' I\l  0x016e\-0x0174: r3 'pointerUp' Z\l  0x016e\-0x0174: r4 'skipIndex' I\l  0x01ad\-0x01de: r3 'velocityTracker' Landroid\/view\/VelocityTracker;\l  0x01bc\-0x01de: r4 'velocityY' F\l  0x01b2\-0x01de: r5 'pointerId' I\l  0x01c0\-0x01de: r6 'velocityX' F\l  0x0174\-0x0204: r18 'action' I\l  0x0174\-0x0204: r19 'pointerUp' Z\l  0x0174\-0x0204: r20 'skipIndex' I\l  0x017b\-0x0204: r2 'currentUpEvent' Landroid\/view\/MotionEvent;\l  0x0204\-0x020a: r2 'action' I\l  0x0204\-0x020a: r3 'pointerUp' Z\l  0x0204\-0x020a: r4 'skipIndex' I\l  0x0145\-0x0238: r13 'handled' Z\l  0x0238\-0x0240: r3 'handled' Z\l  0x0215\-0x024a: r2 'hadTapMessage' Z\l  0x0028\-0x02b5: r7 'sumX' F\l  0x0029\-0x02b5: r8 'sumY' F\l  0x002d\-0x02b5: r9 'count' I\l  0x0046\-0x02b5: r10 'div' I\l  0x0049\-0x02b5: r11 'focusX' F\l  0x004c\-0x02b5: r12 'focusY' F\l  0x0240\-0x02b5: r13 'handled' Z\l  0x020a\-0x02b5: r18 'action' I\l  0x020a\-0x02b5: r19 'pointerUp' Z\l  0x020a\-0x02b5: r20 'skipIndex' I\l  \-1 \-0x02b5: r23 'ev' Landroid\/view\/MotionEvent;\lMETHOD_OVERRIDE: [androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImpl.onTouchEvent(android.view.MotionEvent):boolean]\l}"];
MethodNode -> Node_123;Node_123 -> Node_125;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_128;
Node_127 -> Node_128;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_131;
Node_130 -> Node_132;
Node_132 -> Node_133[style=dashed];
Node_132 -> Node_134;
Node_133 -> Node_135;
Node_135 -> Node_136;
Node_136 -> Node_137[style=dashed];
Node_136 -> Node_227;
Node_137 -> Node_139;
Node_137 -> Node_229[style=dashed];
Node_139 -> Node_228;
Node_228 -> Node_140;
Node_140 -> Node_136;
Node_229 -> Node_140;
Node_227 -> Node_141;
Node_141 -> Node_142[style=dashed];
Node_141 -> Node_143;
Node_142 -> Node_144;
Node_144 -> Node_145;
Node_145 -> Node_146;
Node_145 -> Node_147;
Node_145 -> Node_158;
Node_145 -> Node_159;
Node_145 -> Node_160;
Node_145 -> Node_180;
Node_145 -> Node_205;
Node_146 -> Node_234;
Node_234 -> Node_124;
Node_147 -> Node_148;
Node_148 -> Node_149[style=dashed];
Node_148 -> Node_231;
Node_149 -> Node_150[style=dashed];
Node_149 -> Node_151;
Node_150 -> Node_233;
Node_233 -> Node_155;
Node_155 -> Node_148;
Node_151 -> Node_152;
Node_152 -> Node_154;
Node_152 -> Node_230[style=dashed];
Node_154 -> Node_232;
Node_232 -> Node_155;
Node_230 -> Node_153;
Node_153 -> Node_241;
Node_241 -> Node_124;
Node_231 -> Node_156;
Node_156 -> Node_240;
Node_240 -> Node_124;
Node_158 -> Node_235;
Node_235 -> Node_124;
Node_159 -> Node_236;
Node_236 -> Node_124;
Node_160 -> Node_161;
Node_161 -> Node_163;
Node_161 -> Node_242[style=dashed];
Node_163 -> Node_164;
Node_164 -> Node_165[style=dashed];
Node_164 -> Node_166;
Node_165 -> Node_237;
Node_237 -> Node_124;
Node_166 -> Node_167;
Node_167 -> Node_168[style=dashed];
Node_167 -> Node_175;
Node_168 -> Node_169;
Node_169 -> Node_170[style=dashed];
Node_169 -> Node_171;
Node_170 -> Node_171;
Node_171 -> Node_172;
Node_172 -> Node_173[style=dashed];
Node_172 -> Node_244;
Node_173 -> Node_243;
Node_243 -> Node_124;
Node_244 -> Node_124;
Node_175 -> Node_176;
Node_176 -> Node_177[style=dashed];
Node_176 -> Node_179;
Node_177 -> Node_178;
Node_178 -> Node_179[style=dashed];
Node_178 -> Node_245;
Node_245 -> Node_124;
Node_179 -> Node_238;
Node_238 -> Node_124;
Node_242 -> Node_124;
Node_180 -> Node_181;
Node_181 -> Node_182[style=dashed];
Node_181 -> Node_183;
Node_182 -> Node_198;
Node_198 -> Node_199;
Node_199 -> Node_200[style=dashed];
Node_199 -> Node_201;
Node_200 -> Node_201;
Node_201 -> Node_202;
Node_202 -> Node_203[style=dashed];
Node_202 -> Node_204;
Node_203 -> Node_204;
Node_204 -> Node_239;
Node_239 -> Node_124;
Node_183 -> Node_184;
Node_184 -> Node_185[style=dashed];
Node_184 -> Node_186;
Node_185 -> Node_198;
Node_186 -> Node_187;
Node_187 -> Node_188[style=dashed];
Node_187 -> Node_193;
Node_188 -> Node_189;
Node_189 -> Node_190[style=dashed];
Node_189 -> Node_198;
Node_190 -> Node_191;
Node_191 -> Node_192[style=dashed];
Node_191 -> Node_198;
Node_192 -> Node_198;
Node_193 -> Node_194;
Node_194 -> Node_195[style=dashed];
Node_194 -> Node_197;
Node_195 -> Node_196;
Node_196 -> Node_197[style=dashed];
Node_196 -> Node_198;
Node_197 -> Node_198;
Node_205 -> Node_206;
Node_206 -> Node_207[style=dashed];
Node_206 -> Node_219;
Node_207 -> Node_208;
Node_208 -> Node_209[style=dashed];
Node_208 -> Node_210;
Node_209 -> Node_210;
Node_210 -> Node_211;
Node_211 -> Node_212[style=dashed];
Node_211 -> Node_218;
Node_212 -> Node_213;
Node_213 -> Node_214[style=dashed];
Node_213 -> Node_218;
Node_214 -> Node_215[style=dashed];
Node_214 -> Node_218;
Node_215 -> Node_216;
Node_216 -> Node_217[style=dashed];
Node_216 -> Node_218;
Node_217 -> Node_219;
Node_218 -> Node_219;
Node_219 -> Node_220;
Node_220 -> Node_221[style=dashed];
Node_220 -> Node_222;
Node_221 -> Node_222;
Node_222 -> Node_223;
Node_223 -> Node_224[style=dashed];
Node_223 -> Node_225;
Node_224 -> Node_225;
Node_225 -> Node_226;
Node_226 -> Node_124;
Node_143 -> Node_144;
Node_134 -> Node_135;
Node_131 -> Node_132;
}

