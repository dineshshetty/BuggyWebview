digraph "CFG forandroidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.init(Landroid\/content\/Context;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('context' android.content.Context)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0032  (LINE:169)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IGET  (r0 I:android.view.GestureDetector$OnGestureListener) = (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mListener android.view.GestureDetector$OnGestureListener  (LINE:172)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:175)\l0x0007: IPUT  (r0 I:boolean), (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mIsLongpressEnabled boolean \l0x0009: INVOKE  (r0 I:android.view.ViewConfiguration) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: STATIC call: android.view.ViewConfiguration.get(android.content.Context):android.view.ViewConfiguration A[MD:(android.content.Context):android.view.ViewConfiguration (c)] (LINE:177)\l0x000d: INVOKE  (r1 I:int) = (r0 I:android.view.ViewConfiguration A[D('configuration' android.view.ViewConfiguration)]) type: VIRTUAL call: android.view.ViewConfiguration.getScaledTouchSlop():int A[MD:():int (c)] (LINE:178)\l0x0011: INVOKE  (r2 I:int) = (r0 I:android.view.ViewConfiguration A[D('configuration' android.view.ViewConfiguration)]) type: VIRTUAL call: android.view.ViewConfiguration.getScaledDoubleTapSlop():int A[MD:():int (c)] (LINE:179)\l0x0015: INVOKE  (r3 I:int) = (r0 I:android.view.ViewConfiguration A[D('configuration' android.view.ViewConfiguration)]) type: VIRTUAL call: android.view.ViewConfiguration.getScaledMinimumFlingVelocity():int A[MD:():int (c)] (LINE:180)\l0x0019: IPUT  (r3 I:int), (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMinimumFlingVelocity int \l0x001b: INVOKE  (r3 I:int) = (r0 I:android.view.ViewConfiguration A[D('configuration' android.view.ViewConfiguration)]) type: VIRTUAL call: android.view.ViewConfiguration.getScaledMaximumFlingVelocity():int A[MD:():int (c)] (LINE:181)\l0x001f: IPUT  (r3 I:int), (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mMaximumFlingVelocity int \l0x0021: ARITH  (r3 I:int) = (r1 I:int A[D('touchSlop' int)]) * (r1 I:int A[D('touchSlop' int)])  (LINE:183)\l0x0023: IPUT  (r3 I:int), (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mTouchSlopSquare int \l0x0025: ARITH  (r3 I:int) = (r2 I:int A[D('doubleTapSlop' int)]) * (r2 I:int A[D('doubleTapSlop' int)])  (LINE:184)\l0x0027: IPUT  (r3 I:int), (r4 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapSlopSquare int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|RETURN\l|0x0029: RETURN    (LINE:185)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|0x002a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('configuration' android.view.ViewConfiguration)]) =  java.lang.IllegalArgumentException  (LINE:173)\l0x002c: CONST_STR  (r1 I:java.lang.String) =  \"OnGestureListener must not be null\" \l0x002e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:170)\l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"Context must not be null\" \l0x0036: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.init((r4 'this' I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0031 \-\> B:12:?, CROSS_EDGE: B:21:0x0039 \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002a: r0 'configuration' Landroid\/view\/ViewConfiguration;\l  0x0011\-0x002a: r1 'touchSlop' I\l  0x0015\-0x002a: r2 'doubleTapSlop' I\l  \-1 \-0x0039: r5 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

