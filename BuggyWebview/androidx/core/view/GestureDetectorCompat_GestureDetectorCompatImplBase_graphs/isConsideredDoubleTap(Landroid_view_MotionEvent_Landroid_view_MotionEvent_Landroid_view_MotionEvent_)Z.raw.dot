digraph "CFG forandroidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.isConsideredDoubleTap(Landroid\/view\/MotionEvent;Landroid\/view\/MotionEvent;Landroid\/view\/MotionEvent;)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r6 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mAlwaysInBiggerTapRegion boolean  (LINE:448)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0006 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean)  (LINE:449)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r2 I:long) = (r9 I:android.view.MotionEvent A[D('secondDown' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getEventTime():long A[MD:():long (c)] (LINE:452)\l0x000a: INVOKE  (r4 I:long) = (r8 I:android.view.MotionEvent A[D('firstUp' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getEventTime():long A[MD:():long (c)]\l0x000e: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x000f: SGET  (r0 I:int) =  androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.DOUBLE_TAP_TIMEOUT int \l0x0011: CAST (r4 I:long) = (long) (r0 I:int) \l0x0012: CMP_L  (r0 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:21:0x0017 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|RETURN\l|0x0016: RETURN  (r1 I:boolean)  (LINE:453)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: INVOKE  (r0 I:float) = (r7 I:android.view.MotionEvent A[D('firstDown' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)] (LINE:456)\l0x001b: CAST (r0 I:int) = (int) (r0 I:float) \l0x001c: INVOKE  (r2 I:float) = (r9 I:android.view.MotionEvent A[D('secondDown' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getX():float A[MD:():float (c)]\l0x0020: CAST (r2 I:int) = (int) (r2 I:float) \l0x0021: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x0022: INVOKE  (r2 I:float) = (r7 I:android.view.MotionEvent A[D('firstDown' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)] (LINE:457)\l0x0026: CAST (r2 I:int) = (int) (r2 I:float) \l0x0027: INVOKE  (r3 I:float) = (r9 I:android.view.MotionEvent A[D('secondDown' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getY():float A[MD:():float (c)]\l0x002b: CAST (r3 I:int) = (int) (r3 I:float) \l0x002c: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x002d: ARITH  (r3 I:int) = (r0 I:int A[D('deltaX' int)]) * (r0 I:int A[D('deltaX' int)])  (LINE:458)\l0x002f: ARITH  (r4 I:int) = (r2 I:int A[D('deltaY' int)]) * (r2 I:int A[D('deltaY' int)]) \l0x0031: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0032: IGET  (r4 I:int) = (r6 I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.mDoubleTapSlopSquare int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|0x0034: IF  (r3 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:25:? \l}"];
Node_23 [shape=record,label="{23\:\ 0x0036|RETURN\lORIG_RETURN\l|0x0036: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0037: RETURN  (r1 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.view.GestureDetectorCompat.GestureDetectorCompatImplBase.isConsideredDoubleTap((r6 'this' I:androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.MotionEvent A[D('firstDown' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.MotionEvent A[D('firstUp' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.MotionEvent A[D('secondDown' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0016 \-\> B:14:?, CROSS_EDGE: B:24:0x0037 \-\> B:14:?, CROSS_EDGE: B:22:0x0034 \-\> B:24:0x0037\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0037: r0 'deltaX' I\l  0x002d\-0x0037: r2 'deltaY' I\l  \-1 \-0x0037: r7 'firstDown' Landroid\/view\/MotionEvent;\l  \-1 \-0x0037: r8 'firstUp' Landroid\/view\/MotionEvent;\l  \-1 \-0x0037: r9 'secondDown' Landroid\/view\/MotionEvent;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_14;
Node_25 -> Node_14;
}

