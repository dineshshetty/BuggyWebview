digraph "CFG forandroidx.core.view.WindowInsetsCompat.TypeImpl30.toPlatformType(I)I" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2070)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2071)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0002|LOOP_START\lLOOP:0: B:33:0x0002\-\>B:47:0x003d\l|0x0002: CONST  (r2 I:??[int, float, short, byte, char]) = (256(0x100, float:3.59E\-43) ??[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0004|0x0004: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \> (r2 I:??[int, byte, short, char])  \-\> B:49:0x0040 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|0x0006: ARITH  (r2 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char] A[D('typeMask' int)]) & (r1 I:??[int, boolean, short, byte, char] A[D('i' int)])  (LINE:2072)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x003d \l}"];
Node_37 [shape=record,label="{37\:\ 0x000a|0x000a: SWITCH  (r1 I:?? A[D('i' int)])\l case 1: goto B:46:0x0038\l case 2: goto B:45:0x0032\l case 4: goto B:44:0x002c\l case 8: goto B:43:0x0026\l case 16: goto B:42:0x0020\l case 32: goto B:41:0x001a\l case 64: goto B:40:0x0014\l case 128: goto B:39:0x000e\l default: goto B:59:0x003d  (LINE:2073)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000e|0x000e: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.displayCutout():int A[MD:():int (c)] (LINE:2096)\l0x0012: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x003d|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x003d|LOOP_END\lLOOP:0: B:33:0x0002\-\>B:47:0x003d\l|0x003d: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) \<\< (1 int)  (LINE:2071)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|0x0014: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.tappableElement():int A[MD:():int (c)] (LINE:2093)\l0x0018: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x003d|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x001a|0x001a: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.mandatorySystemGestures():int A[MD:():int (c)] (LINE:2090)\l0x001e: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x003d|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0020|0x0020: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.systemGestures():int A[MD:():int (c)] (LINE:2087)\l0x0024: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x003d|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|0x0026: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.ime():int A[MD:():int (c)] (LINE:2084)\l0x002a: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x003d|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x002c|0x002c: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.captionBar():int A[MD:():int (c)] (LINE:2081)\l0x0030: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x003d|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0032|0x0032: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.navigationBars():int A[MD:():int (c)] (LINE:2078)\l0x0036: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x003d|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|0x0038: INVOKE  (r2 I:int) =  type: STATIC call: android.view.WindowInsets.Type.statusBars():int A[MD:():int (c)] (LINE:2075)\l0x003c: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('result' int)]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x003d|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x003d|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x003d|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0040|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0040|RETURN\l|0x0040: RETURN  (r0 I:int A[D('result' int)])  (LINE:2101)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static int androidx.core.view.WindowInsetsCompat.TypeImpl30.toPlatformType((r3 I:int A[D('typeMask' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:47:0x003d \-\> B:33:0x0002, CROSS_EDGE: B:40:0x0014 \-\> B:47:0x003d, CROSS_EDGE: B:41:0x001a \-\> B:47:0x003d, CROSS_EDGE: B:42:0x0020 \-\> B:47:0x003d, CROSS_EDGE: B:43:0x0026 \-\> B:47:0x003d, CROSS_EDGE: B:44:0x002c \-\> B:47:0x003d, CROSS_EDGE: B:45:0x0032 \-\> B:47:0x003d, CROSS_EDGE: B:46:0x0038 \-\> B:47:0x003d, CROSS_EDGE: B:37:0x000a \-\> B:47:0x003d, CROSS_EDGE: B:36:0x0008 \-\> B:47:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x0040: r1 'i' I\l  0x0001\-0x0063: r0 'result' I\l  \-1 \-0x0063: r3 'typeMask' I\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_49;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_51;
Node_37 -> Node_39;
Node_37 -> Node_40;
Node_37 -> Node_41;
Node_37 -> Node_42;
Node_37 -> Node_43;
Node_37 -> Node_44;
Node_37 -> Node_45;
Node_37 -> Node_46;
Node_37 -> Node_59;
Node_39 -> Node_52;
Node_52 -> Node_47;
Node_47 -> Node_33;
Node_40 -> Node_53;
Node_53 -> Node_47;
Node_41 -> Node_54;
Node_54 -> Node_47;
Node_42 -> Node_55;
Node_55 -> Node_47;
Node_43 -> Node_56;
Node_56 -> Node_47;
Node_44 -> Node_57;
Node_57 -> Node_47;
Node_45 -> Node_58;
Node_58 -> Node_47;
Node_46 -> Node_50;
Node_50 -> Node_47;
Node_59 -> Node_47;
Node_51 -> Node_47;
Node_49 -> Node_48;
Node_48 -> Node_31;
}

