digraph "CFG forandroidx.core.view.WindowInsetsAnimationCompat.Impl21.setCallback(Landroid\/view\/View;Landroidx\/core\/view\/WindowInsetsAnimationCompat$Callback;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.Object r0 = r3.getTag(androidx.core.C0180R.C0183id.tag_on_apply_window_listener)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r4 != null) goto L9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r3.setTag(androidx.core.C0180R.C0183id.tag_window_insets_animation_callback, null)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r0 != null) goto L8\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r3.setOnApplyWindowInsetsListener(null)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|android.view.View$OnApplyWindowInsetsListener r1 = createProxyListener(r3, r4)\lr3.setTag(androidx.core.C0180R.C0183id.tag_window_insets_animation_callback, r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r0 != null) goto L13\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|r3.setOnApplyWindowInsetsListener(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void androidx.core.view.WindowInsetsAnimationCompat.Impl21.setCallback((r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'callback' androidx.core.view.WindowInsetsAnimationCompat$Callback A[D('callback' androidx.core.view.WindowInsetsAnimationCompat$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000e \-\> B:10:0x0023, CROSS_EDGE: B:9:0x0020 \-\> B:10:0x0023, CROSS_EDGE: B:8:0x001e \-\> B:10:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_12;
Node_12 -> Node_1;
Node_11 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_13 -> Node_1;
}

