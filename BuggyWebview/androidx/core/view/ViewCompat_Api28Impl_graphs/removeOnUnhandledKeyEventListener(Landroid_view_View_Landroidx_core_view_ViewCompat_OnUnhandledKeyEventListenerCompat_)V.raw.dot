digraph "CFG forandroidx.core.view.ViewCompat.Api28Impl.removeOnUnhandledKeyEventListener(Landroid\/view\/View;Landroidx\/core\/view\/ViewCompat$OnUnhandledKeyEventListenerCompat;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: SGET  (r0 I:int) =  androidx.core.R.id.tag_unhandled_key_listeners int  (LINE:5533)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r2 I:android.view.View A[D('v' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.getTag(int):java.lang.Object A[MD:(int):java.lang.Object (c)] (LINE:5535)\l0x0006: CHECK_CAST (r0 I:androidx.collection.SimpleArrayMap) = (androidx.collection.SimpleArrayMap) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewListeners' androidx.collection.SimpleArrayMap\<androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat, android.view.View$OnUnhandledKeyEventListener\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000b  (LINE:5536)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:5537)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:androidx.collection.SimpleArrayMap A[D('viewListeners' androidx.collection.SimpleArrayMap\<androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat, android.view.View$OnUnhandledKeyEventListener\>)])\l  (r3 I:java.lang.Object A[D('listener' androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)] (LINE:5539)\l0x000f: CHECK_CAST (r1 I:android.view.View$OnUnhandledKeyEventListener) = (android.view.View$OnUnhandledKeyEventListener) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fwListener' android.view.View$OnUnhandledKeyEventListener)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:5540)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|0x0013: INVOKE  \l  (r2 I:android.view.View A[D('v' android.view.View)])\l  (r1 I:android.view.View$OnUnhandledKeyEventListener A[D('fwListener' android.view.View$OnUnhandledKeyEventListener)])\l type: VIRTUAL call: android.view.View.removeOnUnhandledKeyEventListener(android.view.View$OnUnhandledKeyEventListener):void A[MD:(android.view.View$OnUnhandledKeyEventListener):void (c)] (LINE:5541)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: RETURN    (LINE:5543)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN   A[SYNTHETIC] (LINE:5543)\l}"];
MethodNode[shape=record,label="{static void androidx.core.view.ViewCompat.Api28Impl.removeOnUnhandledKeyEventListener((r2 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat A[D('listener' androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0016 \-\> B:11:?, CROSS_EDGE: B:16:0x0011 \-\> B:18:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0016: r0 'viewListeners' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<Landroidx\/core\/view\/ViewCompat$OnUnhandledKeyEventListenerCompat;Landroid\/view\/View$OnUnhandledKeyEventListener;\>;\l  0x0011\-0x0016: r1 'fwListener' Landroid\/view\/View$OnUnhandledKeyEventListener;\l  \-1 \-0x0016: r2 'v' Landroid\/view\/View;\l  \-1 \-0x0016: r3 'listener' Landroidx\/core\/view\/ViewCompat$OnUnhandledKeyEventListenerCompat;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

