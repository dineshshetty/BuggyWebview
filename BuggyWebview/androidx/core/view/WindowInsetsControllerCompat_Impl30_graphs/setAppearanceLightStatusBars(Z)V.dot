digraph "CFG forandroidx.core.view.WindowInsetsControllerCompat.Impl30.setAppearanceLightStatusBars(Z)V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0004|if (r4 == false) goto L9\l}"];
Node_32 [shape=record,label="{32\:\ 0x0006}"];
Node_33 [shape=record,label="{33\:\ 0x0008|if (r3.mWindow == null) goto L6\l}"];
Node_34 [shape=record,label="{34\:\ 0x000a|setSystemUiFlag(8192)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|r3.mInsetsController.setSystemBarsAppearance(8, 8)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0013}"];
Node_37 [shape=record,label="{37\:\ 0x0015|if (r3.mWindow == null) goto L12\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|unsetSystemUiFlag(8192)\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|r3.mInsetsController.setSystemBarsAppearance(0, 8)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0020|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.core.view.WindowInsetsControllerCompat.Impl30.setAppearanceLightStatusBars((r3v0 'this' androidx.core.view.WindowInsetsControllerCompat$Impl30 A[IMMUTABLE_TYPE, THIS]), (r4v0 'isLight' boolean A[D('isLight' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0008 \-\> B:35:0x000d, CROSS_EDGE: B:39:0x001a \-\> B:40:0x0020, CROSS_EDGE: B:37:0x0015 \-\> B:39:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.WindowInsetsControllerCompat.Impl.setAppearanceLightStatusBars(boolean):void]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_41;
Node_41 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_29;
}

