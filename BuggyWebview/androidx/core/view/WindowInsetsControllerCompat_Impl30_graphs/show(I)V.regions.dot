digraph "CFG forandroidx.core.view.WindowInsetsControllerCompat.Impl30.show(I)V" {
subgraph cluster_Region_1932196146 {
label = "R(2:(1:7)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1040909869 {
label = "IF [B:25:0x0002, B:27:0x0006, B:29:0x000c] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0002|if (r2.mWindow != null) goto L3\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|ADDED_TO_REGION\l|if ((r3 & 8) != 0) goto L5\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|ADDED_TO_REGION\l|if (android.os.Build.VERSION.SDK_INT \< 32) goto L7\l}"];
subgraph cluster_Region_504334806 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x000e|android.view.inputmethod.InputMethodManager android.view.inputmethod.InputMethodManager r0 = (android.view.inputmethod.InputMethodManager) r2.mWindow.getContext().getSystemService(\"input_method\")\lr0.isActive()\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x001f|r2.mInsetsController.show(r3)\l}"];
}
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0004}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0008}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0024}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.core.view.WindowInsetsControllerCompat.Impl30.show((r2v0 'this' androidx.core.view.WindowInsetsControllerCompat$Impl30 A[IMMUTABLE_TYPE, THIS]), (r3v0 'types' int A[D('types' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x000c \-\> B:31:0x001f, CROSS_EDGE: B:27:0x0006 \-\> B:31:0x001f, CROSS_EDGE: B:25:0x0002 \-\> B:31:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.WindowInsetsControllerCompat.Impl.show(int):void]\l}"];
MethodNode -> Node_22;Node_25 -> Node_26;
Node_25 -> Node_31[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_32 -> Node_23;
}

