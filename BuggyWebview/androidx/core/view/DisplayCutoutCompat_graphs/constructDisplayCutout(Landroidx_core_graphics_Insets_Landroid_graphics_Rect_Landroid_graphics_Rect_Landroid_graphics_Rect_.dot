digraph "CFG forandroidx.core.view.DisplayCutoutCompat.constructDisplayCutout(Landroidx\/core\/graphics\/Insets;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroidx\/core\/graphics\/Insets;)Landroid\/view\/DisplayCutout;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000}"];
Node_28 [shape=record,label="{28\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 30) goto L6\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006}"];
Node_30 [shape=record,label="{30\:\ 0x0016|RETURN\l|return androidx.core.view.DisplayCutoutCompat.Api30Impl.createDisplayCutout(r8.toPlatformInsets(), r9, r10, r11, r12, r13.toPlatformInsets())\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017}"];
Node_32 [shape=record,label="{32\:\ 0x001b|if (android.os.Build.VERSION.SDK_INT \< 29) goto L10\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d}"];
Node_34 [shape=record,label="{34\:\ 0x0025|RETURN\l|return androidx.core.view.DisplayCutoutCompat.Api29Impl.createDisplayCutout(r8.toPlatformInsets(), r9, r10, r11, r12)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026}"];
Node_36 [shape=record,label="{36\:\ 0x002a|if (android.os.Build.VERSION.SDK_INT \< 28) goto L23\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|android.graphics.Rect r0 = new android.graphics.Rect(r8.left, r8.top, r8.right, r8.bottom)\ljava.util.ArrayList r1 = new java.util.ArrayList\<\>()\l}"];
Node_38 [shape=record,label="{38\:\ 0x003e|if (r9 == null) goto L15\l}"];
Node_39 [shape=record,label="{39\:\ 0x0040|r1.add(r9)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0043|if (r10 == null) goto L17\l}"];
Node_41 [shape=record,label="{41\:\ 0x0045|r1.add(r10)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0048|if (r11 == null) goto L19\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|r1.add(r11)\l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|if (r12 == null) goto L21\l}"];
Node_45 [shape=record,label="{45\:\ 0x004f|r1.add(r12)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0052}"];
Node_47 [shape=record,label="{47\:\ 0x0056|RETURN\l|return androidx.core.view.DisplayCutoutCompat.Api28Impl.createDisplayCutout(r0, r1)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0057|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static android.view.DisplayCutout androidx.core.view.DisplayCutoutCompat.constructDisplayCutout((r8v0 'safeInsets' androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'boundLeft' android.graphics.Rect A[D('boundLeft' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'boundTop' android.graphics.Rect A[D('boundTop' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'boundRight' android.graphics.Rect A[D('boundRight' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'boundBottom' android.graphics.Rect A[D('boundBottom' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'waterfallInsets' androidx.core.graphics.Insets A[D('waterfallInsets' androidx.core.graphics.Insets), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0025 \-\> B:26:?, CROSS_EDGE: B:47:0x0056 \-\> B:26:?, CROSS_EDGE: B:44:0x004d \-\> B:46:0x0052, CROSS_EDGE: B:42:0x0048 \-\> B:44:0x004d, CROSS_EDGE: B:40:0x0043 \-\> B:42:0x0048, CROSS_EDGE: B:38:0x003e \-\> B:40:0x0043, CROSS_EDGE: B:49:0x0058 \-\> B:26:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_26;
Node_48 -> Node_26;
}

