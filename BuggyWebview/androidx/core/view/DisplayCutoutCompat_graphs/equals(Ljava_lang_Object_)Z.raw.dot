digraph "CFG forandroidx.core.view.DisplayCutoutCompat.equals(Ljava\/lang\/Object;)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('o' java.lang.Object)])  \-\> B:19:0x0004  (LINE:191)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:192)\l0x0003: RETURN  (r0 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('o' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001d  (LINE:194)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.Class) = (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x000a: INVOKE  (r1 I:java.lang.Class) = (r4 I:java.lang.Object A[D('o' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0011 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|0x0011: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)])  (LINE:197)\l0x0012: CHECK_CAST (r0 I:androidx.core.view.DisplayCutoutCompat) = (androidx.core.view.DisplayCutoutCompat) (r0 I:??[OBJECT, ARRAY]) \l0x0014: IGET  (r1 I:android.view.DisplayCutout) = (r3 I:androidx.core.view.DisplayCutoutCompat) androidx.core.view.DisplayCutoutCompat.mDisplayCutout android.view.DisplayCutout  (LINE:198)\l0x0016: IGET  (r2 I:android.view.DisplayCutout) = (r0 I:androidx.core.view.DisplayCutoutCompat A[D('other' androidx.core.view.DisplayCutoutCompat)]) androidx.core.view.DisplayCutoutCompat.mDisplayCutout android.view.DisplayCutout \l0x0018: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r2 I:java.lang.Object) type: STATIC call: androidx.core.util.ObjectsCompat.equals(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x001d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('other' androidx.core.view.DisplayCutoutCompat)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:195)\l0x001e: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('other' androidx.core.view.DisplayCutoutCompat)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:195)\l0x001e: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.DisplayCutoutCompat.equals((r3 'this' I:androidx.core.view.DisplayCutoutCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x001c \-\> B:15:?, CROSS_EDGE: B:26:0x001e \-\> B:15:?, CROSS_EDGE: B:19:0x0004 \-\> B:25:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x001d: r0 'other' Landroidx\/core\/view\/DisplayCutoutCompat;\l  \-1 \-0x001e: r4 'o' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_15;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_27[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_25 -> Node_15;
}

