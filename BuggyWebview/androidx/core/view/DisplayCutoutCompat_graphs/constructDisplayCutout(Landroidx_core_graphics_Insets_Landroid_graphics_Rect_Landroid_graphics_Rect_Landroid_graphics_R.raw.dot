digraph "CFG forandroidx.core.view.DisplayCutoutCompat.constructDisplayCutout(Landroidx\/core\/graphics\/Insets;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroid\/graphics\/Rect;Landroidx\/core\/graphics\/Insets;)Landroid\/view\/DisplayCutout;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:84)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:31:0x0017 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|0x0006: INVOKE  (r2 I:android.graphics.Insets) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) type: VIRTUAL call: androidx.core.graphics.Insets.toPlatformInsets():android.graphics.Insets A[MD:():android.graphics.Insets (m)] (LINE:85)\l0x000a: INVOKE  (r7 I:android.graphics.Insets) = (r13 I:androidx.core.graphics.Insets A[D('waterfallInsets' androidx.core.graphics.Insets)]) type: VIRTUAL call: androidx.core.graphics.Insets.toPlatformInsets():android.graphics.Insets A[MD:():android.graphics.Insets (m)] (LINE:86)\l0x000e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('boundLeft' android.graphics.Rect)])  (LINE:85)\l0x000f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('boundTop' android.graphics.Rect)]) \l0x0010: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY] A[D('boundRight' android.graphics.Rect)]) \l0x0011: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('boundBottom' android.graphics.Rect)]) \l0x0012: INVOKE  (r0 I:android.view.DisplayCutout) = \l  (r2 I:android.graphics.Insets)\l  (r3 I:android.graphics.Rect)\l  (r4 I:android.graphics.Rect)\l  (r5 I:android.graphics.Rect)\l  (r6 I:android.graphics.Rect)\l  (r7 I:android.graphics.Insets)\l type: STATIC call: androidx.core.view.DisplayCutoutCompat.Api30Impl.createDisplayCutout(android.graphics.Insets, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Insets):android.view.DisplayCutout A[MD:(android.graphics.Insets, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Insets):android.view.DisplayCutout (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:android.view.DisplayCutout) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|0x0017: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:87)\l0x0019: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|0x001b: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:35:0x0026 \l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: INVOKE  (r0 I:android.graphics.Insets) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) type: VIRTUAL call: androidx.core.graphics.Insets.toPlatformInsets():android.graphics.Insets A[MD:():android.graphics.Insets (m)] (LINE:88)\l0x0021: INVOKE  (r0 I:android.view.DisplayCutout) = \l  (r0 I:android.graphics.Insets)\l  (r9 I:android.graphics.Rect A[D('boundLeft' android.graphics.Rect)])\l  (r10 I:android.graphics.Rect A[D('boundTop' android.graphics.Rect)])\l  (r11 I:android.graphics.Rect A[D('boundRight' android.graphics.Rect)])\l  (r12 I:android.graphics.Rect A[D('boundBottom' android.graphics.Rect)])\l type: STATIC call: androidx.core.view.DisplayCutoutCompat.Api29Impl.createDisplayCutout(android.graphics.Insets, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect):android.view.DisplayCutout A[MD:(android.graphics.Insets, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect):android.view.DisplayCutout (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:android.view.DisplayCutout) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|0x0026: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:90)\l0x0028: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:48:0x0057 \l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:91)\l0x002e: IGET  (r1 I:int) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int \l0x0030: IGET  (r2 I:int) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.top int \l0x0032: IGET  (r3 I:int) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int \l0x0034: IGET  (r4 I:int) = (r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int \l0x0036: INVOKE  (r0 I:android.graphics.Rect), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int) type: DIRECT call: android.graphics.Rect.\<init\>(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0039: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:93)\l0x003b: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x003e|0x003e: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boundLeft' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0043  (LINE:94)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0040|0x0040: INVOKE  \l  (r1 I:java.util.ArrayList A[D('boundingRects' java.util.ArrayList\<android.graphics.Rect\>)])\l  (r9 I:java.lang.Object A[D('boundLeft' android.graphics.Rect)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:95)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0043|0x0043: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boundTop' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0048  (LINE:97)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0045|0x0045: INVOKE  \l  (r1 I:java.util.ArrayList A[D('boundingRects' java.util.ArrayList\<android.graphics.Rect\>)])\l  (r10 I:java.lang.Object A[D('boundTop' android.graphics.Rect)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:98)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0048|0x0048: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boundRight' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x004d  (LINE:100)\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|0x004a: INVOKE  \l  (r1 I:java.util.ArrayList A[D('boundingRects' java.util.ArrayList\<android.graphics.Rect\>)])\l  (r11 I:java.lang.Object A[D('boundRight' android.graphics.Rect)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:101)\l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|0x004d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boundBottom' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0052  (LINE:103)\l}"];
Node_45 [shape=record,label="{45\:\ 0x004f|0x004f: INVOKE  \l  (r1 I:java.util.ArrayList A[D('boundingRects' java.util.ArrayList\<android.graphics.Rect\>)])\l  (r12 I:java.lang.Object A[D('boundBottom' android.graphics.Rect)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:104)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0052|0x0052: INVOKE  (r2 I:android.view.DisplayCutout) = \l  (r0 I:android.graphics.Rect A[D('safeInsetRect' android.graphics.Rect)])\l  (r1 I:java.util.List A[D('boundingRects' java.util.ArrayList\<android.graphics.Rect\>)])\l type: STATIC call: androidx.core.view.DisplayCutoutCompat.Api28Impl.createDisplayCutout(android.graphics.Rect, java.util.List):android.view.DisplayCutout A[MD:(android.graphics.Rect, java.util.List\<android.graphics.Rect\>):android.view.DisplayCutout (m)] (LINE:106)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0056|RETURN\l|0x0056: RETURN  (r2 I:android.view.DisplayCutout) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0057|RETURN\l|0x0057: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('safeInsetRect' android.graphics.Rect)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:108)\l0x0058: RETURN  (r0 I:android.view.DisplayCutout) \l}"];
MethodNode[shape=record,label="{private static android.view.DisplayCutout androidx.core.view.DisplayCutoutCompat.constructDisplayCutout((r8 I:androidx.core.graphics.Insets A[D('safeInsets' androidx.core.graphics.Insets), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.Rect A[D('boundLeft' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.graphics.Rect A[D('boundTop' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.graphics.Rect A[D('boundRight' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.Rect A[D('boundBottom' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:androidx.core.graphics.Insets A[D('waterfallInsets' androidx.core.graphics.Insets), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0025 \-\> B:26:?, CROSS_EDGE: B:47:0x0056 \-\> B:26:?, CROSS_EDGE: B:44:0x004d \-\> B:46:0x0052, CROSS_EDGE: B:42:0x0048 \-\> B:44:0x004d, CROSS_EDGE: B:40:0x0043 \-\> B:42:0x0048, CROSS_EDGE: B:38:0x003e \-\> B:40:0x0043, CROSS_EDGE: B:49:0x0058 \-\> B:26:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0039\-0x0057: r0 'safeInsetRect' Landroid\/graphics\/Rect;\l  0x003e\-0x0057: r1 'boundingRects' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/graphics\/Rect;\>;\l  \-1 \-0x0058: r8 'safeInsets' Landroidx\/core\/graphics\/Insets;\l  \-1 \-0x0058: r9 'boundLeft' Landroid\/graphics\/Rect;\l  \-1 \-0x0058: r10 'boundTop' Landroid\/graphics\/Rect;\l  \-1 \-0x0058: r11 'boundRight' Landroid\/graphics\/Rect;\l  \-1 \-0x0058: r12 'boundBottom' Landroid\/graphics\/Rect;\l  \-1 \-0x0058: r13 'waterfallInsets' Landroidx\/core\/graphics\/Insets;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_26;
Node_48 -> Node_26;
}

