digraph "CFG forandroidx.core.view.WindowInsetsCompat.hasInsets()Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:int) =  type: STATIC call: androidx.core.view.WindowInsetsCompat.Type.all():int A[MD:():int (m)] (LINE:267)\l0x0004: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r2 I:androidx.core.view.WindowInsetsCompat), (r0 I:int) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getInsets(int):androidx.core.graphics.Insets A[MD:(int):androidx.core.graphics.Insets (m)]\l0x0008: SGET  (r1 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets \l0x000a: INVOKE  (r0 I:boolean) = (r0 I:androidx.core.graphics.Insets), (r1 I:java.lang.Object) type: VIRTUAL call: androidx.core.graphics.Insets.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|0x0010: INVOKE  (r0 I:int) =  type: STATIC call: androidx.core.view.WindowInsetsCompat.Type.all():int A[MD:():int (m)] (LINE:268)\l0x0014: INVOKE  (r1 I:int) =  type: STATIC call: androidx.core.view.WindowInsetsCompat.Type.ime():int A[MD:():int (m)]\l0x0018: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (r1 I:??[int, boolean, short, byte, char]) \l0x0019: INVOKE  (r0 I:androidx.core.graphics.Insets) = (r2 I:androidx.core.view.WindowInsetsCompat), (r0 I:int) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getInsetsIgnoringVisibility(int):androidx.core.graphics.Insets A[MD:(int):androidx.core.graphics.Insets (m)]\l0x001d: SGET  (r1 I:androidx.core.graphics.Insets) =  androidx.core.graphics.Insets.NONE androidx.core.graphics.Insets \l0x001f: INVOKE  (r0 I:boolean) = (r0 I:androidx.core.graphics.Insets), (r1 I:java.lang.Object) type: VIRTUAL call: androidx.core.graphics.Insets.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|0x0025: INVOKE  (r0 I:androidx.core.view.DisplayCutoutCompat) = (r2 I:androidx.core.view.WindowInsetsCompat) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getDisplayCutout():androidx.core.view.DisplayCutoutCompat A[MD:():androidx.core.view.DisplayCutoutCompat (m)] (LINE:269)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002c \l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|SYNTHETIC\lRETURN\l|0x002c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002f: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:267)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: RETURN  (r0 I:boolean)  (LINE:267)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.WindowInsetsCompat.hasInsets((r2 'this' I:androidx.core.view.WindowInsetsCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x002e \-\> B:24:0x002f, CROSS_EDGE: B:18:0x0023 \-\> B:23:0x002e, CROSS_EDGE: B:16:0x000e \-\> B:23:0x002e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23[style=dashed];
Node_22 -> Node_14;
Node_23 -> Node_14;
}

