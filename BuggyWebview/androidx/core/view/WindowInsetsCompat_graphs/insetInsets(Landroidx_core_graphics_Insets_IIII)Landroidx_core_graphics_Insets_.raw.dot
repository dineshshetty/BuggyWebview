digraph "CFG forandroidx.core.view.WindowInsetsCompat.insetInsets(Landroidx\/core\/graphics\/Insets;IIII)Landroidx\/core\/graphics\/Insets;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int  (LINE:1337)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) \- (r6 I:int A[D('left' int)]) \l0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0008: IGET  (r2 I:int) = (r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.top int  (LINE:1338)\l0x000a: ARITH  (r2 I:int) = (r2 I:int) \- (r7 I:int A[D('top' int)]) \l0x000b: INVOKE  (r2 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x000f: IGET  (r3 I:int) = (r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int  (LINE:1339)\l0x0011: ARITH  (r3 I:int) = (r3 I:int) \- (r8 I:int A[D('right' int)]) \l0x0012: INVOKE  (r3 I:int) = (r1 I:int), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0016: IGET  (r4 I:int) = (r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.bottom int  (LINE:1340)\l0x0018: ARITH  (r4 I:int) = (r4 I:int) \- (r9 I:int A[D('bottom' int)]) \l0x0019: INVOKE  (r1 I:int) = (r1 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newLeft' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('left' int)])  \-\> B:18:0x0026  (LINE:1341)\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newTop' int)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('top' int)])  \-\> B:18:0x0026 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newRight' int)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('right' int)])  \-\> B:18:0x0026 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newBottom' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bottom' int)])  \-\> B:18:0x0026 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0025|RETURN\l|0x0025: RETURN  (r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets)])  (LINE:1342)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|0x0026: INVOKE  (r4 I:androidx.core.graphics.Insets) = \l  (r0 I:int A[D('newLeft' int)])\l  (r2 I:int A[D('newTop' int)])\l  (r3 I:int A[D('newRight' int)])\l  (r1 I:int A[D('newBottom' int)])\l type: STATIC call: androidx.core.graphics.Insets.of(int, int, int, int):androidx.core.graphics.Insets A[MD:(int, int, int, int):androidx.core.graphics.Insets (m)] (LINE:1344)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|RETURN\l|0x002a: RETURN  (r4 I:androidx.core.graphics.Insets) \l}"];
MethodNode[shape=record,label="{public static androidx.core.graphics.Insets androidx.core.view.WindowInsetsCompat.insetInsets((r5 I:androidx.core.graphics.Insets A[D('insets' androidx.core.graphics.Insets), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x002a \-\> B:11:?, CROSS_EDGE: B:15:0x0021 \-\> B:18:0x0026, CROSS_EDGE: B:14:0x001f \-\> B:18:0x0026, CROSS_EDGE: B:13:0x001d \-\> B:18:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x002a: r0 'newLeft' I\l  0x001d\-0x002a: r1 'newBottom' I\l  0x000f\-0x002a: r2 'newTop' I\l  0x0016\-0x002a: r3 'newRight' I\l  \-1 \-0x002a: r5 'insets' Landroidx\/core\/graphics\/Insets;\l  \-1 \-0x002a: r6 'left' I\l  \-1 \-0x002a: r7 'top' I\l  \-1 \-0x002a: r8 'right' I\l  \-1 \-0x002a: r9 'bottom' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

