digraph "CFG forandroidx.core.view.AccessibilityDelegateCompat.isSpanStillValid(Landroid\/text\/style\/ClickableSpan;Landroid\/view\/View;)Z" {
subgraph cluster_Region_2123631456 {
label = "R(1:(2:(3:2|(1:(2:(1:10)|(1:8)))|13)|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_431917308 {
label = "R(2:(3:2|(1:(2:(1:10)|(1:8)))|13)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_716819349 {
label = "IF [B:21:0x0000] THEN: R(3:2|(1:(2:(1:10)|(1:8)))|13) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|if (r5 != null) goto L2\l}"];
subgraph cluster_Region_2145062386 {
label = "R(3:2|(1:(2:(1:10)|(1:8)))|13)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0002|android.view.accessibility.AccessibilityNodeInfo android.view.accessibility.AccessibilityNodeInfo r0 = r6.createAccessibilityNodeInfo()\landroid.text.style.ClickableSpan[] android.text.style.ClickableSpan[] r1 = androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans(r0.getText())\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1224510267 {
label = "LOOP:0: (1:(2:(1:10)|(1:8)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000f|LOOP_START\lLOOP:0: B:23:0x000f\-\>B:30:0x001e\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:22:0x0002, B:30:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L4\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|ADDED_TO_REGION\l|if (r2 \< r1.length) goto L6\l}"];
subgraph cluster_Region_432418037 {
label = "R(1:(2:(1:10)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1196948390 {
label = "R(2:(1:10)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1979234667 {
label = "IF [B:27:0x001a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001a|if (r5.equals(r1[r2]) != false) goto L9\l}"];
subgraph cluster_Region_717451992 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001c|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1690879929 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001e|LOOP_END\lLOOP:0: B:23:0x000f\-\>B:30:0x001e\l|r2++\l}"];
}
}
}
}
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
}
}
subgraph cluster_Region_1321394550 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0021|RETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0011}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0014}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001c|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0021|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0021|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.core.view.AccessibilityDelegateCompat.isSpanStillValid((r4v0 'this' androidx.core.view.AccessibilityDelegateCompat A[IMMUTABLE_TYPE, THIS]), (r5v0 'span' android.text.style.ClickableSpan A[D('span' android.text.style.ClickableSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x001e \-\> B:23:0x000f, CROSS_EDGE: B:32:0x0022 \-\> B:20:?, CROSS_EDGE: B:23:0x000f \-\> B:31:0x0021, CROSS_EDGE: B:21:0x0000 \-\> B:31:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_21 -> Node_31[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_35[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_33[style=dashed];
Node_27 -> Node_30[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_20;
Node_30 -> Node_23;
Node_36 -> Node_20;
Node_31 -> Node_20;
Node_19 -> Node_21;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_34 -> Node_28;
Node_33 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_20;
}

