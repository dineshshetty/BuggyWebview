digraph "CFG forandroidx.core.view.AccessibilityDelegateCompat.isSpanStillValid(Landroid\/text\/style\/ClickableSpan;Landroid\/view\/View;)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('span' android.text.style.ClickableSpan)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0021  (LINE:397)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: INVOKE  (r0 I:android.view.accessibility.AccessibilityNodeInfo) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.createAccessibilityNodeInfo():android.view.accessibility.AccessibilityNodeInfo A[MD:():android.view.accessibility.AccessibilityNodeInfo (c)] (LINE:398)\l0x0006: INVOKE  (r1 I:java.lang.CharSequence) = (r0 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)]) type: VIRTUAL call: android.view.accessibility.AccessibilityNodeInfo.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:399)\l0x000a: INVOKE  (r1 I:android.text.style.ClickableSpan[]) = (r1 I:java.lang.CharSequence) type: STATIC call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans(java.lang.CharSequence):android.text.style.ClickableSpan[] A[MD:(java.lang.CharSequence):android.text.style.ClickableSpan[] (m)]\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:400)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|LOOP_START\lLOOP:0: B:23:0x000f\-\>B:30:0x001e\l|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spans' android.text.style.ClickableSpan[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0021 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: ARRAY_LENGTH  (r3 I:int) = (r1 I:??[] A[D('spans' android.text.style.ClickableSpan[])]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:33:0x0021 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0014|0x0014: AGET  (r3 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY][] A[D('spans' android.text.style.ClickableSpan[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:401)\l0x0016: INVOKE  (r3 I:boolean) = (r5 I:java.lang.Object A[D('span' android.text.style.ClickableSpan)]), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001e \l}"];
Node_30 [shape=record,label="{30\:\ 0x001e|LOOP_END\lLOOP:0: B:23:0x000f\-\>B:30:0x001e\l|0x001e: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:400)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|RETURN\l|0x001c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:402)\l0x001d: RETURN  (r3 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('info' android.view.accessibility.AccessibilityNodeInfo)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:406)\l0x0022: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('info' android.view.accessibility.AccessibilityNodeInfo)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:406)\l0x0022: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('info' android.view.accessibility.AccessibilityNodeInfo)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:406)\l0x0022: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean androidx.core.view.AccessibilityDelegateCompat.isSpanStillValid((r4 'this' I:androidx.core.view.AccessibilityDelegateCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:android.text.style.ClickableSpan A[D('span' android.text.style.ClickableSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x001e \-\> B:23:0x000f, CROSS_EDGE: B:32:0x0022 \-\> B:20:?, CROSS_EDGE: B:23:0x000f \-\> B:31:0x0021, CROSS_EDGE: B:21:0x0000 \-\> B:31:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0021: r0 'info' Landroid\/view\/accessibility\/AccessibilityNodeInfo;\l  0x000e\-0x0021: r1 'spans' [Landroid\/text\/style\/ClickableSpan;\l  0x000f\-0x0021: r2 'i' I\l  \-1 \-0x0022: r5 'span' Landroid\/text\/style\/ClickableSpan;\l  \-1 \-0x0022: r6 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_30;
Node_27 -> Node_34[style=dashed];
Node_30 -> Node_23;
Node_34 -> Node_28;
Node_28 -> Node_20;
Node_33 -> Node_36;
Node_36 -> Node_20;
Node_35 -> Node_37;
Node_37 -> Node_20;
Node_31 -> Node_20;
}

