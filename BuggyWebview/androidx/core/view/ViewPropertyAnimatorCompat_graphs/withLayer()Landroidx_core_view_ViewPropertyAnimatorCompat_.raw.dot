digraph "CFG forandroidx.core.view.ViewPropertyAnimatorCompat.withLayer()Landroidx\/core\/view\/ViewPropertyAnimatorCompat;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.View\>) = (r3 I:androidx.core.view.ViewPropertyAnimatorCompat) androidx.core.view.ViewPropertyAnimatorCompat.mView java.lang.ref.WeakReference  (LINE:724)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)]\l0x0006: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0027 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:725)\l0x000d: CONST  (r2 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:25:0x0019 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: INVOKE  (r0 I:android.view.ViewPropertyAnimator) = (r1 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.animate():android.view.ViewPropertyAnimator A[MD:():android.view.ViewPropertyAnimator (c)] (LINE:726)\l0x0015: INVOKE  (r0 I:android.view.ViewPropertyAnimator A[D('animator' android.view.ViewPropertyAnimator)]) type: STATIC call: androidx.core.view.ViewPropertyAnimatorCompat.Api16Impl.withLayer(android.view.ViewPropertyAnimator):android.view.ViewPropertyAnimator A[MD:(android.view.ViewPropertyAnimator):android.view.ViewPropertyAnimator (m)] (LINE:727)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|0x0019: INVOKE  (r0 I:int) = (r1 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLayerType():int A[MD:():int (c)] (LINE:729)\l0x001d: IPUT  (r0 I:int), (r3 I:androidx.core.view.ViewPropertyAnimatorCompat) androidx.core.view.ViewPropertyAnimatorCompat.mOldLayerType int \l0x001f: NEW_INSTANCE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14) =  androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14  (LINE:730)\l0x0021: INVOKE  \l  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14)\l  (r3 I:androidx.core.view.ViewPropertyAnimatorCompat)\l type: DIRECT call: androidx.core.view.ViewPropertyAnimatorCompat.ViewPropertyAnimatorListenerApi14.\<init\>(androidx.core.view.ViewPropertyAnimatorCompat):void A[MD:(androidx.core.view.ViewPropertyAnimatorCompat):void (m)]\l0x0024: INVOKE  \l  (r3 I:androidx.core.view.ViewPropertyAnimatorCompat)\l  (r1 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:androidx.core.view.ViewPropertyAnimatorListener)\l type: DIRECT call: androidx.core.view.ViewPropertyAnimatorCompat.setListenerInternal(android.view.View, androidx.core.view.ViewPropertyAnimatorListener):void A[MD:(android.view.View, androidx.core.view.ViewPropertyAnimatorListener):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|RETURN\l|0x0027: RETURN  (r3 I:androidx.core.view.ViewPropertyAnimatorCompat)  (LINE:733)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.withLayer((r3 'this' I:androidx.core.view.ViewPropertyAnimatorCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0019 \-\> B:26:0x0027, CROSS_EDGE: B:21:0x0009 \-\> B:26:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0018: r0 'animator' Landroid\/view\/ViewPropertyAnimator;\l  0x0009\-0x0027: r1 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_19;
}

