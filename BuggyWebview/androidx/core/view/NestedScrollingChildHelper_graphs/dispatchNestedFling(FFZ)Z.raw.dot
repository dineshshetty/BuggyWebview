digraph "CFG forandroidx.core.view.NestedScrollingChildHelper.dispatchNestedFling(FFZ)Z" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r2 I:androidx.core.view.NestedScrollingChildHelper) type: VIRTUAL call: androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():boolean A[MD:():boolean (m)] (LINE:348)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0014 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|0x0007: INVOKE  (r0 I:android.view.ViewParent) = (r2 I:androidx.core.view.NestedScrollingChildHelper), (r1 I:int) type: DIRECT call: androidx.core.view.NestedScrollingChildHelper.getNestedScrollingParentForType(int):android.view.ViewParent A[MD:(int):android.view.ViewParent (m)] (LINE:349)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.ViewParent)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0014  (LINE:350)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IGET  (r1 I:android.view.View) = (r2 I:androidx.core.view.NestedScrollingChildHelper) androidx.core.view.NestedScrollingChildHelper.mView android.view.View  (LINE:351)\l0x000f: INVOKE  (r1 I:boolean) = \l  (r0 I:android.view.ViewParent A[D('parent' android.view.ViewParent)])\l  (r1 I:android.view.View)\l  (r3 I:float A[D('velocityX' float)])\l  (r4 I:float A[D('velocityY' float)])\l  (r5 I:boolean A[D('consumed' boolean)])\l type: STATIC call: androidx.core.view.ViewParentCompat.onNestedFling(android.view.ViewParent, android.view.View, float, float, boolean):boolean A[MD:(android.view.ViewParent, android.view.View, float, float, boolean):boolean (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|RETURN\l|0x0013: RETURN  (r1 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|RETURN\l|0x0014: RETURN  (r1 I:boolean)  (LINE:355)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedFling((r2 'this' I:androidx.core.view.NestedScrollingChildHelper A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[D('velocityX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('velocityY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('consumed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0014 \-\> B:10:?, CROSS_EDGE: B:12:0x0005 \-\> B:17:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0014: r0 'parent' Landroid\/view\/ViewParent;\l  \-1 \-0x0014: r3 'velocityX' F\l  \-1 \-0x0014: r4 'velocityY' F\l  \-1 \-0x0014: r5 'consumed' Z\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

