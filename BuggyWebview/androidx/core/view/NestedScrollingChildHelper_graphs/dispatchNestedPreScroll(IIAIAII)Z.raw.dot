digraph "CFG forandroidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll(II[I[II)Z" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:302)\l0x0001: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('offsetInWindow' int[])]) \l0x0003: INVOKE  (r2 I:boolean) = (r15 I:androidx.core.view.NestedScrollingChildHelper) type: VIRTUAL call: androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():boolean A[MD:():boolean (m)]\l0x0007: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0068 \l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|0x000a: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)])  (LINE:303)\l0x000c: INVOKE  (r10 I:android.view.ViewParent) = (r15 I:androidx.core.view.NestedScrollingChildHelper), (r2 I:int) type: DIRECT call: androidx.core.view.NestedScrollingChildHelper.getNestedScrollingParentForType(int):android.view.ViewParent A[MD:(int):android.view.ViewParent (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|0x0010: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.ViewParent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0013  (LINE:304)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|RETURN\l|0x0012: RETURN  (r3 I:boolean)  (LINE:305)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0013|0x0013: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:308)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0014|0x0014: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dx' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0020 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0016|0x0016: IF  (r17 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dy' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0019 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x006a  (LINE:330)\l}"];
Node_44 [shape=record,label="{44\:\ 0x001b|0x001b: APUT  (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char])  (LINE:331)\l0x001d: APUT  (r1 I:??[int, float][]), (r11 I:??[int, short, byte, char]), (r3 I:??[int, float, short, byte, char])  (LINE:332)\l}"];
Node_62 [shape=record,label="{62\:\ 0x006a|RETURN\l|0x006a: RETURN  (r3 I:boolean)  (LINE:335)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|0x0020: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:309)\l0x0021: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:310)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0030  (LINE:311)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0024|0x0024: IGET  (r6 I:android.view.View) = (r0 I:androidx.core.view.NestedScrollingChildHelper) androidx.core.view.NestedScrollingChildHelper.mView android.view.View  (LINE:312)\l0x0026: INVOKE  (r6 I:android.view.View), (r1 I:int[]) type: VIRTUAL call: android.view.View.getLocationInWindow(int[]):void A[MD:(int[]):void (c)]\l0x0029: AGET  (r4 I:??[int, float, short, byte, char] A[D('startX' int)]) = (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char])  (LINE:313)\l0x002b: AGET  (r5 I:??[int, float, short, byte, char] A[D('startY' int)]) = (r1 I:??[int, float][]), (r11 I:??[int, short, byte, char])  (LINE:314)\l0x002d: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startX' int)]) \l0x002e: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startY' int)]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0032|0x0032: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumed' int[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x003a  (LINE:317)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0034|0x0034: INVOKE  (r4 I:int[]) = (r15 I:androidx.core.view.NestedScrollingChildHelper) type: DIRECT call: androidx.core.view.NestedScrollingChildHelper.getTempNestedScrollConsumed():int[] A[MD:():int[] (m)] (LINE:318)\l0x0038: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|0x003c: APUT  \l  (r14 I:??[int, float][] A[D('consumed' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char])\l  (LINE:320)\l0x003e: APUT  \l  (r14 I:??[int, float][] A[D('consumed' int[])])\l  (r11 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char])\l  (LINE:321)\l0x0040: IGET  (r5 I:android.view.View) = (r0 I:androidx.core.view.NestedScrollingChildHelper) androidx.core.view.NestedScrollingChildHelper.mView android.view.View  (LINE:322)\l0x0042: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)]) \l0x0043: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dx' int)]) \l0x0045: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dy' int)]) \l0x0047: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY] A[D('consumed' int[])]) \l0x0048: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)]) \l0x004a: INVOKE  (r4 I:android.view.ViewParent), (r5 I:android.view.View), (r6 I:int), (r7 I:int), (r8 I:int[]), (r9 I:int) type: STATIC call: androidx.core.view.ViewParentCompat.onNestedPreScroll(android.view.ViewParent, android.view.View, int, int, int[], int):void A[MD:(android.view.ViewParent, android.view.View, int, int, int[], int):void (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x004d|0x004d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x005e  (LINE:324)\l}"];
Node_54 [shape=record,label="{54\:\ 0x004f|0x004f: IGET  (r4 I:android.view.View) = (r0 I:androidx.core.view.NestedScrollingChildHelper) androidx.core.view.NestedScrollingChildHelper.mView android.view.View  (LINE:325)\l0x0051: INVOKE  (r4 I:android.view.View), (r1 I:int[]) type: VIRTUAL call: android.view.View.getLocationInWindow(int[]):void A[MD:(int[]):void (c)]\l0x0054: AGET  (r4 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char])  (LINE:326)\l0x0056: ARITH  (r4 I:int) = (r4 I:int) \- (r12 I:int A[D('startX' int)]) \l0x0057: APUT  (r1 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x0059: AGET  (r4 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r11 I:??[int, short, byte, char])  (LINE:327)\l0x005b: ARITH  (r4 I:int) = (r4 I:int) \- (r13 I:int A[D('startY' int)]) \l0x005c: APUT  (r1 I:??[int, float][]), (r11 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x005e|0x005e: AGET  (r4 I:??[int, float, short, byte, char]) = (r14 I:??[int, float][] A[D('consumed' int[])]), (r3 I:??[int, short, byte, char])  (LINE:329)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0060|0x0060: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0066 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0062|0x0062: AGET  (r4 I:??[int, float, short, byte, char]) = (r14 I:??[int, float][] A[D('consumed' int[])]), (r11 I:??[int, short, byte, char]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0064|0x0064: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:? \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x0067: RETURN  (r3 I:boolean) A[SYNTHETIC]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0066|RETURN\lORIG_RETURN\l|0x0066: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0067: RETURN  (r3 I:boolean) \l}"];
Node_51 [shape=record,label="{51\:\ 0x003a|0x003a: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('consumed' int[])])  (LINE:317)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0030|0x0030: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startX' int)])  (LINE:311)\l0x0031: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startY' int)]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0068|0x0068: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)])  (LINE:302)\l}"];
MethodNode[shape=record,label="{public boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll((r15 'this' I:androidx.core.view.NestedScrollingChildHelper A[IMMUTABLE_TYPE, THIS]), (r16 I:int A[D('dx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('dy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int[] A[D('consumed' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int[] A[D('offsetInWindow' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:62:0x006a \-\> B:33:?, CROSS_EDGE: B:43:0x0019 \-\> B:62:0x006a, CROSS_EDGE: B:60:0x0067 \-\> B:33:?, CROSS_EDGE: B:58:0x0064 \-\> B:60:0x0067, CROSS_EDGE: B:56:0x0060 \-\> B:59:0x0066, CROSS_EDGE: B:53:0x004d \-\> B:55:0x005e, CROSS_EDGE: B:51:0x003a \-\> B:52:0x003c, CROSS_EDGE: B:48:0x0030 \-\> B:49:0x0032, CROSS_EDGE: B:40:0x0014 \-\> B:45:0x0020, CROSS_EDGE: B:61:0x0068 \-\> B:62:0x006a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0032: r4 'startX' I\l  0x0022\-0x0032: r5 'startY' I\l  \-1 \-0x0039: r18 'consumed' [I\l  0x0039\-0x003a: r4 'consumed' [I\l  0x003a\-0x003c: r18 'consumed' [I\l  0x0010\-0x0068: r10 'parent' Landroid\/view\/ViewParent;\l  0x0032\-0x0068: r12 'startX' I\l  0x0032\-0x0068: r13 'startY' I\l  0x003c\-0x0068: r14 'consumed' [I\l  \-1 \-0x006a: r16 'dx' I\l  \-1 \-0x006a: r17 'dy' I\l  0x0068\-0x006a: r18 'consumed' [I\l  \-1 \-0x006a: r19 'offsetInWindow' [I\l  \-1 \-0x006a: r20 'type' I\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_61;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_33;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_43;
Node_41 -> Node_45[style=dashed];
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_62;
Node_44 -> Node_62;
Node_62 -> Node_33;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_59;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_63;
Node_63 -> Node_33;
Node_59 -> Node_33;
Node_51 -> Node_52;
Node_48 -> Node_49;
Node_61 -> Node_62;
}

