digraph "CFG forandroidx.core.view.MenuKt.minusAssign(Landroid\/view\/Menu;Landroid\/view\/MenuItem;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('$this$minusAssign' android.view.Menu)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"item\" \l0x0007: INVOKE  (r3 I:java.lang.Object A[D('item' android.view.MenuItem)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:int) = (r3 I:android.view.MenuItem A[D('item' android.view.MenuItem)]) type: INTERFACE call: android.view.MenuItem.getItemId():int A[MD:():int (c)] (LINE:43)\l0x000f: INVOKE  (r2 I:android.view.Menu A[D('$this$minusAssign' android.view.Menu)]), (r1 I:int) type: INTERFACE call: android.view.Menu.removeItem(int):void A[MD:(int):void (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|RETURN\l|0x0012: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static final void androidx.core.view.MenuKt.minusAssign((r2 I:android.view.Menu A[D('$this$minusAssign' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.MenuItem A[D('item' android.view.MenuItem), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  0x000b\-0x0012: r0 '$i$f$minusAssign' I\l  \-1 \-0x0012: r2 '$this$minusAssign' Landroid\/view\/Menu;\l  \-1 \-0x0012: r3 'item' Landroid\/view\/MenuItem;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

