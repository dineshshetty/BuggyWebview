digraph "CFG forandroidx.cardview.widget.CardView.onMeasure(II)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: SGET  (r0 I:androidx.cardview.widget.CardViewImpl) =  androidx.cardview.widget.CardView.IMPL androidx.cardview.widget.CardViewImpl  (LINE:232)\l0x0002: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.cardview.widget.CardViewApi21Impl \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x004e \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: INVOKE  (r1 I:int) = (r6 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:233)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: SWITCH  (r1 I:?? A[D('widthMode' int)])\l case \-2147483648: goto B:23:0x000e\l case 1073741824: goto B:23:0x000e\l default: goto B:24:0x0028  (LINE:234)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IGET  (r2 I:androidx.cardview.widget.CardViewDelegate) = (r5 I:androidx.cardview.widget.CardView) androidx.cardview.widget.CardView.mCardViewDelegate androidx.cardview.widget.CardViewDelegate  (LINE:237)\l0x0010: INVOKE  (r2 I:float) = (r0 I:androidx.cardview.widget.CardViewImpl), (r2 I:androidx.cardview.widget.CardViewDelegate) type: INTERFACE call: androidx.cardview.widget.CardViewImpl.getMinWidth(androidx.cardview.widget.CardViewDelegate):float A[MD:(androidx.cardview.widget.CardViewDelegate):float (m)]\l0x0014: CAST (r2 I:double) = (double) (r2 I:float) \l0x0015: INVOKE  (r2 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)]\l0x0019: CAST (r2 I:int) = (int) (r2 I:double) \l0x001b: INVOKE  (r3 I:int) = (r6 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:239)\l0x001f: INVOKE  (r3 I:int) = (r2 I:int A[D('minWidth' int)]), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:238)\l0x0023: INVOKE  (r6 I:int A[D('widthMeasureSpec' int)]) = (r3 I:int), (r1 I:int A[D('widthMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: INVOKE  (r2 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:246)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|0x002c: SWITCH  (r2 I:?? A[D('heightMode' int)])\l case \-2147483648: goto B:27:0x0030\l case 1073741824: goto B:27:0x0030\l default: goto B:28:0x004a  (LINE:247)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0030|0x0030: IGET  (r3 I:androidx.cardview.widget.CardViewDelegate) = (r5 I:androidx.cardview.widget.CardView) androidx.cardview.widget.CardView.mCardViewDelegate androidx.cardview.widget.CardViewDelegate  (LINE:250)\l0x0032: INVOKE  (r0 I:float) = (r0 I:androidx.cardview.widget.CardViewImpl), (r3 I:androidx.cardview.widget.CardViewDelegate) type: INTERFACE call: androidx.cardview.widget.CardViewImpl.getMinHeight(androidx.cardview.widget.CardViewDelegate):float A[MD:(androidx.cardview.widget.CardViewDelegate):float (m)]\l0x0036: CAST (r3 I:double) = (double) (r0 I:float) \l0x0037: INVOKE  (r3 I:double) = (r3 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)]\l0x003b: CAST (r0 I:int) = (int) (r3 I:double) \l0x003d: INVOKE  (r3 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:252)\l0x0041: INVOKE  (r3 I:int) = (r0 I:int A[D('minHeight' int)]), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:251)\l0x0045: INVOKE  (r7 I:int A[D('heightMeasureSpec' int)]) = (r3 I:int), (r2 I:int A[D('heightMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x004a|0x004a: INVOKE  (r5 I:android.widget.FrameLayout), (r6 I:int A[D('widthMeasureSpec' int)]), (r7 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:258)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0051: RETURN   A[SYNTHETIC] (LINE:262)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x004e|0x004e: INVOKE  (r5 I:android.widget.FrameLayout), (r6 I:int A[D('widthMeasureSpec' int)]), (r7 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:260)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0051|RETURN\lORIG_RETURN\l|0x0051: RETURN    (LINE:262)\l}"];
MethodNode[shape=record,label="{public void androidx.cardview.widget.CardView.onMeasure((r5 'this' I:androidx.cardview.widget.CardView A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x002c \-\> B:28:0x004a, CROSS_EDGE: B:21:0x000a \-\> B:24:0x0028, CROSS_EDGE: B:29:0x004e \-\> B:30:0x0051\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0028: r2 'minWidth' I\l  0x003c\-0x004a: r0 'minHeight' I\l  0x000a\-0x004d: r1 'widthMode' I\l  0x002c\-0x004d: r2 'heightMode' I\l  \-1 \-0x0065: r6 'widthMeasureSpec' I\l  \-1 \-0x0065: r7 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_31;
Node_31 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

