digraph "CFG forandroidx.cardview.widget.RoundRectDrawable.onStateChange([I)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|android.content.res.ColorStateList r0 = r5.mBackground\lint r0 = r0.getColorForState(r6, r0.getDefaultColor())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|if (r0 == r5.mPaint.getColor()) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|r1 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|PHI: r1 \l  PHI: (r1v4 'colorChanged' boolean) = (r1v3 'colorChanged' boolean), (r1v5 'colorChanged' boolean) binds: [B:20:0x0015, B:19:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L6\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|r5.mPaint.setColor(r0)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|android.content.res.ColorStateList r3 = r5.mTint\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|if (r3 == null) goto L13\l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|android.graphics.PorterDuff$Mode r4 = r5.mTintMode\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|if (r4 == null) goto L13\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|r5.mTintFilter = createTintFilter(r3, r4)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b|RETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x002c|RETURN\l|return r1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|r1 = false\l}"];
MethodNode[shape=record,label="{protected boolean androidx.cardview.widget.RoundRectDrawable.onStateChange((r5v0 'this' androidx.cardview.widget.RoundRectDrawable A[IMMUTABLE_TYPE, THIS]), (r6v0 'stateSet' int[] A[D('stateSet' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x002c \-\> B:16:?, CROSS_EDGE: B:24:0x001f \-\> B:29:0x002c, CROSS_EDGE: B:21:0x0016 \-\> B:23:0x001d, CROSS_EDGE: B:20:0x0015 \-\> B:21:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.onStateChange(int[]):boolean\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_20 -> Node_21;
}

