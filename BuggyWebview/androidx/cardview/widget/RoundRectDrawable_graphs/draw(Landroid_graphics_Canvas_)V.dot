digraph "CFG forandroidx.cardview.widget.RoundRectDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.graphics.Paint r0 = r4.mPaint\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (r4.mTintFilter == null) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006}"];
Node_18 [shape=record,label="{18\:\ 0x000a|if (r0.getColorFilter() != null) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|r0.setColorFilter(r4.mTintFilter)\lr1 = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|PHI: r1 \l  PHI: (r1v2 'clearColorFilter' boolean) = (r1v1 'clearColorFilter' boolean), (r1v5 'clearColorFilter' boolean) binds: [B:20:0x0013, B:19:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.RectF r2 = r4.mBoundsF\lfloat r3 = r4.mRadius\lr5.drawRoundRect(r2, r3, r3, r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|if (r1 == false) goto L11\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|r0.setColorFilter(null)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|r1 = false\l}"];
MethodNode[shape=record,label="{public void androidx.cardview.widget.RoundRectDrawable.draw((r4v0 'this' androidx.cardview.widget.RoundRectDrawable A[IMMUTABLE_TYPE, THIS]), (r5v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x001b \-\> B:24:0x0021, CROSS_EDGE: B:20:0x0013 \-\> B:21:0x0014, CROSS_EDGE: B:16:0x0004 \-\> B:20:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
Node_20 -> Node_21;
}

