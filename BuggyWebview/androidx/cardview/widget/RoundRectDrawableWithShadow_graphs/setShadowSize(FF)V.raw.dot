digraph "CFG forandroidx.cardview.widget.RoundRectDrawableWithShadow.setShadowSize(FF)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \". Must be \>= 0\"  (LINE:142)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CMP_G  (r2 I:int) = (r5 I:float A[D('shadowSize' float)]), (r1 I:float) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|0x0005: IF  (r2 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:42:0x0061 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|0x0007: CMP_G  (r1 I:int) = (r6 I:float A[D('maxShadowSize' float)]), (r1 I:float)  (LINE:146)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: IF  (r1 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:40:0x0047 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow), (r5 I:float A[D('shadowSize' float)]) type: DIRECT call: androidx.cardview.widget.RoundRectDrawableWithShadow.toEven(float):int A[MD:(float):int (m)] (LINE:150)\l0x000f: CAST (r5 I:float A[D('shadowSize' float)]) = (float) (r0 I:int) \l0x0010: INVOKE  (r0 I:int) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow), (r6 I:float A[D('maxShadowSize' float)]) type: DIRECT call: androidx.cardview.widget.RoundRectDrawableWithShadow.toEven(float):int A[MD:(float):int (m)] (LINE:151)\l0x0014: CAST (r6 I:float A[D('maxShadowSize' float)]) = (float) (r0 I:int) \l0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:152)\l0x0016: CMP_L  (r1 I:int) = (r5 I:float A[D('shadowSize' float)]), (r6 I:float A[D('maxShadowSize' float)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|0x0018: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:33:0x0021 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|0x001a: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('shadowSize' float)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxShadowSize' float)])  (LINE:153)\l0x001b: IGET  (r1 I:boolean) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mPrintedShadowClipWarning boolean  (LINE:154)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0021 \l}"];
Node_32 [shape=record,label="{32\:\ 0x001f|0x001f: IPUT  (r0 I:boolean), (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mPrintedShadowClipWarning boolean  (LINE:155)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|0x0021: IGET  (r1 I:float) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mRawShadowSize float  (LINE:158)\l0x0023: CMP_L  (r1 I:int) = (r1 I:float), (r5 I:float A[D('shadowSize' float)]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002e \l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|0x0027: IGET  (r1 I:float) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mRawMaxShadowSize float \l0x0029: CMP_L  (r1 I:int) = (r1 I:float), (r6 I:float A[D('maxShadowSize' float)]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|0x002b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002e \l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:159)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|0x002e: IPUT  (r5 I:float A[D('shadowSize' float)]), (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mRawShadowSize float  (LINE:161)\l0x0030: IPUT  (r6 I:float A[D('maxShadowSize' float)]), (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mRawMaxShadowSize float  (LINE:162)\l0x0032: CONST  (r1 I:??[int, float, short, byte, char]) = (1069547520(0x3fc00000, float:1.5) ??[int, float, short, byte, char])  (LINE:163)\l0x0034: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float A[D('shadowSize' float)]) \l0x0036: IGET  (r2 I:int) = (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mInsetShadow int \l0x0038: CAST (r2 I:float) = (float) (r2 I:int) \l0x0039: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x003a: CONST  (r2 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x003c: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l0x003d: CAST (r1 I:int) = (int) (r1 I:float) \l0x003e: CAST (r1 I:float) = (float) (r1 I:int) \l0x003f: IPUT  (r1 I:float), (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mShadowSize float \l0x0041: IPUT  (r0 I:boolean), (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) androidx.cardview.widget.RoundRectDrawableWithShadow.mDirty boolean  (LINE:164)\l0x0043: INVOKE  (r4 I:androidx.cardview.widget.RoundRectDrawableWithShadow) type: VIRTUAL call: androidx.cardview.widget.RoundRectDrawableWithShadow.invalidateSelf():void A[MD:():void (c)] (LINE:165)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0046|RETURN\l|0x0046: RETURN    (LINE:166)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0047|0x0047: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:147)\l0x0049: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004b: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x004e: CONST_STR  (r3 I:java.lang.String) =  \"Invalid max shadow size \" \l0x0050: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0053: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:float A[D('maxShadowSize' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x0056: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0059: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005d: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0060|0x0060: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0061|0x0061: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:143)\l0x0063: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0065: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0068: CONST_STR  (r3 I:java.lang.String) =  \"Invalid shadow size \" \l0x006a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006d: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:float A[D('shadowSize' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x0070: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0073: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0077: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x007a|0x007a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.cardview.widget.RoundRectDrawableWithShadow.setShadowSize((r4 'this' I:androidx.cardview.widget.RoundRectDrawableWithShadow A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[D('shadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('maxShadowSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0046 \-\> B:23:?, CROSS_EDGE: B:34:0x0025 \-\> B:38:0x002e, CROSS_EDGE: B:31:0x001d \-\> B:33:0x0021, CROSS_EDGE: B:29:0x0018 \-\> B:33:0x0021, CROSS_EDGE: B:41:0x0060 \-\> B:23:?, CROSS_EDGE: B:43:0x007a \-\> B:23:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x007a: r5 'shadowSize' F\l  \-1 \-0x007a: r6 'maxShadowSize' F\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_42;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_23;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_42 -> Node_43;
Node_43 -> Node_23;
}

