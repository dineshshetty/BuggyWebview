digraph "CFG forandroidx.viewpager2.widget.ViewPager2.performAccessibilityAction(ILandroid\/os\/Bundle;)Z" {
subgraph cluster_Region_2057063770 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_735231729 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1011763874 {
label = "IF [B:11:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0006|if (r1.mAccessibilityProvider.handlesPerformAccessibilityAction(r2, r3) != false) goto L3\l}"];
subgraph cluster_Region_1155263393 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|return r1.mAccessibilityProvider.onPerformAccessibilityAction(r2, r3)\l}"];
}
}
subgraph cluster_Region_1547016445 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0013|RETURN\l|return super.performAccessibilityAction(r2, r3)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0008}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000f}"];
MethodNode[shape=record,label="{public boolean androidx.viewpager2.widget.ViewPager2.performAccessibilityAction((r1v0 'this' androidx.viewpager2.widget.ViewPager2 A[IMMUTABLE_TYPE, THIS]), (r2v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'arguments' android.os.Bundle A[D('arguments' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0013 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.performAccessibilityAction(int, android.os.Bundle):boolean\}]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

