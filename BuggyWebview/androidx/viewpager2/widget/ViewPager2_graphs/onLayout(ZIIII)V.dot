digraph "CFG forandroidx.viewpager2.widget.ViewPager2.onLayout(ZIIII)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|int r0 = r7.mRecyclerView.getMeasuredWidth()\lint r1 = r7.mRecyclerView.getMeasuredHeight()\landroid.graphics.Rect r2 = r7.mTmpContainerRect\lr2.left = getPaddingLeft()\landroid.graphics.Rect r2 = r7.mTmpContainerRect\lr2.right = (r11 \- r9) \- getPaddingRight()\landroid.graphics.Rect r2 = r7.mTmpContainerRect\lr2.top = getPaddingTop()\landroid.graphics.Rect r2 = r7.mTmpContainerRect\lr2.bottom = (r12 \- r10) \- getPaddingBottom()\landroid.view.Gravity.apply(8388659, r0, r1, r7.mTmpContainerRect, r7.mTmpChildRect)\lr7.mRecyclerView.layout(r7.mTmpChildRect.left, r7.mTmpChildRect.top, r7.mTmpChildRect.right, r7.mTmpChildRect.bottom)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|if (r7.mCurrentItemDirty == false) goto L6\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|updateCurrentItem()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|RETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void androidx.viewpager2.widget.ViewPager2.onLayout((r7v0 'this' androidx.viewpager2.widget.ViewPager2 A[IMMUTABLE_TYPE, THIS]), (r8v0 'changed' boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'l' int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 't' int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'r' int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'b' int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0053 \-\> B:12:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

