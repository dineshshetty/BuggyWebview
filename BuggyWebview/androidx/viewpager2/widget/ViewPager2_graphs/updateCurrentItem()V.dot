digraph "CFG forandroidx.viewpager2.widget.ViewPager2.updateCurrentItem()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|androidx.recyclerview.widget.PagerSnapHelper r0 = r3.mPagerSnapHelper\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|if (r0 == null) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|android.view.View r0 = r0.findSnapView(r3.mLayoutManager)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|if (r0 != null) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|int r1 = r3.mLayoutManager.getPosition(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|if (r1 == r3.mCurrentItem) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017}"];
Node_26 [shape=record,label="{26\:\ 0x001b|if (getScrollState() != 0) goto L12\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|r3.mPageChangeEventDispatcher.onPageSelected(r1)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|r3.mCurrentItemDirty = false\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0026}"];
Node_31 [shape=record,label="{31\:\ 0x002d|throw new java.lang.IllegalStateException(\"Design assumption violated.\")\l}"];
MethodNode[shape=record,label="{void androidx.viewpager2.widget.ViewPager2.updateCurrentItem((r3v0 'this' androidx.viewpager2.widget.ViewPager2 A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0025 \-\> B:17:?, CROSS_EDGE: B:26:0x001b \-\> B:28:0x0022, CROSS_EDGE: B:24:0x0015 \-\> B:28:0x0022, CROSS_EDGE: B:31:0x002d \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

