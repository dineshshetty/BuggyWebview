digraph "CFG forandroidx.viewpager2.widget.ViewPager2.SavedState.1.createFromParcel(Landroid\/os\/Parcel;Ljava\/lang\/ClassLoader;)Landroidx\/viewpager2\/widget\/ViewPager2$SavedState;" {
subgraph cluster_Region_1889845420 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|RETURN\l|return android.os.Build.VERSION.SDK_INT \>= 24 ? new androidx.viewpager2.widget.ViewPager2.SavedState(r3, r4) : new androidx.viewpager2.widget.ViewPager2.SavedState(r3)\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0006}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000c}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0011|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public androidx.viewpager2.widget.ViewPager2$SavedState androidx.viewpager2.widget.ViewPager2.SavedState.1.createFromParcel((r2v0 'this' androidx.viewpager2.widget.ViewPager2$SavedState$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 'source' android.os.Parcel A[D('source' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'loader' java.lang.ClassLoader A[D('loader' java.lang.ClassLoader), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x000c \-\> B:14:0x0011\lINLINE_NOT_NEEDED\lREPLACED_BY: androidx.viewpager2.widget.ViewPager2.SavedState.1.createFromParcel(android.os.Parcel, java.lang.ClassLoader):androidx.viewpager2.widget.ViewPager2$SavedState\lBRIDGED_BY: androidx.viewpager2.widget.ViewPager2.SavedState.1.createFromParcel(android.os.Parcel, java.lang.ClassLoader):androidx.viewpager2.widget.ViewPager2$SavedState\lMETHOD_OVERRIDE: [ClspMth\{android.os.Parcelable.ClassLoaderCreator.createFromParcel(android.os.Parcel, java.lang.ClassLoader):T\}]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_13;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

