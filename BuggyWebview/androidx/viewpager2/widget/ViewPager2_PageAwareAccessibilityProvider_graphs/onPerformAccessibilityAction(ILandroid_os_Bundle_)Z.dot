digraph "CFG forandroidx.viewpager2.widget.ViewPager2.PageAwareAccessibilityProvider.onPerformAccessibilityAction(ILandroid\/os\/Bundle;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0004|if (handlesPerformAccessibilityAction(r3, r4) == false) goto L10\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006}"];
Node_17 [shape=record,label="{17\:\ 0x0009|if (r3 != 8192) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|int r0 = androidx.viewpager2.widget.ViewPager2.this.getCurrentItem() \- 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|PHI: r0 \l  PHI: (r0v6 'nextItem' int) = (r0v5 'nextItem' int), (r0v9 'nextItem' int) binds: [B:19:0x0013, B:18:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|setCurrentItemFromAccessibilityCommand(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001e|RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|int r0 = androidx.viewpager2.widget.ViewPager2.this.getCurrentItem() + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f}"];
Node_23 [shape=record,label="{23\:\ 0x0024|throw new java.lang.IllegalStateException()\l}"];
MethodNode[shape=record,label="{public boolean androidx.viewpager2.widget.ViewPager2.PageAwareAccessibilityProvider.onPerformAccessibilityAction((r2v0 'this' androidx.viewpager2.widget.ViewPager2$PageAwareAccessibilityProvider A[IMMUTABLE_TYPE, THIS]), (r3v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'arguments' android.os.Bundle A[D('arguments' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0013 \-\> B:20:0x001a, CROSS_EDGE: B:23:0x0024 \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.viewpager2.widget.ViewPager2.AccessibilityProvider.onPerformAccessibilityAction(int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

