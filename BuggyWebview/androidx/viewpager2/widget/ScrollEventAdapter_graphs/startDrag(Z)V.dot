digraph "CFG forandroidx.viewpager2.widget.ScrollEventAdapter.startDrag(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r3.mFakeDragging = r4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|if (r4 == false) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|r1 = 4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v5 int) binds: [B:19:0x0007, B:18:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|r3.mAdapterState = r1\lint r1 = r3.mTarget\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|if (r1 == (\-1)) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|r3.mDragStartPosition = r1\lr3.mTarget = \-1\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|dispatchStateChanged(1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014}"];
Node_24 [shape=record,label="{24\:\ 0x0016|if (r3.mDragStartPosition != (\-1)) goto L7\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|r3.mDragStartPosition = getPosition()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|r1 = 1\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager2.widget.ScrollEventAdapter.startDrag((r3v0 'this' androidx.viewpager2.widget.ScrollEventAdapter A[IMMUTABLE_TYPE, THIS]), (r4v0 'isFakeDrag' boolean A[D('isFakeDrag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:26:0x001e, CROSS_EDGE: B:24:0x0016 \-\> B:26:0x001e, CROSS_EDGE: B:19:0x0007 \-\> B:20:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_19 -> Node_20;
}

