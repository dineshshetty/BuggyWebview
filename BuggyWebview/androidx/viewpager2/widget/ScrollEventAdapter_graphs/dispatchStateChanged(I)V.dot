digraph "CFG forandroidx.viewpager2.widget.ScrollEventAdapter.dispatchStateChanged(I)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r2.mAdapterState != 3) goto L7\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005}"];
Node_20 [shape=record,label="{20\:\ 0x0007|if (r2.mScrollState != 0) goto L7\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a}"];
Node_23 [shape=record,label="{23\:\ 0x000c|if (r2.mScrollState != r3) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|r2.mScrollState = r3\landroidx.viewpager2.widget.ViewPager2$OnPageChangeCallback r0 = r2.mCallback\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|if (r0 == null) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|r0.onPageScrollStateChanged(r3)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|RETURN\lORIG_RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager2.widget.ScrollEventAdapter.dispatchStateChanged((r2v0 'this' androidx.viewpager2.widget.ScrollEventAdapter A[IMMUTABLE_TYPE, THIS]), (r3v0 'state' int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000e \-\> B:16:?, CROSS_EDGE: B:28:0x0018 \-\> B:16:?, CROSS_EDGE: B:26:0x0013 \-\> B:28:0x0018, CROSS_EDGE: B:18:0x0003 \-\> B:22:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
}

