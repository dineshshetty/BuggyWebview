digraph "CFG forandroidx.viewpager2.widget.ScrollEventAdapter.startDrag(Z)V" {
subgraph cluster_Region_877349776 {
label = "R(4:1|4|(1:6)(1:(1:12))|7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0000|r3.mFakeDragging = r4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|PHI: r1 \l  PHI: (r1v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.mAdapterState = r4 ? 4 : 1\lint int r1 = r3.mTarget\l}"];
subgraph cluster_IfRegion_782417338 {
label = "IF [B:21:0x000d] THEN: R(1:6) ELSE: R(1:(1:12))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000d|if (r1 != (\-1)) goto L6\l}"];
subgraph cluster_Region_1682970664 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000f|r3.mDragStartPosition = r1\lr3.mTarget = \-1\l}"];
}
subgraph cluster_Region_974867789 {
label = "R(1:(1:12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_698142011 {
label = "IF [B:24:0x0016] THEN: R(1:12) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0016|if (r3.mDragStartPosition == (\-1)) goto L12\l}"];
subgraph cluster_Region_274331280 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0018|r3.mDragStartPosition = getPosition()\l}"];
}
}
}
}
Node_26 [shape=record,label="{26\:\ 0x001e|dispatchStateChanged(1)\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0003}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0005}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0021}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0014}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0007}"];
MethodNode[shape=record,label="{private void androidx.viewpager2.widget.ScrollEventAdapter.startDrag((r3v0 'this' androidx.viewpager2.widget.ScrollEventAdapter A[IMMUTABLE_TYPE, THIS]), (r4v0 'isFakeDrag' boolean A[D('isFakeDrag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:26:0x001e, CROSS_EDGE: B:24:0x0016 \-\> B:26:0x001e, CROSS_EDGE: B:19:0x0007 \-\> B:20:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_16 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_27 -> Node_15;
Node_23 -> Node_24;
Node_19 -> Node_20;
}

