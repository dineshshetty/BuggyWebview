digraph "CFG forandroidx.viewpager2.widget.ScrollEventAdapter.startDrag(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IPUT  (r4 I:boolean A[D('isFakeDrag' boolean)]), (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mFakeDragging boolean  (LINE:287)\l0x0002: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:288)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isFakeDrag' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: IPUT  (r1 I:int), (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mAdapterState int \l0x000a: IGET  (r1 I:int) = (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mTarget int  (LINE:289)\l0x000c: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0014 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: IPUT  (r1 I:int), (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mDragStartPosition int  (LINE:292)\l0x0011: IPUT  (r2 I:int), (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mTarget int  (LINE:294)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|0x001e: INVOKE  (r3 I:androidx.viewpager2.widget.ScrollEventAdapter), (r0 I:int) type: DIRECT call: androidx.viewpager2.widget.ScrollEventAdapter.dispatchStateChanged(int):void A[MD:(int):void (m)] (LINE:299)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|RETURN\l|0x0021: RETURN    (LINE:300)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: IGET  (r1 I:int) = (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mDragStartPosition int  (LINE:295)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001e \l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: INVOKE  (r1 I:int) = (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) type: DIRECT call: androidx.viewpager2.widget.ScrollEventAdapter.getPosition():int A[MD:():int (m)] (LINE:297)\l0x001c: IPUT  (r1 I:int), (r3 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mDragStartPosition int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private void androidx.viewpager2.widget.ScrollEventAdapter.startDrag((r3 'this' I:androidx.viewpager2.widget.ScrollEventAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('isFakeDrag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0018 \-\> B:26:0x001e, CROSS_EDGE: B:24:0x0016 \-\> B:26:0x001e, CROSS_EDGE: B:19:0x0007 \-\> B:20:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r4 'isFakeDrag' Z\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_19 -> Node_20;
}

