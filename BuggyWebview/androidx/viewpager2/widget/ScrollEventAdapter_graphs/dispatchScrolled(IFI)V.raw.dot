digraph "CFG forandroidx.viewpager2.widget.ScrollEventAdapter.dispatchScrolled(IFI)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback) = (r1 I:androidx.viewpager2.widget.ScrollEventAdapter) androidx.viewpager2.widget.ScrollEventAdapter.mCallback androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback  (LINE:437)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: INVOKE  \l  (r0 I:androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback)\l  (r2 I:int A[D('position' int)])\l  (r3 I:float A[D('offset' float)])\l  (r4 I:int A[D('offsetPx' int)])\l type: VIRTUAL call: androidx.viewpager2.widget.ViewPager2.OnPageChangeCallback.onPageScrolled(int, float, int):void A[MD:(int, float, int):void (m)] (LINE:438)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|RETURN\lORIG_RETURN\l|0x0007: RETURN    (LINE:440)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0007: RETURN   A[SYNTHETIC] (LINE:440)\l}"];
MethodNode[shape=record,label="{private void androidx.viewpager2.widget.ScrollEventAdapter.dispatchScrolled((r1 'this' I:androidx.viewpager2.widget.ScrollEventAdapter A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('offset' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('offsetPx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'position' I\l  \-1 \-0x0007: r3 'offset' F\l  \-1 \-0x0007: r4 'offsetPx' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

