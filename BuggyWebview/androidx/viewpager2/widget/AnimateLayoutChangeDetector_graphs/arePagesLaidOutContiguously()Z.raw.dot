digraph "CFG forandroidx.viewpager2.widget.AnimateLayoutChangeDetector.arePagesLaidOutContiguously()Z" {
Node_47 [shape=record,label="{47\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.LinearLayoutManager) = (r12 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector) androidx.viewpager2.widget.AnimateLayoutChangeDetector.mLayoutManager androidx.recyclerview.widget.LinearLayoutManager  (LINE:66)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.LinearLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.getChildCount():int A[MD:():int (m)]\l0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:67)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childCount' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x000a \l}"];
Node_51 [shape=record,label="{51\:\ 0x0009|RETURN\l|0x0009: RETURN  (r1 I:boolean)  (LINE:68)\l}"];
Node_48 [shape=record,label="{48\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x000a|0x000a: IGET  (r2 I:androidx.recyclerview.widget.LinearLayoutManager) = (r12 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector) androidx.viewpager2.widget.AnimateLayoutChangeDetector.mLayoutManager androidx.recyclerview.widget.LinearLayoutManager  (LINE:71)\l0x000c: INVOKE  (r2 I:int) = (r2 I:androidx.recyclerview.widget.LinearLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.getOrientation():int A[MD:():int (m)]\l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0015 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0013|0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0016|0x0016: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:72)\l0x0017: NEW_ARRAY  (r5 I:int[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0019: APUT  (r5 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x001b: APUT  \l  (r5 I:??[int, float][])\l  (r3 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char] A[D('childCount' int)])\l \l0x001d: CONST_CLASS  (r4 I:java.lang.Class\<int\>) =  int.class \l0x001f: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Class), (r5 I:int[]) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int[]):java.lang.Object A[MD:(java.lang.Class\<?\>, int[]):java.lang.Object VARARG throws java.lang.IllegalArgumentException, java.lang.NegativeArraySizeException (c)]\l0x0023: CHECK_CAST (r4 I:int[][]) = (int[][]) (r4 I:??[OBJECT, ARRAY]) \l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:73)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0026|LOOP_START\lLOOP:0: B:57:0x0026\-\>B:72:0x0066\l|0x0026: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:88:0x0073 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0028|0x0028: IGET  (r6 I:androidx.recyclerview.widget.LinearLayoutManager) = (r12 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector) androidx.viewpager2.widget.AnimateLayoutChangeDetector.mLayoutManager androidx.recyclerview.widget.LinearLayoutManager  (LINE:74)\l0x002a: INVOKE  (r6 I:android.view.View) = (r6 I:androidx.recyclerview.widget.LinearLayoutManager), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x002e|0x002e: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x006b  (LINE:75)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0030|0x0030: INVOKE  (r7 I:android.view.ViewGroup$LayoutParams) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:78)\l0x0034: INSTANCE_OF  (r8 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('layoutParams' android.view.ViewGroup$LayoutParams)]) android.view.ViewGroup$MarginLayoutParams  (LINE:80)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0036|0x0036: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x003c \l}"];
Node_62 [shape=record,label="{62\:\ 0x0038|0x0038: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('layoutParams' android.view.ViewGroup$LayoutParams)])  (LINE:81)\l0x0039: CHECK_CAST (r8 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x003e|0x003e: AGET  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r5 I:??[int, short, byte, char] A[D('i' int)])  (LINE:85)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|0x0040: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x004a \l}"];
Node_66 [shape=record,label="{66\:\ 0x0042|0x0042: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:86)\l0x0046: IGET  (r11 I:int) = (r8 I:android.view.ViewGroup$MarginLayoutParams A[D('margin' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.leftMargin int \l0x0048: ARITH  (r10 I:int) = (r10 I:int) \- (r11 I:int) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0051|0x0051: APUT  (r9 I:??[int, float][]), (r3 I:??[int, short, byte, char]), (r10 I:??[int, float, short, byte, char]) \l0x0053: AGET  (r9 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r5 I:??[int, short, byte, char] A[D('i' int)])  (LINE:88)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0055|0x0055: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x005f \l}"];
Node_70 [shape=record,label="{70\:\ 0x0057|0x0057: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:89)\l0x005b: IGET  (r11 I:int) = (r8 I:android.view.ViewGroup$MarginLayoutParams A[D('margin' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.rightMargin int \l}"];
Node_91 [shape=record,label="{91\:\ 0x0066|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0066|LOOP_END\lLOOP:0: B:57:0x0026\-\>B:72:0x0066\l|0x0065: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l0x0066: APUT  (r9 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r10 I:??[int, float, short, byte, char]) \l0x0068: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:73)\l}"];
Node_71 [shape=record,label="{71\:\ 0x005f|0x005f: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:90)\l0x0063: IGET  (r11 I:int) = (r8 I:android.view.ViewGroup$MarginLayoutParams A[D('margin' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.bottomMargin int \l}"];
Node_90 [shape=record,label="{90\:\ 0x0066|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x004a|0x004a: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:87)\l0x004e: IGET  (r11 I:int) = (r8 I:android.view.ViewGroup$MarginLayoutParams A[D('margin' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.topMargin int \l0x0050: ARITH  (r10 I:int) = (r10 I:int) \- (r11 I:int) \l}"];
Node_63 [shape=record,label="{63\:\ 0x003c|0x003c: SGET  (r8 I:android.view.ViewGroup$MarginLayoutParams A[D('margin' android.view.ViewGroup$MarginLayoutParams)]) =  androidx.viewpager2.widget.AnimateLayoutChangeDetector.ZERO_MARGIN_LAYOUT_PARAMS android.view.ViewGroup$MarginLayoutParams  (LINE:83)\l}"];
Node_89 [shape=record,label="{89\:\ 0x006b|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x006b|0x006b: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:76)\l0x006d: CONST_STR  (r3 I:java.lang.String) =  \"null view contained in the view hierarchy\" \l0x006f: INVOKE  (r1 I:java.lang.IllegalStateException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_74 [shape=record,label="{74\:\ 0x0072|0x0072: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_88 [shape=record,label="{88\:\ 0x0073|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0073|0x0073: NEW_INSTANCE  (r5 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector$1 A[D('i' int)]) =  androidx.viewpager2.widget.AnimateLayoutChangeDetector$1  (LINE:94)\l0x0075: INVOKE  \l  (r5 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector$1)\l  (r12 I:androidx.viewpager2.widget.AnimateLayoutChangeDetector)\l type: DIRECT call: androidx.viewpager2.widget.AnimateLayoutChangeDetector.1.\<init\>(androidx.viewpager2.widget.AnimateLayoutChangeDetector):void A[MD:(androidx.viewpager2.widget.AnimateLayoutChangeDetector):void (m)]\l0x0078: INVOKE  (r4 I:java.lang.Object[] A[D('bounds' int[][])]), (r5 I:java.util.Comparator) type: STATIC call: java.util.Arrays.sort(java.lang.Object[], java.util.Comparator):void A[MD:\<T\>:(T[], java.util.Comparator\<? super T\>):void (c)]\l0x007b: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:102)\l}"];
Node_76 [shape=record,label="{76\:\ 0x007c|LOOP_START\lLOOP:1: B:76:0x007c\-\>B:80:0x008b\l|0x007c: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:93:0x008e \l}"];
Node_77 [shape=record,label="{77\:\ 0x007e|0x007e: ARITH  (r6 I:int) = (r5 I:int A[D('i' int)]) + (\-1 int)  (LINE:103)\l0x0080: AGET  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r6 I:??[int, short, byte, char]) \l0x0082: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l0x0084: AGET  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r5 I:??[int, short, byte, char] A[D('i' int)]) \l0x0086: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_78 [shape=record,label="{78\:\ 0x0088|0x0088: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x008b \l}"];
Node_80 [shape=record,label="{80\:\ 0x008b|LOOP_END\lLOOP:1: B:76:0x007c\-\>B:80:0x008b\l|0x008b: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:102)\l}"];
Node_92 [shape=record,label="{92\:\ 0x008a|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x008a|RETURN\l|0x008a: RETURN  (r3 I:boolean)  (LINE:104)\l}"];
Node_93 [shape=record,label="{93\:\ 0x008e|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x008e|0x008e: AGET  (r5 I:??[OBJECT, ARRAY] A[D('i' int)]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r3 I:??[int, short, byte, char])  (LINE:109)\l0x0090: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l0x0092: AGET  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r3 I:??[int, short, byte, char]) \l0x0094: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l0x0096: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x0097: AGET  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r3 I:??[int, short, byte, char])  (LINE:110)\l0x0099: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r3 I:??[int, short, byte, char]) \l}"];
Node_82 [shape=record,label="{82\:\ 0x009b|0x009b: IF  (r6 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:87:0x00a7 \l}"];
Node_83 [shape=record,label="{83\:\ 0x009d|0x009d: ARITH  (r6 I:int) = (r0 I:int A[D('childCount' int)]) + (\-1 int) \l0x009f: AGET  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('bounds' int[][])]), (r6 I:??[int, short, byte, char]) \l0x00a1: AGET  (r6 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x00a3|0x00a3: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char] A[D('pageSize' int)])  \-\> B:86:0x00a6 \l}"];
Node_86 [shape=record,label="{86\:\ 0x00a6|RETURN\l|0x00a6: RETURN  (r1 I:boolean)  (LINE:113)\l}"];
Node_87 [shape=record,label="{87\:\ 0x00a7|RETURN\l|0x00a7: RETURN  (r3 I:boolean)  (LINE:111)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0015|0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private boolean androidx.viewpager2.widget.AnimateLayoutChangeDetector.arePagesLaidOutContiguously((r12 'this' I:androidx.viewpager2.widget.AnimateLayoutChangeDetector A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:72:0x0066 \-\> B:57:0x0026, CROSS_EDGE: B:71:0x005f \-\> B:72:0x0066, CROSS_EDGE: B:67:0x004a \-\> B:68:0x0051, CROSS_EDGE: B:63:0x003c \-\> B:64:0x003e, CROSS_EDGE: B:74:0x0072 \-\> B:48:?, CROSS_EDGE: B:79:0x008a \-\> B:48:?, BACK_EDGE: B:80:0x008b \-\> B:76:0x007c, CROSS_EDGE: B:86:0x00a6 \-\> B:48:?, CROSS_EDGE: B:87:0x00a7 \-\> B:48:?, CROSS_EDGE: B:82:0x009b \-\> B:87:0x00a7, CROSS_EDGE: B:55:0x0015 \-\> B:56:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x003c: r8 'margin' Landroid\/view\/ViewGroup$MarginLayoutParams;\l  0x002e\-0x0068: r6 'view' Landroid\/view\/View;\l  0x0034\-0x0068: r7 'layoutParams' Landroid\/view\/ViewGroup$LayoutParams;\l  0x003e\-0x0068: r8 'margin' Landroid\/view\/ViewGroup$MarginLayoutParams;\l  0x0026\-0x0073: r5 'i' I\l  0x006b\-0x0073: r6 'view' Landroid\/view\/View;\l  0x007c\-0x008e: r5 'i' I\l  0x0006\-0x00a7: r0 'childCount' I\l  0x0016\-0x00a7: r2 'isHorizontal' Z\l  0x0025\-0x00a7: r4 'bounds' [[I\l  0x0097\-0x00a7: r5 'pageSize' I\l}"];
MethodNode -> Node_47;Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_48;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_88;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_89;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_91;
Node_91 -> Node_72;
Node_72 -> Node_57;
Node_71 -> Node_90;
Node_90 -> Node_72;
Node_67 -> Node_68;
Node_63 -> Node_64;
Node_89 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_48;
Node_88 -> Node_75;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_93;
Node_77 -> Node_78;
Node_78 -> Node_80;
Node_78 -> Node_92[style=dashed];
Node_80 -> Node_76;
Node_92 -> Node_79;
Node_79 -> Node_48;
Node_93 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_87;
Node_83 -> Node_84;
Node_84 -> Node_86;
Node_84 -> Node_87[style=dashed];
Node_86 -> Node_48;
Node_87 -> Node_48;
Node_55 -> Node_56;
}

