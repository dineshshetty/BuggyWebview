digraph "CFG forandroidx.viewpager2.widget.ViewPager2.LinearLayoutManagerImpl.performAccessibilityAction(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;ILandroid\/os\/Bundle;)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0008|if (androidx.viewpager2.widget.ViewPager2.this.mAccessibilityProvider.handlesLmPerformAccessibilityAction(r4) == false) goto L6\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|return androidx.viewpager2.widget.ViewPager2.this.mAccessibilityProvider.onLmPerformAccessibilityAction(r4)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013}"];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|return super.performAccessibilityAction(r2, r3, r4, r5)\l}"];
MethodNode[shape=record,label="{public boolean androidx.viewpager2.widget.ViewPager2.LinearLayoutManagerImpl.performAccessibilityAction((r1v0 'this' androidx.viewpager2.widget.ViewPager2$LinearLayoutManagerImpl A[IMMUTABLE_TYPE, THIS]), (r2v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'args' android.os.Bundle A[D('args' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

