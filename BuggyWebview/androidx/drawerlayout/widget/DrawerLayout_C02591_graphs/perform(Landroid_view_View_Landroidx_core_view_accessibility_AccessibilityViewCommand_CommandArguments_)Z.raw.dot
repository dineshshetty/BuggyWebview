digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.1.perform(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityViewCommand$CommandArguments;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$1) androidx.drawerlayout.widget.DrawerLayout.1.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:262)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerOpen(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0018 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$1) androidx.drawerlayout.widget.DrawerLayout.1.this$0 androidx.drawerlayout.widget.DrawerLayout \l0x000a: INVOKE  (r0 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(android.view.View):int A[MD:(android.view.View):int (m)]\l0x000e: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$1) androidx.drawerlayout.widget.DrawerLayout.1.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:263)\l0x0013: INVOKE  (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.closeDrawer(android.view.View):void A[MD:(android.view.View):void (m)]\l0x0016: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:264)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:266)\l0x0019: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:266)\l0x0019: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.drawerlayout.widget.DrawerLayout.1.perform((r2 'this' I:androidx.drawerlayout.widget.DrawerLayout$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments A[D('arguments' androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0019 \-\> B:12:?, CROSS_EDGE: B:14:0x0006 \-\> B:19:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r3 'view' Landroid\/view\/View;\l  \-1 \-0x0019: r4 'arguments' Landroidx\/core\/view\/accessibility\/AccessibilityViewCommand$CommandArguments;\lMETHOD_OVERRIDE: [androidx.core.view.accessibility.AccessibilityViewCommand.perform(android.view.View, androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments):boolean]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

