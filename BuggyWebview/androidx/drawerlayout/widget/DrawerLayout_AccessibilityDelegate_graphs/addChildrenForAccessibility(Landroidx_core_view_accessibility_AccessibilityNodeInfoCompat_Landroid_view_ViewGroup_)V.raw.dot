digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.addChildrenForAccessibility(Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;Landroid\/view\/ViewGroup;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:android.view.ViewGroup A[D('v' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)] (LINE:2502)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2503)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|LOOP_START\lLOOP:0: B:15:0x0005\-\>B:19:0x0014\l|0x0005: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:21:0x0017 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: INVOKE  (r2 I:android.view.View) = (r6 I:android.view.ViewGroup A[D('v' android.view.ViewGroup)]), (r1 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:2504)\l0x000b: INVOKE  (r3 I:boolean) = (r2 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.drawerlayout.widget.DrawerLayout.includeChildForAccessibility(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:2505)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0014 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r2 I:android.view.View A[D('child' android.view.View)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addChild(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:2506)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|LOOP_END\lLOOP:0: B:15:0x0005\-\>B:19:0x0014\l|0x0014: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:2503)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:2509)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.addChildrenForAccessibility((r4 'this' I:androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.ViewGroup A[D('v' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0014 \-\> B:15:0x0005, CROSS_EDGE: B:17:0x000f \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0014: r2 'child' Landroid\/view\/View;\l  0x0005\-0x0017: r1 'i' I\l  0x0004\-0x0017: r0 'childCount' I\l  \-1 \-0x0017: r5 'info' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  \-1 \-0x0017: r6 'v' Landroid\/view\/ViewGroup;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

