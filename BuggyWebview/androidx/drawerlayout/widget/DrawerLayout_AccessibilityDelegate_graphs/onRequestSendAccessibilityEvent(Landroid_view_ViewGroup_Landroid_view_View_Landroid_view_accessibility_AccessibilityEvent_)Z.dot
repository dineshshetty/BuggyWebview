digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.onRequestSendAccessibilityEvent(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroid\/view\/accessibility\/AccessibilityEvent;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0002|if (androidx.drawerlayout.widget.DrawerLayout.CAN_HIDE_DESCENDANTS != false) goto L7\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004}"];
Node_16 [shape=record,label="{16\:\ 0x0008|if (androidx.drawerlayout.widget.DrawerLayout.includeChildForAccessibility(r3) == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d}"];
Node_21 [shape=record,label="{21\:\ 0x0011|RETURN\l|return super.onRequestSendAccessibilityEvent(r2, r3, r4)\l}"];
MethodNode[shape=record,label="{public boolean androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.onRequestSendAccessibilityEvent((r1v0 'this' androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r2v0 'host' android.view.ViewGroup A[D('host' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'event' android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0011 \-\> B:12:?, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent):boolean]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

