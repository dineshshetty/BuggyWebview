digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.onInitializeAccessibilityNodeInfo(Landroid\/view\/View;Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.drawerlayout.widget.DrawerLayout.CAN_HIDE_DESCENDANTS boolean  (LINE:2430)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0008 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: INVOKE  \l  (r3 I:androidx.core.view.AccessibilityDelegateCompat)\l  (r4 I:android.view.View A[D('host' android.view.View)])\l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: SUPER call: androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void A[MD:(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void (m)] (LINE:2431)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002d|0x002d: CONST_STR  (r0 I:java.lang.String A[D('superNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)]) =  \"androidx.drawerlayout.widget.DrawerLayout\"  (LINE:2450)\l0x002f: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x0032: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2455)\l0x0033: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setFocusable(boolean):void A[MD:(boolean):void (m)]\l0x0036: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setFocused(boolean):void A[MD:(boolean):void (m)] (LINE:2456)\l0x0039: SGET  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.ACTION_FOCUS androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat  (LINE:2457)\l0x003b: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):boolean A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):boolean (m)]\l0x003e: SGET  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) =  androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat.ACTION_CLEAR_FOCUS androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat  (LINE:2458)\l0x0040: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):boolean A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|RETURN\l|0x0043: RETURN    (LINE:2459)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0009: INVOKE  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat) = \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: STATIC call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat):androidx.core.view.accessibility.AccessibilityNodeInfoCompat (m)] (LINE:2436)\l0x000d: INVOKE  \l  (r3 I:androidx.core.view.AccessibilityDelegateCompat)\l  (r4 I:android.view.View A[D('host' android.view.View)])\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('superNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: SUPER call: androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void A[MD:(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void (m)] (LINE:2437)\l0x0010: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r4 I:android.view.View A[D('host' android.view.View)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setSource(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:2439)\l0x0013: INVOKE  (r1 I:android.view.ViewParent) = (r4 I:android.view.View A[D('host' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getParentForAccessibility(android.view.View):android.view.ViewParent A[MD:(android.view.View):android.view.ViewParent (m)] (LINE:2440)\l0x0017: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)]) android.view.View  (LINE:2441)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0021 \l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|0x001b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)])  (LINE:2442)\l0x001c: CHECK_CAST (r2 I:android.view.View) = (android.view.View) (r2 I:??[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r2 I:android.view.View)\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setParent(android.view.View):void A[MD:(android.view.View):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: INVOKE  \l  (r3 I:androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate)\l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('superNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void (m)] (LINE:2444)\l0x0024: INVOKE  \l  (r0 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('superNode' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l type: VIRTUAL call: androidx.core.view.accessibility.AccessibilityNodeInfoCompat.recycle():void A[MD:():void (m)] (LINE:2445)\l0x0027: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('host' android.view.View)])  (LINE:2447)\l0x0028: CHECK_CAST (r2 I:android.view.ViewGroup) = (android.view.ViewGroup) (r2 I:??[OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r3 I:androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate)\l  (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat)])\l  (r2 I:android.view.ViewGroup)\l type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, android.view.ViewGroup):void A[MD:(androidx.core.view.accessibility.AccessibilityNodeInfoCompat, android.view.ViewGroup):void (m)]\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.AccessibilityDelegate.onInitializeAccessibilityNodeInfo((r3 'this' I:androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.core.view.accessibility.AccessibilityNodeInfoCompat A[D('info' androidx.core.view.accessibility.AccessibilityNodeInfoCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0021 \-\> B:20:0x002d, CROSS_EDGE: B:17:0x0019 \-\> B:19:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002d: r0 'superNode' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\l  0x0017\-0x002d: r1 'parent' Landroid\/view\/ViewParent;\l  \-1 \-0x0043: r4 'host' Landroid\/view\/View;\l  \-1 \-0x0043: r5 'info' Landroidx\/core\/view\/accessibility\/AccessibilityNodeInfoCompat;\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

