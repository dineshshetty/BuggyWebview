digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onViewReleased(Landroid\/view\/View;FF)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r6 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2289)\l0x0002: INVOKE  (r0 I:float) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r7 I:android.view.View A[D('releasedChild' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerViewOffset(android.view.View):float A[MD:(android.view.View):float (m)]\l0x0006: INVOKE  (r1 I:int) = (r7 I:android.view.View A[D('releasedChild' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:2290)\l0x000a: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r6 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2293)\l0x000c: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x000d: INVOKE  (r2 I:boolean) = \l  (r2 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r7 I:android.view.View A[D('releasedChild' android.view.View)])\l  (r3 I:int)\l type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l0x0011: CONST  (r3 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x0013: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0027 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: CMP_L  (r2 I:int) = (r8 I:float A[D('xvel' float)]), (r4 I:float)  (LINE:2294)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:38:0x0025 \l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|0x001a: CMP_L  (r2 I:int) = (r8 I:float A[D('xvel' float)]), (r4 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0023 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|0x001e: CMP_L  (r2 I:int) = (r0 I:float A[D('offset' float)]), (r3 I:float) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|0x0020: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:37:0x0023 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0023|0x0023: NEG  (r2 I:int) = (r1 I:int A[D('childWidth' int)]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x003f|0x003f: IGET  (r3 I:androidx.customview.widget.ViewDragHelper) = (r6 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.mDragger androidx.customview.widget.ViewDragHelper  (LINE:2300)\l0x0041: INVOKE  (r4 I:int) = (r7 I:android.view.View A[D('releasedChild' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0045: INVOKE  (r3 I:androidx.customview.widget.ViewDragHelper), (r2 I:int A[D('left' int)]), (r4 I:int) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.settleCapturedViewAt(int, int):boolean A[MD:(int, int):boolean (m)]\l0x0048: IGET  (r3 I:androidx.drawerlayout.widget.DrawerLayout) = (r6 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2301)\l0x004a: INVOKE  (r3 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.invalidate():void A[MD:():void (s)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x004d|RETURN\l|0x004d: RETURN    (LINE:2302)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|0x0025: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|0x0027: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout A[D('left' int)]) = (r6 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2296)\l0x0029: INVOKE  (r2 I:int) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)]\l0x002d: CMP_G  (r5 I:int) = (r8 I:float A[D('xvel' float)]), (r4 I:float)  (LINE:2297)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002f|0x002f: IF  (r5 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:48:0x003c \l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|0x0031: CMP_L  (r4 I:int) = (r8 I:float A[D('xvel' float)]), (r4 I:float) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x003a \l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|0x0035: CMP_L  (r3 I:int) = (r0 I:float A[D('offset' float)]), (r3 I:float) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|0x0037: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:47:0x003a \l}"];
Node_47 [shape=record,label="{47\:\ 0x003a|0x003a: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x003e|0x003e: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|0x003c: ARITH  (r3 I:int) = (r2 I:int A[D('width' int)]) \- (r1 I:int A[D('childWidth' int)]) \l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onViewReleased((r6 'this' I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[D('releasedChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('xvel' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('yvel' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0025 \-\> B:50:0x003f, CROSS_EDGE: B:33:0x001c \-\> B:37:0x0023, CROSS_EDGE: B:31:0x0018 \-\> B:38:0x0025, CROSS_EDGE: B:49:0x003e \-\> B:50:0x003f, CROSS_EDGE: B:48:0x003c \-\> B:49:0x003e, CROSS_EDGE: B:43:0x0033 \-\> B:47:0x003a, CROSS_EDGE: B:41:0x002f \-\> B:48:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x0027: r2 'left' I\l  0x002d\-0x003f: r2 'width' I\l  0x0006\-0x004d: r0 'offset' F\l  0x000a\-0x004d: r1 'childWidth' I\l  0x003f\-0x004d: r2 'left' I\l  \-1 \-0x004d: r7 'releasedChild' Landroid\/view\/View;\l  \-1 \-0x004d: r8 'xvel' F\l  \-1 \-0x004d: r9 'yvel' F\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.onViewReleased(android.view.View, float, float):void]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_40;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38[style=dashed];
Node_37 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_27;
Node_38 -> Node_50;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_48;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_48 -> Node_49;
}

