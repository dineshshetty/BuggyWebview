digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.tryCaptureView(Landroid\/view\/View;I)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0006|if (androidx.drawerlayout.widget.DrawerLayout.this.isDrawerView(r3) == false) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008}"];
Node_17 [shape=record,label="{17\:\ 0x0010|if (androidx.drawerlayout.widget.DrawerLayout.this.checkDrawerViewAbsoluteGravity(r3, r2.mAbsGravity) == false) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012}"];
Node_19 [shape=record,label="{19\:\ 0x0018|if (androidx.drawerlayout.widget.DrawerLayout.this.getDrawerLockMode(r3) != 0) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|SYNTHETIC\lRETURN\l|return androidx.drawerlayout.widget.DrawerLayout.CHILDREN_DISALLOW_INTERCEPT\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.tryCaptureView((r2v0 'this' androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'pointerId' int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:22:0x001d, CROSS_EDGE: B:17:0x0010 \-\> B:21:0x001c, CROSS_EDGE: B:15:0x0006 \-\> B:21:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.tryCaptureView(android.view.View, int):boolean]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

