digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.peekDrawer()V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: IGET  (r0 I:androidx.customview.widget.ViewDragHelper) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.mDragger androidx.customview.widget.ViewDragHelper  (LINE:2312)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getEdgeSize():int A[MD:():int (m)]\l0x0006: IGET  (r1 I:int) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.mAbsGravity int  (LINE:2313)\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x000f \l}"];
Node_31 [shape=record,label="{31\:\ 0x000d|0x000d: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftEdge' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0021  (LINE:2314)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0012|0x0012: IGET  (r5 I:androidx.drawerlayout.widget.DrawerLayout) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2315)\l0x0014: INVOKE  (r4 I:android.view.View) = (r5 I:androidx.drawerlayout.widget.DrawerLayout), (r4 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View A[MD:(int):android.view.View (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|0x0018: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('toCapture' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x001f  (LINE:2316)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|0x001a: INVOKE  (r3 I:int) = (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x001e: NEG  (r3 I:int) = (r3 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x001f|0x001f: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int A[D('peekDistance' int)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|0x002f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('toCapture' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:?  (LINE:2322)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0031|0x0031: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftEdge' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0039 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0033|0x0033: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0037|0x0037: IF  (r5 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char] A[D('childLeft' int)])  \-\> B:46:0x0041 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0041|0x0041: IGET  (r5 I:androidx.drawerlayout.widget.DrawerLayout) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout \l0x0043: INVOKE  (r5 I:int) = (r5 I:androidx.drawerlayout.widget.DrawerLayout), (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:2324)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0047|0x0047: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:? \l}"];
Node_48 [shape=record,label="{48\:\ 0x0049|0x0049: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:2325)\l0x004d: CHECK_CAST (r5 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l0x004f: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.mDragger androidx.customview.widget.ViewDragHelper  (LINE:2326)\l0x0051: INVOKE  (r7 I:int) = (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0055: INVOKE  \l  (r6 I:androidx.customview.widget.ViewDragHelper)\l  (r4 I:android.view.View A[D('toCapture' android.view.View)])\l  (r3 I:int A[D('childLeft' int)])\l  (r7 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)]\l0x0058: IPUT  \l  (r2 I:boolean)\l  (r5 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.isPeeking boolean  (LINE:2327)\l0x005a: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2328)\l0x005c: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.invalidate():void A[MD:():void (s)]\l0x005f: INVOKE  (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.closeOtherDrawer():void A[MD:():void (m)] (LINE:2330)\l0x0062: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2332)\l0x0064: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.cancelChildViewTouch():void A[MD:():void (m)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0067|RETURN\lORIG_RETURN\l|0x0067: RETURN    (LINE:2334)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|0x0067: RETURN   A[SYNTHETIC] (LINE:2334)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0039|0x0039: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftEdge' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:? \l}"];
Node_44 [shape=record,label="{44\:\ 0x003b|0x003b: INVOKE  (r5 I:int) = (r4 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:2323)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003f|0x003f: IF  (r5 I:??[int, byte, short, char]) \<= (r3 I:??[int, byte, short, char] A[D('childLeft' int)])  \-\> B:52:? \l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|0x0067: RETURN   A[SYNTHETIC] (LINE:2334)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|0x0067: RETURN   A[SYNTHETIC] (LINE:2334)\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|0x0067: RETURN   A[SYNTHETIC] (LINE:2334)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|0x0021: IGET  (r3 I:androidx.drawerlayout.widget.DrawerLayout A[D('childLeft' int)]) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2318)\l0x0023: CONST  (r4 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0024: INVOKE  (r4 I:android.view.View) = (r3 I:androidx.drawerlayout.widget.DrawerLayout), (r4 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View A[MD:(int):android.view.View (m)]\l0x0028: IGET  (r3 I:androidx.drawerlayout.widget.DrawerLayout) = (r8 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2319)\l0x002a: INVOKE  (r3 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)]\l0x002e: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int A[D('peekDistance' int)]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x000f|0x000f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{void androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.peekDrawer((r8 'this' I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:47:0x0047 \-\> B:49:0x0067, CROSS_EDGE: B:45:0x003f \-\> B:49:0x0067, CROSS_EDGE: B:43:0x0039 \-\> B:49:0x0067, CROSS_EDGE: B:42:0x0037 \-\> B:46:0x0041, CROSS_EDGE: B:40:0x0031 \-\> B:43:0x0039, CROSS_EDGE: B:39:0x002f \-\> B:49:0x0067, CROSS_EDGE: B:35:0x0018 \-\> B:37:0x001f, CROSS_EDGE: B:38:0x0021 \-\> B:39:0x002f, CROSS_EDGE: B:32:0x000f \-\> B:33:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0021: r3 'childLeft' I\l  0x0018\-0x0021: r4 'toCapture' Landroid\/view\/View;\l  0x004f\-0x0067: r5 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x0006\-0x0067: r0 'peekDistance' I\l  0x0010\-0x0067: r1 'leftEdge' Z\l  0x002f\-0x0067: r3 'childLeft' I\l  0x0028\-0x0067: r4 'toCapture' Landroid\/view\/View;\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_50;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_49;
Node_49 -> Node_28;
Node_53 -> Node_28;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_51;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_52;
Node_52 -> Node_28;
Node_51 -> Node_28;
Node_50 -> Node_28;
Node_38 -> Node_39;
Node_32 -> Node_33;
}

