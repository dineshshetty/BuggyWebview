digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted(II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: ARITH  (r0 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char] A[D('edgeFlags' int)]) & (1 ??[boolean, int, float, short, byte, char])  (LINE:2351)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2352)\l0x0007: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0008: INVOKE  (r0 I:android.view.View) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View A[MD:(int):android.view.View (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('toCapture' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:?  (LINE:2357)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IGET  (r1 I:androidx.drawerlayout.widget.DrawerLayout) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout \l0x0018: INVOKE  (r1 I:int) = (r1 I:androidx.drawerlayout.widget.DrawerLayout), (r0 I:android.view.View A[D('toCapture' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(android.view.View):int A[MD:(android.view.View):int (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|0x001e: IGET  (r1 I:androidx.customview.widget.ViewDragHelper) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.mDragger androidx.customview.widget.ViewDragHelper  (LINE:2358)\l0x0020: INVOKE  \l  (r1 I:androidx.customview.widget.ViewDragHelper)\l  (r0 I:android.view.View A[D('toCapture' android.view.View)])\l  (r4 I:int A[D('pointerId' int)])\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.captureChildView(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN    (LINE:2360)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:2360)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:2360)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout A[D('toCapture' android.view.View)]) = (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2354)\l0x000f: CONST  (r1 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0010: INVOKE  (r0 I:android.view.View) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity(int):android.view.View A[MD:(int):android.view.View (m)]\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted((r2 'this' I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('edgeFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:23:0x0023, CROSS_EDGE: B:19:0x0014 \-\> B:23:0x0023, CROSS_EDGE: B:18:0x000d \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x000d: r0 'toCapture' Landroid\/view\/View;\l  0x0014\-0x0023: r0 'toCapture' Landroid\/view\/View;\l  \-1 \-0x0023: r3 'edgeFlags' I\l  \-1 \-0x0023: r4 'pointerId' I\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.onEdgeDragStarted(int, int):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_18 -> Node_19;
}

