digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.clampViewPositionHorizontal(Landroid\/view\/View;II)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2369)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0003: INVOKE  (r0 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r4 I:android.view.View A[D('child' android.view.View)]), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0018 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:2370)\l0x000d: NEG  (r0 I:int) = (r0 I:int) \l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: INVOKE  (r1 I:int) = (r5 I:int A[D('left' int)]), (r1 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0013: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.this$0 androidx.drawerlayout.widget.DrawerLayout  (LINE:2372)\l0x001a: INVOKE  (r0 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)]\l0x001e: INVOKE  (r1 I:int) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:2373)\l0x0022: ARITH  (r1 I:int) = (r0 I:int A[D('width' int)]) \- (r1 I:int) \l0x0024: INVOKE  (r2 I:int) = (r5 I:int A[D('left' int)]), (r0 I:int A[D('width' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0028: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.clampViewPositionHorizontal((r3 'this' I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('dx' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002c \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x002c: r0 'width' I\l  \-1 \-0x002c: r4 'child' Landroid\/view\/View;\l  \-1 \-0x002c: r5 'left' I\l  \-1 \-0x002c: r6 'dx' I\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.clampViewPositionHorizontal(android.view.View, int, int):int]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

