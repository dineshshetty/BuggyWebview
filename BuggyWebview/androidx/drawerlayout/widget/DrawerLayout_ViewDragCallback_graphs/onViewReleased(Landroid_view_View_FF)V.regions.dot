digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onViewReleased(Landroid\/view\/View;FF)V" {
subgraph cluster_Region_1823106108 {
label = "R(3:1|(1:4)(2:14|21)|10) | DECL_VAR: int width\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|float float r0 = androidx.drawerlayout.widget.DrawerLayout.this.getDrawerViewOffset(r7)\lint int r1 = r7.getWidth()\l}"];
subgraph cluster_IfRegion_1180418585 {
label = "IF [B:29:0x0014] THEN: R(1:4) ELSE: R(2:14|21)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0014|if (androidx.drawerlayout.widget.DrawerLayout.this.checkDrawerViewAbsoluteGravity(r7, 3) != false) goto L3\l}"];
subgraph cluster_Region_725483852 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0018|r2 = (r8 \> 0.0f \|\| (r8 == 0.0f && r0 \> 0.5f)) ? 0 : \-r1\l}"];
}
subgraph cluster_Region_703339760 {
label = "R(2:14|21)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0027|int int r2 = androidx.drawerlayout.widget.DrawerLayout.this.getWidth()\l}"];
Node_49 [shape=record,label="{49\:\ 0x003e|PHI: r3 \l  PHI: (r3v3 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2 = (r8 \< 0.0f \|\| (r8 == 0.0f && r0 \> 0.5f)) ? r2 \- r1 : r2\l}"];
}
}
Node_50 [shape=record,label="{50\:\ 0x003f|PHI: r2 \l  PHI: (r2v5 'width' int) = (r2v4 'width' int), (r2v7 'width' int) binds: [B:49:0x003e, B:38:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|r6.mDragger.settleCapturedViewAt(r2, r7.getTop())\landroidx.drawerlayout.widget.DrawerLayout.this.invalidate()\l}"];
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0016}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001a}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x001c|REMOVE\lADDED_TO_REGION\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x001e}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0020|REMOVE\lADDED_TO_REGION\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0023}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x004d}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0025}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x002f}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0031}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0033|REMOVE\lADDED_TO_REGION\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0035}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0037|REMOVE\lADDED_TO_REGION\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x003a}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x003c}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onViewReleased((r6v0 'this' androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r7v0 'releasedChild' android.view.View A[D('releasedChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'xvel' float A[D('xvel' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'yvel' float A[D('yvel' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0025 \-\> B:50:0x003f, CROSS_EDGE: B:33:0x001c \-\> B:37:0x0023, CROSS_EDGE: B:31:0x0018 \-\> B:38:0x0025, CROSS_EDGE: B:49:0x003e \-\> B:50:0x003f, CROSS_EDGE: B:48:0x003c \-\> B:49:0x003e, CROSS_EDGE: B:43:0x0033 \-\> B:47:0x003a, CROSS_EDGE: B:41:0x002f \-\> B:48:0x003c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.onViewReleased(android.view.View, float, float):void]\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_40[style=dashed];
Node_31 -> Node_32;
Node_31 -> Node_38;
Node_40 -> Node_41;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_26 -> Node_28;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_38;
Node_37 -> Node_50;
Node_51 -> Node_27;
Node_38 -> Node_50;
Node_41 -> Node_42;
Node_41 -> Node_48;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_47;
Node_45 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_49;
}

