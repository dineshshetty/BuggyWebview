digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted(II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0003|if ((r3 & 1) != 1) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|android.view.View r0 = androidx.drawerlayout.widget.DrawerLayout.this.findDrawerWithGravity(3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|PHI: r0 \l  PHI: (r0v3 'toCapture' android.view.View) = (r0v2 'toCapture' android.view.View), (r0v5 'toCapture' android.view.View) binds: [B:18:0x000d, B:17:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016}"];
Node_21 [shape=record,label="{21\:\ 0x001c|if (androidx.drawerlayout.widget.DrawerLayout.this.getDrawerLockMode(r0) != 0) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|r2.mDragger.captureChildView(r0, r4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|android.view.View r0 = androidx.drawerlayout.widget.DrawerLayout.this.findDrawerWithGravity(5)\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.onEdgeDragStarted((r2v0 'this' androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[IMMUTABLE_TYPE, THIS]), (r3v0 'edgeFlags' int A[D('edgeFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'pointerId' int A[D('pointerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:23:0x0023, CROSS_EDGE: B:19:0x0014 \-\> B:23:0x0023, CROSS_EDGE: B:18:0x000d \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.customview.widget.ViewDragHelper.Callback.onEdgeDragStarted(int, int):void]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_18 -> Node_19;
}

