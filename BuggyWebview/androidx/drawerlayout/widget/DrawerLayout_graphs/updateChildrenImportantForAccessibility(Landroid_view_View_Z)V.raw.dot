digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.updateChildrenImportantForAccessibility(Landroid\/view\/View;Z)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:934)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:935)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|LOOP_START\lLOOP:0: B:20:0x0005\-\>B:29:0x0020\l|0x0005: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:31:0x0023 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: INVOKE  (r2 I:android.view.View) = (r4 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:936)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isDrawerOpen' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0013  (LINE:937)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: INVOKE  (r3 I:boolean) = (r4 I:androidx.drawerlayout.widget.DrawerLayout), (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0017 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|0x0017: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:940)\l0x0018: INVOKE  (r2 I:android.view.View A[D('child' android.view.View)]), (r3 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0020|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|LOOP_END\lLOOP:0: B:20:0x0005\-\>B:29:0x0020\l|0x0020: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:935)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0013|0x0013: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isDrawerOpen' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001c \l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawerView' android.view.View)])  \-\> B:28:0x001c \l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:943)\l0x001d: INVOKE  (r2 I:android.view.View A[D('child' android.view.View)]), (r3 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:947)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.drawerlayout.widget.DrawerLayout.updateChildrenImportantForAccessibility((r4 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('drawerView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('isDrawerOpen' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0020 \-\> B:20:0x0005, CROSS_EDGE: B:28:0x001c \-\> B:29:0x0020, CROSS_EDGE: B:25:0x0013 \-\> B:28:0x001c, CROSS_EDGE: B:24:0x0011 \-\> B:27:0x0017, CROSS_EDGE: B:22:0x000b \-\> B:25:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0020: r2 'child' Landroid\/view\/View;\l  0x0005\-0x0023: r1 'i' I\l  0x0004\-0x0023: r0 'childCount' I\l  \-1 \-0x0023: r5 'drawerView' Landroid\/view\/View;\l  \-1 \-0x0023: r6 'isDrawerOpen' Z\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_27 -> Node_33;
Node_33 -> Node_29;
Node_29 -> Node_20;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_28 -> Node_32;
Node_32 -> Node_29;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

