digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.removeDrawerListener(Landroidx\/drawerlayout\/widget\/DrawerLayout$DrawerListener;)V" {
subgraph cluster_Region_590311931 {
label = "R(1:(2:(1:6)|(1:7))) | DECL_VAR: java.util.List\<androidx.drawerlayout.widget.DrawerLayout$DrawerListener\> null\l";
node [shape=record,color=blue];
subgraph cluster_Region_115085863 {
label = "R(2:(1:6)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_422832161 {
label = "IF [B:11:0x0000, B:14:0x0005] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 == null) goto L2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|ADDED_TO_REGION\l|if ((r0 = r1.mListeners) == null) goto L6\l}"];
subgraph cluster_Region_484229115 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0007|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1151644978 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|r0.remove(r2)\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0002|RETURN\lADDED_TO_REGION\l|return\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0003}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000b}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.removeDrawerListener((r1v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener A[D('listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0007 \-\> B:10:?, CROSS_EDGE: B:17:0x000b \-\> B:10:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_17 -> Node_10;
}

