digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.closeDrawers(Z)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1686)\l0x0001: INVOKE  (r1 I:int) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:1687)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1688)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|LOOP_START\lLOOP:0: B:28:0x0006\-\>B:40:0x0049\l|0x0006: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:45:0x004c \l}"];
Node_29 [shape=record,label="{29\:\ 0x0008|0x0008: INVOKE  (r3 I:android.view.View) = (r9 I:androidx.drawerlayout.widget.DrawerLayout), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1689)\l0x000c: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1690)\l0x0010: CHECK_CAST (r4 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r5 I:boolean) = (r9 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1692)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0049 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('peekingOnly' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x001f \l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|0x001a: IGET  (r5 I:boolean) = \l  (r4 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.isPeeking boolean \l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x001f \l}"];
Node_48 [shape=record,label="{48\:\ 0x0049|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0049|LOOP_END\lLOOP:0: B:28:0x0006\-\>B:40:0x0049\l|0x0049: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1688)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|0x001f: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:1696)\l0x0023: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1698)\l0x0024: INVOKE  (r6 I:boolean) = (r9 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('child' android.view.View)]), (r6 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0028|0x0028: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0037 \l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|0x002a: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftDragger androidx.customview.widget.ViewDragHelper  (LINE:1699)\l0x002c: NEG  (r7 I:int) = (r5 I:int A[D('childWidth' int)]) \l0x002d: INVOKE  (r8 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1700)\l0x0031: INVOKE  (r6 I:boolean) = \l  (r6 I:androidx.customview.widget.ViewDragHelper)\l  (r3 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:int)\l  (r8 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)] (LINE:1699)\l0x0035: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('needsInvalidate' boolean)]) \| (r6 I:??[int, boolean, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0046|0x0046: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1706)\l0x0047: IPUT  \l  (r6 I:boolean)\l  (r4 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.isPeeking boolean \l}"];
Node_46 [shape=record,label="{46\:\ 0x0049|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0037|0x0037: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightDragger androidx.customview.widget.ViewDragHelper  (LINE:1702)\l0x0039: INVOKE  (r7 I:int) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)] (LINE:1703)\l0x003d: INVOKE  (r8 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0041: INVOKE  (r6 I:boolean) = \l  (r6 I:androidx.customview.widget.ViewDragHelper)\l  (r3 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:int)\l  (r8 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)] (LINE:1702)\l0x0045: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('needsInvalidate' boolean)]) \| (r6 I:??[int, boolean, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0049|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x004c|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x004c|0x004c: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback A[D('i' int)]) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftCallback androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback  (LINE:1709)\l0x004e: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.removeCallbacks():void A[MD:():void (m)]\l0x0051: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) = (r9 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightCallback androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback  (LINE:1710)\l0x0053: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.ViewDragCallback.removeCallbacks():void A[MD:():void (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0056|0x0056: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needsInvalidate' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:?  (LINE:1712)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0058|0x0058: INVOKE  (r9 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.invalidate():void A[MD:():void (s)] (LINE:1713)\l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|RETURN\lORIG_RETURN\l|0x005b: RETURN    (LINE:1715)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x005b: RETURN   A[SYNTHETIC] (LINE:1715)\l}"];
MethodNode[shape=record,label="{void androidx.drawerlayout.widget.DrawerLayout.closeDrawers((r9 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r10 I:boolean A[D('peekingOnly' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0049 \-\> B:28:0x0006, CROSS_EDGE: B:38:0x0037 \-\> B:39:0x0046, CROSS_EDGE: B:33:0x001c \-\> B:40:0x0049, CROSS_EDGE: B:31:0x0018 \-\> B:35:0x001f, CROSS_EDGE: B:30:0x0016 \-\> B:40:0x0049, CROSS_EDGE: B:42:0x0056 \-\> B:44:0x005b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0049: r3 'child' Landroid\/view\/View;\l  0x0012\-0x0049: r4 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x0023\-0x0049: r5 'childWidth' I\l  0x0006\-0x004c: r2 'i' I\l  0x0001\-0x005b: r0 'needsInvalidate' Z\l  0x0005\-0x005b: r1 'childCount' I\l  \-1 \-0x005b: r10 'peekingOnly' Z\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_45;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_47;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_35;
Node_33 -> Node_48[style=dashed];
Node_48 -> Node_40;
Node_40 -> Node_28;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_39 -> Node_46;
Node_46 -> Node_40;
Node_38 -> Node_39;
Node_47 -> Node_40;
Node_45 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_49;
Node_43 -> Node_44;
Node_44 -> Node_26;
Node_49 -> Node_26;
}

