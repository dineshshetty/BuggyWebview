digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.setDrawerListener(Landroidx\/drawerlayout\/widget\/DrawerLayout$DrawerListener;)V" {
subgraph cluster_Region_1782834968 {
label = "R(4:1|(1:3)|(1:5)|6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|androidx.drawerlayout.widget.DrawerLayout$DrawerListener androidx.drawerlayout.widget.DrawerLayout.DrawerListener r0 = r1.mListener\l}"];
subgraph cluster_IfRegion_2066009005 {
label = "IF [B:12:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_527519389 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|removeDrawerListener(r0)\l}"];
}
}
subgraph cluster_IfRegion_1547612274 {
label = "IF [B:14:0x0007] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0007|if (r2 != null) goto L5\l}"];
subgraph cluster_Region_933133016 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0009|addDrawerListener(r2)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x000c|r1.mListener = r2\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000e}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.setDrawerListener((r1v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener A[D('listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:14:0x0007 \-\> B:16:0x000c, CROSS_EDGE: B:12:0x0002 \-\> B:14:0x0007\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_17 -> Node_10;
}

