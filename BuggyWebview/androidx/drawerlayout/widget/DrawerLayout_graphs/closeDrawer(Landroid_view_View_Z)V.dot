digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.closeDrawer(Landroid\/view\/View;Z)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0004|if (isDrawerView(r5) == false) goto L16\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|androidx.drawerlayout.widget.DrawerLayout$LayoutParams r0 = (androidx.drawerlayout.widget.DrawerLayout.LayoutParams) r5.getLayoutParams()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|if (r4.mFirstLayout == false) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|r0.onScreen = 0.0f\lr0.openState = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x004c|invalidate()\l}"];
Node_33 [shape=record,label="{33\:\ 0x004f|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017}"];
Node_26 [shape=record,label="{26\:\ 0x0018|if (r6 == false) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|r0.openState = 4 \| r0.openState\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|if (checkDrawerViewAbsoluteGravity(r5, 3) == false) goto L14\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|r4.mLeftDragger.smoothSlideViewTo(r5, \-r5.getWidth(), r5.getTop())\l}"];
Node_30 [shape=record,label="{30\:\ 0x0035|r4.mRightDragger.smoothSlideViewTo(r5, getWidth(), r5.getTop())\l}"];
Node_31 [shape=record,label="{31\:\ 0x0043|moveDrawerToOffset(r5, 0.0f)\lupdateDrawerState(0, r5)\lr5.setVisibility(4)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0050|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"View \")\lr1.append(r5)\lr1.append(\" is not a sliding drawer\")\l}"];
Node_35 [shape=record,label="{35\:\ 0x006b|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.closeDrawer((r4v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5v0 'drawerView' android.view.View A[D('drawerView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'animate' boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0026 \-\> B:32:0x004c, CROSS_EDGE: B:30:0x0035 \-\> B:32:0x004c, CROSS_EDGE: B:31:0x0043 \-\> B:32:0x004c, CROSS_EDGE: B:35:0x006b \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_32;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_35 -> Node_19;
}

