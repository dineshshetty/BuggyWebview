digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.resolveLeftShadow()Landroid\/graphics\/drawable\/Drawable;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r2 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1203)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutDirection' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0010  (LINE:1205)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowStart android.graphics.drawable.Drawable  (LINE:1206)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001a \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: INVOKE  \l  (r2 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:int A[D('layoutDirection' int)])\l type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.mirror(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)] (LINE:1208)\l0x000d: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowStart android.graphics.drawable.Drawable  (LINE:1209)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|RETURN\l|0x000f: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeft android.graphics.drawable.Drawable  (LINE:1218)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowEnd android.graphics.drawable.Drawable  (LINE:1212)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|0x0014: INVOKE  \l  (r2 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:int A[D('layoutDirection' int)])\l type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.mirror(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)] (LINE:1214)\l0x0017: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowEnd android.graphics.drawable.Drawable  (LINE:1215)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.Drawable androidx.drawerlayout.widget.DrawerLayout.resolveLeftShadow((r2 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x001c \-\> B:15:?, CROSS_EDGE: B:25:0x0019 \-\> B:15:?, CROSS_EDGE: B:23:0x0012 \-\> B:26:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001c: r0 'layoutDirection' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

