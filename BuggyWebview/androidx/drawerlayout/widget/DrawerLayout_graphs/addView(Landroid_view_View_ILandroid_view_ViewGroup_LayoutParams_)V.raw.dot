digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.addView(Landroid\/view\/View;ILandroid\/view\/ViewGroup$LayoutParams;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  \l  (r2 I:android.view.ViewGroup)\l  (r3 I:android.view.View A[D('child' android.view.View)])\l  (r4 I:int A[D('index' int)])\l  (r5 I:android.view.ViewGroup$LayoutParams A[D('params' android.view.ViewGroup$LayoutParams)])\l type: SUPER call: android.view.ViewGroup.addView(android.view.View, int, android.view.ViewGroup$LayoutParams):void A[MD:(android.view.View, int, android.view.ViewGroup$LayoutParams):void (c)] (LINE:2132)\l0x0003: INVOKE  (r0 I:android.view.View) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.findOpenDrawer():android.view.View A[MD:():android.view.View (m)] (LINE:2134)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('openDrawer' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0015  (LINE:2135)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r2 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0010 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2143)\l0x0011: INVOKE  (r3 I:android.view.View A[D('child' android.view.View)]), (r1 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: SGET  (r1 I:boolean) =  androidx.drawerlayout.widget.DrawerLayout.CAN_HIDE_DESCENDANTS boolean  (LINE:2149)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: IGET  (r1 I:androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate) = (r2 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mChildAccessibilityDelegate androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate  (LINE:2150)\l0x001f: INVOKE  (r3 I:android.view.View A[D('child' android.view.View)]), (r1 I:androidx.core.view.AccessibilityDelegateCompat) type: STATIC call: androidx.core.view.ViewCompat.setAccessibilityDelegate(android.view.View, androidx.core.view.AccessibilityDelegateCompat):void A[MD:(android.view.View, androidx.core.view.AccessibilityDelegateCompat):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:2152)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:2152)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:2138)\l0x0016: INVOKE  (r3 I:android.view.View A[D('child' android.view.View)]), (r1 I:int) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.addView((r2 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.ViewGroup$LayoutParams A[D('params' android.view.ViewGroup$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x001b \-\> B:26:0x0022, CROSS_EDGE: B:22:0x0015 \-\> B:23:0x0019, CROSS_EDGE: B:17:0x0007 \-\> B:22:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0022: r0 'openDrawer' Landroid\/view\/View;\l  \-1 \-0x0022: r3 'child' Landroid\/view\/View;\l  \-1 \-0x0022: r4 'index' I\l  \-1 \-0x0022: r5 'params' Landroid\/view\/ViewGroup$LayoutParams;\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.addView(android.view.View, int, android.view.ViewGroup$LayoutParams):void\}]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_22 -> Node_23;
}

