digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.addDrawerListener(Landroidx\/drawerlayout\/widget\/DrawerLayout$DrawerListener;)V" {
subgraph cluster_Region_1878706199 {
label = "R(1:(2:(1:2)|(2:(1:6)|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1088250196 {
label = "R(2:(1:2)|(2:(1:6)|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1429664895 {
label = "IF [B:11:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 == null) goto L2\l}"];
subgraph cluster_Region_821978468 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_167618844 {
label = "R(2:(1:6)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_578924214 {
label = "IF [B:14:0x0005] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0005|if (r1.mListeners == null) goto L6\l}"];
subgraph cluster_Region_1089876885 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0007|r1.mListeners = new java.util.ArrayList()\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x000e|r1.mListeners.add(r2)\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0003}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0013}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.addDrawerListener((r1v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener A[D('listener' androidx.drawerlayout.widget.DrawerLayout$DrawerListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0013 \-\> B:10:?, CROSS_EDGE: B:14:0x0005 \-\> B:16:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_10;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_13 -> Node_14;
Node_17 -> Node_10;
}

