digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.updateDrawerState(ILandroid\/view\/View;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: IGET  (r0 I:androidx.customview.widget.ViewDragHelper) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftDragger androidx.customview.widget.ViewDragHelper  (LINE:846)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getViewDragState():int A[MD:():int (m)]\l0x0006: IGET  (r1 I:androidx.customview.widget.ViewDragHelper) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightDragger androidx.customview.widget.ViewDragHelper  (LINE:847)\l0x0008: INVOKE  (r1 I:int) = (r1 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getViewDragState():int A[MD:():int (m)]\l0x000c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:850)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftState' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001c \l}"];
Node_36 [shape=record,label="{36\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rightState' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0012 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|0x0012: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:852)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftState' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x001a \l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rightState' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0018 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0018|0x0018: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:855)\l}"];
Node_45 [shape=record,label="{45\:\ 0x001d|0x001d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('activeDrawer' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x003d  (LINE:858)\l}"];
Node_46 [shape=record,label="{46\:\ 0x001f|0x001f: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('activeState' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x003d \l}"];
Node_47 [shape=record,label="{47\:\ 0x0021|0x0021: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r8 I:android.view.View A[D('activeDrawer' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:859)\l0x0025: CHECK_CAST (r3 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r3 I:??[OBJECT, ARRAY]) \l0x0027: IGET  (r4 I:float) = \l  (r3 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float  (LINE:860)\l0x0029: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002c|0x002c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0032 \l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|0x002e: INVOKE  (r6 I:androidx.drawerlayout.widget.DrawerLayout), (r8 I:android.view.View A[D('activeDrawer' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.dispatchOnDrawerClosed(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:861)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0032|0x0032: IGET  (r4 I:float) = \l  (r3 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float  (LINE:862)\l0x0034: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0036: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0038|0x0038: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x003d \l}"];
Node_52 [shape=record,label="{52\:\ 0x003a|0x003a: INVOKE  (r6 I:androidx.drawerlayout.widget.DrawerLayout), (r8 I:android.view.View A[D('activeDrawer' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.dispatchOnDrawerOpened(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:863)\l}"];
Node_53 [shape=record,label="{53\:\ 0x003d|0x003d: IGET  (r3 I:int A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)]) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mDrawerState int  (LINE:867)\l}"];
Node_54 [shape=record,label="{54\:\ 0x003f|0x003f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x005d \l}"];
Node_55 [shape=record,label="{55\:\ 0x0041|0x0041: IPUT  (r2 I:int A[D('state' int)]), (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mDrawerState int  (LINE:868)\l0x0043: IGET  (r3 I:java.util.List\<androidx.drawerlayout.widget.DrawerLayout$DrawerListener\>) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mListeners java.util.List  (LINE:870)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0045|0x0045: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:? \l}"];
Node_57 [shape=record,label="{57\:\ 0x0047|0x0047: INVOKE  (r3 I:int) = (r3 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:873)\l0x004b: ARITH  (r4 I:int) = (r3 I:int A[D('listenerCount' int)]) + (\-1 int)  (LINE:874)\l}"];
Node_58 [shape=record,label="{58\:\ 0x004d|LOOP_START\lLOOP:0: B:58:0x004d\-\>B:59:0x004f\l|0x004d: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:61:0x005d \l}"];
Node_59 [shape=record,label="{59\:\ 0x004f|LOOP_END\lLOOP:0: B:58:0x004d\-\>B:59:0x004f\l|0x004f: IGET  (r5 I:java.util.List\<androidx.drawerlayout.widget.DrawerLayout$DrawerListener\>) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mListeners java.util.List  (LINE:875)\l0x0051: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r4 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0055: CHECK_CAST (r5 I:androidx.drawerlayout.widget.DrawerLayout$DrawerListener) = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) (r5 I:??[OBJECT, ARRAY]) \l0x0057: INVOKE  (r5 I:androidx.drawerlayout.widget.DrawerLayout$DrawerListener), (r2 I:int A[D('state' int)]) type: INTERFACE call: androidx.drawerlayout.widget.DrawerLayout.DrawerListener.onDrawerStateChanged(int):void A[MD:(int):void (m)]\l0x005a: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (\-1 int)  (LINE:874)\l}"];
Node_61 [shape=record,label="{61\:\ 0x005d|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x005d: RETURN   A[SYNTHETIC] (LINE:879)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|0x005d: RETURN   A[SYNTHETIC] (LINE:879)\l}"];
Node_60 [shape=record,label="{60\:\ 0x005d|RETURN\lORIG_RETURN\l|0x005d: RETURN    (LINE:879)\l}"];
Node_43 [shape=record,label="{43\:\ 0x001a|0x001a: CONST  (r2 I:??[int, float, short, byte, char] A[D('state' int)]) = (2 ??[int, float, short, byte, char])  (LINE:853)\l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|0x001c: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('state' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:851)\l}"];
MethodNode[shape=record,label="{void androidx.drawerlayout.widget.DrawerLayout.updateDrawerState((r6 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('activeState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.view.View A[D('activeDrawer' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:59:0x004f \-\> B:58:0x004d, CROSS_EDGE: B:56:0x0045 \-\> B:60:0x005d, CROSS_EDGE: B:54:0x003f \-\> B:60:0x005d, CROSS_EDGE: B:52:0x003a \-\> B:53:0x003d, CROSS_EDGE: B:51:0x0038 \-\> B:53:0x003d, CROSS_EDGE: B:46:0x001f \-\> B:53:0x003d, CROSS_EDGE: B:45:0x001d \-\> B:53:0x003d, CROSS_EDGE: B:43:0x001a \-\> B:45:0x001d, CROSS_EDGE: B:39:0x0013 \-\> B:43:0x001a, CROSS_EDGE: B:44:0x001c \-\> B:45:0x001d, CROSS_EDGE: B:35:0x000d \-\> B:44:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x001a: r2 'state' I\l  0x001b\-0x001c: r2 'state' I\l  0x0027\-0x003d: r3 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x004b\-0x005d: r3 'listenerCount' I\l  0x004d\-0x005d: r4 'i' I\l  0x0006\-0x005d: r0 'leftState' I\l  0x000c\-0x005d: r1 'rightState' I\l  0x001d\-0x005d: r2 'state' I\l  \-1 \-0x005d: r7 'activeState' I\l  \-1 \-0x005d: r8 'activeDrawer' Landroid\/view\/View;\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_38;
Node_36 -> Node_44[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_42;
Node_40 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_53;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_53;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_60;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_62;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_58;
Node_61 -> Node_63;
Node_63 -> Node_33;
Node_62 -> Node_33;
Node_60 -> Node_33;
Node_43 -> Node_45;
Node_44 -> Node_45;
}

