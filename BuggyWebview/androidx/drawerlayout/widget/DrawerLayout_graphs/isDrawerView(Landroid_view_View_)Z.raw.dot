digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.isDrawerView(Landroid\/view\/View;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1520)\l0x0004: CHECK_CAST (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0006: IGET  (r0 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) androidx.drawerlayout.widget.DrawerLayout.LayoutParams.gravity int \l0x0009: INVOKE  (r1 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1522)\l0x000d: INVOKE  (r1 I:int) = (r0 I:int A[D('gravity' int)]), (r1 I:int) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)] (LINE:1521)\l0x0011: ARITH  (r2 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('absGravity' int)]) & (3 ??[int, float, short, byte, char])  (LINE:1523)\l0x0013: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0017 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|RETURN\l|0x0016: RETURN  (r3 I:boolean)  (LINE:1525)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|0x0017: ARITH  (r2 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('absGravity' int)]) & (5 ??[int, float, short, byte, char])  (LINE:1527)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001c \l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|RETURN\l|0x001b: RETURN  (r3 I:boolean)  (LINE:1529)\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|RETURN\l|0x001c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1531)\l0x001d: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean androidx.drawerlayout.widget.DrawerLayout.isDrawerView((r4 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x001b \-\> B:11:?, CROSS_EDGE: B:19:0x001d \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x001d: r0 'gravity' I\l  0x0011\-0x001d: r1 'absGravity' I\l  \-1 \-0x001d: r5 'child' Landroid\/view\/View;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_11;
}

