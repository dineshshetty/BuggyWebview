digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.closeDrawer(Landroid\/view\/View;Z)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:androidx.drawerlayout.widget.DrawerLayout), (r5 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1819)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0050 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1823)\l0x000a: CHECK_CAST (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x000c: IGET  (r1 I:boolean) = (r4 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mFirstLayout boolean  (LINE:1824)\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: IPUT  \l  (r3 I:float)\l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float  (LINE:1825)\l0x0014: IPUT  \l  (r2 I:int)\l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.openState int  (LINE:1826)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004c|0x004c: INVOKE  (r4 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.invalidate():void A[MD:():void (s)] (LINE:1841)\l}"];
Node_33 [shape=record,label="{33\:\ 0x004f|RETURN\l|0x004f: RETURN    (LINE:1842)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:1827)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('animate' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0043 \l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: IGET  (r2 I:int) = \l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.openState int  (LINE:1828)\l0x001c: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char]) \l0x001d: IPUT  \l  (r1 I:int)\l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.openState int \l0x001f: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1830)\l0x0020: INVOKE  (r1 I:boolean) = \l  (r4 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r5 I:android.view.View A[D('drawerView' android.view.View)])\l  (r1 I:int)\l type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0035 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|0x0026: IGET  (r1 I:androidx.customview.widget.ViewDragHelper) = (r4 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftDragger androidx.customview.widget.ViewDragHelper  (LINE:1831)\l0x0028: INVOKE  (r2 I:int) = (r5 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x002c: NEG  (r2 I:int) = (r2 I:int) \l0x002d: INVOKE  (r3 I:int) = (r5 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:1832)\l0x0031: INVOKE  \l  (r1 I:androidx.customview.widget.ViewDragHelper)\l  (r5 I:android.view.View A[D('drawerView' android.view.View)])\l  (r2 I:int)\l  (r3 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)] (LINE:1831)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0035|0x0035: IGET  (r1 I:androidx.customview.widget.ViewDragHelper) = (r4 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightDragger androidx.customview.widget.ViewDragHelper  (LINE:1834)\l0x0037: INVOKE  (r2 I:int) = (r4 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)]\l0x003b: INVOKE  (r3 I:int) = (r5 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x003f: INVOKE  \l  (r1 I:androidx.customview.widget.ViewDragHelper)\l  (r5 I:android.view.View A[D('drawerView' android.view.View)])\l  (r2 I:int)\l  (r3 I:int)\l type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.smoothSlideViewTo(android.view.View, int, int):boolean A[MD:(android.view.View, int, int):boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0043|0x0043: INVOKE  \l  (r4 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r5 I:android.view.View A[D('drawerView' android.view.View)])\l  (r3 I:float)\l type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.moveDrawerToOffset(android.view.View, float):void A[MD:(android.view.View, float):void (m)] (LINE:1837)\l0x0046: INVOKE  \l  (r4 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r2 I:int)\l  (r5 I:android.view.View A[D('drawerView' android.view.View)])\l type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.updateDrawerState(int, android.view.View):void A[MD:(int, android.view.View):void (m)] (LINE:1838)\l0x0049: INVOKE  (r5 I:android.view.View A[D('drawerView' android.view.View)]), (r1 I:int) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:1839)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0050|0x0050: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)]) =  java.lang.IllegalArgumentException  (LINE:1820)\l0x0052: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0054: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0057: CONST_STR  (r2 I:java.lang.String) =  \"View \" \l0x0059: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x005c: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('drawerView' android.view.View)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x005f: CONST_STR  (r2 I:java.lang.String) =  \" is not a sliding drawer\" \l0x0061: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0064: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0068: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x006b|0x006b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.drawerlayout.widget.DrawerLayout.closeDrawer((r4 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('drawerView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('animate' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0026 \-\> B:32:0x004c, CROSS_EDGE: B:30:0x0035 \-\> B:32:0x004c, CROSS_EDGE: B:31:0x0043 \-\> B:32:0x004c, CROSS_EDGE: B:35:0x006b \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0050: r0 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  \-1 \-0x006b: r5 'drawerView' Landroid\/view\/View;\l  \-1 \-0x006b: r6 'animate' Z\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_32;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_35 -> Node_19;
}

