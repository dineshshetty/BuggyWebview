digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.onLayout(ZIIII)V" {
Node_51 [shape=record,label="{51\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:1250)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: IPUT  (r1 I:boolean), (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mInLayout boolean \l0x0005: ARITH  (r2 I:int) = (r21 I:int A[D('r' int)]) \- (r19 I:int A[D('l' int)])  (LINE:1251)\l0x0007: INVOKE  (r3 I:int) = (r17 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:1252)\l0x000b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1253)\l}"];
Node_54 [shape=record,label="{54\:\ 0x000c|LOOP_START\lLOOP:0: B:54:0x000c\-\>B:89:0x00d6\l|0x000c: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:97:0x00db \l}"];
Node_55 [shape=record,label="{55\:\ 0x000e|0x000e: INVOKE  (r6 I:android.view.View) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r4 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1254)\l0x0012: INVOKE  (r7 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:1256)\l0x0016: CONST  (r8 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0018|0x0018: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x001c \l}"];
Node_58 [shape=record,label="{58\:\ 0x001c|0x001c: INVOKE  (r7 I:android.view.ViewGroup$LayoutParams) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1260)\l0x0020: CHECK_CAST (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r7 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r8 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isContentView(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1262)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0026|0x0026: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x003f \l}"];
Node_60 [shape=record,label="{60\:\ 0x0028|0x0028: IGET  (r5 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.leftMargin int  (LINE:1263)\l0x002a: IGET  (r8 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int \l0x002c: IGET  (r9 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.leftMargin int \l0x002e: INVOKE  (r10 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1264)\l0x0032: ARITH  (r9 I:int) = (r9 I:int) + (r10 I:int) \l0x0033: IGET  (r10 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int \l0x0035: INVOKE  (r11 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:1265)\l0x0039: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l0x003a: INVOKE  (r6 I:android.view.View A[D('child' android.view.View)]), (r5 I:int), (r8 I:int), (r9 I:int), (r10 I:int) type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:1263)\l}"];
Node_99 [shape=record,label="{99\:\ 0x00d6|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x00d6|LOOP_END\lLOOP:0: B:54:0x000c\-\>B:89:0x00d6\l|0x00d6: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:1253)\l0x00d8: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x003f|0x003f: INVOKE  (r8 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1267)\l0x0043: INVOKE  (r9 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:1268)\l0x0047: CONST  (r10 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1272)\l0x0048: INVOKE  (r10 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r6 I:android.view.View A[D('child' android.view.View)]), (r10 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x004c|0x004c: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x005c \l}"];
Node_63 [shape=record,label="{63\:\ 0x004e|0x004e: NEG  (r10 I:int) = (r8 I:int A[D('childWidth' int)])  (LINE:1273)\l0x004f: CAST (r11 I:float) = (float) (r8 I:int A[D('childWidth' int)]) \l0x0050: IGET  (r12 I:float) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float \l0x0052: ARITH  (r11 I:float) = (r11 I:float) * (r12 I:float) \l0x0054: CAST (r11 I:int) = (int) (r11 I:float) \l0x0055: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l0x0056: ARITH  (r11 I:int) = (r8 I:int A[D('childWidth' int)]) + (r10 I:int A[D('childLeft' int)])  (LINE:1274)\l0x0058: CAST (r11 I:float) = (float) (r11 I:int) \l0x0059: CAST (r12 I:float) = (float) (r8 I:int A[D('childWidth' int)]) \l0x005a: ARITH  (r11 I:float) = (r11 I:float) \/ (r12 I:float) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0069|0x0069: IGET  (r12 I:float) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float  (LINE:1280)\l0x006b: CMP_L  (r12 I:int) = (r11 I:float A[D('newOffset' float)]), (r12 I:float) \l}"];
Node_66 [shape=record,label="{66\:\ 0x006d|0x006d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0071 \l}"];
Node_67 [shape=record,label="{67\:\ 0x006f|0x006f: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0072|0x0072: IGET  (r13 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.gravity int  (LINE:1282)\l0x0074: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) & (112(0x70, float:1.57E\-43) ??[int, float, short, byte, char]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0076|0x0076: SWITCH  (r13 I:?? A[D('vgrav' int)])\l case 16: goto B:73:0x009a\l case 80: goto B:72:0x0084\l default: goto B:71:0x0079  (LINE:1284)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0079|0x0079: IGET  (r1 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int  (LINE:1287)\l0x007b: ARITH  (r5 I:int) = (r10 I:int A[D('childLeft' int)]) + (r8 I:int A[D('childWidth' int)]) \l0x007d: IGET  (r14 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int \l0x007f: ARITH  (r14 I:int) = (r14 I:int) + (r9 I:int A[D('childHeight' int)]) \l0x0080: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r10 I:int A[D('childLeft' int)])\l  (r1 I:int)\l  (r5 I:int)\l  (r14 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x00bd|0x00bd: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('changeOffset' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x00c2  (LINE:1318)\l}"];
Node_81 [shape=record,label="{81\:\ 0x00bf|0x00bf: INVOKE  \l  (r0 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r11 I:float A[D('newOffset' float)])\l type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.setDrawerViewOffset(android.view.View, float):void A[MD:(android.view.View, float):void (m)] (LINE:1319)\l}"];
Node_82 [shape=record,label="{82\:\ 0x00c2|0x00c2: IGET  (r1 I:float) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float  (LINE:1322)\l0x00c4: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00c5: CMP_L  (r1 I:int) = (r1 I:float), (r5 I:float) \l}"];
Node_83 [shape=record,label="{83\:\ 0x00c7|0x00c7: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:85:0x00cb \l}"];
Node_84 [shape=record,label="{84\:\ 0x00c9|0x00c9: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_86 [shape=record,label="{86\:\ 0x00cc|0x00cc: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00cd: INVOKE  (r5 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:1323)\l}"];
Node_87 [shape=record,label="{87\:\ 0x00d1|0x00d1: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newVisibility' int)])  \-\> B:100:0x00d6 \l}"];
Node_88 [shape=record,label="{88\:\ 0x00d3|0x00d3: INVOKE  (r6 I:android.view.View A[D('child' android.view.View)]), (r1 I:int A[D('newVisibility' int)]) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:1324)\l}"];
Node_98 [shape=record,label="{98\:\ 0x00d6|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x00d6|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x00cb|0x00cb: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0084|0x0084: ARITH  (r14 I:int) = (r22 I:int A[D('b' int)]) \- (r20 I:int A[D('t' int)])  (LINE:1293)\l0x0086: IGET  (r15 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int  (LINE:1294)\l0x0088: ARITH  (r15 I:int) = (r14 I:int A[D('height' int)]) \- (r15 I:int) \l0x008a: INVOKE  (r16 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:1295)\l0x008e: ARITH  (r15 I:int) = (r15 I:int) \- (r16 I:int) \l0x0090: ARITH  (r1 I:int) = (r10 I:int A[D('childLeft' int)]) + (r8 I:int A[D('childWidth' int)]) \l0x0092: IGET  (r5 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x0094: ARITH  (r5 I:int) = (r14 I:int A[D('height' int)]) \- (r5 I:int) \l0x0096: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r10 I:int A[D('childLeft' int)])\l  (r15 I:int)\l  (r1 I:int)\l  (r5 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:1294)\l}"];
Node_73 [shape=record,label="{73\:\ 0x009a|0x009a: ARITH  (r1 I:int) = (r22 I:int A[D('b' int)]) \- (r20 I:int A[D('t' int)])  (LINE:1302)\l0x009c: ARITH  (r5 I:int) = (r1 I:int A[D('height' int)]) \- (r9 I:int A[D('childHeight' int)])  (LINE:1303)\l0x009e: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x00a0: IGET  (r14 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int  (LINE:1307)\l}"];
Node_74 [shape=record,label="{74\:\ 0x00a2|0x00a2: IF  (r5 I:??[int, byte, short, char] A[D('childTop' int)]) \>= (r14 I:??[int, byte, short, char])  \-\> B:76:0x00a7 \l}"];
Node_75 [shape=record,label="{75\:\ 0x00a4|0x00a4: IGET  (r5 I:int A[D('childTop' int)]) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int  (LINE:1308)\l}"];
Node_79 [shape=record,label="{79\:\ 0x00b5|0x00b5: ARITH  (r14 I:int) = (r10 I:int A[D('childLeft' int)]) + (r8 I:int A[D('childWidth' int)])  (LINE:1312)\l0x00b7: ARITH  (r15 I:int) = (r5 I:int A[D('childTop' int)]) + (r9 I:int A[D('childHeight' int)]) \l0x00b9: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r10 I:int A[D('childLeft' int)])\l  (r5 I:int A[D('childTop' int)])\l  (r14 I:int)\l  (r15 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x00a7|0x00a7: ARITH  (r14 I:int) = (r5 I:int A[D('childTop' int)]) + (r9 I:int A[D('childHeight' int)])  (LINE:1309)\l0x00a9: IGET  (r15 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x00ab: ARITH  (r15 I:int) = (r1 I:int A[D('height' int)]) \- (r15 I:int) \l}"];
Node_77 [shape=record,label="{77\:\ 0x00ad|0x00ad: IF  (r14 I:??[int, byte, short, char]) \<= (r15 I:??[int, byte, short, char])  \-\> B:79:0x00b5 \l}"];
Node_78 [shape=record,label="{78\:\ 0x00af|0x00af: IGET  (r14 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int  (LINE:1310)\l0x00b1: ARITH  (r14 I:int) = (r1 I:int A[D('height' int)]) \- (r14 I:int) \l0x00b3: ARITH  (r5 I:int A[D('childTop' int)]) = (r14 I:int) \- (r9 I:int A[D('childHeight' int)]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x0071|0x0071: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x005c|0x005c: CAST (r10 I:float A[D('childLeft' int)]) = (float) (r8 I:int A[D('childWidth' int)])  (LINE:1276)\l0x005d: IGET  (r11 I:float) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.onScreen float \l0x005f: ARITH  (r10 I:float) = (r10 I:float) * (r11 I:float) \l0x0061: CAST (r10 I:int) = (int) (r10 I:float) \l0x0062: ARITH  (r10 I:int) = (r2 I:int A[D('width' int)]) \- (r10 I:int) \l0x0064: ARITH  (r11 I:int) = (r2 I:int A[D('width' int)]) \- (r10 I:int A[D('childLeft' int)])  (LINE:1277)\l0x0066: CAST (r11 I:float) = (float) (r11 I:int) \l0x0067: CAST (r12 I:float) = (float) (r8 I:int A[D('childWidth' int)]) \l0x0068: ARITH  (r11 I:float) = (r11 I:float) \/ (r12 I:float) \l}"];
Node_101 [shape=record,label="{101\:\ 0x00d6|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x00db|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x00db|0x00db: SGET  (r1 I:boolean) =  androidx.drawerlayout.widget.DrawerLayout.sEdgeSizeUsingSystemGestureInsets boolean  (LINE:1329)\l}"];
Node_91 [shape=record,label="{91\:\ 0x00dd|0x00dd: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x010c \l}"];
Node_92 [shape=record,label="{92\:\ 0x00df|0x00df: INVOKE  (r1 I:android.view.WindowInsets) = (r17 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getRootWindowInsets():android.view.WindowInsets A[MD:():android.view.WindowInsets (s)] (LINE:1331)\l}"];
Node_93 [shape=record,label="{93\:\ 0x00e3|0x00e3: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rootInsets' android.view.WindowInsets)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x010c  (LINE:1332)\l}"];
Node_94 [shape=record,label="{94\:\ 0x00e6|0x00e6: INVOKE  (r4 I:androidx.core.view.WindowInsetsCompat) = (r1 I:android.view.WindowInsets A[D('rootInsets' android.view.WindowInsets)]) type: STATIC call: androidx.core.view.WindowInsetsCompat.toWindowInsetsCompat(android.view.WindowInsets):androidx.core.view.WindowInsetsCompat A[MD:(android.view.WindowInsets):androidx.core.view.WindowInsetsCompat (m)] (LINE:1334)\l0x00ea: INVOKE  (r5 I:androidx.core.graphics.Insets) = (r4 I:androidx.core.view.WindowInsetsCompat A[D('rootInsetsCompat' androidx.core.view.WindowInsetsCompat)]) type: VIRTUAL call: androidx.core.view.WindowInsetsCompat.getSystemGestureInsets():androidx.core.graphics.Insets A[MD:():androidx.core.graphics.Insets (m)] (LINE:1335)\l0x00ee: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftDragger androidx.customview.widget.ViewDragHelper  (LINE:1339)\l0x00f0: INVOKE  (r7 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getDefaultEdgeSize():int A[MD:():int (m)] (LINE:1340)\l0x00f4: IGET  (r8 I:int) = (r5 I:androidx.core.graphics.Insets A[D('gestureInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.left int \l0x00f6: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x00fa: INVOKE  (r6 I:androidx.customview.widget.ViewDragHelper), (r7 I:int) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.setEdgeSize(int):void A[MD:(int):void (m)] (LINE:1339)\l0x00fd: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightDragger androidx.customview.widget.ViewDragHelper  (LINE:1341)\l0x00ff: INVOKE  (r7 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getDefaultEdgeSize():int A[MD:():int (m)] (LINE:1342)\l0x0103: IGET  (r8 I:int) = (r5 I:androidx.core.graphics.Insets A[D('gestureInsets' androidx.core.graphics.Insets)]) androidx.core.graphics.Insets.right int \l0x0105: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0109: INVOKE  (r6 I:androidx.customview.widget.ViewDragHelper), (r7 I:int) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.setEdgeSize(int):void A[MD:(int):void (m)] (LINE:1341)\l}"];
Node_95 [shape=record,label="{95\:\ 0x010c|0x010c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rootInsets' android.view.WindowInsets)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1346)\l0x010d: IPUT  (r1 I:boolean), (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mInLayout boolean \l0x010f: IPUT  (r1 I:boolean), (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mFirstLayout boolean  (LINE:1347)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0111|RETURN\l|0x0111: RETURN    (LINE:1348)\l}"];
Node_52 [shape=record,label="{52\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.drawerlayout.widget.DrawerLayout.onLayout((r17 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r18 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:89:0x00d6 \-\> B:54:0x000c, CROSS_EDGE: B:88:0x00d3 \-\> B:89:0x00d6, CROSS_EDGE: B:87:0x00d1 \-\> B:89:0x00d6, CROSS_EDGE: B:85:0x00cb \-\> B:86:0x00cc, CROSS_EDGE: B:80:0x00bd \-\> B:82:0x00c2, CROSS_EDGE: B:72:0x0084 \-\> B:80:0x00bd, CROSS_EDGE: B:79:0x00b5 \-\> B:80:0x00bd, CROSS_EDGE: B:78:0x00af \-\> B:79:0x00b5, CROSS_EDGE: B:77:0x00ad \-\> B:79:0x00b5, CROSS_EDGE: B:68:0x0071 \-\> B:69:0x0072, CROSS_EDGE: B:64:0x005c \-\> B:65:0x0069, CROSS_EDGE: B:56:0x0018 \-\> B:89:0x00d6, CROSS_EDGE: B:93:0x00e3 \-\> B:95:0x010c, CROSS_EDGE: B:91:0x00dd \-\> B:95:0x010c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0056\-0x005c: r10 'childLeft' I\l  0x005b\-0x005c: r11 'newOffset' F\l  0x0086\-0x009a: r14 'height' I\l  0x009c\-0x00bd: r1 'height' I\l  0x00a0\-0x00bd: r5 'childTop' I\l  0x00cd\-0x00d6: r1 'newVisibility' I\l  0x0012\-0x00d6: r6 'child' Landroid\/view\/View;\l  0x0022\-0x00d6: r7 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x0043\-0x00d6: r8 'childWidth' I\l  0x0047\-0x00d6: r9 'childHeight' I\l  0x0064\-0x00d6: r10 'childLeft' I\l  0x0069\-0x00d6: r11 'newOffset' F\l  0x0072\-0x00d6: r12 'changeOffset' Z\l  0x0076\-0x00d6: r13 'vgrav' I\l  0x000c\-0x00db: r4 'i' I\l  0x00e3\-0x010c: r1 'rootInsets' Landroid\/view\/WindowInsets;\l  0x00ea\-0x010c: r4 'rootInsetsCompat' Landroidx\/core\/view\/WindowInsetsCompat;\l  0x00ee\-0x010c: r5 'gestureInsets' Landroidx\/core\/graphics\/Insets;\l  0x0007\-0x011b: r2 'width' I\l  0x000b\-0x011b: r3 'childCount' I\l  \-1 \-0x011b: r18 'changed' Z\l  \-1 \-0x011b: r19 'l' I\l  \-1 \-0x011b: r20 't' I\l  \-1 \-0x011b: r21 'r' I\l  \-1 \-0x011b: r22 'b' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_51;Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_97;
Node_55 -> Node_56;
Node_56 -> Node_58;
Node_56 -> Node_101[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_99;
Node_99 -> Node_89;
Node_89 -> Node_54;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_70 -> Node_72;
Node_70 -> Node_73;
Node_71 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_82;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_85;
Node_84 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_100;
Node_88 -> Node_98;
Node_98 -> Node_89;
Node_100 -> Node_89;
Node_85 -> Node_86;
Node_72 -> Node_80;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_79;
Node_79 -> Node_80;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_79;
Node_68 -> Node_69;
Node_64 -> Node_65;
Node_101 -> Node_89;
Node_97 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_95;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_52;
}

