digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity(I)Landroid\/view\/View;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|0x0001: INVOKE  (r0 I:int) = (r6 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1027)\l0x0005: INVOKE  (r0 I:int) = (r7 I:int A[D('gravity' int)]), (r0 I:int) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)] (LINE:1026)\l0x0009: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (7 ??[int, float, short, byte, char]) \l0x000b: INVOKE  (r1 I:int) = (r6 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:1028)\l0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1029)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|LOOP_START\lLOOP:0: B:15:0x0010\-\>B:19:0x001f\l|0x0010: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:22:0x0022 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: INVOKE  (r3 I:android.view.View) = (r6 I:androidx.drawerlayout.widget.DrawerLayout), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1030)\l0x0016: INVOKE  (r4 I:int) = (r6 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerViewAbsoluteGravity(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1031)\l0x001a: ARITH  (r5 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char] A[D('childAbsGravity' int)]) & (7 ??[int, float, short, byte, char])  (LINE:1032)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|0x001c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('absHorizGravity' int)])  \-\> B:19:0x001f \l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|LOOP_END\lLOOP:0: B:15:0x0010\-\>B:19:0x001f\l|0x001f: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1029)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x001e|RETURN\l|0x001e: RETURN  (r3 I:android.view.View A[D('child' android.view.View)])  (LINE:1033)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|RETURN\l|0x0022: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1036)\l0x0023: RETURN  (r2 I:android.view.View) \l}"];
MethodNode[shape=record,label="{android.view.View androidx.drawerlayout.widget.DrawerLayout.findDrawerWithGravity((r6 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('gravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x001f \-\> B:15:0x0010, CROSS_EDGE: B:21:0x0023 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001f: r3 'child' Landroid\/view\/View;\l  0x001a\-0x001f: r4 'childAbsGravity' I\l  0x0010\-0x0022: r2 'i' I\l  0x000b\-0x0023: r0 'absHorizGravity' I\l  0x000f\-0x0023: r1 'childCount' I\l  \-1 \-0x0023: r7 'gravity' I\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_15;
Node_23 -> Node_18;
Node_18 -> Node_13;
Node_22 -> Node_20;
Node_20 -> Node_13;
}

