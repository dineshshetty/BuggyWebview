digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.mirror(Landroid\/graphics\/drawable\/Drawable;I)V" {
subgraph cluster_Region_1934720818 {
label = "R(1:(1:(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1959939696 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_728635456 {
label = "IF [B:11:0x0000, B:13:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 != null) goto L2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|ADDED_TO_REGION\l|if (androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(r2) != false) goto L4\l}"];
subgraph cluster_Region_934396795 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0008|androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection(r2, r3)\l}"];
}
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0002}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000b|ORIG_RETURN\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.drawerlayout.widget.DrawerLayout.mirror((r1v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r2v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'layoutDirection' int A[D('layoutDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:15:0x000b, CROSS_EDGE: B:11:0x0000 \-\> B:15:0x000b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_10;
Node_17 -> Node_10;
Node_16 -> Node_10;
}

