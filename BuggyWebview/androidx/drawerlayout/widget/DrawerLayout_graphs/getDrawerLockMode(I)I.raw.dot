digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(I)I" {
Node_43 [shape=record,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:684)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:686)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0005|0x0005: SWITCH  (r4 I:?? A[D('edgeGravity' int)])\l case 3: goto B:72:0x0036\l case 5: goto B:64:0x0027\l case 8388611: goto B:56:0x0018\l case 8388613: goto B:48:0x0009\l default: goto B:85:? \l}"];
Node_48 [shape=record,label="{48\:\ 0x0009|0x0009: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeEnd int  (LINE:718)\l}"];
Node_49 [shape=record,label="{49\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x000e \l}"];
Node_50 [shape=record,label="{50\:\ 0x000d|RETURN\l|0x000d: RETURN  (r2 I:int)  (LINE:719)\l}"];
Node_44 [shape=record,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutDirection' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0013  (LINE:721)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0010|0x0010: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeRight int  (LINE:722)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('endLockMode' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0045  (LINE:723)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:int A[D('endLockMode' int)])  (LINE:724)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0045|RETURN\lORIG_RETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:729)\l0x0046: RETURN  (r1 I:int) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0013|0x0013: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeLeft int \l}"];
Node_56 [shape=record,label="{56\:\ 0x0018|0x0018: IGET  (r2 I:int A[D('endLockMode' int)]) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeStart int  (LINE:708)\l}"];
Node_57 [shape=record,label="{57\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x001d \l}"];
Node_58 [shape=record,label="{58\:\ 0x001c|RETURN\l|0x001c: RETURN  (r2 I:int)  (LINE:709)\l}"];
Node_59 [shape=record,label="{59\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutDirection' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0022  (LINE:711)\l}"];
Node_60 [shape=record,label="{60\:\ 0x001f|0x001f: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeLeft int  (LINE:712)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0024|0x0024: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startLockMode' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:?  (LINE:713)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:int A[D('startLockMode' int)])  (LINE:714)\l}"];
Node_82 [shape=record,label="{82\:\ ?|SYNTHETIC\lRETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:729)\l0x0046: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0022|0x0022: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeRight int \l}"];
Node_64 [shape=record,label="{64\:\ 0x0027|0x0027: IGET  (r2 I:int A[D('startLockMode' int)]) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeRight int  (LINE:698)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0029|0x0029: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x002c \l}"];
Node_66 [shape=record,label="{66\:\ 0x002b|RETURN\l|0x002b: RETURN  (r2 I:int)  (LINE:699)\l}"];
Node_67 [shape=record,label="{67\:\ 0x002c|0x002c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutDirection' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0031  (LINE:701)\l}"];
Node_68 [shape=record,label="{68\:\ 0x002e|0x002e: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeEnd int  (LINE:702)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0033|0x0033: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('rightLockMode' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:?  (LINE:703)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0035|RETURN\l|0x0035: RETURN  (r2 I:int A[D('rightLockMode' int)])  (LINE:704)\l}"];
Node_83 [shape=record,label="{83\:\ ?|SYNTHETIC\lRETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:729)\l0x0046: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0031|0x0031: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeStart int \l}"];
Node_72 [shape=record,label="{72\:\ 0x0036|0x0036: IGET  (r2 I:int A[D('rightLockMode' int)]) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeLeft int  (LINE:688)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0038|0x0038: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x003b \l}"];
Node_74 [shape=record,label="{74\:\ 0x003a|RETURN\l|0x003a: RETURN  (r2 I:int)  (LINE:689)\l}"];
Node_75 [shape=record,label="{75\:\ 0x003b|0x003b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layoutDirection' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0040  (LINE:691)\l}"];
Node_76 [shape=record,label="{76\:\ 0x003d|0x003d: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeStart int  (LINE:692)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0042|0x0042: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('leftLockMode' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:?  (LINE:693)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0044|RETURN\l|0x0044: RETURN  (r2 I:int A[D('leftLockMode' int)])  (LINE:694)\l}"];
Node_84 [shape=record,label="{84\:\ ?|SYNTHETIC\lRETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:729)\l0x0046: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_77 [shape=record,label="{77\:\ 0x0040|0x0040: IGET  (r2 I:int) = (r3 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLockModeEnd int \l}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lRETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:729)\l0x0046: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public int androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode((r3 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('edgeGravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0017 \-\> B:44:?, CROSS_EDGE: B:81:0x0046 \-\> B:44:?, CROSS_EDGE: B:53:0x0013 \-\> B:54:0x0015, CROSS_EDGE: B:58:0x001c \-\> B:44:?, CROSS_EDGE: B:63:0x0026 \-\> B:44:?, CROSS_EDGE: B:62:0x0024 \-\> B:80:0x0045, CROSS_EDGE: B:61:0x0022 \-\> B:62:0x0024, CROSS_EDGE: B:66:0x002b \-\> B:44:?, CROSS_EDGE: B:71:0x0035 \-\> B:44:?, CROSS_EDGE: B:70:0x0033 \-\> B:80:0x0045, CROSS_EDGE: B:69:0x0031 \-\> B:70:0x0033, CROSS_EDGE: B:74:0x003a \-\> B:44:?, CROSS_EDGE: B:79:0x0044 \-\> B:44:?, CROSS_EDGE: B:78:0x0042 \-\> B:80:0x0045, CROSS_EDGE: B:77:0x0040 \-\> B:78:0x0042, CROSS_EDGE: B:46:0x0005 \-\> B:80:0x0045\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0018: r2 'endLockMode' I\l  0x0024\-0x0027: r2 'startLockMode' I\l  0x0033\-0x0036: r2 'rightLockMode' I\l  0x0042\-0x0045: r2 'leftLockMode' I\l  0x0004\-0x0059: r0 'layoutDirection' I\l  \-1 \-0x0059: r4 'edgeGravity' I\l}"];
MethodNode -> Node_43;Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_48;
Node_46 -> Node_56;
Node_46 -> Node_64;
Node_46 -> Node_72;
Node_46 -> Node_85;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_44;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_80;
Node_55 -> Node_44;
Node_80 -> Node_44;
Node_53 -> Node_54;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_44;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_82;
Node_63 -> Node_44;
Node_82 -> Node_44;
Node_61 -> Node_62;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_44;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_83;
Node_71 -> Node_44;
Node_83 -> Node_44;
Node_69 -> Node_70;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_44;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_84;
Node_79 -> Node_44;
Node_84 -> Node_44;
Node_77 -> Node_78;
Node_85 -> Node_44;
}

