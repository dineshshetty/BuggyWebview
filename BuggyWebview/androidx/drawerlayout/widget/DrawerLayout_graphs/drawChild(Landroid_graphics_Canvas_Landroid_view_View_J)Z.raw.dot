digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_54 [shape=record,label="{54\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY])  (LINE:1453)\l0x0002: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0004: MOVE  (r8 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x0006: INVOKE  (r9 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getHeight():int A[MD:():int (s)]\l0x000a: INVOKE  (r10 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r8 I:android.view.View) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isContentView(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1454)\l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1455)\l0x000f: INVOKE  (r2 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)]\l0x0013: INVOKE  (r11 I:int) = (r20 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:1457)\l0x0017: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1458)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0018|0x0018: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawingContent' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x0063 \l}"];
Node_58 [shape=record,label="{58\:\ 0x001a|0x001a: INVOKE  (r4 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:1459)\l0x001e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1460)\l}"];
Node_59 [shape=record,label="{59\:\ 0x001f|LOOP_START\lLOOP:0: B:59:0x001f\-\>B:80:0x0055\l|0x001f: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:98:0x0058 \l}"];
Node_60 [shape=record,label="{60\:\ 0x0021|0x0021: INVOKE  (r6 I:android.view.View) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1461)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0025|0x0025: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('v' android.view.View)]) == (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x0055  (LINE:1462)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0027|0x0027: INVOKE  (r12 I:int) = (r6 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x002b|0x002b: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x0055 \l}"];
Node_64 [shape=record,label="{64\:\ 0x002d|0x002d: INVOKE  (r12 I:boolean) = (r6 I:android.view.View A[D('v' android.view.View)]) type: STATIC call: androidx.drawerlayout.widget.DrawerLayout.hasOpaqueBackground(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1463)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0031|0x0031: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0055 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0033|0x0033: INVOKE  (r12 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r6 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0037|0x0037: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:103:0x0055 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0039|0x0039: INVOKE  (r12 I:int) = (r6 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)] (LINE:1464)\l}"];
Node_69 [shape=record,label="{69\:\ 0x003d|0x003d: IF  (r12 I:??[int, byte, short, char]) \>= (r9 I:??[int, byte, short, char] A[D('height' int)])  \-\> B:71:0x0040 \l}"];
Node_71 [shape=record,label="{71\:\ 0x0040|0x0040: INVOKE  (r12 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r6 I:android.view.View A[D('v' android.view.View)]), (r3 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)] (LINE:1468)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0044|0x0044: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x004e \l}"];
Node_73 [shape=record,label="{73\:\ 0x0046|0x0046: INVOKE  (r12 I:int) = (r6 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:1469)\l}"];
Node_74 [shape=record,label="{74\:\ 0x004a|0x004a: IF  (r12 I:??[int, byte, short, char] A[D('vright' int)]) \<= (r1 I:??[int, byte, short, char] A[D('clipLeft' int)])  \-\> B:107:0x0055  (LINE:1470)\l}"];
Node_75 [shape=record,label="{75\:\ 0x004c|0x004c: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipLeft' int)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('vright' int)]) \l}"];
Node_106 [shape=record,label="{106\:\ 0x0055|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0055|LOOP_END\lLOOP:0: B:59:0x001f\-\>B:80:0x0055\l|0x0055: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:1460)\l}"];
Node_107 [shape=record,label="{107\:\ 0x0055|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x004e|0x004e: INVOKE  (r12 I:int) = (r6 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:1472)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0052|0x0052: IF  (r12 I:??[int, byte, short, char] A[D('vleft' int)]) \>= (r2 I:??[int, byte, short, char] A[D('clipRight' int)])  \-\> B:104:0x0055  (LINE:1473)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0054|0x0054: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipRight' int)]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('vleft' int)]) \l}"];
Node_99 [shape=record,label="{99\:\ 0x0055|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x0055|SYNTHETIC\l}"];
Node_105 [shape=record,label="{105\:\ 0x0055|SYNTHETIC\l}"];
Node_103 [shape=record,label="{103\:\ 0x0055|SYNTHETIC\l}"];
Node_102 [shape=record,label="{102\:\ 0x0055|SYNTHETIC\l}"];
Node_101 [shape=record,label="{101\:\ 0x0055|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x0055|SYNTHETIC\l}"];
Node_98 [shape=record,label="{98\:\ 0x0058|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0058|0x0058: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1476)\l0x0059: INVOKE  (r6 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getHeight():int A[MD:():int (s)]\l0x005d: INVOKE  \l  (r7 I:android.graphics.Canvas)\l  (r1 I:int A[D('clipLeft' int)])\l  (r5 I:int)\l  (r2 I:int A[D('clipRight' int)])\l  (r6 I:int)\l type: VIRTUAL call: android.graphics.Canvas.clipRect(int, int, int, int):boolean A[MD:(int, int, int, int):boolean (c)]\l0x0060: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipLeft' int)]) \l0x0061: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipRight' int)]) \l}"];
Node_83 [shape=record,label="{83\:\ 0x0065|0x0065: INVOKE  (r14 I:boolean) = \l  (r19 I:android.view.ViewGroup)\l  (r20 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r21 I:android.view.View A[D('child' android.view.View)])\l  (r22 I:long A[D('drawingTime' long)])\l type: SUPER call: android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean A[MD:(android.graphics.Canvas, android.view.View, long):boolean (c)] (LINE:1478)\l0x0069: INVOKE  (r7 I:android.graphics.Canvas), (r11 I:int A[D('restoreCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:1479)\l0x006c: IGET  (r1 I:float) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mScrimOpacity float  (LINE:1481)\l0x006e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x006f: CMP_L  (r4 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0071|0x0071: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:87:0x00aa \l}"];
Node_85 [shape=record,label="{85\:\ 0x0073|0x0073: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawingContent' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x00aa \l}"];
Node_86 [shape=record,label="{86\:\ 0x0075|0x0075: IGET  (r2 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mScrimColor int  (LINE:1482)\l0x0077: CONST  (r3 I:??[int, float, short, byte, char]) = (\-16777216(0xffffffffff000000, float:\-1.7014118E38) ??[int, float, short, byte, char]) \l0x0079: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l0x007a: ARITH  (r15 I:int) = (r3 I:int) \>\>\> (24 int) \l0x007c: CAST (r3 I:float) = (float) (r15 I:int A[D('baseAlpha' int)])  (LINE:1483)\l0x007d: ARITH  (r3 I:float) = (r3 I:float) * (r1 I:float) \l0x007f: CAST (r6 I:int) = (int) (r3 I:float) \l0x0080: ARITH  (r1 I:int) = (r6 I:int A[D('imag' int)]) \<\< (24 int)  (LINE:1484)\l0x0082: CONST  (r3 I:??[int, float, short, byte, char]) = (16777215(0xffffff, float:2.3509886E\-38) ??[int, float, short, byte, char]) \l0x0085: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r3 I:??[int, boolean, short, byte, char]) \l0x0086: ARITH  (r5 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char]) \l0x0088: IGET  (r1 I:android.graphics.Paint) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mScrimPaint android.graphics.Paint  (LINE:1485)\l0x008a: INVOKE  (r1 I:android.graphics.Paint), (r5 I:int A[D('color' int)]) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l0x008d: CAST (r2 I:float) = (float) (r12 I:int A[D('clipLeft' int)])  (LINE:1487)\l0x008e: CAST (r4 I:float) = (float) (r13 I:int A[D('clipRight' int)]) \l0x008f: INVOKE  (r1 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getHeight():int A[MD:():int (s)]\l0x0093: CAST (r1 I:float) = (float) (r1 I:int) \l0x0094: IGET  (r3 I:android.graphics.Paint) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mScrimPaint android.graphics.Paint \l0x0096: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0098: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x009a: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x009c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x009d: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('color' int)]) \l0x009f: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('color' int)]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a1: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('imag' int)]) \l0x00a3: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('imag' int)]) = (r16 I:??[OBJECT, ARRAY]) \l0x00a5: INVOKE  (r1 I:android.graphics.Canvas), (r2 I:float), (r3 I:float), (r4 I:float), (r5 I:float), (r6 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void A[MD:(float, float, float, float, android.graphics.Paint):void (c)]\l}"];
Node_97 [shape=record,label="{97\:\ 0x0140|RETURN\l|0x0140: RETURN  (r14 I:boolean A[D('result' boolean)])  (LINE:1512)\l}"];
Node_55 [shape=record,label="{55\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_87 [shape=record,label="{87\:\ 0x00aa|0x00aa: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeftResolved android.graphics.drawable.Drawable \l0x00ac: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_88 [shape=record,label="{88\:\ 0x00ae|0x00ae: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x00f2 \l}"];
Node_89 [shape=record,label="{89\:\ 0x00b0|0x00b0: INVOKE  (r1 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r8 I:android.view.View), (r3 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)] (LINE:1489)\l}"];
Node_90 [shape=record,label="{90\:\ 0x00b4|0x00b4: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x00f2 \l}"];
Node_91 [shape=record,label="{91\:\ 0x00b6|0x00b6: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeftResolved android.graphics.drawable.Drawable  (LINE:1490)\l0x00b8: INVOKE  (r1 I:int) = (r1 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x00bc: INVOKE  (r3 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:1491)\l0x00c0: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLeftDragger androidx.customview.widget.ViewDragHelper  (LINE:1492)\l0x00c2: INVOKE  (r6 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getEdgeSize():int A[MD:():int (m)]\l0x00c6: CAST (r15 I:float) = (float) (r3 I:int A[D('childRight' int)])  (LINE:1493)\l0x00c7: CAST (r4 I:float) = (float) (r6 I:int A[D('drawerPeekDistance' int)]) \l0x00c8: ARITH  (r15 I:float) = (r15 I:float) \/ (r4 I:float) \l0x00c9: INVOKE  (r4 I:float) = (r15 I:float), (r5 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:1494)\l0x00cd: INVOKE  (r2 I:float) = (r2 I:float), (r4 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x00d1: IGET  (r4 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeftResolved android.graphics.drawable.Drawable  (LINE:1495)\l0x00d3: INVOKE  (r5 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x00d7: ARITH  (r15 I:int) = (r3 I:int A[D('childRight' int)]) + (r1 I:int A[D('shadowWidth' int)]) \l0x00d9: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('shadowWidth' int)])  (LINE:1496)\l0x00db: INVOKE  (r1 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x00df: INVOKE  (r4 I:android.graphics.drawable.Drawable), (r3 I:int A[D('childRight' int)]), (r5 I:int), (r15 I:int), (r1 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:1495)\l0x00e2: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeftResolved android.graphics.drawable.Drawable  (LINE:1497)\l0x00e4: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x00e6: ARITH  (r4 I:float) = (r4 I:float) * (r2 I:float A[D('alpha' float)]) \l0x00e8: CAST (r4 I:int) = (int) (r4 I:float) \l0x00e9: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r4 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setAlpha(int):void A[MD:(int):void (c)]\l0x00ec: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowLeftResolved android.graphics.drawable.Drawable  (LINE:1498)\l0x00ee: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r7 I:android.graphics.Canvas) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_92 [shape=record,label="{92\:\ 0x00f2|0x00f2: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowRightResolved android.graphics.drawable.Drawable \l}"];
Node_93 [shape=record,label="{93\:\ 0x00f4|0x00f4: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0140 \l}"];
Node_94 [shape=record,label="{94\:\ 0x00f6|0x00f6: CONST  (r1 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x00f7: INVOKE  (r1 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r8 I:android.view.View), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.checkDrawerViewAbsoluteGravity(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)] (LINE:1500)\l}"];
Node_95 [shape=record,label="{95\:\ 0x00fb|0x00fb: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0140 \l}"];
Node_96 [shape=record,label="{96\:\ 0x00fd|0x00fd: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowRightResolved android.graphics.drawable.Drawable  (LINE:1501)\l0x00ff: INVOKE  (r1 I:int) = (r1 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0103: INVOKE  (r3 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:1502)\l0x0107: INVOKE  (r4 I:int) = (r19 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getWidth():int A[MD:():int (s)] (LINE:1503)\l0x010b: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int A[D('childLeft' int)]) \l0x010c: IGET  (r6 I:androidx.customview.widget.ViewDragHelper) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mRightDragger androidx.customview.widget.ViewDragHelper  (LINE:1504)\l0x010e: INVOKE  (r6 I:int) = (r6 I:androidx.customview.widget.ViewDragHelper) type: VIRTUAL call: androidx.customview.widget.ViewDragHelper.getEdgeSize():int A[MD:():int (m)]\l0x0112: CAST (r15 I:float) = (float) (r4 I:int A[D('showing' int)])  (LINE:1505)\l0x0113: CAST (r2 I:float) = (float) (r6 I:int A[D('drawerPeekDistance' int)]) \l0x0114: ARITH  (r15 I:float) = (r15 I:float) \/ (r2 I:float) \l0x0115: INVOKE  (r2 I:float) = (r15 I:float), (r5 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:1506)\l0x0119: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x011a: INVOKE  (r2 I:float) = (r5 I:float), (r2 I:float) type: STATIC call: java.lang.Math.max(float, float):float A[MD:(float, float):float (c)]\l0x011e: IGET  (r5 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowRightResolved android.graphics.drawable.Drawable  (LINE:1507)\l0x0120: ARITH  (r15 I:int) = (r3 I:int A[D('childLeft' int)]) \- (r1 I:int A[D('shadowWidth' int)]) \l0x0122: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('shadowWidth' int)]) \l0x0124: INVOKE  (r1 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0128: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('showing' int)])  (LINE:1508)\l0x012a: INVOKE  (r4 I:int) = (r21 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)]\l0x012e: INVOKE  (r5 I:android.graphics.drawable.Drawable), (r15 I:int), (r1 I:int), (r3 I:int A[D('childLeft' int)]), (r4 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:1507)\l0x0131: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowRightResolved android.graphics.drawable.Drawable  (LINE:1509)\l0x0133: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l0x0135: ARITH  (r4 I:float) = (r4 I:float) * (r2 I:float A[D('alpha' float)]) \l0x0137: CAST (r4 I:int) = (int) (r4 I:float) \l0x0138: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r4 I:int) type: VIRTUAL call: android.graphics.drawable.Drawable.setAlpha(int):void A[MD:(int):void (c)]\l0x013b: IGET  (r1 I:android.graphics.drawable.Drawable) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mShadowRightResolved android.graphics.drawable.Drawable  (LINE:1510)\l0x013d: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r7 I:android.graphics.Canvas) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x0063|0x0063: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipLeft' int)])  (LINE:1458)\l0x0064: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipRight' int)]) \l}"];
MethodNode[shape=record,label="{protected boolean androidx.drawerlayout.widget.DrawerLayout.drawChild((r19 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r20 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:long A[D('drawingTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:80:0x0055 \-\> B:59:0x001f, CROSS_EDGE: B:74:0x004a \-\> B:80:0x0055, CROSS_EDGE: B:79:0x0054 \-\> B:80:0x0055, CROSS_EDGE: B:78:0x0052 \-\> B:80:0x0055, CROSS_EDGE: B:69:0x003d \-\> B:80:0x0055, CROSS_EDGE: B:67:0x0037 \-\> B:80:0x0055, CROSS_EDGE: B:65:0x0031 \-\> B:80:0x0055, CROSS_EDGE: B:63:0x002b \-\> B:80:0x0055, CROSS_EDGE: B:61:0x0025 \-\> B:80:0x0055, CROSS_EDGE: B:91:0x00b6 \-\> B:97:0x0140, CROSS_EDGE: B:96:0x00fd \-\> B:97:0x0140, CROSS_EDGE: B:95:0x00fb \-\> B:97:0x0140, CROSS_EDGE: B:93:0x00f4 \-\> B:97:0x0140, CROSS_EDGE: B:88:0x00ae \-\> B:92:0x00f2, CROSS_EDGE: B:84:0x0071 \-\> B:87:0x00aa, CROSS_EDGE: B:82:0x0063 \-\> B:83:0x0065\lINLINE_NOT_NEEDED\lDebug Info:\l  0x004a\-0x004d: r12 'vright' I\l  0x0025\-0x0055: r6 'v' Landroid\/view\/View;\l  0x0052\-0x0055: r12 'vleft' I\l  0x001f\-0x0058: r5 'i' I\l  0x001e\-0x0063: r4 'childCount' I\l  0x000f\-0x0065: r1 'clipLeft' I\l  0x0013\-0x0065: r2 'clipRight' I\l  0x0088\-0x009f: r5 'color' I\l  0x0080\-0x00a3: r6 'imag' I\l  0x007c\-0x00a8: r15 'baseAlpha' I\l  0x00a3\-0x00a8: r17 'imag' I\l  0x009f\-0x00a8: r18 'color' I\l  0x00bc\-0x00db: r1 'shadowWidth' I\l  0x00d1\-0x00f1: r2 'alpha' F\l  0x00c0\-0x00f1: r3 'childRight' I\l  0x00c6\-0x00f1: r6 'drawerPeekDistance' I\l  0x00db\-0x00f1: r17 'shadowWidth' I\l  0x0103\-0x0124: r1 'shadowWidth' I\l  0x010c\-0x012a: r4 'showing' I\l  0x011e\-0x0140: r2 'alpha' F\l  0x0107\-0x0140: r3 'childLeft' I\l  0x0112\-0x0140: r6 'drawerPeekDistance' I\l  0x0124\-0x0140: r17 'shadowWidth' I\l  0x012a\-0x0140: r18 'showing' I\l  0x000a\-0x0140: r9 'height' I\l  0x000e\-0x0140: r10 'drawingContent' Z\l  0x0017\-0x0140: r11 'restoreCount' I\l  0x0065\-0x0140: r12 'clipLeft' I\l  0x0065\-0x0140: r13 'clipRight' I\l  0x0069\-0x0140: r14 'result' Z\l  \-1 \-0x0140: r20 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0140: r21 'child' Landroid\/view\/View;\l  \-1 \-0x0140: r22 'drawingTime' J\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean\}]\l}"];
MethodNode -> Node_54;Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_82;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_98;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_100;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_101;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_102;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_103;
Node_68 -> Node_69;
Node_69 -> Node_71;
Node_69 -> Node_105[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_107;
Node_75 -> Node_106;
Node_106 -> Node_80;
Node_80 -> Node_59;
Node_107 -> Node_80;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_104;
Node_79 -> Node_99;
Node_99 -> Node_80;
Node_104 -> Node_80;
Node_105 -> Node_80;
Node_103 -> Node_80;
Node_102 -> Node_80;
Node_101 -> Node_80;
Node_100 -> Node_80;
Node_98 -> Node_81;
Node_81 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_87;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_97;
Node_97 -> Node_55;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_92;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_97;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_97;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_97;
Node_82 -> Node_83;
}

