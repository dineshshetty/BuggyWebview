digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.isDrawerOpen(Landroid\/view\/View;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0004|if (isDrawerView(r4) == false) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|androidx.drawerlayout.widget.DrawerLayout$LayoutParams r0 = (androidx.drawerlayout.widget.DrawerLayout.LayoutParams) r4.getLayoutParams()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|if ((r0.openState & 1) != 1) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\lORIG_RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return androidx.drawerlayout.widget.DrawerLayout.CHILDREN_DISALLOW_INTERCEPT\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"View \")\lr1.append(r4)\lr1.append(\" is not a drawer\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x0030|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public boolean androidx.drawerlayout.widget.DrawerLayout.isDrawerOpen((r3v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r4v0 'drawer' android.view.View A[D('drawer' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0010 \-\> B:20:0x0014, CROSS_EDGE: B:22:0x0030 \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_23[style=dashed];
Node_19 -> Node_13;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

