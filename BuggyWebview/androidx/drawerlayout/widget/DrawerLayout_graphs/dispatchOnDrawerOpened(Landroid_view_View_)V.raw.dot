digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.dispatchOnDrawerOpened(Landroid\/view\/View;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r6 I:android.view.View A[D('drawerView' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:911)\l0x0004: CHECK_CAST (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0006: IGET  (r1 I:int) = \l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.openState int  (LINE:912)\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IPUT  \l  (r2 I:int)\l  (r0 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.openState int  (LINE:913)\l0x000e: IGET  (r1 I:java.util.List\<androidx.drawerlayout.widget.DrawerLayout$DrawerListener\>) = (r5 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mListeners java.util.List  (LINE:914)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0028 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|0x0012: INVOKE  (r1 I:int) = (r1 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:917)\l0x0016: ARITH  (r3 I:int) = (r1 I:int A[D('listenerCount' int)]) + (\-1 int)  (LINE:918)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|LOOP_START\lLOOP:0: B:23:0x0018\-\>B:24:0x001a\l|0x0018: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:29:0x0028 \l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|LOOP_END\lLOOP:0: B:23:0x0018\-\>B:24:0x001a\l|0x001a: IGET  (r4 I:java.util.List\<androidx.drawerlayout.widget.DrawerLayout$DrawerListener\>) = (r5 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mListeners java.util.List  (LINE:919)\l0x001c: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r3 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0020: CHECK_CAST (r4 I:androidx.drawerlayout.widget.DrawerLayout$DrawerListener) = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) (r4 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  \l  (r4 I:androidx.drawerlayout.widget.DrawerLayout$DrawerListener)\l  (r6 I:android.view.View A[D('drawerView' android.view.View)])\l type: INTERFACE call: androidx.drawerlayout.widget.DrawerLayout.DrawerListener.onDrawerOpened(android.view.View):void A[MD:(android.view.View):void (m)]\l0x0025: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (\-1 int)  (LINE:918)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|0x0028: INVOKE  \l  (r5 I:androidx.drawerlayout.widget.DrawerLayout)\l  (r6 I:android.view.View A[D('drawerView' android.view.View)])\l  (r2 I:boolean)\l type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.updateChildrenImportantForAccessibility(android.view.View, boolean):void A[MD:(android.view.View, boolean):void (m)] (LINE:923)\l0x002b: INVOKE  (r5 I:androidx.drawerlayout.widget.DrawerLayout), (r6 I:android.view.View A[D('drawerView' android.view.View)]) type: DIRECT call: androidx.drawerlayout.widget.DrawerLayout.updateChildAccessibilityAction(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:924)\l0x002e: INVOKE  (r1 I:boolean) = (r5 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.hasWindowFocus():boolean A[MD:():boolean (s)] (LINE:927)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|0x0032: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x0034|0x0034: CONST  (r1 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char])  (LINE:928)\l0x0036: INVOKE  (r5 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.sendAccessibilityEvent(int):void A[MD:(int):void (s)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: RETURN    (LINE:931)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:931)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:931)\l}"];
MethodNode[shape=record,label="{void androidx.drawerlayout.widget.DrawerLayout.dispatchOnDrawerOpened((r5 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('drawerView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x001a \-\> B:23:0x0018, CROSS_EDGE: B:26:0x0032 \-\> B:28:0x0039, CROSS_EDGE: B:21:0x0010 \-\> B:25:0x0028, CROSS_EDGE: B:19:0x000a \-\> B:28:0x0039\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0028: r1 'listenerCount' I\l  0x0018\-0x0028: r3 'i' I\l  0x0006\-0x0039: r0 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  \-1 \-0x0039: r6 'drawerView' Landroid\/view\/View;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_23;
Node_29 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_17;
}

