digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.onMeasure(II)V" {
Node_86 [shape=record,label="{86\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_88 [shape=record,label="{88\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:1072)\l0x0002: INVOKE  (r1 I:int) = (r21 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)]\l0x0006: INVOKE  (r2 I:int) = (r22 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:1073)\l0x000a: INVOKE  (r3 I:int) = (r21 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:1074)\l0x000e: INVOKE  (r4 I:int) = (r22 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:1075)\l0x0012: CONST  (r5 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1077)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widthMode' int)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x0018 \l}"];
Node_90 [shape=record,label="{90\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('heightMode' int)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0026 \l}"];
Node_97 [shape=record,label="{97\:\ 0x0026|0x0026: INVOKE  (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r3 I:int A[D('widthSize' int)]), (r4 I:int A[D('heightSize' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:1095)\l0x0029: IGET  (r6 I:java.lang.Object) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLastInsets java.lang.Object  (LINE:1097)\l}"];
Node_98 [shape=record,label="{98\:\ 0x002b|0x002b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0035 \l}"];
Node_99 [shape=record,label="{99\:\ 0x002d|0x002d: INVOKE  (r6 I:boolean) = (r20 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_100 [shape=record,label="{100\:\ 0x0031|0x0031: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:102:0x0035 \l}"];
Node_101 [shape=record,label="{101\:\ 0x0033|0x0033: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_103 [shape=record,label="{103\:\ 0x0036|0x0036: INVOKE  (r9 I:int) = (r20 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1098)\l0x003a: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1102)\l0x003b: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1103)\l0x003c: INVOKE  (r12 I:int) = (r20 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildCount():int A[MD:():int (c)] (LINE:1104)\l0x0040: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1105)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0041|LOOP_START\lLOOP:0: B:104:0x0041\-\>B:160:0x01bb\l|0x0041: IF  (r13 I:??[int, byte, short, char] A[D('i' int)]) \>= (r12 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:166:0x01f1 \l}"];
Node_105 [shape=record,label="{105\:\ 0x0043|0x0043: INVOKE  (r14 I:android.view.View) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r13 I:int A[D('i' int)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:1106)\l0x0047: INVOKE  (r15 I:int) = (r14 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:1108)\l0x004b: CONST  (r7 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_106 [shape=record,label="{106\:\ 0x004d|0x004d: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:108:0x005a \l}"];
Node_107 [shape=record,label="{107\:\ 0x004f|0x004f: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1109)\l0x0051: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0053: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x0055: CONST  (r2 I:??[int, float, short, byte, char] A[D('heightMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0057: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_136 [shape=record,label="{136\:\ 0x0135|0x0135: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMeasureSpec' int)])  (LINE:1105)\l0x0137: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l}"];
Node_171 [shape=record,label="{171\:\ 0x01bb|SYNTHETIC\l}"];
Node_160 [shape=record,label="{160\:\ 0x01bb|LOOP_END\lLOOP:0: B:104:0x0041\-\>B:160:0x01bb\l|0x01bb: ARITH  (r13 I:int) = (r13 I:int A[D('i' int)]) + (1 int)  (LINE:1105)\l0x01bd: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY]) \l0x01bf: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)]) \l0x01c1: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x01c3: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x01c5: CONST  (r5 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_108 [shape=record,label="{108\:\ 0x005a|0x005a: INVOKE  (r7 I:android.view.ViewGroup$LayoutParams) = (r14 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1112)\l0x005e: CHECK_CAST (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams) = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) (r7 I:??[OBJECT, ARRAY]) \l}"];
Node_109 [shape=record,label="{109\:\ 0x0060|0x0060: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('applyInsets' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:132:0x010c  (LINE:1114)\l}"];
Node_110 [shape=record,label="{110\:\ 0x0062|0x0062: IGET  (r5 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.gravity int  (LINE:1115)\l0x0064: INVOKE  (r5 I:int) = (r5 I:int), (r9 I:int A[D('layoutDirection' int)]) type: STATIC call: androidx.core.view.GravityCompat.getAbsoluteGravity(int, int):int A[MD:(int, int):int (m)]\l0x0068: INVOKE  (r16 I:boolean) = (r14 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getFitsSystemWindows(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1116)\l0x006c: CONST  (r8 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_111 [shape=record,label="{111\:\ 0x006e|0x006e: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:122:0x00ba \l}"];
Node_112 [shape=record,label="{112\:\ 0x0070|0x0070: SGET  (r15 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1117)\l}"];
Node_113 [shape=record,label="{113\:\ 0x0072|0x0072: IF  (r15 I:??[int, byte, short, char]) \< (r8 I:??[int, byte, short, char])  \-\> B:121:0x00b2 \l}"];
Node_114 [shape=record,label="{114\:\ 0x0074|0x0074: IGET  (r8 I:java.lang.Object) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLastInsets java.lang.Object  (LINE:1118)\l0x0076: CHECK_CAST (r8 I:android.view.WindowInsets) = (android.view.WindowInsets) (r8 I:??[OBJECT, ARRAY]) \l0x0078: CONST  (r15 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1119)\l}"];
Node_115 [shape=record,label="{115\:\ 0x0079|0x0079: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cgrav' int)]) != (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:117:0x0093 \l}"];
Node_116 [shape=record,label="{116\:\ 0x007b|0x007b: INVOKE  (r15 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetLeft():int A[MD:():int (c)] (LINE:1120)\l0x007f: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1121)\l0x0081: INVOKE  (r1 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetTop():int A[MD:():int (c)]\l0x0085: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)])  (LINE:1122)\l0x0087: INVOKE  (r2 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetBottom():int A[MD:():int (c)]\l0x008b: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)])  (LINE:1120)\l0x008d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x008e: INVOKE  (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) = \l  (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)])\l  (r15 I:int)\l  (r1 I:int)\l  (r6 I:int A[D('applyInsets' boolean)])\l  (r2 I:int)\l type: VIRTUAL call: android.view.WindowInsets.replaceSystemWindowInsets(int, int, int, int):android.view.WindowInsets A[MD:(int, int, int, int):android.view.WindowInsets (c)]\l}"];
Node_120 [shape=record,label="{120\:\ 0x00ad|0x00ad: INVOKE  \l  (r14 I:android.view.View A[D('child' android.view.View)])\l  (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)])\l type: VIRTUAL call: android.view.View.dispatchApplyWindowInsets(android.view.WindowInsets):android.view.WindowInsets A[MD:(android.view.WindowInsets):android.view.WindowInsets (c)] (LINE:1128)\l0x00b0: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1129)\l}"];
Node_133 [shape=record,label="{133\:\ 0x0113|0x0113: INVOKE  (r1 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r14 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isContentView(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1150)\l}"];
Node_134 [shape=record,label="{134\:\ 0x0117|0x0117: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:137:0x013b \l}"];
Node_135 [shape=record,label="{135\:\ 0x0119|0x0119: IGET  (r1 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.leftMargin int  (LINE:1152)\l0x011b: ARITH  (r1 I:int) = (r3 I:int A[D('widthSize' int)]) \- (r1 I:int) \l0x011d: IGET  (r2 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.rightMargin int \l0x011f: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0120: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0122: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0126: IGET  (r5 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int  (LINE:1154)\l0x0128: ARITH  (r5 I:int) = (r4 I:int A[D('heightSize' int)]) \- (r5 I:int) \l0x012a: IGET  (r6 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x012c: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x012d: INVOKE  (r5 I:int) = (r5 I:int), (r2 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0131: INVOKE  \l  (r14 I:android.view.View A[D('child' android.view.View)])\l  (r1 I:int A[D('contentWidthSpec' int)])\l  (r5 I:int A[D('contentHeightSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:1156)\l}"];
Node_137 [shape=record,label="{137\:\ 0x013b|0x013b: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1157)\l0x013d: INVOKE  (r1 I:boolean) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r14 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerView(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_138 [shape=record,label="{138\:\ 0x0141|0x0141: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x01c9 \l}"];
Node_139 [shape=record,label="{139\:\ 0x0143|0x0143: SGET  (r1 I:boolean) =  androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION boolean  (LINE:1158)\l}"];
Node_140 [shape=record,label="{140\:\ 0x0145|0x0145: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:144:0x0154 \l}"];
Node_141 [shape=record,label="{141\:\ 0x0147|0x0147: INVOKE  (r1 I:float) = (r14 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getElevation(android.view.View):float A[MD:(android.view.View):float (m)] (LINE:1159)\l0x014b: IGET  (r5 I:float) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mDrawerElevation float \l0x014d: CMP_L  (r1 I:int) = (r1 I:float), (r5 I:float) \l}"];
Node_142 [shape=record,label="{142\:\ 0x014f|0x014f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:144:0x0154 \l}"];
Node_143 [shape=record,label="{143\:\ 0x0151|0x0151: INVOKE  (r14 I:android.view.View A[D('child' android.view.View)]), (r5 I:float) type: STATIC call: androidx.core.view.ViewCompat.setElevation(android.view.View, float):void A[MD:(android.view.View, float):void (m)] (LINE:1160)\l}"];
Node_144 [shape=record,label="{144\:\ 0x0154|0x0155: INVOKE  (r1 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r14 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerViewAbsoluteGravity(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1164)\l0x0159: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (7 ??[int, float, short, byte, char]) \l0x015b: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1167)\l}"];
Node_145 [shape=record,label="{145\:\ 0x015c|0x015c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childGravity' int)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:147:0x0160 \l}"];
Node_146 [shape=record,label="{146\:\ 0x015e|0x015e: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_148 [shape=record,label="{148\:\ 0x0161|0x0161: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_149 [shape=record,label="{149\:\ 0x0162|0x0162: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLeftEdgeDrawer' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:151:0x0166  (LINE:1168)\l}"];
Node_150 [shape=record,label="{150\:\ 0x0164|0x0164: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasDrawerOnLeftEdge' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:168:0x016b \l}"];
Node_168 [shape=record,label="{168\:\ 0x016b|SYNTHETIC\l}"];
Node_154 [shape=record,label="{154\:\ 0x016b|0x016b: NEW_INSTANCE  (r2 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1170)\l0x016d: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x016f: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0172: CONST_STR  (r8 I:java.lang.String) =  \"Child drawer has absolute gravity \" \l0x0174: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0177: INVOKE  (r8 I:java.lang.String) = (r1 I:int A[D('childGravity' int)]) type: STATIC call: androidx.drawerlayout.widget.DrawerLayout.gravityToString(int):java.lang.String A[MD:(int):java.lang.String (m)] (LINE:1171)\l0x017b: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x017e: CONST_STR  (r8 I:java.lang.String) =  \" but this \" \l0x0180: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0183: CONST_STR  (r8 I:java.lang.String) =  \"DrawerLayout\" \l0x0185: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0188: CONST_STR  (r8 I:java.lang.String) =  \" already has a drawer view along that edge\" \l0x018a: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x018d: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0191: INVOKE  (r2 I:java.lang.IllegalStateException), (r6 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_155 [shape=record,label="{155\:\ 0x0194|0x0194: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_87 [shape=record,label="{87\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_151 [shape=record,label="{151\:\ 0x0166|0x0166: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLeftEdgeDrawer' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:156:0x0195 \l}"];
Node_152 [shape=record,label="{152\:\ 0x0168|0x0168: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasDrawerOnRightEdge' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:169:0x016b \l}"];
Node_169 [shape=record,label="{169\:\ 0x016b|SYNTHETIC\l}"];
Node_156 [shape=record,label="{156\:\ 0x0195|0x0195: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLeftEdgeDrawer' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:158:0x0199  (LINE:1174)\l}"];
Node_157 [shape=record,label="{157\:\ 0x0197|0x0197: CONST  (r10 I:??[boolean, int, float, short, byte, char] A[D('hasDrawerOnLeftEdge' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1175)\l}"];
Node_159 [shape=record,label="{159\:\ 0x019a|0x019a: IGET  (r6 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mMinDrawerMargin int  (LINE:1179)\l0x019c: IGET  (r8 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.leftMargin int \l0x019e: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l0x019f: IGET  (r8 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.rightMargin int \l0x01a1: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l0x01a2: IGET  (r8 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.width int \l0x01a4: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMeasureSpec' int)]) \l0x01a6: INVOKE  (r6 I:int) = (r2 I:int), (r6 I:int), (r8 I:int) type: STATIC call: androidx.drawerlayout.widget.DrawerLayout.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)]\l0x01aa: IGET  (r8 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int  (LINE:1182)\l0x01ac: IGET  (r15 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int \l0x01ae: ARITH  (r8 I:int) = (r8 I:int) + (r15 I:int) \l0x01af: IGET  (r15 I:int) = \l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.height int \l0x01b1: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l0x01b3: INVOKE  (r8 I:int) = (r0 I:int), (r8 I:int), (r15 I:int) type: STATIC call: androidx.drawerlayout.widget.DrawerLayout.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)]\l0x01b7: INVOKE  \l  (r14 I:android.view.View A[D('child' android.view.View)])\l  (r6 I:int A[D('drawerWidthSpec' int)])\l  (r8 I:int A[D('drawerHeightSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:1185)\l}"];
Node_170 [shape=record,label="{170\:\ 0x01bb|SYNTHETIC\l}"];
Node_158 [shape=record,label="{158\:\ 0x0199|0x0199: CONST  (r11 I:??[boolean, int, float, short, byte, char] A[D('hasDrawerOnRightEdge' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1177)\l}"];
Node_147 [shape=record,label="{147\:\ 0x0160|0x0160: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_167 [shape=record,label="{167\:\ 0x01c9|SYNTHETIC\l}"];
Node_161 [shape=record,label="{161\:\ 0x01c9|0x01c9: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMeasureSpec' int)])  (LINE:1187)\l0x01cb: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l0x01cd: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x01cf: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x01d1: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x01d4: CONST_STR  (r6 I:java.lang.String) =  \"Child \" \l0x01d6: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x01d9: INVOKE  (r5 I:java.lang.StringBuilder), (r14 I:java.lang.Object A[D('child' android.view.View)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x01dc: CONST_STR  (r6 I:java.lang.String) =  \" at index \" \l0x01de: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x01e1: INVOKE  (r5 I:java.lang.StringBuilder), (r13 I:int A[D('i' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x01e4: CONST_STR  (r6 I:java.lang.String) =  \" does not have a valid layout_gravity \- must be Gravity.LEFT, Gravity.RIGHT or Gravity.NO_GRAVITY\" \l0x01e6: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x01e9: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x01ed: INVOKE  (r1 I:java.lang.IllegalStateException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_162 [shape=record,label="{162\:\ 0x01f0|0x01f0: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_117 [shape=record,label="{117\:\ 0x0093|0x0093: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1123)\l0x0095: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0097: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x0099: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x009a: CONST  (r1 I:??[int, float, short, byte, char] A[D('widthMode' int)]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_118 [shape=record,label="{118\:\ 0x009b|0x009b: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cgrav' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x00ad \l}"];
Node_119 [shape=record,label="{119\:\ 0x009d|0x009d: INVOKE  (r1 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetTop():int A[MD:():int (c)] (LINE:1124)\l0x00a1: INVOKE  (r2 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetRight():int A[MD:():int (c)] (LINE:1125)\l0x00a5: INVOKE  (r15 I:int) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetBottom():int A[MD:():int (c)] (LINE:1126)\l0x00a9: INVOKE  (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) = (r8 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]), (r6 I:int), (r1 I:int), (r2 I:int), (r15 I:int) type: VIRTUAL call: android.view.WindowInsets.replaceSystemWindowInsets(int, int, int, int):android.view.WindowInsets A[MD:(int, int, int, int):android.view.WindowInsets (c)] (LINE:1124)\l}"];
Node_121 [shape=record,label="{121\:\ 0x00b2|0x00b2: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1117)\l0x00b4: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x00b6: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x00b8: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_122 [shape=record,label="{122\:\ 0x00ba|0x00ba: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1131)\l0x00bc: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x00be: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x00c0: SGET  (r1 I:int A[D('widthMode' int)]) =  android.os.Build.VERSION.SDK_INT int \l}"];
Node_123 [shape=record,label="{123\:\ 0x00c2|0x00c2: IF  (r1 I:??[int, byte, short, char]) \< (r8 I:??[int, byte, short, char])  \-\> B:131:0x010a \l}"];
Node_124 [shape=record,label="{124\:\ 0x00c4|0x00c4: IGET  (r1 I:java.lang.Object) = (r0 I:androidx.drawerlayout.widget.DrawerLayout) androidx.drawerlayout.widget.DrawerLayout.mLastInsets java.lang.Object  (LINE:1132)\l0x00c6: CHECK_CAST (r1 I:android.view.WindowInsets) = (android.view.WindowInsets) (r1 I:??[OBJECT, ARRAY]) \l0x00c8: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1133)\l}"];
Node_125 [shape=record,label="{125\:\ 0x00c9|0x00c9: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cgrav' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:127:0x00dd \l}"];
Node_126 [shape=record,label="{126\:\ 0x00cb|0x00cb: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetLeft():int A[MD:():int (c)] (LINE:1134)\l0x00cf: INVOKE  (r6 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetTop():int A[MD:():int (c)] (LINE:1135)\l0x00d3: INVOKE  (r8 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetBottom():int A[MD:():int (c)] (LINE:1136)\l0x00d7: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1134)\l0x00d8: INVOKE  (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]), (r2 I:int), (r6 I:int), (r15 I:int), (r8 I:int) type: VIRTUAL call: android.view.WindowInsets.replaceSystemWindowInsets(int, int, int, int):android.view.WindowInsets A[MD:(int, int, int, int):android.view.WindowInsets (c)]\l}"];
Node_130 [shape=record,label="{130\:\ 0x00f1|0x00f1: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetLeft():int A[MD:():int (c)] (LINE:1142)\l0x00f5: IPUT  \l  (r2 I:int)\l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.leftMargin int \l0x00f7: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetTop():int A[MD:():int (c)] (LINE:1143)\l0x00fb: IPUT  \l  (r2 I:int)\l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.topMargin int \l0x00fd: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetRight():int A[MD:():int (c)] (LINE:1144)\l0x0101: IPUT  \l  (r2 I:int)\l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.rightMargin int \l0x0103: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetBottom():int A[MD:():int (c)] (LINE:1145)\l0x0107: IPUT  \l  (r2 I:int)\l  (r7 I:androidx.drawerlayout.widget.DrawerLayout$LayoutParams A[D('lp' androidx.drawerlayout.widget.DrawerLayout$LayoutParams)])\l androidx.drawerlayout.widget.DrawerLayout.LayoutParams.bottomMargin int \l}"];
Node_127 [shape=record,label="{127\:\ 0x00dd|0x00dd: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1137)\l0x00de: CONST  (r2 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_128 [shape=record,label="{128\:\ 0x00df|0x00df: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cgrav' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:130:0x00f1 \l}"];
Node_129 [shape=record,label="{129\:\ 0x00e1|0x00e1: INVOKE  (r2 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetTop():int A[MD:():int (c)] (LINE:1138)\l0x00e5: INVOKE  (r6 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetRight():int A[MD:():int (c)] (LINE:1139)\l0x00e9: INVOKE  (r8 I:int) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) type: VIRTUAL call: android.view.WindowInsets.getSystemWindowInsetBottom():int A[MD:():int (c)] (LINE:1140)\l0x00ed: INVOKE  (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]) = (r1 I:android.view.WindowInsets A[D('wi' android.view.WindowInsets)]), (r15 I:int), (r2 I:int), (r6 I:int), (r8 I:int) type: VIRTUAL call: android.view.WindowInsets.replaceSystemWindowInsets(int, int, int, int):android.view.WindowInsets A[MD:(int, int, int, int):android.view.WindowInsets (c)] (LINE:1138)\l}"];
Node_131 [shape=record,label="{131\:\ 0x010a|0x010a: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1131)\l}"];
Node_132 [shape=record,label="{132\:\ 0x010c|0x010c: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1114)\l0x010e: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0110: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('applyInsets' boolean)]) \l0x0112: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_166 [shape=record,label="{166\:\ 0x01f1|SYNTHETIC\l}"];
Node_163 [shape=record,label="{163\:\ 0x01f1|RETURN\l|0x01f1: RETURN    (LINE:1192)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0035|0x0035: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0018|0x0018: INVOKE  (r6 I:boolean) = (r20 I:androidx.drawerlayout.widget.DrawerLayout) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isInEditMode():boolean A[MD:():boolean (s)] (LINE:1078)\l}"];
Node_92 [shape=record,label="{92\:\ 0x001c|0x001c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:164:0x01f2 \l}"];
Node_93 [shape=record,label="{93\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('widthMode' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x0022  (LINE:1083)\l}"];
Node_94 [shape=record,label="{94\:\ 0x0020|0x0020: CONST  (r3 I:??[int, float, short, byte, char] A[D('widthSize' int)]) = (300(0x12c, float:4.2E\-43) ??[int, float, short, byte, char])  (LINE:1084)\l}"];
Node_95 [shape=record,label="{95\:\ 0x0022|0x0022: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('heightMode' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x0026  (LINE:1086)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0024|0x0024: CONST  (r4 I:??[int, float, short, byte, char] A[D('heightSize' int)]) = (300(0x12c, float:4.2E\-43) ??[int, float, short, byte, char])  (LINE:1087)\l}"];
Node_164 [shape=record,label="{164\:\ 0x01f2|0x01f2: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthMode' int)])  (LINE:1090)\l0x01f4: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException A[D('widthMode' int)]) =  java.lang.IllegalArgumentException \l0x01f6: CONST_STR  (r5 I:java.lang.String) =  \"DrawerLayout must be measured with MeasureSpec.EXACTLY.\" \l0x01f8: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r5 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_165 [shape=record,label="{165\:\ 0x01fb|0x01fb: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void androidx.drawerlayout.widget.DrawerLayout.onMeasure((r20 'this' I:androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r21 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:160:0x01bb \-\> B:104:0x0041, CROSS_EDGE: B:135:0x0119 \-\> B:136:0x0135, CROSS_EDGE: B:159:0x019a \-\> B:160:0x01bb, CROSS_EDGE: B:158:0x0199 \-\> B:159:0x019a, CROSS_EDGE: B:151:0x0166 \-\> B:156:0x0195, CROSS_EDGE: B:150:0x0164 \-\> B:154:0x016b, CROSS_EDGE: B:149:0x0162 \-\> B:151:0x0166, CROSS_EDGE: B:147:0x0160 \-\> B:148:0x0161, CROSS_EDGE: B:142:0x014f \-\> B:144:0x0154, CROSS_EDGE: B:140:0x0145 \-\> B:144:0x0154, CROSS_EDGE: B:162:0x01f0 \-\> B:87:?, CROSS_EDGE: B:119:0x009d \-\> B:120:0x00ad, CROSS_EDGE: B:118:0x009b \-\> B:120:0x00ad, CROSS_EDGE: B:121:0x00b2 \-\> B:133:0x0113, CROSS_EDGE: B:130:0x00f1 \-\> B:133:0x0113, CROSS_EDGE: B:129:0x00e1 \-\> B:130:0x00f1, CROSS_EDGE: B:128:0x00df \-\> B:130:0x00f1, CROSS_EDGE: B:131:0x010a \-\> B:133:0x0113, CROSS_EDGE: B:132:0x010c \-\> B:133:0x0113, CROSS_EDGE: B:163:0x01f1 \-\> B:87:?, CROSS_EDGE: B:102:0x0035 \-\> B:103:0x0036, CROSS_EDGE: B:98:0x002b \-\> B:102:0x0035, CROSS_EDGE: B:95:0x0022 \-\> B:97:0x0026, CROSS_EDGE: B:93:0x001e \-\> B:95:0x0022, CROSS_EDGE: B:165:0x01fb \-\> B:87:?, CROSS_EDGE: B:90:0x0016 \-\> B:97:0x0026, CROSS_EDGE: B:89:0x0014 \-\> B:91:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0081: r1 'widthMode' I\l  0x000a\-0x0087: r2 'heightMode' I\l  0x0036\-0x008e: r6 'applyInsets' Z\l  0x0081\-0x0093: r17 'widthMode' I\l  0x0087\-0x0093: r18 'heightMode' I\l  0x008e\-0x0093: r19 'applyInsets' Z\l  0x0093\-0x009a: r1 'widthMode' I\l  0x0093\-0x009a: r2 'heightMode' I\l  0x0093\-0x009a: r6 'applyInsets' Z\l  0x0078\-0x00b0: r8 'wi' Landroid\/view\/WindowInsets;\l  0x009a\-0x00b2: r17 'widthMode' I\l  0x009a\-0x00b2: r18 'heightMode' I\l  0x009a\-0x00b2: r19 'applyInsets' Z\l  0x00b2\-0x00b8: r1 'widthMode' I\l  0x00b2\-0x00b8: r2 'heightMode' I\l  0x00b2\-0x00b8: r6 'applyInsets' Z\l  0x00b8\-0x00ba: r17 'widthMode' I\l  0x00b8\-0x00ba: r18 'heightMode' I\l  0x00b8\-0x00ba: r19 'applyInsets' Z\l  0x00ba\-0x00c0: r1 'widthMode' I\l  0x00ba\-0x00c0: r2 'heightMode' I\l  0x00ba\-0x00c0: r6 'applyInsets' Z\l  0x00c8\-0x010a: r1 'wi' Landroid\/view\/WindowInsets;\l  0x0068\-0x010c: r5 'cgrav' I\l  0x00c0\-0x010c: r17 'widthMode' I\l  0x00c0\-0x010c: r18 'heightMode' I\l  0x00c0\-0x010c: r19 'applyInsets' Z\l  0x010c\-0x0113: r1 'widthMode' I\l  0x010c\-0x0113: r2 'heightMode' I\l  0x010c\-0x0113: r6 'applyInsets' Z\l  0x0126\-0x0134: r1 'contentWidthSpec' I\l  0x0131\-0x0134: r5 'contentHeightSpec' I\l  0x0060\-0x0135: r7 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x0047\-0x0135: r14 'child' Landroid\/view\/View;\l  0x0113\-0x0135: r17 'widthMode' I\l  0x0113\-0x0135: r18 'heightMode' I\l  0x0113\-0x0135: r19 'applyInsets' Z\l  0x0135\-0x0139: r1 'widthMode' I\l  0x0135\-0x0139: r2 'heightMode' I\l  0x0135\-0x0139: r6 'applyInsets' Z\l  0x015b\-0x01ba: r1 'childGravity' I\l  0x0162\-0x01ba: r5 'isLeftEdgeDrawer' Z\l  0x01aa\-0x01ba: r6 'drawerWidthSpec' I\l  0x01b7\-0x01ba: r8 'drawerHeightSpec' I\l  0x013b\-0x01bb: r7 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x013b\-0x01bb: r14 'child' Landroid\/view\/View;\l  0x01c9\-0x01f1: r7 'lp' Landroidx\/drawerlayout\/widget\/DrawerLayout$LayoutParams;\l  0x0041\-0x01f1: r13 'i' I\l  0x01c9\-0x01f1: r14 'child' Landroid\/view\/View;\l  0x0139\-0x01f1: r17 'widthMode' I\l  0x0139\-0x01f1: r18 'heightMode' I\l  0x0139\-0x01f1: r19 'applyInsets' Z\l  0x01f1\-0x01f2: r6 'applyInsets' Z\l  0x003a\-0x01f2: r9 'layoutDirection' I\l  0x003b\-0x01f2: r10 'hasDrawerOnLeftEdge' Z\l  0x003c\-0x01f2: r11 'hasDrawerOnRightEdge' Z\l  0x0040\-0x01f2: r12 'childCount' I\l  0x01f1\-0x01f4: r1 'widthMode' I\l  0x01f1\-0x01fb: r2 'heightMode' I\l  0x000e\-0x01fb: r3 'widthSize' I\l  0x0012\-0x01fb: r4 'heightSize' I\l  0x01f4\-0x01fb: r17 'widthMode' I\l  \-1 \-0x01fb: r21 'widthMeasureSpec' I\l  \-1 \-0x01fb: r22 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_86;Node_86 -> Node_88;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_91;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_97;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_102;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_166;
Node_105 -> Node_106;
Node_106 -> Node_107[style=dashed];
Node_106 -> Node_108;
Node_107 -> Node_136;
Node_136 -> Node_171;
Node_171 -> Node_160;
Node_160 -> Node_104;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_132;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_122;
Node_112 -> Node_113;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_121;
Node_114 -> Node_115;
Node_115 -> Node_116[style=dashed];
Node_115 -> Node_117;
Node_116 -> Node_120;
Node_120 -> Node_133;
Node_133 -> Node_134;
Node_134 -> Node_135[style=dashed];
Node_134 -> Node_137;
Node_135 -> Node_136;
Node_137 -> Node_138;
Node_138 -> Node_139[style=dashed];
Node_138 -> Node_167;
Node_139 -> Node_140;
Node_140 -> Node_141[style=dashed];
Node_140 -> Node_144;
Node_141 -> Node_142;
Node_142 -> Node_143[style=dashed];
Node_142 -> Node_144;
Node_143 -> Node_144;
Node_144 -> Node_145;
Node_145 -> Node_146[style=dashed];
Node_145 -> Node_147;
Node_146 -> Node_148;
Node_148 -> Node_149;
Node_149 -> Node_150[style=dashed];
Node_149 -> Node_151;
Node_150 -> Node_151[style=dashed];
Node_150 -> Node_168;
Node_168 -> Node_154;
Node_154 -> Node_155;
Node_155 -> Node_87;
Node_151 -> Node_152[style=dashed];
Node_151 -> Node_156;
Node_152 -> Node_156[style=dashed];
Node_152 -> Node_169;
Node_169 -> Node_154;
Node_156 -> Node_157[style=dashed];
Node_156 -> Node_158;
Node_157 -> Node_159;
Node_159 -> Node_170;
Node_170 -> Node_160;
Node_158 -> Node_159;
Node_147 -> Node_148;
Node_167 -> Node_161;
Node_161 -> Node_162;
Node_162 -> Node_87;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_120;
Node_121 -> Node_133;
Node_122 -> Node_123;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_131;
Node_124 -> Node_125;
Node_125 -> Node_126[style=dashed];
Node_125 -> Node_127;
Node_126 -> Node_130;
Node_130 -> Node_133;
Node_127 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_130;
Node_129 -> Node_130;
Node_131 -> Node_133;
Node_132 -> Node_133;
Node_166 -> Node_163;
Node_163 -> Node_87;
Node_102 -> Node_103;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_164;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_97;
Node_164 -> Node_165;
Node_165 -> Node_87;
}

