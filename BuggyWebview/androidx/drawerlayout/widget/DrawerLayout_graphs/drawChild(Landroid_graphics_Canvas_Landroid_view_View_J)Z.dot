digraph "CFG forandroidx.drawerlayout.widget.DrawerLayout.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_54 [shape=record,label="{54\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0000|int r9 = getHeight()\lboolean r10 = isContentView(r21)\lr1 = 0\lint r2 = getWidth()\lint r11 = r20.save()\l}"];
Node_57 [shape=record,label="{57\:\ 0x0018|if (r10 == false) goto L51\l}"];
Node_58 [shape=record,label="{58\:\ 0x001a|int r4 = getChildCount()\lr5 = 0\l}"];
Node_59 [shape=record,label="{59\:\ 0x001f|LOOP_START\lLOOP:0: B:59:0x001f\-\>B:80:0x0055\lPHI: r1 r2 r5 \l  PHI: (r1v22 'clipLeft' int) = (r1v0 'clipLeft' int), (r1v23 'clipLeft' int) binds: [B:58:0x001a, B:80:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v9 'clipRight' int) = (r2v0 'clipRight' int), (r2v10 'clipRight' int) binds: [B:58:0x001a, B:80:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v7 'i' int) = (r5v6 'i' int), (r5v9 'i' int) binds: [B:58:0x001a, B:80:0x0055] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \>= r4) goto L33\l}"];
Node_60 [shape=record,label="{60\:\ 0x0021|android.view.View r6 = getChildAt(r5)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0025|if (r6 == r21) goto L32\l}"];
Node_62 [shape=record,label="{62\:\ 0x0027}"];
Node_63 [shape=record,label="{63\:\ 0x002b|if (r6.getVisibility() != 0) goto L31\l}"];
Node_64 [shape=record,label="{64\:\ 0x002d}"];
Node_65 [shape=record,label="{65\:\ 0x0031|if (hasOpaqueBackground(r6) == false) goto L30\l}"];
Node_66 [shape=record,label="{66\:\ 0x0033}"];
Node_67 [shape=record,label="{67\:\ 0x0037|if (isDrawerView(r6) == false) goto L29\l}"];
Node_68 [shape=record,label="{68\:\ 0x0039}"];
Node_69 [shape=record,label="{69\:\ 0x003d|if (r6.getHeight() \>= r9) goto L15\l}"];
Node_71 [shape=record,label="{71\:\ 0x0040}"];
Node_72 [shape=record,label="{72\:\ 0x0044|if (checkDrawerViewAbsoluteGravity(r6, 3) == false) goto L23\l}"];
Node_73 [shape=record,label="{73\:\ 0x0046|int r12 = r6.getRight()\l}"];
Node_74 [shape=record,label="{74\:\ 0x004a|if (r12 \<= r1) goto L22\l}"];
Node_75 [shape=record,label="{75\:\ 0x004c|r1 = r12\l}"];
Node_106 [shape=record,label="{106\:\ 0x0055|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0055|LOOP_END\lLOOP:0: B:59:0x001f\-\>B:80:0x0055\lPHI: r1 r2 \l  PHI: (r1v23 'clipLeft' int) = (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v22 'clipLeft' int), (r1v24 'clipLeft' int) binds: [B:100:0x0055, B:101:0x0055, B:102:0x0055, B:103:0x0055, B:105:0x0055, B:104:0x0055, B:99:0x0055, B:107:0x0055, B:106:0x0055] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v10 'clipRight' int) = (r2v9 'clipRight' int), (r2v9 'clipRight' int), (r2v9 'clipRight' int), (r2v9 'clipRight' int), (r2v9 'clipRight' int), (r2v9 'clipRight' int), (r2v11 'clipRight' int), (r2v9 'clipRight' int), (r2v9 'clipRight' int) binds: [B:100:0x0055, B:101:0x0055, B:102:0x0055, B:103:0x0055, B:105:0x0055, B:104:0x0055, B:99:0x0055, B:107:0x0055, B:106:0x0055] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r5 + 1\l}"];
Node_107 [shape=record,label="{107\:\ 0x0055|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x004e|int r12 = r6.getLeft()\l}"];
Node_78 [shape=record,label="{78\:\ 0x0052|if (r12 \>= r2) goto L27\l}"];
Node_79 [shape=record,label="{79\:\ 0x0054|r2 = r12\l}"];
Node_99 [shape=record,label="{99\:\ 0x0055|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x0055|SYNTHETIC\l}"];
Node_105 [shape=record,label="{105\:\ 0x0055|SYNTHETIC\l}"];
Node_103 [shape=record,label="{103\:\ 0x0055|SYNTHETIC\l}"];
Node_102 [shape=record,label="{102\:\ 0x0055|SYNTHETIC\l}"];
Node_101 [shape=record,label="{101\:\ 0x0055|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x0055|SYNTHETIC\l}"];
Node_98 [shape=record,label="{98\:\ 0x0058|SYNTHETIC\l}"];
Node_81 [shape=record,label="{81\:\ 0x0058|r20.clipRect(r1, 0, r2, getHeight())\lr12 = r1\lr13 = r2\l}"];
Node_83 [shape=record,label="{83\:\ 0x0065|PHI: r12 r13 \l  PHI: (r12v1 'clipLeft' int) = (r12v0 'clipLeft' int), (r12v2 'clipLeft' int) binds: [B:82:0x0063, B:81:0x0058] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'clipRight' int) = (r13v0 'clipRight' int), (r13v2 'clipRight' int) binds: [B:82:0x0063, B:81:0x0058] A[DONT_GENERATE, DONT_INLINE]\l|boolean r14 = super.drawChild(r20, r21, r22)\lr20.restoreToCount(r11)\lfloat r1 = r19.mScrimOpacity\l}"];
Node_84 [shape=record,label="{84\:\ 0x0071|if ((r1 \> 0.0f ? 1 : (r1 == 0.0f ? 0 : \-1)) \<= 0) goto L41\l}"];
Node_85 [shape=record,label="{85\:\ 0x0073|if (r10 == false) goto L41\l}"];
Node_86 [shape=record,label="{86\:\ 0x0075|int r2 = r19.mScrimColor\lint r15 = ((\-16777216) & r2) \>\>\> 24\lint r6 = (int) (((float) r15) * r1)\lr5 = (r6 \<\< 24) \| (r2 & androidx.core.view.ViewCompat.MEASURED_SIZE_MASK)\lr19.mScrimPaint.setColor(r5)\lr20.drawRect((float) r12, 0.0f, (float) r13, (float) getHeight(), r19.mScrimPaint)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0140|RETURN\l|return r14\l}"];
Node_55 [shape=record,label="{55\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_87 [shape=record,label="{87\:\ 0x00aa}"];
Node_88 [shape=record,label="{88\:\ 0x00ae|if (r19.mShadowLeftResolved == null) goto L46\l}"];
Node_89 [shape=record,label="{89\:\ 0x00b0}"];
Node_90 [shape=record,label="{90\:\ 0x00b4|if (checkDrawerViewAbsoluteGravity(r21, 3) == false) goto L46\l}"];
Node_91 [shape=record,label="{91\:\ 0x00b6|int r1 = r19.mShadowLeftResolved.getIntrinsicWidth()\lint r3 = r21.getRight()\lint r6 = r19.mLeftDragger.getEdgeSize()\lfloat r2 = java.lang.Math.max(0.0f, java.lang.Math.min(((float) r3) \/ ((float) r6), 1.0f))\landroid.graphics.drawable.Drawable r4 = r19.mShadowLeftResolved\lint r5 = r21.getTop()\lint r15 = r3 + r1\lint r1 = r21.getBottom()\lr4.setBounds(r3, r5, r15, r1)\lr19.mShadowLeftResolved.setAlpha((int) (255.0f * r2))\lr19.mShadowLeftResolved.draw(r20)\l}"];
Node_92 [shape=record,label="{92\:\ 0x00f2}"];
Node_93 [shape=record,label="{93\:\ 0x00f4|if (r19.mShadowRightResolved == null) goto L39\l}"];
Node_94 [shape=record,label="{94\:\ 0x00f6}"];
Node_95 [shape=record,label="{95\:\ 0x00fb|if (checkDrawerViewAbsoluteGravity(r21, 5) == false) goto L39\l}"];
Node_96 [shape=record,label="{96\:\ 0x00fd|int r1 = r19.mShadowRightResolved.getIntrinsicWidth()\lint r3 = r21.getLeft()\lint r4 = getWidth() \- r3\lint r6 = r19.mRightDragger.getEdgeSize()\lfloat r2 = java.lang.Math.max(0.0f, java.lang.Math.min(((float) r4) \/ ((float) r6), 1.0f))\landroid.graphics.drawable.Drawable r5 = r19.mShadowRightResolved\lint r15 = r3 \- r1\lint r1 = r21.getTop()\lint r4 = r21.getBottom()\lr5.setBounds(r15, r1, r3, r4)\lr19.mShadowRightResolved.setAlpha((int) (255.0f * r2))\lr19.mShadowRightResolved.draw(r20)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0063|r12 = 0\lr13 = r2\l}"];
MethodNode[shape=record,label="{protected boolean androidx.drawerlayout.widget.DrawerLayout.drawChild((r19v0 'this' androidx.drawerlayout.widget.DrawerLayout A[IMMUTABLE_TYPE, THIS]), (r20v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'drawingTime' long A[D('drawingTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:80:0x0055 \-\> B:59:0x001f, CROSS_EDGE: B:74:0x004a \-\> B:80:0x0055, CROSS_EDGE: B:79:0x0054 \-\> B:80:0x0055, CROSS_EDGE: B:78:0x0052 \-\> B:80:0x0055, CROSS_EDGE: B:69:0x003d \-\> B:80:0x0055, CROSS_EDGE: B:67:0x0037 \-\> B:80:0x0055, CROSS_EDGE: B:65:0x0031 \-\> B:80:0x0055, CROSS_EDGE: B:63:0x002b \-\> B:80:0x0055, CROSS_EDGE: B:61:0x0025 \-\> B:80:0x0055, CROSS_EDGE: B:91:0x00b6 \-\> B:97:0x0140, CROSS_EDGE: B:96:0x00fd \-\> B:97:0x0140, CROSS_EDGE: B:95:0x00fb \-\> B:97:0x0140, CROSS_EDGE: B:93:0x00f4 \-\> B:97:0x0140, CROSS_EDGE: B:88:0x00ae \-\> B:92:0x00f2, CROSS_EDGE: B:84:0x0071 \-\> B:87:0x00aa, CROSS_EDGE: B:82:0x0063 \-\> B:83:0x0065\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean\}]\l}"];
MethodNode -> Node_54;Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_82;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_98;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_100;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_101;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_102;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_103;
Node_68 -> Node_69;
Node_69 -> Node_71;
Node_69 -> Node_105[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_107;
Node_75 -> Node_106;
Node_106 -> Node_80;
Node_80 -> Node_59;
Node_107 -> Node_80;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_104;
Node_79 -> Node_99;
Node_99 -> Node_80;
Node_104 -> Node_80;
Node_105 -> Node_80;
Node_103 -> Node_80;
Node_102 -> Node_80;
Node_101 -> Node_80;
Node_100 -> Node_80;
Node_98 -> Node_81;
Node_81 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_87;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_97;
Node_97 -> Node_55;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_92;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_97;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_97;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_97;
Node_82 -> Node_83;
}

