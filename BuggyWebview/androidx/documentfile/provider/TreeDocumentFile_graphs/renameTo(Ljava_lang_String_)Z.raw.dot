digraph "CFG forandroidx.documentfile.provider.TreeDocumentFile.renameTo(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:179)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0014, blocks: (B:3:0x0001, B:5:0x000f), top: B:11:0x0001 \}\lCatch: Exception \-\> 0x0014\l|0x0001: IGET  (r1 I:android.content.Context) = (r3 I:androidx.documentfile.provider.TreeDocumentFile) androidx.documentfile.provider.TreeDocumentFile.mContext android.content.Context A[Catch: Exception \-\> 0x0014, TRY_ENTER]\l0x0003: INVOKE  (r1 I:android.content.ContentResolver) = (r1 I:android.content.Context) type: VIRTUAL call: android.content.Context.getContentResolver():android.content.ContentResolver A[Catch: Exception \-\> 0x0014, MD:():android.content.ContentResolver (c)] (LINE:180)\l0x0007: IGET  (r2 I:android.net.Uri) = (r3 I:androidx.documentfile.provider.TreeDocumentFile) androidx.documentfile.provider.TreeDocumentFile.mUri android.net.Uri A[Catch: Exception \-\> 0x0014]\l0x0009: INVOKE  (r1 I:android.net.Uri) = \l  (r1 I:android.content.ContentResolver)\l  (r2 I:android.net.Uri)\l  (r4 I:java.lang.String A[D('displayName' java.lang.String)])\l type: STATIC call: android.provider.DocumentsContract.renameDocument(android.content.ContentResolver, android.net.Uri, java.lang.String):android.net.Uri A[Catch: Exception \-\> 0x0014, MD:(android.content.ContentResolver, android.net.Uri, java.lang.String):android.net.Uri throws java.io.FileNotFoundException (c)] (LINE:179)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' android.net.Uri)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013  (LINE:181)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0014, blocks: (B:3:0x0001, B:5:0x000f), top: B:11:0x0001 \}\lCatch: Exception \-\> 0x0014\l|0x000f: IPUT  (r1 I:android.net.Uri A[D('result' android.net.Uri)]), (r3 I:androidx.documentfile.provider.TreeDocumentFile) androidx.documentfile.provider.TreeDocumentFile.mUri android.net.Uri A[Catch: Exception \-\> 0x0014, TRY_LEAVE] (LINE:182)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|0x0011: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:183)\l0x0012: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:boolean)  (LINE:185)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|ExcHandler: Exception \-\> 0x0014\l|0x0014: MOVE_EXCEPTION  (r1 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0014] (LINE:187)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:boolean)  (LINE:188)\l}"];
MethodNode[shape=record,label="{public boolean androidx.documentfile.provider.TreeDocumentFile.renameTo((r3 'this' I:androidx.documentfile.provider.TreeDocumentFile A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[D('displayName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0015 \-\> B:1:?, CROSS_EDGE: B:8:0x0013 \-\> B:1:?, CROSS_EDGE: B:11:0x0001 \-\> B:9:0x0014\lDebug Info:\l  0x000d\-0x0014: r1 'result' Landroid\/net\/Uri;\l  0x0015\-0x0015: r1 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0015: r4 'displayName' Ljava\/lang\/String;\lTryCatch #0 \{Exception \-\> 0x0014, blocks: (B:3:0x0001, B:5:0x000f), top: B:11:0x0001 \}\lMETHOD_OVERRIDE: [androidx.documentfile.provider.DocumentFile.renameTo(java.lang.String):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_11;
Node_11 -> Node_3;
Node_11 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_1;
Node_12 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

