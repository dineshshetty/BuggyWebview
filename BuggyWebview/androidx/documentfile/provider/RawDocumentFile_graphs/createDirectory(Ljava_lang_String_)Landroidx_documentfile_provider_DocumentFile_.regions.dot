digraph "CFG forandroidx.documentfile.provider.RawDocumentFile.createDirectory(Ljava\/lang\/String;)Landroidx\/documentfile\/provider\/DocumentFile;" {
subgraph cluster_Region_661510612 {
label = "R(2:1|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|java.io.File java.io.File r0 = new java.io.File(r2.mFile, r3)\l}"];
subgraph cluster_Region_485942229 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1071737028 {
label = "IF [B:3:0x000b, B:5:0x0011] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0.isDirectory() != false) goto L7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|ADDED_TO_REGION\l|if (r0.mkdir() != false) goto L7\l}"];
subgraph cluster_Region_1257036288 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001b|RETURN\l|return new androidx.documentfile.provider.RawDocumentFile(r2, r0)\l}"];
}
}
subgraph cluster_Region_978245109 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return null\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016}"];
MethodNode[shape=record,label="{public androidx.documentfile.provider.DocumentFile androidx.documentfile.provider.RawDocumentFile.createDirectory((r2v0 'this' androidx.documentfile.provider.RawDocumentFile A[IMMUTABLE_TYPE, THIS]), (r3v0 'displayName' java.lang.String A[D('displayName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x001b \-\> B:1:?, CROSS_EDGE: B:3:0x000b \-\> B:9:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.documentfile.provider.DocumentFile.createDirectory(java.lang.String):androidx.documentfile.provider.DocumentFile]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_5 -> Node_7[style=dashed];
Node_5 -> Node_9;
Node_10 -> Node_1;
Node_7 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_9 -> Node_10;
}

