digraph "CFG forandroidx.documentfile.provider.DocumentsContractApi19.isFile(Landroid\/content\/Context;Landroid\/net\/Uri;)Z" {
subgraph cluster_Region_629188473 {
label = "R(2:1|(2:(1:7)|(1:5)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0000|java.lang.String java.lang.String r0 = getRawType(r2, r3)\l}"];
subgraph cluster_Region_1000633192 {
label = "R(2:(1:7)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1558180215 {
label = "IF [B:15:0x000a, B:17:0x0010] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000a|if (\"vnd.android.document\/directory\".equals(r0) != false) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|ADDED_TO_REGION\l|if (android.text.TextUtils.isEmpty(r0) != false) goto L7\l}"];
subgraph cluster_Region_1576295306 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_525277414 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\l|return true\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000c}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0015|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean androidx.documentfile.provider.DocumentsContractApi19.isFile((r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'self' android.net.Uri A[D('self' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0016 \-\> B:13:?, CROSS_EDGE: B:15:0x000a \-\> B:21:0x0015\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_12;Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_23;
Node_23 -> Node_13;
Node_19 -> Node_13;
Node_12 -> Node_14;
Node_16 -> Node_17;
Node_21 -> Node_13;
}

