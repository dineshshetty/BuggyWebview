digraph "CFG forandroidx.documentfile.provider.DocumentsContractApi19.closeQuietly(Ljava\/lang\/AutoCloseable;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|if (r1 == null) goto L2\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{RuntimeException \-\> 0x0008, Exception \-\> 0x0006, blocks: (B:17:0x0002), top: B:24:0x0002 \}\lCatch: Exception \-\> 0x0006, RuntimeException \-\> 0x0008\l|r1.close()     \/\/ Catch: java.lang.Exception \-\> L6 java.lang.RuntimeException \-\> L8\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|ExcHandler: RuntimeException \-\> 0x0008\l|java.lang.RuntimeException r0 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|throw r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|ExcHandler: Exception \-\> 0x0006\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void androidx.documentfile.provider.DocumentsContractApi19.closeQuietly((r1v0 'closeable' java.lang.AutoCloseable A[D('closeable' java.lang.AutoCloseable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0002 \-\> B:23:0x000a, CROSS_EDGE: B:22:0x0009 \-\> B:15:?, CROSS_EDGE: B:19:0x0006 \-\> B:23:0x000a, CROSS_EDGE: B:24:0x0002 \-\> B:21:0x0008, CROSS_EDGE: B:24:0x0002 \-\> B:19:0x0006\lINLINE_NOT_NEEDED\lTryCatch #2 \{RuntimeException \-\> 0x0008, Exception \-\> 0x0006, blocks: (B:17:0x0002), top: B:24:0x0002 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_23;
Node_16 -> Node_24[style=dashed];
Node_23 -> Node_15;
Node_24 -> Node_17;
Node_24 -> Node_21;
Node_24 -> Node_19;
Node_17 -> Node_25;
Node_17 -> Node_26;
Node_25 -> Node_21;
Node_25 -> Node_19;
Node_26 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_19 -> Node_27;
Node_27 -> Node_15;
}

