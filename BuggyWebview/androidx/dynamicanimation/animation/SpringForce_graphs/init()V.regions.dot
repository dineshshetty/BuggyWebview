digraph "CFG forandroidx.dynamicanimation.animation.SpringForce.init()V" {
subgraph cluster_Region_1392087658 {
label = "R(1:(2:(1:3)|(1:(2:(1:18)|(3:7|(1:9)(1:(1:16))|10)))))";
node [shape=record,color=blue];
subgraph cluster_Region_355906266 {
label = "R(2:(1:3)|(1:(2:(1:18)|(3:7|(1:9)(1:(1:16))|10))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1715696945 {
label = "IF [B:22:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0002|if (r8.mInitialized != false) goto L3\l}"];
subgraph cluster_Region_1673646323 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0004|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_2100651043 {
label = "R(1:(2:(1:18)|(3:7|(1:9)(1:(1:16))|10)))";
node [shape=record,color=blue];
subgraph cluster_Region_1572186429 {
label = "R(2:(1:18)|(3:7|(1:9)(1:(1:16))|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_547534151 {
label = "IF [B:25:0x000e] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000e|if (r8.mFinalPosition == Double.MAX_VALUE) goto L17\l}"];
subgraph cluster_Region_1292480488 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x005f|throw new java.lang.IllegalStateException(\"Error: Final position of the spring must be set before the animation starts\")\l}"];
}
}
subgraph cluster_Region_1433405074 {
label = "R(3:7|(1:9)(1:(1:16))|10)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0010|double double r0 = r8.mDampingRatio\l}"];
subgraph cluster_IfRegion_2023810978 {
label = "IF [B:27:0x0016] THEN: R(1:9) ELSE: R(1:(1:16))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0016|if (r0 \> 1.0d) goto L9\l}"];
subgraph cluster_Region_1203128671 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0018|double double r6 = r8.mNaturalFreq\lr8.mGammaPlus = ((\-r0) * r6) + (r6 * java.lang.Math.sqrt((r0 * r0) \- 1.0d))\ldouble double r0 = r8.mDampingRatio\ldouble double r6 = r8.mNaturalFreq\lr8.mGammaMinus = ((\-r0) * r6) \- (r6 * java.lang.Math.sqrt((r0 * r0) \- 1.0d))\l}"];
}
subgraph cluster_Region_466341398 {
label = "R(1:(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_873884580 {
label = "IF [B:30:0x0041, B:32:0x0045] THEN: R(1:16) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0041|if (r0 \>= 0.0d) goto L14\l}"];
Node_32 [shape=record,label="{32\:\ 0x0045|ADDED_TO_REGION\l|if (r0 \< 1.0d) goto L16\l}"];
subgraph cluster_Region_1627893538 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0047|r8.mDampedFreq = r8.mNaturalFreq * java.lang.Math.sqrt(1.0d \- (r0 * r0))\l}"];
}
}
}
}
Node_34 [shape=record,label="{34\:\ 0x0054|r8.mInitialized = true\l}"];
}
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0000}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0005}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0057}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x003d}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0043}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0058}"];
MethodNode[shape=record,label="{private void androidx.dynamicanimation.animation.SpringForce.init((r8v0 'this' androidx.dynamicanimation.animation.SpringForce A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0057 \-\> B:20:?, CROSS_EDGE: B:33:0x0047 \-\> B:34:0x0054, CROSS_EDGE: B:32:0x0045 \-\> B:34:0x0054, CROSS_EDGE: B:30:0x0041 \-\> B:34:0x0054, CROSS_EDGE: B:37:0x005f \-\> B:20:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_19;Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_20;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_37 -> Node_20;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_30 -> Node_31;
Node_30 -> Node_34[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_35 -> Node_20;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_36 -> Node_37;
}

