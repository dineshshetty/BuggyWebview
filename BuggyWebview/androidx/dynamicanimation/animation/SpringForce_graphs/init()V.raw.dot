digraph "CFG forandroidx.dynamicanimation.animation.SpringForce.init()V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mInitialized boolean  (LINE:247)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0005 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:248)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|0x0005: IGET  (r0 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mFinalPosition double  (LINE:251)\l0x0007: CONST  (r2 I:??[long, double]) = (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ??[long, double]) \l0x000c: CMP_L  (r4 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0058 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: IGET  (r0 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mDampingRatio double  (LINE:256)\l0x0012: CONST  (r2 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x0014: CMP_L  (r4 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:29:0x003d \l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: NEG  (r4 I:double) = (r0 I:double)  (LINE:258)\l0x0019: IGET  (r6 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mNaturalFreq double \l0x001b: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x001d: ARITH  (r0 I:double) = (r0 I:double) * (r0 I:double) \l0x001f: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0020: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)] (LINE:259)\l0x0024: ARITH  (r6 I:double) = (r6 I:double) * (r0 I:double) \l0x0026: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) \l0x0027: IPUT  (r4 I:double), (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mGammaPlus double \l0x0029: IGET  (r0 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mDampingRatio double  (LINE:260)\l0x002b: NEG  (r4 I:double) = (r0 I:double) \l0x002c: IGET  (r6 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mNaturalFreq double \l0x002e: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0030: ARITH  (r0 I:double) = (r0 I:double) * (r0 I:double) \l0x0032: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0033: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)] (LINE:261)\l0x0037: ARITH  (r6 I:double) = (r6 I:double) * (r0 I:double) \l0x0039: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x003a: IPUT  (r4 I:double), (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mGammaMinus double \l}"];
Node_34 [shape=record,label="{34\:\ 0x0054|0x0054: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:267)\l0x0055: IPUT  (r0 I:boolean), (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mInitialized boolean \l}"];
Node_35 [shape=record,label="{35\:\ 0x0057|RETURN\l|0x0057: RETURN    (LINE:268)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003d|0x003d: CONST  (r4 I:??[long, double]) = (0 ??[long, double])  (LINE:262)\l0x003f: CMP_L  (r6 I:int) = (r0 I:double), (r4 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0041|0x0041: IF  (r6 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:34:0x0054 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0043|0x0043: CMP_G  (r4 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0045|0x0045: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:34:0x0054 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0047|0x0047: IGET  (r4 I:double) = (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mNaturalFreq double  (LINE:264)\l0x0049: ARITH  (r0 I:double) = (r0 I:double) * (r0 I:double) \l0x004b: ARITH  (r2 I:double) = (r2 I:double) \- (r0 I:double) \l0x004c: INVOKE  (r0 I:double) = (r2 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0050: ARITH  (r4 I:double) = (r4 I:double) * (r0 I:double) \l0x0052: IPUT  (r4 I:double), (r8 I:androidx.dynamicanimation.animation.SpringForce) androidx.dynamicanimation.animation.SpringForce.mDampedFreq double \l}"];
Node_36 [shape=record,label="{36\:\ 0x0058|0x0058: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:252)\l0x005a: CONST_STR  (r1 I:java.lang.String) =  \"Error: Final position of the spring must be set before the animation starts\" \l0x005c: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x005f|0x005f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.dynamicanimation.animation.SpringForce.init((r8 'this' I:androidx.dynamicanimation.animation.SpringForce A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0057 \-\> B:20:?, CROSS_EDGE: B:33:0x0047 \-\> B:34:0x0054, CROSS_EDGE: B:32:0x0045 \-\> B:34:0x0054, CROSS_EDGE: B:30:0x0041 \-\> B:34:0x0054, CROSS_EDGE: B:37:0x005f \-\> B:20:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_36 -> Node_37;
Node_37 -> Node_20;
}

