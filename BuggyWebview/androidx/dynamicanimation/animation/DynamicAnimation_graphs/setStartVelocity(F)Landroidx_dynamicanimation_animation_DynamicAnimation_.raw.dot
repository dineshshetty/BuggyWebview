digraph "CFG forandroidx.dynamicanimation.animation.DynamicAnimation.setStartVelocity(F)Landroidx\/dynamicanimation\/animation\/DynamicAnimation;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IPUT  \l  (r1 I:float A[D('startVelocity' float)])\l  (r0 I:androidx.dynamicanimation.animation.DynamicAnimation A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>)])\l androidx.dynamicanimation.animation.DynamicAnimation.mVelocity float  (LINE:403)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0002|RETURN\l|0x0002: RETURN  \l  (r0 I:T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>)])\l  (LINE:404)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\> androidx.dynamicanimation.animation.DynamicAnimation.setStartVelocity((r0 'this' I:androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>), IMMUTABLE_TYPE, THIS]), (r1 I:float A[D('startVelocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0002: r0 'this' Landroidx\/dynamicanimation\/animation\/DynamicAnimation;, signature: Landroidx\/dynamicanimation\/animation\/DynamicAnimation\<TT;\>;\l  \-1 \-0x0002: r1 'startVelocity' F\lTYPE_VARS: [T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\lSIGNATURE: (F)TT;\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.DynamicAnimation.setStartVelocity(float):T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

