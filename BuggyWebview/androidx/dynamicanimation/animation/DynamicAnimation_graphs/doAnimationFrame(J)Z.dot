digraph "CFG forandroidx.dynamicanimation.animation.DynamicAnimation.doAnimationFrame(J)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|long r0 = r6.mLastFrameTime\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|if ((r0 \> 0 ? 1 : (r0 == 0 ? 0 : \-1)) != 0) goto L6\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|r6.mLastFrameTime = r7\lsetPropertyValue(r6.mValue)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|long r0 = r7 \- r0\lr6.mLastFrameTime = r7\lboolean r3 = updateValueAndVelocity(r0)\lfloat r4 = java.lang.Math.min(r6.mValue, r6.mMaxValue)\lr6.mValue = r4\lfloat r4 = java.lang.Math.max(r4, r6.mMinValue)\lr6.mValue = r4\lsetPropertyValue(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|if (r3 == false) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|endAnimationInternal(false)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public boolean androidx.dynamicanimation.animation.DynamicAnimation.doAnimationFrame((r6v0 'this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>), IMMUTABLE_TYPE, THIS]), (r7v0 'frameTime' long A[D('frameTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0033 \-\> B:11:?, CROSS_EDGE: B:17:0x002e \-\> B:19:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.AnimationHandler.AnimationFrameCallback.doAnimationFrame(long):boolean]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

