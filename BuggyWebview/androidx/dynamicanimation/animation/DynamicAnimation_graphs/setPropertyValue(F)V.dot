digraph "CFG forandroidx.dynamicanimation.animation.DynamicAnimation.setPropertyValue(F)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r4.mProperty.setValue(r4.mTarget, r5)\lr0 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|LOOP_START\lLOOP:0: B:17:0x0008\-\>B:22:0x0027\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v4 'i' int) binds: [B:16:0x0000, B:22:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|if (r0 \>= r4.mUpdateListeners.size()) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010}"];
Node_20 [shape=record,label="{20\:\ 0x0016|if (r4.mUpdateListeners.get(r0) == null) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|r4.mUpdateListeners.get(r0).onAnimationUpdate(r4, r4.mValue, r4.mVelocity)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|LOOP_END\lLOOP:0: B:17:0x0008\-\>B:22:0x0027\l|int r0 = r0 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|removeNullEntries(r4.mUpdateListeners)\l}"];
Node_24 [shape=record,label="{24\:\ 0x002f|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.dynamicanimation.animation.DynamicAnimation.setPropertyValue((r4v0 'this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>), IMMUTABLE_TYPE, THIS]), (r5v0 'value' float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x0027 \-\> B:17:0x0008, CROSS_EDGE: B:20:0x0016 \-\> B:22:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_22 -> Node_17;
Node_27 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

