digraph "CFG forandroidx.dynamicanimation.animation.DynamicAnimation.addUpdateListener(Landroidx\/dynamicanimation\/animation\/DynamicAnimation$OnAnimationUpdateListener;)Landroidx\/dynamicanimation\/animation\/DynamicAnimation;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0004|if (isRunning() != false) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006}"];
Node_15 [shape=record,label="{15\:\ 0x000c|if (r2.mUpdateListeners.contains(r3) != false) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|r2.mUpdateListeners.add(r3)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|RETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014}"];
Node_19 [shape=record,label="{19\:\ 0x001b|throw new java.lang.UnsupportedOperationException(\"Error: Update listeners must be added beforethe animation.\")\l}"];
MethodNode[shape=record,label="{public T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\> androidx.dynamicanimation.animation.DynamicAnimation.addUpdateListener((r2v0 'this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>), IMMUTABLE_TYPE, THIS]), (r3v0 'listener' androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener A[D('listener' androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000c \-\> B:17:0x0013, CROSS_EDGE: B:19:0x001b \-\> B:11:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\lSIGNATURE: (Landroidx\/dynamicanimation\/animation\/DynamicAnimation$OnAnimationUpdateListener;)TT;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

