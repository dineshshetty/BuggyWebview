digraph "CFG forandroidx.dynamicanimation.animation.DynamicAnimation.getPropertyValue()F" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:androidx.dynamicanimation.animation.FloatPropertyCompat) = \l  (r2 I:androidx.dynamicanimation.animation.DynamicAnimation A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>)])\l androidx.dynamicanimation.animation.DynamicAnimation.mProperty androidx.dynamicanimation.animation.FloatPropertyCompat  (LINE:710)\l0x0002: IGET  (r1 I:java.lang.Object) = \l  (r2 I:androidx.dynamicanimation.animation.DynamicAnimation A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>)])\l androidx.dynamicanimation.animation.DynamicAnimation.mTarget java.lang.Object \l0x0004: INVOKE  (r0 I:float) = (r0 I:androidx.dynamicanimation.animation.FloatPropertyCompat), (r1 I:java.lang.Object) type: VIRTUAL call: androidx.dynamicanimation.animation.FloatPropertyCompat.getValue(java.lang.Object):float A[MD:(T):float (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private float androidx.dynamicanimation.animation.DynamicAnimation.getPropertyValue((r2 'this' I:androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\> A[D('this' androidx.dynamicanimation.animation.DynamicAnimation\<T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0008: r2 'this' Landroidx\/dynamicanimation\/animation\/DynamicAnimation;, signature: Landroidx\/dynamicanimation\/animation\/DynamicAnimation\<TT;\>;\lTYPE_VARS: [T extends androidx.dynamicanimation.animation.DynamicAnimation\<T\>]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

