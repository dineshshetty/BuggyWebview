digraph "CFG forandroidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.dispatchAnimationFrame()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.dynamicanimation.animation.AnimationHandler) = (r3 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) androidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.this$0 androidx.dynamicanimation.animation.AnimationHandler  (LINE:60)\l0x0002: INVOKE  (r1 I:long) =  type: STATIC call: android.os.SystemClock.uptimeMillis():long A[MD:():long (c)]\l0x0006: IPUT  (r1 I:long), (r0 I:androidx.dynamicanimation.animation.AnimationHandler) androidx.dynamicanimation.animation.AnimationHandler.mCurrentFrameTime long \l0x0008: IGET  (r0 I:androidx.dynamicanimation.animation.AnimationHandler) = (r3 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) androidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.this$0 androidx.dynamicanimation.animation.AnimationHandler  (LINE:61)\l0x000a: IGET  (r1 I:long) = (r0 I:androidx.dynamicanimation.animation.AnimationHandler) androidx.dynamicanimation.animation.AnimationHandler.mCurrentFrameTime long \l0x000c: INVOKE  (r0 I:androidx.dynamicanimation.animation.AnimationHandler), (r1 I:long) type: VIRTUAL call: androidx.dynamicanimation.animation.AnimationHandler.doAnimationFrame(long):void A[MD:(long):void (m)]\l0x000f: IGET  (r0 I:androidx.dynamicanimation.animation.AnimationHandler) = (r3 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) androidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.this$0 androidx.dynamicanimation.animation.AnimationHandler  (LINE:62)\l0x0011: IGET  (r0 I:java.util.ArrayList\<androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback\>) = (r0 I:androidx.dynamicanimation.animation.AnimationHandler) androidx.dynamicanimation.animation.AnimationHandler.mAnimationCallbacks java.util.ArrayList \l0x0013: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: IGET  (r0 I:androidx.dynamicanimation.animation.AnimationHandler) = (r3 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher) androidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.this$0 androidx.dynamicanimation.animation.AnimationHandler  (LINE:63)\l0x001b: INVOKE  (r0 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider) = (r0 I:androidx.dynamicanimation.animation.AnimationHandler) type: VIRTUAL call: androidx.dynamicanimation.animation.AnimationHandler.getProvider():androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider A[MD:():androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider (m)]\l0x001f: INVOKE  (r0 I:androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallbackProvider) type: VIRTUAL call: androidx.dynamicanimation.animation.AnimationHandler.AnimationFrameCallbackProvider.postFrameCallback():void A[MD:():void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:65)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:65)\l}"];
MethodNode[shape=record,label="{void androidx.dynamicanimation.animation.AnimationHandler.AnimationCallbackDispatcher.dispatchAnimationFrame((r3 'this' I:androidx.dynamicanimation.animation.AnimationHandler$AnimationCallbackDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0017 \-\> B:12:0x0022\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

