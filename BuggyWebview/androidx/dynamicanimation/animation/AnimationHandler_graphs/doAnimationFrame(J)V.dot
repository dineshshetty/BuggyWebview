digraph "CFG forandroidx.dynamicanimation.animation.AnimationHandler.doAnimationFrame(J)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|long r0 = android.os.SystemClock.uptimeMillis()\lr2 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|LOOP_START\lLOOP:0: B:21:0x0005\-\>B:29:0x0021\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:20:0x0000, B:29:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|if (r2 \>= r5.mAnimationCallbacks.size()) goto L13\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback r3 = r5.mAnimationCallbacks.get(r2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|if (r3 != null) goto L6\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018}"];
Node_27 [shape=record,label="{27\:\ 0x001c|if (isCallbackDue(r3, r0) == false) goto L11\l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|r3.doAnimationFrame(r6)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0021|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0021|LOOP_END\lLOOP:0: B:21:0x0005\-\>B:29:0x0021\l|int r2 = r2 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|cleanUpList()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.dynamicanimation.animation.AnimationHandler.doAnimationFrame((r5v0 'this' androidx.dynamicanimation.animation.AnimationHandler A[IMMUTABLE_TYPE, THIS]), (r6v0 'frameTime' long A[D('frameTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0021 \-\> B:21:0x0005, CROSS_EDGE: B:27:0x001c \-\> B:29:0x0021, CROSS_EDGE: B:24:0x0015 \-\> B:29:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_35[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_33;
Node_33 -> Node_29;
Node_29 -> Node_21;
Node_34 -> Node_29;
Node_35 -> Node_29;
Node_32 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
}

