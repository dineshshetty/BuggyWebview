digraph "CFG forandroidx.dynamicanimation.animation.AnimationHandler.addAnimationFrameCallback(Landroidx\/dynamicanimation\/animation\/AnimationHandler$AnimationFrameCallback;J)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0006|if (r3.mAnimationCallbacks.size() != 0) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|getProvider().postFrameCallback()\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f}"];
Node_19 [shape=record,label="{19\:\ 0x0015|if (r3.mAnimationCallbacks.contains(r4) != false) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|r3.mAnimationCallbacks.add(r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c}"];
Node_22 [shape=record,label="{22\:\ 0x0020|if ((r5 \> 0 ? 1 : (r5 == 0 ? 0 : \-1)) \<= 0) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|r3.mDelayedCallbackStartTime.put(r4, java.lang.Long.valueOf(android.os.SystemClock.uptimeMillis() + r5))\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.dynamicanimation.animation.AnimationHandler.addAnimationFrameCallback((r3v0 'this' androidx.dynamicanimation.animation.AnimationHandler A[IMMUTABLE_TYPE, THIS]), (r4v0 'callback' androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback A[D('callback' androidx.dynamicanimation.animation.AnimationHandler$AnimationFrameCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'delay' long A[D('delay' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0020 \-\> B:24:0x0030, CROSS_EDGE: B:19:0x0015 \-\> B:21:0x001c, CROSS_EDGE: B:16:0x0006 \-\> B:18:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

