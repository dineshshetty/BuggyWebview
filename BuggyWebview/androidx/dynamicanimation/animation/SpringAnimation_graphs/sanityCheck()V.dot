digraph "CFG forandroidx.dynamicanimation.animation.SpringAnimation.sanityCheck()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|androidx.dynamicanimation.animation.SpringForce r0 = r5.mSpring\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r0 == null) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|double r0 = (double) r0.getFinalPosition()\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|if ((r0 \> ((double) r5.mMaxValue) ? 1 : (r0 == ((double) r5.mMaxValue) ? 0 : \-1)) \> 0) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010}"];
Node_22 [shape=record,label="{22\:\ 0x0015|if ((r0 \> ((double) r5.mMinValue) ? 1 : (r0 == ((double) r5.mMinValue) ? 0 : \-1)) \< 0) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018}"];
Node_25 [shape=record,label="{25\:\ 0x001f|throw new java.lang.UnsupportedOperationException(\"Final position of the spring cannot be less than the min value.\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020}"];
Node_27 [shape=record,label="{27\:\ 0x0027|throw new java.lang.UnsupportedOperationException(\"Final position of the spring cannot be greater than the max value.\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x0028}"];
Node_29 [shape=record,label="{29\:\ 0x002f|throw new java.lang.UnsupportedOperationException(\"Incomplete SpringAnimation: Either final position or a spring force needs to be set.\")\l}"];
MethodNode[shape=record,label="{private void androidx.dynamicanimation.animation.SpringAnimation.sanityCheck((r5v0 'this' androidx.dynamicanimation.animation.SpringAnimation A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001f \-\> B:16:?, CROSS_EDGE: B:27:0x0027 \-\> B:16:?, CROSS_EDGE: B:29:0x002f \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

