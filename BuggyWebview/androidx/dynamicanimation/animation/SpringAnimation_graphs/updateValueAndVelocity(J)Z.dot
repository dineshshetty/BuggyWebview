digraph "CFG forandroidx.dynamicanimation.animation.SpringAnimation.updateValueAndVelocity(J)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if (r19.mEndRequested == false) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|float r1 = r19.mPendingPosition\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|if ((r1 \> Float.MAX_VALUE ? 1 : (r1 == Float.MAX_VALUE ? 0 : \-1)) == 0) goto L6\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|r19.mSpring.setFinalPosition(r1)\lr19.mPendingPosition = Float.MAX_VALUE\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|r19.mValue = r19.mSpring.getFinalPosition()\lr19.mVelocity = 0.0f\lr19.mEndRequested = false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|RETURN\l|return true\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026}"];
Node_29 [shape=record,label="{29\:\ 0x002a|if ((r19.mPendingPosition \> Float.MAX_VALUE ? 1 : (r19.mPendingPosition == Float.MAX_VALUE ? 0 : \-1)) == 0) goto L17\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|double r3 = (double) r19.mSpring.getFinalPosition()\landroidx.dynamicanimation.animation.DynamicAnimation$MassState r1 = r19.mSpring.updateValues((double) r19.mValue, (double) r19.mVelocity, r20 \/ 2)\lr19.mSpring.setFinalPosition(r19.mPendingPosition)\lr19.mPendingPosition = Float.MAX_VALUE\landroidx.dynamicanimation.animation.DynamicAnimation$MassState r1 = r19.mSpring.updateValues((double) r1.mValue, (double) r1.mVelocity, r20 \/ 2)\lr19.mValue = r1.mValue\lr19.mVelocity = r1.mVelocity\l}"];
Node_32 [shape=record,label="{32\:\ 0x007a|r19.mValue = java.lang.Math.max(r19.mValue, r19.mMinValue)\lr19.mValue = java.lang.Math.min(r19.mValue, r19.mMaxValue)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0096|if (isAtEquilibrium(r19.mValue, r19.mVelocity) == false) goto L16\l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|r19.mValue = r19.mSpring.getFinalPosition()\lr19.mVelocity = 0.0f\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a3|RETURN\l|return true\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a4|RETURN\l|return false\l}"];
Node_31 [shape=record,label="{31\:\ 0x0064|androidx.dynamicanimation.animation.DynamicAnimation$MassState r1 = r19.mSpring.updateValues((double) r19.mValue, (double) r19.mVelocity, r20)\lr19.mValue = r1.mValue\lr19.mVelocity = r1.mVelocity\l}"];
MethodNode[shape=record,label="{boolean androidx.dynamicanimation.animation.SpringAnimation.updateValueAndVelocity((r19v0 'this' androidx.dynamicanimation.animation.SpringAnimation A[IMMUTABLE_TYPE, THIS]), (r20v0 'deltaT' long A[D('deltaT' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0010 \-\> B:26:0x0019, CROSS_EDGE: B:35:0x00a3 \-\> B:20:?, CROSS_EDGE: B:37:0x00a5 \-\> B:20:?, CROSS_EDGE: B:31:0x0064 \-\> B:32:0x007a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.DynamicAnimation.updateValueAndVelocity(long):boolean]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_20;
Node_36 -> Node_20;
Node_31 -> Node_32;
}

