digraph "CFG forandroidx.dynamicanimation.animation.SpringAnimation.sanityCheck()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:androidx.dynamicanimation.animation.SpringForce) = (r5 I:androidx.dynamicanimation.animation.SpringAnimation) androidx.dynamicanimation.animation.SpringAnimation.mSpring androidx.dynamicanimation.animation.SpringForce  (LINE:197)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0028 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: INVOKE  (r0 I:float) = (r0 I:androidx.dynamicanimation.animation.SpringForce) type: VIRTUAL call: androidx.dynamicanimation.animation.SpringForce.getFinalPosition():float A[MD:():float (m)] (LINE:201)\l0x0008: CAST (r0 I:double) = (double) (r0 I:float) \l0x0009: IGET  (r2 I:float) = (r5 I:androidx.dynamicanimation.animation.SpringAnimation) androidx.dynamicanimation.animation.SpringAnimation.mMaxValue float  (LINE:202)\l0x000b: CAST (r2 I:double) = (double) (r2 I:float) \l0x000c: CMP_L  (r4 I:int) = (r0 I:double A[D('finalPosition' double)]), (r2 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|0x000e: IF  (r4 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:26:0x0020 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: IGET  (r2 I:float) = (r5 I:androidx.dynamicanimation.animation.SpringAnimation) androidx.dynamicanimation.animation.SpringAnimation.mMinValue float  (LINE:205)\l0x0012: CAST (r2 I:double) = (double) (r2 I:float) \l0x0013: CMP_G  (r4 I:int) = (r0 I:double A[D('finalPosition' double)]), (r2 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|0x0015: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x0018 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|RETURN\l|0x0017: RETURN    (LINE:209)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException  (LINE:206)\l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"Final position of the spring cannot be less than the min value.\" \l0x001c: INVOKE  (r2 I:java.lang.UnsupportedOperationException), (r3 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|0x001f: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|0x0020: NEW_INSTANCE  (r2 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException  (LINE:203)\l0x0022: CONST_STR  (r3 I:java.lang.String) =  \"Final position of the spring cannot be greater than the max value.\" \l0x0024: INVOKE  (r2 I:java.lang.UnsupportedOperationException), (r3 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|0x0027: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0028|0x0028: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException A[D('finalPosition' double)]) =  java.lang.UnsupportedOperationException  (LINE:198)\l0x002a: CONST_STR  (r1 I:java.lang.String) =  \"Incomplete SpringAnimation: Either final position or a spring force needs to be set.\" \l0x002c: INVOKE  (r0 I:java.lang.UnsupportedOperationException), (r1 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002f|0x002f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.dynamicanimation.animation.SpringAnimation.sanityCheck((r5 'this' I:androidx.dynamicanimation.animation.SpringAnimation A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x001f \-\> B:16:?, CROSS_EDGE: B:27:0x0027 \-\> B:16:?, CROSS_EDGE: B:29:0x002f \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0028: r0 'finalPosition' D\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_16;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

