digraph "CFG forandroidx.dynamicanimation.animation.FlingAnimation.DragForce.isAtEquilibrium(FF)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:float) = (r4 I:float A[D('velocity' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:233)\l0x0004: IGET  (r1 I:float) = (r2 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce) androidx.dynamicanimation.animation.FlingAnimation.DragForce.mVelocityThreshold float \l0x0006: CMP_G  (r0 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lRETURN\l|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.dynamicanimation.animation.FlingAnimation.DragForce.isAtEquilibrium((r2 'this' I:androidx.dynamicanimation.animation.FlingAnimation$DragForce A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('velocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000c \-\> B:6:0x000d\lDebug Info:\l  \-1 \-0x000d: r3 'value' F\l  \-1 \-0x000d: r4 'velocity' F\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.Force.isAtEquilibrium(float, float):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

