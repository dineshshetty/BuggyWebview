digraph "CFG forandroidx.dynamicanimation.animation.FlingAnimation.isAtEquilibrium(FF)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r1 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMaxValue float  (LINE:184)\l0x0002: CMP_L  (r0 I:int) = (r2 I:float A[D('value' float)]), (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:float) = (r1 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMinValue float \l0x0008: CMP_G  (r0 I:int) = (r2 I:float A[D('value' float)]), (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce) = (r1 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mFlingForce androidx.dynamicanimation.animation.FlingAnimation$DragForce \l0x000e: INVOKE  (r0 I:boolean) = \l  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce)\l  (r2 I:float A[D('value' float)])\l  (r3 I:float A[D('velocity' float)])\l type: VIRTUAL call: androidx.dynamicanimation.animation.FlingAnimation.DragForce.isAtEquilibrium(float, float):boolean A[MD:(float, float):boolean (m)] (LINE:186)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0015 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|SYNTHETIC\lRETURN\l|0x0015: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean androidx.dynamicanimation.animation.FlingAnimation.isAtEquilibrium((r1 'this' I:androidx.dynamicanimation.animation.FlingAnimation A[IMMUTABLE_TYPE, THIS]), (r2 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('velocity' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0017 \-\> B:11:0x0018, CROSS_EDGE: B:5:0x000a \-\> B:10:0x0017, CROSS_EDGE: B:3:0x0004 \-\> B:10:0x0017\lDebug Info:\l  \-1 \-0x0018: r2 'value' F\l  \-1 \-0x0018: r3 'velocity' F\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.DynamicAnimation.isAtEquilibrium(float, float):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_1;
Node_10 -> Node_1;
}

