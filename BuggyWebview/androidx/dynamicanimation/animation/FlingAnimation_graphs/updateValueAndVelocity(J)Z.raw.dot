digraph "CFG forandroidx.dynamicanimation.animation.FlingAnimation.updateValueAndVelocity(J)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mFlingForce androidx.dynamicanimation.animation.FlingAnimation$DragForce  (LINE:157)\l0x0002: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float \l0x0004: IGET  (r2 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mVelocity float \l0x0006: INVOKE  (r0 I:androidx.dynamicanimation.animation.DynamicAnimation$MassState) = \l  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce)\l  (r1 I:float)\l  (r2 I:float)\l  (r5 I:long A[D('deltaT' long)])\l type: VIRTUAL call: androidx.dynamicanimation.animation.FlingAnimation.DragForce.updateValueAndVelocity(float, float, long):androidx.dynamicanimation.animation.DynamicAnimation$MassState A[MD:(float, float, long):androidx.dynamicanimation.animation.DynamicAnimation$MassState (m)]\l0x000a: IGET  (r1 I:float) = \l  (r0 I:androidx.dynamicanimation.animation.DynamicAnimation$MassState A[D('state' androidx.dynamicanimation.animation.DynamicAnimation$MassState)])\l androidx.dynamicanimation.animation.DynamicAnimation.MassState.mValue float  (LINE:158)\l0x000c: IPUT  (r1 I:float), (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float \l0x000e: IGET  (r1 I:float) = \l  (r0 I:androidx.dynamicanimation.animation.DynamicAnimation$MassState A[D('state' androidx.dynamicanimation.animation.DynamicAnimation$MassState)])\l androidx.dynamicanimation.animation.DynamicAnimation.MassState.mVelocity float  (LINE:159)\l0x0010: IPUT  (r1 I:float), (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mVelocity float \l0x0012: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float  (LINE:162)\l0x0014: IGET  (r2 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMinValue float \l0x0016: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: CMP_G  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMinValue float  (LINE:163)\l0x001d: IPUT  (r1 I:float), (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|RETURN\l|0x001f: RETURN  (r3 I:boolean)  (LINE:164)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float  (LINE:166)\l0x0022: IGET  (r2 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMaxValue float \l0x0024: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mMaxValue float  (LINE:167)\l0x002a: IPUT  (r1 I:float), (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|RETURN\l|0x002c: RETURN  (r3 I:boolean)  (LINE:168)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: IGET  (r1 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mValue float  (LINE:171)\l0x002f: IGET  (r2 I:float) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mVelocity float \l0x0031: INVOKE  (r1 I:boolean) = (r4 I:androidx.dynamicanimation.animation.FlingAnimation), (r1 I:float), (r2 I:float) type: VIRTUAL call: androidx.dynamicanimation.animation.FlingAnimation.isAtEquilibrium(float, float):boolean A[MD:(float, float):boolean (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0038 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|RETURN\l|0x0037: RETURN  (r3 I:boolean)  (LINE:172)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|RETURN\l|0x0038: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:174)\l0x0039: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean androidx.dynamicanimation.animation.FlingAnimation.updateValueAndVelocity((r4 'this' I:androidx.dynamicanimation.animation.FlingAnimation A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[D('deltaT' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x002c \-\> B:1:?, CROSS_EDGE: B:12:0x0037 \-\> B:1:?, CROSS_EDGE: B:14:0x0039 \-\> B:1:?\lDebug Info:\l  0x000a\-0x0039: r0 'state' Landroidx\/dynamicanimation\/animation\/DynamicAnimation$MassState;\l  \-1 \-0x0039: r5 'deltaT' J\lMETHOD_OVERRIDE: [androidx.dynamicanimation.animation.DynamicAnimation.updateValueAndVelocity(long):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_1;
Node_13 -> Node_1;
}

