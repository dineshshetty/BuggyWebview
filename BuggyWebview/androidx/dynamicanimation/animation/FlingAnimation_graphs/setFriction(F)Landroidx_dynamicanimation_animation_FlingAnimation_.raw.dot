digraph "CFG forandroidx.dynamicanimation.animation.FlingAnimation.setFriction(F)Landroidx\/dynamicanimation\/animation\/FlingAnimation;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:84)\l0x0001: CMP_G  (r0 I:int) = (r3 I:float A[D('friction' float)]), (r0 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce) = (r2 I:androidx.dynamicanimation.animation.FlingAnimation) androidx.dynamicanimation.animation.FlingAnimation.mFlingForce androidx.dynamicanimation.animation.FlingAnimation$DragForce  (LINE:87)\l0x0007: INVOKE  (r0 I:androidx.dynamicanimation.animation.FlingAnimation$DragForce), (r3 I:float A[D('friction' float)]) type: VIRTUAL call: androidx.dynamicanimation.animation.FlingAnimation.DragForce.setFrictionScalar(float):void A[MD:(float):void (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|0x000a: RETURN  (r2 I:androidx.dynamicanimation.animation.FlingAnimation)  (LINE:88)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:85)\l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"Friction must be positive\" \l0x000f: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public androidx.dynamicanimation.animation.FlingAnimation androidx.dynamicanimation.animation.FlingAnimation.setFriction((r2 'this' I:androidx.dynamicanimation.animation.FlingAnimation A[IMMUTABLE_TYPE, THIS]), (r3 I:float A[D('friction' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0012 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0012: r3 'friction' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

