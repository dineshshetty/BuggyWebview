digraph "CFG forandroidx.loader.app.LoaderManagerImpl.LoaderObserver.reset()V" {
subgraph cluster_Region_514610970 {
label = "R(1:(1:(2:(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_543802431 {
label = "R(1:(2:(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_327360538 {
label = "IF [B:13:0x0002] THEN: R(2:(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r2.mDeliveredData != false) goto L3\l}"];
subgraph cluster_Region_669438058 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1536050955 {
label = "IF [B:15:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (androidx.loader.app.LoaderManagerImpl.DEBUG != false) goto L5\l}"];
subgraph cluster_Region_900216953 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|android.util.Log.v(androidx.loader.app.LoaderManagerImpl.TAG, \"  Resetting: \" + r2.mLoader)\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0020|r2.mCallback.onLoaderReset(r2.mLoader)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0027|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.loader.app.LoaderManagerImpl.LoaderObserver.reset((r2v0 'this' androidx.loader.app.LoaderManagerImpl$LoaderObserver\<D\> A[D('this' androidx.loader.app.LoaderManagerImpl$LoaderObserver\<D\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0006 \-\> B:17:0x0020, CROSS_EDGE: B:13:0x0002 \-\> B:18:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: [D]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

