digraph "CFG forandroidx.loader.app.LoaderManagerImpl.LoaderViewModel.dump(Ljava\/lang\/String;Ljava\/io\/FileDescriptor;Ljava\/io\/PrintWriter;[Ljava\/lang\/String;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.collection.SparseArrayCompat\<androidx.loader.app.LoaderManagerImpl$LoaderInfo\>) = (r4 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) androidx.loader.app.LoaderManagerImpl.LoaderViewModel.mLoaders androidx.collection.SparseArrayCompat  (LINE:354)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.collection.SparseArrayCompat) type: VIRTUAL call: androidx.collection.SparseArrayCompat.size():int A[MD:():int (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:19:0x0055 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r5 I:java.lang.String A[D('prefix' java.lang.String)]) type: VIRTUAL call: java.io.PrintWriter.print(java.lang.String):void A[MD:(java.lang.String):void (c)] (LINE:355)\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"Loaders:\" \l0x000d: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r0 I:java.lang.String) type: VIRTUAL call: java.io.PrintWriter.println(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0010: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:356)\l0x0012: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0015: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String A[D('prefix' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: CONST_STR  (r1 I:java.lang.String) =  \"    \" \l0x001a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:357)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|LOOP_START\lLOOP:0: B:16:0x0022\-\>B:18:0x002a\l|0x0022: IGET  (r2 I:androidx.collection.SparseArrayCompat\<androidx.loader.app.LoaderManagerImpl$LoaderInfo\>) = (r4 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) androidx.loader.app.LoaderManagerImpl.LoaderViewModel.mLoaders androidx.collection.SparseArrayCompat \l0x0024: INVOKE  (r2 I:int) = (r2 I:androidx.collection.SparseArrayCompat) type: VIRTUAL call: androidx.collection.SparseArrayCompat.size():int A[MD:():int (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|0x0028: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:20:0x0055 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|LOOP_END\lLOOP:0: B:16:0x0022\-\>B:18:0x002a\l|0x002a: IGET  (r2 I:androidx.collection.SparseArrayCompat\<androidx.loader.app.LoaderManagerImpl$LoaderInfo\>) = (r4 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) androidx.loader.app.LoaderManagerImpl.LoaderViewModel.mLoaders androidx.collection.SparseArrayCompat  (LINE:358)\l0x002c: INVOKE  (r2 I:java.lang.Object) = (r2 I:androidx.collection.SparseArrayCompat), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.collection.SparseArrayCompat.valueAt(int):java.lang.Object A[MD:(int):E (m)]\l0x0030: CHECK_CAST (r2 I:androidx.loader.app.LoaderManagerImpl$LoaderInfo) = (androidx.loader.app.LoaderManagerImpl$LoaderInfo) (r2 I:??[OBJECT, ARRAY]) \l0x0032: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r5 I:java.lang.String A[D('prefix' java.lang.String)]) type: VIRTUAL call: java.io.PrintWriter.print(java.lang.String):void A[MD:(java.lang.String):void (c)] (LINE:359)\l0x0035: CONST_STR  (r3 I:java.lang.String) =  \"  #\" \l0x0037: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r3 I:java.lang.String) type: VIRTUAL call: java.io.PrintWriter.print(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x003a: IGET  (r3 I:androidx.collection.SparseArrayCompat\<androidx.loader.app.LoaderManagerImpl$LoaderInfo\>) = (r4 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) androidx.loader.app.LoaderManagerImpl.LoaderViewModel.mLoaders androidx.collection.SparseArrayCompat \l0x003c: INVOKE  (r3 I:int) = (r3 I:androidx.collection.SparseArrayCompat), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.collection.SparseArrayCompat.keyAt(int):int A[MD:(int):int (m)]\l0x0040: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r3 I:int) type: VIRTUAL call: java.io.PrintWriter.print(int):void A[MD:(int):void (c)]\l0x0043: CONST_STR  (r3 I:java.lang.String) =  \": \"  (LINE:360)\l0x0045: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r3 I:java.lang.String) type: VIRTUAL call: java.io.PrintWriter.print(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x0048: INVOKE  (r3 I:java.lang.String) = (r2 I:androidx.loader.app.LoaderManagerImpl$LoaderInfo A[D('info' androidx.loader.app.LoaderManagerImpl$LoaderInfo)]) type: VIRTUAL call: androidx.loader.app.LoaderManagerImpl.LoaderInfo.toString():java.lang.String A[MD:():java.lang.String (m)]\l0x004c: INVOKE  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)]), (r3 I:java.lang.String) type: VIRTUAL call: java.io.PrintWriter.println(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x004f: INVOKE  \l  (r2 I:androidx.loader.app.LoaderManagerImpl$LoaderInfo A[D('info' androidx.loader.app.LoaderManagerImpl$LoaderInfo)])\l  (r0 I:java.lang.String A[D('innerPrefix' java.lang.String)])\l  (r6 I:java.io.FileDescriptor A[D('fd' java.io.FileDescriptor)])\l  (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter)])\l  (r8 I:java.lang.String[] A[D('args' java.lang.String[])])\l type: VIRTUAL call: androidx.loader.app.LoaderManagerImpl.LoaderInfo.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void A[MD:(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void (m)] (LINE:361)\l0x0052: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:357)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0055: RETURN   A[SYNTHETIC] (LINE:364)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|RETURN\lORIG_RETURN\l|0x0055: RETURN    (LINE:364)\l}"];
MethodNode[shape=record,label="{public void androidx.loader.app.LoaderManagerImpl.LoaderViewModel.dump((r4 'this' I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('prefix' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.FileDescriptor A[D('fd' java.io.FileDescriptor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.io.PrintWriter A[D('writer' java.io.PrintWriter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String[] A[D('args' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x002a \-\> B:16:0x0022, CROSS_EDGE: B:14:0x0006 \-\> B:19:0x0055\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0032\-0x0052: r2 'info' Landroidx\/loader\/app\/LoaderManagerImpl$LoaderInfo;\l  0x0021\-0x0055: r0 'innerPrefix' Ljava\/lang\/String;\l  0x0022\-0x0055: r1 'i' I\l  \-1 \-0x0055: r5 'prefix' Ljava\/lang\/String;\l  \-1 \-0x0055: r6 'fd' Ljava\/io\/FileDescriptor;\l  \-1 \-0x0055: r7 'writer' Ljava\/io\/PrintWriter;\l  \-1 \-0x0055: r8 'args' [Ljava\/lang\/String;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

