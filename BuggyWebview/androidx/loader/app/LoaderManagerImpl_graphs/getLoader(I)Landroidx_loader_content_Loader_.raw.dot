digraph "CFG forandroidx.loader.app.LoaderManagerImpl.getLoader(I)Landroidx\/loader\/content\/Loader;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) = (r2 I:androidx.loader.app.LoaderManagerImpl) androidx.loader.app.LoaderManagerImpl.mLoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel  (LINE:471)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) type: VIRTUAL call: androidx.loader.app.LoaderManagerImpl.LoaderViewModel.isCreatingLoader():boolean A[MD:():boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0017 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IGET  (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel) = (r2 I:androidx.loader.app.LoaderManagerImpl) androidx.loader.app.LoaderManagerImpl.mLoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel  (LINE:475)\l0x000a: INVOKE  (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderInfo) = (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderViewModel), (r3 I:int A[D('id' int)]) type: VIRTUAL call: androidx.loader.app.LoaderManagerImpl.LoaderViewModel.getLoader(int):androidx.loader.app.LoaderManagerImpl$LoaderInfo A[MD:\<D\>:(int):androidx.loader.app.LoaderManagerImpl$LoaderInfo\<D\> (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('info' androidx.loader.app.LoaderManagerImpl$LoaderInfo\<D\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0015  (LINE:476)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: INVOKE  (r1 I:androidx.loader.content.Loader) = \l  (r0 I:androidx.loader.app.LoaderManagerImpl$LoaderInfo A[D('info' androidx.loader.app.LoaderManagerImpl$LoaderInfo\<D\>)])\l type: VIRTUAL call: androidx.loader.app.LoaderManagerImpl.LoaderInfo.getLoader():androidx.loader.content.Loader A[MD:():androidx.loader.content.Loader\<D\> (m)]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN  (r1 I:androidx.loader.content.Loader\<D\>) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|RETURN\lORIG_RETURN\l|0x0015: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: RETURN  (r1 I:androidx.loader.content.Loader\<D\>) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('info' androidx.loader.app.LoaderManagerImpl$LoaderInfo\<D\>)]) =  java.lang.IllegalStateException  (LINE:472)\l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"Called while creating a loader\" \l0x001b: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|0x001e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public androidx.loader.content.Loader\<D\> androidx.loader.app.LoaderManagerImpl.getLoader((r2 'this' I:androidx.loader.app.LoaderManagerImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0015 \-\> B:20:0x0016, CROSS_EDGE: B:22:0x001e \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [D]\lSIGNATURE: \<D:Ljava\/lang\/Object;\>(I)Landroidx\/loader\/content\/Loader\<TD;\>;\lDebug Info:\l  0x000e\-0x0017: r0 'info' Landroidx\/loader\/app\/LoaderManagerImpl$LoaderInfo;, signature: Landroidx\/loader\/app\/LoaderManagerImpl$LoaderInfo\<TD;\>;\l  \-1 \-0x001e: r3 'id' I\lMETHOD_OVERRIDE: [androidx.loader.app.LoaderManager.getLoader(int):androidx.loader.content.Loader\<D\>]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_23 -> Node_13;
Node_19 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

