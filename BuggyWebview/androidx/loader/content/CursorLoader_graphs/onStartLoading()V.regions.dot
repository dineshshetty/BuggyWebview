digraph "CFG forandroidx.loader.content.CursorLoader.onStartLoading()V" {
subgraph cluster_Region_312486936 {
label = "R(3:1|(1:3)|(1:(1:10)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|android.database.Cursor android.database.Cursor r0 = r1.mCursor\l}"];
subgraph cluster_IfRegion_315944177 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_737345636 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|deliverResult(r0)\l}"];
}
}
subgraph cluster_Region_1785481600 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_412095582 {
label = "IF [B:6:0x000b, B:8:0x000f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|if (takeContentChanged() != false) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|ADDED_TO_REGION\l|if (r1.mCursor == null) goto L10\l}"];
subgraph cluster_Region_138370751 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0011|forceLoad()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000d}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0014|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{protected void androidx.loader.content.CursorLoader.onStartLoading((r1v0 'this' androidx.loader.content.CursorLoader A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x000f \-\> B:10:0x0014, CROSS_EDGE: B:6:0x000b \-\> B:9:0x0011, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.loader.content.Loader.onStartLoading():void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_0 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_11 -> Node_1;
Node_10 -> Node_1;
}

