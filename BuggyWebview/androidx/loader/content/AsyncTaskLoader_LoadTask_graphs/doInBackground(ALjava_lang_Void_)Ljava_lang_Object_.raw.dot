digraph "CFG forandroidx.loader.content.AsyncTaskLoader.LoadTask.doInBackground([Ljava\/lang\/Void;)Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{OperationCanceledException \-\> 0x0007, blocks: (B:14:0x0000), top: B:22:0x0000 \}\lCatch: OperationCanceledException \-\> 0x0007\l|0x0000: IGET  (r0 I:androidx.loader.content.AsyncTaskLoader) = \l  (r2 I:androidx.loader.content.AsyncTaskLoader$LoadTask A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask)])\l androidx.loader.content.AsyncTaskLoader.LoadTask.this$0 androidx.loader.content.AsyncTaskLoader A[Catch: OperationCanceledException \-\> 0x0007, TRY_ENTER] (LINE:60)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.loader.content.AsyncTaskLoader) type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.onLoadInBackground():java.lang.Object A[Catch: OperationCanceledException \-\> 0x0007, MD:():D (m), TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:D A[D('data' D)])  (LINE:62)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|ExcHandler: OperationCanceledException \-\> 0x0007\l|0x0007: MOVE_EXCEPTION  (r0 I:androidx.core.os.OperationCanceledException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: OperationCanceledException \-\> 0x0007] (LINE:63)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = \l  (r2 I:androidx.loader.content.AsyncTaskLoader$LoadTask A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask)])\l type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.LoadTask.isCancelled():boolean A[MD:():boolean (m)] (LINE:64)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0010 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|RETURN\l|0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:74)\l0x000f: RETURN  (r1 I:D) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|0x0010: THROW  (r0 I:java.lang.Throwable A[D('ex' androidx.core.os.OperationCanceledException)])  (LINE:71)\l}"];
MethodNode[shape=record,label="{public D androidx.loader.content.AsyncTaskLoader.LoadTask.doInBackground((r2 'this' I:androidx.loader.content.AsyncTaskLoader$LoadTask A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask), IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Void[] A[D('params' java.lang.Void[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x000f \-\> B:13:?, CROSS_EDGE: B:21:0x0010 \-\> B:13:?, CROSS_EDGE: B:22:0x0000 \-\> B:16:0x0007\lINLINE_NOT_NEEDED\lTryCatch #0 \{OperationCanceledException \-\> 0x0007, blocks: (B:14:0x0000), top: B:22:0x0000 \}\lTYPE_VARS: [D]\lSIGNATURE: ([Ljava\/lang\/Void;)TD;\lDebug Info:\l  0x0006\-0x0007: r0 'data' Ljava\/lang\/Object;, signature: TD;\l  0x0008\-0x0010: r0 'ex' Landroidx\/core\/os\/OperationCanceledException;\l  0x0000\-0x0010: r2 'this' Landroidx\/loader\/content\/AsyncTaskLoader$LoadTask;, signature: Landroidx\/loader\/content\/AsyncTaskLoader\<TD;\>.LoadTask;\l  \-1 \-0x0010: r3 'params' [Ljava\/lang\/Void;\lREPLACED_BY: androidx.loader.content.AsyncTaskLoader.LoadTask.doInBackground(java.lang.Void[]):java.lang.Object\lBRIDGED_BY: androidx.loader.content.AsyncTaskLoader.LoadTask.doInBackground(java.lang.Void[]):java.lang.Object\lMETHOD_OVERRIDE: [androidx.loader.content.ModernAsyncTask.doInBackground(Params[]):Result]\l}"];
MethodNode -> Node_12;Node_12 -> Node_22;
Node_22 -> Node_14;
Node_22 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_23;
Node_15 -> Node_13;
Node_23 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_13;
Node_21 -> Node_13;
}

