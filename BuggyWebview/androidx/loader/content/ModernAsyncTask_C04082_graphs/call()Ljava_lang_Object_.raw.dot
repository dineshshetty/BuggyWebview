digraph "CFG forandroidx.loader.content.ModernAsyncTask.2.call()Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:androidx.loader.content.ModernAsyncTask) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.this$0 androidx.loader.content.ModernAsyncTask  (LINE:136)\l0x0002: IGET  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (r0 I:androidx.loader.content.ModernAsyncTask) androidx.loader.content.ModernAsyncTask.mTaskInvoked java.util.concurrent.atomic.AtomicBoolean \l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicBoolean), (r1 I:boolean) type: VIRTUAL call: java.util.concurrent.atomic.AtomicBoolean.set(boolean):void A[MD:(boolean):void (c)]\l0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:137)\l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char])  (LINE:139)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0021, blocks: (B:19:0x000b), top: B:28:0x000b \}\lCatch: all \-\> 0x0021\l|0x000b: INVOKE  (r2 I:int) type: STATIC call: android.os.Process.setThreadPriority(int):void A[Catch: all \-\> 0x0021, MD:(int):void throws java.lang.IllegalArgumentException, java.lang.SecurityException (c), TRY_ENTER]\l0x000e: IGET  (r2 I:androidx.loader.content.ModernAsyncTask) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.this$0 androidx.loader.content.ModernAsyncTask A[Catch: all \-\> 0x0021] (LINE:141)\l0x0010: IGET  (r3 I:Params[]) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.mParams java.lang.Object[] A[Catch: all \-\> 0x0021]\l0x0012: INVOKE  (r2 I:java.lang.Object) = (r2 I:androidx.loader.content.ModernAsyncTask), (r3 I:java.lang.Object[]) type: VIRTUAL call: androidx.loader.content.ModernAsyncTask.doInBackground(java.lang.Object[]):java.lang.Object A[Catch: all \-\> 0x0021, MD:(Params[]):Result VARARG (m)]\l0x0016: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' Result)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE   type: STATIC call: android.os.Binder.flushPendingCommands():void A[Catch: all \-\> 0x0021, MD:():void (c), TRY_LEAVE] (LINE:142)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: IGET  (r1 I:androidx.loader.content.ModernAsyncTask) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.this$0 androidx.loader.content.ModernAsyncTask  (LINE:147)\l0x001c: INVOKE  (r1 I:androidx.loader.content.ModernAsyncTask), (r0 I:java.lang.Object A[D('result' Result)]) type: VIRTUAL call: androidx.loader.content.ModernAsyncTask.postResult(java.lang.Object):java.lang.Object A[MD:(Result):Result (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:Result A[D('result' Result)])  (LINE:149)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|ExcHandler: all \-\> 0x0021\l|0x0021: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0021] (LINE:143)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|TRY_ENTER\lTryCatch #1 \{all \-\> 0x002b, blocks: (B:23:0x0022, B:24:0x002a), top: B:30:0x0022 \}\lCatch: all \-\> 0x002b\l|0x0022: IGET  (r3 I:androidx.loader.content.ModernAsyncTask) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.this$0 androidx.loader.content.ModernAsyncTask A[Catch: all \-\> 0x002b, TRY_ENTER] (LINE:144)\l0x0024: IGET  (r3 I:java.util.concurrent.atomic.AtomicBoolean) = (r3 I:androidx.loader.content.ModernAsyncTask) androidx.loader.content.ModernAsyncTask.mCancelled java.util.concurrent.atomic.AtomicBoolean A[Catch: all \-\> 0x002b]\l0x0026: INVOKE  (r3 I:java.util.concurrent.atomic.AtomicBoolean), (r1 I:boolean) type: VIRTUAL call: java.util.concurrent.atomic.AtomicBoolean.set(boolean):void A[Catch: all \-\> 0x002b, MD:(boolean):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|TRY_LEAVE\lTryCatch #1 \{all \-\> 0x002b, blocks: (B:23:0x0022, B:24:0x002a), top: B:30:0x0022 \}\lCatch: all \-\> 0x002b\l|0x002a: THROW  (r2 I:java.lang.Throwable A[D('tr' java.lang.Throwable)]) A[Catch: all \-\> 0x002b, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b|ExcHandler: all \-\> 0x002b\l|0x002b: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002b] (LINE:147)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|0x002c: IGET  (r2 I:androidx.loader.content.ModernAsyncTask) = (r4 I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2)]) androidx.loader.content.ModernAsyncTask.2.this$0 androidx.loader.content.ModernAsyncTask \l0x002e: INVOKE  (r2 I:androidx.loader.content.ModernAsyncTask), (r0 I:java.lang.Object A[D('result' Result)]) type: VIRTUAL call: androidx.loader.content.ModernAsyncTask.postResult(java.lang.Object):java.lang.Object A[MD:(Result):Result (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|0x0031: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public Result androidx.loader.content.ModernAsyncTask.2.call((r4 'this' I:androidx.loader.content.ModernAsyncTask$2 A[D('this' androidx.loader.content.ModernAsyncTask$2), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x002a \-\> B:17:?, CROSS_EDGE: B:27:0x0031 \-\> B:17:?, CROSS_EDGE: B:30:0x0022 \-\> B:25:0x002b, CROSS_EDGE: B:28:0x000b \-\> B:22:0x0021\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0021, blocks: (B:19:0x000b), top: B:28:0x000b \}, TryCatch #1 \{all \-\> 0x002b, blocks: (B:23:0x0022, B:24:0x002a), top: B:30:0x0022 \}\lTYPE_VARS: [Progress, Params, Result]\lSIGNATURE: ()TResult;\lDebug Info:\l  0x0009\-0x002a: r0 'result' Ljava\/lang\/Object;, signature: TResult;\l  0x0022\-0x002b: r2 'tr' Ljava\/lang\/Throwable;\l  0x002b\-0x0031: r0 'result' Ljava\/lang\/Object;, signature: TResult;\l  0x0000\-0x0031: r4 'this' Landroidx\/loader\/content\/ModernAsyncTask$2;, signature: Landroidx\/loader\/content\/ModernAsyncTask$2;\lEXCEPTIONS:[Ljava\/lang\/Exception;]\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Callable.call():V throws java.lang.Exception\}]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_28;
Node_28 -> Node_19;
Node_28 -> Node_22;
Node_19 -> Node_20;
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_29 -> Node_22;
Node_22 -> Node_30;
Node_30 -> Node_23;
Node_30 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_24 -> Node_31;
Node_31 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
}

