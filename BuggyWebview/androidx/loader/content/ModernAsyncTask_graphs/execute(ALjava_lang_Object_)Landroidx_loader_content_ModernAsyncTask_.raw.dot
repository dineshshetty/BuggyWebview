digraph "CFG forandroidx.loader.content.ModernAsyncTask.execute([Ljava\/lang\/Object;)Landroidx\/loader\/content\/ModernAsyncTask;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: SGET  (r0 I:java.util.concurrent.Executor) =  androidx.loader.content.ModernAsyncTask.sDefaultExecutor java.util.concurrent.Executor  (LINE:398)\l0x0002: INVOKE  (r0 I:androidx.loader.content.ModernAsyncTask) = \l  (r1 I:androidx.loader.content.ModernAsyncTask A[D('this' androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\>)])\l  (r0 I:java.util.concurrent.Executor)\l  (r2 I:java.lang.Object[] A[D('params' Params[])])\l type: VIRTUAL call: androidx.loader.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor, java.lang.Object[]):androidx.loader.content.ModernAsyncTask A[MD:(java.util.concurrent.Executor, Params[]):androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\> VARARG (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\>) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\> androidx.loader.content.ModernAsyncTask.execute((r1 'this' I:androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\> A[D('this' androidx.loader.content.ModernAsyncTask\<Params, Progress, Result\>), IMMUTABLE_TYPE, THIS]), (r2 I:Params[] A[D('params' Params[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0006: r1 'this' Landroidx\/loader\/content\/ModernAsyncTask;, signature: Landroidx\/loader\/content\/ModernAsyncTask\<TParams;TProgress;TResult;\>;\l  0x0000\-0x0006: r2 'params' [Ljava\/lang\/Object;, signature: [TParams;\lTYPE_VARS: [Progress, Params, Result]\lSIGNATURE: ([TParams;)Landroidx\/loader\/content\/ModernAsyncTask\<TParams;TProgress;TResult;\>;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

