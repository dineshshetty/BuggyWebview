digraph "CFG forandroidx.loader.content.Loader.registerListener(ILandroidx\/loader\/content\/Loader$OnLoadCompleteListener;)V" {
subgraph cluster_Region_2016368291 {
label = "R(1:(2:(1:7)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1367701683 {
label = "R(2:(1:7)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_310191207 {
label = "IF [B:11:0x0002] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r2.mListener != null) goto L6\l}"];
subgraph cluster_Region_996841432 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0010|throw new java.lang.IllegalStateException(\"There is already a listener registered\")\l}"];
}
}
subgraph cluster_Region_963789912 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|r2.mListener = r4\lr2.mId = r3\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0008}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0009}"];
MethodNode[shape=record,label="{public void androidx.loader.content.Loader.registerListener((r2v0 'this' androidx.loader.content.Loader\<D\> A[D('this' androidx.loader.content.Loader\<D\>), IMMUTABLE_TYPE, THIS]), (r3v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'listener' androidx.loader.content.Loader$OnLoadCompleteListener\<D\> A[D('listener' androidx.loader.content.Loader$OnLoadCompleteListener\<D\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [D]\lSIGNATURE: (ILandroidx\/loader\/content\/Loader$OnLoadCompleteListener\<TD;\>;)V\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_15 -> Node_9;
Node_12 -> Node_13;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_13 -> Node_9;
Node_14 -> Node_15;
}

