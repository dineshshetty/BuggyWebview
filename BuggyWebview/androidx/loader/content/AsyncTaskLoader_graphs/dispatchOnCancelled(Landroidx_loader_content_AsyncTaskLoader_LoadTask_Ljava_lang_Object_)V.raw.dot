digraph "CFG forandroidx.loader.content.AsyncTaskLoader.dispatchOnCancelled(Landroidx\/loader\/content\/AsyncTaskLoader$LoadTask;Ljava\/lang\/Object;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  \l  (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)])\l  (r4 I:java.lang.Object A[D('data' D)])\l type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.onCanceled(java.lang.Object):void A[MD:(D):void (m)] (LINE:233)\l0x0003: IGET  (r0 I:androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask) = (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)]) androidx.loader.content.AsyncTaskLoader.mCancellingTask androidx.loader.content.AsyncTaskLoader$LoadTask  (LINE:234)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('task' androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask)])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: INVOKE  (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)]) type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.rollbackContentChanged():void A[MD:():void (m)] (LINE:236)\l0x000a: INVOKE  (r0 I:long) =  type: STATIC call: android.os.SystemClock.uptimeMillis():long A[MD:():long (c)] (LINE:237)\l0x000e: IPUT  (r0 I:long), (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)]) androidx.loader.content.AsyncTaskLoader.mLastLoadCompleteTime long \l0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:238)\l0x0011: IPUT  \l  (r0 I:androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask)\l  (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)])\l androidx.loader.content.AsyncTaskLoader.mCancellingTask androidx.loader.content.AsyncTaskLoader$LoadTask \l0x0013: INVOKE  (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)]) type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.deliverCancellation():void A[MD:():void (m)] (LINE:240)\l0x0016: INVOKE  (r2 I:androidx.loader.content.AsyncTaskLoader A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>)]) type: VIRTUAL call: androidx.loader.content.AsyncTaskLoader.executePendingTask():void A[MD:():void (m)] (LINE:241)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|RETURN\lORIG_RETURN\l|0x0019: RETURN    (LINE:243)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN   A[SYNTHETIC] (LINE:243)\l}"];
MethodNode[shape=record,label="{void androidx.loader.content.AsyncTaskLoader.dispatchOnCancelled((r2 'this' I:androidx.loader.content.AsyncTaskLoader\<D\> A[D('this' androidx.loader.content.AsyncTaskLoader\<D\>), IMMUTABLE_TYPE, THIS]), (r3 I:androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask A[D('task' androidx.loader.content.AsyncTaskLoader\<D\>$LoadTask), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:D A[D('data' D), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0019: r2 'this' Landroidx\/loader\/content\/AsyncTaskLoader;, signature: Landroidx\/loader\/content\/AsyncTaskLoader\<TD;\>;\l  0x0000\-0x0019: r3 'task' Landroidx\/loader\/content\/AsyncTaskLoader$LoadTask;, signature: Landroidx\/loader\/content\/AsyncTaskLoader\<TD;\>.LoadTask;\l  0x0000\-0x0019: r4 'data' Ljava\/lang\/Object;, signature: TD;\lTYPE_VARS: [D]\lSIGNATURE: (Landroidx\/loader\/content\/AsyncTaskLoader\<TD;\>.LoadTask;TD;)V\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

