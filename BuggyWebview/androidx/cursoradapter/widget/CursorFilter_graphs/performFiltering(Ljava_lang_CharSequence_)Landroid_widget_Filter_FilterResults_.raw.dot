digraph "CFG forandroidx.cursoradapter.widget.CursorFilter.performFiltering(Ljava\/lang\/CharSequence;)Landroid\/widget\/Filter$FilterResults;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) = (r3 I:androidx.cursoradapter.widget.CursorFilter) androidx.cursoradapter.widget.CursorFilter.mClient androidx.cursoradapter.widget.CursorFilter$CursorFilterClient  (LINE:50)\l0x0002: INVOKE  (r0 I:android.database.Cursor) = \l  (r0 I:androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)\l  (r4 I:java.lang.CharSequence A[D('constraint' java.lang.CharSequence)])\l type: INTERFACE call: androidx.cursoradapter.widget.CursorFilter.CursorFilterClient.runQueryOnBackgroundThread(java.lang.CharSequence):android.database.Cursor A[MD:(java.lang.CharSequence):android.database.Cursor (m)]\l0x0006: NEW_INSTANCE  (r1 I:android.widget.Filter$FilterResults) =  android.widget.Filter$FilterResults  (LINE:52)\l0x0008: INVOKE  (r1 I:android.widget.Filter$FilterResults) type: DIRECT call: android.widget.Filter.FilterResults.\<init\>():void A[MD:():void (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cursor' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0016  (LINE:53)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000d|0x000d: INVOKE  (r2 I:int) = (r0 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.getCount():int A[MD:():int (c)] (LINE:54)\l0x0011: IPUT  (r2 I:int), (r1 I:android.widget.Filter$FilterResults A[D('results' android.widget.Filter$FilterResults)]) android.widget.Filter.FilterResults.count int \l0x0013: IPUT  \l  (r0 I:java.lang.Object A[D('cursor' android.database.Cursor)])\l  (r1 I:android.widget.Filter$FilterResults A[D('results' android.widget.Filter$FilterResults)])\l android.widget.Filter.FilterResults.values java.lang.Object  (LINE:55)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:android.widget.Filter$FilterResults A[D('results' android.widget.Filter$FilterResults)])  (LINE:60)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:57)\l0x0017: IPUT  (r2 I:int), (r1 I:android.widget.Filter$FilterResults A[D('results' android.widget.Filter$FilterResults)]) android.widget.Filter.FilterResults.count int \l0x0019: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:58)\l0x001a: IPUT  (r2 I:java.lang.Object), (r1 I:android.widget.Filter$FilterResults A[D('results' android.widget.Filter$FilterResults)]) android.widget.Filter.FilterResults.values java.lang.Object \l}"];
MethodNode[shape=record,label="{protected android.widget.Filter$FilterResults androidx.cursoradapter.widget.CursorFilter.performFiltering((r3 'this' I:androidx.cursoradapter.widget.CursorFilter A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.CharSequence A[D('constraint' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:12:0x0016 \-\> B:13:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x001c: r0 'cursor' Landroid\/database\/Cursor;\l  0x000b\-0x001c: r1 'results' Landroid\/widget\/Filter$FilterResults;\l  \-1 \-0x001c: r4 'constraint' Ljava\/lang\/CharSequence;\lMETHOD_OVERRIDE: [ClspMth\{android.widget.Filter.performFiltering(java.lang.CharSequence):android.widget.Filter$FilterResults\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_8;
Node_12 -> Node_13;
}

