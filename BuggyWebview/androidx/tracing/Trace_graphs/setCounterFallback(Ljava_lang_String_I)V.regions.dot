digraph "CFG forandroidx.tracing.Trace.setCounterFallback(Ljava\/lang\/String;I)V" {
subgraph cluster_Region_901390268 {
label = "R(1:(1:(1:(2:(1:6)|7))))";
node [shape=record,color=blue];
subgraph cluster_Region_1683055689 {
label = "R(1:(1:(2:(1:6)|7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_947949278 {
label = "IF [B:19:0x0006] THEN: R(1:(2:(1:6)|7)) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0006|if (android.os.Build.VERSION.SDK_INT \>= 18) goto L3\l}"];
subgraph cluster_Region_30923234 {
label = "R(1:(2:(1:6)|7))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1693802907 {
label = "Try: R(2:(1:6)|7) catches: R(2:11|12)";
node [shape=record,color=blue];
subgraph cluster_Region_191443552 {
label = "R(2:(1:6)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_925084589 {
label = "IF [B:21:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000e|if (androidx.tracing.Trace.sTraceCounterMethod == null) goto L6\l}"];
subgraph cluster_Region_142900322 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0010|TryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|androidx.tracing.Trace.sTraceCounterMethod = android.os.Trace.class.getMethod(\"traceCounter\", java.lang.Long.TYPE, java.lang.String.class, java.lang.Integer.TYPE)     \/\/ Catch: java.lang.Exception \-\> L3f\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|androidx.tracing.Trace.sTraceCounterMethod.invoke(null, java.lang.Long.valueOf(androidx.tracing.Trace.sTraceTagApp), r9, java.lang.Integer.valueOf(r10))     \/\/ Catch: java.lang.Exception \-\> L3f\l}"];
}
subgraph cluster_Region_1202859344 {
label = "R(2:11|12) | ExcHandler: Exception \-\> 0x003f\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x003f|ExcHandler: Exception \-\> 0x003f\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|handleException(\"traceCounter\", r1)\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1202859344 {
label = "R(2:11|12) | ExcHandler: Exception \-\> 0x003f\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x003f|ExcHandler: Exception \-\> 0x003f\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|handleException(\"traceCounter\", r1)\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0008|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l}"];
Node_29 [shape=record,color=red,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0043|ORIG_RETURN\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void androidx.tracing.Trace.setCounterFallback((r9v0 'counterName' java.lang.String A[D('counterName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'counterValue' int A[D('counterValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0026 \-\> B:27:0x0043, CROSS_EDGE: B:26:0x0040 \-\> B:27:0x0043, CROSS_EDGE: B:21:0x000e \-\> B:23:0x0026, CROSS_EDGE: B:28:0x0008 \-\> B:25:0x003f\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_19 -> Node_28;
Node_19 -> Node_30[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_29;
Node_23 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_28 -> Node_20;
Node_28 -> Node_25;
Node_20 -> Node_21;
Node_29 -> Node_25;
Node_31 -> Node_17;
Node_27 -> Node_17;
Node_30 -> Node_17;
}

