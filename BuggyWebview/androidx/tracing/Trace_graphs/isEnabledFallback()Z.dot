digraph "CFG forandroidx.tracing.Trace.isEnabledFallback()Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0007|if (android.os.Build.VERSION.SDK_INT \< 18) goto L3\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|RETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0042, blocks: (B:18:0x0009, B:20:0x000f, B:21:0x002b), top: B:26:0x0009 \}\lCatch: Exception \-\> 0x0042\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|if (androidx.tracing.Trace.sIsTagEnabledMethod != null) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|TryCatch #0 \{Exception \-\> 0x0042, blocks: (B:18:0x0009, B:20:0x000f, B:21:0x002b), top: B:26:0x0009 \}\lCatch: Exception \-\> 0x0042\l|java.lang.reflect.Field r1 = android.os.Trace.class.getField(\"TRACE_TAG_APP\")     \/\/ Catch: java.lang.Exception \-\> L42\landroidx.tracing.Trace.sTraceTagApp = r1.getLong(null)     \/\/ Catch: java.lang.Exception \-\> L42\landroidx.tracing.Trace.sIsTagEnabledMethod = android.os.Trace.class.getMethod(\"isTagEnabled\", new java.lang.Class[]\{java.lang.Long.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L42\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0042, blocks: (B:18:0x0009, B:20:0x000f, B:21:0x002b), top: B:26:0x0009 \}\lCatch: Exception \-\> 0x0042\l}"];
Node_22 [shape=record,label="{22\:\ 0x0041|RETURN\l|return ((java.lang.Boolean) androidx.tracing.Trace.sIsTagEnabledMethod.invoke(null, new java.lang.Object[]\{java.lang.Long.valueOf(androidx.tracing.Trace.sTraceTagApp)\})).booleanValue()\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0042|ExcHandler: Exception \-\> 0x0042\l|java.lang.Exception r1 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0043|handleException(\"isTagEnabled\", r1)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.tracing.Trace.isEnabledFallback()  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0041 \-\> B:15:?, CROSS_EDGE: B:24:0x0043 \-\> B:25:0x0046, CROSS_EDGE: B:19:0x000d \-\> B:21:0x002b, CROSS_EDGE: B:26:0x0009 \-\> B:23:0x0042\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0042, blocks: (B:18:0x0009, B:20:0x000f, B:21:0x002b), top: B:26:0x0009 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_25;
Node_17 -> Node_26[style=dashed];
Node_25 -> Node_15;
Node_26 -> Node_18;
Node_26 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_27;
Node_22 -> Node_15;
Node_27 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
}

