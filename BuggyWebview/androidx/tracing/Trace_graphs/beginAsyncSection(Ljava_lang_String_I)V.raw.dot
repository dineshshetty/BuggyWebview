digraph "CFG forandroidx.tracing.Trace.beginAsyncSection(Ljava\/lang\/String;I)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|TRY_ENTER\lTryCatch #2 \{NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b, blocks: (B:16:0x0000, B:18:0x0004), top: B:26:0x0000 \}\lCatch: NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b\l|0x0000: SGET  (r0 I:java.lang.reflect.Method) =  androidx.tracing.Trace.sAsyncTraceBeginMethod java.lang.reflect.Method A[Catch: NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b, TRY_ENTER] (LINE:111)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x000c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|TRY_LEAVE\lTryCatch #2 \{NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b, blocks: (B:16:0x0000, B:18:0x0004), top: B:26:0x0000 \}\lCatch: NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b\l|0x0004: INVOKE  (r1 I:java.lang.String A[D('methodName' java.lang.String)]), (r2 I:int A[D('cookie' int)]) type: STATIC call: androidx.tracing.TraceApi29Impl.beginAsyncSection(java.lang.String, int):void A[Catch: NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b, MD:(java.lang.String, int):void (m), TRY_LEAVE] (LINE:112)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:113)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.String A[D('methodName' java.lang.String)]), (r2 I:int A[D('cookie' int)]) type: STATIC call: androidx.tracing.Trace.beginAsyncSectionFallback(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)] (LINE:117)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|RETURN\l|0x000f: RETURN    (LINE:118)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|ExcHandler: NoClassDefFoundError \-\> 0x0009\l|0x0009: MOVE_EXCEPTION  (r0 I:java.lang.NoClassDefFoundError A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoClassDefFoundError \-\> 0x0009] (LINE:115)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|ExcHandler: NoSuchMethodError \-\> 0x000b\l|0x000b: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodError A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodError \-\> 0x000b]\l}"];
MethodNode[shape=record,label="{public static void androidx.tracing.Trace.beginAsyncSection((r1 I:java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('cookie' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x000f \-\> B:15:?, CROSS_EDGE: B:23:0x000b \-\> B:24:0x000c, CROSS_EDGE: B:17:0x0002 \-\> B:24:0x000c, CROSS_EDGE: B:26:0x0000 \-\> B:21:0x0009, CROSS_EDGE: B:26:0x0000 \-\> B:23:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r1 'methodName' Ljava\/lang\/String;\l  \-1 \-0x000f: r2 'cookie' I\lTryCatch #2 \{NoClassDefFoundError \-\> 0x0009, NoSuchMethodError \-\> 0x000b, blocks: (B:16:0x0000, B:18:0x0004), top: B:26:0x0000 \}\l}"];
MethodNode -> Node_14;Node_14 -> Node_26;
Node_26 -> Node_16;
Node_26 -> Node_21;
Node_26 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_18 -> Node_27;
Node_19 -> Node_15;
Node_27 -> Node_21;
Node_27 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_21 -> Node_24;
Node_23 -> Node_24;
}

