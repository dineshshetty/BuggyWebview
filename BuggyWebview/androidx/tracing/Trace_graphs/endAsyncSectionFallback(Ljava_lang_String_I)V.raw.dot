digraph "CFG forandroidx.tracing.Trace.endAsyncSectionFallback(Ljava\/lang\/String;I)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"asyncTraceEnd\"  (LINE:194)\l0x0002: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0004: CONST  (r2 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:30:? \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|0x0008: SGET  (r1 I:java.lang.reflect.Method) =  androidx.tracing.Trace.sAsyncTraceEndMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x003f, TRY_ENTER] (LINE:196)\l0x000a: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000b: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: CONST  (r5 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0026 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|TryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|0x0010: CONST_CLASS  (r1 I:java.lang.Class\<android.os.Trace\>) =  android.os.Trace.class  (LINE:197)\l0x0012: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x003f]\l0x0014: SGET  (r7 I:java.lang.Class) =  java.lang.Long.TYPE java.lang.Class A[Catch: Exception \-\> 0x003f]\l0x0016: APUT  (r6 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003f]\l0x0018: CONST_CLASS  (r7 I:java.lang.Class\<java.lang.String\>) =  java.lang.String.class \l0x001a: APUT  (r6 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003f]\l0x001c: SGET  (r7 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: Exception \-\> 0x003f]\l0x001e: APUT  (r6 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003f]\l0x0020: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r0 I:java.lang.String), (r6 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x003f, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0024: SPUT  (r1 I:java.lang.reflect.Method) androidx.tracing.Trace.sAsyncTraceEndMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x003f]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|0x0026: SGET  (r1 I:java.lang.reflect.Method) =  androidx.tracing.Trace.sAsyncTraceEndMethod java.lang.reflect.Method A[Catch: Exception \-\> 0x003f] (LINE:203)\l0x0028: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: NEW_ARRAY  (r5 I:java.lang.Object[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: Exception \-\> 0x003f]\l0x002b: SGET  (r7 I:long) =  androidx.tracing.Trace.sTraceTagApp long A[Catch: Exception \-\> 0x003f]\l0x002d: INVOKE  (r7 I:java.lang.Long) = (r7 I:long) type: STATIC call: java.lang.Long.valueOf(long):java.lang.Long A[Catch: Exception \-\> 0x003f, MD:(long):java.lang.Long (c)]\l0x0031: APUT  (r5 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003f]\l0x0033: APUT  \l  (r5 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r9 I:??[OBJECT, ARRAY] A[D('methodName' java.lang.String)])\l A[Catch: Exception \-\> 0x003f]\l0x0035: INVOKE  (r3 I:java.lang.Integer) = (r10 I:int A[D('cookie' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: Exception \-\> 0x003f, MD:(int):java.lang.Integer (c)]\l0x0039: APUT  (r5 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x003f]\l0x003b: INVOKE  (r1 I:java.lang.reflect.Method), (r6 I:java.lang.Object), (r5 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x003f, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:208)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|ExcHandler: Exception \-\> 0x003f\l|0x003f: MOVE_EXCEPTION  (r1 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x003f] (LINE:204)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|0x0040: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.Exception A[D('exception' java.lang.Exception)]) type: STATIC call: androidx.tracing.Trace.handleException(java.lang.String, java.lang.Exception):void A[MD:(java.lang.String, java.lang.Exception):void (m)] (LINE:205)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0043|RETURN\lORIG_RETURN\l|0x0043: RETURN    (LINE:208)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:208)\l}"];
MethodNode[shape=record,label="{private static void androidx.tracing.Trace.endAsyncSectionFallback((r9 I:java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('cookie' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0026 \-\> B:27:0x0043, CROSS_EDGE: B:26:0x0040 \-\> B:27:0x0043, CROSS_EDGE: B:21:0x000e \-\> B:23:0x0026, CROSS_EDGE: B:28:0x0008 \-\> B:25:0x003f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0040\-0x0043: r1 'exception' Ljava\/lang\/Exception;\l  \-1 \-0x0043: r9 'methodName' Ljava\/lang\/String;\l  \-1 \-0x0043: r10 'cookie' I\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_28[style=dashed];
Node_19 -> Node_30;
Node_28 -> Node_20;
Node_28 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_29;
Node_23 -> Node_31;
Node_29 -> Node_25;
Node_31 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_30 -> Node_17;
}

