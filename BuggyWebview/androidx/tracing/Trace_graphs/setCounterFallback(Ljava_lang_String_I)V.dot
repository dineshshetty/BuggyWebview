digraph "CFG forandroidx.tracing.Trace.setCounterFallback(Ljava\/lang\/String;I)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0006|if (android.os.Build.VERSION.SDK_INT \< 18) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|if (androidx.tracing.Trace.sTraceCounterMethod != null) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|TryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|androidx.tracing.Trace.sTraceCounterMethod = android.os.Trace.class.getMethod(\"traceCounter\", new java.lang.Class[]\{java.lang.Long.TYPE, java.lang.String.class, java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.Exception \-\> L3f\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lCatch: Exception \-\> 0x003f\l|androidx.tracing.Trace.sTraceCounterMethod.invoke(null, new java.lang.Object[]\{java.lang.Long.valueOf(androidx.tracing.Trace.sTraceTagApp), r9, java.lang.Integer.valueOf(r10)\})     \/\/ Catch: java.lang.Exception \-\> L3f\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|ExcHandler: Exception \-\> 0x003f\l|java.lang.Exception r1 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|handleException(\"traceCounter\", r1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0043|RETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void androidx.tracing.Trace.setCounterFallback((r9v0 'counterName' java.lang.String A[D('counterName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'counterValue' int A[D('counterValue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0026 \-\> B:27:0x0043, CROSS_EDGE: B:26:0x0040 \-\> B:27:0x0043, CROSS_EDGE: B:21:0x000e \-\> B:23:0x0026, CROSS_EDGE: B:28:0x0008 \-\> B:25:0x003f\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x003f, blocks: (B:20:0x0008, B:22:0x0010, B:23:0x0026), top: B:28:0x0008 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_28[style=dashed];
Node_19 -> Node_30;
Node_28 -> Node_20;
Node_28 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_29;
Node_23 -> Node_31;
Node_29 -> Node_25;
Node_31 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_30 -> Node_17;
}

