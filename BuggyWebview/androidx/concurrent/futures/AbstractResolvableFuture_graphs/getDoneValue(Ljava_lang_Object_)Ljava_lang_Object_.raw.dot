digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.getDoneValue(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)]) androidx.concurrent.futures.AbstractResolvableFuture$Cancellation  (LINE:513)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r3 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)]) androidx.concurrent.futures.AbstractResolvableFuture$Failure  (LINE:517)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0010 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: SGET  (r0 I:java.lang.Object) =  androidx.concurrent.futures.AbstractResolvableFuture.NULL java.lang.Object  (LINE:519)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|0x000a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('obj' java.lang.Object)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000e \l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|RETURN\l|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:520)\l0x000d: RETURN  (r0 I:V) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)])  (LINE:523)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:V A[D('asV' V)])  (LINE:524)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.util.concurrent.ExecutionException A[D('asV' V)]) =  java.util.concurrent.ExecutionException  (LINE:518)\l0x0012: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)]) \l0x0013: CHECK_CAST (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Failure) = (androidx.concurrent.futures.AbstractResolvableFuture$Failure) (r1 I:??[OBJECT, ARRAY]) \l0x0015: IGET  (r1 I:java.lang.Throwable) = (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Failure) androidx.concurrent.futures.AbstractResolvableFuture.Failure.exception java.lang.Throwable \l0x0017: INVOKE  (r0 I:java.util.concurrent.ExecutionException), (r1 I:java.lang.Throwable) type: DIRECT call: java.util.concurrent.ExecutionException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)])  (LINE:514)\l0x001c: CHECK_CAST (r0 I:androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) = (androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) (r0 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r0 I:java.lang.Throwable) = (r0 I:androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) androidx.concurrent.futures.AbstractResolvableFuture.Cancellation.cause java.lang.Throwable \l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"Task was cancelled.\" \l0x0022: INVOKE  (r0 I:java.util.concurrent.CancellationException) = (r1 I:java.lang.String), (r0 I:java.lang.Throwable) type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture.cancellationExceptionWithCause(java.lang.String, java.lang.Throwable):java.util.concurrent.CancellationException A[MD:(java.lang.String, java.lang.Throwable):java.util.concurrent.CancellationException (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private V androidx.concurrent.futures.AbstractResolvableFuture.getDoneValue((r2 'this' I:androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x000f \-\> B:17:?, CROSS_EDGE: B:29:0x001a \-\> B:17:?, CROSS_EDGE: B:31:0x0026 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V]\lSIGNATURE: (Ljava\/lang\/Object;)TV;\lDebug Info:\l  0x000f\-0x0010: r0 'asV' Ljava\/lang\/Object;, signature: TV;\l  0x0000\-0x0026: r2 'this' Landroidx\/concurrent\/futures\/AbstractResolvableFuture;, signature: Landroidx\/concurrent\/futures\/AbstractResolvableFuture\<TV;\>;\l  \-1 \-0x0026: r3 'obj' Ljava\/lang\/Object;\lEXCEPTIONS:[Ljava\/util\/concurrent\/ExecutionException;]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_17;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

