digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.setFuture(Lcom\/google\/common\/util\/concurrent\/ListenableFuture;)Z" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: INVOKE  (r7 I:java.lang.Object A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)]) type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture.checkNotNull(java.lang.Object):java.lang.Object A[MD:\<T\>:(T):T (m)] (LINE:746)\l0x0003: IGET  (r0 I:java.lang.Object) = \l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.value java.lang.Object  (LINE:747)\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:748)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('localValue' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0047 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0008|0x0008: INVOKE  (r2 I:boolean) = \l  (r7 I:com.google.common.util.concurrent.ListenableFuture A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)])\l type: INTERFACE call: com.google.common.util.concurrent.ListenableFuture.isDone():boolean A[MD:():boolean (c)] (LINE:749)\l0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0021 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = \l  (r7 I:com.google.common.util.concurrent.ListenableFuture A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture.getFutureValue(com.google.common.util.concurrent.ListenableFuture):java.lang.Object A[MD:(com.google.common.util.concurrent.ListenableFuture\<?\>):java.lang.Object (m)] (LINE:750)\l0x0014: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper) =  androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper  (LINE:751)\l0x0016: INVOKE  (r4 I:boolean) = \l  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper)\l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('value' java.lang.Object)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture, java.lang.Object, java.lang.Object):boolean A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001a|0x001a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0020 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001c|0x001c: INVOKE  \l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l type: STATIC call: androidx.concurrent.futures.AbstractResolvableFuture.complete(androidx.concurrent.futures.AbstractResolvableFuture):void A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>):void (m)] (LINE:752)\l}"];
Node_40 [shape=record,label="{40\:\ 0x001f|RETURN\l|0x001f: RETURN  (r3 I:boolean)  (LINE:753)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0020|RETURN\l|0x0020: RETURN  (r1 I:boolean)  (LINE:755)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|0x0021: NEW_INSTANCE  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$SetFuture A[D('value' java.lang.Object)]) =  androidx.concurrent.futures.AbstractResolvableFuture$SetFuture  (LINE:757)\l0x0023: INVOKE  \l  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$SetFuture)\l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r7 I:com.google.common.util.concurrent.ListenableFuture A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)])\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.SetFuture.\<init\>(androidx.concurrent.futures.AbstractResolvableFuture, com.google.common.util.concurrent.ListenableFuture):void A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<V\>, com.google.common.util.concurrent.ListenableFuture\<? extends V\>):void (m)]\l0x0026: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper) =  androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper  (LINE:758)\l0x0028: INVOKE  (r4 I:boolean) = \l  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper)\l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('valueToSet' androidx.concurrent.futures.AbstractResolvableFuture$SetFuture)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture, java.lang.Object, java.lang.Object):boolean A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002c|0x002c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0045 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0045|0x0045: IGET  (r0 I:java.lang.Object A[D('localValue' java.lang.Object)]) = \l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.value java.lang.Object  (LINE:781)\l}"];
Node_58 [shape=record,label="{58\:\ 0x002e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x002e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:44:0x002e), top: B:58:0x002e \}\lCatch: all \-\> 0x0034\l|0x002e: SGET  (r1 I:androidx.concurrent.futures.DirectExecutor) =  androidx.concurrent.futures.DirectExecutor.INSTANCE androidx.concurrent.futures.DirectExecutor A[Catch: all \-\> 0x0034, TRY_ENTER] (LINE:763)\l0x0030: INVOKE  \l  (r7 I:com.google.common.util.concurrent.ListenableFuture A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)])\l  (r2 I:java.lang.Runnable A[D('valueToSet' androidx.concurrent.futures.AbstractResolvableFuture$SetFuture)])\l  (r1 I:java.util.concurrent.Executor)\l type: INTERFACE call: com.google.common.util.concurrent.ListenableFuture.addListener(java.lang.Runnable, java.util.concurrent.Executor):void A[Catch: all \-\> 0x0034, MD:(java.lang.Runnable, java.util.concurrent.Executor):void (m), TRY_LEAVE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0044|RETURN\l|0x0044: RETURN  (r3 I:boolean)  (LINE:779)\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|ExcHandler: all \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0034] (LINE:764)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0035|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x0035|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{all \-\> 0x003b, blocks: (B:47:0x0035), top: B:60:0x0035 \}\lCatch: all \-\> 0x003b\l|0x0035: NEW_INSTANCE  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Failure) =  androidx.concurrent.futures.AbstractResolvableFuture$Failure A[Catch: all \-\> 0x003b, TRY_ENTER] (LINE:771)\l0x0037: INVOKE  \l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Failure)\l  (r1 I:java.lang.Throwable A[D('t' java.lang.Throwable)])\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.Failure.\<init\>(java.lang.Throwable):void A[Catch: all \-\> 0x003b, MD:(java.lang.Throwable):void (m), TRY_LEAVE]\l}"];
Node_51 [shape=record,label="{51\:\ 0x003f|0x003f: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper) =  androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper  (LINE:777)\l0x0041: INVOKE  \l  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper)\l  (r6 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r2 I:java.lang.Object A[D('valueToSet' androidx.concurrent.futures.AbstractResolvableFuture$SetFuture)])\l  (r4 I:java.lang.Object A[D('failure' androidx.concurrent.futures.AbstractResolvableFuture$Failure)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture, java.lang.Object, java.lang.Object):boolean A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>, java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_49 [shape=record,label="{49\:\ 0x003b|ExcHandler: all \-\> 0x003b\l|0x003b: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003b] (LINE:772)\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|0x003c: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$Failure) =  androidx.concurrent.futures.AbstractResolvableFuture.Failure.FALLBACK_INSTANCE androidx.concurrent.futures.AbstractResolvableFuture$Failure  (LINE:773)\l0x003e: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('oomMostLikely' java.lang.Throwable)]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0047|0x0047: INSTANCE_OF  (r2 I:boolean A[D('valueToSet' androidx.concurrent.futures.AbstractResolvableFuture$SetFuture)]) = (r0 I:??[OBJECT, ARRAY] A[D('localValue' java.lang.Object)]) androidx.concurrent.futures.AbstractResolvableFuture$Cancellation  (LINE:785)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0049|0x0049: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0053 \l}"];
Node_56 [shape=record,label="{56\:\ 0x004b|0x004b: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('localValue' java.lang.Object)])  (LINE:787)\l0x004c: CHECK_CAST (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) = (androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) (r2 I:??[OBJECT, ARRAY]) \l0x004e: IGET  (r2 I:boolean) = (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Cancellation) androidx.concurrent.futures.AbstractResolvableFuture.Cancellation.wasInterrupted boolean \l0x0050: INVOKE  \l  (r7 I:com.google.common.util.concurrent.ListenableFuture A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>)])\l  (r2 I:boolean)\l type: INTERFACE call: com.google.common.util.concurrent.ListenableFuture.cancel(boolean):boolean A[MD:(boolean):boolean (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0053|RETURN\l|0x0053: RETURN  (r1 I:boolean)  (LINE:789)\l}"];
MethodNode[shape=record,label="{public boolean androidx.concurrent.futures.AbstractResolvableFuture.setFuture((r6 'this' I:androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]), (r7 I:com.google.common.util.concurrent.ListenableFuture\<? extends V\> A[D('future' com.google.common.util.concurrent.ListenableFuture\<? extends V\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x0020 \-\> B:32:?, CROSS_EDGE: B:57:0x0053 \-\> B:32:?, CROSS_EDGE: B:55:0x0049 \-\> B:57:0x0053, CROSS_EDGE: B:52:0x0044 \-\> B:32:?, CROSS_EDGE: B:51:0x003f \-\> B:52:0x0044, CROSS_EDGE: B:50:0x003c \-\> B:51:0x003f, CROSS_EDGE: B:60:0x0035 \-\> B:49:0x003b, CROSS_EDGE: B:58:0x002e \-\> B:46:0x0034, CROSS_EDGE: B:34:0x0006 \-\> B:54:0x0047\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0034, blocks: (B:44:0x002e), top: B:58:0x002e \}, TryCatch #1 \{all \-\> 0x003b, blocks: (B:47:0x0035), top: B:60:0x0035 \}\lTYPE_VARS: [V]\lSIGNATURE: (Lcom\/google\/common\/util\/concurrent\/ListenableFuture\<+TV;\>;)Z\lDebug Info:\l  0x0014\-0x0021: r2 'value' Ljava\/lang\/Object;\l  0x003a\-0x003b: r4 'failure' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Failure;\l  0x003c\-0x003f: r4 'oomMostLikely' Ljava\/lang\/Throwable;\l  0x0035\-0x0044: r1 't' Ljava\/lang\/Throwable;\l  0x003f\-0x0044: r4 'failure' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Failure;\l  0x0026\-0x0047: r2 'valueToSet' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$SetFuture;\l  0x0005\-0x0053: r0 'localValue' Ljava\/lang\/Object;\l  0x0000\-0x0053: r6 'this' Landroidx\/concurrent\/futures\/AbstractResolvableFuture;, signature: Landroidx\/concurrent\/futures\/AbstractResolvableFuture\<TV;\>;\l  0x0000\-0x0053: r7 'future' Lcom\/google\/common\/util\/concurrent\/ListenableFuture;, signature: Lcom\/google\/common\/util\/concurrent\/ListenableFuture\<+TV;\>;\lMETHOD_OVERRIDE: [androidx.concurrent.futures.AbstractResolvableFuture.setFuture(com.google.common.util.concurrent.ListenableFuture\<? extends V\>):boolean]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_54;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_41;
Node_39 -> Node_40;
Node_40 -> Node_32;
Node_41 -> Node_32;
Node_42 -> Node_43;
Node_43 -> Node_53;
Node_43 -> Node_58[style=dashed];
Node_53 -> Node_54;
Node_58 -> Node_44;
Node_58 -> Node_46;
Node_44 -> Node_52;
Node_44 -> Node_59;
Node_52 -> Node_32;
Node_59 -> Node_46;
Node_46 -> Node_60;
Node_60 -> Node_47;
Node_60 -> Node_49;
Node_47 -> Node_51;
Node_47 -> Node_61;
Node_51 -> Node_52;
Node_61 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_57 -> Node_32;
}

