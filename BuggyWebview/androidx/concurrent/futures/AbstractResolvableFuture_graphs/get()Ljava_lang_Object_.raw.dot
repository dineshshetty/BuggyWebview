digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.get()Ljava\/lang\/Object;" {
Node_39 [shape=record,label="{39\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) =  type: STATIC call: java.lang.Thread.interrupted():boolean A[MD:():boolean (c)] (LINE:470)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0061 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0006|0x0006: IGET  (r0 I:java.lang.Object) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.value java.lang.Object  (LINE:473)\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:474)\l0x0009: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('localValue' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x000e \l}"];
Node_45 [shape=record,label="{45\:\ 0x000c|0x000c: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x000f|0x000f: INSTANCE_OF  (r4 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('localValue' java.lang.Object)]) androidx.concurrent.futures.AbstractResolvableFuture$SetFuture \l0x0011: ARITH  (r4 I:??[int, boolean]) = (r4 I:??[int, boolean, short, byte, char]) ^ (r2 I:??[int, boolean, short, byte, char]) \l0x0012: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (r4 I:??[int, boolean, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x001a \l}"];
Node_49 [shape=record,label="{49\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r0 I:java.lang.Object A[D('localValue' java.lang.Object)])\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.getDoneValue(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V throws java.util.concurrent.ExecutionException (m)] (LINE:475)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:V) \l}"];
Node_40 [shape=record,label="{40\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x001a|0x001a: IGET  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.waiters androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:477)\l0x001c: SGET  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) =  androidx.concurrent.futures.AbstractResolvableFuture.Waiter.TOMBSTONE androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:478)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x005a \l}"];
Node_53 [shape=record,label="{53\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) =  androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:479)\l0x0022: INVOKE  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.Waiter.\<init\>():void A[MD:():void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0025|LOOP_START\lLOOP:0: B:54:0x0025\-\>B:69:0x0058\l|0x0025: INVOKE  \l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('node' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):void A[MD:(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):void (m)] (LINE:481)\l0x0028: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper) =  androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper  (LINE:482)\l0x002a: INVOKE  (r5 I:boolean) = \l  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper)\l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('node' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.casWaiters(androidx.concurrent.futures.AbstractResolvableFuture, androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter):boolean A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>, androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter):boolean (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x002e|0x002e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0054 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0054|0x0054: IGET  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.waiters androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:501)\l0x0056: SGET  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) =  androidx.concurrent.futures.AbstractResolvableFuture.Waiter.TOMBSTONE androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:502)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0058|LOOP_END\lLOOP:0: B:54:0x0025\-\>B:69:0x0058\l|0x0058: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0025 \l}"];
Node_74 [shape=record,label="{74\:\ 0x005a|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0030|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0030|LOOP_START\lLOOP:1: B:56:0x0030\-\>B:63:0x0044\l|0x0030: INVOKE  (r7 I:java.lang.Object A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)]) type: STATIC call: java.util.concurrent.locks.LockSupport.park(java.lang.Object):void A[MD:(java.lang.Object):void (c)] (LINE:485)\l0x0033: INVOKE  (r5 I:boolean) =  type: STATIC call: java.lang.Thread.interrupted():boolean A[MD:():boolean (c)] (LINE:488)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x004b \l}"];
Node_58 [shape=record,label="{58\:\ 0x0039|0x0039: IGET  (r0 I:java.lang.Object A[D('localValue' java.lang.Object)]) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.value java.lang.Object  (LINE:495)\l}"];
Node_59 [shape=record,label="{59\:\ 0x003b|0x003b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('localValue' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x003f  (LINE:496)\l}"];
Node_60 [shape=record,label="{60\:\ 0x003d|0x003d: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0040|0x0040: INSTANCE_OF  (r6 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('localValue' java.lang.Object)]) androidx.concurrent.futures.AbstractResolvableFuture$SetFuture \l0x0042: ARITH  (r6 I:??[int, boolean]) = (r6 I:??[int, boolean, short, byte, char]) ^ (r2 I:??[int, boolean, short, byte, char]) \l0x0043: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (r6 I:??[int, boolean, short, byte, char]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0044|LOOP_END\lLOOP:1: B:56:0x0030\-\>B:63:0x0044\l|0x0044: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0030 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0046|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0046|0x0046: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r0 I:java.lang.Object A[D('localValue' java.lang.Object)])\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.getDoneValue(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V throws java.util.concurrent.ExecutionException (m)] (LINE:497)\l}"];
Node_65 [shape=record,label="{65\:\ 0x004a|RETURN\l|0x004a: RETURN  (r1 I:V) \l}"];
Node_61 [shape=record,label="{61\:\ 0x003f|0x003f: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x004b|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x004b|0x004b: INVOKE  \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('node' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):void A[MD:(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):void (m)] (LINE:489)\l0x004e: NEW_INSTANCE  (r1 I:java.lang.InterruptedException) =  java.lang.InterruptedException  (LINE:490)\l0x0050: INVOKE  (r1 I:java.lang.InterruptedException) type: DIRECT call: java.lang.InterruptedException.\<init\>():void A[MD:():void (c)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0053|0x0053: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_70 [shape=record,label="{70\:\ 0x005a|0x005a: IGET  (r1 I:java.lang.Object) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.value java.lang.Object  (LINE:506)\l0x005c: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r1 I:java.lang.Object)\l type: DIRECT call: androidx.concurrent.futures.AbstractResolvableFuture.getDoneValue(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V throws java.util.concurrent.ExecutionException (m)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0060|RETURN\l|0x0060: RETURN  (r1 I:V) \l}"];
Node_46 [shape=record,label="{46\:\ 0x000e|0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0061|0x0061: NEW_INSTANCE  (r0 I:java.lang.InterruptedException A[D('localValue' java.lang.Object)]) =  java.lang.InterruptedException  (LINE:471)\l0x0063: INVOKE  (r0 I:java.lang.InterruptedException) type: DIRECT call: java.lang.InterruptedException.\<init\>():void A[MD:():void (c)]\l}"];
Node_73 [shape=record,label="{73\:\ 0x0066|0x0066: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final V androidx.concurrent.futures.AbstractResolvableFuture.get((r7 'this' I:androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:63:0x0044 \-\> B:56:0x0030, CROSS_EDGE: B:65:0x004a \-\> B:40:?, CROSS_EDGE: B:61:0x003f \-\> B:62:0x0040, CROSS_EDGE: B:67:0x0053 \-\> B:40:?, BACK_EDGE: B:69:0x0058 \-\> B:54:0x0025, CROSS_EDGE: B:71:0x0060 \-\> B:40:?, CROSS_EDGE: B:52:0x001e \-\> B:70:0x005a, CROSS_EDGE: B:46:0x000e \-\> B:47:0x000f, CROSS_EDGE: B:73:0x0066 \-\> B:40:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V]\lSIGNATURE: ()TV;\lDebug Info:\l  0x0025\-0x005a: r4 'node' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  0x0008\-0x0061: r0 'localValue' Ljava\/lang\/Object;\l  0x001c\-0x0061: r3 'oldHead' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  0x0000\-0x0066: r7 'this' Landroidx\/concurrent\/futures\/AbstractResolvableFuture;, signature: Landroidx\/concurrent\/futures\/AbstractResolvableFuture\<TV;\>;\lEXCEPTIONS:[Ljava\/lang\/InterruptedException;, Ljava\/util\/concurrent\/ExecutionException;]\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Future.get():V throws java.util.concurrent.ExecutionException, java.lang.InterruptedException\}]\l}"];
MethodNode -> Node_39;Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_72;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_40;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_70;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_68;
Node_55 -> Node_75[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_54;
Node_69 -> Node_74[style=dashed];
Node_74 -> Node_70;
Node_75 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_77;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_56;
Node_63 -> Node_76[style=dashed];
Node_76 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_40;
Node_61 -> Node_62;
Node_77 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_40;
Node_70 -> Node_71;
Node_71 -> Node_40;
Node_46 -> Node_47;
Node_72 -> Node_73;
Node_73 -> Node_40;
}

