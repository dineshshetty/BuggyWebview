digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.get(JLjava\/util\/concurrent\/TimeUnit;)Ljava\/lang\/Object;" {
Node_97 [shape=record,label="{97\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_99 [shape=record,label="{99\:\ 0x0000|long r4 = r31.toNanos(r29)\lr6 = r4\l}"];
Node_100 [shape=record,label="{100\:\ 0x000f|if (java.lang.Thread.interrupted() != false) goto L93\l}"];
Node_101 [shape=record,label="{101\:\ 0x0011|java.lang.Object r8 = r28.value\l}"];
Node_102 [shape=record,label="{102\:\ 0x0014|if (r8 == null) goto L92\l}"];
Node_103 [shape=record,label="{103\:\ 0x0016|r11 = true\l}"];
Node_105 [shape=record,label="{105\:\ 0x0019|PHI: r11 \l  PHI: (r11v1 boolean) = (r11v0 boolean), (r11v12 boolean) binds: [B:104:0x0018, B:103:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_106 [shape=record,label="{106\:\ 0x001d|if ((r11 & ((r8 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) ^ true)) == false) goto L11\l}"];
Node_107 [shape=record,label="{107\:\ 0x001f}"];
Node_108 [shape=record,label="{108\:\ 0x0023|RETURN\l|return getDoneValue(r8)\l}"];
Node_98 [shape=record,label="{98\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_109 [shape=record,label="{109\:\ 0x0024}"];
Node_110 [shape=record,label="{110\:\ 0x0028|if ((r6 \> 0 ? 1 : (r6 == 0 ? 0 : \-1)) \<= 0) goto L91\l}"];
Node_111 [shape=record,label="{111\:\ 0x002a|long r13 = java.lang.System.nanoTime() + r6\l}"];
Node_113 [shape=record,label="{113\:\ 0x0031|PHI: r13 \l  PHI: (r13v2 'endNanos' long) = (r13v1 'endNanos' long), (r13v4 'endNanos' long) binds: [B:112:0x0030, B:111:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_114 [shape=record,label="{114\:\ 0x0035|if ((r6 \> androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 1 : (r6 == androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 0 : \-1)) \< 0) goto L47\l}"];
Node_115 [shape=record,label="{115\:\ 0x0037|androidx.concurrent.futures.AbstractResolvableFuture$Waiter r9 = r28.waiters\l}"];
Node_116 [shape=record,label="{116\:\ 0x003b|if (r9 == androidx.concurrent.futures.AbstractResolvableFuture.Waiter.TOMBSTONE) goto L45\l}"];
Node_117 [shape=record,label="{117\:\ 0x003d|androidx.concurrent.futures.AbstractResolvableFuture$Waiter r11 = new androidx.concurrent.futures.AbstractResolvableFuture.Waiter()\l}"];
Node_118 [shape=record,label="{118\:\ 0x0042|LOOP_START\lLOOP:0: B:118:0x0042\-\>B:139:0x008b\lPHI: r9 \l  PHI: (r9v10 'oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter) = (r9v9 'oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter), (r9v11 'oldHead' androidx.concurrent.futures.AbstractResolvableFuture$Waiter) binds: [B:117:0x003d, B:139:0x008b] A[DONT_GENERATE, DONT_INLINE]\l|r11.setNext(r9)\l}"];
Node_119 [shape=record,label="{119\:\ 0x004b|if (androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER.casWaiters(r28, r9, r11) == false) goto L21\l}"];
Node_136 [shape=record,label="{136\:\ 0x0084|androidx.concurrent.futures.AbstractResolvableFuture$Waiter r9 = r28.waiters\l}"];
Node_137 [shape=record,label="{137\:\ 0x0088|if (r9 != androidx.concurrent.futures.AbstractResolvableFuture.Waiter.TOMBSTONE) goto L23\l}"];
Node_139 [shape=record,label="{139\:\ 0x008b|LOOP_END\lLOOP:0: B:118:0x0042\-\>B:139:0x008b\l}"];
Node_185 [shape=record,label="{185\:\ 0x008e|SYNTHETIC\l}"];
Node_186 [shape=record,label="{186\:\ 0x004d|SYNTHETIC\l}"];
Node_120 [shape=record,label="{120\:\ 0x004d|LOOP_START\lLOOP:1: B:120:0x004d\-\>B:133:0x0078\lPHI: r6 \l  PHI: (r6v5 'remainingNanos' long) = (r6v0 'remainingNanos' long), (r6v6 'remainingNanos' long) binds: [B:186:0x004d, B:133:0x0078] A[DONT_GENERATE, DONT_INLINE]\l|java.util.concurrent.locks.LockSupport.parkNanos(r28, r6)\l}"];
Node_121 [shape=record,label="{121\:\ 0x0054|if (java.lang.Thread.interrupted() != false) goto L42\l}"];
Node_122 [shape=record,label="{122\:\ 0x0056|java.lang.Object r8 = r28.value\l}"];
Node_123 [shape=record,label="{123\:\ 0x0058|if (r8 == null) goto L41\l}"];
Node_124 [shape=record,label="{124\:\ 0x005a|r12 = true\l}"];
Node_126 [shape=record,label="{126\:\ 0x005d|PHI: r12 \l  PHI: (r12v15 boolean) = (r12v14 boolean), (r12v18 boolean) binds: [B:125:0x005c, B:124:0x005a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_127 [shape=record,label="{127\:\ 0x0061|if ((r12 & ((r8 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) ^ true)) == false) goto L33\l}"];
Node_130 [shape=record,label="{130\:\ 0x0068|long r6 = r13 \- java.lang.System.nanoTime()\l}"];
Node_131 [shape=record,label="{131\:\ 0x0072|if ((r6 \> androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 1 : (r6 == androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 0 : \-1)) \>= 0) goto L35\l}"];
Node_133 [shape=record,label="{133\:\ 0x0078|LOOP_END\lLOOP:1: B:120:0x004d\-\>B:133:0x0078\l}"];
Node_188 [shape=record,label="{188\:\ 0x0074|SYNTHETIC\l}"];
Node_132 [shape=record,label="{132\:\ 0x0074|removeWaiter(r11)\l}"];
Node_187 [shape=record,label="{187\:\ 0x0063|SYNTHETIC\l}"];
Node_128 [shape=record,label="{128\:\ 0x0063}"];
Node_129 [shape=record,label="{129\:\ 0x0067|RETURN\l|return getDoneValue(r8)\l}"];
Node_125 [shape=record,label="{125\:\ 0x005c|r12 = false\l}"];
Node_189 [shape=record,label="{189\:\ 0x007b|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x007b|removeWaiter(r11)\l}"];
Node_135 [shape=record,label="{135\:\ 0x0083|throw new java.lang.InterruptedException()\l}"];
Node_140 [shape=record,label="{140\:\ 0x008e}"];
Node_141 [shape=record,label="{141\:\ 0x0094|RETURN\l|return getDoneValue(r28.value)\l}"];
Node_193 [shape=record,label="{193\:\ 0x0095|SYNTHETIC\lPHI: r6 \l  PHI: (r6v1 'remainingNanos' long) = (r6v0 'remainingNanos' long), (r6v6 'remainingNanos' long) binds: [B:114:0x0035, B:132:0x0074] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_142 [shape=record,label="{142\:\ 0x0095|LOOP_START\lLOOP:2: B:142:0x0095\-\>B:154:0x00b3\lPHI: r6 \l  PHI: (r6v2 'remainingNanos' long) = (r6v1 'remainingNanos' long), (r6v4 'remainingNanos' long) binds: [B:193:0x0095, B:154:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_143 [shape=record,label="{143\:\ 0x0099|if ((r6 \> 0 ? 1 : (r6 == 0 ? 0 : \-1)) \<= 0) goto L65\l}"];
Node_144 [shape=record,label="{144\:\ 0x009b|java.lang.Object r8 = r28.value\l}"];
Node_145 [shape=record,label="{145\:\ 0x009d|if (r8 == null) goto L64\l}"];
Node_146 [shape=record,label="{146\:\ 0x009f|r9 = true\l}"];
Node_148 [shape=record,label="{148\:\ 0x00a2|PHI: r9 \l  PHI: (r9v3 boolean) = (r9v2 boolean), (r9v8 boolean) binds: [B:147:0x00a1, B:146:0x009f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_149 [shape=record,label="{149\:\ 0x00a6|if ((r9 & ((r8 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) ^ true)) == false) goto L55\l}"];
Node_152 [shape=record,label="{152\:\ 0x00ad}"];
Node_153 [shape=record,label="{153\:\ 0x00b1|if (java.lang.Thread.interrupted() != false) goto L58\l}"];
Node_154 [shape=record,label="{154\:\ 0x00b3|LOOP_END\lLOOP:2: B:142:0x0095\-\>B:154:0x00b3\l|long r6 = r13 \- java.lang.System.nanoTime()\l}"];
Node_190 [shape=record,label="{190\:\ 0x00ba|SYNTHETIC\l}"];
Node_155 [shape=record,label="{155\:\ 0x00ba}"];
Node_156 [shape=record,label="{156\:\ 0x00bf|throw new java.lang.InterruptedException()\l}"];
Node_191 [shape=record,label="{191\:\ 0x00a8|SYNTHETIC\l}"];
Node_150 [shape=record,label="{150\:\ 0x00a8}"];
Node_151 [shape=record,label="{151\:\ 0x00ac|RETURN\l|return getDoneValue(r8)\l}"];
Node_147 [shape=record,label="{147\:\ 0x00a1|r9 = false\l}"];
Node_192 [shape=record,label="{192\:\ 0x00c0|SYNTHETIC\l}"];
Node_157 [shape=record,label="{157\:\ 0x00c0|java.lang.String r9 = toString()\ljava.lang.String r11 = r31.toString().toLowerCase(java.util.Locale.ROOT)\ljava.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(\"Waited \")\lr12.append(r29)\lr12.append(\" \")\lr12.append(r31.toString().toLowerCase(java.util.Locale.ROOT))\ljava.lang.String r0 = r12.toString()\l}"];
Node_158 [shape=record,label="{158\:\ 0x00f9|if (((r6 + androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS) \> 0 ? 1 : ((r6 + androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS) == 0 ? 0 : \-1)) \>= 0) goto L90\l}"];
Node_159 [shape=record,label="{159\:\ 0x00fb|java.lang.StringBuilder r10 = new java.lang.StringBuilder()\lr10.append(r0)\lr10.append(\" (plus \")\ljava.lang.String r0 = r10.toString()\llong r1 = \-r6\llong r4 = r31.convert(r1, java.util.concurrent.TimeUnit.NANOSECONDS)\llong r6 = r1 \- r31.toNanos(r4)\l}"];
Node_160 [shape=record,label="{160\:\ 0x0121|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) == 0) goto L89\l}"];
Node_161 [shape=record,label="{161\:\ 0x0123}"];
Node_162 [shape=record,label="{162\:\ 0x0127|if ((r6 \> androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 1 : (r6 == androidx.concurrent.futures.AbstractResolvableFuture.SPIN_THRESHOLD_NANOS ? 0 : \-1)) \<= 0) goto L72\l}"];
Node_164 [shape=record,label="{164\:\ 0x012a|r16 = false\l}"];
Node_166 [shape=record,label="{166\:\ 0x012f|PHI: r16 \l  PHI: (r16v1 boolean) = (r16v0 boolean), (r16v5 boolean) binds: [B:165:0x012d, B:164:0x012a] A[DONT_GENERATE, DONT_INLINE]\l|r10 = r16\l}"];
Node_167 [shape=record,label="{167\:\ 0x0135|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) \<= 0) goto L80\l}"];
Node_168 [shape=record,label="{168\:\ 0x0137|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(r0)\lr12.append(r4)\lr12.append(\" \")\lr12.append(r11)\ljava.lang.String r0 = r12.toString()\l}"];
Node_169 [shape=record,label="{169\:\ 0x014c|if (r10 == false) goto L79\l}"];
Node_170 [shape=record,label="{170\:\ 0x014e|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(r0)\lr12.append(\",\")\ljava.lang.String r0 = r12.toString()\l}"];
Node_172 [shape=record,label="{172\:\ 0x0164|PHI: r0 \l  PHI: (r0v12 'message' java.lang.String) = (r0v11 'message' java.lang.String), (r0v15 'message' java.lang.String) binds: [B:171:0x0162, B:170:0x014e] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(r0)\lr12.append(\" \")\ljava.lang.String r0 = r12.toString()\l}"];
Node_171 [shape=record,label="{171\:\ 0x0162}"];
Node_173 [shape=record,label="{173\:\ 0x0173|PHI: r0 \l  PHI: (r0v7 'message' java.lang.String) = (r0v6 'message' java.lang.String), (r0v13 'message' java.lang.String) binds: [B:167:0x0135, B:172:0x0164] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == false) goto L82\l}"];
Node_174 [shape=record,label="{174\:\ 0x0175|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(r0)\lr12.append(r6)\lr12.append(\" nanoseconds \")\ljava.lang.String r0 = r12.toString()\l}"];
Node_175 [shape=record,label="{175\:\ 0x0189|PHI: r0 \l  PHI: (r0v8 'message' java.lang.String) = (r0v7 'message' java.lang.String), (r0v10 'message' java.lang.String) binds: [B:173:0x0173, B:174:0x0175] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r12 = new java.lang.StringBuilder()\lr12.append(r0)\lr12.append(\"delay)\")\ljava.lang.String r0 = r12.toString()\l}"];
Node_177 [shape=record,label="{177\:\ 0x019f|PHI: r0 \l  PHI: (r0v5 'message' java.lang.String) = (r0v4 'message' java.lang.String), (r0v9 'message' java.lang.String) binds: [B:176:0x019b, B:175:0x0189] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_178 [shape=record,label="{178\:\ 0x01a3|if (isDone() == false) goto L87\l}"];
Node_179 [shape=record,label="{179\:\ 0x01a5|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r0)\lr2.append(\" but future completed as timeout expired\")\l}"];
Node_180 [shape=record,label="{180\:\ 0x01bb|throw new java.util.concurrent.TimeoutException(r2.toString())\l}"];
Node_181 [shape=record,label="{181\:\ 0x01bc|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r0)\lr2.append(\" for \")\lr2.append(r9)\l}"];
Node_182 [shape=record,label="{182\:\ 0x01d5|throw new java.util.concurrent.TimeoutException(r2.toString())\l}"];
Node_165 [shape=record,label="{165\:\ 0x012d|r16 = true\l}"];
Node_176 [shape=record,label="{176\:\ 0x019b}"];
Node_112 [shape=record,label="{112\:\ 0x0030|r13 = 0\l}"];
Node_104 [shape=record,label="{104\:\ 0x0018|r11 = false\l}"];
Node_183 [shape=record,label="{183\:\ 0x01d6}"];
Node_184 [shape=record,label="{184\:\ 0x01db|throw new java.lang.InterruptedException()\l}"];
MethodNode[shape=record,label="{public final V androidx.concurrent.futures.AbstractResolvableFuture.get((r28v0 'this' androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]), (r29v0 'timeout' long A[D('timeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 'unit' java.util.concurrent.TimeUnit A[D('unit' java.util.concurrent.TimeUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:129:0x0067 \-\> B:98:?, CROSS_EDGE: B:151:0x00ac \-\> B:98:?, BACK_EDGE: B:154:0x00b3 \-\> B:142:0x0095, CROSS_EDGE: B:156:0x00bf \-\> B:98:?, CROSS_EDGE: B:147:0x00a1 \-\> B:148:0x00a2, CROSS_EDGE: B:180:0x01bb \-\> B:98:?, CROSS_EDGE: B:182:0x01d5 \-\> B:98:?, CROSS_EDGE: B:173:0x0173 \-\> B:175:0x0189, CROSS_EDGE: B:171:0x0162 \-\> B:172:0x0164, CROSS_EDGE: B:167:0x0135 \-\> B:173:0x0173, CROSS_EDGE: B:165:0x012d \-\> B:166:0x012f, CROSS_EDGE: B:160:0x0121 \-\> B:165:0x012d, CROSS_EDGE: B:176:0x019b \-\> B:177:0x019f, BACK_EDGE: B:133:0x0078 \-\> B:120:0x004d, CROSS_EDGE: B:125:0x005c \-\> B:126:0x005d, CROSS_EDGE: B:135:0x0083 \-\> B:98:?, BACK_EDGE: B:139:0x008b \-\> B:118:0x0042, CROSS_EDGE: B:141:0x0094 \-\> B:98:?, CROSS_EDGE: B:116:0x003b \-\> B:140:0x008e, CROSS_EDGE: B:114:0x0035 \-\> B:142:0x0095, CROSS_EDGE: B:112:0x0030 \-\> B:113:0x0031, CROSS_EDGE: B:104:0x0018 \-\> B:105:0x0019, CROSS_EDGE: B:184:0x01db \-\> B:98:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V]\lSIGNATURE: (JLjava\/util\/concurrent\/TimeUnit;)TV;\lEXCEPTIONS:[Ljava\/lang\/InterruptedException;, Ljava\/util\/concurrent\/TimeoutException;, Ljava\/util\/concurrent\/ExecutionException;]\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit):V throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException\}]\l}"];
MethodNode -> Node_97;Node_97 -> Node_99;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_183;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_105;
Node_105 -> Node_106;
Node_106 -> Node_107[style=dashed];
Node_106 -> Node_109;
Node_107 -> Node_108;
Node_108 -> Node_98;
Node_109 -> Node_110;
Node_110 -> Node_111[style=dashed];
Node_110 -> Node_112;
Node_111 -> Node_113;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_193;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_140;
Node_117 -> Node_118;
Node_118 -> Node_119;
Node_119 -> Node_136;
Node_119 -> Node_186[style=dashed];
Node_136 -> Node_137;
Node_137 -> Node_139;
Node_137 -> Node_185[style=dashed];
Node_139 -> Node_118;
Node_185 -> Node_140;
Node_186 -> Node_120;
Node_120 -> Node_121;
Node_121 -> Node_122[style=dashed];
Node_121 -> Node_189;
Node_122 -> Node_123;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_125;
Node_124 -> Node_126;
Node_126 -> Node_127;
Node_127 -> Node_130;
Node_127 -> Node_187[style=dashed];
Node_130 -> Node_131;
Node_131 -> Node_133;
Node_131 -> Node_188[style=dashed];
Node_133 -> Node_120;
Node_188 -> Node_132;
Node_132 -> Node_193;
Node_187 -> Node_128;
Node_128 -> Node_129;
Node_129 -> Node_98;
Node_125 -> Node_126;
Node_189 -> Node_134;
Node_134 -> Node_135;
Node_135 -> Node_98;
Node_140 -> Node_141;
Node_141 -> Node_98;
Node_193 -> Node_142;
Node_142 -> Node_143;
Node_143 -> Node_144[style=dashed];
Node_143 -> Node_192;
Node_144 -> Node_145;
Node_145 -> Node_146[style=dashed];
Node_145 -> Node_147;
Node_146 -> Node_148;
Node_148 -> Node_149;
Node_149 -> Node_152;
Node_149 -> Node_191[style=dashed];
Node_152 -> Node_153;
Node_153 -> Node_154[style=dashed];
Node_153 -> Node_190;
Node_154 -> Node_142;
Node_190 -> Node_155;
Node_155 -> Node_156;
Node_156 -> Node_98;
Node_191 -> Node_150;
Node_150 -> Node_151;
Node_151 -> Node_98;
Node_147 -> Node_148;
Node_192 -> Node_157;
Node_157 -> Node_158;
Node_158 -> Node_159[style=dashed];
Node_158 -> Node_176;
Node_159 -> Node_160;
Node_160 -> Node_161[style=dashed];
Node_160 -> Node_165;
Node_161 -> Node_162;
Node_162 -> Node_164;
Node_162 -> Node_165[style=dashed];
Node_164 -> Node_166;
Node_166 -> Node_167;
Node_167 -> Node_168[style=dashed];
Node_167 -> Node_173;
Node_168 -> Node_169;
Node_169 -> Node_170[style=dashed];
Node_169 -> Node_171;
Node_170 -> Node_172;
Node_172 -> Node_173;
Node_171 -> Node_172;
Node_173 -> Node_174[style=dashed];
Node_173 -> Node_175;
Node_174 -> Node_175;
Node_175 -> Node_177;
Node_177 -> Node_178;
Node_178 -> Node_179[style=dashed];
Node_178 -> Node_181;
Node_179 -> Node_180;
Node_180 -> Node_98;
Node_181 -> Node_182;
Node_182 -> Node_98;
Node_165 -> Node_166;
Node_176 -> Node_177;
Node_112 -> Node_113;
Node_104 -> Node_105;
Node_183 -> Node_184;
Node_184 -> Node_98;
}

