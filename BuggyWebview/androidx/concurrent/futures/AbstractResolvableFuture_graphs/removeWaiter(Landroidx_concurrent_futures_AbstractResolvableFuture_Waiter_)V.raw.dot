digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.removeWaiter(Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;)V" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:171)\l0x0001: IPUT  \l  (r0 I:java.lang.Thread)\l  (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('node' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l androidx.concurrent.futures.AbstractResolvableFuture.Waiter.thread java.lang.Thread \l}"];
Node_30 [shape=record,label="{30\:\ 0x0003|LOOP_START\lLOOP:0: B:30:0x0003\-\>B:48:0x0003\l|0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:174)\l0x0004: IGET  (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) = \l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l androidx.concurrent.futures.AbstractResolvableFuture.waiters androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:175)\l0x0006: SGET  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) =  androidx.concurrent.futures.AbstractResolvableFuture.Waiter.TOMBSTONE androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:176)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x000b \l}"];
Node_33 [shape=record,label="{33\:\ 0x000b|LOOP_START\lLOOP:1: B:33:0x000b\-\>B:44:0x0027\l|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0029  (LINE:180)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000d|0x000d: IGET  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter) = \l  (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l androidx.concurrent.futures.AbstractResolvableFuture.Waiter.next androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:181)\l0x000f: IGET  (r3 I:java.lang.Thread) = \l  (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l androidx.concurrent.futures.AbstractResolvableFuture.Waiter.thread java.lang.Thread  (LINE:182)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0015 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0013|0x0013: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('pred' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) = (r1 I:??[OBJECT, ARRAY] A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])  (LINE:183)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0027|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|LOOP_END\lLOOP:1: B:33:0x000b\-\>B:44:0x0027\l|0x0027: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) = (r2 I:??[OBJECT, ARRAY] A[D('succ' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])  (LINE:194)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pred' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x001e  (LINE:184)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: IPUT  \l  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('succ' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l  (r0 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('pred' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l androidx.concurrent.futures.AbstractResolvableFuture.Waiter.next androidx.concurrent.futures.AbstractResolvableFuture$Waiter  (LINE:185)\l0x0019: IGET  (r3 I:java.lang.Thread) = \l  (r0 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('pred' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l androidx.concurrent.futures.AbstractResolvableFuture.Waiter.thread java.lang.Thread  (LINE:186)\l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0027 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0003|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0003|LOOP_END\lSYNTHETIC\lLOOP:0: B:30:0x0003\-\>B:48:0x0003\l}"];
Node_52 [shape=record,label="{52\:\ 0x0027|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x001e|0x001e: SGET  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper) =  androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper  (LINE:190)\l0x0020: INVOKE  (r3 I:boolean) = \l  (r3 I:androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper)\l  (r4 I:androidx.concurrent.futures.AbstractResolvableFuture A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>)])\l  (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('curr' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l  (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('succ' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.casWaiters(androidx.concurrent.futures.AbstractResolvableFuture, androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter):boolean A[MD:(androidx.concurrent.futures.AbstractResolvableFuture\<?\>, androidx.concurrent.futures.AbstractResolvableFuture$Waiter, androidx.concurrent.futures.AbstractResolvableFuture$Waiter):boolean (m)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0024|0x0024: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0027 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0003|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0027|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0029|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0029|RETURN\l|0x0029: RETURN    (LINE:198)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x000a|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:177)\l}"];
MethodNode[shape=record,label="{private void androidx.concurrent.futures.AbstractResolvableFuture.removeWaiter((r4 'this' I:androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]), (r5 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('node' androidx.concurrent.futures.AbstractResolvableFuture$Waiter), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0027 \-\> B:33:0x000b, CROSS_EDGE: B:39:0x001b \-\> B:44:0x0027, BACK_EDGE: B:39:0x001b \-\> B:30:0x0003, CROSS_EDGE: B:42:0x0024 \-\> B:44:0x0027, BACK_EDGE: B:42:0x0024 \-\> B:30:0x0003, CROSS_EDGE: B:45:0x0029 \-\> B:28:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0029: r0 'pred' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  0x0006\-0x0029: r1 'curr' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  0x000f\-0x0029: r2 'succ' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  0x0000\-0x0029: r4 'this' Landroidx\/concurrent\/futures\/AbstractResolvableFuture;, signature: Landroidx\/concurrent\/futures\/AbstractResolvableFuture\<TV;\>;\l  \-1 \-0x0029: r5 'node' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\lTYPE_VARS: [V]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_46[style=dashed];
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_51;
Node_51 -> Node_44;
Node_44 -> Node_33;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39;
Node_39 -> Node_49[style=dashed];
Node_39 -> Node_52;
Node_49 -> Node_48;
Node_48 -> Node_30;
Node_52 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_50[style=dashed];
Node_42 -> Node_53;
Node_50 -> Node_48;
Node_53 -> Node_44;
Node_47 -> Node_45;
Node_45 -> Node_28;
Node_46 -> Node_32;
Node_32 -> Node_28;
}

