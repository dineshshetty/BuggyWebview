digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.cancel(Z)Z" {
Node_46 [shape=record,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0000|java.lang.Object r0 = r10.value\lr1 = false\l}"];
Node_49 [shape=record,label="{49\:\ 0x0005|if (r0 != null) goto L43\l}"];
Node_50 [shape=record,label="{50\:\ 0x0007|r4 = true\l}"];
Node_52 [shape=record,label="{52\:\ 0x000a|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v8 boolean) binds: [B:51:0x0009, B:50:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x000d|if ((r4 \| (r0 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture)) == false) goto L41\l}"];
Node_54 [shape=record,label="{54\:\ 0x000f}"];
Node_55 [shape=record,label="{55\:\ 0x0011|if (androidx.concurrent.futures.AbstractResolvableFuture.GENERATE_CANCELLATION_CAUSES == false) goto L38\l}"];
Node_56 [shape=record,label="{56\:\ 0x0013|androidx.concurrent.futures.AbstractResolvableFuture$Cancellation r4 = new androidx.concurrent.futures.AbstractResolvableFuture.Cancellation(r11, new java.util.concurrent.CancellationException(\"Future.cancel() was called.\"))\l}"];
Node_60 [shape=record,label="{60\:\ 0x0027|PHI: r4 \l  PHI: (r4v6 'valueToSet' java.lang.Object) = (r4v4 'valueToSet' java.lang.Object), (r4v5 'valueToSet' java.lang.Object), (r4v7 'valueToSet' java.lang.Object) binds: [B:59:0x0025, B:58:0x0022, B:56:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r5 = r10\l}"];
Node_61 [shape=record,label="{61\:\ 0x0028|LOOP_START\lLOOP:0: B:61:0x0028\-\>B:89:0x0028\lPHI: r0 r1 r5 \l  PHI: (r0v1 'localValue' java.lang.Object) = (r0v0 'localValue' java.lang.Object), (r0v3 'localValue' java.lang.Object) binds: [B:60:0x0027, B:89:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'rValue' boolean) = (r1v0 'rValue' boolean), (r1v4 'rValue' boolean) binds: [B:60:0x0027, B:89:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 androidx.concurrent.futures.AbstractResolvableFuture\<V\>) = (r5v1 androidx.concurrent.futures.AbstractResolvableFuture\<V\>), (r5v4 androidx.concurrent.futures.AbstractResolvableFuture\<V\>) binds: [B:60:0x0027, B:89:0x0028] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_62 [shape=record,label="{62\:\ 0x002e|if (androidx.concurrent.futures.AbstractResolvableFuture.ATOMIC_HELPER.casValue(r5, r0, r4) == false) goto L12\l}"];
Node_84 [shape=record,label="{84\:\ 0x005c|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x005c|java.lang.Object r0 = r5.value\l}"];
Node_81 [shape=record,label="{81\:\ 0x0060|if ((r0 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) != false) goto L16\l}"];
Node_87 [shape=record,label="{87\:\ 0x0062|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x0028|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0028|LOOP_END\lSYNTHETIC\lLOOP:0: B:61:0x0028\-\>B:89:0x0028\lPHI: r0 r1 r5 \l  PHI: (r0v3 'localValue' java.lang.Object) = (r0v2 'localValue' java.lang.Object), (r0v4 'localValue' java.lang.Object) binds: [B:91:0x0028, B:90:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 'rValue' boolean) = (r1v3 'rValue' boolean), (r1v2 'rValue' boolean) binds: [B:91:0x0028, B:90:0x0028] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v4 androidx.concurrent.futures.AbstractResolvableFuture\<V\>) = (r5v3 androidx.concurrent.futures.AbstractResolvableFuture\<V\>), (r5v2 androidx.concurrent.futures.AbstractResolvableFuture\<V\>) binds: [B:91:0x0028, B:90:0x0028] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_88 [shape=record,label="{88\:\ 0x0030|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0030|r1 = true\l}"];
Node_64 [shape=record,label="{64\:\ 0x0031|if (r11 == false) goto L22\l}"];
Node_65 [shape=record,label="{65\:\ 0x0033|r5.interruptTask()\l}"];
Node_66 [shape=record,label="{66\:\ 0x0036|complete(r5)\l}"];
Node_67 [shape=record,label="{67\:\ 0x003b|if ((r0 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) == false) goto L37\l}"];
Node_68 [shape=record,label="{68\:\ 0x003d|com.google.common.util.concurrent.ListenableFuture\<? extends V\> r6 = ((androidx.concurrent.futures.AbstractResolvableFuture.SetFuture) r0).future\l}"];
Node_69 [shape=record,label="{69\:\ 0x0044|if ((r6 instanceof androidx.concurrent.futures.AbstractResolvableFuture) == false) goto L35\l}"];
Node_70 [shape=record,label="{70\:\ 0x0046|androidx.concurrent.futures.AbstractResolvableFuture r7 = (androidx.concurrent.futures.AbstractResolvableFuture) r6\ljava.lang.Object r0 = r7.value\l}"];
Node_71 [shape=record,label="{71\:\ 0x004b|if (r0 != null) goto L34\l}"];
Node_72 [shape=record,label="{72\:\ 0x004d|r8 = true\l}"];
Node_74 [shape=record,label="{74\:\ 0x0050|PHI: r8 \l  PHI: (r8v1 boolean) = (r8v0 boolean), (r8v3 boolean) binds: [B:73:0x004f, B:72:0x004d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_75 [shape=record,label="{75\:\ 0x0053|if ((r8 \| (r0 instanceof androidx.concurrent.futures.AbstractResolvableFuture.SetFuture)) == false) goto L33\l}"];
Node_76 [shape=record,label="{76\:\ 0x0055|r5 = r7\l}"];
Node_91 [shape=record,label="{91\:\ 0x0028|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0062|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x004f|r8 = false\l}"];
Node_83 [shape=record,label="{83\:\ 0x0058|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x0058|r6.cancel(r11)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0062|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0020|if (r11 == false) goto L40\l}"];
Node_58 [shape=record,label="{58\:\ 0x0022|androidx.concurrent.futures.AbstractResolvableFuture$Cancellation r4 = androidx.concurrent.futures.AbstractResolvableFuture.Cancellation.CAUSELESS_INTERRUPTED\l}"];
Node_59 [shape=record,label="{59\:\ 0x0025|androidx.concurrent.futures.AbstractResolvableFuture$Cancellation r4 = androidx.concurrent.futures.AbstractResolvableFuture.Cancellation.CAUSELESS_CANCELLED\l}"];
Node_82 [shape=record,label="{82\:\ 0x0062|RETURN\lPHI: r1 \l  PHI: (r1v1 'rValue' boolean) = (r1v0 'rValue' boolean), (r1v3 'rValue' boolean), (r1v3 'rValue' boolean), (r1v3 'rValue' boolean), (r1v2 'rValue' boolean) binds: [B:53:0x000d, B:86:0x0062, B:78:0x0058, B:85:0x0062, B:87:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|return r1\l}"];
Node_47 [shape=record,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0009|r4 = false\l}"];
MethodNode[shape=record,label="{public final boolean androidx.concurrent.futures.AbstractResolvableFuture.cancel((r10v0 'this' androidx.concurrent.futures.AbstractResolvableFuture\<V\> A[D('this' androidx.concurrent.futures.AbstractResolvableFuture\<V\>), IMMUTABLE_TYPE, THIS]), (r11v0 'mayInterruptIfRunning' boolean A[D('mayInterruptIfRunning' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:76:0x0055 \-\> B:61:0x0028, CROSS_EDGE: B:73:0x004f \-\> B:74:0x0050, CROSS_EDGE: B:78:0x0058 \-\> B:82:0x0062, CROSS_EDGE: B:67:0x003b \-\> B:82:0x0062, CROSS_EDGE: B:64:0x0031 \-\> B:66:0x0036, BACK_EDGE: B:81:0x0060 \-\> B:61:0x0028, CROSS_EDGE: B:81:0x0060 \-\> B:82:0x0062, CROSS_EDGE: B:58:0x0022 \-\> B:60:0x0027, CROSS_EDGE: B:59:0x0025 \-\> B:60:0x0027, CROSS_EDGE: B:53:0x000d \-\> B:82:0x0062, CROSS_EDGE: B:51:0x0009 \-\> B:52:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: [V]\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Future.cancel(boolean):boolean\}]\l}"];
MethodNode -> Node_46;Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_82;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_84;
Node_62 -> Node_88[style=dashed];
Node_84 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_87[style=dashed];
Node_81 -> Node_90;
Node_87 -> Node_82;
Node_90 -> Node_89;
Node_89 -> Node_61;
Node_88 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_86;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_83;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_85;
Node_76 -> Node_91;
Node_91 -> Node_89;
Node_85 -> Node_82;
Node_73 -> Node_74;
Node_83 -> Node_78;
Node_78 -> Node_82;
Node_86 -> Node_82;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_82 -> Node_47;
Node_51 -> Node_52;
}

