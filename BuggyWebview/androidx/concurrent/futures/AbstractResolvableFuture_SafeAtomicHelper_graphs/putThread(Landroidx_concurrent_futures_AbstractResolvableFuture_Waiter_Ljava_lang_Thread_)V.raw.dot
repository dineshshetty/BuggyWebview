digraph "CFG forandroidx.concurrent.futures.AbstractResolvableFuture.SafeAtomicHelper.putThread(Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;Ljava\/lang\/Thread;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater\<androidx.concurrent.futures.AbstractResolvableFuture$Waiter, java.lang.Thread\>) = (r1 I:androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper) androidx.concurrent.futures.AbstractResolvableFuture.SafeAtomicHelper.waiterThreadUpdater java.util.concurrent.atomic.AtomicReferenceFieldUpdater  (LINE:1112)\l0x0002: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r2 I:java.lang.Object A[D('waiter' androidx.concurrent.futures.AbstractResolvableFuture$Waiter)])\l  (r3 I:java.lang.Object A[D('newValue' java.lang.Thread)])\l type: VIRTUAL call: java.util.concurrent.atomic.AtomicReferenceFieldUpdater.lazySet(java.lang.Object, java.lang.Object):void A[MD:(T, V):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:1113)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.concurrent.futures.AbstractResolvableFuture.SafeAtomicHelper.putThread((r1 'this' I:androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.concurrent.futures.AbstractResolvableFuture$Waiter A[D('waiter' androidx.concurrent.futures.AbstractResolvableFuture$Waiter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Thread A[D('newValue' java.lang.Thread), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'waiter' Landroidx\/concurrent\/futures\/AbstractResolvableFuture$Waiter;\l  \-1 \-0x0005: r3 'newValue' Ljava\/lang\/Thread;\lMETHOD_OVERRIDE: [androidx.concurrent.futures.AbstractResolvableFuture.AtomicHelper.putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter, java.lang.Thread):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

