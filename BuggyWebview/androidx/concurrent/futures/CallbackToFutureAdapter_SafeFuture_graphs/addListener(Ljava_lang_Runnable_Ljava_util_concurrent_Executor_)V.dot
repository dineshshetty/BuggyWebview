digraph "CFG forandroidx.concurrent.futures.CallbackToFutureAdapter.SafeFuture.addListener(Ljava\/lang\/Runnable;Ljava\/util\/concurrent\/Executor;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r1.delegate.addListener(r2, r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.concurrent.futures.CallbackToFutureAdapter.SafeFuture.addListener((r1v0 'this' androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture\<T\> A[D('this' androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture\<T\>), IMMUTABLE_TYPE, THIS]), (r2v0 'listener' java.lang.Runnable A[D('listener' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'executor' java.util.concurrent.Executor A[D('executor' java.util.concurrent.Executor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: [T]\lMETHOD_OVERRIDE: [com.google.common.util.concurrent.ListenableFuture.addListener(java.lang.Runnable, java.util.concurrent.Executor):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

