digraph "CFG forandroidx.concurrent.futures.CallbackToFutureAdapter.SafeFuture.get(JLjava\/util\/concurrent\/TimeUnit;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.concurrent.futures.AbstractResolvableFuture\<T\>) = \l  (r1 I:androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture A[D('this' androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture\<T\>)])\l androidx.concurrent.futures.CallbackToFutureAdapter.SafeFuture.delegate androidx.concurrent.futures.AbstractResolvableFuture  (LINE:205)\l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:androidx.concurrent.futures.AbstractResolvableFuture)\l  (r2 I:long A[D('timeout' long)])\l  (r4 I:java.util.concurrent.TimeUnit A[D('unit' java.util.concurrent.TimeUnit)])\l type: VIRTUAL call: androidx.concurrent.futures.AbstractResolvableFuture.get(long, java.util.concurrent.TimeUnit):java.lang.Object A[MD:(long, java.util.concurrent.TimeUnit):V throws java.lang.InterruptedException, java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:T) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T androidx.concurrent.futures.CallbackToFutureAdapter.SafeFuture.get((r1 'this' I:androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture\<T\> A[D('this' androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture\<T\>), IMMUTABLE_TYPE, THIS]), (r2 I:long A[D('timeout' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.concurrent.TimeUnit A[D('unit' java.util.concurrent.TimeUnit), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  0x0000\-0x0006: r1 'this' Landroidx\/concurrent\/futures\/CallbackToFutureAdapter$SafeFuture;, signature: Landroidx\/concurrent\/futures\/CallbackToFutureAdapter$SafeFuture\<TT;\>;\l  \-1 \-0x0006: r2 'timeout' J\l  \-1 \-0x0006: r4 'unit' Ljava\/util\/concurrent\/TimeUnit;\lTYPE_VARS: [T]\lEXCEPTIONS:[Ljava\/lang\/InterruptedException;, Ljava\/util\/concurrent\/ExecutionException;, Ljava\/util\/concurrent\/TimeoutException;]\lSIGNATURE: (JLjava\/util\/concurrent\/TimeUnit;)TT;\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.Future.get(long, java.util.concurrent.TimeUnit):V throws java.util.concurrent.ExecutionException, java.lang.InterruptedException, java.util.concurrent.TimeoutException\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

