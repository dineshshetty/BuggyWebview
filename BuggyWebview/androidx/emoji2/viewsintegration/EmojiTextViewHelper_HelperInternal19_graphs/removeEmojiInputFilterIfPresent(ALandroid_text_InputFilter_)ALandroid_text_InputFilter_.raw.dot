digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.removeEmojiInputFilterIfPresent([Landroid\/text\/InputFilter;)[Landroid\/text\/InputFilter;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: INVOKE  (r0 I:android.util.SparseArray) = \l  (r7 I:androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19)\l  (r8 I:android.text.InputFilter[] A[D('filters' android.text.InputFilter[])])\l type: DIRECT call: androidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.getEmojiInputFilterPositionArray(android.text.InputFilter[]):android.util.SparseArray A[MD:(android.text.InputFilter[]):android.util.SparseArray\<android.text.InputFilter\> (m)] (LINE:385)\l0x0004: INVOKE  (r1 I:int) = (r0 I:android.util.SparseArray A[D('filterSet' android.util.SparseArray\<android.text.InputFilter\>)]) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)] (LINE:386)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000b \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|0x000a: RETURN  (r8 I:android.text.InputFilter[] A[D('filters' android.text.InputFilter[])])  (LINE:387)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: ARRAY_LENGTH  (r1 I:int) = (r8 I:??[] A[D('filters' android.text.InputFilter[])])  (LINE:391)\l0x000c: ARRAY_LENGTH  (r2 I:int) = (r8 I:??[] A[D('filters' android.text.InputFilter[])])  (LINE:392)\l0x000d: INVOKE  (r3 I:int) = (r0 I:android.util.SparseArray A[D('filterSet' android.util.SparseArray\<android.text.InputFilter\>)]) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l0x0011: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0012: NEW_ARRAY  (r3 I:android.text.InputFilter[]) = (r2 I:int A[D('outCount' int), IMMUTABLE_TYPE]) type: android.text.InputFilter[]  (LINE:393)\l0x0014: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:394)\l0x0015: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:395)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|LOOP_START\lLOOP:0: B:21:0x0016\-\>B:25:0x0024\l|0x0016: IF  (r5 I:??[int, byte, short, char] A[D('srcPosition' int)]) \>= (r1 I:??[int, byte, short, char] A[D('inCount' int)])  \-\> B:27:0x0027 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: INVOKE  (r6 I:int) = \l  (r0 I:android.util.SparseArray A[D('filterSet' android.util.SparseArray\<android.text.InputFilter\>)])\l  (r5 I:int A[D('srcPosition' int)])\l type: VIRTUAL call: android.util.SparseArray.indexOfKey(int):int A[MD:(int):int (c)] (LINE:396)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|0x001c: IF  (r6 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:29:0x0024 \l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: AGET  (r6 I:??[OBJECT, ARRAY]) = \l  (r8 I:??[OBJECT, ARRAY][] A[D('filters' android.text.InputFilter[])])\l  (r5 I:??[int, short, byte, char] A[D('srcPosition' int)])\l  (LINE:397)\l0x0020: APUT  \l  (r3 I:??[OBJECT, ARRAY][] A[D('result' android.text.InputFilter[])])\l  (r4 I:??[int, short, byte, char] A[D('destPosition' int)])\l  (r6 I:??[OBJECT, ARRAY])\l \l0x0022: ARITH  (r4 I:int) = (r4 I:int A[D('destPosition' int)]) + (1 int)  (LINE:398)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|LOOP_END\lLOOP:0: B:21:0x0016\-\>B:25:0x0024\l|0x0024: ARITH  (r5 I:int) = (r5 I:int A[D('srcPosition' int)]) + (1 int)  (LINE:395)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|RETURN\l|0x0027: RETURN  (r3 I:android.text.InputFilter[] A[D('result' android.text.InputFilter[])])  (LINE:401)\l}"];
MethodNode[shape=record,label="{private android.text.InputFilter[] androidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.removeEmojiInputFilterIfPresent((r7 'this' I:androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 A[IMMUTABLE_TYPE, THIS]), (r8 I:android.text.InputFilter[] A[D('filters' android.text.InputFilter[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0024 \-\> B:21:0x0016, CROSS_EDGE: B:23:0x001c \-\> B:25:0x0024, CROSS_EDGE: B:26:0x0027 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0027: r5 'srcPosition' I\l  0x0004\-0x0027: r0 'filterSet' Landroid\/util\/SparseArray;, signature: Landroid\/util\/SparseArray\<Landroid\/text\/InputFilter;\>;\l  0x000c\-0x0027: r1 'inCount' I\l  0x0012\-0x0027: r2 'outCount' I\l  0x0014\-0x0027: r3 'result' [Landroid\/text\/InputFilter;\l  0x0015\-0x0027: r4 'destPosition' I\l  \-1 \-0x0027: r8 'filters' [Landroid\/text\/InputFilter;\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_28;
Node_28 -> Node_25;
Node_25 -> Node_21;
Node_29 -> Node_25;
Node_27 -> Node_26;
Node_26 -> Node_16;
}

