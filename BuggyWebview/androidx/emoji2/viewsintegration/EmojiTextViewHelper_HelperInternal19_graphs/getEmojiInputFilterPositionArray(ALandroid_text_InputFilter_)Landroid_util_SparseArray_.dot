digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.getEmojiInputFilterPositionArray([Landroid\/text\/InputFilter;)Landroid\/util\/SparseArray;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.util.SparseArray r0 = new android.util.SparseArray\<\>(1)\lr1 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|LOOP_START\lLOOP:0: B:16:0x0007\-\>B:21:0x0015\lPHI: r1 \l  PHI: (r1v2 'pos' int) = (r1v1 'pos' int), (r1v3 'pos' int) binds: [B:15:0x0000, B:21:0x0015] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|if (r1 \>= r4.length) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a}"];
Node_19 [shape=record,label="{19\:\ 0x000e|if ((r4[r1] instanceof androidx.emoji2.viewsintegration.EmojiInputFilter) == false) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|r0.put(r1, r4[r1])\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|LOOP_END\lLOOP:0: B:16:0x0007\-\>B:21:0x0015\l|int r1 = r1 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.util.SparseArray\<android.text.InputFilter\> androidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.getEmojiInputFilterPositionArray((r3v0 'this' androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 A[IMMUTABLE_TYPE, THIS]), (r4v0 'filters' android.text.InputFilter[] A[D('filters' android.text.InputFilter[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0015 \-\> B:16:0x0007, CROSS_EDGE: B:19:0x000e \-\> B:21:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([Landroid\/text\/InputFilter;)Landroid\/util\/SparseArray\<Landroid\/text\/InputFilter;\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_24;
Node_24 -> Node_21;
Node_21 -> Node_16;
Node_25 -> Node_21;
Node_23 -> Node_22;
Node_22 -> Node_14;
}

