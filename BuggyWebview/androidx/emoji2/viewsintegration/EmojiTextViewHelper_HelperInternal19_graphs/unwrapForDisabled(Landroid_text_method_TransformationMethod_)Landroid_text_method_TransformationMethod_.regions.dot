digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.unwrapForDisabled(Landroid\/text\/method\/TransformationMethod;)Landroid\/text\/method\/TransformationMethod;" {
subgraph cluster_Region_1519420179 {
label = "R(1:(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_2081794948 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1182622899 {
label = "IF [B:10:0x0002] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|if ((r3 instanceof androidx.emoji2.viewsintegration.EmojiTransformationMethod) != false) goto L3\l}"];
subgraph cluster_Region_1641686526 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|androidx.emoji2.viewsintegration.EmojiTransformationMethod androidx.emoji2.viewsintegration.EmojiTransformationMethod r0 = (androidx.emoji2.viewsintegration.EmojiTransformationMethod) r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|RETURN\l|return r0.getOriginalTransformationMethod()\l}"];
}
}
subgraph cluster_Region_279049259 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|return r3\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0000}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private android.text.method.TransformationMethod androidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal19.unwrapForDisabled((r2v0 'this' androidx.emoji2.viewsintegration.EmojiTextViewHelper$HelperInternal19 A[IMMUTABLE_TYPE, THIS]), (r3v0 'transformationMethod' android.text.method.TransformationMethod A[D('transformationMethod' android.text.method.TransformationMethod), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000c \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
}

