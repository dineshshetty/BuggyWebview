digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTextViewHelper.SkippingHelper19.wrapTransformationMethod(Landroid\/text\/method\/TransformationMethod;)Landroid\/text\/method\/TransformationMethod;" {
subgraph cluster_Region_2087764544 {
label = "R(1:(2:(1:3)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1707957229 {
label = "R(2:(1:3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1142542759 {
label = "IF [B:10:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0004|if (skipBecauseEmojiCompatNotInitialized() != false) goto L3\l}"];
subgraph cluster_Region_1308446626 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_937817759 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000d|RETURN\l|return r1.mHelperDelegate.wrapTransformationMethod(r2)\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0000}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0007}"];
MethodNode[shape=record,label="{android.text.method.TransformationMethod androidx.emoji2.viewsintegration.EmojiTextViewHelper.SkippingHelper19.wrapTransformationMethod((r1v0 'this' androidx.emoji2.viewsintegration.EmojiTextViewHelper$SkippingHelper19 A[IMMUTABLE_TYPE, THIS]), (r2v0 'transformationMethod' android.text.method.TransformationMethod A[D('transformationMethod' android.text.method.TransformationMethod), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000d \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.emoji2.viewsintegration.EmojiTextViewHelper.HelperInternal.wrapTransformationMethod(android.text.method.TransformationMethod):android.text.method.TransformationMethod]\l}"];
MethodNode -> Node_7;Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_12 -> Node_13;
}

