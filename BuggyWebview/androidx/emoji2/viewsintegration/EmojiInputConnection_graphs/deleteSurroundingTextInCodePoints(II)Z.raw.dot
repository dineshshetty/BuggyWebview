digraph "CFG forandroidx.emoji2.viewsintegration.EmojiInputConnection.deleteSurroundingTextInCodePoints(II)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper) = (r6 I:androidx.emoji2.viewsintegration.EmojiInputConnection) androidx.emoji2.viewsintegration.EmojiInputConnection.mEmojiCompatDeleteHelper androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper  (LINE:74)\l0x0002: INVOKE  (r2 I:android.text.Editable) = (r6 I:androidx.emoji2.viewsintegration.EmojiInputConnection) type: DIRECT call: androidx.emoji2.viewsintegration.EmojiInputConnection.getEditable():android.text.Editable A[MD:():android.text.Editable (m)] (LINE:75)\l0x0006: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:74)\l0x0007: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0008: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('beforeLength' int)]) \l0x0009: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('afterLength' int)]) \l0x000a: INVOKE  (r0 I:boolean) = \l  (r0 I:androidx.emoji2.viewsintegration.EmojiInputConnection$EmojiCompatDeleteHelper)\l  (r1 I:android.view.inputmethod.InputConnection)\l  (r2 I:android.text.Editable)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:boolean)\l type: VIRTUAL call: androidx.emoji2.viewsintegration.EmojiInputConnection.EmojiCompatDeleteHelper.handleDeleteSurroundingText(android.view.inputmethod.InputConnection, android.text.Editable, int, int, boolean):boolean A[MD:(android.view.inputmethod.InputConnection, android.text.Editable, int, int, boolean):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019  (LINE:76)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r1 I:boolean) = \l  (r6 I:android.view.inputmethod.InputConnectionWrapper)\l  (r7 I:int A[D('beforeLength' int)])\l  (r8 I:int A[D('afterLength' int)])\l type: SUPER call: android.view.inputmethod.InputConnectionWrapper.deleteSurroundingTextInCodePoints(int, int):boolean A[MD:(int, int):boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|SYNTHETIC\lRETURN\l|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|RETURN\lORIG_RETURN\l|0x0019: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001a: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.emoji2.viewsintegration.EmojiInputConnection.deleteSurroundingTextInCodePoints((r6 'this' I:androidx.emoji2.viewsintegration.EmojiInputConnection A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('beforeLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('afterLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x0019 \-\> B:9:0x001a, CROSS_EDGE: B:3:0x000e \-\> B:8:0x0019\lDebug Info:\l  0x000e\-0x001a: r0 'result' Z\l  \-1 \-0x001a: r7 'beforeLength' I\l  \-1 \-0x001a: r8 'afterLength' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.inputmethod.InputConnection.deleteSurroundingTextInCodePoints(int, int):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_1;
Node_8 -> Node_1;
}

