digraph "CFG forandroidx.emoji2.viewsintegration.EmojiKeyListener.onKeyDown(Landroid\/view\/View;Landroid\/text\/Editable;ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper) = (r2 I:androidx.emoji2.viewsintegration.EmojiKeyListener) androidx.emoji2.viewsintegration.EmojiKeyListener.mEmojiCompatHandleKeyDownHelper androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper  (LINE:56)\l0x0002: INVOKE  (r0 I:boolean) = \l  (r0 I:androidx.emoji2.viewsintegration.EmojiKeyListener$EmojiCompatHandleKeyDownHelper)\l  (r4 I:android.text.Editable A[D('content' android.text.Editable)])\l  (r5 I:int A[D('keyCode' int)])\l  (r6 I:android.view.KeyEvent A[D('event' android.view.KeyEvent)])\l type: VIRTUAL call: androidx.emoji2.viewsintegration.EmojiKeyListener.EmojiCompatHandleKeyDownHelper.handleKeyDown(android.text.Editable, int, android.view.KeyEvent):boolean A[MD:(android.text.Editable, int, android.view.KeyEvent):boolean (m)] (LINE:57)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013  (LINE:58)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r1 I:android.text.method.KeyListener) = (r2 I:androidx.emoji2.viewsintegration.EmojiKeyListener) androidx.emoji2.viewsintegration.EmojiKeyListener.mKeyListener android.text.method.KeyListener \l0x000a: INVOKE  (r1 I:boolean) = \l  (r1 I:android.text.method.KeyListener)\l  (r3 I:android.view.View A[D('view' android.view.View)])\l  (r4 I:android.text.Editable A[D('content' android.text.Editable)])\l  (r5 I:int A[D('keyCode' int)])\l  (r6 I:android.view.KeyEvent A[D('event' android.view.KeyEvent)])\l type: INTERFACE call: android.text.method.KeyListener.onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent):boolean A[MD:(android.view.View, android.text.Editable, int, android.view.KeyEvent):boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|SYNTHETIC\lRETURN\l|0x0011: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0014: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.emoji2.viewsintegration.EmojiKeyListener.onKeyDown((r2 'this' I:androidx.emoji2.viewsintegration.EmojiKeyListener A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.text.Editable A[D('content' android.text.Editable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:8:0x0013 \-\> B:9:0x0014, CROSS_EDGE: B:3:0x0006 \-\> B:8:0x0013\lDebug Info:\l  0x0006\-0x0014: r0 'result' Z\l  \-1 \-0x0014: r3 'view' Landroid\/view\/View;\l  \-1 \-0x0014: r4 'content' Landroid\/text\/Editable;\l  \-1 \-0x0014: r5 'keyCode' I\l  \-1 \-0x0014: r6 'event' Landroid\/view\/KeyEvent;\lMETHOD_OVERRIDE: [ClspMth\{android.text.method.KeyListener.onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_1;
Node_8 -> Node_1;
}

