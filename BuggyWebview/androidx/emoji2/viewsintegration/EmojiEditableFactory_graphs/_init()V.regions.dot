digraph "CFG forandroidx.emoji2.viewsintegration.EmojiEditableFactory.\<init\>()V" {
subgraph cluster_Region_1488840753 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1676591723 {
label = "Try: R(1:3) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_650895025 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0015, blocks: (B:13:0x0003), top: B:17:0x0003 \}\lCatch: all \-\> 0x0015\l|androidx.emoji2.viewsintegration.EmojiEditableFactory.sWatcherClass = java.lang.Class.forName(\"android.text.DynamicLayout$ChangeWatcher\", false, getClass().getClassLoader())     \/\/ Catch: java.lang.Throwable \-\> L15\l}"];
}
subgraph cluster_Region_403474913 {
label = "R(0) | ExcHandler: all \-\> 0x0015\l";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_403474913 {
label = "R(0) | ExcHandler: all \-\> 0x0015\l";
node [shape=record,color=blue];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0015|ExcHandler: all \-\> 0x0015\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0016|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void androidx.emoji2.viewsintegration.EmojiEditableFactory.\<init\>((r3v0 'this' androidx.emoji2.viewsintegration.EmojiEditableFactory A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0015 \-\> B:16:0x0016, CROSS_EDGE: B:17:0x0003 \-\> B:15:0x0015\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0015, blocks: (B:13:0x0003), top: B:17:0x0003 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_18;
Node_13 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_17;
Node_17 -> Node_13;
Node_17 -> Node_15;
Node_18 -> Node_15;
Node_19 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_11;
}

