digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTextWatcher.onTextChanged(Ljava\/lang\/CharSequence;III)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:android.widget.EditText) = (r7 I:androidx.emoji2.viewsintegration.EmojiTextWatcher) androidx.emoji2.viewsintegration.EmojiTextWatcher.mEditText android.widget.EditText  (LINE:74)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.widget.EditText) type: VIRTUAL call: android.widget.EditText.isInEditMode():boolean A[MD:():boolean (s)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r7 I:androidx.emoji2.viewsintegration.EmojiTextWatcher) type: DIRECT call: androidx.emoji2.viewsintegration.EmojiTextWatcher.shouldSkipForDisabledOrNotConfigured():boolean A[MD:():boolean (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r10 I:??[int, byte, short, char] A[D('before' int)]) \> (r11 I:??[int, byte, short, char] A[D('after' int)])  \-\> B:17:?  (LINE:79)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: INSTANCE_OF  (r0 I:boolean) = (r8 I:??[OBJECT, ARRAY] A[D('charSequence' java.lang.CharSequence)]) android.text.Spannable \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:80)\l0x0019: INVOKE  (r0 I:int) = (r0 I:androidx.emoji2.text.EmojiCompat) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.getLoadState():int A[MD:():int (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: SWITCH  (r0 I:??)\l case 0: goto B:14:0x0034\l case 1: goto B:13:0x0021\l case 2: goto B:20:?\l case 3: goto B:14:0x0034\l default: goto B:20:? \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('charSequence' java.lang.CharSequence)])  (LINE:82)\l0x0022: CHECK_CAST (r0 I:android.text.Spannable) = (android.text.Spannable) (r0 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r1 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:83)\l0x0028: ARITH  (r4 I:int) = (r9 I:int A[D('start' int)]) + (r11 I:int A[D('after' int)]) \l0x002a: IGET  (r5 I:int) = (r7 I:androidx.emoji2.viewsintegration.EmojiTextWatcher) androidx.emoji2.viewsintegration.EmojiTextWatcher.mMaxEmojiCount int \l0x002c: IGET  (r6 I:int) = (r7 I:androidx.emoji2.viewsintegration.EmojiTextWatcher) androidx.emoji2.viewsintegration.EmojiTextWatcher.mEmojiReplaceStrategy int \l0x002e: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('s' android.text.Spannable)]) \l0x002f: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)]) \l0x0030: INVOKE  (r1 I:androidx.emoji2.text.EmojiCompat), (r2 I:java.lang.CharSequence), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.process(java.lang.CharSequence, int, int, int, int):java.lang.CharSequence A[MD:(java.lang.CharSequence, int, int, int, int):java.lang.CharSequence (m)]\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:95)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:88)\l0x0038: INVOKE  (r1 I:androidx.emoji2.text.EmojiCompat$InitCallback) = (r7 I:androidx.emoji2.viewsintegration.EmojiTextWatcher) type: DIRECT call: androidx.emoji2.viewsintegration.EmojiTextWatcher.getInitCallback():androidx.emoji2.text.EmojiCompat$InitCallback A[MD:():androidx.emoji2.text.EmojiCompat$InitCallback (m)]\l0x003c: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat), (r1 I:androidx.emoji2.text.EmojiCompat$InitCallback) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback):void A[MD:(androidx.emoji2.text.EmojiCompat$InitCallback):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|RETURN\lORIG_RETURN\l|0x003f: RETURN    (LINE:95)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:95)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:95)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:95)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:75)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|RETURN\lORIG_RETURN\l|0x0040: RETURN    (LINE:75)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.viewsintegration.EmojiTextWatcher.onTextChanged((r7 'this' I:androidx.emoji2.viewsintegration.EmojiTextWatcher A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('before' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('after' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0034 \-\> B:15:0x003f, CROSS_EDGE: B:11:0x001d \-\> B:15:0x003f, CROSS_EDGE: B:9:0x0013 \-\> B:15:0x003f, CROSS_EDGE: B:7:0x000f \-\> B:15:0x003f, CROSS_EDGE: B:16:0x0040 \-\> B:1:?, CROSS_EDGE: B:3:0x0006 \-\> B:16:0x0040\lDebug Info:\l  0x0024\-0x0034: r0 's' Landroid\/text\/Spannable;\l  \-1 \-0x004d: r8 'charSequence' Ljava\/lang\/CharSequence;\l  \-1 \-0x004d: r9 'start' I\l  \-1 \-0x004d: r10 'before' I\l  \-1 \-0x004d: r11 'after' I\lMETHOD_OVERRIDE: [ClspMth\{android.text.TextWatcher.onTextChanged(java.lang.CharSequence, int, int, int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_21[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_14;
Node_11 -> Node_20;
Node_13 -> Node_19;
Node_19 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
Node_20 -> Node_1;
Node_18 -> Node_1;
Node_17 -> Node_1;
Node_21 -> Node_1;
Node_16 -> Node_1;
}

