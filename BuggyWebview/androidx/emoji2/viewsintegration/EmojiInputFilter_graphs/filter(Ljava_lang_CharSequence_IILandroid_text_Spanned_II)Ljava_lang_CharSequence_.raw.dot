digraph "CFG forandroidx.emoji2.viewsintegration.EmojiInputFilter.filter(Ljava\/lang\/CharSequence;IILandroid\/text\/Spanned;II)Ljava\/lang\/CharSequence;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: IGET  (r0 I:android.widget.TextView) = (r5 I:androidx.emoji2.viewsintegration.EmojiInputFilter) androidx.emoji2.viewsintegration.EmojiInputFilter.mTextView android.widget.TextView  (LINE:56)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.widget.TextView) type: VIRTUAL call: android.widget.TextView.isInEditMode():boolean A[MD:():boolean (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0009 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|RETURN\l|0x0008: RETURN  (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:57)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|0x0009: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:60)\l0x000d: INVOKE  (r0 I:int) = (r0 I:androidx.emoji2.text.EmojiCompat) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.getLoadState():int A[MD:():int (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|0x0011: SWITCH  (r0 I:??)\l case 0: goto B:54:0x004a\l case 1: goto B:36:0x0015\l case 2: goto B:35:0x0014\l case 3: goto B:54:0x004a\l default: goto B:35:0x0014 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0014|RETURN\l|0x0014: RETURN  (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:88)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0015|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:62)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|0x0016: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('destEnd' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0029  (LINE:63)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|0x0018: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('destStart' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0029 \l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|0x001a: INVOKE  (r1 I:int) = (r9 I:android.text.Spanned A[D('dest' android.text.Spanned)]) type: INTERFACE call: android.text.Spanned.length():int A[MD:():int (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0029 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0020|0x0020: IGET  (r1 I:android.widget.TextView) = (r5 I:androidx.emoji2.viewsintegration.EmojiInputFilter) androidx.emoji2.viewsintegration.EmojiInputFilter.mTextView android.widget.TextView  (LINE:64)\l0x0022: INVOKE  (r1 I:java.lang.CharSequence) = (r1 I:android.widget.TextView) type: VIRTUAL call: android.widget.TextView.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0026|0x0026: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' java.lang.CharSequence)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldText' java.lang.CharSequence)])  \-\> B:44:0x0029  (LINE:65)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0028|0x0028: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('process' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:66)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('process' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0049  (LINE:70)\l}"];
Node_45 [shape=record,label="{45\:\ 0x002b|0x002b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0049 \l}"];
Node_46 [shape=record,label="{46\:\ 0x002d|0x002d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sourceStart' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0037  (LINE:72)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002f|0x002f: INVOKE  (r1 I:int) = (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|0x0033: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sourceEnd' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0037 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0035|0x0035: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('source' java.lang.CharSequence)])  (LINE:73)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003b|0x003b: INVOKE  (r2 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:77)\l0x003f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0040: INVOKE  (r4 I:int) = (r1 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l0x0044: INVOKE  (r2 I:java.lang.CharSequence) = \l  (r2 I:androidx.emoji2.text.EmojiCompat)\l  (r1 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)])\l  (r3 I:int)\l  (r4 I:int)\l type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.process(java.lang.CharSequence, int, int):java.lang.CharSequence A[MD:(java.lang.CharSequence, int, int):java.lang.CharSequence (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0048|RETURN\l|0x0048: RETURN  (r2 I:java.lang.CharSequence) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0037|0x0037: INVOKE  (r1 I:java.lang.CharSequence) = \l  (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])\l  (r7 I:int A[D('sourceStart' int)])\l  (r8 I:int A[D('sourceEnd' int)])\l type: INTERFACE call: java.lang.CharSequence.subSequence(int, int):java.lang.CharSequence A[MD:(int, int):java.lang.CharSequence (c)] (LINE:75)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0049|RETURN\l|0x0049: RETURN  (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:80)\l}"];
Node_54 [shape=record,label="{54\:\ 0x004a|0x004a: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:83)\l0x004e: INVOKE  (r1 I:androidx.emoji2.text.EmojiCompat$InitCallback) = (r5 I:androidx.emoji2.viewsintegration.EmojiInputFilter) type: DIRECT call: androidx.emoji2.viewsintegration.EmojiInputFilter.getInitCallback():androidx.emoji2.text.EmojiCompat$InitCallback A[MD:():androidx.emoji2.text.EmojiCompat$InitCallback (m)]\l0x0052: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat), (r1 I:androidx.emoji2.text.EmojiCompat$InitCallback) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.registerInitCallback(androidx.emoji2.text.EmojiCompat$InitCallback):void A[MD:(androidx.emoji2.text.EmojiCompat$InitCallback):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0055|RETURN\l|0x0055: RETURN  (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:84)\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.emoji2.viewsintegration.EmojiInputFilter.filter((r5 'this' I:androidx.emoji2.viewsintegration.EmojiInputFilter A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.CharSequence A[D('source' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('sourceStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('sourceEnd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.text.Spanned A[D('dest' android.text.Spanned), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('destStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('destEnd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0014 \-\> B:29:?, CROSS_EDGE: B:52:0x0048 \-\> B:29:?, CROSS_EDGE: B:50:0x0037 \-\> B:51:0x003b, CROSS_EDGE: B:46:0x002d \-\> B:50:0x0037, CROSS_EDGE: B:53:0x0049 \-\> B:29:?, CROSS_EDGE: B:44:0x0029 \-\> B:53:0x0049, CROSS_EDGE: B:42:0x0026 \-\> B:44:0x0029, CROSS_EDGE: B:40:0x001e \-\> B:44:0x0029, CROSS_EDGE: B:38:0x0018 \-\> B:44:0x0029, CROSS_EDGE: B:37:0x0016 \-\> B:44:0x0029, CROSS_EDGE: B:55:0x0055 \-\> B:29:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0026\-0x0029: r1 'oldText' Ljava\/lang\/CharSequence;\l  0x0036\-0x0037: r1 'text' Ljava\/lang\/CharSequence;\l  0x003b\-0x0049: r1 'text' Ljava\/lang\/CharSequence;\l  0x0016\-0x004a: r0 'process' Z\l  \-1 \-0x0061: r6 'source' Ljava\/lang\/CharSequence;\l  \-1 \-0x0061: r7 'sourceStart' I\l  \-1 \-0x0061: r8 'sourceEnd' I\l  \-1 \-0x0061: r9 'dest' Landroid\/text\/Spanned;\l  \-1 \-0x0061: r10 'destStart' I\l  \-1 \-0x0061: r11 'destEnd' I\lMETHOD_OVERRIDE: [ClspMth\{android.text.InputFilter.filter(java.lang.CharSequence, int, int, android.text.Spanned, int, int):java.lang.CharSequence\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_34 -> Node_54;
Node_35 -> Node_29;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_53;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_53;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_50;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_29;
Node_50 -> Node_51;
Node_53 -> Node_29;
Node_54 -> Node_55;
Node_55 -> Node_29;
}

