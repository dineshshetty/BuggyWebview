digraph "CFG forandroidx.emoji2.viewsintegration.EmojiInputFilter.updateSelection(Landroid\/text\/Spannable;II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|if (r1 \< 0) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r2 \< 0) goto L6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|android.text.Selection.setSelection(r0, r1, r2)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r1 \< 0) goto L9\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|android.text.Selection.setSelection(r0, r1)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|if (r2 \< 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|android.text.Selection.setSelection(r0, r2)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|RETURN\lORIG_RETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.emoji2.viewsintegration.EmojiInputFilter.updateSelection((r0v0 'spannable' android.text.Spannable A[D('spannable' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:22:0x0013, CROSS_EDGE: B:21:0x0010 \-\> B:22:0x0013, CROSS_EDGE: B:20:0x000e \-\> B:22:0x0013, CROSS_EDGE: B:15:0x0000 \-\> B:18:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_23;
Node_23 -> Node_14;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_24;
Node_24 -> Node_14;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_25 -> Node_14;
}

