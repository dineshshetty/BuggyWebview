digraph "CFG forandroidx.emoji2.viewsintegration.EmojiTransformationMethod.getTransformation(Ljava\/lang\/CharSequence;Landroid\/view\/View;)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r3 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.isInEditMode():boolean A[MD:():boolean (c)] (LINE:45)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: RETURN  (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:46)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r0 I:android.text.method.TransformationMethod) = (r1 I:androidx.emoji2.viewsintegration.EmojiTransformationMethod) androidx.emoji2.viewsintegration.EmojiTransformationMethod.mTransformationMethod android.text.method.TransformationMethod  (LINE:49)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000f \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: INVOKE  (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)]) = \l  (r0 I:android.text.method.TransformationMethod)\l  (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])\l  (r3 I:android.view.View A[D('view' android.view.View)])\l type: INTERFACE call: android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence, android.view.View):java.lang.CharSequence A[MD:(java.lang.CharSequence, android.view.View):java.lang.CharSequence (c)] (LINE:50)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('source' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0026  (LINE:53)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:54)\l0x0015: INVOKE  (r0 I:int) = (r0 I:androidx.emoji2.text.EmojiCompat) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.getLoadState():int A[MD:():int (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: SWITCH  (r0 I:??)\l case 1: goto B:12:0x001d\l default: goto B:14:0x0026 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat) =  type: STATIC call: androidx.emoji2.text.EmojiCompat.get():androidx.emoji2.text.EmojiCompat A[MD:():androidx.emoji2.text.EmojiCompat (m)] (LINE:56)\l0x0021: INVOKE  (r0 I:java.lang.CharSequence) = (r0 I:androidx.emoji2.text.EmojiCompat), (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)]) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.process(java.lang.CharSequence):java.lang.CharSequence A[MD:(java.lang.CharSequence):java.lang.CharSequence (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence)])  (LINE:64)\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.emoji2.viewsintegration.EmojiTransformationMethod.getTransformation((r1 'this' I:androidx.emoji2.viewsintegration.EmojiTransformationMethod A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.CharSequence A[D('source' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0025 \-\> B:1:?, CROSS_EDGE: B:14:0x0026 \-\> B:1:?, CROSS_EDGE: B:8:0x000f \-\> B:14:0x0026, CROSS_EDGE: B:6:0x0009 \-\> B:8:0x000f\lDebug Info:\l  \-1 \-0x002d: r2 'source' Ljava\/lang\/CharSequence;\l  \-1 \-0x002d: r3 'view' Landroid\/view\/View;\lMETHOD_OVERRIDE: [ClspMth\{android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence, android.view.View):java.lang.CharSequence\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_1;
}

