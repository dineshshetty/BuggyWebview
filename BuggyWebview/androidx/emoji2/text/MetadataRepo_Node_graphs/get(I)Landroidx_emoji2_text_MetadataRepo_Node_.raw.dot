digraph "CFG forandroidx.emoji2.text.MetadataRepo.Node.get(I)Landroidx\/emoji2\/text\/MetadataRepo$Node;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:android.util.SparseArray\<androidx.emoji2.text.MetadataRepo$Node\>) = (r1 I:androidx.emoji2.text.MetadataRepo$Node) androidx.emoji2.text.MetadataRepo.Node.mChildren android.util.SparseArray  (LINE:251)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0006 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|SYNTHETIC\lRETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:androidx.emoji2.text.MetadataRepo$Node) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r2 I:int A[D('key' int)]) type: VIRTUAL call: android.util.SparseArray.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000a: CHECK_CAST (r0 I:androidx.emoji2.text.MetadataRepo$Node) = (androidx.emoji2.text.MetadataRepo$Node) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: RETURN  (r0 I:androidx.emoji2.text.MetadataRepo$Node) \l}"];
MethodNode[shape=record,label="{public androidx.emoji2.text.MetadataRepo$Node androidx.emoji2.text.MetadataRepo.Node.get((r1 'this' I:androidx.emoji2.text.MetadataRepo$Node A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:14:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r2 'key' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

