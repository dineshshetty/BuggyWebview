digraph "CFG forandroidx.emoji2.text.EmojiCompat.load()V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mMetadataLoadStrategy int  (LINE:672)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0007 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0007|0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \"Set metadataLoadStrategy to LOAD_STRATEGY_MANUAL to execute manual loading\" \l0x000a: INVOKE  (r2 I:boolean), (r0 I:java.lang.String) type: STATIC call: androidx.core.util.Preconditions.checkState(boolean, java.lang.String):void A[MD:(boolean, java.lang.String):void (m)]\l0x000d: INVOKE  (r0 I:boolean) = (r3 I:androidx.emoji2.text.EmojiCompat) type: DIRECT call: androidx.emoji2.text.EmojiCompat.isInitialized():boolean A[MD:():boolean (m)] (LINE:674)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0014 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|RETURN\l|0x0013: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0014|0x0014: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:676)\l0x0016: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x001a: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x001d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x003d, blocks: (B:32:0x001d, B:36:0x002b), top: B:42:0x001d \}\lCatch: all \-\> 0x003d\l|0x001d: IGET  (r0 I:int) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x003d, TRY_ENTER, TRY_LEAVE] (LINE:678)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002b \l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|0x0021: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:681)\l0x0023: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0027: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|RETURN\l|0x002a: RETURN    (LINE:678)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x003d, blocks: (B:32:0x001d, B:36:0x002b), top: B:42:0x001d \}\lCatch: all \-\> 0x003d\l|0x002b: IPUT  (r1 I:int), (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x003d, TRY_ENTER, TRY_LEAVE] (LINE:679)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|0x002d: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:681)\l0x002f: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0033: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x0037: IGET  (r0 I:androidx.emoji2.text.EmojiCompat$CompatInternal) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mHelper androidx.emoji2.text.EmojiCompat$CompatInternal  (LINE:684)\l0x0039: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat$CompatInternal) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.CompatInternal.loadMetadata():void A[MD:():void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x003c|RETURN\l|0x003c: RETURN    (LINE:685)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x003d|ExcHandler: all \-\> 0x003d\l|0x003d: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003d] (LINE:681)\l}"];
Node_40 [shape=record,label="{40\:\ 0x003e|0x003e: IGET  (r1 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock \l0x0040: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r1 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0044: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0047|0x0047: THROW  (r0 I:java.lang.Throwable)  (LINE:682)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.EmojiCompat.load((r3 'this' I:androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x002a \-\> B:23:?, CROSS_EDGE: B:38:0x003c \-\> B:23:?, CROSS_EDGE: B:41:0x0047 \-\> B:23:?, CROSS_EDGE: B:42:0x001d \-\> B:39:0x003d, CROSS_EDGE: B:25:0x0004 \-\> B:28:0x0008\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x003d, blocks: (B:32:0x001d, B:36:0x002b), top: B:42:0x001d \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_23;
Node_31 -> Node_42;
Node_42 -> Node_32;
Node_42 -> Node_39;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_23;
Node_36 -> Node_37;
Node_36 -> Node_43;
Node_37 -> Node_38;
Node_38 -> Node_23;
Node_43 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_23;
}

