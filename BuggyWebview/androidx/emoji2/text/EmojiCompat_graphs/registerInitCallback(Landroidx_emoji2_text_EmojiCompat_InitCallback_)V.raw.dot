digraph "CFG forandroidx.emoji2.text.EmojiCompat.registerInitCallback(Landroidx\/emoji2\/text\/EmojiCompat$InitCallback;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"initCallback cannot be null\"  (LINE:746)\l0x0002: INVOKE  (r4 I:java.lang.Object A[D('initCallback' androidx.emoji2.text.EmojiCompat$InitCallback)]), (r0 I:java.lang.Object) type: STATIC call: androidx.core.util.Preconditions.checkNotNull(java.lang.Object, java.lang.Object):java.lang.Object A[MD:\<T\>:(T, java.lang.Object):T (m)]\l0x0005: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:748)\l0x0007: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x000b: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0036, blocks: (B:19:0x000e, B:21:0x0013, B:24:0x0019, B:25:0x001f), top: B:31:0x000e \}\lCatch: all \-\> 0x0036\l|0x000e: IGET  (r0 I:int) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x0036, TRY_ENTER] (LINE:750)\l0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001f \l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|TryCatch #0 \{all \-\> 0x0036, blocks: (B:19:0x000e, B:21:0x0013, B:24:0x0019, B:25:0x001f), top: B:31:0x000e \}\lCatch: all \-\> 0x0036\l|0x0013: IGET  (r0 I:int) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x0036]\l0x0015: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0019 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|0x0018: GOTO  \-\> 0x001f \l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|TryCatch #0 \{all \-\> 0x0036, blocks: (B:19:0x000e, B:21:0x0013, B:24:0x0019, B:25:0x001f), top: B:31:0x000e \}\lCatch: all \-\> 0x0036\l|0x0019: IGET  (r0 I:java.util.Set\<androidx.emoji2.text.EmojiCompat$InitCallback\>) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitCallbacks java.util.Set A[Catch: all \-\> 0x0036] (LINE:753)\l0x001b: INVOKE  (r0 I:java.util.Set), (r4 I:java.lang.Object A[D('initCallback' androidx.emoji2.text.EmojiCompat$InitCallback)]) type: INTERFACE call: java.util.Set.add(java.lang.Object):boolean A[Catch: all \-\> 0x0036, MD:(E):boolean (c)]\l0x001e: GOTO  \-\> 0x002b \l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|0x002b: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:756)\l0x002d: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0031: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0035|RETURN\l|0x0035: RETURN    (LINE:758)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0036, blocks: (B:19:0x000e, B:21:0x0013, B:24:0x0019, B:25:0x001f), top: B:31:0x000e \}\lCatch: all \-\> 0x0036\l|0x001f: IGET  (r0 I:android.os.Handler) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mMainHandler android.os.Handler A[Catch: all \-\> 0x0036] (LINE:751)\l0x0021: NEW_INSTANCE  (r1 I:androidx.emoji2.text.EmojiCompat$ListenerDispatcher) =  androidx.emoji2.text.EmojiCompat$ListenerDispatcher A[Catch: all \-\> 0x0036]\l0x0023: IGET  (r2 I:int) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x0036]\l0x0025: INVOKE  \l  (r1 I:androidx.emoji2.text.EmojiCompat$ListenerDispatcher)\l  (r4 I:androidx.emoji2.text.EmojiCompat$InitCallback A[D('initCallback' androidx.emoji2.text.EmojiCompat$InitCallback)])\l  (r2 I:int)\l type: DIRECT call: androidx.emoji2.text.EmojiCompat.ListenerDispatcher.\<init\>(androidx.emoji2.text.EmojiCompat$InitCallback, int):void A[Catch: all \-\> 0x0036, MD:(androidx.emoji2.text.EmojiCompat$InitCallback, int):void (m)]\l0x0028: INVOKE  (r0 I:android.os.Handler), (r1 I:java.lang.Runnable) type: VIRTUAL call: android.os.Handler.post(java.lang.Runnable):boolean A[Catch: all \-\> 0x0036, MD:(java.lang.Runnable):boolean (c), TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0036|ExcHandler: all \-\> 0x0036\l|0x0036: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0036] (LINE:756)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0037|0x0037: IGET  (r1 I:java.util.concurrent.locks.ReadWriteLock) = (r3 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock \l0x0039: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r1 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x003d: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0040|0x0040: THROW  (r0 I:java.lang.Throwable)  (LINE:757)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.EmojiCompat.registerInitCallback((r3 'this' I:androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.emoji2.text.EmojiCompat$InitCallback A[D('initCallback' androidx.emoji2.text.EmojiCompat$InitCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0019 \-\> B:26:0x002b, CROSS_EDGE: B:20:0x0011 \-\> B:25:0x001f, CROSS_EDGE: B:30:0x0040 \-\> B:17:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0040: r4 'initCallback' Landroidx\/emoji2\/text\/EmojiCompat$InitCallback;\lTryCatch #0 \{all \-\> 0x0036, blocks: (B:19:0x000e, B:21:0x0013, B:24:0x0019, B:25:0x001f), top: B:31:0x000e \}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_31;
Node_31 -> Node_19;
Node_31 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

