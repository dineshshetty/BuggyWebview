digraph "CFG forandroidx.emoji2.text.EmojiCompat.process(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0001|if (r3 != null) goto L7\l}"];
Node_12 [shape=record,label="{12\:\ 0x0003|r1 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|PHI: r1 \l  PHI: (r1v1 'length' int) = (r1v0 'length' int), (r1v2 'length' int) binds: [B:13:0x0005, B:12:0x0003] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|RETURN\l|return process(r3, 0, r1)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|int r1 = r3.length()\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.emoji2.text.EmojiCompat.process((r2v0 'this' androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 'charSequence' java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0005 \-\> B:14:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

