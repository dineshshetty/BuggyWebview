digraph "CFG forandroidx.emoji2.text.EmojiCompat.process(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:956)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0001|0x0001: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('charSequence' java.lang.CharSequence)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0005 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0003|0x0003: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: INVOKE  (r0 I:java.lang.CharSequence) = \l  (r2 I:androidx.emoji2.text.EmojiCompat)\l  (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence)])\l  (r0 I:int)\l  (r1 I:int A[D('length' int)])\l type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.process(java.lang.CharSequence, int, int):java.lang.CharSequence A[MD:(java.lang.CharSequence, int, int):java.lang.CharSequence (m)] (LINE:957)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:java.lang.CharSequence) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|0x0005: INVOKE  (r1 I:int) = (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)]\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.emoji2.text.EmojiCompat.process((r2 'this' I:androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0005 \-\> B:14:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x000d: r1 'length' I\l  \-1 \-0x000d: r3 'charSequence' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

