digraph "CFG forandroidx.emoji2.text.EmojiCompat.getLoadState()I" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:783)\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.readLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0006: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0015, blocks: (B:14:0x0009), top: B:20:0x0009 \}\lCatch: all \-\> 0x0015\l|0x0009: IGET  (r0 I:int) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x0015, TRY_ENTER, TRY_LEAVE] (LINE:785)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|0x000b: IGET  (r1 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:787)\l0x000d: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r1 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.readLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0011: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0014|RETURN\l|0x0014: RETURN  (r0 I:int)  (LINE:785)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|ExcHandler: all \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0015] (LINE:787)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: IGET  (r1 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock \l0x0018: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r1 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.readLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x001c: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|0x001f: THROW  (r0 I:java.lang.Throwable)  (LINE:788)\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.EmojiCompat.getLoadState((r2 'this' I:androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001f \-\> B:12:?, CROSS_EDGE: B:20:0x0009 \-\> B:17:0x0015\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0015, blocks: (B:14:0x0009), top: B:20:0x0009 \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

