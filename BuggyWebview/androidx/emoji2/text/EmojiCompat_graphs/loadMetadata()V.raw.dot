digraph "CFG forandroidx.emoji2.text.EmojiCompat.loadMetadata()V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:688)\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0006: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.lock():void A[MD:():void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0026, blocks: (B:19:0x0009, B:21:0x000d), top: B:29:0x0009 \}\lCatch: all \-\> 0x0026\l|0x0009: IGET  (r0 I:int) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mMetadataLoadStrategy int A[Catch: all \-\> 0x0026, TRY_ENTER] (LINE:690)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0010 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0026, blocks: (B:19:0x0009, B:21:0x000d), top: B:29:0x0009 \}\lCatch: all \-\> 0x0026\l|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:691)\l0x000e: IPUT  (r0 I:int), (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mLoadState int A[Catch: all \-\> 0x0026, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IGET  (r0 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock  (LINE:694)\l0x0012: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x0016: INVOKE  (r0 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l0x001a: INVOKE  (r0 I:int) = (r2 I:androidx.emoji2.text.EmojiCompat) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.getLoadState():int A[MD:():int (m)] (LINE:697)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|0x0020: IGET  (r0 I:androidx.emoji2.text.EmojiCompat$CompatInternal) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mHelper androidx.emoji2.text.EmojiCompat$CompatInternal  (LINE:698)\l0x0022: INVOKE  (r0 I:androidx.emoji2.text.EmojiCompat$CompatInternal) type: VIRTUAL call: androidx.emoji2.text.EmojiCompat.CompatInternal.loadMetadata():void A[MD:():void (m)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN    (LINE:700)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:700)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|ExcHandler: all \-\> 0x0026\l|0x0026: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0026] (LINE:694)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|0x0027: IGET  (r1 I:java.util.concurrent.locks.ReadWriteLock) = (r2 I:androidx.emoji2.text.EmojiCompat) androidx.emoji2.text.EmojiCompat.mInitLock java.util.concurrent.locks.ReadWriteLock \l0x0029: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r1 I:java.util.concurrent.locks.ReadWriteLock) type: INTERFACE call: java.util.concurrent.locks.ReadWriteLock.writeLock():java.util.concurrent.locks.Lock A[MD:():java.util.concurrent.locks.Lock (c)]\l0x002d: INVOKE  (r1 I:java.util.concurrent.locks.Lock) type: INTERFACE call: java.util.concurrent.locks.Lock.unlock():void A[MD:():void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable)  (LINE:695)\l}"];
MethodNode[shape=record,label="{private void androidx.emoji2.text.EmojiCompat.loadMetadata((r2 'this' I:androidx.emoji2.text.EmojiCompat A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:25:0x0025, CROSS_EDGE: B:28:0x0030 \-\> B:17:?, CROSS_EDGE: B:20:0x000b \-\> B:22:0x0010, CROSS_EDGE: B:29:0x0009 \-\> B:26:0x0026\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0026, blocks: (B:19:0x0009, B:21:0x000d), top: B:29:0x0009 \}\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_29;
Node_29 -> Node_19;
Node_29 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_21 -> Node_30;
Node_30 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_31 -> Node_17;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_17;
}

