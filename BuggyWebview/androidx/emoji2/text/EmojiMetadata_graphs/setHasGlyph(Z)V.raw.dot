digraph "CFG forandroidx.emoji2.text.EmojiMetadata.setHasGlyph(Z)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasGlyph' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0004  (LINE:213)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: IPUT  (r0 I:int), (r1 I:androidx.emoji2.text.EmojiMetadata) androidx.emoji2.text.EmojiMetadata.mHasGlyph int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:214)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.EmojiMetadata.setHasGlyph((r1 'this' I:androidx.emoji2.text.EmojiMetadata A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('hasGlyph' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0004 \-\> B:12:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 'hasGlyph' Z\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_11 -> Node_12;
}

