digraph "CFG forandroidx.emoji2.text.EmojiSpan.getSize(Landroid\/graphics\/Paint;Ljava\/lang\/CharSequence;IILandroid\/graphics\/Paint$FontMetricsInt;)I" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:87)\l0x0002: INVOKE  (r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint)]), (r0 I:android.graphics.Paint$FontMetricsInt) type: VIRTUAL call: android.graphics.Paint.getFontMetricsInt(android.graphics.Paint$FontMetricsInt):int A[MD:(android.graphics.Paint$FontMetricsInt):int (c)]\l0x0005: IGET  (r0 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:88)\l0x0007: IGET  (r0 I:int) = (r0 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.descent int \l0x0009: IGET  (r1 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt \l0x000b: IGET  (r1 I:int) = (r1 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.ascent int \l0x000d: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000e: INVOKE  (r0 I:int) = (r0 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0012: CAST (r1 I:float) = (float) (r0 I:int A[D('fontHeight' int)])  (LINE:90)\l0x0013: CONST  (r2 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0015: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x0017: IGET  (r2 I:androidx.emoji2.text.EmojiMetadata) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mMetadata androidx.emoji2.text.EmojiMetadata \l0x0019: INVOKE  (r2 I:short) = (r2 I:androidx.emoji2.text.EmojiMetadata) type: VIRTUAL call: androidx.emoji2.text.EmojiMetadata.getHeight():short A[MD:():short (m)]\l0x001d: CAST (r2 I:float) = (float) (r2 I:int) \l0x001e: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x001f: IPUT  (r1 I:float), (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mRatio float \l0x0021: IGET  (r1 I:androidx.emoji2.text.EmojiMetadata) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mMetadata androidx.emoji2.text.EmojiMetadata  (LINE:91)\l0x0023: INVOKE  (r1 I:short) = (r1 I:androidx.emoji2.text.EmojiMetadata) type: VIRTUAL call: androidx.emoji2.text.EmojiMetadata.getHeight():short A[MD:():short (m)]\l0x0027: CAST (r1 I:float) = (float) (r1 I:int) \l0x0028: IGET  (r2 I:float) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mRatio float \l0x002a: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x002c: CAST (r1 I:int) = (int) (r1 I:float) \l0x002d: CAST (r1 I:short) = (short) (r1 I:int) \l0x002e: IPUT  (r1 I:short), (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mHeight short \l0x0030: IGET  (r1 I:androidx.emoji2.text.EmojiMetadata) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mMetadata androidx.emoji2.text.EmojiMetadata  (LINE:92)\l0x0032: INVOKE  (r1 I:short) = (r1 I:androidx.emoji2.text.EmojiMetadata) type: VIRTUAL call: androidx.emoji2.text.EmojiMetadata.getWidth():short A[MD:():short (m)]\l0x0036: CAST (r1 I:float) = (float) (r1 I:int) \l0x0037: IGET  (r2 I:float) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mRatio float \l0x0039: ARITH  (r1 I:float) = (r1 I:float) * (r2 I:float) \l0x003b: CAST (r1 I:int) = (int) (r1 I:float) \l0x003c: CAST (r1 I:short) = (short) (r1 I:int) \l0x003d: IPUT  (r1 I:short), (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mWidth short \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fm' android.graphics.Paint$FontMetricsInt)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0059  (LINE:94)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: IGET  (r1 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:95)\l0x0043: IGET  (r1 I:int) = (r1 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.ascent int \l0x0045: IPUT  (r1 I:int), (r8 I:android.graphics.Paint$FontMetricsInt A[D('fm' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.ascent int \l0x0047: IGET  (r1 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:96)\l0x0049: IGET  (r1 I:int) = (r1 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.descent int \l0x004b: IPUT  (r1 I:int), (r8 I:android.graphics.Paint$FontMetricsInt A[D('fm' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.descent int \l0x004d: IGET  (r1 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:97)\l0x004f: IGET  (r1 I:int) = (r1 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.top int \l0x0051: IPUT  (r1 I:int), (r8 I:android.graphics.Paint$FontMetricsInt A[D('fm' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.top int \l0x0053: IGET  (r1 I:android.graphics.Paint$FontMetricsInt) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mTmpFontMetrics android.graphics.Paint$FontMetricsInt  (LINE:98)\l0x0055: IGET  (r1 I:int) = (r1 I:android.graphics.Paint$FontMetricsInt) android.graphics.Paint.FontMetricsInt.bottom int \l0x0057: IPUT  (r1 I:int), (r8 I:android.graphics.Paint$FontMetricsInt A[D('fm' android.graphics.Paint$FontMetricsInt)]) android.graphics.Paint.FontMetricsInt.bottom int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|0x0059: IGET  (r1 I:short) = (r3 I:androidx.emoji2.text.EmojiSpan) androidx.emoji2.text.EmojiSpan.mWidth short  (LINE:101)\l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|RETURN\l|0x005b: RETURN  (r1 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.EmojiSpan.getSize((r3 'this' I:androidx.emoji2.text.EmojiSpan A[IMMUTABLE_TYPE, THIS]), (r4 I:android.graphics.Paint A[D('paint' android.graphics.Paint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Paint$FontMetricsInt A[D('fm' android.graphics.Paint$FontMetricsInt), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x003f \-\> B:12:0x0059\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x005b: r0 'fontHeight' I\l  \-1 \-0x005b: r4 'paint' Landroid\/graphics\/Paint;\l  \-1 \-0x005b: r5 'text' Ljava\/lang\/CharSequence;\l  \-1 \-0x005b: r6 'start' I\l  \-1 \-0x005b: r7 'end' I\l  \-1 \-0x005b: r8 'fm' Landroid\/graphics\/Paint$FontMetricsInt;\lMETHOD_OVERRIDE: [ClspMth\{android.text.style.ReplacementSpan.getSize(android.graphics.Paint, java.lang.CharSequence, int, int, android.graphics.Paint$FontMetricsInt):int\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

