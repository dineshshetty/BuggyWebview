digraph "CFG forandroidx.emoji2.text.MetadataListReader.findOffsetInfo(Landroidx\/emoji2\/text\/MetadataListReader$OpenTypeReader;)Landroidx\/emoji2\/text\/MetadataListReader$OffsetInfo;" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:120)\l0x0001: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r0 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)]\l0x0004: INVOKE  (r1 I:int) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readUnsignedShort():int A[MD:():int throws java.io.IOException (m)] (LINE:122)\l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"Cannot read metadata.\"  (LINE:123)\l0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (100 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|0x000c: IF  (r1 I:??[int, byte, short, char] A[D('tableCount' int)]) \> (r3 I:??[int, byte, short, char])  \-\> B:57:0x0076 \l}"];
Node_36 [shape=record,label="{36\:\ 0x000e|0x000e: CONST  (r3 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char])  (LINE:128)\l0x000f: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r3 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)]\l0x0012: CONST  (r3 I:??[long, double]) = (\-1 ??[long, double])  (LINE:130)\l0x0014: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:131)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0015|LOOP_START\lLOOP:0: B:37:0x0015\-\>B:41:0x002c\l|0x0015: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('tableCount' int)])  \-\> B:59:0x002f \l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: INVOKE  (r6 I:int) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readTag():int A[MD:():int throws java.io.IOException (m)] (LINE:132)\l0x001b: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r0 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)] (LINE:134)\l0x001e: INVOKE  (r7 I:long) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readUnsignedInt():long A[MD:():long throws java.io.IOException (m)] (LINE:135)\l0x0022: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r0 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)] (LINE:137)\l0x0025: CONST  (r9 I:??[int, float, short, byte, char]) = (1835365473(0x6d657461, float:4.4382975E27) ??[int, float, short, byte, char])  (LINE:138)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tag' int)])  \-\> B:41:0x002c \l}"];
Node_41 [shape=record,label="{41\:\ 0x002c|LOOP_END\lLOOP:0: B:37:0x0015\-\>B:41:0x002c\l|0x002c: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:131)\l}"];
Node_60 [shape=record,label="{60\:\ 0x002a|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x002a|0x002a: MOVE  (r3 I:??[long, double] A[D('metaOffset' long)]) = (r7 I:??[long, double] A[D('offset' long)])  (LINE:139)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|0x002f: CONST  (r5 I:??[long, double] A[D('i' int)]) = (\-1 ??[long, double])  (LINE:144)\l0x0031: CMP_L  (r0 I:int) = (r3 I:long A[D('metaOffset' long)]), (r5 I:long) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0070 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|0x0035: INVOKE  (r5 I:long) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.getPosition():long A[MD:():long (m)] (LINE:146)\l0x0039: ARITH  (r5 I:long) = (r3 I:long A[D('metaOffset' long)]) \- (r5 I:long) \l0x003b: CAST (r0 I:int) = (int) (r5 I:long) \l0x003c: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r0 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)]\l0x003f: CONST  (r0 I:??[int, float, short, byte, char]) = (12 ??[int, float, short, byte, char])  (LINE:148)\l0x0041: INVOKE  \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l  (r0 I:int)\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void A[MD:(int):void throws java.io.IOException (m)]\l0x0044: INVOKE  (r5 I:long) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readUnsignedInt():long A[MD:():long throws java.io.IOException (m)] (LINE:150)\l0x0048: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:151)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0049|LOOP_START\lLOOP:1: B:45:0x0049\-\>B:52:0x0065\l|0x0049: CAST (r7 I:long) = (long) (r0 I:int A[D('i' int)]) \l0x004a: CMP_L  (r9 I:int) = (r7 I:long), (r5 I:long A[D('mapsCount' long)]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x004c|0x004c: IF  (r9 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:62:0x0070 \l}"];
Node_47 [shape=record,label="{47\:\ 0x004e|0x004e: INVOKE  (r7 I:int) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readTag():int A[MD:():int throws java.io.IOException (m)] (LINE:152)\l0x0052: INVOKE  (r8 I:long) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readUnsignedInt():long A[MD:():long throws java.io.IOException (m)] (LINE:153)\l0x0056: INVOKE  (r10 I:long) = \l  (r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader)])\l type: INTERFACE call: androidx.emoji2.text.MetadataListReader.OpenTypeReader.readUnsignedInt():long A[MD:():long throws java.io.IOException (m)] (LINE:154)\l0x005a: CONST  (r12 I:??[int, float, short, byte, char]) = (1164798569(0x456d6a69, float:3798.6506) ??[int, float, short, byte, char])  (LINE:155)\l}"];
Node_48 [shape=record,label="{48\:\ 0x005d|0x005d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tag' int)])  \-\> B:63:0x0068 \l}"];
Node_49 [shape=record,label="{49\:\ 0x005f|0x005f: CONST  (r12 I:??[int, float, short, byte, char]) = (1701669481(0x656d6a69, float:7.0072736E22) ??[int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0062|0x0062: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tag' int)])  \-\> B:52:0x0065 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0065|LOOP_END\lLOOP:1: B:45:0x0049\-\>B:52:0x0065\l|0x0065: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:151)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0068|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0068|0x0068: NEW_INSTANCE  (r2 I:androidx.emoji2.text.MetadataListReader$OffsetInfo) =  androidx.emoji2.text.MetadataListReader$OffsetInfo  (LINE:156)\l0x006a: ARITH  (r12 I:long) = (r8 I:long A[D('dataOffset' long)]) + (r3 I:long A[D('metaOffset' long)]) \l0x006c: INVOKE  (r2 I:androidx.emoji2.text.MetadataListReader$OffsetInfo), (r12 I:long), (r10 I:long A[D('dataLength' long)]) type: DIRECT call: androidx.emoji2.text.MetadataListReader.OffsetInfo.\<init\>(long, long):void A[MD:(long, long):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x006f|RETURN\l|0x006f: RETURN  (r2 I:androidx.emoji2.text.MetadataListReader$OffsetInfo) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,label="{63\:\ 0x0068|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0070|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0070|0x0070: NEW_INSTANCE  (r0 I:java.io.IOException A[D('i' int)]) =  java.io.IOException  (LINE:161)\l0x0072: INVOKE  (r0 I:java.io.IOException), (r2 I:java.lang.String) type: DIRECT call: java.io.IOException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0075|0x0075: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_59 [shape=record,label="{59\:\ 0x002f|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0076|0x0076: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException  (LINE:125)\l0x0078: INVOKE  (r0 I:java.io.IOException), (r2 I:java.lang.String) type: DIRECT call: java.io.IOException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x007b|0x007b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static androidx.emoji2.text.MetadataListReader$OffsetInfo androidx.emoji2.text.MetadataListReader.findOffsetInfo((r14 I:androidx.emoji2.text.MetadataListReader$OpenTypeReader A[D('reader' androidx.emoji2.text.MetadataListReader$OpenTypeReader), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:52:0x0065 \-\> B:45:0x0049, CROSS_EDGE: B:48:0x005d \-\> B:53:0x0068, CROSS_EDGE: B:56:0x0075 \-\> B:33:?, CROSS_EDGE: B:43:0x0033 \-\> B:55:0x0070, BACK_EDGE: B:41:0x002c \-\> B:37:0x0015, CROSS_EDGE: B:37:0x0015 \-\> B:42:0x002f, CROSS_EDGE: B:58:0x007b \-\> B:33:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x002c: r6 'tag' I\l  0x0022\-0x002c: r7 'offset' J\l  0x0015\-0x002f: r5 'i' I\l  0x0052\-0x0065: r7 'tag' I\l  0x0056\-0x0065: r8 'dataOffset' J\l  0x005a\-0x0065: r10 'dataLength' J\l  0x0049\-0x0070: r0 'i' I\l  0x0048\-0x0070: r5 'mapsCount' J\l  0x0068\-0x0070: r7 'tag' I\l  0x0068\-0x0070: r8 'dataOffset' J\l  0x0068\-0x0070: r10 'dataLength' J\l  0x0014\-0x0076: r3 'metaOffset' J\l  0x0008\-0x007b: r1 'tableCount' I\l  \-1 \-0x007b: r14 'reader' Landroidx\/emoji2\/text\/MetadataListReader$OpenTypeReader;\lEXCEPTIONS:[Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_57;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_59;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_39 -> Node_60[style=dashed];
Node_41 -> Node_37;
Node_60 -> Node_40;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_55;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_62;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_63;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_61[style=dashed];
Node_52 -> Node_45;
Node_61 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_33;
Node_63 -> Node_53;
Node_62 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_33;
Node_59 -> Node_42;
Node_57 -> Node_58;
Node_58 -> Node_33;
}

