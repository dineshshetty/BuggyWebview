digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Map.toString(Ljava\/lang\/StringBuilder;)Ljava\/lang\/StringBuilder;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|r6.append(\"\{ \")\landroidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector r0 = keys()\lint r1 = size()\landroidx.emoji2.text.flatbuffer.FlexBuffers$Vector r2 = values()\lr3 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|LOOP_START\lLOOP:0: B:16:0x0012\-\>B:20:0x003d\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v3 'i' int) binds: [B:15:0x0000, B:20:0x003d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r1) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|r6.append(kotlin.text.Typography.quote)\lr6.append(r0.get(r3).toString())\lr6.append(\"\" : \")\lr6.append(r2.get(r3).toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|if (r3 == (r1 + (\-1))) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|r6.append(\", \")\l}"];
Node_24 [shape=record,label="{24\:\ 0x003d|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|LOOP_END\lLOOP:0: B:16:0x0012\-\>B:20:0x003d\l|int r3 = r3 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x003d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0040|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|r6.append(\" \}\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x0045|RETURN\l|return r6\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.StringBuilder androidx.emoji2.text.flatbuffer.FlexBuffers.Map.toString((r5v0 'this' androidx.emoji2.text.flatbuffer.FlexBuffers$Map A[IMMUTABLE_TYPE, THIS]), (r6v0 'builder' java.lang.StringBuilder A[D('builder' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x003d \-\> B:16:0x0012, CROSS_EDGE: B:18:0x0036 \-\> B:20:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.FlexBuffers.Object.toString(java.lang.StringBuilder):java.lang.StringBuilder]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

