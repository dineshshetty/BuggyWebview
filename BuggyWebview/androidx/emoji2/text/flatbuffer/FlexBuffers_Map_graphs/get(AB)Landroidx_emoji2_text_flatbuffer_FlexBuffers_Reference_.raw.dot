digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Map.get([B)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffers$Reference;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Map) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Map.keys():androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector A[MD:():androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector (m)] (LINE:847)\l0x0004: INVOKE  (r1 I:int) = \l  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector A[D('keys' androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector)])\l type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.size():int A[MD:():int (m)] (LINE:848)\l0x0008: INVOKE  (r2 I:int) = \l  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Map)\l  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector A[D('keys' androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector)])\l  (r5 I:byte[] A[D('key' byte[])])\l type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffers.Map.binarySearch(androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector, byte[]):int A[MD:(androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector, byte[]):int (m)] (LINE:849)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000c|0x000c: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:16:0x0015  (LINE:850)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|0x000e: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:16:0x0015 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: INVOKE  (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Map), (r2 I:int A[D('index' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Map.get(int):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference A[MD:(int):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference (m)] (LINE:851)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|RETURN\l|0x0014: RETURN  (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|0x0015: INVOKE  (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) =  type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Reference.access$600():androidx.emoji2.text.flatbuffer.FlexBuffers$Reference A[MD:():androidx.emoji2.text.flatbuffer.FlexBuffers$Reference (m)] (LINE:853)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|0x0019: RETURN  (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) \l}"];
MethodNode[shape=record,label="{public androidx.emoji2.text.flatbuffer.FlexBuffers$Reference androidx.emoji2.text.flatbuffer.FlexBuffers.Map.get((r4 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$Map A[IMMUTABLE_TYPE, THIS]), (r5 I:byte[] A[D('key' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0019 \-\> B:10:?, CROSS_EDGE: B:12:0x000c \-\> B:16:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x0019: r0 'keys' Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffers$KeyVector;\l  0x0008\-0x0019: r1 'size' I\l  0x000c\-0x0019: r2 'index' I\l  \-1 \-0x0019: r5 'key' [B\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

