digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable()I" {
subgraph cluster_Region_1582165042 {
label = "R(1:(2:(1:48)|(9:5|(1:9)|11|(2:13|17)|21|(1:(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)))|(1:36)(3:40|(1:42)|43)|37|38)))";
node [shape=record,color=blue];
subgraph cluster_Region_2119503483 {
label = "R(2:(1:48)|(9:5|(1:9)|11|(2:13|17)|21|(1:(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)))|(1:36)(3:40|(1:42)|43)|37|38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1827092732 {
label = "IF [B:53:0x0002, B:55:0x0006] THEN: R(1:48) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0002|if (r13.vtable == null) goto L47\l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|ADDED_TO_REGION\l|if (r13.nested == false) goto L47\l}"];
subgraph cluster_Region_1467875370 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_90 [shape=record,label="{90\:\ 0x00d2|throw new java.lang.AssertionError(\"FlatBuffers: endTable called without startTable\")\l}"];
}
}
subgraph cluster_Region_1059666536 {
label = "R(9:5|(1:9)|11|(2:13|17)|21|(1:(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)))|(1:36)(3:40|(1:42)|43)|37|38)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0008|addInt(0)\lint int r1 = offset()\lint int r2 = r13.vtable_in_use \- 1\l}"];
subgraph cluster_LoopRegion_320390028 {
label = "LOOP:0: (1:9)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0014|LOOP_START\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v8 'i' int) binds: [B:56:0x0008, B:60:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= 0) goto L7\l}"];
Node_59 [shape=record,label="{59\:\ 0x001a|ADDED_TO_REGION\l|if (r13.vtable[r2] == 0) goto L9\l}"];
subgraph cluster_Region_266215663 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x001c|LOOP_END\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\l|r2\-\-\l}"];
}
}
Node_61 [shape=record,label="{61\:\ 0x001f|int int r3 = r2 + 1\l}"];
subgraph cluster_LoopRegion_15844535 {
label = "LOOP:1: (2:13|17)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0021|LOOP_START\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\lPHI: r2 \l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v7 'i' int) binds: [B:61:0x001f, B:67:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= 0) goto L13\l}"];
subgraph cluster_Region_1637853360 {
label = "R(2:13|17)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x0023|int[] int[] r4 = r13.vtable\l}"];
Node_67 [shape=record,label="{67\:\ 0x002f|LOOP_END\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\lPHI: r4 \l  PHI: (r4v3 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|short short r4 = (short) (r4[r2] != 0 ? r1 \- r4[r2] : 0)\laddShort(r4)\lr2\-\-\l}"];
}
}
Node_68 [shape=record,label="{68\:\ 0x0036|addShort((short) (r1 \- r13.object_start))\laddShort((short) ((r3 + 2) * 2))\lint r5 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1726171787 {
label = "LOOP:2: (1:(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)))";
node [shape=record,color=blue];
subgraph cluster_Region_806598394 {
label = "R(1:(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)))";
node [shape=record,color=blue];
subgraph cluster_Region_1709594844 {
label = "R(2:(1:45)|(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1226663574 {
label = "IF [B:70:0x004b] THEN: R(1:45) ELSE: null";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x004b|if (r2 \>= r13.num_vtables) goto L45\l}"];
subgraph cluster_Region_1119779610 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x0089|SYNTHETIC\lEDGE_INSN: B:97:0x0089\-\>B:81:0x0089 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1195890357 {
label = "R(3:24|(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))|32)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x004d|int int r6 = r13.f83bb.capacity() \- r13.vtables[r2]\lint int r7 = r13.space\lshort short r8 = r13.f83bb.getShort(r6)\l}"];
subgraph cluster_Region_1047910100 {
label = "R(1:(4:26|(1:(2:(1:1)|(1:30)))|34|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1352258796 {
label = "IF [B:72:0x0066] THEN: R(4:26|(1:(2:(1:1)|(1:30)))|34|1) ELSE: null";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x0066|if (r8 == r13.f83bb.getShort(r7)) goto L26\l}"];
subgraph cluster_Region_1823604729 {
label = "R(4:26|(1:(2:(1:1)|(1:30)))|34|1)";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0068|int r9 = 2\l}"];
subgraph cluster_LoopRegion_2058392394 {
label = "LOOP:3: (1:(2:(1:1)|(1:30)))";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0069|LOOP_START\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\lPHI: r9 \l  PHI: (r9v3 'j' int) = (r9v2 'j' int), (r9v5 'j' int) binds: [B:73:0x0068, B:78:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \< r8) goto L28\l}"];
subgraph cluster_Region_335287174 {
label = "R(1:(2:(1:1)|(1:30)))";
node [shape=record,color=blue];
subgraph cluster_Region_1149995421 {
label = "R(2:(1:1)|(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1913796078 {
label = "IF [B:76:0x007b] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x007b|EDGE_INSN: B:76:0x007b\-\>B:99:0x0086 ?: BREAK  \l|if (r13.f83bb.getShort(r6 + r9) != r13.f83bb.getShort(r7 + r9)) goto L31\l}"];
subgraph cluster_Region_1968983229 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1695541172 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_1018027986 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x007e|LOOP_END\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\l|r9 += 2\l}"];
}
}
}
}
Node_79 [shape=record,label="{79\:\ 0x0081|EDGE_INSN: B:79:0x0081\-\>B:81:0x0089 ?: BREAK  \l|r5 = r13.vtables[r2]\l}"];
Node_InsnContainer_379365552 [shape=record,label="{|break loop2\l}"];
}
}
}
Node_80 [shape=record,label="{80\:\ 0x0086|LOOP_END\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\l|r2++\l}"];
}
}
}
}
subgraph cluster_IfRegion_303457240 {
label = "IF [B:81:0x0089] THEN: R(1:36) ELSE: R(3:40|(1:42)|43)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0089|EDGE_INSN: B:79:0x0081\-\>B:81:0x0089 ?: BREAK  , EDGE_INSN: B:97:0x0089\-\>B:81:0x0089 ?: BREAK  \lPHI: r5 \l  PHI: (r5v7 'existing_vtable' int) = (r5v6 'existing_vtable' int), (r5v8 'existing_vtable' int) binds: [B:97:0x0089, B:79:0x0081] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 != 0) goto L36\l}"];
subgraph cluster_Region_230938423 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x008b|int int r6 = r13.f83bb.capacity() \- r1\lr13.space = r6\lr13.f83bb.putInt(r6, r5 \- r1)\l}"];
}
subgraph cluster_Region_2043850695 {
label = "R(3:40|(1:42)|43)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x009c|int int r6 = r13.num_vtables\lint[] int[] r7 = r13.vtables\l}"];
subgraph cluster_IfRegion_707794555 {
label = "IF [B:84:0x00a1] THEN: R(1:42) ELSE: null";
node [shape=record,color=blue];
Node_84 [shape=record,label="{84\:\ 0x00a1|if (r6 == r7.length) goto L42\l}"];
subgraph cluster_Region_186234950 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x00a3|r13.vtables = java.util.Arrays.copyOf(r7, r6 * 2)\l}"];
}
}
Node_86 [shape=record,label="{86\:\ 0x00ab|int[] int[] r6 = r13.vtables\lint int r7 = r13.num_vtables\lr13.num_vtables = r7 + 1\lr6[r7] = offset()\ljava.nio.ByteBuffer java.nio.ByteBuffer r6 = r13.f83bb\lr6.putInt(r6.capacity() \- r1, offset() \- r1)\l}"];
}
}
Node_87 [shape=record,label="{87\:\ 0x00c8|r13.nested = false\l}"];
Node_88 [shape=record,label="{88\:\ 0x00ca|RETURN\l|return r1\l}"];
}
}
}
Node_50 [shape=record,color=red,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0000}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0004}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0016}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x001f|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0027}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0029}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x002f|SYNTHETIC\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x002e}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x002f|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0036|SYNTHETIC\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0049|LOOP_START\lLOOP_LABEL: LOOP:2: B:69:0x0049\-\>B:80:0x0086\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\lPHI: r2 \l  PHI: (r2v5 'i' int) = (r2v4 'i' int), (r2v6 'i' int) binds: [B:68:0x0036, B:80:0x0086] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x006b}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x0086|SYNTHETIC\lEDGE_INSN: B:76:0x007b\-\>B:99:0x0086 ?: BREAK  \l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x0081|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x0086|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x001f|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x00cb}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable((r13v0 'this' androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x001c \-\> B:57:0x0014, BACK_EDGE: B:67:0x002f \-\> B:62:0x0021, CROSS_EDGE: B:66:0x002e \-\> B:67:0x002f, BACK_EDGE: B:78:0x007e \-\> B:74:0x0069, BACK_EDGE: B:80:0x0086 \-\> B:69:0x0049, CROSS_EDGE: B:86:0x00ab \-\> B:87:0x00c8, CROSS_EDGE: B:84:0x00a1 \-\> B:86:0x00ab, CROSS_EDGE: B:72:0x0066 \-\> B:80:0x0086, CROSS_EDGE: B:70:0x004b \-\> B:81:0x0089, CROSS_EDGE: B:57:0x0014 \-\> B:61:0x001f, CROSS_EDGE: B:90:0x00d2 \-\> B:51:?, CROSS_EDGE: B:53:0x0002 \-\> B:89:0x00cb\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_50;Node_53 -> Node_54[style=dashed];
Node_53 -> Node_89;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_89;
Node_90 -> Node_51;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_91[style=dashed];
Node_59 -> Node_60;
Node_59 -> Node_92[style=dashed];
Node_60 -> Node_57;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_62 -> Node_93[style=dashed];
Node_63 -> Node_64;
Node_67 -> Node_62;
Node_68 -> Node_69;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_97;
Node_97 -> Node_81;
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_72 -> Node_98[style=dashed];
Node_73 -> Node_74;
Node_74 -> Node_75;
Node_74 -> Node_96[style=dashed];
Node_76 -> Node_78[style=dashed];
Node_76 -> Node_99;
Node_78 -> Node_74;
Node_79 -> Node_81;
Node_80 -> Node_69;
Node_81 -> Node_82;
Node_81 -> Node_83[style=dashed];
Node_82 -> Node_87;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_84 -> Node_86[style=dashed];
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_58 -> Node_59;
Node_92 -> Node_61;
Node_64 -> Node_65;
Node_64 -> Node_66;
Node_65 -> Node_95;
Node_95 -> Node_67;
Node_66 -> Node_94;
Node_94 -> Node_67;
Node_93 -> Node_68;
Node_69 -> Node_70;
Node_75 -> Node_76;
Node_99 -> Node_80;
Node_96 -> Node_79;
Node_98 -> Node_80;
Node_91 -> Node_61;
Node_89 -> Node_90;
}

