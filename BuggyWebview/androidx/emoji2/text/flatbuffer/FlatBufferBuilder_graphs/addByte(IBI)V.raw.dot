digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.addByte(IBI)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r1 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.force_defaults boolean  (LINE:708)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0006 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('x' byte)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('d' int)])  \-\> B:15:? \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000c: RETURN   A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: INVOKE  (r1 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r3 I:byte A[D('x' byte)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addByte(byte):void A[MD:(byte):void (m)]\l0x0009: INVOKE  (r1 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r2 I:int A[D('o' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.slot(int):void A[MD:(int):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\lORIG_RETURN\l|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addByte((r1 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('o' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:byte A[D('x' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('d' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0004 \-\> B:14:0x000c, CROSS_EDGE: B:11:0x0002 \-\> B:13:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r2 'o' I\l  \-1 \-0x000c: r3 'x' B\l  \-1 \-0x000c: r4 'd' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

