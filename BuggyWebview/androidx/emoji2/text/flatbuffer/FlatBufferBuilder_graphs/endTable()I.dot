digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable()I" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000}"];
Node_53 [shape=record,label="{53\:\ 0x0002|if (r13.vtable == null) goto L47\l}"];
Node_54 [shape=record,label="{54\:\ 0x0004}"];
Node_55 [shape=record,label="{55\:\ 0x0006|if (r13.nested == false) goto L47\l}"];
Node_56 [shape=record,label="{56\:\ 0x0008|addInt(0)\lint r1 = offset()\lint r2 = r13.vtable_in_use + (\-1)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0014|LOOP_START\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v8 'i' int) binds: [B:56:0x0008, B:60:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L46\l}"];
Node_58 [shape=record,label="{58\:\ 0x0016}"];
Node_59 [shape=record,label="{59\:\ 0x001a|if (r13.vtable[r2] != 0) goto L10\l}"];
Node_60 [shape=record,label="{60\:\ 0x001c|LOOP_END\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\l|int r2 = r2 + (\-1)\l}"];
Node_92 [shape=record,label="{92\:\ 0x001f|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x001f|int r3 = r2 + 1\l}"];
Node_62 [shape=record,label="{62\:\ 0x0021|LOOP_START\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\lPHI: r2 \l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v7 'i' int) binds: [B:61:0x001f, B:67:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L20\l}"];
Node_63 [shape=record,label="{63\:\ 0x0023|int[] r4 = r13.vtable\l}"];
Node_64 [shape=record,label="{64\:\ 0x0027|if (r4[r2] == 0) goto L18\l}"];
Node_65 [shape=record,label="{65\:\ 0x0029|int r4 = r1 \- r4[r2]\l}"];
Node_95 [shape=record,label="{95\:\ 0x002f|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x002f|LOOP_END\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\lPHI: r4 \l  PHI: (r4v3 int) = (r4v2 int), (r4v6 int) binds: [B:94:0x002f, B:95:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|short r4 = (short) r4\laddShort(r4)\lint r2 = r2 + (\-1)\l}"];
Node_66 [shape=record,label="{66\:\ 0x002e|r4 = 0\l}"];
Node_94 [shape=record,label="{94\:\ 0x002f|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0036|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0036|addShort((short) (r1 \- r13.object_start))\laddShort((short) ((r3 + 2) * 2))\lr5 = 0\lr2 = 0\l}"];
Node_69 [shape=record,label="{69\:\ 0x0049|LOOP_START\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\lPHI: r2 \l  PHI: (r2v5 'i' int) = (r2v4 'i' int), (r2v6 'i' int) binds: [B:68:0x0036, B:80:0x0086] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_70 [shape=record,label="{70\:\ 0x004b|if (r2 \>= r13.num_vtables) goto L45\l}"];
Node_71 [shape=record,label="{71\:\ 0x004d|int r6 = r13.f83bb.capacity() \- r13.vtables[r2]\lint r7 = r13.space\lshort r8 = r13.f83bb.getShort(r6)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0066|if (r8 != r13.f83bb.getShort(r7)) goto L44\l}"];
Node_73 [shape=record,label="{73\:\ 0x0068|r9 = 2\l}"];
Node_74 [shape=record,label="{74\:\ 0x0069|LOOP_START\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\lPHI: r9 \l  PHI: (r9v3 'j' int) = (r9v2 'j' int), (r9v5 'j' int) binds: [B:73:0x0068, B:78:0x007e] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \>= r8) goto L33\l}"];
Node_75 [shape=record,label="{75\:\ 0x006b}"];
Node_76 [shape=record,label="{76\:\ 0x007b|if (r13.f83bb.getShort(r6 + r9) == r13.f83bb.getShort(r7 + r9)) goto L30\l}"];
Node_78 [shape=record,label="{78\:\ 0x007e|LOOP_END\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\l|int r9 = r9 + 2\l}"];
Node_99 [shape=record,label="{99\:\ 0x0086|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0086|LOOP_END\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\l|int r2 = r2 + 1\l}"];
Node_96 [shape=record,label="{96\:\ 0x0081|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0081|r5 = r13.vtables[r2]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0089|PHI: r5 \l  PHI: (r5v7 'existing_vtable' int) = (r5v6 'existing_vtable' int), (r5v8 'existing_vtable' int) binds: [B:97:0x0089, B:79:0x0081] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == 0) goto L40\l}"];
Node_82 [shape=record,label="{82\:\ 0x008b|int r6 = r13.f83bb.capacity() \- r1\lr13.space = r6\lr13.f83bb.putInt(r6, r5 \- r1)\l}"];
Node_87 [shape=record,label="{87\:\ 0x00c8|r13.nested = false\l}"];
Node_88 [shape=record,label="{88\:\ 0x00ca|RETURN\l|return r1\l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_83 [shape=record,label="{83\:\ 0x009c|int r6 = r13.num_vtables\lint[] r7 = r13.vtables\l}"];
Node_84 [shape=record,label="{84\:\ 0x00a1|if (r6 != r7.length) goto L43\l}"];
Node_85 [shape=record,label="{85\:\ 0x00a3|r13.vtables = java.util.Arrays.copyOf(r7, r6 * 2)\l}"];
Node_86 [shape=record,label="{86\:\ 0x00ab|int[] r6 = r13.vtables\lint r7 = r13.num_vtables\lr13.num_vtables = r7 + 1\lr6[r7] = offset()\ljava.nio.ByteBuffer r6 = r13.f83bb\lr6.putInt(r6.capacity() \- r1, offset() \- r1)\l}"];
Node_98 [shape=record,label="{98\:\ 0x0086|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x0089|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x001f|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x00cb}"];
Node_90 [shape=record,label="{90\:\ 0x00d2|throw new java.lang.AssertionError(\"FlatBuffers: endTable called without startTable\")\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable((r13v0 'this' androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x001c \-\> B:57:0x0014, BACK_EDGE: B:67:0x002f \-\> B:62:0x0021, CROSS_EDGE: B:66:0x002e \-\> B:67:0x002f, BACK_EDGE: B:78:0x007e \-\> B:74:0x0069, BACK_EDGE: B:80:0x0086 \-\> B:69:0x0049, CROSS_EDGE: B:86:0x00ab \-\> B:87:0x00c8, CROSS_EDGE: B:84:0x00a1 \-\> B:86:0x00ab, CROSS_EDGE: B:72:0x0066 \-\> B:80:0x0086, CROSS_EDGE: B:70:0x004b \-\> B:81:0x0089, CROSS_EDGE: B:57:0x0014 \-\> B:61:0x001f, CROSS_EDGE: B:90:0x00d2 \-\> B:51:?, CROSS_EDGE: B:53:0x0002 \-\> B:89:0x00cb\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_89;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_89;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_91;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_92;
Node_60 -> Node_57;
Node_92 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_93;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_95;
Node_95 -> Node_67;
Node_67 -> Node_62;
Node_66 -> Node_94;
Node_94 -> Node_67;
Node_93 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_97;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_98;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_96;
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_99[style=dashed];
Node_78 -> Node_74;
Node_99 -> Node_80;
Node_80 -> Node_69;
Node_96 -> Node_79;
Node_79 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_51;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_98 -> Node_80;
Node_97 -> Node_81;
Node_91 -> Node_61;
Node_89 -> Node_90;
Node_90 -> Node_51;
}

