digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.prep(II)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.minalign int  (LINE:281)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r6 I:??[int, byte, short, char] A[D('size' int)]) \<= (r0 I:??[int, byte, short, char])  \-\> B:22:0x0006 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IPUT  (r6 I:int A[D('size' int)]), (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.minalign int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: IGET  (r0 I:java.nio.ByteBuffer) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:284)\l0x0008: INVOKE  (r0 I:int) = (r0 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x000c: IGET  (r1 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x000e: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x000f: ARITH  (r0 I:int) = (r0 I:int) + (r7 I:int A[D('additional_bytes' int)]) \l0x0010: NOT  (r0 I:int) = (r0 I:int) \l0x0011: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0013: ARITH  (r1 I:int) = (r6 I:int A[D('size' int)]) + (\-1 int) \l0x0015: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|LOOP_START\lLOOP:0: B:23:0x0016\-\>B:28:0x0034\l|0x0016: IGET  (r1 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int  (LINE:286)\l0x0018: ARITH  (r2 I:int) = (r0 I:int A[D('align_size' int)]) + (r6 I:int A[D('size' int)]) \l0x001a: ARITH  (r2 I:int) = (r2 I:int) + (r7 I:int A[D('additional_bytes' int)]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: IF  (r1 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:31:0x0041 \l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: IGET  (r1 I:java.nio.ByteBuffer) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:287)\l0x001f: INVOKE  (r1 I:int) = (r1 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x0023: IGET  (r2 I:java.nio.ByteBuffer) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:288)\l0x0025: IGET  (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb_factory androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory  (LINE:289)\l0x0027: INVOKE  (r3 I:java.nio.ByteBuffer) = \l  (r2 I:java.nio.ByteBuffer A[D('old' java.nio.ByteBuffer)])\l  (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory)\l type: STATIC call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.growByteBuffer(java.nio.ByteBuffer, androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory):java.nio.ByteBuffer A[MD:(java.nio.ByteBuffer, androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory):java.nio.ByteBuffer (m)]\l0x002b: IPUT  (r3 I:java.nio.ByteBuffer), (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer \l}"];
Node_26 [shape=record,label="{26\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('old' java.nio.ByteBuffer)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0034  (LINE:290)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|0x002f: IGET  (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb_factory androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory  (LINE:291)\l0x0031: INVOKE  \l  (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory)\l  (r2 I:java.nio.ByteBuffer A[D('old' java.nio.ByteBuffer)])\l type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.ByteBufferFactory.releaseByteBuffer(java.nio.ByteBuffer):void A[MD:(java.nio.ByteBuffer):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0034|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0034|LOOP_END\lLOOP:0: B:23:0x0016\-\>B:28:0x0034\l|0x0034: IGET  (r3 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int  (LINE:293)\l0x0036: IGET  (r4 I:java.nio.ByteBuffer) = (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer \l0x0038: INVOKE  (r4 I:int) = (r4 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x003c: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int A[D('old_buf_size' int)]) \l0x003d: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x003e: IPUT  (r3 I:int), (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0041|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0041|0x0041: INVOKE  (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r0 I:int A[D('align_size' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.pad(int):void A[MD:(int):void (m)] (LINE:295)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0044|RETURN\l|0x0044: RETURN    (LINE:296)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.FlatBufferBuilder.prep((r5 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('additional_bytes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0034 \-\> B:23:0x0016, CROSS_EDGE: B:26:0x002d \-\> B:28:0x0034, CROSS_EDGE: B:20:0x0002 \-\> B:22:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0023\-0x0040: r1 'old_buf_size' I\l  0x0025\-0x0040: r2 'old' Ljava\/nio\/ByteBuffer;\l  0x0016\-0x0044: r0 'align_size' I\l  \-1 \-0x0044: r6 'size' I\l  \-1 \-0x0044: r7 'additional_bytes' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_32;
Node_32 -> Node_28;
Node_28 -> Node_23;
Node_33 -> Node_28;
Node_31 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
}

