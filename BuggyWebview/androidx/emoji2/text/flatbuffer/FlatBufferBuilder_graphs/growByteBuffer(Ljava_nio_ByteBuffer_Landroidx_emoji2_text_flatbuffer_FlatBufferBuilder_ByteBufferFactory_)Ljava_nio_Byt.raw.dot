digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.growByteBuffer(Ljava\/nio\/ByteBuffer;Landroidx\/emoji2\/text\/flatbuffer\/FlatBufferBuilder$ByteBufferFactory;)Ljava\/nio\/ByteBuffer;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)] (LINE:239)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1073741824(0xffffffffc0000000, float:\-2.0) ??[int, float, short, byte, char])  (LINE:240)\l0x0006: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (r0 I:??[int, boolean, short, byte, char] A[D('old_buf_size' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0028 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('old_buf_size' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000d  (LINE:242)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:243)\l0x0010: INVOKE  (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]), (r2 I:int) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l0x0013: INVOKE  (r2 I:java.nio.ByteBuffer) = \l  (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory A[D('bb_factory' androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory)])\l  (r1 I:int A[D('new_buf_size' int)])\l type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.ByteBufferFactory.newByteBuffer(int):java.nio.ByteBuffer A[MD:(int):java.nio.ByteBuffer (m)] (LINE:244)\l0x0017: INVOKE  (r3 I:java.nio.Buffer) = (r2 I:java.nio.ByteBuffer A[D('nbb' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.clear():java.nio.Buffer A[MD:():java.nio.Buffer (c)] (LINE:245)\l0x001b: INVOKE  (r1 I:int A[D('new_buf_size' int)]) = (r3 I:java.nio.Buffer) type: VIRTUAL call: java.nio.Buffer.capacity():int A[MD:():int (c)]\l0x001f: ARITH  (r3 I:int) = (r1 I:int A[D('new_buf_size' int)]) \- (r0 I:int A[D('old_buf_size' int)])  (LINE:246)\l0x0021: INVOKE  (r2 I:java.nio.ByteBuffer A[D('nbb' java.nio.ByteBuffer)]), (r3 I:int) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l0x0024: INVOKE  (r2 I:java.nio.ByteBuffer A[D('nbb' java.nio.ByteBuffer)]), (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.put(java.nio.ByteBuffer):java.nio.ByteBuffer A[MD:(java.nio.ByteBuffer):java.nio.ByteBuffer (c)] (LINE:247)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|RETURN\l|0x0027: RETURN  (r2 I:java.nio.ByteBuffer A[D('nbb' java.nio.ByteBuffer)])  (LINE:248)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000d|0x000d: ARITH  (r1 I:int) = (r0 I:int A[D('old_buf_size' int)]) \<\< (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0028|0x0028: NEW_INSTANCE  (r1 I:java.lang.AssertionError A[D('new_buf_size' int)]) =  java.lang.AssertionError  (LINE:241)\l0x002a: CONST_STR  (r2 I:java.lang.String) =  \"FlatBuffers: cannot grow buffer beyond 2 gigabytes.\" \l0x002c: INVOKE  (r1 I:java.lang.AssertionError), (r2 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002f|0x002f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static java.nio.ByteBuffer androidx.emoji2.text.flatbuffer.FlatBufferBuilder.growByteBuffer((r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory A[D('bb_factory' androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000d \-\> B:18:0x000f, CROSS_EDGE: B:21:0x002f \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0028: r1 'new_buf_size' I\l  0x0017\-0x0028: r2 'nbb' Ljava\/nio\/ByteBuffer;\l  0x0004\-0x002f: r0 'old_buf_size' I\l  \-1 \-0x002f: r4 'bb' Ljava\/nio\/ByteBuffer;\l  \-1 \-0x002f: r5 'bb_factory' Landroidx\/emoji2\/text\/flatbuffer\/FlatBufferBuilder$ByteBufferFactory;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

