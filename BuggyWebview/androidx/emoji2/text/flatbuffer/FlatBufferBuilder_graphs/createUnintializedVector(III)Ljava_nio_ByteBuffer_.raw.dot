digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.createUnintializedVector(III)Ljava\/nio\/ByteBuffer;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r4 I:int A[D('elem_size' int)]) * (r5 I:int A[D('num_elems' int)])  (LINE:494)\l0x0002: INVOKE  \l  (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder)\l  (r4 I:int A[D('elem_size' int)])\l  (r5 I:int A[D('num_elems' int)])\l  (r6 I:int A[D('alignment' int)])\l type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.startVector(int, int, int):void A[MD:(int, int, int):void (m)] (LINE:495)\l0x0005: IGET  (r1 I:java.nio.ByteBuffer) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:497)\l0x0007: IGET  (r2 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x0009: ARITH  (r2 I:int) = (r2 I:int) \- (r0 I:int A[D('length' int)]) \l0x000a: IPUT  (r2 I:int), (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x000c: INVOKE  (r1 I:java.nio.ByteBuffer), (r2 I:int) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l0x000f: IGET  (r1 I:java.nio.ByteBuffer) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:500)\l0x0011: INVOKE  (r1 I:java.nio.ByteBuffer) = (r1 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.slice():java.nio.ByteBuffer A[MD:():java.nio.ByteBuffer (c)]\l0x0015: SGET  (r2 I:java.nio.ByteOrder) =  java.nio.ByteOrder.LITTLE_ENDIAN java.nio.ByteOrder \l0x0017: INVOKE  (r1 I:java.nio.ByteBuffer) = (r1 I:java.nio.ByteBuffer), (r2 I:java.nio.ByteOrder) type: VIRTUAL call: java.nio.ByteBuffer.order(java.nio.ByteOrder):java.nio.ByteBuffer A[MD:(java.nio.ByteOrder):java.nio.ByteBuffer (c)]\l0x001b: INVOKE  (r1 I:java.nio.ByteBuffer A[D('copy' java.nio.ByteBuffer)]), (r0 I:int A[D('length' int)]) type: VIRTUAL call: java.nio.ByteBuffer.limit(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)] (LINE:501)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:java.nio.ByteBuffer A[D('copy' java.nio.ByteBuffer)])  (LINE:502)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.nio.ByteBuffer androidx.emoji2.text.flatbuffer.FlatBufferBuilder.createUnintializedVector((r3 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('elem_size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('num_elems' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('alignment' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x001e: r0 'length' I\l  0x001b\-0x001e: r1 'copy' Ljava\/nio\/ByteBuffer;\l  \-1 \-0x001e: r4 'elem_size' I\l  \-1 \-0x001e: r5 'num_elems' I\l  \-1 \-0x001e: r6 'alignment' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

