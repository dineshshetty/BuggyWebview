digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.sizedByteArray()[B" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int  (LINE:1017)\l0x0002: IGET  (r1 I:java.nio.ByteBuffer) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer \l0x0004: INVOKE  (r1 I:int) = (r1 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x0008: IGET  (r2 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x000a: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x000b: INVOKE  (r0 I:byte[]) = (r3 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r0 I:int), (r1 I:int) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.sizedByteArray(int, int):byte[] A[MD:(int, int):byte[] (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:byte[]) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public byte[] androidx.emoji2.text.flatbuffer.FlatBufferBuilder.sizedByteArray((r3 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

