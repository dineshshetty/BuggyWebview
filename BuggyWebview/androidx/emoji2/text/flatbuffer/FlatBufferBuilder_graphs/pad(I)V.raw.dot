digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.pad(I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:266)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|LOOP_START\lLOOP:0: B:10:0x0001\-\>B:11:0x0003\l|0x0001: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r5 I:??[int, byte, short, char] A[D('byte_size' int)])  \-\> B:13:0x0012 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|LOOP_END\lLOOP:0: B:10:0x0001\-\>B:11:0x0003\l|0x0003: IGET  (r1 I:java.nio.ByteBuffer) = (r4 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer \l0x0005: IGET  (r2 I:int) = (r4 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x0007: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0009: IPUT  (r2 I:int), (r4 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x000b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: INVOKE  (r1 I:java.nio.ByteBuffer), (r2 I:int), (r3 I:byte) type: VIRTUAL call: java.nio.ByteBuffer.put(int, byte):java.nio.ByteBuffer A[MD:(int, byte):java.nio.ByteBuffer (c)]\l0x000f: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:267)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.FlatBufferBuilder.pad((r4 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('byte_size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0003 \-\> B:10:0x0001\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0012: r0 'i' I\l  \-1 \-0x0012: r5 'byte_size' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

