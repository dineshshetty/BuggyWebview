digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.required(II)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:java.nio.ByteBuffer) = (r6 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:871)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x0006: ARITH  (r0 I:int) = (r0 I:int) \- (r7 I:int A[D('table' int)]) \l0x0007: IGET  (r1 I:java.nio.ByteBuffer) = (r6 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:872)\l0x0009: INVOKE  (r1 I:int) = (r1 I:java.nio.ByteBuffer), (r0 I:int A[D('table_start' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getInt(int):int A[MD:(int):int (c)]\l0x000d: ARITH  (r1 I:int) = (r0 I:int A[D('table_start' int)]) \- (r1 I:int) \l0x000f: IGET  (r2 I:java.nio.ByteBuffer) = (r6 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:873)\l0x0011: ARITH  (r3 I:int) = (r1 I:int A[D('vtable_start' int)]) + (r8 I:int A[D('field' int)]) \l0x0013: INVOKE  (r2 I:short) = (r2 I:java.nio.ByteBuffer), (r3 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ok' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001f  (LINE:875)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:877)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|0x001f: NEW_INSTANCE  (r3 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:876)\l0x0021: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0026: CONST_STR  (r5 I:java.lang.String) =  \"FlatBuffers: field \" \l0x0028: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r4 I:java.lang.StringBuilder), (r8 I:int A[D('field' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x002e: CONST_STR  (r5 I:java.lang.String) =  \" must be set\" \l0x0030: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0037: INVOKE  (r3 I:java.lang.AssertionError), (r4 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|0x003a: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|0x001b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.FlatBufferBuilder.required((r6 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('table' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('field' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x003a \-\> B:11:?, CROSS_EDGE: B:15:0x001b \-\> B:16:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x003a: r0 'table_start' I\l  0x000f\-0x003a: r1 'vtable_start' I\l  0x001c\-0x003a: r2 'ok' Z\l  \-1 \-0x003a: r7 'table' I\l  \-1 \-0x003a: r8 'field' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_15 -> Node_16;
}

