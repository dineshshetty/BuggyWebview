digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.finish(ILjava\/lang\/String;Z)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|int r0 = r3.minalign\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|if (r6 == false) goto L15\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|r2 = 4\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:21:0x0007, B:20:0x0005] A[DONT_GENERATE, DONT_INLINE]\l|prep(r0, r2 + 8)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r5.length() != 4) goto L13\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|r0 = 3\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|LOOP_START\lLOOP:0: B:25:0x0014\-\>B:26:0x0016\lPHI: r0 \l  PHI: (r0v4 'i' int) = (r0v3 'i' int), (r0v5 'i' int) binds: [B:24:0x0013, B:26:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|LOOP_END\lLOOP:0: B:25:0x0014\-\>B:26:0x0016\l|addByte((byte) r5.charAt(r0))\lint r0 = r0 + (\-1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|finish(r4, r6)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025}"];
Node_30 [shape=record,label="{30\:\ 0x002c|throw new java.lang.AssertionError(\"FlatBuffers: file identifier must be length 4\")\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|r2 = 0\l}"];
MethodNode[shape=record,label="{protected void androidx.emoji2.text.flatbuffer.FlatBufferBuilder.finish((r3v0 'this' androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]), (r4v0 'root_table' int A[D('root_table' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'file_identifier' java.lang.String A[D('file_identifier' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'size_prefix' boolean A[D('size_prefix' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0016 \-\> B:25:0x0014, CROSS_EDGE: B:30:0x002c \-\> B:17:?, CROSS_EDGE: B:21:0x0007 \-\> B:22:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_25;
Node_31 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_21 -> Node_22;
}

