digraph "CFG forandroidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable()I" {
Node_50 [shape=record,label="{50\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0000|0x0000: IGET  (r0 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtable int[]  (LINE:807)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x00cb \l}"];
Node_54 [shape=record,label="{54\:\ 0x0004|0x0004: IGET  (r0 I:boolean) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.nested boolean \l}"];
Node_55 [shape=record,label="{55\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x00cb \l}"];
Node_56 [shape=record,label="{56\:\ 0x0008|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:809)\l0x0009: INVOKE  (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r0 I:int) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addInt(int):void A[MD:(int):void (m)]\l0x000c: INVOKE  (r1 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.offset():int A[MD:():int (m)] (LINE:810)\l0x0010: IGET  (r2 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtable_in_use int  (LINE:812)\l0x0012: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_57 [shape=record,label="{57\:\ 0x0014|LOOP_START\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\l|0x0014: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:91:0x001f  (LINE:814)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0016|0x0016: IGET  (r3 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtable int[] \l0x0018: AGET  (r3 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x001a|0x001a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x001f \l}"];
Node_60 [shape=record,label="{60\:\ 0x001c|LOOP_END\lLOOP:0: B:57:0x0014\-\>B:60:0x001c\l|0x001c: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int) \l}"];
Node_92 [shape=record,label="{92\:\ 0x001f|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x001f|0x001f: ARITH  (r3 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:815)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0021|LOOP_START\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\l|0x0021: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:93:0x0036  (LINE:816)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0023|0x0023: IGET  (r4 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtable int[]  (LINE:818)\l0x0025: AGET  (r5 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0027|0x0027: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x002e \l}"];
Node_65 [shape=record,label="{65\:\ 0x0029|0x0029: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x002b: ARITH  (r4 I:int) = (r1 I:int A[D('vtableloc' int)]) \- (r4 I:int) \l}"];
Node_95 [shape=record,label="{95\:\ 0x002f|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x002f|LOOP_END\lLOOP:1: B:62:0x0021\-\>B:67:0x002f\l|0x002f: CAST (r4 I:short) = (short) (r4 I:int) \l0x0030: INVOKE  (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r4 I:short A[D('off' short)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addShort(short):void A[MD:(short):void (m)] (LINE:819)\l0x0033: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int)  (LINE:816)\l}"];
Node_66 [shape=record,label="{66\:\ 0x002e|0x002e: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x002f|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0036|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0036|0x0036: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:822)\l0x0037: IGET  (r5 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.object_start int  (LINE:823)\l0x0039: ARITH  (r5 I:int) = (r1 I:int A[D('vtableloc' int)]) \- (r5 I:int) \l0x003b: CAST (r5 I:short) = (short) (r5 I:int) \l0x003c: INVOKE  (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r5 I:short) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addShort(short):void A[MD:(short):void (m)]\l0x003f: ARITH  (r5 I:int) = (r3 I:int A[D('trimmed_size' int)]) + (2 int)  (LINE:824)\l0x0041: ARITH  (r5 I:int) = (r5 I:int) * (2 int) \l0x0043: CAST (r5 I:short) = (short) (r5 I:int) \l0x0044: INVOKE  (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder), (r5 I:short) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.addShort(short):void A[MD:(short):void (m)]\l0x0047: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:827)\l0x0048: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:829)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0049|LOOP_START\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\l|0x0049: IGET  (r6 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.num_vtables int \l}"];
Node_70 [shape=record,label="{70\:\ 0x004b|0x004b: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r6 I:??[int, byte, short, char])  \-\> B:97:0x0089 \l}"];
Node_71 [shape=record,label="{71\:\ 0x004d|0x004d: IGET  (r6 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:830)\l0x004f: INVOKE  (r6 I:int) = (r6 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x0053: IGET  (r7 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtables int[] \l0x0055: AGET  (r7 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l0x0057: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0058: IGET  (r7 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int  (LINE:831)\l0x005a: IGET  (r8 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:832)\l0x005c: INVOKE  (r8 I:short) = (r8 I:java.nio.ByteBuffer), (r6 I:int A[D('vt1' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l0x0060: IGET  (r9 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:833)\l0x0062: INVOKE  (r9 I:short) = (r9 I:java.nio.ByteBuffer), (r7 I:int A[D('vt2' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0066|0x0066: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('len' short)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:98:0x0086 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0068|0x0068: CONST  (r9 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:834)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0069|LOOP_START\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\l|0x0069: IF  (r9 I:??[int, byte, short, char] A[D('j' int)]) \>= (r8 I:??[int, byte, short, char] A[D('len' short)])  \-\> B:96:0x0081 \l}"];
Node_75 [shape=record,label="{75\:\ 0x006b|0x006b: IGET  (r10 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:835)\l0x006d: ARITH  (r11 I:int) = (r6 I:int A[D('vt1' int)]) + (r9 I:int A[D('j' int)]) \l0x006f: INVOKE  (r10 I:short) = (r10 I:java.nio.ByteBuffer), (r11 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l0x0073: IGET  (r11 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer \l0x0075: ARITH  (r12 I:int) = (r7 I:int A[D('vt2' int)]) + (r9 I:int A[D('j' int)]) \l0x0077: INVOKE  (r11 I:short) = (r11 I:java.nio.ByteBuffer), (r12 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l}"];
Node_76 [shape=record,label="{76\:\ 0x007b|0x007b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x007e \l}"];
Node_78 [shape=record,label="{78\:\ 0x007e|LOOP_END\lLOOP:3: B:74:0x0069\-\>B:78:0x007e\l|0x007e: ARITH  (r9 I:int) = (r9 I:int A[D('j' int)]) + (2 int)  (LINE:834)\l}"];
Node_99 [shape=record,label="{99\:\ 0x0086|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ 0x0086|LOOP_END\lLOOP:2: B:69:0x0049\-\>B:80:0x0086\l|0x0086: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:829)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0081|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0081|0x0081: IGET  (r9 I:int[] A[D('j' int)]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtables int[]  (LINE:839)\l0x0083: AGET  (r5 I:??[int, float, short, byte, char] A[D('existing_vtable' int)]) = (r9 I:??[int, float][]), (r2 I:??[int, short, byte, char] A[D('i' int)]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x0089|0x0089: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existing_vtable' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x009c  (LINE:844)\l}"];
Node_82 [shape=record,label="{82\:\ 0x008b|0x008b: IGET  (r6 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:847)\l0x008d: INVOKE  (r6 I:int) = (r6 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x0091: ARITH  (r6 I:int) = (r6 I:int) \- (r1 I:int A[D('vtableloc' int)]) \l0x0092: IPUT  (r6 I:int), (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.space int \l0x0094: IGET  (r7 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:849)\l0x0096: ARITH  (r8 I:int) = (r5 I:int A[D('existing_vtable' int)]) \- (r1 I:int A[D('vtableloc' int)]) \l0x0098: INVOKE  (r7 I:java.nio.ByteBuffer), (r6 I:int), (r8 I:int) type: VIRTUAL call: java.nio.ByteBuffer.putInt(int, int):java.nio.ByteBuffer A[MD:(int, int):java.nio.ByteBuffer (c)]\l}"];
Node_87 [shape=record,label="{87\:\ 0x00c8|0x00c8: IPUT  (r0 I:boolean), (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.nested boolean  (LINE:859)\l}"];
Node_88 [shape=record,label="{88\:\ 0x00ca|RETURN\l|0x00ca: RETURN  (r1 I:int A[D('vtableloc' int)])  (LINE:860)\l}"];
Node_51 [shape=record,label="{51\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_83 [shape=record,label="{83\:\ 0x009c|0x009c: IGET  (r6 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.num_vtables int  (LINE:853)\l0x009e: IGET  (r7 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtables int[] \l0x00a0: ARRAY_LENGTH  (r8 I:int) = (r7 I:??[]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x00a1|0x00a1: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x00ab \l}"];
Node_85 [shape=record,label="{85\:\ 0x00a3|0x00a3: ARITH  (r6 I:int) = (r6 I:int) * (2 int) \l0x00a5: INVOKE  (r6 I:int[]) = (r7 I:int[]), (r6 I:int) type: STATIC call: java.util.Arrays.copyOf(int[], int):int[] A[MD:(int[], int):int[] (c)]\l0x00a9: IPUT  (r6 I:int[]), (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtables int[] \l}"];
Node_86 [shape=record,label="{86\:\ 0x00ab|0x00ab: IGET  (r6 I:int[]) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.vtables int[]  (LINE:854)\l0x00ad: IGET  (r7 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.num_vtables int \l0x00af: ARITH  (r8 I:int) = (r7 I:int) + (1 int) \l0x00b1: IPUT  (r8 I:int), (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.num_vtables int \l0x00b3: INVOKE  (r8 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.offset():int A[MD:():int (m)]\l0x00b7: APUT  (r6 I:??[int, float][]), (r7 I:??[int, short, byte, char]), (r8 I:??[int, float, short, byte, char]) \l0x00b9: IGET  (r6 I:java.nio.ByteBuffer) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) androidx.emoji2.text.flatbuffer.FlatBufferBuilder.bb java.nio.ByteBuffer  (LINE:856)\l0x00bb: INVOKE  (r7 I:int) = (r6 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)]\l0x00bf: ARITH  (r7 I:int) = (r7 I:int) \- (r1 I:int A[D('vtableloc' int)]) \l0x00c0: INVOKE  (r8 I:int) = (r13 I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlatBufferBuilder.offset():int A[MD:():int (m)]\l0x00c4: ARITH  (r8 I:int) = (r8 I:int) \- (r1 I:int A[D('vtableloc' int)]) \l0x00c5: INVOKE  (r6 I:java.nio.ByteBuffer), (r7 I:int), (r8 I:int) type: VIRTUAL call: java.nio.ByteBuffer.putInt(int, int):java.nio.ByteBuffer A[MD:(int, int):java.nio.ByteBuffer (c)]\l}"];
Node_98 [shape=record,label="{98\:\ 0x0086|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x0089|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x001f|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x00cb|0x00cb: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:808)\l0x00cd: CONST_STR  (r1 I:java.lang.String) =  \"FlatBuffers: endTable called without startTable\" \l0x00cf: INVOKE  (r0 I:java.lang.AssertionError), (r1 I:java.lang.Object) type: DIRECT call: java.lang.AssertionError.\<init\>(java.lang.Object):void A[MD:(java.lang.Object):void (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x00d2|0x00d2: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.FlatBufferBuilder.endTable((r13 'this' I:androidx.emoji2.text.flatbuffer.FlatBufferBuilder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:60:0x001c \-\> B:57:0x0014, BACK_EDGE: B:67:0x002f \-\> B:62:0x0021, CROSS_EDGE: B:66:0x002e \-\> B:67:0x002f, BACK_EDGE: B:78:0x007e \-\> B:74:0x0069, BACK_EDGE: B:80:0x0086 \-\> B:69:0x0049, CROSS_EDGE: B:86:0x00ab \-\> B:87:0x00c8, CROSS_EDGE: B:84:0x00a1 \-\> B:86:0x00ab, CROSS_EDGE: B:72:0x0066 \-\> B:80:0x0086, CROSS_EDGE: B:70:0x004b \-\> B:81:0x0089, CROSS_EDGE: B:57:0x0014 \-\> B:61:0x001f, CROSS_EDGE: B:90:0x00d2 \-\> B:51:?, CROSS_EDGE: B:53:0x0002 \-\> B:89:0x00cb\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x0033: r4 'off' S\l  0x0069\-0x0081: r9 'j' I\l  0x0058\-0x0086: r6 'vt1' I\l  0x005a\-0x0086: r7 'vt2' I\l  0x0060\-0x0086: r8 'len' S\l  0x0010\-0x00cb: r1 'vtableloc' I\l  0x0014\-0x00cb: r2 'i' I\l  0x0021\-0x00cb: r3 'trimmed_size' I\l  0x0037\-0x00cb: r4 'standard_fields' I\l  0x0048\-0x00cb: r5 'existing_vtable' I\l}"];
MethodNode -> Node_50;Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_89;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_89;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_91;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_92;
Node_60 -> Node_57;
Node_92 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_93;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_95;
Node_95 -> Node_67;
Node_67 -> Node_62;
Node_66 -> Node_94;
Node_94 -> Node_67;
Node_93 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_97;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_98;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_96;
Node_75 -> Node_76;
Node_76 -> Node_78;
Node_76 -> Node_99[style=dashed];
Node_78 -> Node_74;
Node_99 -> Node_80;
Node_80 -> Node_69;
Node_96 -> Node_79;
Node_79 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_51;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_98 -> Node_80;
Node_97 -> Node_81;
Node_91 -> Node_61;
Node_89 -> Node_90;
Node_90 -> Node_51;
}

