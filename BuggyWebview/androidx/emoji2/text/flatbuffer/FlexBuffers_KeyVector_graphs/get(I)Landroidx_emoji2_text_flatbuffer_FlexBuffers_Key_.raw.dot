digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.get(I)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffers$Key;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.size():int A[MD:():int (m)] (LINE:1050)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r7 I:??[int, byte, short, char] A[D('pos' int)]) \< (r0 I:??[int, byte, short, char] A[D('len' int)])  \-\> B:14:0x000b  (LINE:1051)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r1 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) =  type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Key.access$700():androidx.emoji2.text.flatbuffer.FlexBuffers$Key A[MD:():androidx.emoji2.text.flatbuffer.FlexBuffers$Key (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN  (r1 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|0x000b: IGET  (r1 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.vec androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector  (LINE:1052)\l0x000d: IGET  (r1 I:int) = (r1 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) androidx.emoji2.text.flatbuffer.FlexBuffers.TypedVector.end int \l0x000f: IGET  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.vec androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector \l0x0011: IGET  (r2 I:int) = (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) androidx.emoji2.text.flatbuffer.FlexBuffers.TypedVector.byteWidth int \l0x0013: ARITH  (r2 I:int) = (r2 I:int) * (r7 I:int A[D('pos' int)]) \l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0016: NEW_INSTANCE  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) =  androidx.emoji2.text.flatbuffer.FlexBuffers$Key  (LINE:1053)\l0x0018: IGET  (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.vec androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector \l0x001a: IGET  (r3 I:androidx.emoji2.text.flatbuffer.ReadBuf) = (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) androidx.emoji2.text.flatbuffer.FlexBuffers.TypedVector.bb androidx.emoji2.text.flatbuffer.ReadBuf \l0x001c: IGET  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.vec androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector \l0x001e: IGET  (r4 I:androidx.emoji2.text.flatbuffer.ReadBuf) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) androidx.emoji2.text.flatbuffer.FlexBuffers.TypedVector.bb androidx.emoji2.text.flatbuffer.ReadBuf \l0x0020: IGET  (r5 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector) androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.vec androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector \l0x0022: IGET  (r5 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlexBuffers$TypedVector) androidx.emoji2.text.flatbuffer.FlexBuffers.TypedVector.byteWidth int \l0x0024: INVOKE  (r4 I:int) = (r4 I:androidx.emoji2.text.flatbuffer.ReadBuf), (r1 I:int A[D('childPos' int)]), (r5 I:int) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.access$200(androidx.emoji2.text.flatbuffer.ReadBuf, int, int):int A[MD:(androidx.emoji2.text.flatbuffer.ReadBuf, int, int):int (m)]\l0x0028: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0029: INVOKE  \l  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key)\l  (r3 I:androidx.emoji2.text.flatbuffer.ReadBuf)\l  (r4 I:int)\l  (r5 I:int)\l type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffers.Key.\<init\>(androidx.emoji2.text.flatbuffer.ReadBuf, int, int):void A[MD:(androidx.emoji2.text.flatbuffer.ReadBuf, int, int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|RETURN\l|0x002c: RETURN  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) \l}"];
MethodNode[shape=record,label="{public androidx.emoji2.text.flatbuffer.FlexBuffers$Key androidx.emoji2.text.flatbuffer.FlexBuffers.KeyVector.get((r6 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('pos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002c \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x002c: r0 'len' I\l  0x0016\-0x002c: r1 'childPos' I\l  \-1 \-0x002c: r7 'pos' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

