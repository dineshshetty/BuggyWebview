digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Key.equals(Ljava\/lang\/Object;)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)]) androidx.emoji2.text.flatbuffer.FlexBuffers$Key  (LINE:805)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0006 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean)  (LINE:806)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)])  (LINE:808)\l0x0007: CHECK_CAST (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) = (androidx.emoji2.text.flatbuffer.FlexBuffers$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0009: IGET  (r0 I:int) = (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) androidx.emoji2.text.flatbuffer.FlexBuffers.Key.end int \l0x000b: IGET  (r2 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) androidx.emoji2.text.flatbuffer.FlexBuffers.Key.end int \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('obj' java.lang.Object)]) \l0x0010: CHECK_CAST (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) = (androidx.emoji2.text.flatbuffer.FlexBuffers$Key) (r0 I:??[OBJECT, ARRAY]) \l0x0012: IGET  (r0 I:int) = (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) androidx.emoji2.text.flatbuffer.FlexBuffers.Key.byteWidth int \l0x0014: IGET  (r2 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key) androidx.emoji2.text.flatbuffer.FlexBuffers.Key.byteWidth int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0019: RETURN  (r1 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean androidx.emoji2.text.flatbuffer.FlexBuffers.Key.equals((r3 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$Key A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[D('obj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0019 \-\> B:14:?, CROSS_EDGE: B:21:0x0016 \-\> B:23:0x0019, CROSS_EDGE: B:19:0x000d \-\> B:23:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r4 'obj' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

