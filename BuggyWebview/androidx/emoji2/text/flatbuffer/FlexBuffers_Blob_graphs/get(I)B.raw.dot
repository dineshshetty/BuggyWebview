digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Blob.get(I)B" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: IF  (r3 I:??[int, byte, short, char] A[D('pos' int)]) \< (0 ??[int, byte, short, char])  \-\> B:16:0x0012  (LINE:714)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Blob.size():int A[MD:():int (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r3 I:??[int, byte, short, char] A[D('pos' int)]) \> (r0 I:??[int, byte, short, char])  \-\> B:16:0x0012 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IGET  (r0 I:androidx.emoji2.text.flatbuffer.ReadBuf) = (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob) androidx.emoji2.text.flatbuffer.FlexBuffers.Blob.bb androidx.emoji2.text.flatbuffer.ReadBuf  (LINE:715)\l0x000a: IGET  (r1 I:int) = (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob) androidx.emoji2.text.flatbuffer.FlexBuffers.Blob.end int \l0x000c: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int A[D('pos' int)]) \l0x000d: INVOKE  (r0 I:byte) = (r0 I:androidx.emoji2.text.flatbuffer.ReadBuf), (r1 I:int) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadBuf.get(int):byte A[MD:(int):byte (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:byte) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:714)\l0x0014: INVOKE  (r0 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public byte androidx.emoji2.text.flatbuffer.FlexBuffers.Blob.get((r2 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$Blob A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('pos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0017 \-\> B:10:?, CROSS_EDGE: B:11:0x0000 \-\> B:16:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r3 'pos' I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

