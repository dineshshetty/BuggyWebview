digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Vector.get(I)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffers$Reference;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.size():int A[MD:():int (m)] (LINE:971)\l0x0004: CAST (r0 I:long) = (long) (r0 I:int) \l0x0005: CAST (r2 I:long) = (long) (r8 I:int A[D('index' int)])  (LINE:972)\l0x0006: CMP_L  (r4 I:int) = (r2 I:long), (r0 I:long A[D('len' long)]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: IF  (r4 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:14:0x000f \l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|0x000a: INVOKE  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) =  type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Reference.access$600():androidx.emoji2.text.flatbuffer.FlexBuffers$Reference A[MD:():androidx.emoji2.text.flatbuffer.FlexBuffers$Reference (m)] (LINE:973)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\l|0x000e: RETURN  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|0x000f: IGET  (r2 I:androidx.emoji2.text.flatbuffer.ReadBuf) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.bb androidx.emoji2.text.flatbuffer.ReadBuf  (LINE:975)\l0x0011: IGET  (r3 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.end int \l0x0013: CAST (r3 I:long) = (long) (r3 I:int) \l0x0014: IGET  (r5 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.byteWidth int \l0x0016: CAST (r5 I:long) = (long) (r5 I:int) \l0x0017: ARITH  (r5 I:long) = (r5 I:long) * (r0 I:long A[D('len' long)]) \l0x0019: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x001a: CAST (r5 I:long) = (long) (r8 I:int A[D('index' int)]) \l0x001b: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x001c: CAST (r4 I:int) = (int) (r3 I:long) \l0x001d: INVOKE  (r2 I:byte) = (r2 I:androidx.emoji2.text.flatbuffer.ReadBuf), (r4 I:int) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadBuf.get(int):byte A[MD:(int):byte (m)]\l0x0021: INVOKE  (r2 I:int) = (r2 I:byte) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.byteToUnsignedInt(byte):int A[MD:(byte):int (m)]\l0x0025: IGET  (r3 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.end int  (LINE:976)\l0x0027: IGET  (r4 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.byteWidth int \l0x0029: ARITH  (r4 I:int) = (r4 I:int) * (r8 I:int A[D('index' int)]) \l0x002b: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x002c: NEW_INSTANCE  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) =  androidx.emoji2.text.flatbuffer.FlexBuffers$Reference  (LINE:977)\l0x002e: IGET  (r5 I:androidx.emoji2.text.flatbuffer.ReadBuf) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.bb androidx.emoji2.text.flatbuffer.ReadBuf \l0x0030: IGET  (r6 I:int) = (r7 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.byteWidth int \l0x0032: INVOKE  \l  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference)\l  (r5 I:androidx.emoji2.text.flatbuffer.ReadBuf)\l  (r3 I:int A[D('obj_end' int)])\l  (r6 I:int)\l  (r2 I:int A[D('packedType' int)])\l type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffers.Reference.\<init\>(androidx.emoji2.text.flatbuffer.ReadBuf, int, int, int):void A[MD:(androidx.emoji2.text.flatbuffer.ReadBuf, int, int, int):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|RETURN\l|0x0035: RETURN  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) \l}"];
MethodNode[shape=record,label="{public androidx.emoji2.text.flatbuffer.FlexBuffers$Reference androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.get((r7 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0035 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0035: r0 'len' J\l  0x0025\-0x0035: r2 'packedType' I\l  0x002c\-0x0035: r3 'obj_end' I\l  \-1 \-0x0035: r8 'index' I\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.get(int):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

