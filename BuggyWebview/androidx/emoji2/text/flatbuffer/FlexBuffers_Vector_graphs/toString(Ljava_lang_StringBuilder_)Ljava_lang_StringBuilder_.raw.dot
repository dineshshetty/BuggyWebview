digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.Vector.toString(Ljava\/lang\/StringBuilder;)Ljava\/lang\/StringBuilder;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"[ \"  (LINE:952)\l0x0002: INVOKE  (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0005: INVOKE  (r0 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.size():int A[MD:():int (m)] (LINE:953)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:954)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|LOOP_START\lLOOP:0: B:16:0x000a\-\>B:20:0x001c\l|0x000a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:23:0x001f \l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|0x000c: INVOKE  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) = (r3 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.get(int):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference A[MD:(int):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference (m)] (LINE:955)\l0x0010: INVOKE  \l  (r2 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference)\l  (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)])\l type: VIRTUAL call: androidx.emoji2.text.flatbuffer.FlexBuffers.Reference.toString(java.lang.StringBuilder):java.lang.StringBuilder A[MD:(java.lang.StringBuilder):java.lang.StringBuilder (m)]\l0x0013: ARITH  (r2 I:int) = (r0 I:int A[D('size' int)]) + (\-1 int)  (LINE:956)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001c \l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|0x0017: CONST_STR  (r2 I:java.lang.String) =  \", \"  (LINE:957)\l0x0019: INVOKE  (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001c|LOOP_END\lLOOP:0: B:16:0x000a\-\>B:20:0x001c\l|0x001c: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:954)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x001f|0x001f: CONST_STR  (r1 I:java.lang.String A[D('i' int)]) =  \" ]\"  (LINE:960)\l0x0021: INVOKE  (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|RETURN\l|0x0024: RETURN  (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder)])  (LINE:961)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.StringBuilder androidx.emoji2.text.flatbuffer.FlexBuffers.Vector.toString((r3 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffers$Vector A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.StringBuilder A[D('sb' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x001c \-\> B:16:0x000a, CROSS_EDGE: B:18:0x0015 \-\> B:20:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x001f: r1 'i' I\l  0x0009\-0x0024: r0 'size' I\l  \-1 \-0x0024: r4 'sb' Ljava\/lang\/StringBuilder;\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.FlexBuffers.Object.toString(java.lang.StringBuilder):java.lang.StringBuilder]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

