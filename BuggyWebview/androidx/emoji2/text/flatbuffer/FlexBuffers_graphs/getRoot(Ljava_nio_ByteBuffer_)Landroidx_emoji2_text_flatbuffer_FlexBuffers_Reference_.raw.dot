digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.getRoot(Ljava\/nio\/ByteBuffer;)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffers$Reference;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.hasArray():boolean A[MD:():boolean (c)] (LINE:202)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0014 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf) =  androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf \l0x0008: INVOKE  (r1 I:byte[]) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.array():byte[] A[MD:():byte[] (c)]\l0x000c: INVOKE  (r2 I:int) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.limit():int A[MD:():int (c)]\l0x0010: INVOKE  (r0 I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf), (r1 I:byte[]), (r2 I:int) type: DIRECT call: androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.\<init\>(byte[], int):void A[MD:(byte[], int):void (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: INVOKE  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) = (r0 I:androidx.emoji2.text.flatbuffer.ReadBuf) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.getRoot(androidx.emoji2.text.flatbuffer.ReadBuf):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference A[MD:(androidx.emoji2.text.flatbuffer.ReadBuf):androidx.emoji2.text.flatbuffer.FlexBuffers$Reference (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffers$Reference) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf) =  androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf \l0x0016: INVOKE  \l  (r0 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf)\l  (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l type: DIRECT call: androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.\<init\>(java.nio.ByteBuffer):void A[MD:(java.nio.ByteBuffer):void (m)]\l}"];
MethodNode[shape=record,label="{public static androidx.emoji2.text.flatbuffer.FlexBuffers$Reference androidx.emoji2.text.flatbuffer.FlexBuffers.getRoot((r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r3 'buffer' Ljava\/nio\/ByteBuffer;\lCROSS_EDGE: B:13:0x0014 \-\> B:14:0x0019\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

