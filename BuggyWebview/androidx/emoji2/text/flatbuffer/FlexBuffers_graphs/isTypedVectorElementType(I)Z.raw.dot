digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.isTypedVectorElementType(I)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:150)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|0x0001: IF  (r2 I:??[int, byte, short, char] A[D('type' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:19:0x0006 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: IF  (r2 I:??[int, byte, short, char] A[D('type' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:24:? \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x000c: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000b \l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x000c: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public static boolean androidx.emoji2.text.flatbuffer.FlexBuffers.isTypedVectorElementType((r2 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0008 \-\> B:23:0x000c, CROSS_EDGE: B:18:0x0004 \-\> B:23:0x000c, CROSS_EDGE: B:16:0x0001 \-\> B:19:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r2 'type' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_24 -> Node_14;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_25[style=dashed];
Node_22 -> Node_14;
Node_25 -> Node_14;
}

