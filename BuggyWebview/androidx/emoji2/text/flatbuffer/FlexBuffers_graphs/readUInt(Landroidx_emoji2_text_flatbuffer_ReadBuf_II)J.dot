digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffers.readUInt(Landroidx\/emoji2\/text\/flatbuffer\/ReadBuf;II)J" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|switch(r4) \{\l    case 1: goto L10;\l    case 2: goto L8;\l    case 4: goto L6;\l    case 8: goto L4;\l    default: goto L2;\l\}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|RETURN\l|return \-1\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006}"];
Node_19 [shape=record,label="{19\:\ 0x000a|RETURN\l|return r2.getLong(r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b}"];
Node_21 [shape=record,label="{21\:\ 0x0013|RETURN\l|return androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.intToUnsignedLong(r2.getInt(r3))\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014}"];
Node_23 [shape=record,label="{23\:\ 0x001d|RETURN\l|return (long) androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.shortToUnsignedInt(r2.getShort(r3))\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e}"];
Node_25 [shape=record,label="{25\:\ 0x0027|RETURN\l|return (long) androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.byteToUnsignedInt(r2.get(r3))\l}"];
MethodNode[shape=record,label="{public static long androidx.emoji2.text.flatbuffer.FlexBuffers.readUInt((r2v0 'buff' androidx.emoji2.text.flatbuffer.ReadBuf A[D('buff' androidx.emoji2.text.flatbuffer.ReadBuf), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'byteWidth' int A[D('byteWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:14:?, CROSS_EDGE: B:21:0x0013 \-\> B:14:?, CROSS_EDGE: B:23:0x001d \-\> B:14:?, CROSS_EDGE: B:25:0x0027 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_20;
Node_15 -> Node_22;
Node_15 -> Node_24;
Node_16 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

