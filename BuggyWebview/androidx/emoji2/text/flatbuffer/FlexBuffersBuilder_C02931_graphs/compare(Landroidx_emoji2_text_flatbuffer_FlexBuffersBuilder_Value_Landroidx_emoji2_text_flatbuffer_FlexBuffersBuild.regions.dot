digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.1.compare(Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;)I" {
subgraph cluster_Region_978654387 {
label = "R(3:1|(2:2|(2:(1:12)|(1:4)))|8) | DECL_VAR: byte c1, byte c2\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = r6.key\lint int r1 = r7.key\l}"];
subgraph cluster_LoopRegion_999111521 {
label = "LOOP:0: (2:2|(2:(1:12)|(1:4)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lLOOP:0: B:3:0x0004\-\>B:8:0x0021\l|if (r2 == r3) goto L2\l}"];
subgraph cluster_Region_1139402533 {
label = "R(2:2|(2:(1:12)|(1:4)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|LOOP_START\lLOOP:0: B:3:0x0004\-\>B:8:0x0021\lPHI: r0 r1 \l  PHI: (r0v1 'ia' int) = (r0v0 'ia' int), (r0v2 'ia' int) binds: [B:2:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'io' int) = (r1v0 'io' int), (r1v2 'io' int) binds: [B:2:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|byte r2 = androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.this.f86bb.get(r0)\lbyte r3 = androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.this.f86bb.get(r1)\l}"];
subgraph cluster_Region_844199999 {
label = "R(2:(1:12)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_695160879 {
label = "IF [B:4:0x0018] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r2 == 0) goto L10\l}"];
subgraph cluster_Region_974311476 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|RETURN\l|return r2 \- r3\l}"];
}
}
subgraph cluster_Region_401642445 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|r0++\lr1++\l}"];
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0025|RETURN\l|return r2 \- r3\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0023|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001a|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.1.compare((r5v0 'this' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$1 A[IMMUTABLE_TYPE, THIS]), (r6v0 'o1' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value A[D('o1' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'o2' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value A[D('o2' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0025 \-\> B:1:?, BACK_EDGE: B:8:0x0021 \-\> B:3:0x0004\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lRENAME_REASON:avoid collision after fix types in other method\lREPLACED_BY: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.1.compare(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value, androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value):int\lBRIDGED_BY: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.1.compare(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value, androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value):int\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method merged with bridge method\}\lMETHOD_OVERRIDE: [ClspMth\{java.util.Comparator.compare(T, T):int\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_8 -> Node_3;
Node_8 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_7[style=dashed];
Node_4 -> Node_13;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_10 -> Node_1;
Node_0 -> Node_2;
Node_12 -> Node_9;
Node_9 -> Node_10;
Node_13 -> Node_5;
Node_5 -> Node_6;
}

