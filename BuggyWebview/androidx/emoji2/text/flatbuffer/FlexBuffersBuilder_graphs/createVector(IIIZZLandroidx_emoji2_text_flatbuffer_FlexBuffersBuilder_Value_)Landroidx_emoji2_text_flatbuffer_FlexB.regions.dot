digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.createVector(IIIZZLandroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;" {
subgraph cluster_Region_1995412358 {
label = "R(1:(2:(5:7|(1:9)|10|(3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)|(2:(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)|(1:38)))|(1:5))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_Region_193204859 {
label = "R(2:(5:7|(1:9)|10|(3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)|(2:(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)|(1:38)))|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1724464501 {
label = "IF [B:3:0x0006, B:4:0x0008] THEN: R(5:7|(1:9)|10|(3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)|(2:(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)|(1:38))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r22 == true) goto L3\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|ADDED_TO_REGION\l|if (r21 == true) goto L7\l}"];
subgraph cluster_Region_1853833112 {
label = "R(5:7|(1:9)|10|(3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)|(2:(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)|(1:38)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|int int r3 = java.lang.Math.max(0, widthUInBits(r20))\lint r5 = 1\l}"];
subgraph cluster_IfRegion_1423889491 {
label = "IF [B:9:0x001c] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r23 != null) goto L9\l}"];
subgraph cluster_Region_1496273551 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|int r3 = java.lang.Math.max(r3, r23.elemWidth(r17.f86bb.writePosition(), 0))\lint r5 = 1 + 2\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x002e|PHI: r3 r5 \l  PHI: (r3v3 'bitWidth' int) = (r3v2 'bitWidth' int), (r3v6 'bitWidth' int) binds: [B:9:0x001c, B:10:0x001e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'prefixElems' int) = (r5v0 'prefixElems' int), (r5v2 'prefixElems' int) binds: [B:9:0x001c, B:10:0x001e] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = 4\lint r7 = r19\l}"];
subgraph cluster_LoopRegion_548307163 {
label = "LOOP:0: (3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0037|if (r7 \< r17.stack.size()) goto L13\l}"];
subgraph cluster_Region_1951049928 {
label = "R(3:13|(1:(2:17|(1:(1:21)))(1:(1:28)(0)))(0)|23)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0039|int int r8 = r17.stack.get(r7).elemWidth(r17.f86bb.writePosition(), r7 + r5)\lint r3 = java.lang.Math.max(r3, r8)\l}"];
subgraph cluster_IfRegion_1588006637 {
label = "IF [B:15:0x0051] THEN: R(1:(2:17|(1:(1:21)))(1:(1:28)(0))) ELSE: R(0)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0051|if (r21 != false) goto L15\l}"];
subgraph cluster_Region_1973147784 {
label = "R(1:(2:17|(1:(1:21)))(1:(1:28)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_424886637 {
label = "IF [B:17:0x0055] THEN: R(2:17|(1:(1:21))) ELSE: R(1:(1:28)(0))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0055|if (r7 == r19) goto L17\l}"];
subgraph cluster_Region_1353782140 {
label = "R(2:17|(1:(1:21)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0057|int r6 = r17.stack.get(r7).type\l}"];
subgraph cluster_Region_1519804891 {
label = "R(1:(1:21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_536779803 {
label = "IF [B:19:0x0065] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0065|if (androidx.emoji2.text.flatbuffer.FlexBuffers.isTypedVectorElementType(r6) == false) goto L19\l}"];
subgraph cluster_Region_2018007702 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x006f|throw new androidx.emoji2.text.flatbuffer.FlexBuffers.FlexBufferException(\"TypedVector does not support this element type\")\l}"];
}
}
}
}
subgraph cluster_Region_520024852 {
label = "R(1:(1:28)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1940490447 {
label = "IF [B:24:0x007a] THEN: R(1:28) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x007a|if (r6 != r17.stack.get(r7).type) goto L26\l}"];
subgraph cluster_Region_889858011 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0082|throw new java.lang.AssertionError()\l}"];
}
subgraph cluster_Region_1551564824 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1717399019 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_29 [shape=record,label="{29\:\ 0x0085|LOOP_END\lLOOP:0: B:12:0x0031\-\>B:29:0x0085\lPHI: r6 \l  PHI: (r6v2 'vectorType' int) = (r6v1 'vectorType' int), (r6v1 'vectorType' int), (r6v3 'vectorType' int) binds: [B:64:0x0085, B:66:0x0085, B:65:0x0085] A[DONT_GENERATE, DONT_INLINE]\l|r7++\l}"];
}
}
subgraph cluster_Region_257053799 {
label = "R(2:(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)|(1:38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1364001074 {
label = "IF [B:31:0x008a, B:33:0x0090] THEN: R(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x008a|if (r22 == true) goto L35\l}"];
Node_33 [shape=record,label="{33\:\ 0x0090|ADDED_TO_REGION\l|if (androidx.emoji2.text.flatbuffer.FlexBuffers.isTypedVectorElementType(r6) == true) goto L39\l}"];
subgraph cluster_Region_1711839705 {
label = "R(8:39|(1:41)|(1:43)|44|(1:47)|(2:50|(1:53))|(1:57)(1:(1:63)(1:64))|59)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0099|int int r7 = align(r3)\l}"];
subgraph cluster_IfRegion_1795333801 {
label = "IF [B:38:0x009d] THEN: R(1:41) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x009d|if (r23 != null) goto L41\l}"];
subgraph cluster_Region_1007767751 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x009f|writeOffset(r23.iValue, r7)\lwriteInt(1 \<\< r23.minBitWidth, r7)\l}"];
}
}
subgraph cluster_IfRegion_1870473233 {
label = "IF [B:40:0x00ac] THEN: R(1:43) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x00ac|if (r22 == false) goto L43\l}"];
subgraph cluster_Region_1474567450 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00ae|writeInt(r20, r7)\l}"];
}
}
Node_42 [shape=record,label="{42\:\ 0x00b2|int int r15 = r17.f86bb.writePosition()\lint r8 = r19\l}"];
subgraph cluster_LoopRegion_4425298 {
label = "LOOP:1: (1:47)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00c0|if (r8 \< r17.stack.size()) goto L47\l}"];
subgraph cluster_Region_60352357 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00c2|LOOP_END\lLOOP:1: B:43:0x00ba\-\>B:45:0x00c2\l|writeAny(r17.stack.get(r8), r7)\lr8++\l}"];
}
}
subgraph cluster_IfRegion_1656889888 {
label = "IF [B:46:0x00d0] THEN: R(2:50|(1:53)) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00d0|if (r21 == false) goto L50\l}"];
subgraph cluster_Region_92199527 {
label = "R(2:50|(1:53))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x00d2|int r8 = r19\l}"];
subgraph cluster_LoopRegion_420724108 {
label = "LOOP:2: (1:53)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00da|if (r8 \< r17.stack.size()) goto L53\l}"];
subgraph cluster_Region_1897720191 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00dc|LOOP_END\lLOOP:2: B:48:0x00d4\-\>B:50:0x00dc\l|r17.f86bb.put(r17.stack.get(r8).storedPackedType(r3))\lr8++\l}"];
}
}
}
}
subgraph cluster_IfRegion_2142151539 {
label = "IF [B:52:0x00f2] THEN: R(1:57) ELSE: R(1:(1:63)(1:64))";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00f2|if (r23 != null) goto L57\l}"];
subgraph cluster_Region_1100594942 {
label = "R(1:57)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00f4|r10 = 9\l}"];
}
subgraph cluster_Region_2526713 {
label = "R(1:(1:63)(1:64)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_110956620 {
label = "IF [B:54:0x00f9] THEN: R(1:63) ELSE: R(1:64) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00f9|if (r21 == true) goto L61\l}"];
subgraph cluster_Region_1191992693 {
label = "R(1:63)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00fe|PHI: r4 \l  PHI: (r4v2 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r10 = androidx.emoji2.text.flatbuffer.FlexBuffers.toTypedVector(r6, r22 ? r20 : 0)\l}"];
}
subgraph cluster_Region_920812021 {
label = "R(1:64)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0104|r10 = 10\l}"];
}
}
}
}
Node_60 [shape=record,label="{60\:\ 0x0111|RETURN\l|return new androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value(r18, r10, r3, r15)\l}"];
}
}
subgraph cluster_Region_1975382429 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0098|throw new java.lang.AssertionError()\l}"];
}
}
}
}
subgraph cluster_Region_2130866530 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0010|throw new java.lang.AssertionError()\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0031|LOOP_START\lLOOP:0: B:12:0x0031\-\>B:29:0x0085\lPHI: r3 r6 r7 \l  PHI: (r3v4 'bitWidth' int) = (r3v3 'bitWidth' int), (r3v5 'bitWidth' int) binds: [B:11:0x002e, B:29:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'vectorType' int) = (r6v0 'vectorType' int), (r6v2 'vectorType' int) binds: [B:11:0x002e, B:29:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'i' int) = (r7v0 'i' int), (r7v4 'i' int) binds: [B:11:0x002e, B:29:0x0085] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0053}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x0068|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0068}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0085|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0070}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x007d|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x007d}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0085|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0083}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0085|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0088|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0088}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x008c}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0093}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00ba|LOOP_START\lLOOP:1: B:43:0x00ba\-\>B:45:0x00c2\lPHI: r8 \l  PHI: (r8v4 'i' int) = (r8v3 'i' int), (r8v9 'i' int) binds: [B:42:0x00b2, B:45:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x00d0|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00d4|LOOP_START\lLOOP:2: B:48:0x00d4\-\>B:50:0x00dc\lPHI: r8 \l  PHI: (r8v7 'i' int) = (r8v6 'i' int), (r8v8 'i' int) binds: [B:47:0x00d2, B:50:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x00f0|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x00f0}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x0108|PHI: r10 \l  PHI: (r10v2 int) = (r10v0 int), (r10v1 int), (r10v3 int) binds: [B:58:0x0104, B:57:0x00fe, B:53:0x00f4] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x00fb}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00fd}"];
MethodNode[shape=record,label="{private androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.createVector((r17v0 'this' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder A[IMMUTABLE_TYPE, THIS]), (r18v0 'key' int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'length' int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'typed' boolean A[D('typed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'fixed' boolean A[D('fixed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'keys' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value A[D('keys' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x006f \-\> B:1:?, BACK_EDGE: B:29:0x0085 \-\> B:12:0x0031, CROSS_EDGE: B:27:0x0082 \-\> B:1:?, CROSS_EDGE: B:24:0x007a \-\> B:29:0x0085, CROSS_EDGE: B:28:0x0083 \-\> B:29:0x0085, CROSS_EDGE: B:36:0x0098 \-\> B:1:?, BACK_EDGE: B:45:0x00c2 \-\> B:43:0x00ba, BACK_EDGE: B:50:0x00dc \-\> B:48:0x00d4, CROSS_EDGE: B:60:0x0111 \-\> B:1:?, CROSS_EDGE: B:57:0x00fe \-\> B:59:0x0108, CROSS_EDGE: B:55:0x00fb \-\> B:57:0x00fe, CROSS_EDGE: B:58:0x0104 \-\> B:59:0x0108, CROSS_EDGE: B:46:0x00d0 \-\> B:51:0x00f0, CROSS_EDGE: B:40:0x00ac \-\> B:42:0x00b2, CROSS_EDGE: B:38:0x009d \-\> B:40:0x00ac, CROSS_EDGE: B:31:0x008a \-\> B:37:0x0099, CROSS_EDGE: B:9:0x001c \-\> B:11:0x002e, CROSS_EDGE: B:3:0x0006 \-\> B:8:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_62[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_28[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_61;
Node_19 -> Node_65[style=dashed];
Node_22 -> Node_1;
Node_24 -> Node_63;
Node_24 -> Node_66[style=dashed];
Node_27 -> Node_1;
Node_29 -> Node_12;
Node_31 -> Node_32;
Node_31 -> Node_37[style=dashed];
Node_33 -> Node_35[style=dashed];
Node_33 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_42[style=dashed];
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_44 -> Node_67[style=dashed];
Node_45 -> Node_43;
Node_46 -> Node_47;
Node_46 -> Node_51[style=dashed];
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_49 -> Node_68[style=dashed];
Node_50 -> Node_48;
Node_52 -> Node_53;
Node_52 -> Node_54[style=dashed];
Node_53 -> Node_59;
Node_54 -> Node_55;
Node_54 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_60 -> Node_1;
Node_36 -> Node_1;
Node_7 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_61 -> Node_21;
Node_21 -> Node_22;
Node_65 -> Node_29;
Node_23 -> Node_24;
Node_63 -> Node_26;
Node_26 -> Node_27;
Node_66 -> Node_29;
Node_28 -> Node_64;
Node_64 -> Node_29;
Node_62 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_35 -> Node_36;
Node_43 -> Node_44;
Node_67 -> Node_46;
Node_48 -> Node_49;
Node_68 -> Node_51;
Node_51 -> Node_52;
Node_59 -> Node_60;
Node_55 -> Node_56;
Node_55 -> Node_57;
Node_56 -> Node_57;
}

