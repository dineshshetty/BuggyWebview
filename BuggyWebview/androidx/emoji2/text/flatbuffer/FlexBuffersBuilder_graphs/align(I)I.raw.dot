digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.align(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:392)\l0x0001: ARITH  (r0 I:int) = (r0 I:int) \<\< (r5 I:int A[D('alignment' int)]) \l0x0002: IGET  (r1 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.bb androidx.emoji2.text.flatbuffer.ReadWriteBuf  (LINE:393)\l0x0004: INVOKE  (r1 I:int) = (r1 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadWriteBuf.writePosition():int A[MD:():int (m)]\l0x0008: INVOKE  (r1 I:int) = (r1 I:int), (r0 I:int A[D('byteWidth' int)]) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.access$100(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_START\lLOOP:0: B:3:0x000c\-\>B:5:0x0010\l|0x000c: ARITH  (r2 I:int) = (r1 I:int A[D('padBytes' int)]) + (\-1 int)  (LINE:394)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('padBytes' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_END\lLOOP:0: B:3:0x000c\-\>B:5:0x0010\l|0x0010: IGET  (r1 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.bb androidx.emoji2.text.flatbuffer.ReadWriteBuf  (LINE:395)\l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r1 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf), (r3 I:byte) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadWriteBuf.put(byte):void A[MD:(byte):void (m)]\l0x0016: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('padBytes' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:int A[D('byteWidth' int)])  (LINE:397)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.align((r4 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('alignment' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x0010 \-\> B:3:0x000c\lDebug Info:\l  0x000c\-0x000e: r1 'padBytes' I\l  0x0002\-0x0018: r0 'byteWidth' I\l  0x000e\-0x0018: r2 'padBytes' I\l  \-1 \-0x0018: r5 'alignment' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_6;
Node_6 -> Node_1;
}

