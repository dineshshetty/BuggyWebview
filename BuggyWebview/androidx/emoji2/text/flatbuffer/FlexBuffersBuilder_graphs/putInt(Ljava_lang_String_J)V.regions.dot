digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.putInt(Ljava\/lang\/String;J)V" {
subgraph cluster_Region_1969088218 {
label = "R(2:1|(1:5)(1:(1:12)(1:(1:18)(1:20))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = putKey(r5)\l}"];
subgraph cluster_IfRegion_1869503879 {
label = "IF [B:3:0x0008, B:5:0x000e] THEN: R(1:5) ELSE: R(1:(1:12)(1:(1:18)(1:20)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((\-128) \<= r6) goto L3\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|ADDED_TO_REGION\l|if (r6 \<= 127) goto L5\l}"];
subgraph cluster_Region_420014459 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|r4.stack.add(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.int8(r0, (int) r6))\l}"];
}
subgraph cluster_Region_628849117 {
label = "R(1:(1:12)(1:(1:18)(1:20))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_87820201 {
label = "IF [B:8:0x001f, B:10:0x0025] THEN: R(1:12) ELSE: R(1:(1:18)(1:20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((\-32768) \<= r6) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|ADDED_TO_REGION\l|if (r6 \<= 32767) goto L12\l}"];
subgraph cluster_Region_230737069 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|r4.stack.add(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.int16(r0, (int) r6))\l}"];
}
subgraph cluster_Region_1566534816 {
label = "R(1:(1:18)(1:20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1086361833 {
label = "IF [B:13:0x0037, B:15:0x003e] THEN: R(1:18) ELSE: R(1:20) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0037|if ((\-2147483648L) \<= r6) goto L16\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|ADDED_TO_REGION\l|if (r6 \<= 2147483647L) goto L18\l}"];
subgraph cluster_Region_494687388 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0040|r4.stack.add(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.int32(r0, (int) r6))\l}"];
}
subgraph cluster_Region_118299359 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004b|r4.stack.add(androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.int64(r0, r6))\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0021}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0039}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0054|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.putInt((r4v0 'this' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder A[IMMUTABLE_TYPE, THIS]), (r5v0 'key' java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'val' long A[D('val' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0027 \-\> B:18:0x0054, CROSS_EDGE: B:16:0x0040 \-\> B:18:0x0054, CROSS_EDGE: B:17:0x004b \-\> B:18:0x0054, CROSS_EDGE: B:13:0x0037 \-\> B:17:0x004b, CROSS_EDGE: B:8:0x001f \-\> B:12:0x0032, CROSS_EDGE: B:3:0x0008 \-\> B:7:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_8 -> Node_9;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_19 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_20 -> Node_1;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_21 -> Node_1;
Node_18 -> Node_1;
}

