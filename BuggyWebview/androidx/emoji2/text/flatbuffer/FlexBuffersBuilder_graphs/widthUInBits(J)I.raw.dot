digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.widthUInBits(J)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:372)\l0x0001: INVOKE  (r1 I:int) = (r0 I:byte) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.byteToUnsignedInt(byte):int A[MD:(byte):int (m)]\l0x0005: CAST (r1 I:long) = (long) (r1 I:int) \l0x0006: CMP_L  (r3 I:int) = (r4 I:long A[D('len' long)]), (r1 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:6:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: INVOKE  (r1 I:int) = (r0 I:short) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.shortToUnsignedInt(short):int A[MD:(short):int (m)] (LINE:373)\l0x0010: CAST (r1 I:long) = (long) (r1 I:int) \l0x0011: CMP_L  (r3 I:int) = (r4 I:long A[D('len' long)]), (r1 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IF  (r3 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|RETURN\l|0x0015: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0016: RETURN  (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: INVOKE  (r0 I:long) = (r0 I:int) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.Unsigned.intToUnsignedLong(int):long A[MD:(int):long (m)] (LINE:374)\l0x001b: CMP_L  (r2 I:int) = (r4 I:long A[D('len' long)]), (r0 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: IF  (r2 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:14:0x0021 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|RETURN\l|0x001f: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0020: RETURN  (r0 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|RETURN\l|0x0021: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:375)\l0x0022: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{static int androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.widthUInBits((r4 I:long A[D('len' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0016 \-\> B:1:?, CROSS_EDGE: B:13:0x0020 \-\> B:1:?, CROSS_EDGE: B:15:0x0022 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0022: r4 'len' J\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_1;
Node_14 -> Node_1;
}

