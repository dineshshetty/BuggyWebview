digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.createKeyVector(II)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CAST (r0 I:long) = (long) (r14 I:int A[D('length' int)])  (LINE:614)\l0x0001: INVOKE  (r0 I:int) = (r0 I:long) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.widthUInBits(long):int A[MD:(long):int (m)]\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0006: INVOKE  (r0 I:int) = (r1 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:615)\l0x000b: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:617)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|LOOP_START\lLOOP:0: B:3:0x000c\-\>B:5:0x0014\l|0x000c: IGET  (r4 I:java.util.ArrayList\<androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value\>) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.stack java.util.ArrayList \l0x000e: INVOKE  (r4 I:int) = (r4 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:16:0x0034 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|LOOP_END\lLOOP:0: B:3:0x000c\-\>B:5:0x0014\l|0x0014: CONST  (r5 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:618)\l0x0015: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: IGET  (r4 I:java.util.ArrayList\<androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value\>) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.stack java.util.ArrayList \l0x0018: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.ArrayList), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x001c: CHECK_CAST (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) = (androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) (r4 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r4 I:int) = (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.key int \l0x0020: CAST (r7 I:long) = (long) (r4 I:int) \l0x0021: IGET  (r4 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.bb androidx.emoji2.text.flatbuffer.ReadWriteBuf \l0x0023: INVOKE  (r9 I:int) = (r4 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadWriteBuf.writePosition():int A[MD:():int (m)]\l0x0027: ARITH  (r10 I:int) = (r3 I:int A[D('i' int)]) + (r2 I:int A[D('prefixElems' int)]) \l0x0029: INVOKE  (r4 I:int) = (r5 I:int), (r6 I:int), (r7 I:long), (r9 I:int), (r10 I:int) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.access$500(int, int, long, int, int):int A[MD:(int, int, long, int, int):int (m)]\l0x002d: INVOKE  (r0 I:int A[D('bitWidth' int)]) = (r0 I:int A[D('bitWidth' int)]), (r4 I:int A[D('elemWidth' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:619)\l0x0031: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:617)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: INVOKE  (r3 I:int) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder), (r0 I:int A[D('bitWidth' int)]) type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.align(int):int A[MD:(int):int (m)] (LINE:622)\l0x0038: CAST (r4 I:long) = (long) (r14 I:int A[D('length' int)])  (LINE:624)\l0x0039: INVOKE  (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder), (r4 I:long), (r3 I:int A[D('byteWidth' int)]) type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.writeInt(long, int):void A[MD:(long, int):void (m)]\l0x003c: IGET  (r4 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.bb androidx.emoji2.text.flatbuffer.ReadWriteBuf  (LINE:626)\l0x003e: INVOKE  (r10 I:int) = (r4 I:androidx.emoji2.text.flatbuffer.ReadWriteBuf) type: INTERFACE call: androidx.emoji2.text.flatbuffer.ReadWriteBuf.writePosition():int A[MD:():int (m)]\l0x0042: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:627)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0043|LOOP_START\lLOOP:1: B:7:0x0043\-\>B:11:0x0058\l|0x0043: IGET  (r5 I:java.util.ArrayList\<androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value\>) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.stack java.util.ArrayList \l0x0045: INVOKE  (r5 I:int) = (r5 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r5 I:??[int, byte, short, char])  \-\> B:18:0x006f \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: IGET  (r5 I:java.util.ArrayList\<androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value\>) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.stack java.util.ArrayList  (LINE:628)\l0x004d: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r4 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0051: CHECK_CAST (r5 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) = (androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) (r5 I:??[OBJECT, ARRAY]) \l0x0053: IGET  (r5 I:int) = (r5 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.key int \l0x0055: CONST  (r6 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:629)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|0x0056: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pos' int)]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0069 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|LOOP_END\lLOOP:1: B:7:0x0043\-\>B:11:0x0058\l|0x0058: IGET  (r6 I:java.util.ArrayList\<androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value\>) = (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.stack java.util.ArrayList  (LINE:630)\l0x005a: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r4 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x005e: CHECK_CAST (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) = (androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) (r6 I:??[OBJECT, ARRAY]) \l0x0060: IGET  (r6 I:int) = (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.key int \l0x0062: CAST (r6 I:long) = (long) (r6 I:int) \l0x0063: INVOKE  (r12 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder), (r6 I:long), (r3 I:int A[D('byteWidth' int)]) type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.writeOffset(long, int):void A[MD:(long, int):void (m)]\l0x0066: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:627)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|0x0069: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError  (LINE:629)\l0x006b: INVOKE  (r1 I:java.lang.AssertionError) type: DIRECT call: java.lang.AssertionError.\<init\>():void A[MD:():void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x006e|0x006e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x006f|0x006f: NEW_INSTANCE  (r11 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) =  androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value  (LINE:633)\l0x0071: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0072: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0073: INVOKE  (r6 I:int) = (r4 I:int), (r1 I:int) type: STATIC call: androidx.emoji2.text.flatbuffer.FlexBuffers.toTypedVector(int, int):int A[MD:(int, int):int (m)]\l0x0077: CAST (r8 I:long) = (long) (r10 I:int A[D('vloc' int)]) \l0x0078: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0079: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitWidth' int)]) \l0x007a: INVOKE  (r4 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), (r5 I:int), (r6 I:int), (r7 I:int), (r8 I:long) type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.\<init\>(int, int, int, long):void A[MD:(int, int, int, long):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x007d|RETURN\l|0x007d: RETURN  (r11 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) \l}"];
MethodNode[shape=record,label="{private androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.createKeyVector((r12 'this' I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder A[IMMUTABLE_TYPE, THIS]), (r13 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x0014 \-\> B:3:0x000c, BACK_EDGE: B:11:0x0058 \-\> B:7:0x0043, CROSS_EDGE: B:15:0x007d \-\> B:1:?\lDebug Info:\l  0x002d\-0x0031: r4 'elemWidth' I\l  0x000c\-0x0034: r3 'i' I\l  0x0055\-0x0066: r5 'pos' I\l  0x0043\-0x006f: r4 'i' I\l  0x0069\-0x006f: r5 'pos' I\l  0x000a\-0x007d: r0 'bitWidth' I\l  0x000b\-0x007d: r2 'prefixElems' I\l  0x0038\-0x007d: r3 'byteWidth' I\l  0x0042\-0x007d: r10 'vloc' I\l  \-1 \-0x007d: r13 'start' I\l  \-1 \-0x007d: r14 'length' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_3;
Node_16 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_7;
Node_17 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_18 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

