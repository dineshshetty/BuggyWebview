digraph "CFG forandroidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.set(I[BII)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r6 I:int A[D('length' int)]) \- (r5 I:int A[D('start' int)])  (LINE:113)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int A[D('index' int)]) \l0x0003: INVOKE  (r2 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf), (r0 I:int) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.requestCapacity(int):boolean A[MD:(int):boolean (m)]\l0x0006: IGET  (r0 I:java.nio.ByteBuffer) = (r2 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf) androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.buffer java.nio.ByteBuffer  (LINE:114)\l0x0008: INVOKE  (r0 I:int) = (r0 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.position():int A[MD:():int (c)]\l0x000c: IGET  (r1 I:java.nio.ByteBuffer) = (r2 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf) androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.buffer java.nio.ByteBuffer  (LINE:115)\l0x000e: INVOKE  (r1 I:java.nio.ByteBuffer), (r3 I:int A[D('index' int)]) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l0x0011: IGET  (r1 I:java.nio.ByteBuffer) = (r2 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf) androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.buffer java.nio.ByteBuffer  (LINE:116)\l0x0013: INVOKE  \l  (r1 I:java.nio.ByteBuffer)\l  (r4 I:byte[] A[D('value' byte[])])\l  (r5 I:int A[D('start' int)])\l  (r6 I:int A[D('length' int)])\l type: VIRTUAL call: java.nio.ByteBuffer.put(byte[], int, int):java.nio.ByteBuffer A[MD:(byte[], int, int):java.nio.ByteBuffer (c)]\l0x0016: IGET  (r1 I:java.nio.ByteBuffer) = (r2 I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf) androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.buffer java.nio.ByteBuffer  (LINE:117)\l0x0018: INVOKE  (r1 I:java.nio.ByteBuffer), (r0 I:int A[D('curPos' int)]) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:118)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf.set((r2 'this' I:androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte[] A[D('value' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x001b: r0 'curPos' I\l  \-1 \-0x001b: r3 'index' I\l  \-1 \-0x001b: r4 'value' [B\l  \-1 \-0x001b: r5 'start' I\l  \-1 \-0x001b: r6 'length' I\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.ReadWriteBuf.set(int, byte[], int, int):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

