digraph "CFG forandroidx.emoji2.text.flatbuffer.BaseVector.__reset(IILjava\/nio\/ByteBuffer;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IPUT  (r4 I:java.nio.ByteBuffer A[D('_bb' java.nio.ByteBuffer)]), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.bb java.nio.ByteBuffer  (LINE:63)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('_bb' java.nio.ByteBuffer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0011  (LINE:64)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IPUT  (r2 I:int A[D('_vector' int)]), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.vector int  (LINE:65)\l0x0006: ARITH  (r0 I:int) = (r2 I:int A[D('_vector' int)]) + (\-4 int)  (LINE:66)\l0x0008: INVOKE  (r0 I:int) = (r4 I:java.nio.ByteBuffer A[D('_bb' java.nio.ByteBuffer)]), (r0 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getInt(int):int A[MD:(int):int (c)]\l0x000c: IPUT  (r0 I:int), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.length int \l0x000e: IPUT  (r3 I:int A[D('_element_size' int)]), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.element_size int  (LINE:67)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:73)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:69)\l0x0012: IPUT  (r0 I:int), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.vector int \l0x0014: IPUT  (r0 I:int), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.length int  (LINE:70)\l0x0016: IPUT  (r0 I:int), (r1 I:androidx.emoji2.text.flatbuffer.BaseVector) androidx.emoji2.text.flatbuffer.BaseVector.element_size int  (LINE:71)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN    (LINE:73)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.BaseVector.__reset((r1 'this' I:androidx.emoji2.text.flatbuffer.BaseVector A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('_vector' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('_element_size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.ByteBuffer A[D('_bb' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0011 \-\> B:14:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 '_vector' I\l  \-1 \-0x0018: r3 '_element_size' I\l  \-1 \-0x0018: r4 '_bb' Ljava\/nio\/ByteBuffer;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

