digraph "CFG forandroidx.emoji2.text.flatbuffer.ShortVector.getAsUnsigned(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:short) = (r2 I:androidx.emoji2.text.flatbuffer.ShortVector), (r3 I:int A[D('j' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.ShortVector.get(int):short A[MD:(int):short (m)] (LINE:58)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (65535(0xffff, float:9.1834E\-41) ??[int, float, short, byte, char]) \l0x0007: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.ShortVector.getAsUnsigned((r2 'this' I:androidx.emoji2.text.flatbuffer.ShortVector A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('j' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0008: r3 'j' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

