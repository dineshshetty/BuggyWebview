digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Safe.decodeUtf8(Ljava\/nio\/ByteBuffer;II)Ljava\/lang\/String;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.hasArray():boolean A[MD:():boolean (c)] (LINE:289)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0014 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r0 I:byte[]) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.array():byte[] A[MD:():byte[] (c)] (LINE:290)\l0x000a: INVOKE  (r1 I:int) = (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.arrayOffset():int A[MD:():int (c)]\l0x000e: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int A[D('offset' int)]) \l0x000f: INVOKE  (r0 I:java.lang.String) = (r0 I:byte[]), (r1 I:int), (r5 I:int A[D('length' int)]) type: STATIC call: androidx.emoji2.text.flatbuffer.Utf8Safe.decodeUtf8Array(byte[], int, int):java.lang.String A[MD:(byte[], int, int):java.lang.String (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.lang.String) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.String) = \l  (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r4 I:int A[D('offset' int)])\l  (r5 I:int A[D('length' int)])\l type: STATIC call: androidx.emoji2.text.flatbuffer.Utf8Safe.decodeUtf8Buffer(java.nio.ByteBuffer, int, int):java.lang.String A[MD:(java.nio.ByteBuffer, int, int):java.lang.String (m)] (LINE:292)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.emoji2.text.flatbuffer.Utf8Safe.decodeUtf8((r2 'this' I:androidx.emoji2.text.flatbuffer.Utf8Safe A[IMMUTABLE_TYPE, THIS]), (r3 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0018 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r3 'buffer' Ljava\/nio\/ByteBuffer;\l  \-1 \-0x0018: r4 'offset' I\l  \-1 \-0x0018: r5 'length' I\lEXCEPTIONS:[Ljava\/lang\/IllegalArgumentException;]\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.Utf8.decodeUtf8(java.nio.ByteBuffer, int, int):java.lang.String]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

