digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8Array(Ljava\/lang\/CharSequence;[BII)I" {
Node_62 [shape=record,label="{62\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0000|int r0 = r10.length()\lr2 = 0\lint r3 = r12 + r13\l}"];
Node_65 [shape=record,label="{65\:\ 0x0008|LOOP_START\lLOOP:0: B:65:0x0008\-\>B:71:0x0017\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v7 'i' int) binds: [B:64:0x0000, B:71:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_66 [shape=record,label="{66\:\ 0x000a|if (r2 \>= r0) goto L61\l}"];
Node_67 [shape=record,label="{67\:\ 0x000c}"];
Node_68 [shape=record,label="{68\:\ 0x000e|if ((r2 + r12) \>= r3) goto L60\l}"];
Node_69 [shape=record,label="{69\:\ 0x0010|char r5 = r10.charAt(r2)\l}"];
Node_70 [shape=record,label="{70\:\ 0x0015|if (r5 \>= 128) goto L9\l}"];
Node_71 [shape=record,label="{71\:\ 0x0017|LOOP_END\lLOOP:0: B:65:0x0008\-\>B:71:0x0017\l|r11[r12 + r2] = (byte) r5\lint r2 = r2 + 1\l}"];
Node_113 [shape=record,label="{113\:\ 0x001f|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x001f|if (r2 != r0) goto L14\l}"];
Node_73 [shape=record,label="{73\:\ 0x0021}"];
Node_74 [shape=record,label="{74\:\ 0x0023|RETURN\l|return r12 + r0\l}"];
Node_63 [shape=record,label="{63\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_75 [shape=record,label="{75\:\ 0x0024|int r1 = r12 + r2\l}"];
Node_76 [shape=record,label="{76\:\ 0x0025|LOOP_START\lLOOP:1: B:76:0x0025\-\>B:99:0x00bf\lPHI: r1 r2 \l  PHI: (r1v2 'j' int) = (r1v1 'j' int), (r1v8 'j' int) binds: [B:75:0x0024, B:99:0x00bf] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v6 'i' int) binds: [B:75:0x0024, B:99:0x00bf] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L58\l}"];
Node_77 [shape=record,label="{77\:\ 0x0027|char r5 = r10.charAt(r2)\l}"];
Node_78 [shape=record,label="{78\:\ 0x002b|if (r5 \>= 128) goto L22\l}"];
Node_79 [shape=record,label="{79\:\ 0x002d|if (r1 \>= r3) goto L22\l}"];
Node_80 [shape=record,label="{80\:\ 0x002f|r11[r1] = (byte) r5\lr1 = r1 + 1\l}"];
Node_121 [shape=record,label="{121\:\ 0x00bf|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x00bf|LOOP_END\lLOOP:1: B:76:0x0025\-\>B:99:0x00bf\lPHI: r1 r2 \l  PHI: (r1v8 'j' int) = (r1v4 'j' int), (r1v6 'j' int), (r1v7 'j' int), (r1v9 'j' int) binds: [B:123:0x00bf, B:120:0x00bf, B:122:0x00bf, B:121:0x00bf] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 'i' int) = (r2v2 'i' int), (r2v4 'i' int), (r2v2 'i' int), (r2v2 'i' int) binds: [B:123:0x00bf, B:120:0x00bf, B:122:0x00bf, B:121:0x00bf] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r2 + 1\l}"];
Node_81 [shape=record,label="{81\:\ 0x0037}"];
Node_82 [shape=record,label="{82\:\ 0x0039|if (r5 \>= 2048) goto L28\l}"];
Node_83 [shape=record,label="{83\:\ 0x003b}"];
Node_84 [shape=record,label="{84\:\ 0x003d|if (r1 \> (r3 + (\-2))) goto L28\l}"];
Node_85 [shape=record,label="{85\:\ 0x003f|int r6 = r1 + 1\lr11[r1] = (byte) ((r5 \>\>\> 6) \| 960)\lint r1 = r6 + 1\lr11[r6] = (byte) ((r5 & '?') \| 128)\l}"];
Node_122 [shape=record,label="{122\:\ 0x00bf|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x0051}"];
Node_87 [shape=record,label="{87\:\ 0x0057|if (r5 \< 55296) goto L54\l}"];
Node_88 [shape=record,label="{88\:\ 0x0059|if (57343 \>= r5) goto L31\l}"];
Node_92 [shape=record,label="{92\:\ 0x007c}"];
Node_93 [shape=record,label="{93\:\ 0x007e|if (r1 \> (r3 + (\-4))) goto L43\l}"];
Node_94 [shape=record,label="{94\:\ 0x0080}"];
Node_95 [shape=record,label="{95\:\ 0x0086|if ((r2 + 1) == r10.length()) goto L42\l}"];
Node_96 [shape=record,label="{96\:\ 0x0088|int r2 = r2 + 1\lchar r6 = r10.charAt(r2)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0093|if (java.lang.Character.isSurrogatePair(r5, r6) == false) goto L39\l}"];
Node_98 [shape=record,label="{98\:\ 0x0095|int r6 = java.lang.Character.toCodePoint(r5, r6)\lint r8 = r1 + 1\lr11[r1] = (byte) ((r6 \>\>\> 18) \| 240)\lint r1 = r8 + 1\lr11[r8] = (byte) (((r6 \>\>\> 12) & 63) \| 128)\lint r8 = r1 + 1\lr11[r1] = (byte) (((r6 \>\>\> 6) & 63) \| 128)\lint r1 = r8 + 1\lr11[r8] = (byte) ((r6 & 63) \| 128)\l}"];
Node_120 [shape=record,label="{120\:\ 0x00bf|SYNTHETIC\l}"];
Node_118 [shape=record,label="{118\:\ 0x00c3|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x00c3|PHI: r2 \l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v4 'i' int) binds: [B:117:0x00c3, B:118:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_101 [shape=record,label="{101\:\ 0x00ca|throw new androidx.emoji2.text.flatbuffer.Utf8Safe.UnpairedSurrogateException(r2 + (\-1), r0)\l}"];
Node_117 [shape=record,label="{117\:\ 0x00c3|SYNTHETIC\l}"];
Node_119 [shape=record,label="{119\:\ 0x00cb|SYNTHETIC\l}"];
Node_102 [shape=record,label="{102\:\ 0x00cb|if (55296 \> r5) goto L52\l}"];
Node_103 [shape=record,label="{103\:\ 0x00cd|if (r5 \> 57343) goto L52\l}"];
Node_104 [shape=record,label="{104\:\ 0x00cf}"];
Node_105 [shape=record,label="{105\:\ 0x00d5|if ((r2 + 1) == r10.length()) goto L50\l}"];
Node_106 [shape=record,label="{106\:\ 0x00d7}"];
Node_107 [shape=record,label="{107\:\ 0x00e1|if (java.lang.Character.isSurrogatePair(r5, r10.charAt(r2 + 1)) != false) goto L52\l}"];
Node_108 [shape=record,label="{108\:\ 0x00e3}"];
Node_109 [shape=record,label="{109\:\ 0x00e8|throw new androidx.emoji2.text.flatbuffer.Utf8Safe.UnpairedSurrogateException(r2, r0)\l}"];
Node_110 [shape=record,label="{110\:\ 0x00e9|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Failed writing \")\lr6.append(r5)\lr6.append(\" at index \")\lr6.append(r1)\l}"];
Node_111 [shape=record,label="{111\:\ 0x0107|throw new java.lang.ArrayIndexOutOfBoundsException(r6.toString())\l}"];
Node_89 [shape=record,label="{89\:\ 0x005b}"];
Node_90 [shape=record,label="{90\:\ 0x005d|if (r1 \> (r3 + (\-3))) goto L31\l}"];
Node_91 [shape=record,label="{91\:\ 0x005f|int r6 = r1 + 1\lr11[r1] = (byte) ((r5 \>\>\> 'f') \| 480)\lint r1 = r6 + 1\lr11[r6] = (byte) (((r5 \>\>\> 6) & 63) \| 128)\lr11[r1] = (byte) ((r5 & '?') \| 128)\lr1 = r1 + 1\l}"];
Node_123 [shape=record,label="{123\:\ 0x00bf|SYNTHETIC\l}"];
Node_116 [shape=record,label="{116\:\ 0x0108|SYNTHETIC\l}"];
Node_112 [shape=record,label="{112\:\ 0x0108|RETURN\l|return r1\l}"];
Node_115 [shape=record,label="{115\:\ 0x001f|SYNTHETIC\l}"];
Node_114 [shape=record,label="{114\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int androidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8Array((r10v0 'in' java.lang.CharSequence A[D('in' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'out' byte[] A[D('out' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'length' int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:71:0x0017 \-\> B:65:0x0008, BACK_EDGE: B:99:0x00bf \-\> B:76:0x0025, CROSS_EDGE: B:85:0x003f \-\> B:99:0x00bf, CROSS_EDGE: B:91:0x005f \-\> B:99:0x00bf, CROSS_EDGE: B:98:0x0095 \-\> B:99:0x00bf, CROSS_EDGE: B:101:0x00ca \-\> B:63:?, CROSS_EDGE: B:95:0x0086 \-\> B:100:0x00c3, CROSS_EDGE: B:109:0x00e8 \-\> B:63:?, CROSS_EDGE: B:111:0x0107 \-\> B:63:?, CROSS_EDGE: B:105:0x00d5 \-\> B:108:0x00e3, CROSS_EDGE: B:103:0x00cd \-\> B:110:0x00e9, CROSS_EDGE: B:102:0x00cb \-\> B:110:0x00e9, CROSS_EDGE: B:88:0x0059 \-\> B:92:0x007c, CROSS_EDGE: B:87:0x0057 \-\> B:89:0x005b, CROSS_EDGE: B:82:0x0039 \-\> B:86:0x0051, CROSS_EDGE: B:78:0x002b \-\> B:81:0x0037, CROSS_EDGE: B:112:0x0108 \-\> B:63:?, CROSS_EDGE: B:68:0x000e \-\> B:72:0x001f, CROSS_EDGE: B:66:0x000a \-\> B:72:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_62;Node_62 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_114;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_115;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_113;
Node_71 -> Node_65;
Node_113 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_75;
Node_73 -> Node_74;
Node_74 -> Node_63;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_116;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_81;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_121;
Node_121 -> Node_99;
Node_99 -> Node_76;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_86;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_122;
Node_122 -> Node_99;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_92;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_119;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_117;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_118;
Node_98 -> Node_120;
Node_120 -> Node_99;
Node_118 -> Node_100;
Node_100 -> Node_101;
Node_101 -> Node_63;
Node_117 -> Node_100;
Node_119 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_110;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_110;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_108;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_110;
Node_108 -> Node_109;
Node_109 -> Node_63;
Node_110 -> Node_111;
Node_111 -> Node_63;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_123;
Node_123 -> Node_99;
Node_116 -> Node_112;
Node_112 -> Node_63;
Node_115 -> Node_72;
Node_114 -> Node_72;
}

