digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8(Ljava\/lang\/CharSequence;Ljava\/nio\/ByteBuffer;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.hasArray():boolean A[MD:():boolean (c)] (LINE:433)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0021 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.arrayOffset():int A[MD:():int (c)] (LINE:434)\l0x000a: INVOKE  (r1 I:byte[]) = (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.array():byte[] A[MD:():byte[] (c)] (LINE:435)\l0x000e: INVOKE  (r2 I:int) = (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.position():int A[MD:():int (c)]\l0x0012: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int A[D('start' int)]) \l0x0013: INVOKE  (r3 I:int) = (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.remaining():int A[MD:():int (c)] (LINE:436)\l0x0017: INVOKE  (r1 I:int) = (r5 I:java.lang.CharSequence A[D('in' java.lang.CharSequence)]), (r1 I:byte[]), (r2 I:int), (r3 I:int) type: STATIC call: androidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8Array(java.lang.CharSequence, byte[], int, int):int A[MD:(java.lang.CharSequence, byte[], int, int):int (m)] (LINE:435)\l0x001b: ARITH  (r2 I:int) = (r1 I:int A[D('end' int)]) \- (r0 I:int A[D('start' int)])  (LINE:437)\l0x001d: INVOKE  (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]), (r2 I:int) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:441)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: INVOKE  \l  (r5 I:java.lang.CharSequence A[D('in' java.lang.CharSequence)])\l  (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)])\l type: STATIC call: androidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8Buffer(java.lang.CharSequence, java.nio.ByteBuffer):void A[MD:(java.lang.CharSequence, java.nio.ByteBuffer):void (m)] (LINE:439)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:441)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.Utf8Safe.encodeUtf8((r4 'this' I:androidx.emoji2.text.flatbuffer.Utf8Safe A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.CharSequence A[D('in' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0021 \-\> B:14:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0020: r0 'start' I\l  0x001b\-0x0020: r1 'end' I\l  \-1 \-0x0024: r5 'in' Ljava\/lang\/CharSequence;\l  \-1 \-0x0024: r6 'out' Ljava\/nio\/ByteBuffer;\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.Utf8.encodeUtf8(java.lang.CharSequence, java.nio.ByteBuffer):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

