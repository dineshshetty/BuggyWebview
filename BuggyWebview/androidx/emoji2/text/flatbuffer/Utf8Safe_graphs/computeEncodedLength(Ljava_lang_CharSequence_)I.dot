digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Safe.computeEncodedLength(Ljava\/lang\/CharSequence;)I" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|int r0 = r9.length()\lr1 = r0\lr2 = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|LOOP_START\lLOOP:0: B:24:0x0006\-\>B:27:0x0010\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v4 'i' int) binds: [B:23:0x0000, B:27:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L20\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008}"];
Node_26 [shape=record,label="{26\:\ 0x000e|if (r9.charAt(r2) \>= 128) goto L6\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|LOOP_END\lLOOP:0: B:24:0x0006\-\>B:27:0x0010\l|int r2 = r2 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0013|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0013|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|LOOP_START\lLOOP:1: B:28:0x0013\-\>B:31:0x001d\lPHI: r1 r2 \l  PHI: (r1v1 'utf8Length' int) = (r1v0 'utf8Length' int), (r1v4 'utf8Length' int) binds: [B:41:0x0013, B:31:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:41:0x0013, B:31:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L19\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|char r3 = r9.charAt(r2)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|if (r3 \>= 2048) goto L12\l}"];
Node_31 [shape=record,label="{31\:\ 0x001d|LOOP_END\lLOOP:1: B:28:0x0013\-\>B:31:0x001d\l|int r1 = r1 + ((127 \- r3) \>\>\> 31)\lint r2 = r2 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|int r1 = r1 + encodedLengthGeneral(r9, r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|PHI: r1 \l  PHI: (r1v2 'utf8Length' int) = (r1v1 'utf8Length' int), (r1v3 'utf8Length' int) binds: [B:39:0x002a, B:32:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r0) goto L17\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|RETURN\l|return r1\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x002d|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"UTF\-8 length does not fit in int: \")\lr4.append(((long) r1) + 4294967296L)\l}"];
Node_36 [shape=record,label="{36\:\ 0x004a|throw new java.lang.IllegalArgumentException(r4.toString())\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int androidx.emoji2.text.flatbuffer.Utf8Safe.computeEncodedLength((r9v0 'sequence' java.lang.CharSequence A[D('sequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0010 \-\> B:24:0x0006, BACK_EDGE: B:31:0x001d \-\> B:28:0x0013, CROSS_EDGE: B:36:0x004a \-\> B:22:?, CROSS_EDGE: B:28:0x0013 \-\> B:33:0x002a, CROSS_EDGE: B:24:0x0006 \-\> B:28:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_38;
Node_27 -> Node_24;
Node_38 -> Node_41;
Node_41 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_40;
Node_31 -> Node_28;
Node_40 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_22;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_39 -> Node_33;
Node_37 -> Node_41;
}

