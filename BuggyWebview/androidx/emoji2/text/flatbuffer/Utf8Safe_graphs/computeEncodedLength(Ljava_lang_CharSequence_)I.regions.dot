digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Safe.computeEncodedLength(Ljava\/lang\/CharSequence;)I" {
subgraph cluster_Region_2106423914 {
label = "R(4:1|(1:5)|(1:(2:9|(1:11)(2:13|1))(1:19))|(2:(2:17|18)|(1:15)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0000|int int r0 = r9.length()\lint r1 = r0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1611792911 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0006|LOOP_START\lLOOP:0: B:24:0x0006\-\>B:27:0x0010\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v4 'i' int) binds: [B:23:0x0000, B:27:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r0) goto L3\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|ADDED_TO_REGION\l|if (r9.charAt(r2) \< 128) goto L5\l}"];
subgraph cluster_Region_1400034790 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0010|LOOP_END\lLOOP:0: B:24:0x0006\-\>B:27:0x0010\l|r2++\l}"];
}
}
subgraph cluster_LoopRegion_460535398 {
label = "LOOP:1: (1:(2:9|(1:11)(2:13|1))(1:19))";
node [shape=record,color=blue];
subgraph cluster_Region_1514000845 {
label = "R(1:(2:9|(1:11)(2:13|1))(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1835379030 {
label = "IF [B:28:0x0013] THEN: R(2:9|(1:11)(2:13|1)) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0013|LOOP_START\lLOOP:1: B:28:0x0013\-\>B:31:0x001d\lPHI: r1 r2 \l  PHI: (r1v1 'utf8Length' int) = (r1v0 'utf8Length' int), (r1v4 'utf8Length' int) binds: [B:41:0x0013, B:31:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:41:0x0013, B:31:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r0) goto L9\l}"];
subgraph cluster_Region_42841163 {
label = "R(2:9|(1:11)(2:13|1))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0015|char char r3 = r9.charAt(r2)\l}"];
subgraph cluster_IfRegion_1783661056 {
label = "IF [B:30:0x001b] THEN: R(1:11) ELSE: R(2:13|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001b|if (r3 \< 2048) goto L11\l}"];
subgraph cluster_Region_1174594966 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x001d|LOOP_END\lLOOP:1: B:28:0x0013\-\>B:31:0x001d\l|r1 += (127 \- r3) \>\>\> 31\lr2++\l}"];
}
subgraph cluster_Region_913345325 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0025|EDGE_INSN: B:32:0x0025\-\>B:33:0x002a ?: BREAK  \l|r1 += encodedLengthGeneral(r9, r2)\l}"];
Node_InsnContainer_2127637210 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_176820647 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x002a|SYNTHETIC\lEDGE_INSN: B:39:0x002a\-\>B:33:0x002a ?: BREAK  \l|break\l}"];
}
}
}
}
subgraph cluster_Region_138991254 {
label = "R(2:(2:17|18)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_540601194 {
label = "IF [B:33:0x002a] THEN: R(2:17|18) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002a|EDGE_INSN: B:39:0x002a\-\>B:33:0x002a ?: BREAK  , EDGE_INSN: B:32:0x0025\-\>B:33:0x002a ?: BREAK  \lPHI: r1 \l  PHI: (r1v2 'utf8Length' int) = (r1v1 'utf8Length' int), (r1v3 'utf8Length' int) binds: [B:39:0x002a, B:32:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< r0) goto L17\l}"];
subgraph cluster_Region_107858713 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002d}"];
Node_36 [shape=record,label="{36\:\ 0x004a|throw new java.lang.IllegalArgumentException(\"UTF\-8 length does not fit in int: \" + (r1 + 4294967296L))\l}"];
}
}
subgraph cluster_Region_1634272005 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x002c|RETURN\l|return r1\l}"];
}
}
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0008}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0013|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0013|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0025|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0013|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{private static int androidx.emoji2.text.flatbuffer.Utf8Safe.computeEncodedLength((r9v0 'sequence' java.lang.CharSequence A[D('sequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0010 \-\> B:24:0x0006, BACK_EDGE: B:31:0x001d \-\> B:28:0x0013, CROSS_EDGE: B:36:0x004a \-\> B:22:?, CROSS_EDGE: B:28:0x0013 \-\> B:33:0x002a, CROSS_EDGE: B:24:0x0006 \-\> B:28:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_37[style=dashed];
Node_26 -> Node_27;
Node_26 -> Node_38[style=dashed];
Node_27 -> Node_24;
Node_28 -> Node_29;
Node_28 -> Node_39[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_40[style=dashed];
Node_31 -> Node_28;
Node_32 -> Node_33;
Node_39 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_34 -> Node_22;
Node_21 -> Node_23;
Node_25 -> Node_26;
Node_38 -> Node_41;
Node_41 -> Node_28;
Node_40 -> Node_32;
Node_37 -> Node_41;
}

