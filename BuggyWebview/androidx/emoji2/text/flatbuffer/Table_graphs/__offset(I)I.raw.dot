digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.__offset(I)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.vtable_size int  (LINE:53)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r3 I:??[int, byte, short, char] A[D('vtable_offset' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:13:0x000e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IGET  (r0 I:java.nio.ByteBuffer) = (r2 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.bb java.nio.ByteBuffer \l0x0006: IGET  (r1 I:int) = (r2 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.vtable_start int \l0x0008: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int A[D('vtable_offset' int)]) \l0x0009: INVOKE  (r0 I:short) = (r0 I:java.nio.ByteBuffer), (r1 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.Table.__offset((r2 'this' I:androidx.emoji2.text.flatbuffer.Table A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('vtable_offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:14:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r3 'vtable_offset' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
}

