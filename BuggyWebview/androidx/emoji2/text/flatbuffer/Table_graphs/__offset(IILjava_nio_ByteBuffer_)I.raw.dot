digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.__offset(IILjava\/nio\/ByteBuffer;)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r5 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.capacity():int A[MD:():int (c)] (LINE:57)\l0x0004: ARITH  (r0 I:int) = (r0 I:int) \- (r4 I:int A[D('offset' int)]) \l0x0005: ARITH  (r1 I:int) = (r0 I:int A[D('vtable' int)]) + (r3 I:int A[D('vtable_offset' int)])  (LINE:58)\l0x0007: INVOKE  (r2 I:int) = (r5 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]), (r0 I:int A[D('vtable' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getInt(int):int A[MD:(int):int (c)]\l0x000b: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x000c: INVOKE  (r1 I:short) = (r5 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]), (r1 I:int) type: VIRTUAL call: java.nio.ByteBuffer.getShort(int):short A[MD:(int):short (c)]\l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('vtable' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected static int androidx.emoji2.text.flatbuffer.Table.__offset((r3 I:int A[D('vtable_offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0011: r0 'vtable' I\l  \-1 \-0x0011: r3 'vtable_offset' I\l  \-1 \-0x0011: r4 'offset' I\l  \-1 \-0x0011: r5 'bb' Ljava\/nio\/ByteBuffer;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

