digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.__vector_len(I)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r1 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.bb_pos int  (LINE:123)\l0x0002: ARITH  (r2 I:int) = (r2 I:int A[D('offset' int)]) + (r0 I:int) \l0x0003: IGET  (r0 I:java.nio.ByteBuffer) = (r1 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.bb java.nio.ByteBuffer  (LINE:124)\l0x0005: INVOKE  (r0 I:int) = (r0 I:java.nio.ByteBuffer), (r2 I:int A[D('offset' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getInt(int):int A[MD:(int):int (c)]\l0x0009: ARITH  (r2 I:int) = (r2 I:int A[D('offset' int)]) + (r0 I:int) \l0x000a: IGET  (r0 I:java.nio.ByteBuffer) = (r1 I:androidx.emoji2.text.flatbuffer.Table) androidx.emoji2.text.flatbuffer.Table.bb java.nio.ByteBuffer  (LINE:125)\l0x000c: INVOKE  (r0 I:int) = (r0 I:java.nio.ByteBuffer), (r2 I:int A[D('offset' int)]) type: VIRTUAL call: java.nio.ByteBuffer.getInt(int):int A[MD:(int):int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.flatbuffer.Table.__vector_len((r1 'this' I:androidx.emoji2.text.flatbuffer.Table A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 'offset' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

