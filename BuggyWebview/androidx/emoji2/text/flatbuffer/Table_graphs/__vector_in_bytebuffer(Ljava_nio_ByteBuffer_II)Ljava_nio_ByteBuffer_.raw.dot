digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.__vector_in_bytebuffer(Ljava\/nio\/ByteBuffer;II)Ljava\/nio\/ByteBuffer;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.Table), (r5 I:int A[D('vector_offset' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.Table.__offset(int):int A[MD:(int):int (m)] (LINE:172)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('o' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0008  (LINE:173)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|RETURN\l|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: RETURN  (r1 I:java.nio.ByteBuffer) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: INVOKE  (r1 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.Table), (r0 I:int A[D('o' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.Table.__vector(int):int A[MD:(int):int (m)] (LINE:174)\l0x000c: INVOKE  (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]) type: VIRTUAL call: java.nio.ByteBuffer.rewind():java.nio.Buffer A[MD:():java.nio.Buffer (c)] (LINE:175)\l0x000f: INVOKE  (r2 I:int) = (r3 I:androidx.emoji2.text.flatbuffer.Table), (r0 I:int A[D('o' int)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.Table.__vector_len(int):int A[MD:(int):int (m)] (LINE:176)\l0x0013: ARITH  (r2 I:int) = (r2 I:int) * (r6 I:int A[D('elem_size' int)]) \l0x0015: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int A[D('vectorstart' int)]) \l0x0016: INVOKE  (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]), (r2 I:int) type: VIRTUAL call: java.nio.ByteBuffer.limit(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)]\l0x0019: INVOKE  (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)]), (r1 I:int A[D('vectorstart' int)]) type: VIRTUAL call: java.nio.ByteBuffer.position(int):java.nio.Buffer A[MD:(int):java.nio.Buffer (c)] (LINE:177)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|RETURN\l|0x001c: RETURN  (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer)])  (LINE:178)\l}"];
MethodNode[shape=record,label="{public java.nio.ByteBuffer androidx.emoji2.text.flatbuffer.Table.__vector_in_bytebuffer((r3 'this' I:androidx.emoji2.text.flatbuffer.Table A[IMMUTABLE_TYPE, THIS]), (r4 I:java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('vector_offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('elem_size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001c \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x001c: r0 'o' I\l  0x000c\-0x001c: r1 'vectorstart' I\l  \-1 \-0x001c: r4 'bb' Ljava\/nio\/ByteBuffer;\l  \-1 \-0x001c: r5 'vector_offset' I\l  \-1 \-0x001c: r6 'elem_size' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

