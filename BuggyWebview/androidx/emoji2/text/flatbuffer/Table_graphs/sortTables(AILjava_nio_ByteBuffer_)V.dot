digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.sortTables([ILjava\/nio\/ByteBuffer;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|java.lang.Integer[] r0 = new java.lang.Integer[r4.length]\lr1 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|LOOP_START\lLOOP:0: B:16:0x0004\-\>B:18:0x0007\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v6 'i' int) binds: [B:15:0x0000, B:18:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|if (r1 \>= r4.length) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|LOOP_END\lLOOP:0: B:16:0x0004\-\>B:18:0x0007\l|r0[r1] = java.lang.Integer.valueOf(r4[r1])\lint r1 = r1 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|java.util.Arrays.sort(r0, new androidx.emoji2.text.flatbuffer.Table.C02941())\lr1 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|LOOP_START\lLOOP:1: B:20:0x001b\-\>B:22:0x001e\lPHI: r1 \l  PHI: (r1v4 'i' int) = (r1v3 'i' int), (r1v5 'i' int) binds: [B:19:0x0012, B:22:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|if (r1 \>= r4.length) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x001e|LOOP_END\lLOOP:1: B:20:0x001b\-\>B:22:0x001e\l|r4[r1] = r0[r1].intValue()\lint r1 = r1 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0029|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.Table.sortTables((r3v0 'this' androidx.emoji2.text.flatbuffer.Table A[IMMUTABLE_TYPE, THIS]), (r4v0 'offsets' int[] A[D('offsets' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'bb' java.nio.ByteBuffer A[D('bb' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0007 \-\> B:16:0x0004, BACK_EDGE: B:22:0x001e \-\> B:20:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_16;
Node_24 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_20;
Node_25 -> Node_23;
Node_23 -> Node_14;
}

