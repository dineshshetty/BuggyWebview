digraph "CFG forandroidx.emoji2.text.flatbuffer.Table.__vector_as_bytebuffer(II)Ljava\/nio\/ByteBuffer;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|int r0 = __offset(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|if (r0 != 0) goto L5\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|java.nio.ByteBuffer r1 = r4.f88bb.duplicate().order(java.nio.ByteOrder.LITTLE_ENDIAN)\lint r2 = __vector(r0)\lr1.position(r2)\lr1.limit((__vector_len(r0) * r6) + r2)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|RETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public java.nio.ByteBuffer androidx.emoji2.text.flatbuffer.Table.__vector_as_bytebuffer((r4v0 'this' androidx.emoji2.text.flatbuffer.Table A[IMMUTABLE_TYPE, THIS]), (r5v0 'vector_offset' int A[D('vector_offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'elem_size' int A[D('elem_size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0025 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

