digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8.DecodeUtil.handleFourBytes(BBBB[CI)V" {
subgraph cluster_Region_1756162022 {
label = "R(1:(2:(1:13)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_Region_211152455 {
label = "R(2:(1:13)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1219626740 {
label = "IF [B:17:0x0004, B:19:0x000d, B:21:0x0013, B:23:0x0019] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0004|if (isNotTrailingByte(r4) != false) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|ADDED_TO_REGION\l|if ((((r3 \<\< 28) + (r4 + 112)) \>\> 30) != 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|ADDED_TO_REGION\l|if (isNotTrailingByte(r5) != false) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|ADDED_TO_REGION\l|if (isNotTrailingByte(r6) != false) goto L12\l}"];
subgraph cluster_Region_859386063 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0048|throw new java.lang.IllegalArgumentException(\"Invalid UTF\-8\")\l}"];
}
}
subgraph cluster_Region_933436554 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x001b|int r0 = ((r3 & 7) \<\< 18) \| (trailingByteValue(r4) \<\< 12) \| (trailingByteValue(r5) \<\< 6) \| trailingByteValue(r6)\lr7[r8] = highSurrogate(r0)\lr7[r8 + 1] = lowSurrogate(r0)\l}"];
}
}
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000f}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0015}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0040}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0041}"];
MethodNode[shape=record,label="{public static void androidx.emoji2.text.flatbuffer.Utf8.DecodeUtil.handleFourBytes((r3v0 'byte1' byte A[D('byte1' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'byte2' byte A[D('byte2' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'byte3' byte A[D('byte3' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'byte4' byte A[D('byte4' byte), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'resultArr' char[] A[D('resultArr' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'resultPos' int A[D('resultPos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0048 \-\> B:15:?, CROSS_EDGE: B:21:0x0013 \-\> B:26:0x0041, CROSS_EDGE: B:19:0x000d \-\> B:26:0x0041, CROSS_EDGE: B:17:0x0004 \-\> B:26:0x0041\lINLINE_NOT_NEEDED\lEXCEPTIONS:[Ljava\/lang\/IllegalArgumentException;]\l}"];
MethodNode -> Node_14;Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_27 -> Node_15;
Node_24 -> Node_25;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_25 -> Node_15;
Node_26 -> Node_27;
}

