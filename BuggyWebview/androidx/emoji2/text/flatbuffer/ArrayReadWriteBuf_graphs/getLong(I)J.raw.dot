digraph "CFG forandroidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.getLong(I)J" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:byte[]) = (r8 I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf) androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.buffer byte[]  (LINE:62)\l0x0002: ARITH  (r1 I:int) = (r9 I:int A[D('index' int)]) + (1 int) \l0x0004: AGET  (r9 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r9 I:??[int, short, byte, char] A[D('index' int)]) \l0x0006: CAST (r2 I:long) = (long) (r9 I:int) \l0x0007: CONST  (r4 I:??[long, double]) = (255(0xff, double:1.26E\-321) ??[long, double]) \l0x0009: ARITH  (r2 I:long) = (r2 I:long) & (r4 I:long) \l0x000a: ARITH  (r9 I:int) = (r1 I:int A[D('index' int)]) + (1 int) \l0x000c: AGET  (r1 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r1 I:??[int, short, byte, char] A[D('index' int)]) \l0x000e: CAST (r6 I:long) = (long) (r1 I:int) \l0x000f: ARITH  (r6 I:long) = (r6 I:long) & (r4 I:long) \l0x0010: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l0x0012: ARITH  (r6 I:long) = (r6 I:long) \<\< (r1 I:long) \l0x0013: ARITH  (r1 I:long) = (r2 I:long) \| (r6 I:long) \l0x0015: ARITH  (r3 I:int) = (r9 I:int A[D('index' int)]) + (1 int) \l0x0017: AGET  (r9 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r9 I:??[int, short, byte, char] A[D('index' int)]) \l0x0019: CAST (r6 I:long) = (long) (r9 I:int) \l0x001a: ARITH  (r6 I:long) = (r6 I:long) & (r4 I:long) \l0x001b: CONST  (r9 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x001d: ARITH  (r6 I:long) = (r6 I:long) \<\< (r9 I:long) \l0x001e: ARITH  (r1 I:long) = (r1 I:long) \| (r6 I:long) \l0x001f: ARITH  (r9 I:int) = (r3 I:int A[D('index' int)]) + (1 int) \l0x0021: AGET  (r3 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r3 I:??[int, short, byte, char] A[D('index' int)]) \l0x0023: CAST (r6 I:long) = (long) (r3 I:int) \l0x0024: ARITH  (r6 I:long) = (r6 I:long) & (r4 I:long) \l0x0025: CONST  (r3 I:??[int, float, short, byte, char]) = (24 ??[int, float, short, byte, char]) \l0x0027: ARITH  (r6 I:long) = (r6 I:long) \<\< (r3 I:long) \l0x0028: ARITH  (r1 I:long) = (r1 I:long) \| (r6 I:long) \l0x0029: ARITH  (r3 I:int) = (r9 I:int A[D('index' int)]) + (1 int) \l0x002b: AGET  (r9 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r9 I:??[int, short, byte, char] A[D('index' int)]) \l0x002d: CAST (r6 I:long) = (long) (r9 I:int) \l0x002e: ARITH  (r6 I:long) = (r6 I:long) & (r4 I:long) \l0x002f: CONST  (r9 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x0031: ARITH  (r6 I:long) = (r6 I:long) \<\< (r9 I:long) \l0x0032: ARITH  (r1 I:long) = (r1 I:long) \| (r6 I:long) \l0x0033: ARITH  (r9 I:int) = (r3 I:int A[D('index' int)]) + (1 int) \l0x0035: AGET  (r3 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r3 I:??[int, short, byte, char] A[D('index' int)]) \l0x0037: CAST (r6 I:long) = (long) (r3 I:int) \l0x0038: ARITH  (r6 I:long) = (r6 I:long) & (r4 I:long) \l0x0039: CONST  (r3 I:??[int, float, short, byte, char]) = (40 ??[int, float, short, byte, char]) \l0x003b: ARITH  (r6 I:long) = (r6 I:long) \<\< (r3 I:long) \l0x003c: ARITH  (r1 I:long) = (r1 I:long) \| (r6 I:long) \l0x003d: ARITH  (r3 I:int) = (r9 I:int A[D('index' int)]) + (1 int) \l0x003f: AGET  (r9 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r9 I:??[int, short, byte, char] A[D('index' int)]) \l0x0041: CAST (r6 I:long) = (long) (r9 I:int) \l0x0042: ARITH  (r4 I:long) = (r4 I:long) & (r6 I:long) \l0x0043: CONST  (r9 I:??[int, float, short, byte, char]) = (48 ??[int, float, short, byte, char]) \l0x0045: ARITH  (r4 I:long) = (r4 I:long) \<\< (r9 I:long) \l0x0046: ARITH  (r1 I:long) = (r1 I:long) \| (r4 I:long) \l0x0047: AGET  (r9 I:??[int, short, byte, char]) = (r0 I:byte[] A[IMMUTABLE_TYPE]), (r3 I:??[int, short, byte, char] A[D('index' int)]) \l0x0049: CAST (r4 I:long) = (long) (r9 I:int) \l0x004a: CONST  (r9 I:??[int, float, short, byte, char]) = (56 ??[int, float, short, byte, char]) \l0x004c: ARITH  (r4 I:long) = (r4 I:long) \<\< (r9 I:long) \l0x004d: ARITH  (r0 I:long) = (r1 I:long) \| (r4 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|RETURN\l|0x004f: RETURN  (r0 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public long androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.getLong((r8 'this' I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0004: r9 'index' I\l  0x0004\-0x000c: r1 'index' I\l  0x000c\-0x0017: r9 'index' I\l  0x0017\-0x0021: r3 'index' I\l  0x0021\-0x002b: r9 'index' I\l  0x002b\-0x0035: r3 'index' I\l  0x0035\-0x003f: r9 'index' I\l  0x003f\-0x004f: r3 'index' I\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.ReadBuf.getLong(int):long]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

