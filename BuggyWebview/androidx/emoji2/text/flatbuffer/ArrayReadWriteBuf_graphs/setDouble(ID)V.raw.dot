digraph "CFG forandroidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.setDouble(ID)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r7 I:int A[D('index' int)]) + (8 int)  (LINE:205)\l0x0002: INVOKE  (r6 I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf), (r0 I:int) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.requestCapacity(int):boolean A[MD:(int):boolean (m)]\l0x0005: INVOKE  (r0 I:long) = (r8 I:double A[D('value' double)]) type: STATIC call: java.lang.Double.doubleToRawLongBits(double):long A[MD:(double):long (c)] (LINE:207)\l0x0009: CAST (r2 I:int) = (int) (r0 I:long A[D('lValue' long)])  (LINE:208)\l0x000a: IGET  (r3 I:byte[]) = (r6 I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf) androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.buffer byte[]  (LINE:209)\l0x000c: ARITH  (r4 I:int) = (r7 I:int A[D('index' int)]) + (1 int) \l0x000e: ARITH  (r5 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('i' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0010: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x0011: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r7 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x0013: ARITH  (r7 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:210)\l0x0015: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) \>\> (8 int) \l0x0017: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0019: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x001a: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x001c: ARITH  (r4 I:int) = (r7 I:int A[D('index' int)]) + (1 int)  (LINE:211)\l0x001e: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) \>\> (16 int) \l0x0020: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0022: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x0023: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r7 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x0025: ARITH  (r7 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:212)\l0x0027: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) \>\> (24 int) \l0x0029: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x002b: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x002c: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x002e: CONST  (r4 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char])  (LINE:213)\l0x0030: ARITH  (r4 I:long) = (r0 I:long A[D('lValue' long)]) \>\> (r4 I:long) \l0x0032: CAST (r2 I:int A[D('i' int)]) = (int) (r4 I:long) \l0x0033: ARITH  (r4 I:int) = (r7 I:int A[D('index' int)]) + (1 int)  (LINE:214)\l0x0035: ARITH  (r5 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('i' int)]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0037: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x0038: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r7 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x003a: ARITH  (r7 I:int) = (r4 I:int A[D('index' int)]) + (1 int)  (LINE:215)\l0x003c: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) \>\> (8 int) \l0x003e: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0040: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x0041: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x0043: ARITH  (r4 I:int) = (r7 I:int A[D('index' int)]) + (1 int)  (LINE:216)\l0x0045: ARITH  (r5 I:int) = (r2 I:int A[D('i' int)]) \>\> (16 int) \l0x0047: ARITH  (r5 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0049: CAST (r5 I:byte) = (byte) (r5 I:int) \l0x004a: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r7 I:??[int, short, byte, char]), (r5 I:byte A[IMMUTABLE_TYPE]) \l0x004c: ARITH  (r7 I:int) = (r2 I:int A[D('i' int)]) \>\> (24 int)  (LINE:217)\l0x004e: ARITH  (r7 I:??[int, boolean]) = (r7 I:??[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char]) \l0x0050: CAST (r7 I:byte) = (byte) (r7 I:int) \l0x0051: APUT  (r3 I:byte[] A[IMMUTABLE_TYPE]), (r4 I:??[int, short, byte, char] A[D('index' int)]), (r7 I:byte A[IMMUTABLE_TYPE]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0053|RETURN\l|0x0053: RETURN    (LINE:218)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.setDouble((r6 'this' I:androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[D('value' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r7 'index' I\l  0x000e\-0x0015: r4 'index' I\l  0x0015\-0x001e: r7 'index' I\l  0x001e\-0x0027: r4 'index' I\l  0x0027\-0x0035: r7 'index' I\l  0x0035\-0x003c: r4 'index' I\l  0x003c\-0x0045: r7 'index' I\l  0x0009\-0x0053: r0 'lValue' J\l  0x000a\-0x0053: r2 'i' I\l  0x0045\-0x0053: r4 'index' I\l  \-1 \-0x0053: r8 'value' D\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.ReadWriteBuf.setDouble(int, double):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

