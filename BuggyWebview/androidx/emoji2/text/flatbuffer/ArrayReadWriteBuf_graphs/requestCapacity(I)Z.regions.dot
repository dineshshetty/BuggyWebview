digraph "CFG forandroidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.requestCapacity(I)Z" {
subgraph cluster_Region_1061386262 {
label = "R(2:1|(2:(1:3)|(2:5|6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|byte[] byte[] r0 = r4.buffer\l}"];
subgraph cluster_Region_455563954 {
label = "R(2:(1:3)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1227575002 {
label = "IF [B:10:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0004|if (r0.length \> r5) goto L3\l}"];
subgraph cluster_Region_197683759 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0006|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_285363010 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0007|int int r1 = r0.length\lint int r3 = (r1 \>\> 1) + r1\lr4.buffer = java.util.Arrays.copyOf(r0, r3)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|RETURN\l|return true\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf.requestCapacity((r4v0 'this' androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf A[IMMUTABLE_TYPE, THIS]), (r5v0 'capacity' int A[D('capacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0011 \-\> B:8:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.ReadWriteBuf.requestCapacity(int):boolean]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

