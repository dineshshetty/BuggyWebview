digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Old.decodeUtf8(Ljava\/nio\/ByteBuffer;II)Ljava\/lang\/String;" {
subgraph cluster_Region_1895128932 {
label = "R(2:1|(2:3|4))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|java.nio.charset.CharsetDecoder java.nio.charset.CharsetDecoder r0 = androidx.emoji2.text.flatbuffer.Utf8Old.CACHE.get().decoder\lr0.reset()\ljava.nio.ByteBuffer java.nio.ByteBuffer r5 = r5.duplicate()\lr5.position(r6)\lr5.limit(r6 + r7)\l}"];
subgraph cluster_TryCatchRegion_493696491 {
label = "Try: R(2:3|4) catches: R(2:7|9)";
node [shape=record,color=blue];
subgraph cluster_Region_727536547 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0019|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{CharacterCodingException \-\> 0x0022, blocks: (B:13:0x0019), top: B:18:0x0019 \}\lCatch: CharacterCodingException \-\> 0x0022\l|java.nio.CharBuffer java.nio.CharBuffer r1 = r0.decode(r5)     \/\/ Catch: java.nio.charset.CharacterCodingException \-\> L22\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|RETURN\l|return r1.toString()\l}"];
}
subgraph cluster_Region_572281013 {
label = "R(2:7|9) | ExcHandler: CharacterCodingException \-\> 0x0022\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0022|ExcHandler: CharacterCodingException \-\> 0x0022\l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"Bad encoding\", r1)\l}"];
}
}
}
subgraph cluster_Region_572281013 {
label = "R(2:7|9) | ExcHandler: CharacterCodingException \-\> 0x0022\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0022|ExcHandler: CharacterCodingException \-\> 0x0022\l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"Bad encoding\", r1)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0019|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0023}"];
MethodNode[shape=record,label="{public java.lang.String androidx.emoji2.text.flatbuffer.Utf8Old.decodeUtf8((r4v0 'this' androidx.emoji2.text.flatbuffer.Utf8Old A[IMMUTABLE_TYPE, THIS]), (r5v0 'buffer' java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'length' int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x002a \-\> B:11:?, CROSS_EDGE: B:18:0x0019 \-\> B:15:0x0022\lINLINE_NOT_NEEDED\lTryCatch #0 \{CharacterCodingException \-\> 0x0022, blocks: (B:13:0x0019), top: B:18:0x0019 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.Utf8.decodeUtf8(java.nio.ByteBuffer, int, int):java.lang.String]\l}"];
MethodNode -> Node_10;Node_12 -> Node_18;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_11;
Node_10 -> Node_12;
Node_18 -> Node_13;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_16 -> Node_17;
}

