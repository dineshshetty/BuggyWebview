digraph "CFG forandroidx.emoji2.text.flatbuffer.Utf8Old.encodeUtf8(Ljava\/lang\/CharSequence;Ljava\/nio\/ByteBuffer;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: SGET  (r0 I:java.lang.ThreadLocal\<androidx.emoji2.text.flatbuffer.Utf8Old$Cache\>) =  androidx.emoji2.text.flatbuffer.Utf8Old.CACHE java.lang.ThreadLocal  (LINE:76)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ThreadLocal) type: VIRTUAL call: java.lang.ThreadLocal.get():java.lang.Object A[MD:():T (c)]\l0x0006: CHECK_CAST (r0 I:androidx.emoji2.text.flatbuffer.Utf8Old$Cache) = (androidx.emoji2.text.flatbuffer.Utf8Old$Cache) (r0 I:??[OBJECT, ARRAY]) \l0x0008: IGET  (r1 I:java.lang.CharSequence) = (r0 I:androidx.emoji2.text.flatbuffer.Utf8Old$Cache A[D('cache' androidx.emoji2.text.flatbuffer.Utf8Old$Cache)]) androidx.emoji2.text.flatbuffer.Utf8Old.Cache.lastInput java.lang.CharSequence  (LINE:77)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('in' java.lang.CharSequence)])  \-\> B:12:0x000f \l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|0x000c: INVOKE  (r2 I:androidx.emoji2.text.flatbuffer.Utf8Old), (r3 I:java.lang.CharSequence A[D('in' java.lang.CharSequence)]) type: VIRTUAL call: androidx.emoji2.text.flatbuffer.Utf8Old.encodedLength(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (m)] (LINE:80)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|0x000f: IGET  (r1 I:java.nio.ByteBuffer) = (r0 I:androidx.emoji2.text.flatbuffer.Utf8Old$Cache A[D('cache' androidx.emoji2.text.flatbuffer.Utf8Old$Cache)]) androidx.emoji2.text.flatbuffer.Utf8Old.Cache.lastOutput java.nio.ByteBuffer  (LINE:82)\l0x0011: INVOKE  (r4 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer)]), (r1 I:java.nio.ByteBuffer) type: VIRTUAL call: java.nio.ByteBuffer.put(java.nio.ByteBuffer):java.nio.ByteBuffer A[MD:(java.nio.ByteBuffer):java.nio.ByteBuffer (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:83)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.flatbuffer.Utf8Old.encodeUtf8((r2 'this' I:androidx.emoji2.text.flatbuffer.Utf8Old A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('in' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.ByteBuffer A[D('out' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000a \-\> B:12:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0014: r0 'cache' Landroidx\/emoji2\/text\/flatbuffer\/Utf8Old$Cache;\l  \-1 \-0x0014: r3 'in' Ljava\/lang\/CharSequence;\l  \-1 \-0x0014: r4 'out' Ljava\/nio\/ByteBuffer;\lMETHOD_OVERRIDE: [androidx.emoji2.text.flatbuffer.Utf8.encodeUtf8(java.lang.CharSequence, java.nio.ByteBuffer):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

