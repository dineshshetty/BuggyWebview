digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.bool(IZ)Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) =  androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value  (LINE:666)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('b' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: CONST  (r0 I:??[long, double]) = (1 ??[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: MOVE  (r4 I:??[long, double]) = (r0 I:??[long, double]) \l0x000a: CONST  (r2 I:??[int, float, short, byte, char]) = (26 ??[int, float, short, byte, char]) \l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x000e: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('key' int)]) \l0x000f: INVOKE  (r0 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:long) type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.\<init\>(int, int, int, long):void A[MD:(int, int, int, long):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|0x0012: RETURN  (r6 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: CONST  (r0 I:??[long, double]) = (0 ??[long, double]) \l}"];
MethodNode[shape=record,label="{static androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.bool((r7 I:int A[D('key' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('b' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x0007 \-\> B:6:0x0009\lDebug Info:\l  \-1 \-0x0012: r7 'key' I\l  \-1 \-0x0012: r8 'b' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_5 -> Node_6;
}

