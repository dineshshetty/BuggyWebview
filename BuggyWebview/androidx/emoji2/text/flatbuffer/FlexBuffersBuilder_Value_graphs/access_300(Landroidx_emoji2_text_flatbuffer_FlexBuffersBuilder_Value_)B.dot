digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.access$300(Landroidx\/emoji2\/text\/flatbuffer\/FlexBuffersBuilder$Value;)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|RETURN\l|return r1.storedPackedType()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ byte androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.access$300((r1v0 'x0' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value A[D('x0' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | METHOD_CANDIDATE_FOR_INLINE\lUSE_LINES_HINTS\lINLINE: 0x0000: INVOKE  \l  (r1 I:androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value A[D('x0' androidx.emoji2.text.flatbuffer.FlexBuffersBuilder$Value)])\l type: DIRECT call: androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.storedPackedType():byte\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Marked for inline\}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

