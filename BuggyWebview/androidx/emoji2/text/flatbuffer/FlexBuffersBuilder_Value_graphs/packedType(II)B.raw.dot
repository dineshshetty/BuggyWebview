digraph "CFG forandroidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.packedType(II)B" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r2 I:int A[D('type' int)]) \<\< (2 int)  (LINE:722)\l0x0002: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) \| (r1 I:??[int, boolean, short, byte, char] A[D('bitWidth' int)]) \l0x0003: CAST (r0 I:byte) = (byte) (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:byte) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static byte androidx.emoji2.text.flatbuffer.FlexBuffersBuilder.Value.packedType((r1 I:int A[D('bitWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0004: r1 'bitWidth' I\l  \-1 \-0x0004: r2 'type' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

