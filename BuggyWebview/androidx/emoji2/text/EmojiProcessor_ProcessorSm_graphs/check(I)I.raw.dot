digraph "CFG forandroidx.emoji2.text.EmojiProcessor.ProcessorSm.check(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.emoji2.text.MetadataRepo$Node) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:575)\l0x0002: INVOKE  (r0 I:androidx.emoji2.text.MetadataRepo$Node) = (r0 I:androidx.emoji2.text.MetadataRepo$Node), (r4 I:int A[D('codePoint' int)]) type: VIRTUAL call: androidx.emoji2.text.MetadataRepo.Node.get(int):androidx.emoji2.text.MetadataRepo$Node A[MD:(int):androidx.emoji2.text.MetadataRepo$Node (m)]\l0x0006: IGET  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mState int  (LINE:576)\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: SWITCH  (r1 I:??)\l case 2: goto B:6:0x0013\l default: goto B:4:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('node' androidx.emoji2.text.MetadataRepo$Node)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005f  (LINE:608)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:609)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|0x0067: IPUT  (r4 I:int A[D('codePoint' int)]), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mLastCodepoint int  (LINE:619)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0069|RETURN\l|0x0069: RETURN  (r1 I:int A[D('action' int)])  (LINE:620)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: CONST  (r1 I:??[int, float, short, byte, char] A[D('action' int)]) = (2 ??[int, float, short, byte, char])  (LINE:611)\l0x0060: IPUT  (r1 I:int), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mState int \l0x0062: IPUT  \l  (r0 I:androidx.emoji2.text.MetadataRepo$Node A[D('node' androidx.emoji2.text.MetadataRepo$Node)])\l  (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm)\l androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:612)\l0x0064: IPUT  (r2 I:int), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentDepth int  (LINE:613)\l0x0066: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:614)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('node' androidx.emoji2.text.MetadataRepo$Node)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e  (LINE:578)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IPUT  \l  (r0 I:androidx.emoji2.text.MetadataRepo$Node A[D('node' androidx.emoji2.text.MetadataRepo$Node)])\l  (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm)\l androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:579)\l0x0017: IGET  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentDepth int  (LINE:580)\l0x0019: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x001a: IPUT  (r1 I:int), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentDepth int \l0x001c: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:581)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r1 I:boolean) = (r4 I:int A[D('codePoint' int)]) type: STATIC call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.isTextStyle(int):boolean A[MD:(int):boolean (m)] (LINE:583)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: INVOKE  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:584)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: INVOKE  (r1 I:boolean) = (r4 I:int A[D('codePoint' int)]) type: STATIC call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.isEmojiStyle(int):boolean A[MD:(int):boolean (m)] (LINE:585)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0031 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:586)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: IGET  (r1 I:androidx.emoji2.text.MetadataRepo$Node A[D('action' int)]) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:587)\l0x0033: INVOKE  (r1 I:androidx.emoji2.text.EmojiMetadata) = (r1 I:androidx.emoji2.text.MetadataRepo$Node) type: VIRTUAL call: androidx.emoji2.text.MetadataRepo.Node.getData():androidx.emoji2.text.EmojiMetadata A[MD:():androidx.emoji2.text.EmojiMetadata (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x005a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IGET  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentDepth int  (LINE:588)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0051 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: INVOKE  (r1 I:boolean) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.shouldUseEmojiPresentationStyleForSingleCodepoint():boolean A[MD:():boolean (m)] (LINE:589)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004c \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: IGET  (r1 I:androidx.emoji2.text.MetadataRepo$Node) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:590)\l0x0045: IPUT  (r1 I:androidx.emoji2.text.MetadataRepo$Node), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mFlushNode androidx.emoji2.text.MetadataRepo$Node \l0x0047: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:591)\l0x0048: INVOKE  (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:592)\l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: INVOKE  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:594)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|0x0051: IGET  (r1 I:androidx.emoji2.text.MetadataRepo$Node A[D('action' int)]) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mCurrentNode androidx.emoji2.text.MetadataRepo$Node  (LINE:597)\l0x0053: IPUT  (r1 I:androidx.emoji2.text.MetadataRepo$Node), (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) androidx.emoji2.text.EmojiProcessor.ProcessorSm.mFlushNode androidx.emoji2.text.MetadataRepo$Node \l0x0055: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:598)\l0x0056: INVOKE  (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:599)\l}"];
Node_23 [shape=record,label="{23\:\ 0x005a|0x005a: INVOKE  (r1 I:int) = (r3 I:androidx.emoji2.text.EmojiProcessor$ProcessorSm) type: DIRECT call: androidx.emoji2.text.EmojiProcessor.ProcessorSm.reset():int A[MD:():int (m)] (LINE:602)\l}"];
MethodNode[shape=record,label="{int androidx.emoji2.text.EmojiProcessor.ProcessorSm.check((r3 'this' I:androidx.emoji2.text.EmojiProcessor$ProcessorSm A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('codePoint' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x005f \-\> B:25:0x0067, CROSS_EDGE: B:7:0x0015 \-\> B:25:0x0067, CROSS_EDGE: B:10:0x0024 \-\> B:25:0x0067, CROSS_EDGE: B:13:0x002f \-\> B:25:0x0067, CROSS_EDGE: B:20:0x0043 \-\> B:25:0x0067, CROSS_EDGE: B:21:0x004c \-\> B:25:0x0067, CROSS_EDGE: B:22:0x0051 \-\> B:25:0x0067, CROSS_EDGE: B:23:0x005a \-\> B:25:0x0067\lDebug Info:\l  0x0012\-0x0013: r1 'action' I\l  0x001d\-0x001e: r1 'action' I\l  0x0028\-0x0029: r1 'action' I\l  0x0030\-0x0031: r1 'action' I\l  0x0048\-0x004c: r1 'action' I\l  0x0050\-0x0051: r1 'action' I\l  0x0056\-0x005a: r1 'action' I\l  0x005e\-0x005f: r1 'action' I\l  0x0006\-0x006f: r0 'node' Landroidx\/emoji2\/text\/MetadataRepo$Node;\l  0x0067\-0x006f: r1 'action' I\l  \-1 \-0x006f: r4 'codePoint' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_24 -> Node_25;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_25;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_25;
Node_21 -> Node_25;
Node_22 -> Node_25;
Node_23 -> Node_25;
}

