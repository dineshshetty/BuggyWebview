digraph "CFG forandroidx.emoji2.text.ConcurrencyHelpers.createBackgroundPriorityExecutor(Ljava\/lang\/String;)Ljava\/util\/concurrent\/ThreadPoolExecutor;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r7 I:androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1) =  androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1  (LINE:56)\l0x0002: INVOKE  \l  (r7 I:androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1)\l  (r9 I:java.lang.String A[D('name' java.lang.String)])\l type: DIRECT call: androidx.emoji2.text.ConcurrencyHelpers$$ExternalSyntheticLambda1.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r8 I:java.util.concurrent.ThreadPoolExecutor) =  java.util.concurrent.ThreadPoolExecutor  (LINE:61)\l0x0007: SGET  (r5 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x0009: NEW_INSTANCE  (r6 I:java.util.concurrent.LinkedBlockingDeque) =  java.util.concurrent.LinkedBlockingDeque \l0x000b: INVOKE  (r6 I:java.util.concurrent.LinkedBlockingDeque) type: DIRECT call: java.util.concurrent.LinkedBlockingDeque.\<init\>():void A[MD:():void (c)]\l0x000e: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: CONST  (r3 I:??[long, double]) = (15 ??[long, double]) \l0x0012: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  \l  (r0 I:java.util.concurrent.ThreadPoolExecutor)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.util.concurrent.TimeUnit)\l  (r6 I:java.util.concurrent.BlockingQueue)\l  (r7 I:java.util.concurrent.ThreadFactory A[D('threadFactory' java.util.concurrent.ThreadFactory)])\l type: DIRECT call: java.util.concurrent.ThreadPoolExecutor.\<init\>(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue, java.util.concurrent.ThreadFactory):void A[MD:(int, int, long, java.util.concurrent.TimeUnit, java.util.concurrent.BlockingQueue\<java.lang.Runnable\>, java.util.concurrent.ThreadFactory):void (c)]\l0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:69)\l0x0017: INVOKE  (r0 I:java.util.concurrent.ThreadPoolExecutor A[D('executor' java.util.concurrent.ThreadPoolExecutor)]), (r1 I:boolean) type: VIRTUAL call: java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(boolean):void A[MD:(boolean):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:java.util.concurrent.ThreadPoolExecutor A[D('executor' java.util.concurrent.ThreadPoolExecutor)])  (LINE:70)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static java.util.concurrent.ThreadPoolExecutor androidx.emoji2.text.ConcurrencyHelpers.createBackgroundPriorityExecutor((r9 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001a: r0 'executor' Ljava\/util\/concurrent\/ThreadPoolExecutor;\l  0x0005\-0x001a: r7 'threadFactory' Ljava\/util\/concurrent\/ThreadFactory;\l  \-1 \-0x001a: r9 'name' Ljava\/lang\/String;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

