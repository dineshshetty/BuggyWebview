digraph "CFG forandroidx.emoji2.text.MetadataListReader.InputStreamOpenTypeReader.skip(I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|LOOP_START\lLOOP:0: B:13:0x0000\-\>B:16:0x000d\lPHI: r7 \l  PHI: (r7v1 'numOfBytes' int) = (r7v0 'numOfBytes' int), (r7v2 'numOfBytes' int) binds: [B:11:?, B:16:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \<= 0) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|int r1 = (int) r6.mInputStream.skip((long) r7)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|if (r1 \< 1) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|LOOP_END\lLOOP:0: B:13:0x0000\-\>B:16:0x000d\l|int r7 = r7 \- r1\lr6.mPosition = r6.mPosition + ((long) r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015}"];
Node_18 [shape=record,label="{18\:\ 0x001c|throw new java.io.IOException(\"Skip didn't move at least 1 byte forward\")\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x001d|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.MetadataListReader.InputStreamOpenTypeReader.skip((r6v0 'this' androidx.emoji2.text.MetadataListReader$InputStreamOpenTypeReader A[IMMUTABLE_TYPE, THIS]), (r7v0 'numOfBytes' int A[D('numOfBytes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x000d \-\> B:13:0x0000, CROSS_EDGE: B:19:0x001d \-\> B:12:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/io\/IOException;]\lMETHOD_OVERRIDE: [androidx.emoji2.text.MetadataListReader.OpenTypeReader.skip(int):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_13;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_20 -> Node_19;
Node_19 -> Node_12;
}

