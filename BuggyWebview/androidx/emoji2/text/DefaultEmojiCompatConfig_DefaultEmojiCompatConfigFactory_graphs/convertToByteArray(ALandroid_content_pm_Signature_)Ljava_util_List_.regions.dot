digraph "CFG forandroidx.emoji2.text.DefaultEmojiCompatConfig.DefaultEmojiCompatConfigFactory.convertToByteArray([Landroid\/content\/pm\/Signature;)Ljava\/util\/List;" {
subgraph cluster_Region_83360571 {
label = "R(3:1|(1:3)|6)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|java.util.ArrayList java.util.List\<byte[]\> r0 = new java.util.ArrayList\<\>()\lint r2 = 0\l\l}"];
subgraph cluster_LoopRegion_1852316677 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0007|LOOP_START\lLOOP:0: B:11:0x0007\-\>B:12:0x0009\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:10:0x0000, B:12:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L3\l}"];
subgraph cluster_Region_507666948 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0009|LOOP_END\lLOOP:0: B:11:0x0007\-\>B:12:0x0009\l|r3 = r6[r2]\lr0.add(r3.toByteArray())\lr2++\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0019|RETURN\l|return java.util.Collections.singletonList(r0)\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0015|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0015}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private java.util.List\<java.util.List\<byte[]\>\> androidx.emoji2.text.DefaultEmojiCompatConfig.DefaultEmojiCompatConfigFactory.convertToByteArray((r5v0 'this' androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory A[IMMUTABLE_TYPE, THIS]), (r6v0 'signatures' android.content.pm.Signature[] A[D('signatures' android.content.pm.Signature[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0009 \-\> B:11:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ([Landroid\/content\/pm\/Signature;)Ljava\/util\/List\<Ljava\/util\/List\<[B\>;\>;\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_12 -> Node_11;
Node_14 -> Node_9;
Node_8 -> Node_10;
Node_15 -> Node_13;
Node_13 -> Node_14;
}

