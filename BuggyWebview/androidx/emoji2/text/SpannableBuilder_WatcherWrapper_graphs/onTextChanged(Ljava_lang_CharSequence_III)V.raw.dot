digraph "CFG forandroidx.emoji2.text.SpannableBuilder.WatcherWrapper.onTextChanged(Ljava\/lang\/CharSequence;III)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r1 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper) androidx.emoji2.text.SpannableBuilder.WatcherWrapper.mObject java.lang.Object  (LINE:390)\l0x0002: CHECK_CAST (r0 I:android.text.TextWatcher) = (android.text.TextWatcher) (r0 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  \l  (r0 I:android.text.TextWatcher)\l  (r2 I:java.lang.CharSequence A[D('s' java.lang.CharSequence)])\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('before' int)])\l  (r5 I:int A[D('count' int)])\l type: INTERFACE call: android.text.TextWatcher.onTextChanged(java.lang.CharSequence, int, int, int):void A[MD:(java.lang.CharSequence, int, int, int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:391)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.SpannableBuilder.WatcherWrapper.onTextChanged((r1 'this' I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.CharSequence A[D('s' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('before' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r2 's' Ljava\/lang\/CharSequence;\l  \-1 \-0x0007: r3 'start' I\l  \-1 \-0x0007: r4 'before' I\l  \-1 \-0x0007: r5 'count' I\lMETHOD_OVERRIDE: [ClspMth\{android.text.TextWatcher.onTextChanged(java.lang.CharSequence, int, int, int):void\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

