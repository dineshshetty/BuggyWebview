digraph "CFG forandroidx.emoji2.text.SpannableBuilder.WatcherWrapper.onSpanAdded(Landroid\/text\/Spannable;Ljava\/lang\/Object;II)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000}"];
Node_12 [shape=record,label="{12\:\ 0x0006|if (r1.mBlockCalls.get() \<= 0) goto L7\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008}"];
Node_14 [shape=record,label="{14\:\ 0x000c|if (isEmojiSpan(r3) == false) goto L7\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|((android.text.SpanWatcher) r1.mObject).onSpanAdded(r2, r3, r4, r5)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.SpannableBuilder.WatcherWrapper.onSpanAdded((r1v0 'this' androidx.emoji2.text.SpannableBuilder$WatcherWrapper A[IMMUTABLE_TYPE, THIS]), (r2v0 'text' android.text.Spannable A[D('text' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'what' java.lang.Object A[D('what' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0016 \-\> B:10:?, CROSS_EDGE: B:12:0x0006 \-\> B:16:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.text.SpanWatcher.onSpanAdded(android.text.Spannable, java.lang.Object, int, int):void\}]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

