digraph "CFG forandroidx.emoji2.text.SpannableBuilder.WatcherWrapper.onSpanChanged(Landroid\/text\/Spannable;Ljava\/lang\/Object;IIII)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicInteger) = (r7 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper) androidx.emoji2.text.SpannableBuilder.WatcherWrapper.mBlockCalls java.util.concurrent.atomic.AtomicInteger  (LINE:429)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.concurrent.atomic.AtomicInteger) type: VIRTUAL call: java.util.concurrent.atomic.AtomicInteger.get():int A[MD:():int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:22:0x000f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = (r7 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper), (r9 I:java.lang.Object A[D('what' java.lang.Object)]) type: DIRECT call: androidx.emoji2.text.SpannableBuilder.WatcherWrapper.isEmojiSpan(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000f \l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|RETURN\l|0x000e: RETURN    (LINE:430)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|0x000f: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:433)\l0x0011: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:28:0x001b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IF  (r10 I:??[int, byte, short, char] A[D('ostart' int)]) \<= (r11 I:??[int, byte, short, char] A[D('oend' int)])  \-\> B:26:0x0018  (LINE:438)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ostart' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:439)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: IF  (r12 I:??[int, byte, short, char] A[D('nstart' int)]) \<= (r13 I:??[int, byte, short, char] A[D('nend' int)])  \-\> B:28:0x001b  (LINE:441)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nstart' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:442)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: IGET  (r0 I:java.lang.Object) = (r7 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper) androidx.emoji2.text.SpannableBuilder.WatcherWrapper.mObject java.lang.Object  (LINE:445)\l0x001d: CHECK_CAST (r0 I:android.text.SpanWatcher) = (android.text.SpanWatcher) (r0 I:??[OBJECT, ARRAY]) \l0x001f: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('text' android.text.Spannable)]) \l0x0020: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('what' java.lang.Object)]) \l0x0021: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ostart' int)]) \l0x0022: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('oend' int)]) \l0x0023: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nstart' int)]) \l0x0024: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nend' int)]) \l0x0025: INVOKE  \l  (r0 I:android.text.SpanWatcher)\l  (r1 I:android.text.Spannable)\l  (r2 I:java.lang.Object)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l type: INTERFACE call: android.text.SpanWatcher.onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int):void A[MD:(android.text.Spannable, java.lang.Object, int, int, int, int):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|RETURN\l|0x0028: RETURN    (LINE:446)\l}"];
MethodNode[shape=record,label="{public void androidx.emoji2.text.SpannableBuilder.WatcherWrapper.onSpanChanged((r7 'this' I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper A[IMMUTABLE_TYPE, THIS]), (r8 I:android.text.Spannable A[D('text' android.text.Spannable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Object A[D('what' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('ostart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('oend' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('nstart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('nend' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x0028 \-\> B:16:?, CROSS_EDGE: B:26:0x0018 \-\> B:28:0x001b, CROSS_EDGE: B:24:0x0015 \-\> B:26:0x0018, CROSS_EDGE: B:23:0x0013 \-\> B:28:0x001b, CROSS_EDGE: B:18:0x0006 \-\> B:22:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0028: r8 'text' Landroid\/text\/Spannable;\l  \-1 \-0x0028: r9 'what' Ljava\/lang\/Object;\l  \-1 \-0x0028: r10 'ostart' I\l  \-1 \-0x0028: r11 'oend' I\l  \-1 \-0x0028: r12 'nstart' I\l  \-1 \-0x0028: r13 'nend' I\lMETHOD_OVERRIDE: [ClspMth\{android.text.SpanWatcher.onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int):void\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

