digraph "CFG forandroidx.emoji2.text.SpannableBuilder.getSpans(IILjava\/lang\/Class;)[Ljava\/lang\/Object;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:androidx.emoji2.text.SpannableBuilder), (r7 I:java.lang.Class A[D('kind' java.lang.Class\<T\>)]) type: DIRECT call: androidx.emoji2.text.SpannableBuilder.isWatcher(java.lang.Class):boolean A[MD:(java.lang.Class\<?\>):boolean (m)] (LINE:151)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0023 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: CONST_CLASS  (r0 I:java.lang.Class\<androidx.emoji2.text.SpannableBuilder$WatcherWrapper\>) =  androidx.emoji2.text.SpannableBuilder$WatcherWrapper.class  (LINE:152)\l0x0008: INVOKE  (r0 I:java.lang.Object[]) = \l  (r4 I:android.text.SpannableStringBuilder)\l  (r5 I:int A[D('queryStart' int)])\l  (r6 I:int A[D('queryEnd' int)])\l  (r0 I:java.lang.Class)\l type: SUPER call: android.text.SpannableStringBuilder.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)]\l0x000c: CHECK_CAST (r0 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper[]) = (androidx.emoji2.text.SpannableBuilder$WatcherWrapper[]) (r0 I:??[OBJECT, ARRAY]) \l0x000e: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[] A[D('spans' androidx.emoji2.text.SpannableBuilder$WatcherWrapper[])])  (LINE:154)\l0x000f: INVOKE  (r1 I:java.lang.Object) = (r7 I:java.lang.Class A[D('kind' java.lang.Class\<T\>)]), (r1 I:int) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object A[MD:(java.lang.Class\<?\>, int):java.lang.Object throws java.lang.NegativeArraySizeException (c)]\l0x0013: CHECK_CAST (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:??[OBJECT, ARRAY]) \l0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0016|LOOP_START\lLOOP:0: B:17:0x0016\-\>B:19:0x0019\l|0x0016: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[] A[D('spans' androidx.emoji2.text.SpannableBuilder$WatcherWrapper[])]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:23:0x0022 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|LOOP_END\lLOOP:0: B:17:0x0016\-\>B:19:0x0019\l|0x0019: AGET  (r3 I:??[OBJECT, ARRAY]) = \l  (r0 I:??[OBJECT, ARRAY][] A[D('spans' androidx.emoji2.text.SpannableBuilder$WatcherWrapper[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:156)\l0x001b: IGET  (r3 I:java.lang.Object) = (r3 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper) androidx.emoji2.text.SpannableBuilder.WatcherWrapper.mObject java.lang.Object \l0x001d: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('result' T[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:??[OBJECT, ARRAY])\l \l0x001f: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:155)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|RETURN\l|0x0022: RETURN  (r1 I:T[] A[D('result' T[])])  (LINE:158)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|0x0023: INVOKE  (r0 I:java.lang.Object[]) = \l  (r4 I:android.text.SpannableStringBuilder)\l  (r5 I:int A[D('queryStart' int)])\l  (r6 I:int A[D('queryEnd' int)])\l  (r7 I:java.lang.Class A[D('kind' java.lang.Class\<T\>)])\l type: SUPER call: android.text.SpannableStringBuilder.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:\<T\>:(int, int, java.lang.Class\<T\>):T[] (c)] (LINE:160)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|RETURN\l|0x0027: RETURN  (r0 I:T[]) \l}"];
MethodNode[shape=record,label="{public T[] androidx.emoji2.text.SpannableBuilder.getSpans((r4 'this' I:androidx.emoji2.text.SpannableBuilder A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('queryStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('queryEnd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Class\<T\> A[D('kind' java.lang.Class\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x0019 \-\> B:17:0x0016, CROSS_EDGE: B:22:0x0027 \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(IILjava\/lang\/Class\<TT;\>;)[TT;\lDebug Info:\l  0x0016\-0x0022: r2 'i' I\l  0x000e\-0x0023: r0 'spans' [Landroidx\/emoji2\/text\/SpannableBuilder$WatcherWrapper;\l  0x0015\-0x0023: r1 'result' [Ljava\/lang\/Object;, signature: [TT;\l  \-1 \-0x0027: r5 'queryStart' I\l  \-1 \-0x0027: r6 'queryEnd' I\l  0x0000\-0x0027: r7 'kind' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<TT;\>;\lMETHOD_OVERRIDE: [ClspMth\{\<T\> android.text.SpannableStringBuilder.getSpans(int, int, java.lang.Class\<T\>):T[]\}, ClspMth\{\<T\> android.text.Spanned.getSpans(int, int, java.lang.Class\<T\>):T[]\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_17;
Node_23 -> Node_20;
Node_20 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

