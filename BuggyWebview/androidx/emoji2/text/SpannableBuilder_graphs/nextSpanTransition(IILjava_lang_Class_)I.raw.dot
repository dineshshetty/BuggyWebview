digraph "CFG forandroidx.emoji2.text.SpannableBuilder.nextSpanTransition(IILjava\/lang\/Class;)I" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' java.lang.Class)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008  (LINE:233)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = (r1 I:androidx.emoji2.text.SpannableBuilder), (r4 I:java.lang.Class A[D('type' java.lang.Class)]) type: DIRECT call: androidx.emoji2.text.SpannableBuilder.isWatcher(java.lang.Class):boolean A[MD:(java.lang.Class\<?\>):boolean (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000a \l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = \l  (r1 I:android.text.SpannableStringBuilder)\l  (r2 I:int A[D('start' int)])\l  (r3 I:int A[D('limit' int)])\l  (r4 I:java.lang.Class A[D('type' java.lang.Class)])\l type: SUPER call: android.text.SpannableStringBuilder.nextSpanTransition(int, int, java.lang.Class):int A[MD:(int, int, java.lang.Class):int (c)] (LINE:236)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: CONST_CLASS  (r4 I:java.lang.Class\<androidx.emoji2.text.SpannableBuilder$WatcherWrapper\> A[D('type' java.lang.Class)]) =  androidx.emoji2.text.SpannableBuilder$WatcherWrapper.class  (LINE:234)\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.SpannableBuilder.nextSpanTransition((r1 'this' I:androidx.emoji2.text.SpannableBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Class A[D('type' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:12:0x0006 \-\> B:14:0x000a, CROSS_EDGE: B:10:0x0000 \-\> B:13:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000e: r2 'start' I\l  \-1 \-0x000e: r3 'limit' I\l  \-1 \-0x000e: r4 'type' Ljava\/lang\/Class;\lMETHOD_OVERRIDE: [ClspMth\{android.text.Spanned.nextSpanTransition(int, int, java.lang.Class):int\}, ClspMth\{android.text.SpannableStringBuilder.nextSpanTransition(int, int, java.lang.Class):int\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

