digraph "CFG forandroidx.emoji2.text.SpannableBuilder.getSpanStart(Ljava\/lang\/Object;)I" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:androidx.emoji2.text.SpannableBuilder), (r2 I:java.lang.Object A[D('tag' java.lang.Object)]) type: DIRECT call: androidx.emoji2.text.SpannableBuilder.isWatcher(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:191)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000d \l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: INVOKE  (r0 I:androidx.emoji2.text.SpannableBuilder$WatcherWrapper) = (r1 I:androidx.emoji2.text.SpannableBuilder), (r2 I:java.lang.Object A[D('tag' java.lang.Object)]) type: DIRECT call: androidx.emoji2.text.SpannableBuilder.getWatcherFor(java.lang.Object):androidx.emoji2.text.SpannableBuilder$WatcherWrapper A[MD:(java.lang.Object):androidx.emoji2.text.SpannableBuilder$WatcherWrapper (m)] (LINE:192)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('watcher' androidx.emoji2.text.SpannableBuilder$WatcherWrapper)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000d  (LINE:193)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('tag' java.lang.Object)]) = (r0 I:??[OBJECT, ARRAY] A[D('watcher' androidx.emoji2.text.SpannableBuilder$WatcherWrapper)])  (LINE:194)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|0x000d: INVOKE  (r0 I:int) = (r1 I:android.text.SpannableStringBuilder), (r2 I:java.lang.Object A[D('tag' java.lang.Object)]) type: SUPER call: android.text.SpannableStringBuilder.getSpanStart(java.lang.Object):int A[MD:(java.lang.Object):int (c)] (LINE:197)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.emoji2.text.SpannableBuilder.getSpanStart((r1 'this' I:androidx.emoji2.text.SpannableBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[D('tag' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x000a \-\> B:16:0x000d, CROSS_EDGE: B:12:0x0004 \-\> B:16:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x000d: r0 'watcher' Landroidx\/emoji2\/text\/SpannableBuilder$WatcherWrapper;\l  \-1 \-0x0011: r2 'tag' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{android.text.Spanned.getSpanStart(java.lang.Object):int\}, ClspMth\{android.text.SpannableStringBuilder.getSpanStart(java.lang.Object):int\}]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

