digraph "CFG forandroidx.emoji2.text.EmojiProcessor.handleDeleteSurroundingText(Landroid\/view\/inputmethod\/InputConnection;Landroid\/text\/Editable;IIZ)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0001|if (r12 == null) goto L28\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|if (r11 != null) goto L4\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|if (r13 \< 0) goto L27\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|if (r14 \>= 0) goto L6\l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|int r1 = android.text.Selection.getSelectionStart(r12)\lint r2 = android.text.Selection.getSelectionEnd(r12)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|if (hasInvalidSelection(r1, r2) == false) goto L10\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|if (r15 == false) goto L26\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|int r3 = androidx.emoji2.text.EmojiProcessor.CodepointIndexFinder.findIndexBackward(r12, r1, java.lang.Math.max(r13, 0))\lint r4 = androidx.emoji2.text.EmojiProcessor.CodepointIndexFinder.findIndexForward(r12, r2, java.lang.Math.max(r14, 0))\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|if (r3 == (\-1)) goto L25\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|if (r4 != (\-1)) goto L14\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|PHI: r3 r4 \l  PHI: (r3v3 'start' int) = (r3v2 'start' int), (r3v9 'start' int) binds: [B:17:0x0036, B:15:0x0033] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'end' int) = (r4v1 'end' int), (r4v7 'end' int) binds: [B:17:0x0036, B:15:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|androidx.emoji2.text.EmojiSpan[] r5 = (androidx.emoji2.text.EmojiSpan[]) r12.getSpans(r3, r4, androidx.emoji2.text.EmojiSpan.class)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|if (r5 == null) goto L24\l}"];
Node_20 [shape=record,label="{20\:\ 0x0050}"];
Node_21 [shape=record,label="{21\:\ 0x0051|if (r5.length \<= 0) goto L24\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|int r6 = r5.length\lr7 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0055|LOOP_START\lLOOP:0: B:23:0x0055\-\>B:24:0x0057\lPHI: r3 r4 r7 \l  PHI: (r3v4 'start' int) = (r3v3 'start' int), (r3v7 'start' int) binds: [B:22:0x0053, B:24:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'end' int) = (r4v2 'end' int), (r4v5 'end' int) binds: [B:22:0x0053, B:24:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'index' int) = (r7v0 'index' int), (r7v2 'index' int) binds: [B:22:0x0053, B:24:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= r6) goto L21\l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|LOOP_END\lLOOP:0: B:23:0x0055\-\>B:24:0x0057\l|r8 = r5[r7]\lint r9 = r12.getSpanStart(r8)\lint r10 = r12.getSpanEnd(r8)\lint r3 = java.lang.Math.min(r9, r3)\lint r4 = java.lang.Math.max(r10, r4)\lint r7 = r7 + 1\l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x006c|int r0 = java.lang.Math.max(r3, 0)\lint r3 = r12.length()\lint r3 = java.lang.Math.min(r4, r3)\lr11.beginBatchEdit()\lr12.delete(r0, r3)\lr11.endBatchEdit()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|RETURN\l|return true\l}"];
Node_27 [shape=record,label="{27\:\ 0x0083|RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|int r3 = r1 \- r13\lint r3 = java.lang.Math.max(r3, 0)\lint r4 = java.lang.Math.min(r2 + r14, r12.length())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0084|RETURN\l|return false\l}"];
Node_29 [shape=record,label="{29\:\ 0x0085|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{static boolean androidx.emoji2.text.EmojiProcessor.handleDeleteSurroundingText((r11v0 'inputConnection' android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'editable' android.text.Editable A[D('editable' android.text.Editable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'beforeLength' int A[D('beforeLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'afterLength' int A[D('afterLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'inCodePoints' boolean A[D('inCodePoints' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0035 \-\> B:1:?, BACK_EDGE: B:24:0x0057 \-\> B:23:0x0055, CROSS_EDGE: B:26:0x0082 \-\> B:1:?, CROSS_EDGE: B:27:0x0083 \-\> B:1:?, CROSS_EDGE: B:19:0x004e \-\> B:27:0x0083, CROSS_EDGE: B:14:0x0031 \-\> B:16:0x0035, CROSS_EDGE: B:17:0x0036 \-\> B:18:0x0046, CROSS_EDGE: B:28:0x0084 \-\> B:1:?, CROSS_EDGE: B:6:0x0007 \-\> B:28:0x0084, CROSS_EDGE: B:29:0x0085 \-\> B:1:?, CROSS_EDGE: B:3:0x0001 \-\> B:29:0x0085\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_6;
Node_4 -> Node_29[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_7 -> Node_9;
Node_7 -> Node_28[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_23;
Node_30 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_27 -> Node_1;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_28 -> Node_1;
Node_29 -> Node_1;
}

