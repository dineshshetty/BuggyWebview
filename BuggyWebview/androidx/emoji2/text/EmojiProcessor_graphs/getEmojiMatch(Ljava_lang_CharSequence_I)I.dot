digraph "CFG forandroidx.emoji2.text.EmojiProcessor.getEmojiMatch(Ljava\/lang\/CharSequence;I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.emoji2.text.EmojiProcessor$ProcessorSm r0 = new androidx.emoji2.text.EmojiProcessor.ProcessorSm(r9.mMetadataRepo.getRootNode(), r9.mUseEmojiAsDefaultStyle, r9.mEmojiAsDefaultStyleExceptions)\lint r1 = r10.length()\lr2 = 0\lr3 = 0\lr4 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lLOOP:0: B:3:0x0016\-\>B:33:0x0016\lPHI: r2 r3 r4 \l  PHI: (r2v2 'currentOffset' int) = (r2v1 'currentOffset' int), (r2v3 'currentOffset' int) binds: [B:2:0x0000, B:33:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'potentialSubsequenceMatch' int) = (r3v1 'potentialSubsequenceMatch' int), (r3v4 'potentialSubsequenceMatch' int) binds: [B:2:0x0000, B:33:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'subsequenceMatch' int) = (r4v0 'subsequenceMatch' int), (r4v2 'subsequenceMatch' int) binds: [B:2:0x0000, B:33:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L20\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|int r5 = java.lang.Character.codePointAt(r10, r2)\lint r6 = r0.check(r5)\landroidx.emoji2.text.EmojiMetadata r7 = r0.getCurrentMetadata()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|switch(r6) \{\l    case 1: goto L9;\l    case 2: goto L8;\l    case 3: goto L5;\l    default: goto L10;\l\}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|androidx.emoji2.text.EmojiMetadata r7 = r0.getFlushMetadata()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|if (r7.getCompatAdded() \> r11) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|int r4 = r4 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|int r2 = r2 + java.lang.Character.charCount(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|int r2 = r2 + java.lang.Character.charCount(r5)\lr3 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|PHI: r2 r3 r4 r7 \l  PHI: (r2v3 'currentOffset' int) = (r2v2 'currentOffset' int), (r2v4 'currentOffset' int), (r2v5 'currentOffset' int), (r2v2 'currentOffset' int), (r2v2 'currentOffset' int) binds: [B:5:0x0024, B:11:0x003b, B:10:0x0035, B:8:0x0030, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 'potentialSubsequenceMatch' int) = (r3v2 'potentialSubsequenceMatch' int), (r3v6 'potentialSubsequenceMatch' int), (r3v2 'potentialSubsequenceMatch' int), (r3v2 'potentialSubsequenceMatch' int), (r3v2 'potentialSubsequenceMatch' int) binds: [B:5:0x0024, B:11:0x003b, B:10:0x0035, B:8:0x0030, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'subsequenceMatch' int) = (r4v1 'subsequenceMatch' int), (r4v1 'subsequenceMatch' int), (r4v1 'subsequenceMatch' int), (r4v1 'subsequenceMatch' int), (r4v3 'subsequenceMatch' int) binds: [B:5:0x0024, B:11:0x003b, B:10:0x0035, B:8:0x0030, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'currentNode' androidx.emoji2.text.EmojiMetadata) = (r7v1 'currentNode' androidx.emoji2.text.EmojiMetadata), (r7v1 'currentNode' androidx.emoji2.text.EmojiMetadata), (r7v1 'currentNode' androidx.emoji2.text.EmojiMetadata), (r7v3 'currentNode' androidx.emoji2.text.EmojiMetadata), (r7v3 'currentNode' androidx.emoji2.text.EmojiMetadata) binds: [B:5:0x0024, B:11:0x003b, B:10:0x0035, B:8:0x0030, B:9:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L19\l}"];
Node_30 [shape=record,label="{30\:\ 0x0044|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0044}"];
Node_14 [shape=record,label="{14\:\ 0x0048|if (r7.getCompatAdded() \> r11) goto L18\l}"];
Node_32 [shape=record,label="{32\:\ 0x004a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|int r3 = r3 + 1\l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0016\-\>B:33:0x0016\lPHI: r3 \l  PHI: (r3v4 'potentialSubsequenceMatch' int) = (r3v3 'potentialSubsequenceMatch' int), (r3v3 'potentialSubsequenceMatch' int), (r3v5 'potentialSubsequenceMatch' int) binds: [B:34:0x0016, B:35:0x0016, B:36:0x0016] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0016|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d}"];
Node_18 [shape=record,label="{18\:\ 0x004e|if (r4 == 0) goto L25\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|RETURN\l|return 2\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0051}"];
Node_21 [shape=record,label="{21\:\ 0x0055|if (r0.isInFlushableState() == false) goto L30\l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|androidx.emoji2.text.EmojiMetadata r6 = r0.getCurrentMetadata()\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|if (r6.getCompatAdded() \> r11) goto L30\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|RETURN\l|return 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0063|if (r3 != 0) goto L32\l}"];
Node_27 [shape=record,label="{27\:\ 0x0065|RETURN\l|return 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x0067|RETURN\l|return 2\l}"];
MethodNode[shape=record,label="{int androidx.emoji2.text.EmojiProcessor.getEmojiMatch((r9v0 'this' androidx.emoji2.text.EmojiProcessor A[IMMUTABLE_TYPE, THIS]), (r10v0 'charSequence' java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'metadataVersion' int A[D('metadataVersion' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x004a \-\> B:3:0x0016, BACK_EDGE: B:14:0x0048 \-\> B:3:0x0016, BACK_EDGE: B:12:0x0042 \-\> B:3:0x0016, CROSS_EDGE: B:8:0x0030 \-\> B:12:0x0042, CROSS_EDGE: B:10:0x0035 \-\> B:12:0x0042, CROSS_EDGE: B:11:0x003b \-\> B:12:0x0042, CROSS_EDGE: B:5:0x0024 \-\> B:12:0x0042, CROSS_EDGE: B:25:0x0062 \-\> B:1:?, CROSS_EDGE: B:28:0x0066 \-\> B:1:?, CROSS_EDGE: B:29:0x0067 \-\> B:1:?, CROSS_EDGE: B:21:0x0055 \-\> B:26:0x0063\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_10;
Node_5 -> Node_11;
Node_5 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_30[style=dashed];
Node_12 -> Node_34;
Node_30 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_32[style=dashed];
Node_14 -> Node_35;
Node_32 -> Node_15;
Node_15 -> Node_36;
Node_36 -> Node_33;
Node_33 -> Node_3;
Node_35 -> Node_33;
Node_34 -> Node_33;
Node_31 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_1;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_1;
Node_29 -> Node_1;
}

