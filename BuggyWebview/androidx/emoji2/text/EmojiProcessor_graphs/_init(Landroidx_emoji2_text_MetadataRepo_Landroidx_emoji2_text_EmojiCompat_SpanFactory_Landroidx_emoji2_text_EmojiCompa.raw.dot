digraph "CFG forandroidx.emoji2.text.EmojiProcessor.\<init\>(Landroidx\/emoji2\/text\/MetadataRepo;Landroidx\/emoji2\/text\/EmojiCompat$SpanFactory;Landroidx\/emoji2\/text\/EmojiCompat$GlyphChecker;Z[I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:112)\l0x0003: IPUT  \l  (r2 I:androidx.emoji2.text.EmojiCompat$SpanFactory A[D('spanFactory' androidx.emoji2.text.EmojiCompat$SpanFactory)])\l  (r0 I:androidx.emoji2.text.EmojiProcessor)\l androidx.emoji2.text.EmojiProcessor.mSpanFactory androidx.emoji2.text.EmojiCompat$SpanFactory  (LINE:113)\l0x0005: IPUT  \l  (r1 I:androidx.emoji2.text.MetadataRepo A[D('metadataRepo' androidx.emoji2.text.MetadataRepo)])\l  (r0 I:androidx.emoji2.text.EmojiProcessor)\l androidx.emoji2.text.EmojiProcessor.mMetadataRepo androidx.emoji2.text.MetadataRepo  (LINE:114)\l0x0007: IPUT  \l  (r3 I:androidx.emoji2.text.EmojiCompat$GlyphChecker A[D('glyphChecker' androidx.emoji2.text.EmojiCompat$GlyphChecker)])\l  (r0 I:androidx.emoji2.text.EmojiProcessor)\l androidx.emoji2.text.EmojiProcessor.mGlyphChecker androidx.emoji2.text.EmojiCompat$GlyphChecker  (LINE:115)\l0x0009: IPUT  (r4 I:boolean A[D('useEmojiAsDefaultStyle' boolean)]), (r0 I:androidx.emoji2.text.EmojiProcessor) androidx.emoji2.text.EmojiProcessor.mUseEmojiAsDefaultStyle boolean  (LINE:116)\l0x000b: IPUT  (r5 I:int[] A[D('emojiAsDefaultStyleExceptions' int[])]), (r0 I:androidx.emoji2.text.EmojiProcessor) androidx.emoji2.text.EmojiProcessor.mEmojiAsDefaultStyleExceptions int[]  (LINE:117)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:118)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.emoji2.text.EmojiProcessor.\<init\>((r0 'this' I:androidx.emoji2.text.EmojiProcessor A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.emoji2.text.MetadataRepo A[D('metadataRepo' androidx.emoji2.text.MetadataRepo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:androidx.emoji2.text.EmojiCompat$SpanFactory A[D('spanFactory' androidx.emoji2.text.EmojiCompat$SpanFactory), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.emoji2.text.EmojiCompat$GlyphChecker A[D('glyphChecker' androidx.emoji2.text.EmojiCompat$GlyphChecker), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('useEmojiAsDefaultStyle' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[D('emojiAsDefaultStyleExceptions' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000d: r1 'metadataRepo' Landroidx\/emoji2\/text\/MetadataRepo;\l  \-1 \-0x000d: r2 'spanFactory' Landroidx\/emoji2\/text\/EmojiCompat$SpanFactory;\l  \-1 \-0x000d: r3 'glyphChecker' Landroidx\/emoji2\/text\/EmojiCompat$GlyphChecker;\l  \-1 \-0x000d: r4 'useEmojiAsDefaultStyle' Z\l  \-1 \-0x000d: r5 'emojiAsDefaultStyleExceptions' [I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

