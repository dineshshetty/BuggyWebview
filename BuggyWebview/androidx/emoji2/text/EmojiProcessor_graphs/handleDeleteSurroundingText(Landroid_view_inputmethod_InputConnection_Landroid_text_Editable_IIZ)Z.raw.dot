digraph "CFG forandroidx.emoji2.text.EmojiProcessor.handleDeleteSurroundingText(Landroid\/view\/inputmethod\/InputConnection;Landroid\/text\/Editable;IIZ)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:424)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|0x0001: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('editable' android.text.Editable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0085 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('inputConnection' android.view.inputmethod.InputConnection)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0007 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|0x0007: IF  (r13 I:??[int, byte, short, char] A[D('beforeLength' int)]) \< (0 ??[int, byte, short, char])  \-\> B:28:0x0084  (LINE:428)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: IF  (r14 I:??[int, byte, short, char] A[D('afterLength' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:9:0x000d \l}"];
Node_9 [shape=record,label="{9\:\ 0x000d|0x000d: INVOKE  (r1 I:int) = (r12 I:java.lang.CharSequence A[D('editable' android.text.Editable)]) type: STATIC call: android.text.Selection.getSelectionStart(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (c)] (LINE:432)\l0x0011: INVOKE  (r2 I:int) = (r12 I:java.lang.CharSequence A[D('editable' android.text.Editable)]) type: STATIC call: android.text.Selection.getSelectionEnd(java.lang.CharSequence):int A[MD:(java.lang.CharSequence):int (c)] (LINE:433)\l0x0015: INVOKE  (r3 I:boolean) = (r1 I:int A[D('selectionStart' int)]), (r2 I:int A[D('selectionEnd' int)]) type: STATIC call: androidx.emoji2.text.EmojiProcessor.hasInvalidSelection(int, int):boolean A[MD:(int, int):boolean (m)] (LINE:435)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001c \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:boolean)  (LINE:436)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('inCodePoints' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036  (LINE:441)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x001f: INVOKE  (r3 I:int) = (r13 I:int A[D('beforeLength' int)]), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:444)\l0x0023: INVOKE  (r3 I:int) = \l  (r12 I:java.lang.CharSequence A[D('editable' android.text.Editable)])\l  (r1 I:int A[D('selectionStart' int)])\l  (r3 I:int)\l type: STATIC call: androidx.emoji2.text.EmojiProcessor.CodepointIndexFinder.findIndexBackward(java.lang.CharSequence, int, int):int A[MD:(java.lang.CharSequence, int, int):int (m)] (LINE:443)\l0x0028: INVOKE  (r4 I:int) = (r14 I:int A[D('afterLength' int)]), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:446)\l0x002c: INVOKE  (r4 I:int) = (r12 I:java.lang.CharSequence A[D('editable' android.text.Editable)]), (r2 I:int A[D('selectionEnd' int)]), (r4 I:int) type: STATIC call: androidx.emoji2.text.EmojiProcessor.CodepointIndexFinder.findIndexForward(java.lang.CharSequence, int, int):int A[MD:(java.lang.CharSequence, int, int):int (m)] (LINE:445)\l0x0030: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:448)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('start' int)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0035 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('end' int)]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0046 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: CONST_CLASS  (r5 I:java.lang.Class\<androidx.emoji2.text.EmojiSpan\>) =  androidx.emoji2.text.EmojiSpan.class  (LINE:457)\l0x0048: INVOKE  (r5 I:java.lang.Object[]) = \l  (r12 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r3 I:int A[D('start' int)])\l  (r4 I:int A[D('end' int)])\l  (r5 I:java.lang.Class)\l type: INTERFACE call: android.text.Editable.getSpans(int, int, java.lang.Class):java.lang.Object[] A[MD:(int, int, java.lang.Class):java.lang.Object[] (s)]\l0x004c: CHECK_CAST (r5 I:androidx.emoji2.text.EmojiSpan[]) = (androidx.emoji2.text.EmojiSpan[]) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spans' androidx.emoji2.text.EmojiSpan[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0083  (LINE:458)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|0x0050: ARRAY_LENGTH  (r6 I:int) = (r5 I:??[] A[D('spans' androidx.emoji2.text.EmojiSpan[])]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: IF  (r6 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:27:0x0083 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: ARRAY_LENGTH  (r6 I:int) = (r5 I:??[] A[D('spans' androidx.emoji2.text.EmojiSpan[])])  (LINE:459)\l0x0054: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:460)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0055|LOOP_START\lLOOP:0: B:23:0x0055\-\>B:24:0x0057\l|0x0055: IF  (r7 I:??[int, byte, short, char] A[D('index' int)]) \>= (r6 I:??[int, byte, short, char] A[D('length' int)])  \-\> B:30:0x006c \l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|LOOP_END\lLOOP:0: B:23:0x0055\-\>B:24:0x0057\l|0x0057: AGET  (r8 I:??[OBJECT, ARRAY]) = \l  (r5 I:??[OBJECT, ARRAY][] A[D('spans' androidx.emoji2.text.EmojiSpan[])])\l  (r7 I:??[int, short, byte, char] A[D('index' int)])\l  (LINE:461)\l0x0059: INVOKE  (r9 I:int) = \l  (r12 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r8 I:java.lang.Object A[D('span' androidx.emoji2.text.EmojiSpan)])\l type: INTERFACE call: android.text.Editable.getSpanStart(java.lang.Object):int A[MD:(java.lang.Object):int (s)] (LINE:462)\l0x005d: INVOKE  (r10 I:int) = \l  (r12 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r8 I:java.lang.Object A[D('span' androidx.emoji2.text.EmojiSpan)])\l type: INTERFACE call: android.text.Editable.getSpanEnd(java.lang.Object):int A[MD:(java.lang.Object):int (s)] (LINE:463)\l0x0061: INVOKE  (r3 I:int A[D('start' int)]) = (r9 I:int A[D('spanStart' int)]), (r3 I:int A[D('start' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:464)\l0x0065: INVOKE  (r4 I:int A[D('end' int)]) = (r10 I:int A[D('spanEnd' int)]), (r4 I:int A[D('end' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:465)\l0x0069: ARITH  (r7 I:int) = (r7 I:int A[D('index' int)]) + (1 int)  (LINE:460)\l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x006c|0x006c: INVOKE  (r0 I:int) = (r3 I:int A[D('start' int)]), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:468)\l0x0070: INVOKE  (r3 I:int) = (r12 I:android.text.Editable A[D('editable' android.text.Editable)]) type: INTERFACE call: android.text.Editable.length():int A[MD:():int (c)] (LINE:469)\l0x0074: INVOKE  (r3 I:int) = (r4 I:int A[D('end' int)]), (r3 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0078: INVOKE  (r11 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection)]) type: INTERFACE call: android.view.inputmethod.InputConnection.beginBatchEdit():boolean A[MD:():boolean (c)] (LINE:471)\l0x007b: INVOKE  \l  (r12 I:android.text.Editable A[D('editable' android.text.Editable)])\l  (r0 I:int A[D('start' int)])\l  (r3 I:int A[D('end' int)])\l type: INTERFACE call: android.text.Editable.delete(int, int):android.text.Editable A[MD:(int, int):android.text.Editable (c)] (LINE:472)\l0x007e: INVOKE  (r11 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection)]) type: INTERFACE call: android.view.inputmethod.InputConnection.endBatchEdit():boolean A[MD:():boolean (c)] (LINE:473)\l0x0081: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:474)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|RETURN\l|0x0082: RETURN  (r4 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0083|RETURN\l|0x0083: RETURN  (r0 I:boolean A[D('start' int)])  (LINE:477)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|RETURN\l|0x0035: RETURN  (r0 I:boolean)  (LINE:450)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: ARITH  (r3 I:int A[D('start' int)]) = (r1 I:int A[D('selectionStart' int)]) \- (r13 I:int A[D('beforeLength' int)])  (LINE:453)\l0x0038: INVOKE  (r3 I:int) = (r3 I:int), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x003c: ARITH  (r4 I:int) = (r2 I:int A[D('selectionEnd' int)]) + (r14 I:int A[D('afterLength' int)])  (LINE:454)\l0x003e: INVOKE  (r5 I:int) = (r12 I:android.text.Editable A[D('editable' android.text.Editable)]) type: INTERFACE call: android.text.Editable.length():int A[MD:():int (c)]\l0x0042: INVOKE  (r4 I:int) = (r4 I:int), (r5 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0084|RETURN\l|0x0084: RETURN  (r0 I:boolean)  (LINE:429)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0085|RETURN\l|0x0085: RETURN  (r0 I:boolean)  (LINE:425)\l}"];
MethodNode[shape=record,label="{static boolean androidx.emoji2.text.EmojiProcessor.handleDeleteSurroundingText((r11 I:android.view.inputmethod.InputConnection A[D('inputConnection' android.view.inputmethod.InputConnection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.text.Editable A[D('editable' android.text.Editable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('beforeLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('afterLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean A[D('inCodePoints' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0035 \-\> B:1:?, BACK_EDGE: B:24:0x0057 \-\> B:23:0x0055, CROSS_EDGE: B:26:0x0082 \-\> B:1:?, CROSS_EDGE: B:27:0x0083 \-\> B:1:?, CROSS_EDGE: B:19:0x004e \-\> B:27:0x0083, CROSS_EDGE: B:14:0x0031 \-\> B:16:0x0035, CROSS_EDGE: B:17:0x0036 \-\> B:18:0x0046, CROSS_EDGE: B:28:0x0084 \-\> B:1:?, CROSS_EDGE: B:6:0x0007 \-\> B:28:0x0084, CROSS_EDGE: B:29:0x0085 \-\> B:1:?, CROSS_EDGE: B:3:0x0001 \-\> B:29:0x0085\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0036: r3 'start' I\l  0x0030\-0x0036: r4 'end' I\l  0x0059\-0x0069: r8 'span' Landroidx\/emoji2\/text\/EmojiSpan;\l  0x005d\-0x0069: r9 'spanStart' I\l  0x0061\-0x0069: r10 'spanEnd' I\l  0x0055\-0x006c: r7 'index' I\l  0x003c\-0x0070: r3 'start' I\l  0x0046\-0x0078: r4 'end' I\l  0x0070\-0x0083: r0 'start' I\l  0x0054\-0x0083: r6 'length' I\l  0x0078\-0x0083: r3 'end' I\l  0x0011\-0x0084: r1 'selectionStart' I\l  0x0015\-0x0084: r2 'selectionEnd' I\l  0x0083\-0x0084: r3 'start' I\l  0x0083\-0x0084: r4 'end' I\l  0x004e\-0x0084: r5 'spans' [Landroidx\/emoji2\/text\/EmojiSpan;\l  \-1 \-0x0085: r11 'inputConnection' Landroid\/view\/inputmethod\/InputConnection;\l  \-1 \-0x0085: r12 'editable' Landroid\/text\/Editable;\l  \-1 \-0x0085: r13 'beforeLength' I\l  \-1 \-0x0085: r14 'afterLength' I\l  \-1 \-0x0085: r15 'inCodePoints' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_6;
Node_4 -> Node_29[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_7 -> Node_9;
Node_7 -> Node_28[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_23;
Node_30 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_27 -> Node_1;
Node_16 -> Node_1;
Node_17 -> Node_18;
Node_28 -> Node_1;
Node_29 -> Node_1;
}

