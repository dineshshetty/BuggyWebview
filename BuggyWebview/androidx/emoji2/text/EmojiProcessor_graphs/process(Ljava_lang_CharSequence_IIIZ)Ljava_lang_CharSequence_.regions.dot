digraph "CFG forandroidx.emoji2.text.EmojiProcessor.process(Ljava\/lang\/CharSequence;IIIZ)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_1823521813 {
label = "R(8:1|(1:3)|4|(1:(1:(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82))))|6|(2:12|(0))|(5:(1:28)|29|(2:32|33)|(2:(0)|64)|(0)(0))|82) | DECL_VAR: int addedCount, androidx.emoji2.text.EmojiProcessor$ProcessorSm sm, int currentOffset, int codePoint, int action, androidx.emoji2.text.EmojiSpan[] spans\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|boolean boolean r0 = r10 instanceof androidx.emoji2.text.SpannableBuilder\l}"];
subgraph cluster_IfRegion_1575632801 {
label = "IF [B:3:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 != false) goto L3\l}"];
subgraph cluster_Region_669966188 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|((androidx.emoji2.text.SpannableBuilder) r10).beginBatchEdit()\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000a|androidx.emoji2.text.UnprecomputeTextOnModificationSpannable r1 = null\l}"];
subgraph cluster_IfRegion_419710682 {
label = "IF [B:6:0x000b] THEN: R(1:(1:(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82)))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|if (r0 == false) goto L83\l}"];
subgraph cluster_Region_2127979789 {
label = "R(1:(1:(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2010851269 {
label = "Try: R(1:(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82))) finally: R(3:72|(1:74)|75)";
node [shape=record,color=blue];
subgraph cluster_Region_1217269825 {
label = "R(1:(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82)))";
node [shape=record,color=blue];
subgraph cluster_Region_432710531 {
label = "R(1:(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1425621946 {
label = "IF [B:8:0x000f] THEN: R(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x000f|if ((r10 instanceof android.text.Spannable) == false) goto L87\l}"];
subgraph cluster_Region_2058527727 {
label = "R(4:(2:89|(1:91))|(2:12|(3:14|(1:16)(0)|18))|(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))|82)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1107732704 {
label = "IF [B:11:0x0014] THEN: R(2:89|(1:91)) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0014|if ((r10 instanceof android.text.Spanned) != false) goto L89\l}"];
subgraph cluster_Region_440417519 {
label = "R(2:89|(1:91))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0016|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|int int r2 = ((android.text.Spanned) r10).nextSpanTransition(r11 \- 1, r12 + 1, androidx.emoji2.text.EmojiSpan.class)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_IfRegion_2109121187 {
label = "IF [B:13:0x0023] THEN: R(1:91) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0023|if (r2 \<= r12) goto L91\l}"];
subgraph cluster_Region_1850117664 {
label = "R(1:91)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0025|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r1 = new androidx.emoji2.text.UnprecomputeTextOnModificationSpannable(r10)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
}
}
subgraph cluster_IfRegion_1996361082 {
label = "IF [B:16:0x0035, B:18:0x003f, B:20:0x0042] THEN: R(2:12|(3:14|(1:16)(0)|18)) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0035|PHI: r1 \l  PHI: (r1v3 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v0 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v0 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v1 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v12 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:11:0x0014, B:13:0x0023, B:14:0x0025, B:15:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|ADDED_TO_REGION\l|if ((r2 = (androidx.emoji2.text.EmojiSpan[]) r1.getSpans(r11, r12, androidx.emoji2.text.EmojiSpan.class)) != null) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|ADDED_TO_REGION\l|if (r2.length \> 0) goto L12\l}"];
subgraph cluster_Region_827340083 {
label = "R(2:12|(3:14|(1:16)(0)|18))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0044|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|int r4 = 0\l\l}"];
subgraph cluster_LoopRegion_236768664 {
label = "LOOP:0: (3:14|(1:16)(0)|18)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0046|LOOP_START\lLOOP:0: B:22:0x0046\-\>B:26:0x0057\lPHI: r4 r11 r12 \l  PHI: (r4v10 'index' int) = (r4v9 'index' int), (r4v11 'index' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v6 'start' int) = (r11v0 'start' int), (r11v7 'start' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 'end' int) = (r12v0 'end' int), (r12v3 'end' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r3) goto L14\l}"];
subgraph cluster_Region_739490315 {
label = "R(3:14|(1:16)(0)|18)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0048|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r5 = r2[r4]     \/\/ Catch: java.lang.Throwable \-\> L130\lint int r6 = r1.getSpanStart(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\lint int r7 = r1.getSpanEnd(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_IfRegion_1371771223 {
label = "IF [B:24:0x0052] THEN: R(1:16) ELSE: R(0)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0052|if (r6 != r12) goto L16\l}"];
subgraph cluster_Region_5098042 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0054|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r1.removeSpan(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
subgraph cluster_Region_275164018 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_26 [shape=record,label="{26\:\ 0x0057|LOOP_END\lTryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lLOOP:0: B:22:0x0046\-\>B:26:0x0057\lCatch: all \-\> 0x0130\l|r11 = java.lang.Math.min(r6, r11)     \/\/ Catch: java.lang.Throwable \-\> L130\lr12 = java.lang.Math.max(r7, r12)     \/\/ Catch: java.lang.Throwable \-\> L130\lr4++     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
}
}
subgraph cluster_IfRegion_2141511498 {
label = "IF [B:27:0x0064, B:29:0x006a] THEN: R(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78))) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0064|PHI: r11 r12 \l  PHI: (r11v1 'start' int) = (r11v0 'start' int), (r11v0 'start' int), (r11v0 'start' int), (r11v6 'start' int) binds: [B:16:0x0035, B:18:0x003f, B:20:0x0042, B:83:0x0064] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'end' int) = (r12v0 'end' int), (r12v0 'end' int), (r12v0 'end' int), (r12v2 'end' int) binds: [B:16:0x0035, B:18:0x003f, B:20:0x0042, B:83:0x0064] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 != r12) goto L22\l}"];
Node_29 [shape=record,label="{29\:\ 0x006a|ADDED_TO_REGION\l|if (r11 \< r10.length()) goto L25\l}"];
subgraph cluster_Region_204493983 {
label = "R(5:(1:28)|29|(2:32|33)|(2:(1:63)|64)|(2:(1:69)|(2:(1:77)|78)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_558149659 {
label = "IF [B:32:0x0071, B:33:0x0073] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0071|if (r13 != Integer.MAX_VALUE) goto L27\l}"];
Node_33 [shape=record,label="{33\:\ 0x0073|ADDED_TO_REGION\l|if (r1 != null) goto L28\l}"];
subgraph cluster_Region_660073620 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0075|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r13 \-= ((androidx.emoji2.text.EmojiSpan[]) r1.getSpans(0, r1.length(), androidx.emoji2.text.EmojiSpan.class)).length     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0084|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\lPHI: r13 \l  PHI: (r13v1 'maxEmojiCount' int) = (r13v0 'maxEmojiCount' int), (r13v0 'maxEmojiCount' int), (r13v2 'maxEmojiCount' int) binds: [B:32:0x0071, B:33:0x0073, B:34:0x0075] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 0\landroidx.emoji2.text.EmojiProcessor$ProcessorSm r3 = new androidx.emoji2.text.EmojiProcessor.ProcessorSm(r9.mMetadataRepo.getRootNode(), r9.mUseEmojiAsDefaultStyle, r9.mEmojiAsDefaultStyleExceptions)     \/\/ Catch: java.lang.Throwable \-\> L130\lr4 = r11\lint r5 = java.lang.Character.codePointAt(r10, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_LoopRegion_626314832 {
label = "LOOP:1: (2:32|33)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0099|LOOP_START\lLOOP:1: B:36:0x0099\-\>B:54:0x00e7\lPHI: r1 r2 r4 r5 r11 \l  PHI: (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v3 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v11 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v12 'addedCount' int) = (r2v11 'addedCount' int), (r2v16 'addedCount' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'currentOffset' int) = (r4v3 'currentOffset' int), (r4v7 'currentOffset' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'codePoint' int) = (r5v2 'codePoint' int), (r5v6 'codePoint' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 'start' int) = (r11v1 'start' int), (r11v5 'start' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r12) goto L31\l}"];
Node_37 [shape=record,label="{37\:\ 0x009b|ADDED_TO_REGION\l|if (r2 \< r13) goto L32\l}"];
subgraph cluster_Region_1671816807 {
label = "R(2:32|33)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x009d|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|int r6 = r3.check(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_SwitchRegion_1667571436 {
label = "Switch: 3
 case 1 -> R(2:50|(2:52|1)(1:1))
 case 2 -> R(2:45|(2:47|1)(1:1))
 case 3 -> R(3:(2:(1:43)|44)|40|1)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00a1|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|switch(r6) \{\l    case 1: goto L50;\l    case 2: goto L45;\l    case 3: goto L37;\l    default: goto L34;\l\}     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_Region_1085215690 {
label = "R(2:50|(2:52|1)(1:1))";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00d6|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r11 += java.lang.Character.charCount(java.lang.Character.codePointAt(r10, r11))     \/\/ Catch: java.lang.Throwable \-\> L130\lr4 = r11\l}"];
subgraph cluster_IfRegion_1995663328 {
label = "IF [B:52:0x00e0] THEN: R(2:52|1) ELSE: R(1:1)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00e0|if (r4 \< r12) goto L52\l}"];
subgraph cluster_Region_145544291 {
label = "R(2:52|1)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00e2|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r5 = java.lang.Character.codePointAt(r10, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
Node_InsnContainer_143800822 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1619674481 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1167216425 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1174865105 {
label = "R(2:45|(2:47|1)(1:1))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x00c9|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r4 += java.lang.Character.charCount(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_IfRegion_272995761 {
label = "IF [B:49:0x00ce] THEN: R(2:47|1) ELSE: R(1:1)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00ce|if (r4 \< r12) goto L47\l}"];
subgraph cluster_Region_247772339 {
label = "R(2:47|1)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00d0|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r5 = java.lang.Character.codePointAt(r10, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
Node_InsnContainer_479565406 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_89211315 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_935476645 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1761481190 {
label = "R(3:(2:(1:43)|44)|40|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_484657599 {
label = "IF [B:41:0x00a5, B:43:0x00af] THEN: R(2:(1:43)|44) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00a5|if (r14 != false) goto L42\l}"];
Node_43 [shape=record,label="{43\:\ 0x00af|ADDED_TO_REGION\l|if (hasGlyph(r10, r11, r4, r3.getFlushMetadata()) == false) goto L42\l}"];
subgraph cluster_Region_742638906 {
label = "R(2:(1:43)|44)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2081914394 {
label = "IF [B:44:0x00b1] THEN: R(1:43) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x00b1|if (r1 == null) goto L43\l}"];
subgraph cluster_Region_2042303082 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00b3|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r1 = new androidx.emoji2.text.UnprecomputeTextOnModificationSpannable((android.text.Spannable) new android.text.SpannableString(r10))     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
Node_46 [shape=record,label="{46\:\ 0x00be|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\lPHI: r1 \l  PHI: (r1v8 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v9 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:44:0x00b1, B:45:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l|addEmoji(r1, r3.getFlushMetadata(), r11, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\lr2++     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
Node_47 [shape=record,label="{47\:\ 0x00c7|PHI: r1 r2 \l  PHI: (r1v10 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v8 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:46:0x00be, B:43:0x00af] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v15 'addedCount' int) = (r2v14 'addedCount' int), (r2v12 'addedCount' int) binds: [B:46:0x00be, B:43:0x00af] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r4\l}"];
Node_InsnContainer_1627309939 [shape=record,label="{|break\l}"];
}
}
}
}
subgraph cluster_IfRegion_1841284067 {
label = "IF [B:56:0x00ec, B:57:0x00ee, B:58:0x00f0, B:60:0x00fa] THEN: R(2:(1:63)|64) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x00ec|if (r3.isInFlushableState() != false) goto L58\l}"];
Node_57 [shape=record,label="{57\:\ 0x00ee|ADDED_TO_REGION\l|if (r2 \< r13) goto L59\l}"];
Node_58 [shape=record,label="{58\:\ 0x00f0|ADDED_TO_REGION\l|if (r14 != false) goto L62\l}"];
Node_60 [shape=record,label="{60\:\ 0x00fa|ADDED_TO_REGION\l|if (hasGlyph(r10, r11, r4, r3.getCurrentMetadata()) == false) goto L62\l}"];
subgraph cluster_Region_1769069592 {
label = "R(2:(1:63)|64)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1690046016 {
label = "IF [B:61:0x00fc] THEN: R(1:63) ELSE: null";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x00fc|if (r1 == null) goto L63\l}"];
subgraph cluster_Region_1439643556 {
label = "R(1:63)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x00fe|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r1 = new androidx.emoji2.text.UnprecomputeTextOnModificationSpannable(r10)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
Node_63 [shape=record,label="{63\:\ 0x0104|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\lPHI: r1 \l  PHI: (r1v6 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v7 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:61:0x00fc, B:62:0x00fe] A[DONT_GENERATE, DONT_INLINE]\l|addEmoji(r1, r3.getCurrentMetadata(), r11, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\lint int r2 = r2 + 1     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
subgraph cluster_Region_1349093972 {
label = "R(2:(1:69)|(2:(1:77)|78))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_437745674 {
label = "IF [B:64:0x010d] THEN: R(1:69) ELSE: null";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x010d|PHI: r1 \l  PHI: (r1v5 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v6 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:56:0x00ec, B:57:0x00ee, B:63:0x0104, B:60:0x00fa] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L76\l}"];
subgraph cluster_Region_1563894524 {
label = "R(1:69)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x011b|RETURN\l|return r1.getUnwrappedSpannable()\l}"];
}
}
subgraph cluster_Region_1597642035 {
label = "R(2:(1:77)|78)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_191166336 {
label = "IF [B:70:0x011d] THEN: R(1:77) ELSE: null";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x011d|if (r0 != false) goto L77\l}"];
subgraph cluster_Region_2041787492 {
label = "R(1:77)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x011f|((androidx.emoji2.text.SpannableBuilder) r10).endBatchEdit()\l}"];
}
}
Node_72 [shape=record,label="{72\:\ 0x0125|RETURN\l|return r10\l}"];
}
}
}
}
Node_76 [shape=record,label="{76\:\ 0x012f|RETURN\l|return r10\l}"];
}
}
}
}
subgraph cluster_Region_1876992382 {
label = "R(3:72|(1:74)|75) | ExcHandler: all \-\> 0x0130\l";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0130|ExcHandler: all \-\> 0x0130\l}"];
subgraph cluster_IfRegion_1658692333 {
label = "IF [B:78:0x0131] THEN: R(1:74) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0131|FINALLY_INSNS\l|if (r0 != false) goto L74\l}"];
subgraph cluster_Region_1934077436 {
label = "R(1:74)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0133|FINALLY_INSNS\l|((androidx.emoji2.text.SpannableBuilder) r10).endBatchEdit()\l}"];
}
}
Node_80 [shape=record,label="{80\:\ 0x0139|throw r1\l}"];
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x002c|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r1 = new androidx.emoji2.text.UnprecomputeTextOnModificationSpannable((android.text.Spannable) r10)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_IfRegion_379963799 {
label = "IF [B:16:0x0035] THEN: R(2:12|(0)) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0035|PHI: r1 \l  PHI: (r1v3 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v0 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v0 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v1 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v12 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:11:0x0014, B:13:0x0023, B:14:0x0025, B:15:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != null) goto L8\l}"];
subgraph cluster_Region_437939846 {
label = "R(2:12|(0))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0044|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|int r4 = 0\l\l}"];
subgraph cluster_LoopRegion_2094775594 {
label = "LOOP:0: (0)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0046|LOOP_START\lLOOP:0: B:22:0x0046\-\>B:26:0x0057\lPHI: r4 r11 r12 \l  PHI: (r4v10 'index' int) = (r4v9 'index' int), (r4v11 'index' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v6 'start' int) = (r11v0 'start' int), (r11v7 'start' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 'end' int) = (r12v0 'end' int), (r12v3 'end' int) binds: [B:21:0x0044, B:26:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r3) goto L14\l}"];
subgraph cluster_Region_472626881 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_IfRegion_1982472043 {
label = "IF [B:27:0x0064] THEN: R(5:(1:28)|29|(2:32|33)|(2:(0)|64)|(0)(0)) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0064|PHI: r11 r12 \l  PHI: (r11v1 'start' int) = (r11v0 'start' int), (r11v0 'start' int), (r11v0 'start' int), (r11v6 'start' int) binds: [B:16:0x0035, B:18:0x003f, B:20:0x0042, B:83:0x0064] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'end' int) = (r12v0 'end' int), (r12v0 'end' int), (r12v0 'end' int), (r12v2 'end' int) binds: [B:16:0x0035, B:18:0x003f, B:20:0x0042, B:83:0x0064] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 != r12) goto L22\l}"];
subgraph cluster_Region_1047013942 {
label = "R(5:(1:28)|29|(2:32|33)|(2:(0)|64)|(0)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_944534559 {
label = "IF [B:32:0x0071] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0071|if (r13 != Integer.MAX_VALUE) goto L27\l}"];
subgraph cluster_Region_2019020131 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0075|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|r13 \-= ((androidx.emoji2.text.EmojiSpan[]) r1.getSpans(0, r1.length(), androidx.emoji2.text.EmojiSpan.class)).length     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0084|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\lPHI: r13 \l  PHI: (r13v1 'maxEmojiCount' int) = (r13v0 'maxEmojiCount' int), (r13v0 'maxEmojiCount' int), (r13v2 'maxEmojiCount' int) binds: [B:32:0x0071, B:33:0x0073, B:34:0x0075] A[DONT_GENERATE, DONT_INLINE]\l|r2 = 0\landroidx.emoji2.text.EmojiProcessor$ProcessorSm r3 = new androidx.emoji2.text.EmojiProcessor.ProcessorSm(r9.mMetadataRepo.getRootNode(), r9.mUseEmojiAsDefaultStyle, r9.mEmojiAsDefaultStyleExceptions)     \/\/ Catch: java.lang.Throwable \-\> L130\lr4 = r11\lint r5 = java.lang.Character.codePointAt(r10, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_LoopRegion_1325010102 {
label = "LOOP:1: (2:32|33)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0099|LOOP_START\lLOOP:1: B:36:0x0099\-\>B:54:0x00e7\lPHI: r1 r2 r4 r5 r11 \l  PHI: (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v3 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v11 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v12 'addedCount' int) = (r2v11 'addedCount' int), (r2v16 'addedCount' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'currentOffset' int) = (r4v3 'currentOffset' int), (r4v7 'currentOffset' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'codePoint' int) = (r5v2 'codePoint' int), (r5v6 'codePoint' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 'start' int) = (r11v1 'start' int), (r11v5 'start' int) binds: [B:35:0x0084, B:54:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r12) goto L31\l}"];
subgraph cluster_Region_533078589 {
label = "R(2:32|33)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x009d|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|int r6 = r3.check(r5)     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
subgraph cluster_SwitchRegion_226808111 {
label = "Switch: 0";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00a1|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l|switch(r6) \{\l    case 1: goto L50;\l    case 2: goto L45;\l    case 3: goto L37;\l    default: goto L34;\l\}     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
}
subgraph cluster_IfRegion_209017597 {
label = "IF [B:56:0x00ec] THEN: R(2:(0)|64) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x00ec|if (r3.isInFlushableState() != false) goto L58\l}"];
subgraph cluster_Region_1216822804 {
label = "R(2:(0)|64)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1550682673 {
label = "IF [B:61:0x00fc] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x00fc|if (r1 == null) goto L63\l}"];
subgraph cluster_Region_434089169 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_63 [shape=record,label="{63\:\ 0x0104|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\lPHI: r1 \l  PHI: (r1v6 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v7 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:61:0x00fc, B:62:0x00fe] A[DONT_GENERATE, DONT_INLINE]\l|addEmoji(r1, r3.getCurrentMetadata(), r11, r4)     \/\/ Catch: java.lang.Throwable \-\> L130\lint int r2 = r2 + 1     \/\/ Catch: java.lang.Throwable \-\> L130\l}"];
}
}
subgraph cluster_IfRegion_1509812500 {
label = "IF [B:64:0x010d] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x010d|PHI: r1 \l  PHI: (r1v5 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v6 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:56:0x00ec, B:57:0x00ee, B:63:0x0104, B:60:0x00fa] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L76\l}"];
subgraph cluster_Region_1485020309 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_2121531817 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_76 [shape=record,label="{76\:\ 0x012f|RETURN\l|return r10\l}"];
}
subgraph cluster_Region_1876992382 {
label = "R(3:72|(1:74)|75) | ExcHandler: all \-\> 0x0130\l";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0130|ExcHandler: all \-\> 0x0130\l}"];
subgraph cluster_IfRegion_1658692333 {
label = "IF [B:78:0x0131] THEN: R(1:74) ELSE: null";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x0131|FINALLY_INSNS\l|if (r0 != false) goto L74\l}"];
subgraph cluster_Region_1934077436 {
label = "R(1:74)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0133|FINALLY_INSNS\l|((androidx.emoji2.text.SpannableBuilder) r10).endBatchEdit()\l}"];
}
}
Node_80 [shape=record,label="{80\:\ 0x0139|throw r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0037|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0041|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0057|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x0057|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0064|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0066|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x006c|ADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x006e}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00a4}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x00e7|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00e7|LOOP_END\lLOOP:1: B:36:0x0099\-\>B:54:0x00e7\lPHI: r1 r2 r4 r5 r11 \l  PHI: (r1v11 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) = (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v10 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable), (r1v4 'spannable' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable) binds: [B:93:0x00e7, B:88:0x00e7, B:91:0x00e7, B:92:0x00e7, B:90:0x00e7, B:89:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v16 'addedCount' int) = (r2v12 'addedCount' int), (r2v12 'addedCount' int), (r2v12 'addedCount' int), (r2v12 'addedCount' int), (r2v15 'addedCount' int), (r2v12 'addedCount' int) binds: [B:93:0x00e7, B:88:0x00e7, B:91:0x00e7, B:92:0x00e7, B:90:0x00e7, B:89:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v7 'currentOffset' int) = (r4v5 'currentOffset' int), (r4v5 'currentOffset' int), (r4v6 'currentOffset' int), (r4v6 'currentOffset' int), (r4v4 'currentOffset' int), (r4v4 'currentOffset' int) binds: [B:93:0x00e7, B:88:0x00e7, B:91:0x00e7, B:92:0x00e7, B:90:0x00e7, B:89:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v6 'codePoint' int) = (r5v3 'codePoint' int), (r5v4 'codePoint' int), (r5v3 'codePoint' int), (r5v5 'codePoint' int), (r5v3 'codePoint' int), (r5v3 'codePoint' int) binds: [B:93:0x00e7, B:88:0x00e7, B:91:0x00e7, B:92:0x00e7, B:90:0x00e7, B:89:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v5 'start' int) = (r11v3 'start' int), (r11v3 'start' int), (r11v2 'start' int), (r11v2 'start' int), (r11v4 'start' int), (r11v2 'start' int) binds: [B:93:0x00e7, B:88:0x00e7, B:91:0x00e7, B:92:0x00e7, B:90:0x00e7, B:89:0x00e7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00a7|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x00e7|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x00e7|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x00e7|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x00e7|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x00e7|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x00e8|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x00e8|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x00f2|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x010f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0113|DONT_GENERATE\l|if (r0 != false) goto L68\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0115|DONT_GENERATE\l|androidx.emoji2.text.SpannableBuilder r7 = (androidx.emoji2.text.SpannableBuilder) r10\lr7.endBatchEdit()\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_82 [shape=record,color=red,label="{82\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x00e8|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x0127|ADDED_TO_REGION\l|if (r0 == false) goto L82\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0129|((androidx.emoji2.text.SpannableBuilder) r10).endBatchEdit()\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000d|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0011}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0012|TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lCatch: all \-\> 0x0130\l}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.emoji2.text.EmojiProcessor.process((r9v0 'this' androidx.emoji2.text.EmojiProcessor A[IMMUTABLE_TYPE, THIS]), (r10v0 'charSequence' java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'maxEmojiCount' int A[D('maxEmojiCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'replaceAll' boolean A[D('replaceAll' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lBACK_EDGE: B:26:0x0057 \-\> B:22:0x0046, CROSS_EDGE: B:24:0x0052 \-\> B:26:0x0057, CROSS_EDGE: B:74:0x0127 \-\> B:76:0x012f, BACK_EDGE: B:54:0x00e7 \-\> B:36:0x0099, CROSS_EDGE: B:47:0x00c7 \-\> B:54:0x00e7, CROSS_EDGE: B:44:0x00b1 \-\> B:46:0x00be, CROSS_EDGE: B:43:0x00af \-\> B:47:0x00c7, CROSS_EDGE: B:41:0x00a5 \-\> B:44:0x00b1, CROSS_EDGE: B:50:0x00d0 \-\> B:54:0x00e7, CROSS_EDGE: B:49:0x00ce \-\> B:54:0x00e7, CROSS_EDGE: B:53:0x00e2 \-\> B:54:0x00e7, CROSS_EDGE: B:52:0x00e0 \-\> B:54:0x00e7, CROSS_EDGE: B:68:0x011b \-\> B:1:?, CROSS_EDGE: B:66:0x0113 \-\> B:68:0x011b, CROSS_EDGE: B:80:0x0139 \-\> B:1:?, CROSS_EDGE: B:78:0x0131 \-\> B:80:0x0139, CROSS_EDGE: B:72:0x0125 \-\> B:1:?, CROSS_EDGE: B:70:0x011d \-\> B:72:0x0125, CROSS_EDGE: B:61:0x00fc \-\> B:63:0x0104, CROSS_EDGE: B:60:0x00fa \-\> B:64:0x010d, CROSS_EDGE: B:58:0x00f0 \-\> B:61:0x00fc, CROSS_EDGE: B:57:0x00ee \-\> B:64:0x010d, CROSS_EDGE: B:56:0x00ec \-\> B:64:0x010d, CROSS_EDGE: B:36:0x0099 \-\> B:55:0x00e8, CROSS_EDGE: B:33:0x0073 \-\> B:35:0x0084, CROSS_EDGE: B:32:0x0071 \-\> B:35:0x0084, CROSS_EDGE: B:27:0x0064 \-\> B:74:0x0127, CROSS_EDGE: B:20:0x0042 \-\> B:27:0x0064, CROSS_EDGE: B:18:0x003f \-\> B:27:0x0064, CROSS_EDGE: B:16:0x0035 \-\> B:27:0x0064, CROSS_EDGE: B:9:0x0011 \-\> B:15:0x002c, CROSS_EDGE: B:14:0x0025 \-\> B:16:0x0035, CROSS_EDGE: B:13:0x0023 \-\> B:16:0x0035, CROSS_EDGE: B:11:0x0014 \-\> B:16:0x0035, CROSS_EDGE: B:81:0x000d \-\> B:77:0x0130, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x000a\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Removed duplicated region for block: B:23:0x0048 A[Catch: all \-\> 0x0130, TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}]\l \-\> Removed duplicated region for block: B:51:0x00d6 A[Catch: all \-\> 0x0130, TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}]\l \-\> Removed duplicated region for block: B:48:0x00c9 A[Catch: all \-\> 0x0130, TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}]\l \-\> Removed duplicated region for block: B:41:0x00a5 \l \-\> Removed duplicated region for block: B:40:0x00a4 \l \-\> Removed duplicated region for block: B:62:0x00fe A[Catch: all \-\> 0x0130, TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}]\l \-\> Removed duplicated region for block: B:70:0x011d \l \-\> Removed duplicated region for block: B:65:0x010f A[Catch: all \-\> 0x0130, TRY_LEAVE, TryCatch #0 \{all \-\> 0x0130, blocks: (B:7:0x000d, B:10:0x0012, B:12:0x0016, B:14:0x0025, B:17:0x0037, B:19:0x0041, B:21:0x0044, B:23:0x0048, B:25:0x0054, B:26:0x0057, B:28:0x0066, B:34:0x0075, B:35:0x0084, B:38:0x009d, B:39:0x00a1, B:42:0x00a7, B:45:0x00b3, B:46:0x00be, B:48:0x00c9, B:50:0x00d0, B:51:0x00d6, B:53:0x00e2, B:55:0x00e8, B:59:0x00f2, B:62:0x00fe, B:63:0x0104, B:65:0x010f, B:15:0x002c), top: B:81:0x000d \}]\l \-\> Code restructure failed: missing block: B:75:0x0129, code lost:\l    ((androidx.emoji2.text.SpannableBuilder) r10).endBatchEdit();\l\l INFO: \l \-\> Access modifiers changed from: package\-private\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [326=4, 327=4]\l \-\> Another duplicated slice has different insns count: \{[IF]\}, finally: \{[IF, CHECK_CAST, INVOKE] complete\}\l \-\> Another duplicated slice has different insns count: \{[IF]\}, finally: \{[IF, CHECK_CAST, INVOKE] complete\}\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_15[style=dashed];
Node_6 -> Node_81;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_16[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_27[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_27[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_83[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_85[style=dashed];
Node_25 -> Node_84;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_27 -> Node_74[style=dashed];
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_32 -> Node_33;
Node_32 -> Node_35[style=dashed];
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_86[style=dashed];
Node_37 -> Node_38;
Node_37 -> Node_87[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_39 -> Node_48;
Node_39 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_93[style=dashed];
Node_53 -> Node_88;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_91[style=dashed];
Node_50 -> Node_92;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_43 -> Node_44;
Node_43 -> Node_47[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_46[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_90;
Node_56 -> Node_57;
Node_56 -> Node_64[style=dashed];
Node_57 -> Node_58;
Node_57 -> Node_64[style=dashed];
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_60 -> Node_61;
Node_60 -> Node_64[style=dashed];
Node_61 -> Node_62;
Node_61 -> Node_63[style=dashed];
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_70;
Node_68 -> Node_1;
Node_70 -> Node_71;
Node_70 -> Node_72[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_1;
Node_76 -> Node_1;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_78 -> Node_80[style=dashed];
Node_79 -> Node_80;
Node_80 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_83[style=dashed];
Node_27 -> Node_28;
Node_27 -> Node_74[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_35[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_86[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_39 -> Node_48;
Node_39 -> Node_51;
Node_56 -> Node_57;
Node_56 -> Node_64[style=dashed];
Node_61 -> Node_62;
Node_61 -> Node_63[style=dashed];
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_70;
Node_76 -> Node_1;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_78 -> Node_80[style=dashed];
Node_79 -> Node_80;
Node_80 -> Node_1;
Node_0 -> Node_2;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_84 -> Node_26;
Node_85 -> Node_26;
Node_83 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_74;
Node_31 -> Node_32;
Node_40 -> Node_89;
Node_89 -> Node_54;
Node_54 -> Node_36;
Node_42 -> Node_43;
Node_90 -> Node_54;
Node_92 -> Node_54;
Node_91 -> Node_54;
Node_88 -> Node_54;
Node_93 -> Node_54;
Node_87 -> Node_55;
Node_55 -> Node_56;
Node_59 -> Node_60;
Node_65 -> Node_66;
Node_65 -> Node_82;
Node_66 -> Node_67;
Node_66 -> Node_68[style=dashed];
Node_67 -> Node_68;
Node_82 -> Node_77;
Node_86 -> Node_55;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_81 -> Node_7;
Node_81 -> Node_77;
Node_7 -> Node_8;
Node_9 -> Node_15;
Node_10 -> Node_11;
}

