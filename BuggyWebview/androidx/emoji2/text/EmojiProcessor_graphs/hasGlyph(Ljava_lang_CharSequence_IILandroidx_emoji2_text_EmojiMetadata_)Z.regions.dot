digraph "CFG forandroidx.emoji2.text.EmojiProcessor.hasGlyph(Ljava\/lang\/CharSequence;IILandroidx\/emoji2\/text\/EmojiMetadata;)Z" {
subgraph cluster_Region_782949917 {
label = "R(2:(1:3)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1702888822 {
label = "IF [B:3:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r6.getHasGlyph() == 0) goto L3\l}"];
subgraph cluster_Region_1816111383 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|boolean boolean r0 = r2.mGlyphChecker.hasGlyph(r3, r4, r5, r6.getSdkAdded())\lr6.setHasGlyph(r0)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0018|RETURN\l|return r6.getHasGlyph() == 2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001c|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private boolean androidx.emoji2.text.EmojiProcessor.hasGlyph((r2v0 'this' androidx.emoji2.text.EmojiProcessor A[IMMUTABLE_TYPE, THIS]), (r3v0 'charSequence' java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'metadata' androidx.emoji2.text.EmojiMetadata A[D('metadata' androidx.emoji2.text.EmojiMetadata), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001c \-\> B:9:0x001d, CROSS_EDGE: B:3:0x0004 \-\> B:5:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_1;
Node_8 -> Node_1;
}

