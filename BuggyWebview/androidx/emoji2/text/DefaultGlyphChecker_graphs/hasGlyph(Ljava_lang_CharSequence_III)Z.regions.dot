digraph "CFG forandroidx.emoji2.text.DefaultGlyphChecker.hasGlyph(Ljava\/lang\/CharSequence;III)Z" {
subgraph cluster_Region_1801183405 {
label = "R(1:(2:(3:7|(1:9)|12)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_2082434850 {
label = "R(2:(3:7|(1:9)|12)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_524172457 {
label = "IF [B:3:0x0005, B:5:0x0009] THEN: R(3:7|(1:9)|12) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|ADDED_TO_REGION\l|if (r7 \<= android.os.Build.VERSION.SDK_INT) goto L7\l}"];
subgraph cluster_Region_1688103333 {
label = "R(3:7|(1:9)|12)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000c|java.lang.StringBuilder java.lang.StringBuilder r0 = getStringBuilder()\lr0.setLength(0)\l}"];
subgraph cluster_LoopRegion_1523452727 {
label = "LOOP:0: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|LOOP_START\lLOOP:0: B:8:0x0013\-\>B:9:0x0015\lPHI: r5 \l  PHI: (r5v1 'start' int) = (r5v0 'start' int), (r5v2 'start' int) binds: [B:7:0x000c, B:9:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r6) goto L9\l}"];
subgraph cluster_Region_1387671190 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0015|LOOP_END\lLOOP:0: B:8:0x0013\-\>B:9:0x0015\l|r0.append(r4.charAt(r5))\lr5++\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0029|RETURN\l|return androidx.core.graphics.PaintCompat.hasGlyph(r3.mTextPaint, r0.toString())\l}"];
}
}
subgraph cluster_Region_1856292427 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000b|RETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0007}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001f|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001f}"];
MethodNode[shape=record,label="{public boolean androidx.emoji2.text.DefaultGlyphChecker.hasGlyph((r3v0 'this' androidx.emoji2.text.DefaultGlyphChecker A[IMMUTABLE_TYPE, THIS]), (r4v0 'charSequence' java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'end' int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'sdkAdded' int A[D('sdkAdded' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0015 \-\> B:8:0x0013, CROSS_EDGE: B:11:0x0029 \-\> B:1:?, CROSS_EDGE: B:3:0x0005 \-\> B:7:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.emoji2.text.EmojiCompat.GlyphChecker.hasGlyph(java.lang.CharSequence, int, int, int):boolean]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_12[style=dashed];
Node_9 -> Node_8;
Node_11 -> Node_1;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_12 -> Node_10;
Node_10 -> Node_11;
}

