digraph "CFG forandroidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.getRetryDelay()J" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:long) = (r6 I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy) androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.mRetryOrigin long  (LINE:98)\l0x0002: CONST  (r2 I:??[long, double]) = (0 ??[long, double]) \l0x0004: CMP_L  (r4 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: INVOKE  (r0 I:long) =  type: STATIC call: android.os.SystemClock.uptimeMillis():long A[MD:():long (c)] (LINE:99)\l0x000c: IPUT  (r0 I:long), (r6 I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy) androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.mRetryOrigin long \l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|0x000e: RETURN  (r2 I:long)  (LINE:102)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: INVOKE  (r0 I:long) =  type: STATIC call: android.os.SystemClock.uptimeMillis():long A[MD:():long (c)] (LINE:106)\l0x0013: IGET  (r2 I:long) = (r6 I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy) androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.mRetryOrigin long \l0x0015: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0016: IGET  (r2 I:long) = (r6 I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy) androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.mTotalMs long  (LINE:107)\l0x0018: CMP_L  (r4 I:int) = (r0 I:long A[D('elapsedMillis' long)]), (r2 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|0x001a: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:22:0x001f \l}"];
Node_20 [shape=record,label="{20\:\ 0x001c|RETURN\l|0x001c: CONST  (r2 I:??[long, double]) = (\-1 ??[long, double])  (LINE:108)\l0x001e: RETURN  (r2 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|0x001f: CONST  (r2 I:??[long, double]) = (1000(0x3e8, double:4.94E\-321) ??[long, double])  (LINE:112)\l0x0021: INVOKE  (r2 I:long) = (r0 I:long A[D('elapsedMillis' long)]), (r2 I:long) type: STATIC call: java.lang.Math.max(long, long):long A[MD:(long, long):long (c)]\l0x0025: IGET  (r4 I:long) = (r6 I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy) androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.mTotalMs long \l0x0027: ARITH  (r4 I:long) = (r4 I:long) \- (r0 I:long A[D('elapsedMillis' long)]) \l0x0028: INVOKE  (r2 I:long) = (r2 I:long), (r4 I:long) type: STATIC call: java.lang.Math.min(long, long):long A[MD:(long, long):long (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|RETURN\l|0x002c: RETURN  (r2 I:long) \l}"];
MethodNode[shape=record,label="{public long androidx.emoji2.text.FontRequestEmojiCompatConfig.ExponentialBackoffRetryPolicy.getRetryDelay((r6 'this' I:androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001e \-\> B:13:?, CROSS_EDGE: B:23:0x002c \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x002c: r0 'elapsedMillis' J\lMETHOD_OVERRIDE: [androidx.emoji2.text.FontRequestEmojiCompatConfig.RetryPolicy.getRetryDelay():long]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

