digraph "CFG forandroidx.emoji2.text.UnprecomputeTextOnModificationSpannable.PrecomputedTextDetector_28.isPrecomputedText(Ljava\/lang\/CharSequence;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0002|if ((r2 instanceof android.text.PrecomputedText) != false) goto L7\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004}"];
Node_16 [shape=record,label="{16\:\ 0x0006|if ((r2 instanceof androidx.core.text.PrecomputedTextCompat) == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|SYNTHETIC\lRETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{boolean androidx.emoji2.text.UnprecomputeTextOnModificationSpannable.PrecomputedTextDetector_28.isPrecomputedText((r1v0 'this' androidx.emoji2.text.UnprecomputeTextOnModificationSpannable$PrecomputedTextDetector_28 A[IMMUTABLE_TYPE, THIS]), (r2v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000b \-\> B:20:0x000c, CROSS_EDGE: B:14:0x0002 \-\> B:19:0x000b\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.emoji2.text.UnprecomputeTextOnModificationSpannable.PrecomputedTextDetector.isPrecomputedText(java.lang.CharSequence):boolean]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_12;
Node_19 -> Node_12;
}

