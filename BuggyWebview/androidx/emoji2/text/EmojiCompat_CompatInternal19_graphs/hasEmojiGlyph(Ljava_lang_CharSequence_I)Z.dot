digraph "CFG forandroidx.emoji2.text.EmojiCompat.CompatInternal19.hasEmojiGlyph(Ljava\/lang\/CharSequence;I)Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|int r0 = r2.mProcessor.getEmojiMatch(r3, r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|if (r0 != 1) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\lORIG_RETURN\l|return false\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{boolean androidx.emoji2.text.EmojiCompat.CompatInternal19.hasEmojiGlyph((r2v0 'this' androidx.emoji2.text.EmojiCompat$CompatInternal19 A[IMMUTABLE_TYPE, THIS]), (r3v0 'sequence' java.lang.CharSequence A[D('sequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'metadataVersion' int A[D('metadataVersion' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0007 \-\> B:14:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.emoji2.text.EmojiCompat.CompatInternal.hasEmojiGlyph(java.lang.CharSequence, int):boolean]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
}

