digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath(Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VGroup;Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VPath;Landroid\/graphics\/Canvas;IILandroid\/graphics\/ColorFilter;)V" {
Node_59 [shape=record,label="{59\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_61 [shape=record,label="{61\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY])  (LINE:1269)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('vPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)]) \l0x0004: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0006: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY] A[D('filter' android.graphics.ColorFilter)]) \l0x0008: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('w' int)]) \l0x000a: CAST (r5 I:float) = (float) (r4 I:int) \l0x000b: IGET  (r6 I:float) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mViewportWidth float \l0x000d: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x000e: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('h' int)])  (LINE:1270)\l0x0010: CAST (r7 I:float) = (float) (r6 I:int) \l0x0011: IGET  (r8 I:float) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mViewportHeight float \l0x0013: ARITH  (r7 I:float) = (r7 I:float) \/ (r8 I:float) \l0x0014: INVOKE  (r8 I:float) = (r5 I:float A[D('scaleX' float)]), (r7 I:float A[D('scaleY' float)]) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)] (LINE:1271)\l0x0018: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('vGroup' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup)])  (LINE:1272)\l0x001a: IGET  (r10 I:android.graphics.Matrix) = (r9 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VGroup.mStackedMatrix android.graphics.Matrix \l0x001c: IGET  (r11 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix  (LINE:1274)\l0x001e: INVOKE  (r11 I:android.graphics.Matrix), (r10 I:android.graphics.Matrix A[D('groupStackedMatrix' android.graphics.Matrix)]) type: VIRTUAL call: android.graphics.Matrix.set(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x0021: IGET  (r11 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix  (LINE:1275)\l0x0023: INVOKE  (r11 I:android.graphics.Matrix), (r5 I:float A[D('scaleX' float)]), (r7 I:float A[D('scaleY' float)]) type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)]\l0x0026: INVOKE  (r11 I:float) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)\l  (r10 I:android.graphics.Matrix A[D('groupStackedMatrix' android.graphics.Matrix)])\l type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.getMatrixScale(android.graphics.Matrix):float A[MD:(android.graphics.Matrix):float (m)] (LINE:1278)\l0x002a: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1279)\l0x002b: CMP_L  (r13 I:int) = (r11 I:float A[D('matrixScale' float)]), (r12 I:float) \l}"];
Node_62 [shape=record,label="{62\:\ 0x002d|0x002d: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0030 \l}"];
Node_63 [shape=record,label="{63\:\ 0x002f|RETURN\l|0x002f: RETURN    (LINE:1281)\l}"];
Node_60 [shape=record,label="{60\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0030|0x0030: IGET  (r13 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPath android.graphics.Path  (LINE:1283)\l0x0032: INVOKE  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath), (r13 I:android.graphics.Path) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath.toPath(android.graphics.Path):void A[MD:(android.graphics.Path):void (m)]\l0x0035: IGET  (r13 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPath android.graphics.Path  (LINE:1284)\l0x0037: IGET  (r14 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1286)\l0x0039: INVOKE  (r14 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Path.reset():void A[MD:():void (c)]\l0x003c: INVOKE  (r14 I:boolean) = \l  (r20 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath A[D('vPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)])\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath.isClipPath():boolean A[MD:():boolean (m)] (LINE:1288)\l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|0x0040: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0060 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0042|0x0042: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1289)\l0x0044: IGET  (r14 I:int) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPath.mFillRule int \l}"];
Node_67 [shape=record,label="{67\:\ 0x0046|0x0046: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x004b \l}"];
Node_68 [shape=record,label="{68\:\ 0x0048|0x0048: SGET  (r14 I:android.graphics.Path$FillType) =  android.graphics.Path.FillType.WINDING android.graphics.Path$FillType \l}"];
Node_70 [shape=record,label="{70\:\ 0x004d|0x004d: INVOKE  (r12 I:android.graphics.Path), (r14 I:android.graphics.Path$FillType) type: VIRTUAL call: android.graphics.Path.setFillType(android.graphics.Path$FillType):void A[MD:(android.graphics.Path$FillType):void (c)]\l0x0050: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1291)\l0x0052: IGET  (r14 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix \l0x0054: INVOKE  \l  (r12 I:android.graphics.Path)\l  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r14 I:android.graphics.Matrix)\l type: VIRTUAL call: android.graphics.Path.addPath(android.graphics.Path, android.graphics.Matrix):void A[MD:(android.graphics.Path, android.graphics.Matrix):void (c)]\l0x0057: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1292)\l0x0059: INVOKE  (r2 I:android.graphics.Canvas), (r12 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Canvas.clipPath(android.graphics.Path):boolean A[MD:(android.graphics.Path):boolean (c)]\l0x005c: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scaleX' float)]) \l}"];
Node_116 [shape=record,label="{116\:\ ?|SYNTHETIC\lRETURN\l|0x01ad: RETURN   A[SYNTHETIC] (LINE:1376)\l}"];
Node_69 [shape=record,label="{69\:\ 0x004b|0x004b: SGET  (r14 I:android.graphics.Path$FillType) =  android.graphics.Path.FillType.EVEN_ODD android.graphics.Path$FillType \l}"];
Node_71 [shape=record,label="{71\:\ 0x0060|0x0060: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY])  (LINE:1294)\l0x0061: CHECK_CAST (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) (r14 I:??[OBJECT, ARRAY]) \l0x0063: IGET  (r15 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathStart float  (LINE:1295)\l0x0065: CONST  (r16 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0067: CMP_L  (r15 I:int) = (r15 I:float), (r12 I:float) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0069|0x0069: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0075 \l}"];
Node_73 [shape=record,label="{73\:\ 0x006b|0x006b: IGET  (r15 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathEnd float \l0x006d: CMP_L  (r15 I:int) = (r15 I:float), (r16 I:float) \l}"];
Node_74 [shape=record,label="{74\:\ 0x006f|0x006f: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x0072 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0072|0x0072: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scaleX' float)]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x00c4|0x00c4: IGET  (r1 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1316)\l0x00c6: IGET  (r4 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix \l0x00c8: INVOKE  \l  (r1 I:android.graphics.Path)\l  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r4 I:android.graphics.Matrix)\l type: VIRTUAL call: android.graphics.Path.addPath(android.graphics.Path, android.graphics.Matrix):void A[MD:(android.graphics.Path, android.graphics.Matrix):void (c)]\l0x00cb: IGET  (r1 I:androidx.core.content.res.ComplexColorCompat) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mFillColor androidx.core.content.res.ComplexColorCompat  (LINE:1318)\l0x00cd: INVOKE  (r1 I:boolean) = (r1 I:androidx.core.content.res.ComplexColorCompat) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.willDraw():boolean A[MD:():boolean (m)]\l0x00d1: CONST  (r4 I:??[int, float, short, byte, char]) = (1132396544(0x437f0000, float:255.0) ??[int, float, short, byte, char]) \l}"];
Node_86 [shape=record,label="{86\:\ 0x00d3|0x00d3: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:99:0x0134 \l}"];
Node_87 [shape=record,label="{87\:\ 0x00d5|0x00d5: IGET  (r1 I:androidx.core.content.res.ComplexColorCompat) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mFillColor androidx.core.content.res.ComplexColorCompat  (LINE:1319)\l0x00d7: IGET  (r15 I:android.graphics.Paint) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFillPaint android.graphics.Paint  (LINE:1320)\l}"];
Node_88 [shape=record,label="{88\:\ 0x00d9|0x00d9: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x00e8 \l}"];
Node_89 [shape=record,label="{89\:\ 0x00db|0x00db: NEW_INSTANCE  (r15 I:android.graphics.Paint) =  android.graphics.Paint  (LINE:1321)\l0x00dd: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00de: INVOKE  (r15 I:android.graphics.Paint), (r5 I:int) type: DIRECT call: android.graphics.Paint.\<init\>(int):void A[MD:(int):void (c)]\l0x00e1: IPUT  (r15 I:android.graphics.Paint), (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFillPaint android.graphics.Paint \l0x00e3: SGET  (r5 I:android.graphics.Paint$Style) =  android.graphics.Paint.Style.FILL android.graphics.Paint$Style  (LINE:1322)\l0x00e5: INVOKE  (r15 I:android.graphics.Paint), (r5 I:android.graphics.Paint$Style) type: VIRTUAL call: android.graphics.Paint.setStyle(android.graphics.Paint$Style):void A[MD:(android.graphics.Paint$Style):void (c)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x00e8|0x00e8: IGET  (r5 I:android.graphics.Paint) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFillPaint android.graphics.Paint  (LINE:1325)\l0x00ea: INVOKE  (r15 I:boolean) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('fill' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.isGradient():boolean A[MD:():boolean (m)] (LINE:1326)\l}"];
Node_91 [shape=record,label="{91\:\ 0x00ee|0x00ee: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0108 \l}"];
Node_92 [shape=record,label="{92\:\ 0x00f0|0x00f0: INVOKE  (r15 I:android.graphics.Shader) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('fill' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.getShader():android.graphics.Shader A[MD:():android.graphics.Shader (m)] (LINE:1327)\l0x00f4: IGET  (r12 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix  (LINE:1328)\l0x00f6: INVOKE  (r15 I:android.graphics.Shader A[D('shader' android.graphics.Shader)]), (r12 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Shader.setLocalMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x00f9: INVOKE  \l  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)])\l  (r15 I:android.graphics.Shader A[D('shader' android.graphics.Shader)])\l type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)] (LINE:1329)\l0x00fc: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mFillAlpha float  (LINE:1330)\l0x00fe: ARITH  (r12 I:float) = (r12 I:float) * (r4 I:float) \l0x0100: INVOKE  (r12 I:int) = (r12 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0104: INVOKE  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)]), (r12 I:int) type: VIRTUAL call: android.graphics.Paint.setAlpha(int):void A[MD:(int):void (c)]\l}"];
Node_94 [shape=record,label="{94\:\ 0x011e|0x011e: INVOKE  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)]), (r3 I:android.graphics.ColorFilter) type: VIRTUAL call: android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter A[MD:(android.graphics.ColorFilter):android.graphics.ColorFilter (c)] (LINE:1336)\l0x0121: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1337)\l0x0123: IGET  (r15 I:int) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mFillRule int \l}"];
Node_95 [shape=record,label="{95\:\ 0x0125|0x0125: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:97:0x012a \l}"];
Node_96 [shape=record,label="{96\:\ 0x0127|0x0127: SGET  (r15 I:android.graphics.Path$FillType) =  android.graphics.Path.FillType.WINDING android.graphics.Path$FillType \l}"];
Node_98 [shape=record,label="{98\:\ 0x012c|0x012c: INVOKE  (r12 I:android.graphics.Path), (r15 I:android.graphics.Path$FillType) type: VIRTUAL call: android.graphics.Path.setFillType(android.graphics.Path$FillType):void A[MD:(android.graphics.Path$FillType):void (c)]\l0x012f: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1339)\l0x0131: INVOKE  \l  (r2 I:android.graphics.Canvas)\l  (r12 I:android.graphics.Path)\l  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)])\l type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l}"];
Node_97 [shape=record,label="{97\:\ 0x012a|0x012a: SGET  (r15 I:android.graphics.Path$FillType) =  android.graphics.Path.FillType.EVEN_ODD android.graphics.Path$FillType \l}"];
Node_93 [shape=record,label="{93\:\ 0x0108|0x0108: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1332)\l0x0109: INVOKE  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)]), (r12 I:android.graphics.Shader) type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)]\l0x010c: CONST  (r12 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:1333)\l0x010e: INVOKE  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)]), (r12 I:int) type: VIRTUAL call: android.graphics.Paint.setAlpha(int):void A[MD:(int):void (c)]\l0x0111: INVOKE  (r12 I:int) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('fill' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.getColor():int A[MD:():int (m)] (LINE:1334)\l0x0115: IGET  (r15 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mFillAlpha float \l0x0117: INVOKE  (r12 I:int) = (r12 I:int), (r15 I:float) type: STATIC call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(int, float):int A[MD:(int, float):int (m)]\l0x011b: INVOKE  (r5 I:android.graphics.Paint A[D('fillPaint' android.graphics.Paint)]), (r12 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l}"];
Node_99 [shape=record,label="{99\:\ 0x0134|0x0134: IGET  (r1 I:androidx.core.content.res.ComplexColorCompat A[D('fill' androidx.core.content.res.ComplexColorCompat)]) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeColor androidx.core.content.res.ComplexColorCompat  (LINE:1342)\l0x0136: INVOKE  (r1 I:boolean) = (r1 I:androidx.core.content.res.ComplexColorCompat) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.willDraw():boolean A[MD:():boolean (m)]\l}"];
Node_100 [shape=record,label="{100\:\ 0x013a|0x013a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:117:? \l}"];
Node_101 [shape=record,label="{101\:\ 0x013c|0x013c: IGET  (r1 I:androidx.core.content.res.ComplexColorCompat) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeColor androidx.core.content.res.ComplexColorCompat  (LINE:1343)\l0x013e: IGET  (r5 I:android.graphics.Paint) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mStrokePaint android.graphics.Paint  (LINE:1344)\l}"];
Node_102 [shape=record,label="{102\:\ 0x0140|0x0140: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:104:0x014f \l}"];
Node_103 [shape=record,label="{103\:\ 0x0142|0x0142: NEW_INSTANCE  (r5 I:android.graphics.Paint) =  android.graphics.Paint  (LINE:1345)\l0x0144: CONST  (r12 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0145: INVOKE  (r5 I:android.graphics.Paint), (r12 I:int) type: DIRECT call: android.graphics.Paint.\<init\>(int):void A[MD:(int):void (c)]\l0x0148: IPUT  (r5 I:android.graphics.Paint), (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mStrokePaint android.graphics.Paint \l0x014a: SGET  (r12 I:android.graphics.Paint$Style) =  android.graphics.Paint.Style.STROKE android.graphics.Paint$Style  (LINE:1346)\l0x014c: INVOKE  (r5 I:android.graphics.Paint), (r12 I:android.graphics.Paint$Style) type: VIRTUAL call: android.graphics.Paint.setStyle(android.graphics.Paint$Style):void A[MD:(android.graphics.Paint$Style):void (c)]\l}"];
Node_104 [shape=record,label="{104\:\ 0x014f|0x014f: IGET  (r5 I:android.graphics.Paint) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mStrokePaint android.graphics.Paint  (LINE:1349)\l0x0151: IGET  (r12 I:android.graphics.Paint$Join) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineJoin android.graphics.Paint$Join  (LINE:1350)\l}"];
Node_105 [shape=record,label="{105\:\ 0x0153|0x0153: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:107:0x015a \l}"];
Node_106 [shape=record,label="{106\:\ 0x0155|0x0155: IGET  (r12 I:android.graphics.Paint$Join) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineJoin android.graphics.Paint$Join  (LINE:1351)\l0x0157: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r12 I:android.graphics.Paint$Join) type: VIRTUAL call: android.graphics.Paint.setStrokeJoin(android.graphics.Paint$Join):void A[MD:(android.graphics.Paint$Join):void (c)]\l}"];
Node_107 [shape=record,label="{107\:\ 0x015a|0x015a: IGET  (r12 I:android.graphics.Paint$Cap) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineCap android.graphics.Paint$Cap  (LINE:1354)\l}"];
Node_108 [shape=record,label="{108\:\ 0x015c|0x015c: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:110:0x0163 \l}"];
Node_109 [shape=record,label="{109\:\ 0x015e|0x015e: IGET  (r12 I:android.graphics.Paint$Cap) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeLineCap android.graphics.Paint$Cap  (LINE:1355)\l0x0160: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r12 I:android.graphics.Paint$Cap) type: VIRTUAL call: android.graphics.Paint.setStrokeCap(android.graphics.Paint$Cap):void A[MD:(android.graphics.Paint$Cap):void (c)]\l}"];
Node_110 [shape=record,label="{110\:\ 0x0163|0x0163: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeMiterlimit float  (LINE:1358)\l0x0165: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r12 I:float) type: VIRTUAL call: android.graphics.Paint.setStrokeMiter(float):void A[MD:(float):void (c)]\l0x0168: INVOKE  (r12 I:boolean) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('strokeColor' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.isGradient():boolean A[MD:():boolean (m)] (LINE:1359)\l}"];
Node_111 [shape=record,label="{111\:\ 0x016c|0x016c: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:113:0x0186 \l}"];
Node_112 [shape=record,label="{112\:\ 0x016e|0x016e: INVOKE  (r12 I:android.graphics.Shader) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('strokeColor' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.getShader():android.graphics.Shader A[MD:():android.graphics.Shader (m)] (LINE:1360)\l0x0172: IGET  (r15 I:android.graphics.Matrix) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mFinalPathMatrix android.graphics.Matrix  (LINE:1361)\l0x0174: INVOKE  (r12 I:android.graphics.Shader A[D('shader' android.graphics.Shader)]), (r15 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Shader.setLocalMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x0177: INVOKE  \l  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)])\l  (r12 I:android.graphics.Shader A[D('shader' android.graphics.Shader)])\l type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)] (LINE:1362)\l0x017a: IGET  (r15 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeAlpha float  (LINE:1363)\l0x017c: ARITH  (r15 I:float) = (r15 I:float) * (r4 I:float) \l0x017e: INVOKE  (r4 I:int) = (r15 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0182: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r4 I:int) type: VIRTUAL call: android.graphics.Paint.setAlpha(int):void A[MD:(int):void (c)]\l}"];
Node_114 [shape=record,label="{114\:\ 0x019c|0x019c: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r3 I:android.graphics.ColorFilter) type: VIRTUAL call: android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter A[MD:(android.graphics.ColorFilter):android.graphics.ColorFilter (c)] (LINE:1370)\l0x019f: ARITH  (r4 I:float) = (r8 I:float A[D('minScale' float)]) * (r11 I:float A[D('matrixScale' float)])  (LINE:1371)\l0x01a1: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeWidth float  (LINE:1372)\l0x01a3: ARITH  (r12 I:float) = (r12 I:float) * (r4 I:float A[D('finalStrokeScale' float)]) \l0x01a5: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r12 I:float) type: VIRTUAL call: android.graphics.Paint.setStrokeWidth(float):void A[MD:(float):void (c)]\l0x01a8: IGET  (r12 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mRenderPath android.graphics.Path  (LINE:1373)\l0x01aa: INVOKE  \l  (r2 I:android.graphics.Canvas)\l  (r12 I:android.graphics.Path)\l  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)])\l type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l}"];
Node_115 [shape=record,label="{115\:\ 0x01ad|RETURN\lORIG_RETURN\l|0x01ad: RETURN    (LINE:1376)\l}"];
Node_113 [shape=record,label="{113\:\ 0x0186|0x0186: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1365)\l0x0187: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r4 I:android.graphics.Shader) type: VIRTUAL call: android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader A[MD:(android.graphics.Shader):android.graphics.Shader (c)]\l0x018a: CONST  (r4 I:??[int, float, short, byte, char]) = (255(0xff, float:3.57E\-43) ??[int, float, short, byte, char])  (LINE:1366)\l0x018c: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r4 I:int) type: VIRTUAL call: android.graphics.Paint.setAlpha(int):void A[MD:(int):void (c)]\l0x018f: INVOKE  (r4 I:int) = (r1 I:androidx.core.content.res.ComplexColorCompat A[D('strokeColor' androidx.core.content.res.ComplexColorCompat)]) type: VIRTUAL call: androidx.core.content.res.ComplexColorCompat.getColor():int A[MD:():int (m)] (LINE:1367)\l0x0193: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mStrokeAlpha float \l0x0195: INVOKE  (r4 I:int) = (r4 I:int), (r12 I:float) type: STATIC call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(int, float):int A[MD:(int, float):int (m)]\l0x0199: INVOKE  (r5 I:android.graphics.Paint A[D('strokePaint' android.graphics.Paint)]), (r4 I:int) type: VIRTUAL call: android.graphics.Paint.setColor(int):void A[MD:(int):void (c)]\l}"];
Node_117 [shape=record,label="{117\:\ ?|SYNTHETIC\lRETURN\l|0x01ad: RETURN   A[SYNTHETIC] (LINE:1376)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0075|0x0075: IGET  (r15 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathStart float  (LINE:1296)\l0x0077: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathOffset float \l0x0079: ARITH  (r15 I:float) = (r15 I:float) + (r12 I:float) \l0x007a: ARITH  (r15 I:float) = (r15 I:float) % (r16 I:float) \l0x007c: IGET  (r12 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathEnd float  (LINE:1297)\l0x007e: IGET  (r1 I:float) = \l  (r14 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[D('fullPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.mTrimPathOffset float \l0x0080: ARITH  (r12 I:float) = (r12 I:float) + (r1 I:float) \l0x0081: ARITH  (r12 I:float) = (r12 I:float) % (r16 I:float) \l0x0083: IGET  (r1 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure  (LINE:1299)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0085|0x0085: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x008e \l}"];
Node_79 [shape=record,label="{79\:\ 0x0087|0x0087: NEW_INSTANCE  (r1 I:android.graphics.PathMeasure) =  android.graphics.PathMeasure  (LINE:1300)\l0x0089: INVOKE  (r1 I:android.graphics.PathMeasure) type: DIRECT call: android.graphics.PathMeasure.\<init\>():void A[MD:():void (c)]\l0x008c: IPUT  \l  (r1 I:android.graphics.PathMeasure)\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure \l}"];
Node_80 [shape=record,label="{80\:\ 0x008e|0x008e: IGET  (r1 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure  (LINE:1302)\l0x0090: IGET  (r4 I:android.graphics.Path) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPath android.graphics.Path \l0x0092: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scaleX' float)]) \l0x0094: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('scaleX' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0095: INVOKE  (r1 I:android.graphics.PathMeasure), (r4 I:android.graphics.Path), (r5 I:boolean) type: VIRTUAL call: android.graphics.PathMeasure.setPath(android.graphics.Path, boolean):void A[MD:(android.graphics.Path, boolean):void (c)]\l0x0098: IGET  (r1 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure  (LINE:1304)\l0x009a: INVOKE  (r1 I:float) = (r1 I:android.graphics.PathMeasure) type: VIRTUAL call: android.graphics.PathMeasure.getLength():float A[MD:():float (c)]\l0x009e: ARITH  (r15 I:float) = (r15 I:float A[D('start' float)]) * (r1 I:float A[D('len' float)])  (LINE:1305)\l0x00a0: ARITH  (r12 I:float) = (r12 I:float A[D('end' float)]) * (r1 I:float A[D('len' float)])  (LINE:1306)\l0x00a2: INVOKE  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)]) type: VIRTUAL call: android.graphics.Path.reset():void A[MD:():void (c)] (LINE:1307)\l0x00a5: CMP_L  (r4 I:int) = (r15 I:float A[D('start' float)]), (r12 I:float A[D('end' float)])  (LINE:1308)\l}"];
Node_81 [shape=record,label="{81\:\ 0x00a7|0x00a7: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:83:0x00b8 \l}"];
Node_82 [shape=record,label="{82\:\ 0x00a9|0x00a9: IGET  (r4 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure  (LINE:1309)\l0x00ab: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00ac: INVOKE  \l  (r4 I:android.graphics.PathMeasure)\l  (r15 I:float A[D('start' float)])\l  (r1 I:float A[D('len' float)])\l  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r5 I:boolean)\l type: VIRTUAL call: android.graphics.PathMeasure.getSegment(float, float, android.graphics.Path, boolean):boolean A[MD:(float, float, android.graphics.Path, boolean):boolean (c)]\l0x00af: IGET  (r4 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure  (LINE:1310)\l0x00b1: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('len' float)]) \l0x00b3: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('len' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00b4: INVOKE  \l  (r4 I:android.graphics.PathMeasure)\l  (r1 I:float A[D('len' float)])\l  (r12 I:float A[D('end' float)])\l  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r5 I:boolean)\l type: VIRTUAL call: android.graphics.PathMeasure.getSegment(float, float, android.graphics.Path, boolean):boolean A[MD:(float, float, android.graphics.Path, boolean):boolean (c)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x00c1|0x00c1: INVOKE  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)]), (r1 I:float), (r1 I:float) type: VIRTUAL call: android.graphics.Path.rLineTo(float, float):void A[MD:(float, float):void (c)] (LINE:1314)\l}"];
Node_83 [shape=record,label="{83\:\ 0x00b8|0x00b8: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('len' float)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('len' float)])  (LINE:1312)\l0x00ba: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('len' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00bb: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00bc: IGET  (r4 I:android.graphics.PathMeasure) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.mPathMeasure android.graphics.PathMeasure \l0x00be: INVOKE  \l  (r4 I:android.graphics.PathMeasure)\l  (r15 I:float A[D('start' float)])\l  (r12 I:float A[D('end' float)])\l  (r13 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r5 I:boolean)\l type: VIRTUAL call: android.graphics.PathMeasure.getSegment(float, float, android.graphics.Path, boolean):boolean A[MD:(float, float, android.graphics.Path, boolean):boolean (c)]\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath((r18 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer A[IMMUTABLE_TYPE, THIS]), (r19 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup A[D('vGroup' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath A[D('vPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:android.graphics.ColorFilter A[D('filter' android.graphics.ColorFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:115:0x01ad \-\> B:60:?, CROSS_EDGE: B:69:0x004b \-\> B:70:0x004d, CROSS_EDGE: B:114:0x019c \-\> B:115:0x01ad, CROSS_EDGE: B:113:0x0186 \-\> B:114:0x019c, CROSS_EDGE: B:108:0x015c \-\> B:110:0x0163, CROSS_EDGE: B:105:0x0153 \-\> B:107:0x015a, CROSS_EDGE: B:102:0x0140 \-\> B:104:0x014f, CROSS_EDGE: B:100:0x013a \-\> B:115:0x01ad, CROSS_EDGE: B:97:0x012a \-\> B:98:0x012c, CROSS_EDGE: B:93:0x0108 \-\> B:94:0x011e, CROSS_EDGE: B:88:0x00d9 \-\> B:90:0x00e8, CROSS_EDGE: B:86:0x00d3 \-\> B:99:0x0134, CROSS_EDGE: B:84:0x00c1 \-\> B:85:0x00c4, CROSS_EDGE: B:83:0x00b8 \-\> B:84:0x00c1, CROSS_EDGE: B:78:0x0085 \-\> B:80:0x008e, CROSS_EDGE: B:72:0x0069 \-\> B:77:0x0075\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0094: r5 'scaleX' F\l  0x009e\-0x00b4: r1 'len' F\l  0x00b4\-0x00b8: r17 'len' F\l  0x00b8\-0x00bc: r1 'len' F\l  0x0083\-0x00c4: r12 'end' F\l  0x007c\-0x00c4: r15 'start' F\l  0x00bc\-0x00c4: r17 'len' F\l  0x00f4\-0x0107: r15 'shader' Landroid\/graphics\/Shader;\l  0x00d7\-0x0134: r1 'fill' Landroidx\/core\/content\/res\/ComplexColorCompat;\l  0x00ea\-0x0134: r5 'fillPaint' Landroid\/graphics\/Paint;\l  0x0172\-0x0185: r12 'shader' Landroid\/graphics\/Shader;\l  0x013e\-0x01ad: r1 'strokeColor' Landroidx\/core\/content\/res\/ComplexColorCompat;\l  0x01a1\-0x01ad: r4 'finalStrokeScale' F\l  0x0151\-0x01ad: r5 'strokePaint' Landroid\/graphics\/Paint;\l  0x0063\-0x01ad: r14 'fullPath' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VFullPath;\l  0x0014\-0x01ad: r7 'scaleY' F\l  0x0018\-0x01ad: r8 'minScale' F\l  0x001c\-0x01ad: r10 'groupStackedMatrix' Landroid\/graphics\/Matrix;\l  0x002a\-0x01ad: r11 'matrixScale' F\l  0x0037\-0x01ad: r13 'path' Landroid\/graphics\/Path;\l  0x0094\-0x01ad: r16 'scaleX' F\l  \-1 \-0x01ad: r19 'vGroup' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VGroup;\l  \-1 \-0x01ad: r20 'vPath' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VPath;\l  \-1 \-0x01ad: r21 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x01ad: r22 'w' I\l  \-1 \-0x01ad: r23 'h' I\l  \-1 \-0x01ad: r24 'filter' Landroid\/graphics\/ColorFilter;\l}"];
MethodNode -> Node_59;Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_60;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_71;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_116;
Node_116 -> Node_60;
Node_69 -> Node_70;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_77[style=dashed];
Node_76 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_99;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_93;
Node_92 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_98;
Node_98 -> Node_99;
Node_97 -> Node_98;
Node_93 -> Node_94;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_117;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_107;
Node_106 -> Node_107;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_110;
Node_109 -> Node_110;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_113;
Node_112 -> Node_114;
Node_114 -> Node_115;
Node_115 -> Node_60;
Node_113 -> Node_114;
Node_117 -> Node_60;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_84;
Node_84 -> Node_85;
Node_83 -> Node_84;
}

