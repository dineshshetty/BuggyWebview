digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath(Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VGroup;Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VPath;Landroid\/graphics\/Canvas;IILandroid\/graphics\/ColorFilter;)V" {
Node_59 [shape=record,label="{59\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_61 [shape=record,label="{61\:\ 0x0000|float r5 = ((float) r22) \/ r18.mViewportWidth\lfloat r7 = ((float) r23) \/ r18.mViewportHeight\lfloat r8 = java.lang.Math.min(r5, r7)\landroid.graphics.Matrix r10 = r19.mStackedMatrix\lr18.mFinalPathMatrix.set(r10)\lr18.mFinalPathMatrix.postScale(r5, r7)\lfloat r11 = getMatrixScale(r10)\l}"];
Node_62 [shape=record,label="{62\:\ 0x002d|if ((r11 \> 0.0f ? 1 : (r11 == 0.0f ? 0 : \-1)) != 0) goto L5\l}"];
Node_63 [shape=record,label="{63\:\ 0x002f|RETURN\l|return\l}"];
Node_60 [shape=record,label="{60\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0030|r20.toPath(r18.mPath)\landroid.graphics.Path r13 = r18.mPath\lr18.mRenderPath.reset()\l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|if (r20.isClipPath() == false) goto L13\l}"];
Node_66 [shape=record,label="{66\:\ 0x0042|android.graphics.Path r12 = r18.mRenderPath\l}"];
Node_67 [shape=record,label="{67\:\ 0x0046|if (r20.mFillRule != 0) goto L12\l}"];
Node_68 [shape=record,label="{68\:\ 0x0048|android.graphics.Path$FillType r14 = android.graphics.Path.FillType.WINDING\l}"];
Node_70 [shape=record,label="{70\:\ 0x004d|PHI: r14 \l  PHI: (r14v6 android.graphics.Path$FillType) = (r14v5 android.graphics.Path$FillType), (r14v8 android.graphics.Path$FillType) binds: [B:69:0x004b, B:68:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|r12.setFillType(r14)\lr18.mRenderPath.addPath(r13, r18.mFinalPathMatrix)\lr21.clipPath(r18.mRenderPath)\l}"];
Node_116 [shape=record,label="{116\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_69 [shape=record,label="{69\:\ 0x004b|android.graphics.Path$FillType r14 = android.graphics.Path.FillType.EVEN_ODD\l}"];
Node_71 [shape=record,label="{71\:\ 0x0060|androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath r14 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath) r20\l}"];
Node_72 [shape=record,label="{72\:\ 0x0069|if ((r14.mTrimPathStart \> 0.0f ? 1 : (r14.mTrimPathStart == 0.0f ? 0 : \-1)) != 0) goto L50\l}"];
Node_73 [shape=record,label="{73\:\ 0x006b}"];
Node_74 [shape=record,label="{74\:\ 0x006f|if ((r14.mTrimPathEnd \> 1.0f ? 1 : (r14.mTrimPathEnd == 1.0f ? 0 : \-1)) == 0) goto L17\l}"];
Node_76 [shape=record,label="{76\:\ 0x0072}"];
Node_85 [shape=record,label="{85\:\ 0x00c4|r18.mRenderPath.addPath(r13, r18.mFinalPathMatrix)\l}"];
Node_86 [shape=record,label="{86\:\ 0x00d3|if (r14.mFillColor.willDraw() == false) goto L32\l}"];
Node_87 [shape=record,label="{87\:\ 0x00d5|androidx.core.content.res.ComplexColorCompat r1 = r14.mFillColor\l}"];
Node_88 [shape=record,label="{88\:\ 0x00d9|if (r18.mFillPaint != null) goto L23\l}"];
Node_89 [shape=record,label="{89\:\ 0x00db|android.graphics.Paint r15 = new android.graphics.Paint(1)\lr18.mFillPaint = r15\lr15.setStyle(android.graphics.Paint.Style.FILL)\l}"];
Node_90 [shape=record,label="{90\:\ 0x00e8|android.graphics.Paint r5 = r18.mFillPaint\l}"];
Node_91 [shape=record,label="{91\:\ 0x00ee|if (r1.isGradient() == false) goto L31\l}"];
Node_92 [shape=record,label="{92\:\ 0x00f0|android.graphics.Shader r15 = r1.getShader()\lr15.setLocalMatrix(r18.mFinalPathMatrix)\lr5.setShader(r15)\lr5.setAlpha(java.lang.Math.round(r14.mFillAlpha * 255.0f))\l}"];
Node_94 [shape=record,label="{94\:\ 0x011e|r5.setColorFilter(r24)\landroid.graphics.Path r12 = r18.mRenderPath\l}"];
Node_95 [shape=record,label="{95\:\ 0x0125|if (r14.mFillRule != 0) goto L30\l}"];
Node_96 [shape=record,label="{96\:\ 0x0127|android.graphics.Path$FillType r15 = android.graphics.Path.FillType.WINDING\l}"];
Node_98 [shape=record,label="{98\:\ 0x012c|PHI: r15 \l  PHI: (r15v14 android.graphics.Path$FillType) = (r15v13 android.graphics.Path$FillType), (r15v15 android.graphics.Path$FillType) binds: [B:97:0x012a, B:96:0x0127] A[DONT_GENERATE, DONT_INLINE]\l|r12.setFillType(r15)\lr21.drawPath(r18.mRenderPath, r5)\l}"];
Node_97 [shape=record,label="{97\:\ 0x012a|android.graphics.Path$FillType r15 = android.graphics.Path.FillType.EVEN_ODD\l}"];
Node_93 [shape=record,label="{93\:\ 0x0108|r5.setShader(null)\lr5.setAlpha(255)\lr5.setColor(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(r1.getColor(), r14.mFillAlpha))\l}"];
Node_99 [shape=record,label="{99\:\ 0x0134}"];
Node_100 [shape=record,label="{100\:\ 0x013a|if (r14.mStrokeColor.willDraw() == false) goto L49\l}"];
Node_101 [shape=record,label="{101\:\ 0x013c|androidx.core.content.res.ComplexColorCompat r1 = r14.mStrokeColor\l}"];
Node_102 [shape=record,label="{102\:\ 0x0140|if (r18.mStrokePaint != null) goto L37\l}"];
Node_103 [shape=record,label="{103\:\ 0x0142|android.graphics.Paint r5 = new android.graphics.Paint(1)\lr18.mStrokePaint = r5\lr5.setStyle(android.graphics.Paint.Style.STROKE)\l}"];
Node_104 [shape=record,label="{104\:\ 0x014f|android.graphics.Paint r5 = r18.mStrokePaint\l}"];
Node_105 [shape=record,label="{105\:\ 0x0153|if (r14.mStrokeLineJoin == null) goto L40\l}"];
Node_106 [shape=record,label="{106\:\ 0x0155|r5.setStrokeJoin(r14.mStrokeLineJoin)\l}"];
Node_107 [shape=record,label="{107\:\ 0x015a}"];
Node_108 [shape=record,label="{108\:\ 0x015c|if (r14.mStrokeLineCap == null) goto L43\l}"];
Node_109 [shape=record,label="{109\:\ 0x015e|r5.setStrokeCap(r14.mStrokeLineCap)\l}"];
Node_110 [shape=record,label="{110\:\ 0x0163|r5.setStrokeMiter(r14.mStrokeMiterlimit)\l}"];
Node_111 [shape=record,label="{111\:\ 0x016c|if (r1.isGradient() == false) goto L48\l}"];
Node_112 [shape=record,label="{112\:\ 0x016e|android.graphics.Shader r12 = r1.getShader()\lr12.setLocalMatrix(r18.mFinalPathMatrix)\lr5.setShader(r12)\lr5.setAlpha(java.lang.Math.round(r14.mStrokeAlpha * 255.0f))\l}"];
Node_114 [shape=record,label="{114\:\ 0x019c|r5.setColorFilter(r24)\lfloat r4 = r8 * r11\lr5.setStrokeWidth(r14.mStrokeWidth * r4)\lr21.drawPath(r18.mRenderPath, r5)\l}"];
Node_115 [shape=record,label="{115\:\ 0x01ad|RETURN\lORIG_RETURN\l|return\l}"];
Node_113 [shape=record,label="{113\:\ 0x0186|r5.setShader(null)\lr5.setAlpha(255)\lr5.setColor(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha(r1.getColor(), r14.mStrokeAlpha))\l}"];
Node_117 [shape=record,label="{117\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_77 [shape=record,label="{77\:\ 0x0075|float r15 = (r14.mTrimPathStart + r14.mTrimPathOffset) % 1.0f\lfloat r12 = (r14.mTrimPathEnd + r14.mTrimPathOffset) % 1.0f\l}"];
Node_78 [shape=record,label="{78\:\ 0x0085|if (r18.mPathMeasure != null) goto L53\l}"];
Node_79 [shape=record,label="{79\:\ 0x0087|r18.mPathMeasure = new android.graphics.PathMeasure()\l}"];
Node_80 [shape=record,label="{80\:\ 0x008e|r18.mPathMeasure.setPath(r18.mPath, false)\lfloat r1 = r18.mPathMeasure.getLength()\lfloat r15 = r15 * r1\lfloat r12 = r12 * r1\lr13.reset()\l}"];
Node_81 [shape=record,label="{81\:\ 0x00a7|if ((r15 \> r12 ? 1 : (r15 == r12 ? 0 : \-1)) \<= 0) goto L57\l}"];
Node_82 [shape=record,label="{82\:\ 0x00a9|r18.mPathMeasure.getSegment(r15, r1, r13, true)\lr1 = 0.0f\lr18.mPathMeasure.getSegment(0.0f, r12, r13, true)\l}"];
Node_84 [shape=record,label="{84\:\ 0x00c1|PHI: r1 \l  PHI: (r1v7 'len' float) = (r1v6 'len' float), (r1v8 'len' float) binds: [B:83:0x00b8, B:82:0x00a9] A[DONT_GENERATE, DONT_INLINE]\l|r13.rLineTo(r1, r1)\l}"];
Node_83 [shape=record,label="{83\:\ 0x00b8|r1 = 0.0f\lr18.mPathMeasure.getSegment(r15, r12, r13, true)\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.drawPath((r18v0 'this' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer A[IMMUTABLE_TYPE, THIS]), (r19v0 'vGroup' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup A[D('vGroup' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'vPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath A[D('vPath' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'w' int A[D('w' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'h' int A[D('h' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'filter' android.graphics.ColorFilter A[D('filter' android.graphics.ColorFilter), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:115:0x01ad \-\> B:60:?, CROSS_EDGE: B:69:0x004b \-\> B:70:0x004d, CROSS_EDGE: B:114:0x019c \-\> B:115:0x01ad, CROSS_EDGE: B:113:0x0186 \-\> B:114:0x019c, CROSS_EDGE: B:108:0x015c \-\> B:110:0x0163, CROSS_EDGE: B:105:0x0153 \-\> B:107:0x015a, CROSS_EDGE: B:102:0x0140 \-\> B:104:0x014f, CROSS_EDGE: B:100:0x013a \-\> B:115:0x01ad, CROSS_EDGE: B:97:0x012a \-\> B:98:0x012c, CROSS_EDGE: B:93:0x0108 \-\> B:94:0x011e, CROSS_EDGE: B:88:0x00d9 \-\> B:90:0x00e8, CROSS_EDGE: B:86:0x00d3 \-\> B:99:0x0134, CROSS_EDGE: B:84:0x00c1 \-\> B:85:0x00c4, CROSS_EDGE: B:83:0x00b8 \-\> B:84:0x00c1, CROSS_EDGE: B:78:0x0085 \-\> B:80:0x008e, CROSS_EDGE: B:72:0x0069 \-\> B:77:0x0075\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_59;Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_60;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_71;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_70;
Node_70 -> Node_116;
Node_116 -> Node_60;
Node_69 -> Node_70;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_74 -> Node_76;
Node_74 -> Node_77[style=dashed];
Node_76 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_99;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_90;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_93;
Node_92 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_98;
Node_98 -> Node_99;
Node_97 -> Node_98;
Node_93 -> Node_94;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_117;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_107;
Node_106 -> Node_107;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_110;
Node_109 -> Node_110;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_113;
Node_112 -> Node_114;
Node_114 -> Node_115;
Node_115 -> Node_60;
Node_113 -> Node_114;
Node_117 -> Node_60;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_84;
Node_84 -> Node_85;
Node_83 -> Node_84;
}

