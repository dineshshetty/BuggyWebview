digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.isStateful()Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:528)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:529)\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.isStateful():boolean A[MD:():boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCommon) type: SUPER call: androidx.vectordrawable.graphics.drawable.VectorDrawableCommon.isStateful():boolean A[MD:():boolean (c)] (LINE:532)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x002e \l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState \l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002c \l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|0x0015: INVOKE  (r0 I:boolean) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.isStateful():boolean A[MD:():boolean (m)] (LINE:533)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|0x0019: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x002e \l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState \l0x001d: IGET  (r0 I:android.content.res.ColorStateList) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList \l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002c \l}"];
Node_35 [shape=record,label="{35\:\ 0x0021|0x0021: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState \l0x0023: IGET  (r0 I:android.content.res.ColorStateList) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList \l0x0025: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.ColorStateList) type: VIRTUAL call: android.content.res.ColorStateList.isStateful():boolean A[MD:():boolean (c)] (LINE:534)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0029|0x0029: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002c \l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|SYNTHETIC\lRETURN\l|0x002c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002f: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:532)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: RETURN  (r0 I:boolean)  (LINE:532)\l}"];
MethodNode[shape=record,label="{public boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.isStateful((r1 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:40:0x002f \-\> B:22:?, CROSS_EDGE: B:39:0x002e \-\> B:40:0x002f, CROSS_EDGE: B:34:0x001f \-\> B:38:0x002c, CROSS_EDGE: B:32:0x0019 \-\> B:39:0x002e, CROSS_EDGE: B:30:0x0013 \-\> B:38:0x002c, CROSS_EDGE: B:28:0x000f \-\> B:39:0x002e\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.isStateful():boolean\}]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_39;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_39[style=dashed];
Node_38 -> Node_22;
Node_39 -> Node_22;
}

