digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.draw(Landroid\/graphics\/Canvas;)V" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:360)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x000a \l}"];
Node_42 [shape=record,label="{42\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:361)\l0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable), (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:362)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x000a|0x000a: IGET  (r0 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:366)\l0x000c: INVOKE  (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat), (r0 I:android.graphics.Rect) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.copyBounds(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (s)]\l0x000f: IGET  (r0 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:367)\l0x0011: INVOKE  (r0 I:int) = (r0 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0015|0x0015: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:73:0x00e1 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0017|0x0017: IGET  (r0 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect \l0x0019: INVOKE  (r0 I:int) = (r0 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x001d|0x001d: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:49:0x0021 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0021|0x0021: IGET  (r0 I:android.graphics.ColorFilter) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mColorFilter android.graphics.ColorFilter  (LINE:373)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0027 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0025|0x0025: IGET  (r0 I:android.graphics.PorterDuffColorFilter) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter android.graphics.PorterDuffColorFilter \l}"];
Node_52 [shape=record,label="{52\:\ 0x0027|0x0027: IGET  (r1 I:android.graphics.Matrix) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpMatrix android.graphics.Matrix  (LINE:379)\l0x0029: INVOKE  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r1 I:android.graphics.Matrix) type: VIRTUAL call: android.graphics.Canvas.getMatrix(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)]\l0x002c: IGET  (r1 I:android.graphics.Matrix) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpMatrix android.graphics.Matrix  (LINE:380)\l0x002e: IGET  (r2 I:float[]) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats float[] \l0x0030: INVOKE  (r1 I:android.graphics.Matrix), (r2 I:float[]) type: VIRTUAL call: android.graphics.Matrix.getValues(float[]):void A[MD:(float[]):void (c)]\l0x0033: IGET  (r1 I:float[]) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats float[]  (LINE:381)\l0x0035: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0036: AGET  (r1 I:??[int, float, short, byte, char]) = (r1 I:??[int, float][]), (r2 I:??[int, short, byte, char]) \l0x0038: INVOKE  (r1 I:float) = (r1 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x003c: IGET  (r3 I:float[]) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats float[]  (LINE:382)\l0x003e: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x003f: AGET  (r3 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][]), (r4 I:??[int, short, byte, char]) \l0x0041: INVOKE  (r3 I:float) = (r3 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0045: IGET  (r4 I:float[]) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats float[]  (LINE:384)\l0x0047: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0048: AGET  (r4 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][]), (r5 I:??[int, short, byte, char]) \l0x004a: INVOKE  (r4 I:float) = (r4 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x004e: IGET  (r5 I:float[]) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpFloats float[]  (LINE:385)\l0x0050: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0051: AGET  (r5 I:??[int, float, short, byte, char]) = (r5 I:??[int, float][]), (r6 I:??[int, short, byte, char]) \l0x0053: INVOKE  (r5 I:float) = (r5 I:float) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)]\l0x0057: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:388)\l0x0058: CMP_L  (r7 I:int) = (r4 I:float A[D('canvasSkewX' float)]), (r6 I:float) \l}"];
Node_53 [shape=record,label="{53\:\ 0x005a|0x005a: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0060 \l}"];
Node_54 [shape=record,label="{54\:\ 0x005c|0x005c: CMP_L  (r7 I:int) = (r5 I:float A[D('canvasSkewY' float)]), (r6 I:float) \l}"];
Node_55 [shape=record,label="{55\:\ 0x005e|0x005e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0064 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0064|0x0064: IGET  (r7 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:393)\l0x0066: INVOKE  (r7 I:int) = (r7 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x006a: CAST (r7 I:float) = (float) (r7 I:int) \l0x006b: ARITH  (r7 I:float) = (r7 I:float) * (r1 I:float A[D('canvasScaleX' float)]) \l0x006d: CAST (r7 I:int) = (int) (r7 I:float) \l0x006e: IGET  (r8 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:394)\l0x0070: INVOKE  (r8 I:int) = (r8 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)]\l0x0074: CAST (r8 I:float) = (float) (r8 I:int) \l0x0075: ARITH  (r8 I:float) = (r8 I:float) * (r3 I:float A[D('canvasScaleY' float)]) \l0x0077: CAST (r8 I:int) = (int) (r8 I:float) \l0x0078: CONST  (r9 I:??[int, float, short, byte, char]) = (2048(0x800, float:2.87E\-42) ??[int, float, short, byte, char])  (LINE:395)\l0x007a: INVOKE  (r7 I:int A[D('scaledWidth' int)]) = (r9 I:int), (r7 I:int A[D('scaledWidth' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x007e: INVOKE  (r8 I:int A[D('scaledHeight' int)]) = (r9 I:int), (r8 I:int A[D('scaledHeight' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:396)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0082|0x0082: IF  (r7 I:??[int, byte, short, char] A[D('scaledWidth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:72:0x00e0  (LINE:398)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0084|0x0084: IF  (r8 I:??[int, byte, short, char] A[D('scaledHeight' int)]) \> (0 ??[int, byte, short, char])  \-\> B:61:0x0087 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0087|0x0087: INVOKE  (r9 I:int) = (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:402)\l0x008b: IGET  (r10 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:403)\l0x008d: IGET  (r10 I:int) = (r10 I:android.graphics.Rect) android.graphics.Rect.left int \l0x008f: CAST (r10 I:float) = (float) (r10 I:int) \l0x0090: IGET  (r11 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect \l0x0092: IGET  (r11 I:int) = (r11 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0094: CAST (r11 I:float) = (float) (r11 I:int) \l0x0095: INVOKE  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r10 I:float), (r11 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0098: INVOKE  (r10 I:boolean) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.needMirroring():boolean A[MD:():boolean (m)] (LINE:406)\l}"];
Node_62 [shape=record,label="{62\:\ 0x009c|0x009c: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needMirroring' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x00af  (LINE:407)\l}"];
Node_63 [shape=record,label="{63\:\ 0x009e|0x009e: IGET  (r11 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:408)\l0x00a0: INVOKE  (r11 I:int) = (r11 I:android.graphics.Rect) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)]\l0x00a4: CAST (r11 I:float) = (float) (r11 I:int) \l0x00a5: INVOKE  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r11 I:float), (r6 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x00a8: CONST  (r6 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char])  (LINE:409)\l0x00aa: CONST  (r11 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x00ac: INVOKE  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r6 I:float), (r11 I:float) type: VIRTUAL call: android.graphics.Canvas.scale(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x00af|0x00af: IGET  (r6 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect  (LINE:415)\l0x00b1: INVOKE  (r6 I:android.graphics.Rect), (r2 I:int), (r2 I:int) type: VIRTUAL call: android.graphics.Rect.offsetTo(int, int):void A[MD:(int, int):void (c)]\l0x00b4: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:417)\l0x00b6: INVOKE  \l  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l  (r7 I:int A[D('scaledWidth' int)])\l  (r8 I:int A[D('scaledHeight' int)])\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.createCachedBitmapIfNeeded(int, int):void A[MD:(int, int):void (m)]\l0x00b9: IGET  (r2 I:boolean) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mAllowCaching boolean  (LINE:418)\l}"];
Node_65 [shape=record,label="{65\:\ 0x00bb|0x00bb: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x00c3 \l}"];
Node_66 [shape=record,label="{66\:\ 0x00bd|0x00bd: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:419)\l0x00bf: INVOKE  \l  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l  (r7 I:int A[D('scaledWidth' int)])\l  (r8 I:int A[D('scaledHeight' int)])\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.updateCachedBitmap(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_70 [shape=record,label="{70\:\ 0x00d5|0x00d5: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:426)\l0x00d7: IGET  (r6 I:android.graphics.Rect) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTmpBounds android.graphics.Rect \l0x00d9: INVOKE  \l  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r0 I:android.graphics.ColorFilter A[D('colorFilter' android.graphics.ColorFilter)])\l  (r6 I:android.graphics.Rect)\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.drawCachedBitmapWithRootAlpha(android.graphics.Canvas, android.graphics.ColorFilter, android.graphics.Rect):void A[MD:(android.graphics.Canvas, android.graphics.ColorFilter, android.graphics.Rect):void (m)]\l0x00dc: INVOKE  (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r9 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:427)\l}"];
Node_71 [shape=record,label="{71\:\ 0x00df|RETURN\l|0x00df: RETURN    (LINE:428)\l}"];
Node_67 [shape=record,label="{67\:\ 0x00c3|0x00c3: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:421)\l0x00c5: INVOKE  (r2 I:boolean) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseCache():boolean A[MD:():boolean (m)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x00c9|0x00c9: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x00d5 \l}"];
Node_69 [shape=record,label="{69\:\ 0x00cb|0x00cb: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:422)\l0x00cd: INVOKE  \l  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)\l  (r7 I:int A[D('scaledWidth' int)])\l  (r8 I:int A[D('scaledHeight' int)])\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.updateCachedBitmap(int, int):void A[MD:(int, int):void (m)]\l0x00d0: IGET  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r12 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:423)\l0x00d2: INVOKE  (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.updateCacheStates():void A[MD:():void (m)]\l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|0x00e0: RETURN   A[SYNTHETIC] (LINE:399)\l}"];
Node_72 [shape=record,label="{72\:\ 0x00e0|RETURN\lORIG_RETURN\l|0x00e0: RETURN    (LINE:399)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0060|0x0060: CONST  (r1 I:??[int, float, short, byte, char] A[D('canvasScaleX' float)]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:389)\l0x0062: CONST  (r3 I:??[int, float, short, byte, char] A[D('canvasScaleY' float)]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:390)\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|0x00e1: RETURN   A[SYNTHETIC] (LINE:369)\l}"];
Node_73 [shape=record,label="{73\:\ 0x00e1|RETURN\lORIG_RETURN\l|0x00e1: RETURN    (LINE:369)\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.draw((r12 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:71:0x00df \-\> B:39:?, CROSS_EDGE: B:69:0x00cb \-\> B:70:0x00d5, CROSS_EDGE: B:68:0x00c9 \-\> B:70:0x00d5, CROSS_EDGE: B:62:0x009c \-\> B:64:0x00af, CROSS_EDGE: B:72:0x00e0 \-\> B:39:?, CROSS_EDGE: B:58:0x0082 \-\> B:72:0x00e0, CROSS_EDGE: B:55:0x005e \-\> B:57:0x0064, CROSS_EDGE: B:53:0x005a \-\> B:56:0x0060, CROSS_EDGE: B:50:0x0023 \-\> B:52:0x0027, CROSS_EDGE: B:73:0x00e1 \-\> B:39:?, CROSS_EDGE: B:45:0x0015 \-\> B:73:0x00e1\lINLINE_NOT_NEEDED\lDebug Info:\l  0x008b\-0x00e0: r9 'saveCount' I\l  0x009c\-0x00e0: r10 'needMirroring' Z\l  0x0027\-0x00e1: r0 'colorFilter' Landroid\/graphics\/ColorFilter;\l  0x003c\-0x00e1: r1 'canvasScaleX' F\l  0x0045\-0x00e1: r3 'canvasScaleY' F\l  0x004e\-0x00e1: r4 'canvasSkewX' F\l  0x0057\-0x00e1: r5 'canvasSkewY' F\l  0x006e\-0x00e1: r7 'scaledWidth' I\l  0x0078\-0x00e1: r8 'scaledHeight' I\l  \-1 \-0x00e1: r13 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_73;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_47 -> Node_75[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_72;
Node_59 -> Node_61;
Node_59 -> Node_74[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_39;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_74 -> Node_39;
Node_72 -> Node_39;
Node_56 -> Node_57;
Node_75 -> Node_39;
Node_73 -> Node_39;
}

