digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.setAlpha(I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:441)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:442)\l0x0006: INVOKE  (r0 I:android.graphics.drawable.Drawable), (r2 I:int A[D('alpha' int)]) type: VIRTUAL call: android.graphics.drawable.Drawable.setAlpha(int):void A[MD:(int):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:443)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:446)\l0x000c: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mVPathRenderer androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer \l0x000e: INVOKE  (r0 I:int) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.getRootAlpha():int A[MD:():int (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('alpha' int)])  \-\> B:21:? \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:447)\l0x0016: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) = (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mVPathRenderer androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer \l0x0018: INVOKE  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer), (r2 I:int A[D('alpha' int)]) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.setRootAlpha(int):void A[MD:(int):void (m)]\l0x001b: INVOKE  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.invalidateSelf():void A[MD:():void (m)] (LINE:448)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN    (LINE:450)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN   A[SYNTHETIC] (LINE:450)\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.setAlpha((r1 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('alpha' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x001e \-\> B:12:?, CROSS_EDGE: B:18:0x0012 \-\> B:20:0x001e\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001e: r2 'alpha' I\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setAlpha(int):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

