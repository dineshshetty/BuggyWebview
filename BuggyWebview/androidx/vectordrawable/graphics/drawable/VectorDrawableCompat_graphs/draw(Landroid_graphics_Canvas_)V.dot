digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.draw(Landroid\/graphics\/Canvas;)V" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000}"];
Node_41 [shape=record,label="{41\:\ 0x0002|if (r12.mDelegateDrawable == null) goto L6\l}"];
Node_42 [shape=record,label="{42\:\ 0x0004|r12.mDelegateDrawable.draw(r13)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0009|RETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x000a|copyBounds(r12.mTmpBounds)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0015|if (r12.mTmpBounds.width() \<= 0) goto L35\l}"];
Node_46 [shape=record,label="{46\:\ 0x0017}"];
Node_47 [shape=record,label="{47\:\ 0x001d|if (r12.mTmpBounds.height() \> 0) goto L10\l}"];
Node_49 [shape=record,label="{49\:\ 0x0021|android.graphics.ColorFilter r0 = r12.mColorFilter\l}"];
Node_50 [shape=record,label="{50\:\ 0x0023|if (r0 != null) goto L13\l}"];
Node_51 [shape=record,label="{51\:\ 0x0025|android.graphics.PorterDuffColorFilter r0 = r12.mTintFilter\l}"];
Node_52 [shape=record,label="{52\:\ 0x0027|PHI: r0 \l  PHI: (r0v7 'colorFilter' android.graphics.ColorFilter) = (r0v6 'colorFilter' android.graphics.ColorFilter), (r0v8 'colorFilter' android.graphics.ColorFilter) binds: [B:50:0x0023, B:51:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|r13.getMatrix(r12.mTmpMatrix)\lr12.mTmpMatrix.getValues(r12.mTmpFloats)\lfloat r1 = java.lang.Math.abs(r12.mTmpFloats[0])\lfloat r3 = java.lang.Math.abs(r12.mTmpFloats[4])\lfloat r4 = java.lang.Math.abs(r12.mTmpFloats[1])\lfloat r5 = java.lang.Math.abs(r12.mTmpFloats[3])\l}"];
Node_53 [shape=record,label="{53\:\ 0x005a|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) != 0) goto L33\l}"];
Node_54 [shape=record,label="{54\:\ 0x005c}"];
Node_55 [shape=record,label="{55\:\ 0x005e|if ((r5 \> 0.0f ? 1 : (r5 == 0.0f ? 0 : \-1)) == 0) goto L17\l}"];
Node_57 [shape=record,label="{57\:\ 0x0064|PHI: r1 r3 \l  PHI: (r1v6 'canvasScaleX' float) = (r1v5 'canvasScaleX' float), (r1v4 'canvasScaleX' float) binds: [B:56:0x0060, B:55:0x005e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 'canvasScaleY' float) = (r3v3 'canvasScaleY' float), (r3v2 'canvasScaleY' float) binds: [B:56:0x0060, B:55:0x005e] A[DONT_GENERATE, DONT_INLINE]\l|int r7 = java.lang.Math.min(2048, (int) (((float) r12.mTmpBounds.width()) * r1))\lint r8 = java.lang.Math.min(2048, (int) (((float) r12.mTmpBounds.height()) * r3))\l}"];
Node_58 [shape=record,label="{58\:\ 0x0082|if (r7 \<= 0) goto L32\l}"];
Node_59 [shape=record,label="{59\:\ 0x0084|if (r8 \> 0) goto L20\l}"];
Node_61 [shape=record,label="{61\:\ 0x0087|int r9 = r13.save()\lr13.translate((float) r12.mTmpBounds.left, (float) r12.mTmpBounds.top)\lboolean r10 = needMirroring()\l}"];
Node_62 [shape=record,label="{62\:\ 0x009c|if (r10 == false) goto L23\l}"];
Node_63 [shape=record,label="{63\:\ 0x009e|r13.translate((float) r12.mTmpBounds.width(), 0.0f)\lr13.scale(\-1.0f, 1.0f)\l}"];
Node_64 [shape=record,label="{64\:\ 0x00af|r12.mTmpBounds.offsetTo(0, 0)\lr12.mVectorState.createCachedBitmapIfNeeded(r7, r8)\l}"];
Node_65 [shape=record,label="{65\:\ 0x00bb|if (r12.mAllowCaching != false) goto L28\l}"];
Node_66 [shape=record,label="{66\:\ 0x00bd|r12.mVectorState.updateCachedBitmap(r7, r8)\l}"];
Node_70 [shape=record,label="{70\:\ 0x00d5|r12.mVectorState.drawCachedBitmapWithRootAlpha(r13, r0, r12.mTmpBounds)\lr13.restoreToCount(r9)\l}"];
Node_71 [shape=record,label="{71\:\ 0x00df|RETURN\l|return\l}"];
Node_67 [shape=record,label="{67\:\ 0x00c3}"];
Node_68 [shape=record,label="{68\:\ 0x00c9|if (r12.mVectorState.canReuseCache() != false) goto L26\l}"];
Node_69 [shape=record,label="{69\:\ 0x00cb|r12.mVectorState.updateCachedBitmap(r7, r8)\lr12.mVectorState.updateCacheStates()\l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_72 [shape=record,label="{72\:\ 0x00e0|RETURN\lORIG_RETURN\l|return\l}"];
Node_56 [shape=record,label="{56\:\ 0x0060|r1 = 1.0f\lr3 = 1.0f\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_73 [shape=record,label="{73\:\ 0x00e1|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.draw((r12v0 'this' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r13v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:71:0x00df \-\> B:39:?, CROSS_EDGE: B:69:0x00cb \-\> B:70:0x00d5, CROSS_EDGE: B:68:0x00c9 \-\> B:70:0x00d5, CROSS_EDGE: B:62:0x009c \-\> B:64:0x00af, CROSS_EDGE: B:72:0x00e0 \-\> B:39:?, CROSS_EDGE: B:58:0x0082 \-\> B:72:0x00e0, CROSS_EDGE: B:55:0x005e \-\> B:57:0x0064, CROSS_EDGE: B:53:0x005a \-\> B:56:0x0060, CROSS_EDGE: B:50:0x0023 \-\> B:52:0x0027, CROSS_EDGE: B:73:0x00e1 \-\> B:39:?, CROSS_EDGE: B:45:0x0015 \-\> B:73:0x00e1\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_73;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_47 -> Node_75[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_72;
Node_59 -> Node_61;
Node_59 -> Node_74[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_39;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_74 -> Node_39;
Node_72 -> Node_39;
Node_56 -> Node_57;
Node_75 -> Node_39;
Node_73 -> Node_39;
}

