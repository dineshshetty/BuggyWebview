digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflate(Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:707)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:708)\l0x0006: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r10 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void A[MD:(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:709)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:712)\l0x000c: NEW_INSTANCE  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) =  androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer  (LINE:713)\l0x000e: INVOKE  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.\<init\>():void A[MD:():void (m)]\l0x0011: IPUT  \l  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer A[D('pathRenderer' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)])\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mVPathRenderer androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer  (LINE:714)\l0x0013: SGET  (r2 I:int[]) =  androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY int[]  (LINE:716)\l0x0015: INVOKE  (r2 I:android.content.res.TypedArray) = \l  (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r10 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r2 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l0x0019: INVOKE  \l  (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)\l  (r2 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r10 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateStateFromTypedArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):void A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, android.content.res.Resources$Theme):void throws org.xmlpull.v1.XmlPullParserException (m)] (LINE:719)\l0x001c: INVOKE  (r2 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:720)\l0x001f: INVOKE  (r3 I:int) = (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.getChangingConfigurations():int A[MD:():int (m)] (LINE:721)\l0x0023: IPUT  \l  (r3 I:int)\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mChangingConfigurations int \l0x0025: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:722)\l0x0026: IPUT  \l  (r3 I:boolean)\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCacheDirty boolean \l0x0028: INVOKE  \l  (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)\l  (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r10 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflateInternal(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void A[MD:(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:723)\l0x002b: IGET  (r3 I:android.graphics.PorterDuffColorFilter) = (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter android.graphics.PorterDuffColorFilter  (LINE:725)\l0x002d: IGET  (r4 I:android.content.res.ColorStateList) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList \l0x002f: IGET  (r5 I:android.graphics.PorterDuff$Mode) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTintMode android.graphics.PorterDuff$Mode \l0x0031: INVOKE  (r3 I:android.graphics.PorterDuffColorFilter) = \l  (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)\l  (r3 I:android.graphics.PorterDuffColorFilter)\l  (r4 I:android.content.res.ColorStateList)\l  (r5 I:android.graphics.PorterDuff$Mode)\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter A[MD:(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter (m)]\l0x0035: IPUT  (r3 I:android.graphics.PorterDuffColorFilter), (r6 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter android.graphics.PorterDuffColorFilter \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|RETURN\l|0x0037: RETURN    (LINE:726)\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.inflate((r6 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0037 \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0037: r0 'state' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VectorDrawableCompatState;\l  0x0011\-0x0037: r1 'pathRenderer' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VPathRenderer;\l  0x0019\-0x0037: r2 'a' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x0037: r7 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0037: r8 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0037: r9 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0037: r10 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):void throws java.io.IOException, org.xmlpull.v1.XmlPullParserException\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

