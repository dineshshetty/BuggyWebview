digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create(Landroid\/content\/res\/Resources;ILandroid\/content\/res\/Resources$Theme;)Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat;" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"parser error\"  (LINE:645)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"VectorDrawableCompat\" \l0x0004: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0006: CONST  (r3 I:??[int, float, short, byte, char]) = (24 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0008|0x0008: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:50:0x0023 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) =  androidx.vectordrawable.graphics.drawable.VectorDrawableCompat  (LINE:646)\l0x000c: INVOKE  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.\<init\>():void A[MD:():void (m)]\l0x000f: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r8 I:int A[D('resId' int)])\l  (r9 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.core.content.res.ResourcesCompat.getDrawable(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (m)] (LINE:647)\l0x0013: IPUT  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[D('drawable' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x0015: NEW_INSTANCE  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState) =  androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState  (LINE:648)\l0x0017: IGET  (r2 I:android.graphics.drawable.Drawable) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[D('drawable' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x0019: INVOKE  (r2 I:android.graphics.drawable.Drawable$ConstantState) = (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState A[MD:():android.graphics.drawable.Drawable$ConstantState (c)] (LINE:649)\l0x001d: INVOKE  \l  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState)\l  (r2 I:android.graphics.drawable.Drawable$ConstantState)\l type: DIRECT call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableDelegateState.\<init\>(android.graphics.drawable.Drawable$ConstantState):void A[MD:(android.graphics.drawable.Drawable$ConstantState):void (m)]\l0x0020: IPUT  \l  (r1 I:android.graphics.drawable.Drawable$ConstantState)\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[D('drawable' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mCachedConstantStateDelegate android.graphics.drawable.Drawable$ConstantState \l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|RETURN\l|0x0022: RETURN  \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[D('drawable' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)])\l  (LINE:650)\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0023|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|TRY_ENTER\lTryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\lCatch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b\l|0x0023: INVOKE  (r2 I:android.content.res.XmlResourceParser) = (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)]), (r8 I:int A[D('resId' int)]) type: VIRTUAL call: android.content.res.Resources.getXml(int):android.content.res.XmlResourceParser A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c), TRY_ENTER] (LINE:654)\l0x0027: INVOKE  (r3 I:android.util.AttributeSet) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: STATIC call: android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, MD:(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet (c)] (LINE:655)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002b|LOOP_START\lTryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\lLOOP:0: B:34:0x002b\-\>B:38:0x0036\lCatch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b\l|0x002b: INVOKE  (r4 I:int) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:657)\l0x002f: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0031|0x0031: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0037 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0033|0x0033: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0034|0x0034: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0037 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0036|LOOP_END\lLOOP:0: B:34:0x002b\-\>B:38:0x0036\l|0x0036: GOTO  \-\> 0x002b \l}"];
Node_52 [shape=record,label="{52\:\ 0x0037|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0037|0x0037: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x003e  (LINE:661)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|TryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\lCatch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b\l|0x0039: INVOKE  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) = \l  (r7 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r9 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: STATIC call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, MD:(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):androidx.vectordrawable.graphics.drawable.VectorDrawableCompat throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:664)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d|RETURN\l|0x003d: RETURN  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) \l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|TryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\lCatch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b\l|0x003e: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b] (LINE:662)\l0x0040: CONST_STR  (r6 I:java.lang.String) =  \"No start tag found\" \l0x0042: INVOKE  (r4 I:org.xmlpull.v1.XmlPullParserException), (r6 I:java.lang.String) type: DIRECT call: org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, MD:(java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0045|TRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\lCatch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b\l|0x0045: THROW  (r4 I:java.lang.Throwable) A[Catch: IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, TRY_LEAVE]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0037|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0046|ExcHandler: IOException \-\> 0x0046\l|0x0046: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0046] (LINE:667)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0047|0x0047: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.io.IOException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:668)\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|0x0050: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:670)\l0x0051: RETURN  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) A[SYNTHETIC]\l}"];
Node_46 [shape=record,label="{46\:\ 0x004b|ExcHandler: XmlPullParserException \-\> 0x004b\l|0x004b: MOVE_EXCEPTION  (r2 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x004b] (LINE:665)\l}"];
Node_47 [shape=record,label="{47\:\ 0x004c|0x004c: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('e' org.xmlpull.v1.XmlPullParserException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:666)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0050|RETURN\lORIG_RETURN\l|0x0050: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:670)\l0x0051: RETURN  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) \l}"];
MethodNode[shape=record,label="{public static androidx.vectordrawable.graphics.drawable.VectorDrawableCompat androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create((r7 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x0036 \-\> B:34:0x002b, CROSS_EDGE: B:41:0x003d \-\> B:28:?, CROSS_EDGE: B:43:0x0045 \-\> B:28:?, CROSS_EDGE: B:35:0x0031 \-\> B:39:0x0037, CROSS_EDGE: B:49:0x0051 \-\> B:28:?, CROSS_EDGE: B:47:0x004c \-\> B:48:0x0050\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0023: r0 'drawable' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat;\l  \-1 \-0x0045: r7 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0045: r8 'resId' I\l  \-1 \-0x0045: r9 'theme' Landroid\/content\/res\/Resources$Theme;\l  0x0027\-0x0046: r2 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  0x002b\-0x0046: r3 'attrs' Landroid\/util\/AttributeSet;\l  0x0030\-0x0046: r5 'type' I\l  0x0047\-0x004b: r2 'e' Ljava\/io\/IOException;\l  0x004c\-0x004f: r2 'e' Lorg\/xmlpull\/v1\/XmlPullParserException;\l  0x0046\-0x0051: r7 'res' Landroid\/content\/res\/Resources;\l  0x0046\-0x0051: r8 'resId' I\l  0x0046\-0x0051: r9 'theme' Landroid\/content\/res\/Resources$Theme;\lTryCatch #2 \{IOException \-\> 0x0046, XmlPullParserException \-\> 0x004b, blocks: (B:33:0x0023, B:34:0x002b, B:40:0x0039, B:42:0x003e, B:43:0x0045), top: B:50:0x0023 \}\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_50;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_50 -> Node_33;
Node_50 -> Node_44;
Node_50 -> Node_46;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_51;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_52;
Node_38 -> Node_34;
Node_52 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_28;
Node_42 -> Node_43;
Node_43 -> Node_28;
Node_51 -> Node_39;
Node_44 -> Node_45;
Node_45 -> Node_53;
Node_53 -> Node_28;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_28;
}

