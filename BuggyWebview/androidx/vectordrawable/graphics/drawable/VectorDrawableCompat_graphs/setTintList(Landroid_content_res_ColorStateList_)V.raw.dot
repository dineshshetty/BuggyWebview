digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.setTintList(Landroid\/content\/res\/ColorStateList;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:498)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:499)\l0x0006: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r4 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void A[MD:(android.graphics.drawable.Drawable, android.content.res.ColorStateList):void (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:500)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: IGET  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) = (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mVectorState androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState  (LINE:503)\l0x000c: IGET  (r1 I:android.content.res.ColorStateList) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList  (LINE:504)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tint' android.content.res.ColorStateList)])  \-\> B:21:? \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: IPUT  \l  (r4 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList)])\l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList  (LINE:505)\l0x0012: IGET  (r1 I:android.graphics.PorterDuffColorFilter) = (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter android.graphics.PorterDuffColorFilter  (LINE:506)\l0x0014: IGET  (r2 I:android.graphics.PorterDuff$Mode) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[D('state' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)])\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTintMode android.graphics.PorterDuff$Mode \l0x0016: INVOKE  (r1 I:android.graphics.PorterDuffColorFilter) = \l  (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)\l  (r1 I:android.graphics.PorterDuffColorFilter)\l  (r4 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList)])\l  (r2 I:android.graphics.PorterDuff$Mode)\l type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.updateTintFilter(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter A[MD:(android.graphics.PorterDuffColorFilter, android.content.res.ColorStateList, android.graphics.PorterDuff$Mode):android.graphics.PorterDuffColorFilter (m)]\l0x001a: IPUT  (r1 I:android.graphics.PorterDuffColorFilter), (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.mTintFilter android.graphics.PorterDuffColorFilter \l0x001c: INVOKE  (r3 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.invalidateSelf():void A[MD:():void (m)] (LINE:507)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|RETURN\lORIG_RETURN\l|0x001f: RETURN    (LINE:509)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001f: RETURN   A[SYNTHETIC] (LINE:509)\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.setTintList((r3 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x001f \-\> B:12:?, CROSS_EDGE: B:18:0x000e \-\> B:20:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x001f: r0 'state' Landroidx\/vectordrawable\/graphics\/drawable\/VectorDrawableCompat$VectorDrawableCompatState;\l  \-1 \-0x001f: r4 'tint' Landroid\/content\/res\/ColorStateList;\lMETHOD_OVERRIDE: [androidx.core.graphics.drawable.TintAwareDrawable.setTintList(android.content.res.ColorStateList):void, ClspMth\{android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
}

