digraph "CFG forandroidx.vectordrawable.graphics.drawable.PathInterpolatorCompat.initPath(Landroid\/graphics\/Path;)V" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|android.graphics.PathMeasure r0 = new android.graphics.PathMeasure(r13, false)\lfloat r2 = r0.getLength()\lint r3 = java.lang.Math.min(androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat.MAX_NUM_POINTS, ((int) (r2 \/ 0.002f)) + 1)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|if (r3 \<= 0) goto L32\l}"];
Node_38 [shape=record,label="{38\:\ 0x001a|r12.f101mX = new float[r3]\lr12.f102mY = new float[r3]\lfloat[] r5 = new float[2]\lr6 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x0026|LOOP_START\lLOOP:0: B:39:0x0026\-\>B:40:0x0028\lPHI: r6 \l  PHI: (r6v1 'i' int) = (r6v0 'i' int), (r6v13 'i' int) binds: [B:38:0x001a, B:40:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r3) goto L6\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|LOOP_END\lLOOP:0: B:39:0x0026\-\>B:40:0x0028\l|float r7 = (((float) r6) * r2) \/ ((float) (r3 + (\-1)))\lr0.getPosTan(r7, r5, null)\lr12.f101mX[r6] = r5[0]\lr12.f102mY[r6] = r5[1]\lint r6 = r6 + 1\l}"];
Node_65 [shape=record,label="{65\:\ 0x0042|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0042}"];
Node_42 [shape=record,label="{42\:\ 0x0052|if ((((double) java.lang.Math.abs(r12.f101mX[0])) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r12.f101mX[0])) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L30\l}"];
Node_43 [shape=record,label="{43\:\ 0x0054}"];
Node_44 [shape=record,label="{44\:\ 0x005f|if ((((double) java.lang.Math.abs(r12.f102mY[0])) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r12.f102mY[0])) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L30\l}"];
Node_45 [shape=record,label="{45\:\ 0x0061}"];
Node_46 [shape=record,label="{46\:\ 0x0071|if ((((double) java.lang.Math.abs(r12.f101mX[r3 + (\-1)] \- 1.0f)) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r12.f101mX[r3 + (\-1)] \- 1.0f)) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L30\l}"];
Node_47 [shape=record,label="{47\:\ 0x0073}"];
Node_48 [shape=record,label="{48\:\ 0x0081|if ((((double) java.lang.Math.abs(r12.f102mY[r3 + (\-1)] \- 1.0f)) \> 1.0E\-5d ? 1 : (((double) java.lang.Math.abs(r12.f102mY[r3 + (\-1)] \- 1.0f)) == 1.0E\-5d ? 0 : \-1)) \> 0) goto L30\l}"];
Node_49 [shape=record,label="{49\:\ 0x0083|r1 = 0.0f\lr4 = 0\lr6 = 0\l}"];
Node_50 [shape=record,label="{50\:\ 0x0086|LOOP_START\lLOOP:1: B:50:0x0086\-\>B:53:0x0092\lPHI: r1 r4 r6 \l  PHI: (r1v10 'prevX' float) = (r1v9 'prevX' float), (r1v11 'prevX' float) binds: [B:49:0x0083, B:53:0x0092] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v23 'componentIndex' int) = (r4v22 'componentIndex' int), (r4v25 'componentIndex' int) binds: [B:49:0x0083, B:53:0x0092] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v9 'i' int) = (r6v8 'i' int), (r6v12 'i' int) binds: [B:49:0x0083, B:53:0x0092] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 \>= r3) goto L24\l}"];
Node_51 [shape=record,label="{51\:\ 0x0088|float[] r7 = r12.f101mX\lint r8 = r4 + 1\lr4 = r7[r4]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0090|if ((r4 \> r1 ? 1 : (r4 == r1 ? 0 : \-1)) \< 0) goto L20\l}"];
Node_53 [shape=record,label="{53\:\ 0x0092|LOOP_END\lLOOP:1: B:50:0x0086\-\>B:53:0x0092\l|r7[r6] = r4\lr1 = r4\lint r6 = r6 + 1\lr4 = r8\l}"];
Node_66 [shape=record,label="{66\:\ 0x0099|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0099|java.lang.StringBuilder r9 = new java.lang.StringBuilder()\lr9.append(\"The Path cannot loop back on itself, x :\")\lr9.append(r4)\l}"];
Node_55 [shape=record,label="{55\:\ 0x00af|throw new java.lang.IllegalArgumentException(r9.toString())\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ 0x00b0|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x00b0}"];
Node_57 [shape=record,label="{57\:\ 0x00b4|if (r0.nextContour() != false) goto L28\l}"];
Node_58 [shape=record,label="{58\:\ 0x00b6|RETURN\l|return\l}"];
Node_59 [shape=record,label="{59\:\ 0x00b7}"];
Node_60 [shape=record,label="{60\:\ 0x00be|throw new java.lang.IllegalArgumentException(\"The Path should be continuous, can't have 2+ contours\")\l}"];
Node_61 [shape=record,label="{61\:\ 0x00bf|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"The Path must start at (0,0) and end at (1,1) start: \")\lr6.append(r12.f101mX[0])\lr6.append(\",\")\lr6.append(r12.f102mY[0])\lr6.append(\" end:\")\lr6.append(r12.f101mX[r3 + (\-1)])\lr6.append(\",\")\lr6.append(r12.f102mY[r3 + (\-1)])\l}"];
Node_62 [shape=record,label="{62\:\ 0x00ff|throw new java.lang.IllegalArgumentException(r6.toString())\l}"];
Node_63 [shape=record,label="{63\:\ 0x0100|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"The Path has a invalid length \")\lr4.append(r2)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0116|throw new java.lang.IllegalArgumentException(r4.toString())\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat.initPath((r12v0 'this' androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat A[IMMUTABLE_TYPE, THIS]), (r13v0 'path' android.graphics.Path A[D('path' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0028 \-\> B:39:0x0026, BACK_EDGE: B:53:0x0092 \-\> B:50:0x0086, CROSS_EDGE: B:58:0x00b6 \-\> B:35:?, CROSS_EDGE: B:60:0x00be \-\> B:35:?, CROSS_EDGE: B:62:0x00ff \-\> B:35:?, CROSS_EDGE: B:46:0x0071 \-\> B:61:0x00bf, CROSS_EDGE: B:44:0x005f \-\> B:61:0x00bf, CROSS_EDGE: B:42:0x0052 \-\> B:61:0x00bf, CROSS_EDGE: B:64:0x0116 \-\> B:35:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_63;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_65;
Node_40 -> Node_39;
Node_65 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_61;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_61;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_61;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_61;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_67;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_66;
Node_53 -> Node_50;
Node_66 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_35;
Node_67 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_35;
Node_59 -> Node_60;
Node_60 -> Node_35;
Node_61 -> Node_62;
Node_62 -> Node_35;
Node_63 -> Node_64;
Node_64 -> Node_35;
}

