digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState.newDrawable(Landroid\/content\/res\/Resources;)Landroid\/graphics\/drawable\/Drawable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) =  androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat  (LINE:563)\l0x0002: INVOKE  (r0 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) type: DIRECT call: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.\<init\>():void A[MD:():void (m)]\l0x0005: IGET  (r1 I:android.graphics.drawable.Drawable$ConstantState) = (r3 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState.mDelegateState android.graphics.drawable.Drawable$ConstantState  (LINE:565)\l0x0007: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r1 I:android.graphics.drawable.Drawable$ConstantState)\l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources):android.graphics.drawable.Drawable (c)]\l0x000b: IPUT  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r0 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[D('drawableCompat' androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable \l0x000d: IGET  (r1 I:android.graphics.drawable.Drawable) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[D('drawableCompat' androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:566)\l0x000f: IGET  (r2 I:android.graphics.drawable.Drawable$Callback) = \l  (r0 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[D('drawableCompat' androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)])\l androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mCallback android.graphics.drawable.Drawable$Callback \l0x0011: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r2 I:android.graphics.drawable.Drawable$Callback) type: VIRTUAL call: android.graphics.drawable.Drawable.setCallback(android.graphics.drawable.Drawable$Callback):void A[MD:(android.graphics.drawable.Drawable$Callback):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|0x0014: RETURN  \l  (r0 I:android.graphics.drawable.Drawable A[D('drawableCompat' androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)])\l  (LINE:567)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState.newDrawable((r3 'this' I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0014: r0 'drawableCompat' Landroidx\/vectordrawable\/graphics\/drawable\/AnimatedVectorDrawableCompat;\l  \-1 \-0x0014: r4 'res' Landroid\/content\/res\/Resources;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

