digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.distributeKeyframes([Landroid\/animation\/Keyframe;FII)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r8 I:int A[D('endIndex' int)]) \- (r7 I:int A[D('startIndex' int)])  (LINE:806)\l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (2 int) \l0x0004: CAST (r1 I:float) = (float) (r0 I:int A[D('count' int)])  (LINE:807)\l0x0005: ARITH  (r1 I:float) = (r6 I:float A[D('gap' float)]) \/ (r1 I:float) \l0x0007: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:808)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|LOOP_START\lLOOP:0: B:10:0x0008\-\>B:11:0x000a\l|0x0008: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \> (r8 I:??[int, byte, short, char] A[D('endIndex' int)])  \-\> B:13:0x001b \l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|LOOP_END\lLOOP:0: B:10:0x0008\-\>B:11:0x000a\l|0x000a: AGET  (r3 I:??[OBJECT, ARRAY]) = \l  (r5 I:??[OBJECT, ARRAY][] A[D('keyframes' android.animation.Keyframe[])])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:809)\l0x000c: ARITH  (r4 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int) \l0x000e: AGET  (r4 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('keyframes' android.animation.Keyframe[])]), (r4 I:??[int, short, byte, char]) \l0x0010: INVOKE  (r4 I:float) = (r4 I:android.animation.Keyframe) type: VIRTUAL call: android.animation.Keyframe.getFraction():float A[MD:():float (c)]\l0x0014: ARITH  (r4 I:float) = (r4 I:float) + (r1 I:float A[D('increment' float)]) \l0x0015: INVOKE  (r3 I:android.animation.Keyframe), (r4 I:float) type: VIRTUAL call: android.animation.Keyframe.setFraction(float):void A[MD:(float):void (c)]\l0x0018: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:808)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:811)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.distributeKeyframes((r5 I:android.animation.Keyframe[] A[D('keyframes' android.animation.Keyframe[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('gap' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000a \-\> B:10:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x001b: r2 'i' I\l  0x0004\-0x001b: r0 'count' I\l  0x0007\-0x001b: r1 'increment' F\l  \-1 \-0x001b: r5 'keyframes' [Landroid\/animation\/Keyframe;\l  \-1 \-0x001b: r6 'gap' F\l  \-1 \-0x001b: r7 'startIndex' I\l  \-1 \-0x001b: r8 'endIndex' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

