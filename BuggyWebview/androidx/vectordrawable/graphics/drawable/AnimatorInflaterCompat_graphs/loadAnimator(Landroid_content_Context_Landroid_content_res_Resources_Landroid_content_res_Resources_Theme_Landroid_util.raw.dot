digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;Landroid\/util\/AttributeSet;Landroid\/animation\/ValueAnimator;FLorg\/xmlpull\/v1\/XmlPullParser;)Landroid\/animation\/ValueAnimator;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_ANIMATOR int[]  (LINE:890)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r5 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l0x0006: SGET  (r1 I:int[]) =  androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_PROPERTY_ANIMATOR int[]  (LINE:892)\l0x0008: INVOKE  (r1 I:android.content.res.TypedArray) = \l  (r5 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r1 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('anim' android.animation.ValueAnimator)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0014  (LINE:895)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: NEW_INSTANCE  (r2 I:android.animation.ValueAnimator) =  android.animation.ValueAnimator  (LINE:896)\l0x0010: INVOKE  (r2 I:android.animation.ValueAnimator) type: DIRECT call: android.animation.ValueAnimator.\<init\>():void A[MD:():void (c)]\l0x0013: MOVE  (r8 I:??[OBJECT, ARRAY] A[D('anim' android.animation.ValueAnimator)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0014|0x0014: INVOKE  \l  (r8 I:android.animation.ValueAnimator A[D('anim' android.animation.ValueAnimator)])\l  (r0 I:android.content.res.TypedArray A[D('arrayAnimator' android.content.res.TypedArray)])\l  (r1 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)])\l  (r9 I:float A[D('pathErrorScale' float)])\l  (r10 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.parseAnimatorFromTypeArray(android.animation.ValueAnimator, android.content.res.TypedArray, android.content.res.TypedArray, float, org.xmlpull.v1.XmlPullParser):void A[MD:(android.animation.ValueAnimator, android.content.res.TypedArray, android.content.res.TypedArray, float, org.xmlpull.v1.XmlPullParser):void (m)] (LINE:899)\l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"interpolator\"  (LINE:902)\l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: INVOKE  (r2 I:int) = \l  (r0 I:android.content.res.TypedArray A[D('arrayAnimator' android.content.res.TypedArray)])\l  (r10 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r3 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001e|0x001e: IF  (r2 I:??[int, byte, short, char] A[D('resID' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:20:0x0027  (LINE:904)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|0x0020: INVOKE  (r3 I:android.view.animation.Interpolator) = (r4 I:android.content.Context A[D('context' android.content.Context)]), (r2 I:int A[D('resID' int)]) type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context, int):android.view.animation.Interpolator A[MD:(android.content.Context, int):android.view.animation.Interpolator throws android.content.res.Resources$NotFoundException (m)] (LINE:905)\l0x0024: INVOKE  \l  (r8 I:android.animation.ValueAnimator A[D('anim' android.animation.ValueAnimator)])\l  (r3 I:android.animation.TimeInterpolator A[D('interpolator' android.view.animation.Interpolator)])\l type: VIRTUAL call: android.animation.ValueAnimator.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:906)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|0x0027: INVOKE  (r0 I:android.content.res.TypedArray A[D('arrayAnimator' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:909)\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('arrayObjectAnimator' android.content.res.TypedArray)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002f  (LINE:910)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|0x002c: INVOKE  (r1 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:911)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002f|RETURN\l|0x002f: RETURN  (r8 I:android.animation.ValueAnimator A[D('anim' android.animation.ValueAnimator)])  (LINE:913)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static android.animation.ValueAnimator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator((r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.animation.ValueAnimator A[D('anim' android.animation.ValueAnimator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('pathErrorScale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x002a \-\> B:23:0x002f, CROSS_EDGE: B:18:0x001e \-\> B:20:0x0027, CROSS_EDGE: B:15:0x000c \-\> B:17:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0027: r3 'interpolator' Landroid\/view\/animation\/Interpolator;\l  0x0006\-0x002f: r0 'arrayAnimator' Landroid\/content\/res\/TypedArray;\l  0x000c\-0x002f: r1 'arrayObjectAnimator' Landroid\/content\/res\/TypedArray;\l  0x001e\-0x002f: r2 'resID' I\l  \-1 \-0x002f: r4 'context' Landroid\/content\/Context;\l  \-1 \-0x002f: r5 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x002f: r6 'theme' Landroid\/content\/res\/Resources$Theme;\l  \-1 \-0x002f: r7 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x002f: r8 'anim' Landroid\/animation\/ValueAnimator;\l  \-1 \-0x002f: r9 'pathErrorScale' F\l  \-1 \-0x002f: r10 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

