digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;IF)Landroid\/animation\/Animator;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Can't load animation resource ID #0x\"  (LINE:129)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{IOException \-\> 0x0015, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}\lCatch: all \-\> 0x0013, IOException \-\> 0x0015, XmlPullParserException \-\> 0x0034\l|0x0003: INVOKE  (r2 I:android.content.res.XmlResourceParser) = (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]), (r8 I:int A[D('id' int)]) type: VIRTUAL call: android.content.res.Resources.getAnimation(int):android.content.res.XmlResourceParser A[Catch: all \-\> 0x0013, IOException \-\> 0x0015, XmlPullParserException \-\> 0x0034, MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c), TRY_ENTER] (LINE:131)\l0x0007: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('parser' android.content.res.XmlResourceParser)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  (r0 I:android.animation.Animator) = \l  (r5 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r7 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r1 I:org.xmlpull.v1.XmlPullParser A[D('parser' android.content.res.XmlResourceParser)])\l  (r9 I:float A[D('pathErrorScale' float)])\l type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.createAnimatorFromXml(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float):android.animation.Animator A[Catch: all \-\> 0x0013, IOException \-\> 0x0015, XmlPullParserException \-\> 0x0034, MD:(android.content.Context, android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser, float):android.animation.Animator throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m), TRY_LEAVE] (LINE:132)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parser' android.content.res.XmlResourceParser)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0012  (LINE:147)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: INVOKE  (r1 I:android.content.res.XmlResourceParser A[D('parser' android.content.res.XmlResourceParser)]) type: INTERFACE call: android.content.res.XmlResourceParser.close():void A[MD:():void (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|RETURN\l|0x0012: RETURN  (r0 I:android.animation.Animator A[D('animator' android.animation.Animator)])  (LINE:133)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|ExcHandler: all \-\> 0x0013\l|0x0013: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0013] (LINE:147)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0053|0x0053: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parser' android.content.res.XmlResourceParser)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0058  (LINE:147)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0055|0x0055: INVOKE  (r1 I:android.content.res.XmlResourceParser A[D('parser' android.content.res.XmlResourceParser)]) type: INTERFACE call: android.content.res.XmlResourceParser.close():void A[MD:():void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0058|0x0058: THROW  (r0 I:java.lang.Throwable)  (LINE:148)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|ExcHandler: IOException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0015] (LINE:140)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|0x0016: NEW_INSTANCE  (r3 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException A[Catch: all \-\> 0x0013, TRY_ENTER] (LINE:141)\l0x0018: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x0013]\l0x001a: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x0013, MD:():void (c)]\l0x001d: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0013, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r0 I:java.lang.String) = (r8 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[Catch: all \-\> 0x0013, MD:(int):java.lang.String (c)] (LINE:143)\l0x0024: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0013, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0027: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x0013, MD:():java.lang.String (c)]\l0x002b: INVOKE  (r3 I:android.content.res.Resources$NotFoundException), (r0 I:java.lang.String) type: DIRECT call: android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0013, MD:(java.lang.String):void (c)]\l0x002e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x002f: INVOKE  \l  (r0 I:android.content.res.Resources$NotFoundException A[D('rnf' android.content.res.Resources$NotFoundException)])\l  (r2 I:java.lang.Throwable A[D('ex' java.io.IOException)])\l type: VIRTUAL call: android.content.res.Resources.NotFoundException.initCause(java.lang.Throwable):java.lang.Throwable A[Catch: all \-\> 0x0013, MD:(java.lang.Throwable):java.lang.Throwable (s)] (LINE:144)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|TryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|0x0033: THROW  (r0 I:java.lang.Throwable A[D('rnf' android.content.res.Resources$NotFoundException)]) A[Catch: all \-\> 0x0013]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0034|ExcHandler: XmlPullParserException \-\> 0x0034\l|0x0034: MOVE_EXCEPTION  (r2 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x0034] (LINE:134)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|TryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|0x0035: NEW_INSTANCE  (r3 I:android.content.res.Resources$NotFoundException) =  android.content.res.Resources$NotFoundException A[Catch: all \-\> 0x0013] (LINE:135)\l0x0037: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x0013]\l0x0039: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x0013, MD:():void (c)]\l0x003c: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0013, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003f: INVOKE  (r0 I:java.lang.String) = (r8 I:int A[D('id' int)]) type: STATIC call: java.lang.Integer.toHexString(int):java.lang.String A[Catch: all \-\> 0x0013, MD:(int):java.lang.String (c)] (LINE:137)\l0x0043: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0013, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0046: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x0013, MD:():java.lang.String (c)]\l0x004a: INVOKE  (r3 I:android.content.res.Resources$NotFoundException), (r0 I:java.lang.String) type: DIRECT call: android.content.res.Resources.NotFoundException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0013, MD:(java.lang.String):void (c)]\l0x004d: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x004e: INVOKE  \l  (r0 I:android.content.res.Resources$NotFoundException A[D('rnf' android.content.res.Resources$NotFoundException)])\l  (r2 I:java.lang.Throwable A[D('ex' org.xmlpull.v1.XmlPullParserException)])\l type: VIRTUAL call: android.content.res.Resources.NotFoundException.initCause(java.lang.Throwable):java.lang.Throwable A[Catch: all \-\> 0x0013, MD:(java.lang.Throwable):java.lang.Throwable (s)] (LINE:138)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0052|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|0x0052: THROW  (r0 I:java.lang.Throwable A[D('rnf' android.content.res.Resources$NotFoundException)]) A[Catch: all \-\> 0x0013, TRY_LEAVE]\l}"];
MethodNode[shape=record,label="{public static android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator((r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('pathErrorScale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000d \-\> B:26:0x0012, CROSS_EDGE: B:31:0x0033 \-\> B:21:?, CROSS_EDGE: B:37:0x0058 \-\> B:21:?, CROSS_EDGE: B:35:0x0053 \-\> B:37:0x0058, CROSS_EDGE: B:34:0x0052 \-\> B:21:?, CROSS_EDGE: B:38:0x0003 \-\> B:27:0x0013, CROSS_EDGE: B:38:0x0003 \-\> B:29:0x0015, CROSS_EDGE: B:38:0x0003 \-\> B:32:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0013: r0 'animator' Landroid\/animation\/Animator;\l  0x0003\-0x0033: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  \-1 \-0x0033: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x0033: r6 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x0033: r7 'theme' Landroid\/content\/res\/Resources$Theme;\l  \-1 \-0x0033: r8 'id' I\l  \-1 \-0x0033: r9 'pathErrorScale' F\l  0x002f\-0x0034: r0 'rnf' Landroid\/content\/res\/Resources$NotFoundException;\l  0x0016\-0x0034: r2 'ex' Ljava\/io\/IOException;\l  0x0034\-0x0052: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  0x0034\-0x0052: r5 'context' Landroid\/content\/Context;\l  0x0034\-0x0052: r6 'resources' Landroid\/content\/res\/Resources;\l  0x0034\-0x0052: r7 'theme' Landroid\/content\/res\/Resources$Theme;\l  0x0034\-0x0052: r8 'id' I\l  0x0034\-0x0052: r9 'pathErrorScale' F\l  0x004e\-0x0053: r0 'rnf' Landroid\/content\/res\/Resources$NotFoundException;\l  0x0035\-0x0053: r2 'ex' Lorg\/xmlpull\/v1\/XmlPullParserException;\l  0x0053\-0x0058: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  0x0053\-0x0058: r5 'context' Landroid\/content\/Context;\l  0x0053\-0x0058: r6 'resources' Landroid\/content\/res\/Resources;\l  0x0053\-0x0058: r7 'theme' Landroid\/content\/res\/Resources$Theme;\l  0x0053\-0x0058: r8 'id' I\l  0x0053\-0x0058: r9 'pathErrorScale' F\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}, TryCatch #1 \{IOException \-\> 0x0015, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}, TryCatch #2 \{XmlPullParserException \-\> 0x0034, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_38;
Node_38 -> Node_23;
Node_38 -> Node_27;
Node_38 -> Node_29;
Node_38 -> Node_32;
Node_23 -> Node_24;
Node_23 -> Node_39;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_21;
Node_39 -> Node_29;
Node_39 -> Node_27;
Node_39 -> Node_32;
Node_27 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
}

