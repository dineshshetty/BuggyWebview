digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupPathMotion(Landroid\/graphics\/Path;Landroid\/animation\/ObjectAnimator;FLjava\/lang\/String;Ljava\/lang\/String;)V" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('path' android.graphics.Path)])  (LINE:436)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('oa' android.animation.ObjectAnimator)]) \l0x0004: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r23 I:??[OBJECT, ARRAY] A[D('propertyXName' java.lang.String)]) \l0x0006: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r24 I:??[OBJECT, ARRAY] A[D('propertyYName' java.lang.String)]) \l0x0008: NEW_INSTANCE  (r4 I:android.graphics.PathMeasure) =  android.graphics.PathMeasure \l0x000a: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r4 I:android.graphics.PathMeasure), (r0 I:android.graphics.Path), (r5 I:boolean) type: DIRECT call: android.graphics.PathMeasure.\<init\>(android.graphics.Path, boolean):void A[MD:(android.graphics.Path, boolean):void (c)]\l0x000e: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:437)\l0x000f: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:440)\l0x0011: INVOKE  (r7 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0014: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:441)\l0x0015: INVOKE  (r8 I:java.lang.Float) = (r8 I:float) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)]\l0x0019: INVOKE  (r7 I:java.util.ArrayList A[D('contourLengths' java.util.ArrayList\<java.lang.Float\>)]), (r8 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001c|LOOP_START\lLOOP:0: B:36:0x001c\-\>B:58:0x00c7\l|0x001c: INVOKE  (r8 I:float) = (r4 I:android.graphics.PathMeasure A[D('measureForTotalLength' android.graphics.PathMeasure)]) type: VIRTUAL call: android.graphics.PathMeasure.getLength():float A[MD:():float (c)] (LINE:443)\l0x0020: ARITH  (r6 I:float) = (r6 I:float A[D('totalLength' float)]) + (r8 I:float A[D('pathLength' float)])  (LINE:444)\l0x0021: INVOKE  (r9 I:java.lang.Float) = (r6 I:float A[D('totalLength' float)]) type: STATIC call: java.lang.Float.valueOf(float):java.lang.Float A[MD:(float):java.lang.Float (c)] (LINE:445)\l0x0025: INVOKE  (r7 I:java.util.ArrayList A[D('contourLengths' java.util.ArrayList\<java.lang.Float\>)]), (r9 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0028: INVOKE  (r8 I:boolean) = (r4 I:android.graphics.PathMeasure A[D('measureForTotalLength' android.graphics.PathMeasure)]) type: VIRTUAL call: android.graphics.PathMeasure.nextContour():boolean A[MD:():boolean (c)] (LINE:447)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|0x002c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x00c7 \l}"];
Node_58 [shape=record,label="{58\:\ 0x00c7|LOOP_END\lLOOP:0: B:36:0x001c\-\>B:58:0x00c7\l|0x00c7: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:447)\l0x00c9: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00ca: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('path' android.graphics.Path)]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x002e|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|0x002e: NEW_INSTANCE  (r8 I:android.graphics.PathMeasure) =  android.graphics.PathMeasure  (LINE:450)\l0x0030: INVOKE  (r8 I:android.graphics.PathMeasure), (r0 I:android.graphics.Path), (r5 I:boolean) type: DIRECT call: android.graphics.PathMeasure.\<init\>(android.graphics.Path, boolean):void A[MD:(android.graphics.Path, boolean):void (c)]\l0x0033: CONST  (r9 I:??[int, float, short, byte, char]) = (100 ??[int, float, short, byte, char])  (LINE:452)\l0x0035: ARITH  (r10 I:float) = (r6 I:float A[D('totalLength' float)]) \/ (r22 I:float A[D('precision' float)]) \l0x0037: CAST (r10 I:int) = (int) (r10 I:float) \l0x0038: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0039: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l0x003a: INVOKE  (r9 I:int) = (r9 I:int), (r10 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x003e: NEW_ARRAY  (r10 I:float[]) = (r9 I:int A[D('numPoints' int), IMMUTABLE_TYPE]) type: float[]  (LINE:454)\l0x0040: NEW_ARRAY  (r12 I:float[]) = (r9 I:int A[D('numPoints' int), IMMUTABLE_TYPE]) type: float[]  (LINE:455)\l0x0042: CONST  (r13 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:456)\l0x0043: NEW_ARRAY  (r14 I:float[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0045: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:458)\l0x0046: ARITH  (r13 I:int) = (r9 I:int A[D('numPoints' int)]) + (\-1 int)  (LINE:459)\l0x0048: CAST (r13 I:float) = (float) (r13 I:int) \l0x0049: ARITH  (r13 I:float) = (r6 I:float A[D('totalLength' float)]) \/ (r13 I:float) \l0x004b: CONST  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:460)\l0x004d: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:465)\l0x004f: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0051|LOOP_START\lLOOP:1: B:39:0x0051\-\>B:45:0x008c\l|0x0051: IF  (r11 I:??[int, byte, short, char] A[D('i' int)]) \>= (r9 I:??[int, byte, short, char] A[D('numPoints' int)])  \-\> B:60:0x0092 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0053|0x0053: INVOKE  (r19 I:java.lang.Object) = \l  (r7 I:java.util.ArrayList A[D('contourLengths' java.util.ArrayList\<java.lang.Float\>)])\l  (r15 I:int A[D('contourIndex' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:466)\l0x0057: CHECK_CAST (r19 I:java.lang.Float) = (java.lang.Float) (r19 I:??[OBJECT, ARRAY]) \l0x0059: INVOKE  (r19 I:float) = (r19 I:java.lang.Float) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x005d: ARITH  (r5 I:float) = (r17 I:float A[D('currentDistance' float)]) \- (r19 I:float) \l0x005f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0060: INVOKE  \l  (r8 I:android.graphics.PathMeasure A[D('pathMeasure' android.graphics.PathMeasure)])\l  (r5 I:float)\l  (r14 I:float[] A[D('position' float[])])\l  (r0 I:float[])\l type: VIRTUAL call: android.graphics.PathMeasure.getPosTan(float, float[], float[]):boolean A[MD:(float, float[], float[]):boolean (c)]\l0x0063: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:469)\l0x0064: AGET  (r5 I:??[int, float, short, byte, char]) = (r14 I:??[int, float][] A[D('position' float[])]), (r0 I:??[int, short, byte, char]) \l0x0066: APUT  \l  (r10 I:??[int, float][] A[D('mX' float[])])\l  (r11 I:??[int, short, byte, char] A[D('i' int)])\l  (r5 I:??[int, float, short, byte, char])\l \l0x0068: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:470)\l0x0069: AGET  (r5 I:??[int, float, short, byte, char]) = (r14 I:??[int, float][] A[D('position' float[])]), (r0 I:??[int, short, byte, char]) \l0x006b: APUT  \l  (r12 I:??[int, float][] A[D('mY' float[])])\l  (r11 I:??[int, short, byte, char] A[D('i' int)])\l  (r5 I:??[int, float, short, byte, char])\l \l0x006d: ARITH  (r17 I:float) = (r17 I:float A[D('currentDistance' float)]) + (r13 I:float A[D('step' float)])  (LINE:471)\l0x006f: ARITH  (r0 I:int) = (r15 I:int A[D('contourIndex' int)]) + (1 int)  (LINE:472)\l0x0071: INVOKE  (r5 I:int) = (r7 I:java.util.ArrayList A[D('contourLengths' java.util.ArrayList\<java.lang.Float\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0075|0x0075: IF  (r0 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:62:0x008c \l}"];
Node_42 [shape=record,label="{42\:\ 0x0077|0x0077: ARITH  (r0 I:int) = (r15 I:int A[D('contourIndex' int)]) + (1 int) \l0x0079: INVOKE  (r0 I:java.lang.Object) = (r7 I:java.util.ArrayList A[D('contourLengths' java.util.ArrayList\<java.lang.Float\>)]), (r0 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:473)\l0x007d: CHECK_CAST (r0 I:java.lang.Float) = (java.lang.Float) (r0 I:??[OBJECT, ARRAY]) \l0x007f: INVOKE  (r0 I:float) = (r0 I:java.lang.Float) type: VIRTUAL call: java.lang.Float.floatValue():float A[MD:():float (c)]\l0x0083: CMP_L  (r0 I:int) = (r17 I:float A[D('currentDistance' float)]), (r0 I:float) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0085|0x0085: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:63:0x008c \l}"];
Node_44 [shape=record,label="{44\:\ 0x0087|0x0087: ARITH  (r15 I:int) = (r15 I:int A[D('contourIndex' int)]) + (1 int)  (LINE:474)\l0x0089: INVOKE  (r8 I:android.graphics.PathMeasure A[D('pathMeasure' android.graphics.PathMeasure)]) type: VIRTUAL call: android.graphics.PathMeasure.nextContour():boolean A[MD:():boolean (c)] (LINE:475)\l}"];
Node_61 [shape=record,label="{61\:\ 0x008c|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x008c|LOOP_END\lLOOP:1: B:39:0x0051\-\>B:45:0x008c\l|0x008c: ARITH  (r11 I:int) = (r11 I:int A[D('i' int)]) + (1 int)  (LINE:465)\l0x008e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x008f: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('path' android.graphics.Path)]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x008c|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x008c|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ 0x0092|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0092|0x0092: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:480)\l0x0093: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:481)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0094|0x0094: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x009a  (LINE:482)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0096|0x0096: INVOKE  (r0 I:android.animation.PropertyValuesHolder A[D('x' android.animation.PropertyValuesHolder)]) = (r2 I:java.lang.String), (r10 I:float[] A[D('mX' float[])]) type: STATIC call: android.animation.PropertyValuesHolder.ofFloat(java.lang.String, float[]):android.animation.PropertyValuesHolder A[MD:(java.lang.String, float[]):android.animation.PropertyValuesHolder VARARG (c)] (LINE:483)\l}"];
Node_49 [shape=record,label="{49\:\ 0x009a|0x009a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00a0  (LINE:485)\l}"];
Node_50 [shape=record,label="{50\:\ 0x009c|0x009c: INVOKE  (r5 I:android.animation.PropertyValuesHolder A[D('y' android.animation.PropertyValuesHolder)]) = (r3 I:java.lang.String), (r12 I:float[] A[D('mY' float[])]) type: STATIC call: android.animation.PropertyValuesHolder.ofFloat(java.lang.String, float[]):android.animation.PropertyValuesHolder A[MD:(java.lang.String, float[]):android.animation.PropertyValuesHolder VARARG (c)] (LINE:486)\l}"];
Node_51 [shape=record,label="{51\:\ 0x00a0|0x00a0: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('x' android.animation.PropertyValuesHolder)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00ad  (LINE:488)\l}"];
Node_52 [shape=record,label="{52\:\ 0x00a2|0x00a2: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:489)\l0x00a3: NEW_ARRAY  (r11 I:android.animation.PropertyValuesHolder[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: android.animation.PropertyValuesHolder[] \l0x00a5: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a7: APUT  \l  (r11 I:??[OBJECT, ARRAY][])\l  (r18 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('y' android.animation.PropertyValuesHolder)])\l \l0x00a9: INVOKE  (r1 I:android.animation.ObjectAnimator), (r11 I:android.animation.PropertyValuesHolder[]) type: VIRTUAL call: android.animation.ObjectAnimator.setValues(android.animation.PropertyValuesHolder[]):void A[MD:(android.animation.PropertyValuesHolder[]):void VARARG (c)]\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x00c6: RETURN   A[SYNTHETIC] (LINE:495)\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x00ad|0x00ad: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:490)\l0x00ae: CONST  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00b0|0x00b0: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('y' android.animation.PropertyValuesHolder)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00ba \l}"];
Node_55 [shape=record,label="{55\:\ 0x00b2|0x00b2: NEW_ARRAY  (r11 I:android.animation.PropertyValuesHolder[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: android.animation.PropertyValuesHolder[]  (LINE:491)\l0x00b4: APUT  \l  (r11 I:??[OBJECT, ARRAY][])\l  (r18 I:??[int, short, byte, char])\l  (r0 I:??[OBJECT, ARRAY] A[D('x' android.animation.PropertyValuesHolder)])\l \l0x00b6: INVOKE  (r1 I:android.animation.ObjectAnimator), (r11 I:android.animation.PropertyValuesHolder[]) type: VIRTUAL call: android.animation.ObjectAnimator.setValues(android.animation.PropertyValuesHolder[]):void A[MD:(android.animation.PropertyValuesHolder[]):void VARARG (c)]\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x00c6: RETURN   A[SYNTHETIC] (LINE:495)\l}"];
Node_56 [shape=record,label="{56\:\ 0x00ba|0x00ba: CONST  (r11 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:493)\l0x00bb: NEW_ARRAY  (r11 I:android.animation.PropertyValuesHolder[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: android.animation.PropertyValuesHolder[] \l0x00bd: APUT  \l  (r11 I:??[OBJECT, ARRAY][])\l  (r18 I:??[int, short, byte, char])\l  (r0 I:??[OBJECT, ARRAY] A[D('x' android.animation.PropertyValuesHolder)])\l \l0x00bf: CONST  (r16 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x00c1: APUT  \l  (r11 I:??[OBJECT, ARRAY][])\l  (r16 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('y' android.animation.PropertyValuesHolder)])\l \l0x00c3: INVOKE  (r1 I:android.animation.ObjectAnimator), (r11 I:android.animation.PropertyValuesHolder[]) type: VIRTUAL call: android.animation.ObjectAnimator.setValues(android.animation.PropertyValuesHolder[]):void A[MD:(android.animation.PropertyValuesHolder[]):void VARARG (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00c6|RETURN\lORIG_RETURN\l|0x00c6: RETURN    (LINE:495)\l}"];
MethodNode[shape=record,label="{private static void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupPathMotion((r20 I:android.graphics.Path A[D('path' android.graphics.Path), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:android.animation.ObjectAnimator A[D('oa' android.animation.ObjectAnimator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:float A[D('precision' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:java.lang.String A[D('propertyXName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:java.lang.String A[D('propertyYName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:45:0x008c \-\> B:39:0x0051, CROSS_EDGE: B:43:0x0085 \-\> B:45:0x008c, CROSS_EDGE: B:41:0x0075 \-\> B:45:0x008c, CROSS_EDGE: B:55:0x00b2 \-\> B:57:0x00c6, CROSS_EDGE: B:56:0x00ba \-\> B:57:0x00c6, CROSS_EDGE: B:49:0x009a \-\> B:51:0x00a0, CROSS_EDGE: B:47:0x0094 \-\> B:49:0x009a, BACK_EDGE: B:58:0x00c7 \-\> B:36:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0028: r8 'pathLength' F\l  0x0051\-0x0092: r11 'i' I\l  0x0093\-0x00c7: r0 'x' Landroid\/animation\/PropertyValuesHolder;\l  0x0094\-0x00c7: r5 'y' Landroid\/animation\/PropertyValuesHolder;\l  0x0033\-0x00c7: r8 'pathMeasure' Landroid\/graphics\/PathMeasure;\l  0x003e\-0x00c7: r9 'numPoints' I\l  0x0040\-0x00c7: r10 'mX' [F\l  0x0042\-0x00c7: r12 'mY' [F\l  0x004b\-0x00c7: r13 'step' F\l  0x0045\-0x00c7: r14 'position' [F\l  0x0046\-0x00c7: r15 'contourIndex' I\l  0x004d\-0x00c7: r17 'currentDistance' F\l  0x000e\-0x00cd: r4 'measureForTotalLength' Landroid\/graphics\/PathMeasure;\l  0x000f\-0x00cd: r6 'totalLength' F\l  0x0014\-0x00cd: r7 'contourLengths' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Float;\>;\l  \-1 \-0x00cd: r20 'path' Landroid\/graphics\/Path;\l  \-1 \-0x00cd: r21 'oa' Landroid\/animation\/ObjectAnimator;\l  \-1 \-0x00cd: r22 'precision' F\l  \-1 \-0x00cd: r23 'propertyXName' Ljava\/lang\/String;\l  \-1 \-0x00cd: r24 'propertyYName' Ljava\/lang\/String;\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_58;
Node_37 -> Node_59[style=dashed];
Node_58 -> Node_36;
Node_59 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_60;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_62;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_63;
Node_44 -> Node_61;
Node_61 -> Node_45;
Node_45 -> Node_39;
Node_63 -> Node_45;
Node_62 -> Node_45;
Node_60 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_64;
Node_64 -> Node_34;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_65;
Node_65 -> Node_34;
Node_56 -> Node_57;
Node_57 -> Node_34;
}

