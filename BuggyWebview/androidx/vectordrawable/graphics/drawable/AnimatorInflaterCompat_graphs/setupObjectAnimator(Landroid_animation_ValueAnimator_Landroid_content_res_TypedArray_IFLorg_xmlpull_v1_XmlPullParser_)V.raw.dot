digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator(Landroid\/animation\/ValueAnimator;Landroid\/content\/res\/TypedArray;IFLorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('anim' android.animation.ValueAnimator)])  (LINE:390)\l0x0001: CHECK_CAST (r0 I:android.animation.ObjectAnimator) = (android.animation.ObjectAnimator) (r0 I:??[OBJECT, ARRAY]) \l0x0003: CONST_STR  (r1 I:java.lang.String) =  \"pathData\"  (LINE:391)\l0x0005: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0006: INVOKE  (r1 I:java.lang.String) = \l  (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)])\l  (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pathData' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x004c  (LINE:402)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: CONST_STR  (r2 I:java.lang.String) =  \"propertyXName\"  (LINE:403)\l0x000e: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000f: INVOKE  (r2 I:java.lang.String) = \l  (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)])\l  (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l  (r3 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String (m)]\l0x0013: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:405)\l0x0014: CONST_STR  (r5 I:java.lang.String) =  \"propertyYName\" \l0x0016: INVOKE  (r4 I:java.lang.String) = \l  (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)])\l  (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r5 I:java.lang.String)\l  (r4 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('valueType' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001f  (LINE:409)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('valueType' int)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0020 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('propertyXName' java.lang.String)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040  (LINE:414)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('propertyYName' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0025 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: NEW_INSTANCE  (r3 I:android.view.InflateException) =  android.view.InflateException  (LINE:415)\l0x0027: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x002c: INVOKE  (r6 I:java.lang.String) = (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.getPositionDescription():java.lang.String A[MD:():java.lang.String (c)]\l0x0030: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: CONST_STR  (r6 I:java.lang.String) =  \" propertyXName or propertyYName is needed for PathData\" \l0x0035: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003c: INVOKE  (r3 I:android.view.InflateException), (r5 I:java.lang.String) type: DIRECT call: android.view.InflateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x003f|0x003f: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|0x0040: INVOKE  (r3 I:android.graphics.Path) = (r1 I:java.lang.String A[D('pathData' java.lang.String)]) type: STATIC call: androidx.core.graphics.PathParser.createPathFromPathData(java.lang.String):android.graphics.Path A[MD:(java.lang.String):android.graphics.Path (m)] (LINE:418)\l0x0044: CONST  (r5 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char])  (LINE:419)\l0x0046: ARITH  (r5 I:float) = (r5 I:float) * (r10 I:float A[D('pixelSize' float)]) \l0x0048: INVOKE  \l  (r3 I:android.graphics.Path A[D('path' android.graphics.Path)])\l  (r0 I:android.animation.ObjectAnimator A[D('oa' android.animation.ObjectAnimator)])\l  (r5 I:float)\l  (r2 I:java.lang.String A[D('propertyXName' java.lang.String)])\l  (r4 I:java.lang.String A[D('propertyYName' java.lang.String)])\l type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupPathMotion(android.graphics.Path, android.animation.ObjectAnimator, float, java.lang.String, java.lang.String):void A[MD:(android.graphics.Path, android.animation.ObjectAnimator, float, java.lang.String, java.lang.String):void (m)]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0056: RETURN   A[SYNTHETIC] (LINE:429)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('valueType' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:412)\l}"];
Node_33 [shape=record,label="{33\:\ 0x004c|0x004c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:422)\l0x004d: CONST_STR  (r3 I:java.lang.String) =  \"propertyName\"  (LINE:423)\l0x004f: INVOKE  (r2 I:java.lang.String) = \l  (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray)])\l  (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l  (r2 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedString(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):java.lang.String (m)]\l0x0053: INVOKE  \l  (r0 I:android.animation.ObjectAnimator A[D('oa' android.animation.ObjectAnimator)])\l  (r2 I:java.lang.String A[D('propertyName' java.lang.String)])\l type: VIRTUAL call: android.animation.ObjectAnimator.setPropertyName(java.lang.String):void A[MD:(java.lang.String):void (c)] (LINE:425)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0056|RETURN\lORIG_RETURN\l|0x0056: RETURN    (LINE:429)\l}"];
MethodNode[shape=record,label="{private static void androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.setupObjectAnimator((r7 I:android.animation.ValueAnimator A[D('anim' android.animation.ValueAnimator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.content.res.TypedArray A[D('arrayObjectAnimator' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('valueType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[D('pixelSize' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0056 \-\> B:19:?, CROSS_EDGE: B:27:0x0020 \-\> B:32:0x0040, CROSS_EDGE: B:25:0x001d \-\> B:27:0x0020, CROSS_EDGE: B:23:0x001a \-\> B:26:0x001f, CROSS_EDGE: B:33:0x004c \-\> B:34:0x0056\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x004b: r2 'propertyXName' Ljava\/lang\/String;\l  0x0044\-0x004b: r3 'path' Landroid\/graphics\/Path;\l  0x001a\-0x004b: r4 'propertyYName' Ljava\/lang\/String;\l  0x0053\-0x0056: r2 'propertyName' Ljava\/lang\/String;\l  0x0003\-0x0056: r0 'oa' Landroid\/animation\/ObjectAnimator;\l  0x000a\-0x0056: r1 'pathData' Ljava\/lang\/String;\l  \-1 \-0x0056: r7 'anim' Landroid\/animation\/ValueAnimator;\l  \-1 \-0x0056: r8 'arrayObjectAnimator' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x0056: r9 'valueType' I\l  \-1 \-0x0056: r10 'pixelSize' F\l  \-1 \-0x0056: r11 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_30;
Node_28 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_35;
Node_35 -> Node_19;
Node_26 -> Node_27;
Node_33 -> Node_34;
Node_34 -> Node_19;
}

