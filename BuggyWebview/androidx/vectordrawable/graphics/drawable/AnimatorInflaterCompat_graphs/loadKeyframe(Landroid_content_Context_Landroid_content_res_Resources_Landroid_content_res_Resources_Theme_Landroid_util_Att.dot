digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;Landroid\/util\/AttributeSet;ILorg\/xmlpull\/v1\/XmlPullParser;)Landroid\/animation\/Keyframe;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|android.content.res.TypedArray r0 = androidx.core.content.res.TypedArrayUtils.obtainAttributes(r10, r11, r12, androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_KEYFRAME)\lr1 = null\lfloat r2 = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r0, r14, \"fraction\", 3, \-1.0f)\landroid.util.TypedValue r5 = androidx.core.content.res.TypedArrayUtils.peekNamedValue(r0, r14, \"value\", 0)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|if (r5 == null) goto L25\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|r7 = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|PHI: r7 \l  PHI: (r7v1 'hasValue' boolean) = (r7v0 'hasValue' boolean), (r7v2 'hasValue' boolean) binds: [B:33:0x001c, B:32:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|if (r13 != 4) goto L11\l}"];
Node_36 [shape=record,label="{36\:\ 0x0020|if (r7 == false) goto L10\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022}"];
Node_38 [shape=record,label="{38\:\ 0x0028|if (isColorType(r5.type) == false) goto L10\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|r13 = 3\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|r13 = 0\l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|PHI: r13 \l  PHI: (r13v1 'valueType' int) = (r13v0 'valueType' int), (r13v2 'valueType' int), (r13v3 'valueType' int) binds: [B:35:0x001e, B:40:0x002c, B:39:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == false) goto L21\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|switch(r13) \{\l    case 0: goto L14;\l    case 1: goto L13;\l    case 2: goto L15;\l    case 3: goto L13;\l    default: goto L15;\l\}\l}"];
Node_44 [shape=record,label="{44\:\ 0x0033|int r3 = androidx.core.content.res.TypedArrayUtils.getNamedInt(r0, r14, \"value\", 0, 0)\landroid.animation.Keyframe r1 = android.animation.Keyframe.ofInt(r2, r3)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|float r3 = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r0, r14, \"value\", 0, 0.0f)\landroid.animation.Keyframe r1 = android.animation.Keyframe.ofFloat(r2, r3)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0053|PHI: r1 \l  PHI: (r1v2 'keyframe' android.animation.Keyframe) = (r1v1 'keyframe' android.animation.Keyframe), (r1v0 'keyframe' android.animation.Keyframe), (r1v3 'keyframe' android.animation.Keyframe), (r1v4 'keyframe' android.animation.Keyframe) binds: [B:50:0x0052, B:42:0x002f, B:45:0x003c, B:44:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = androidx.core.content.res.TypedArrayUtils.getNamedResourceId(r0, r14, \"interpolator\", 1, 0)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0059|if (r3 \<= 0) goto L18\l}"];
Node_53 [shape=record,label="{53\:\ 0x005b|android.view.animation.Interpolator r4 = androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat.loadInterpolator(r9, r3)\lr1.setInterpolator(r4)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0062|r0.recycle()\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|RETURN\l|return r1\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0047|if (r13 != 0) goto L24\l}"];
Node_48 [shape=record,label="{48\:\ 0x0049|android.animation.Keyframe r3 = android.animation.Keyframe.ofFloat(r2)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0052|PHI: r3 \l  PHI: (r3v3 android.animation.Keyframe) = (r3v2 android.animation.Keyframe), (r3v4 android.animation.Keyframe) binds: [B:49:0x004e, B:48:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r3\l}"];
Node_49 [shape=record,label="{49\:\ 0x004e|android.animation.Keyframe r3 = android.animation.Keyframe.ofInt(r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|r7 = false\l}"];
MethodNode[shape=record,label="{private static android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe((r9v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'res' android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'valueType' int A[D('valueType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0059 \-\> B:54:0x0062, CROSS_EDGE: B:45:0x003c \-\> B:51:0x0053, CROSS_EDGE: B:42:0x002f \-\> B:51:0x0053, CROSS_EDGE: B:50:0x0052 \-\> B:51:0x0053, CROSS_EDGE: B:49:0x004e \-\> B:50:0x0052, CROSS_EDGE: B:40:0x002c \-\> B:41:0x002d, CROSS_EDGE: B:36:0x0020 \-\> B:40:0x002c, CROSS_EDGE: B:35:0x001e \-\> B:41:0x002d, CROSS_EDGE: B:33:0x001c \-\> B:34:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_44;
Node_42 -> Node_45;
Node_42 -> Node_51;
Node_44 -> Node_51;
Node_45 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_29;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_49 -> Node_50;
Node_33 -> Node_34;
}

