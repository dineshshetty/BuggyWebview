digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe(Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;Landroid\/util\/AttributeSet;Lorg\/xmlpull\/v1\/XmlPullParser;)I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_KEYFRAME int[]  (LINE:636)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"value\"  (LINE:639)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:android.util.TypedValue) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r7 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):android.util.TypedValue A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):android.util.TypedValue (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('keyframeValue' android.util.TypedValue)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0010  (LINE:641)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|0x0010: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasValue' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c  (LINE:644)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IGET  (r3 I:int) = (r1 I:android.util.TypedValue A[D('keyframeValue' android.util.TypedValue)]) android.util.TypedValue.type int \l0x0014: INVOKE  (r3 I:boolean) = (r3 I:int) type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.isColorType(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c \l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:645)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:649)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|RETURN\l|0x0020: RETURN  (r3 I:int A[D('valueType' int)])  (LINE:650)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('valueType' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:647)\l}"];
MethodNode[shape=record,label="{private static int androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.inferValueTypeOfKeyframe((r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001c \-\> B:22:0x001d, CROSS_EDGE: B:17:0x0010 \-\> B:21:0x001c, CROSS_EDGE: B:15:0x000d \-\> B:17:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x001c: r3 'valueType' I\l  0x0006\-0x0020: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x000d\-0x0020: r1 'keyframeValue' Landroid\/util\/TypedValue;\l  0x0010\-0x0020: r2 'hasValue' Z\l  0x001d\-0x0020: r3 'valueType' I\l  \-1 \-0x0020: r4 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0020: r5 'theme' Landroid\/content\/res\/Resources$Theme;\l  \-1 \-0x0020: r6 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0020: r7 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
}

