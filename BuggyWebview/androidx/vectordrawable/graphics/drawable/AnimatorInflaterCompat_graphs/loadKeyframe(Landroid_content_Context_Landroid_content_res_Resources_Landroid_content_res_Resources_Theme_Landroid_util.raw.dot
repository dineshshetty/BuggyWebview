digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;Landroid\/util\/AttributeSet;ILorg\/xmlpull\/v1\/XmlPullParser;)Landroid\/animation\/Keyframe;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_KEYFRAME int[]  (LINE:818)\l0x0002: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r10 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l  (r11 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l  (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.obtainAttributes(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.content.res.Resources, android.content.res.Resources$Theme, android.util.AttributeSet, int[]):android.content.res.TypedArray (m)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:821)\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"fraction\"  (LINE:823)\l0x0009: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x000a: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char]) \l0x000c: INVOKE  (r2 I:float) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:float)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float (m)]\l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"value\"  (LINE:826)\l0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r5 I:android.util.TypedValue) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l  (r4 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.peekNamedValue(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):android.util.TypedValue A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int):android.util.TypedValue (m)]\l0x0017: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:828)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('keyframeValue' android.util.TypedValue)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x001c \l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|0x001a: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|0x001d: CONST  (r8 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:829)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|0x001e: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('valueType' int)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x002d \l}"];
Node_36 [shape=record,label="{36\:\ 0x0020|0x0020: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasValue' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002c  (LINE:832)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|0x0022: IGET  (r8 I:int) = (r5 I:android.util.TypedValue A[D('keyframeValue' android.util.TypedValue)]) android.util.TypedValue.type int \l0x0024: INVOKE  (r8 I:boolean) = (r8 I:int) type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.isColorType(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|0x0028: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002c \l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|0x002a: CONST  (r13 I:??[int, float, short, byte, char] A[D('valueType' int)]) = (3 ??[int, float, short, byte, char])  (LINE:833)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|0x002c: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('valueType' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:835)\l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|0x002d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasValue' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0047  (LINE:839)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|0x002f: SWITCH  (r13 I:?? A[D('valueType' int)])\l case 0: goto B:45:0x003c\l case 1: goto B:44:0x0033\l case 2: goto B:51:0x0053\l case 3: goto B:44:0x0033\l default: goto B:51:0x0053  (LINE:840)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0033|0x0033: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r4 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int (m)] (LINE:848)\l0x0037: INVOKE  (r1 I:android.animation.Keyframe A[D('keyframe' android.animation.Keyframe)]) = (r2 I:float A[D('fraction' float)]), (r3 I:int A[D('intValue' int)]) type: STATIC call: android.animation.Keyframe.ofInt(float, int):android.animation.Keyframe A[MD:(float, int):android.animation.Keyframe (c)] (LINE:850)\l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|0x003c: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:842)\l0x003d: INVOKE  (r3 I:float) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r8 I:float)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedFloat(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, float):float (m)]\l0x0041: INVOKE  (r1 I:android.animation.Keyframe A[D('keyframe' android.animation.Keyframe)]) = (r2 I:float A[D('fraction' float)]), (r3 I:float A[D('value' float)]) type: STATIC call: android.animation.Keyframe.ofFloat(float, float):android.animation.Keyframe A[MD:(float, float):android.animation.Keyframe (c)] (LINE:844)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0053|0x0053: CONST_STR  (r3 I:java.lang.String) =  \"interpolator\"  (LINE:858)\l0x0055: INVOKE  (r3 I:int) = \l  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l  (r6 I:int)\l  (r4 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedResourceId(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0059|0x0059: IF  (r3 I:??[int, byte, short, char] A[D('resID' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:54:0x0062  (LINE:860)\l}"];
Node_53 [shape=record,label="{53\:\ 0x005b|0x005b: INVOKE  (r4 I:android.view.animation.Interpolator) = (r9 I:android.content.Context A[D('context' android.content.Context)]), (r3 I:int A[D('resID' int)]) type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat.loadInterpolator(android.content.Context, int):android.view.animation.Interpolator A[MD:(android.content.Context, int):android.view.animation.Interpolator throws android.content.res.Resources$NotFoundException (m)] (LINE:861)\l0x005f: INVOKE  \l  (r1 I:android.animation.Keyframe A[D('keyframe' android.animation.Keyframe)])\l  (r4 I:android.animation.TimeInterpolator A[D('interpolator' android.view.animation.Interpolator)])\l type: VIRTUAL call: android.animation.Keyframe.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:862)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0062|0x0062: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:864)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|RETURN\l|0x0065: RETURN  (r1 I:android.animation.Keyframe A[D('keyframe' android.animation.Keyframe)])  (LINE:866)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0047|0x0047: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('valueType' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x004e  (LINE:854)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0049|0x0049: INVOKE  (r3 I:android.animation.Keyframe) = (r2 I:float A[D('fraction' float)]) type: STATIC call: android.animation.Keyframe.ofFloat(float):android.animation.Keyframe A[MD:(float):android.animation.Keyframe (c)]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0052|0x0052: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('keyframe' android.animation.Keyframe)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004e|0x004e: INVOKE  (r3 I:android.animation.Keyframe) = (r2 I:float A[D('fraction' float)]) type: STATIC call: android.animation.Keyframe.ofInt(float):android.animation.Keyframe A[MD:(float):android.animation.Keyframe (c)] (LINE:855)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static android.animation.Keyframe androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadKeyframe((r9 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('valueType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:52:0x0059 \-\> B:54:0x0062, CROSS_EDGE: B:45:0x003c \-\> B:51:0x0053, CROSS_EDGE: B:42:0x002f \-\> B:51:0x0053, CROSS_EDGE: B:50:0x0052 \-\> B:51:0x0053, CROSS_EDGE: B:49:0x004e \-\> B:50:0x0052, CROSS_EDGE: B:40:0x002c \-\> B:41:0x002d, CROSS_EDGE: B:36:0x0020 \-\> B:40:0x002c, CROSS_EDGE: B:35:0x001e \-\> B:41:0x002d, CROSS_EDGE: B:33:0x001c \-\> B:34:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0037\-0x003c: r3 'intValue' I\l  0x0041\-0x0046: r3 'value' F\l  0x005f\-0x0062: r4 'interpolator' Landroid\/view\/animation\/Interpolator;\l  0x0006\-0x0071: r0 'a' Landroid\/content\/res\/TypedArray;\l  0x0007\-0x0071: r1 'keyframe' Landroid\/animation\/Keyframe;\l  0x0010\-0x0071: r2 'fraction' F\l  0x0059\-0x0071: r3 'resID' I\l  0x0017\-0x0071: r5 'keyframeValue' Landroid\/util\/TypedValue;\l  0x001d\-0x0071: r7 'hasValue' Z\l  \-1 \-0x0071: r9 'context' Landroid\/content\/Context;\l  \-1 \-0x0071: r10 'res' Landroid\/content\/res\/Resources;\l  \-1 \-0x0071: r11 'theme' Landroid\/content\/res\/Resources$Theme;\l  \-1 \-0x0071: r12 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0071: r13 'valueType' I\l  \-1 \-0x0071: r14 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_44;
Node_42 -> Node_45;
Node_42 -> Node_51;
Node_44 -> Node_51;
Node_45 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_29;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_49 -> Node_50;
Node_33 -> Node_34;
}

