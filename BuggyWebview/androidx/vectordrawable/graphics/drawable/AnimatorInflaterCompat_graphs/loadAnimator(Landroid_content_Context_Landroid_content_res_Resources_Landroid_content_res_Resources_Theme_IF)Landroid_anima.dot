digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Landroid\/content\/res\/Resources$Theme;IF)Landroid\/animation\/Animator;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|r1 = null\l}"];
Node_38 [shape=record,label="{38\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{IOException \-\> 0x0015, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}\lCatch: all \-\> 0x0013, IOException \-\> 0x0015, XmlPullParserException \-\> 0x0034\l|r1 = r6.getAnimation(r8)     \/\/ Catch: java.lang.Throwable \-\> L13 java.io.IOException \-\> L15 org.xmlpull.v1.XmlPullParserException \-\> L34\landroid.animation.Animator r0 = createAnimatorFromXml(r5, r6, r7, r1, r9)     \/\/ Catch: java.lang.Throwable \-\> L13 java.io.IOException \-\> L15 org.xmlpull.v1.XmlPullParserException \-\> L34\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|DONT_GENERATE\l|if (r1 == null) goto L6\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|DONT_GENERATE\l|r1.close()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|RETURN\l|return r0\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|ExcHandler: all \-\> 0x0013\lPHI: r1 \l  PHI: (r1v1 'parser' android.content.res.XmlResourceParser) = (r1v0 'parser' android.content.res.XmlResourceParser), (r1v2 'parser' android.content.res.XmlResourceParser) binds: [B:38:0x0003, B:39:?] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x0053|FINALLY_INSNS\l|if (r1 == null) goto L12\l}"];
Node_36 [shape=record,label="{36\:\ 0x0055|FINALLY_INSNS\l|r1.close()\l}"];
Node_37 [shape=record,label="{37\:\ 0x0058|throw r0\l}"];
Node_29 [shape=record,label="{29\:\ 0x0015|ExcHandler: IOException \-\> 0x0015\l|java.io.IOException r2 = move\-exception\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch: java.lang.Throwable \-\> L13\lr4.append(\"Can't load animation resource ID #0x\")     \/\/ Catch: java.lang.Throwable \-\> L13\lr4.append(java.lang.Integer.toHexString(r8))     \/\/ Catch: java.lang.Throwable \-\> L13\landroid.content.res.Resources$NotFoundException r3 = new android.content.res.Resources.NotFoundException(r4.toString())     \/\/ Catch: java.lang.Throwable \-\> L13\lr3.initCause(r2)     \/\/ Catch: java.lang.Throwable \-\> L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x0033|TryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|throw r3     \/\/ Catch: java.lang.Throwable \-\> L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x0034|ExcHandler: XmlPullParserException \-\> 0x0034\l|org.xmlpull.v1.XmlPullParserException r2 = move\-exception\l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|TryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch: java.lang.Throwable \-\> L13\lr4.append(\"Can't load animation resource ID #0x\")     \/\/ Catch: java.lang.Throwable \-\> L13\lr4.append(java.lang.Integer.toHexString(r8))     \/\/ Catch: java.lang.Throwable \-\> L13\landroid.content.res.Resources$NotFoundException r3 = new android.content.res.Resources.NotFoundException(r4.toString())     \/\/ Catch: java.lang.Throwable \-\> L13\lr3.initCause(r2)     \/\/ Catch: java.lang.Throwable \-\> L13\l}"];
Node_34 [shape=record,label="{34\:\ 0x0052|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}\lCatch: all \-\> 0x0013\l|throw r3     \/\/ Catch: java.lang.Throwable \-\> L13\l}"];
MethodNode[shape=record,label="{public static android.animation.Animator androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator((r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'resources' android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'pathErrorScale' float A[D('pathErrorScale' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000d \-\> B:26:0x0012, CROSS_EDGE: B:31:0x0033 \-\> B:21:?, CROSS_EDGE: B:37:0x0058 \-\> B:21:?, CROSS_EDGE: B:35:0x0053 \-\> B:37:0x0058, CROSS_EDGE: B:34:0x0052 \-\> B:21:?, CROSS_EDGE: B:38:0x0003 \-\> B:27:0x0013, CROSS_EDGE: B:38:0x0003 \-\> B:29:0x0015, CROSS_EDGE: B:38:0x0003 \-\> B:32:0x0034\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:23:0x0003, B:30:0x0016, B:31:0x0033, B:33:0x0035, B:34:0x0052), top: B:38:0x0003, inners: #1, #2 \}, TryCatch #1 \{IOException \-\> 0x0015, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}, TryCatch #2 \{XmlPullParserException \-\> 0x0034, blocks: (B:23:0x0003), top: B:38:0x0003, outer: #0 \}\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_38;
Node_38 -> Node_23;
Node_38 -> Node_27;
Node_38 -> Node_29;
Node_38 -> Node_32;
Node_23 -> Node_24;
Node_23 -> Node_39;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_21;
Node_39 -> Node_29;
Node_39 -> Node_27;
Node_39 -> Node_32;
Node_27 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
}

