digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.updateStateFromTypedArray(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/content\/res\/Resources$Theme;)V" {
subgraph cluster_Region_1873100028 {
label = "R(2:1|(2:(1:3)|(5:5|(1:7)|8|(1:10)|11)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|r12.mThemeAttrs = null\lboolean boolean r0 = androidx.core.content.res.TypedArrayUtils.hasAttribute(r14, \"pathData\")\l}"];
subgraph cluster_Region_718022701 {
label = "R(2:(1:3)|(5:5|(1:7)|8|(1:10)|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1664497205 {
label = "IF [B:16:0x0009] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|if (r0 == false) goto L3\l}"];
subgraph cluster_Region_574879147 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1674197170 {
label = "R(5:5|(1:7)|8|(1:10)|11)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x000c|java.lang.String java.lang.String r1 = r13.getString(0)\l}"];
subgraph cluster_IfRegion_640208079 {
label = "IF [B:19:0x0011] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0011|if (r1 != null) goto L7\l}"];
subgraph cluster_Region_1621902890 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0013|r12.mPathName = r1\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x0015|java.lang.String java.lang.String r2 = r13.getString(2)\l}"];
subgraph cluster_IfRegion_855200660 {
label = "IF [B:22:0x001a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x001a|if (r2 != null) goto L10\l}"];
subgraph cluster_Region_12903121 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x001c|r12.mNodes = androidx.core.graphics.PathParser.createNodesFromPathData(r2)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0022|r12.mFillColor = androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(r13, r14, r15, \"fillColor\", 1, 0)\lr12.mFillAlpha = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"fillAlpha\", 12, r12.mFillAlpha)\lint int r3 = androidx.core.content.res.TypedArrayUtils.getNamedInt(r13, r14, \"strokeLineCap\", 8, \-1)\lr12.mStrokeLineCap = getStrokeLineCap(r3, r12.mStrokeLineCap)\lint int r4 = androidx.core.content.res.TypedArrayUtils.getNamedInt(r13, r14, \"strokeLineJoin\", 9, \-1)\lr12.mStrokeLineJoin = getStrokeLineJoin(r4, r12.mStrokeLineJoin)\lr12.mStrokeMiterlimit = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"strokeMiterLimit\", 10, r12.mStrokeMiterlimit)\lr12.mStrokeColor = androidx.core.content.res.TypedArrayUtils.getNamedComplexColor(r13, r14, r15, \"strokeColor\", 3, 0)\lr12.mStrokeAlpha = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"strokeAlpha\", 11, r12.mStrokeAlpha)\lr12.mStrokeWidth = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"strokeWidth\", 4, r12.mStrokeWidth)\lr12.mTrimPathEnd = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"trimPathEnd\", 6, r12.mTrimPathEnd)\lr12.mTrimPathOffset = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"trimPathOffset\", 7, r12.mTrimPathOffset)\lr12.mTrimPathStart = androidx.core.content.res.TypedArrayUtils.getNamedFloat(r13, r14, \"trimPathStart\", 5, r12.mTrimPathStart)\lr12.mFillRule = androidx.core.content.res.TypedArrayUtils.getNamedInt(r13, r14, \"fillType\", 13, r12.mFillRule)\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00b9}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VFullPath.updateStateFromTypedArray((r12v0 'this' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath A[IMMUTABLE_TYPE, THIS]), (r13v0 'a' android.content.res.TypedArray A[D('a' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x00b9 \-\> B:14:?, CROSS_EDGE: B:22:0x001a \-\> B:24:0x0022, CROSS_EDGE: B:19:0x0011 \-\> B:21:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_14;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_13 -> Node_15;
Node_25 -> Node_14;
}

