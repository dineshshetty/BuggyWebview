digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.createCachedBitmapIfNeeded(II)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000}"];
Node_12 [shape=record,label="{12\:\ 0x0002|if (r1.mCachedBitmap == null) goto L7\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004}"];
Node_14 [shape=record,label="{14\:\ 0x0008|if (canReuseBitmap(r2, r3) != false) goto L5\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|r1.mCachedBitmap = android.graphics.Bitmap.createBitmap(r2, r3, android.graphics.Bitmap.Config.ARGB_8888)\lr1.mCacheDirty = true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.createCachedBitmapIfNeeded((r1v0 'this' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS]), (r2v0 'width' int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'height' int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0008 \-\> B:16:0x0015, CROSS_EDGE: B:12:0x0002 \-\> B:15:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_17 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_10;
}

