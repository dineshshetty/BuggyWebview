digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseBitmap(II)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Bitmap) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedBitmap android.graphics.Bitmap  (LINE:1093)\l0x0002: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap) type: VIRTUAL call: android.graphics.Bitmap.getWidth():int A[MD:():int (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('width' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0012 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IGET  (r0 I:android.graphics.Bitmap) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedBitmap android.graphics.Bitmap \l0x000a: INVOKE  (r0 I:int) = (r0 I:android.graphics.Bitmap) type: VIRTUAL call: android.graphics.Bitmap.getHeight():int A[MD:():int (c)] (LINE:1094)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('height' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|RETURN\l|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1095)\l0x0011: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1097)\l0x0013: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1097)\l0x0013: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseBitmap((r1 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0013 \-\> B:12:?, CROSS_EDGE: B:14:0x0006 \-\> B:19:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0013: r2 'width' I\l  \-1 \-0x0013: r3 'height' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_12;
Node_21 -> Node_12;
Node_19 -> Node_12;
}

