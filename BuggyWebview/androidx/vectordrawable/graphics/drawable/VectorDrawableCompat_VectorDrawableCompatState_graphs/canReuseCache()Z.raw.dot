digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseCache()Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCacheDirty boolean  (LINE:1101)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0022 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IGET  (r0 I:android.content.res.ColorStateList) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedTint android.content.res.ColorStateList \l0x0006: IGET  (r1 I:android.content.res.ColorStateList) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTint android.content.res.ColorStateList \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|0x000a: IGET  (r0 I:android.graphics.PorterDuff$Mode) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedTintMode android.graphics.PorterDuff$Mode \l0x000c: IGET  (r1 I:android.graphics.PorterDuff$Mode) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:? \l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: IGET  (r0 I:boolean) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedAutoMirrored boolean \l0x0012: IGET  (r1 I:boolean) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mAutoMirrored boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:? \l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IGET  (r0 I:int) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mCachedRootAlpha int \l0x0018: IGET  (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) = (r2 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.mVPathRenderer androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer \l0x001a: INVOKE  (r1 I:int) = (r1 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) type: VIRTUAL call: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VPathRenderer.getRootAlpha():int A[MD:():int (m)] (LINE:1105)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|0x001e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:? \l}"];
Node_32 [shape=record,label="{32\:\ 0x0020|RETURN\l|0x0020: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1106)\l0x0021: RETURN  (r0 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1108)\l0x0023: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1108)\l0x0023: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1108)\l0x0023: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:1108)\l0x0023: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1108)\l0x0023: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VectorDrawableCompatState.canReuseCache((r2 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0023 \-\> B:21:?, CROSS_EDGE: B:29:0x0014 \-\> B:34:0x0022, CROSS_EDGE: B:27:0x000e \-\> B:34:0x0022, CROSS_EDGE: B:25:0x0008 \-\> B:34:0x0022, CROSS_EDGE: B:23:0x0002 \-\> B:34:0x0022\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_39;
Node_32 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
Node_37 -> Node_21;
Node_36 -> Node_21;
Node_34 -> Node_21;
}

