digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.updateStateFromTypedArray(Landroid\/content\/res\/TypedArray;Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0001|0x0001: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1793)\l0x0002: INVOKE  (r1 I:java.lang.String) = (r6 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r0 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pathName' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000a  (LINE:1794)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IPUT  \l  (r1 I:java.lang.String A[D('pathName' java.lang.String)])\l  (r5 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.mPathName java.lang.String  (LINE:1795)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1798)\l0x000b: INVOKE  (r2 I:java.lang.String) = (r6 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r2 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:1799)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pathData' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0017  (LINE:1800)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: INVOKE  (r3 I:androidx.core.graphics.PathParser$PathDataNode[]) = (r2 I:java.lang.String A[D('pathData' java.lang.String)]) type: STATIC call: androidx.core.graphics.PathParser.createNodesFromPathData(java.lang.String):androidx.core.graphics.PathParser$PathDataNode[] A[MD:(java.lang.String):androidx.core.graphics.PathParser$PathDataNode[] (m)] (LINE:1801)\l0x0015: IPUT  \l  (r3 I:androidx.core.graphics.PathParser$PathDataNode[])\l  (r5 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)\l androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.mNodes androidx.core.graphics.PathParser$PathDataNode[] \l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1803)\l0x0018: CONST_STR  (r4 I:java.lang.String) =  \"fillType\" \l0x001a: INVOKE  (r0 I:int) = \l  (r6 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)])\l  (r7 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:java.lang.String)\l  (r3 I:int)\l  (r0 I:int)\l type: STATIC call: androidx.core.content.res.TypedArrayUtils.getNamedInt(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int A[MD:(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser, java.lang.String, int, int):int (m)]\l0x001e: IPUT  (r0 I:int), (r5 I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.mFillRule int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:1806)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.updateStateFromTypedArray((r5 'this' I:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000f \-\> B:18:0x0017, CROSS_EDGE: B:13:0x0006 \-\> B:15:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0020: r1 'pathName' Ljava\/lang\/String;\l  0x000f\-0x0020: r2 'pathData' Ljava\/lang\/String;\l  \-1 \-0x0020: r6 'a' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x0020: r7 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

