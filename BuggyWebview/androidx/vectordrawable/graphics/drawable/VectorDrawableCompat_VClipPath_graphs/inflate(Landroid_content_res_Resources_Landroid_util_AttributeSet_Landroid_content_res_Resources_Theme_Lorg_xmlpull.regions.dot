digraph "CFG forandroidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.inflate(Landroid\/content\/res\/Resources;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
subgraph cluster_Region_300707947 {
label = "R(2:1|(2:(1:3)|(1:5)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|boolean boolean r0 = androidx.core.content.res.TypedArrayUtils.hasAttribute(r6, \"pathData\")\l}"];
subgraph cluster_Region_1830405446 {
label = "R(2:(1:3)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1193711037 {
label = "IF [B:10:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0006|if (r0 == false) goto L3\l}"];
subgraph cluster_Region_1020041890 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0008|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_224872975 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0009|android.content.res.TypedArray android.content.res.TypedArray r1 = androidx.core.content.res.TypedArrayUtils.obtainAttributes(r3, r5, r4, androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH)\lupdateStateFromTypedArray(r1, r6)\lr1.recycle()\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0015}"];
MethodNode[shape=record,label="{public void androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.VClipPath.inflate((r2v0 'this' androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath A[IMMUTABLE_TYPE, THIS]), (r3v0 'r' android.content.res.Resources A[D('r' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'theme' android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0015 \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_7 -> Node_9;
Node_13 -> Node_8;
}

