digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupColorAnimator(Landroid\/animation\/Animator;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) android.animation.AnimatorSet  (LINE:661)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0020 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|0x0004: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)])  (LINE:662)\l0x0005: CHECK_CAST (r0 I:android.animation.AnimatorSet) = (android.animation.AnimatorSet) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r0 I:java.util.ArrayList) = (r0 I:android.animation.AnimatorSet) type: VIRTUAL call: android.animation.AnimatorSet.getChildAnimations():java.util.ArrayList A[MD:():java.util.ArrayList\<android.animation.Animator\> (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childAnimators' java.util.List\<android.animation.Animator\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0020  (LINE:663)\l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:664)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|LOOP_START\lLOOP:0: B:31:0x000e\-\>B:33:0x0014\l|0x000e: INVOKE  (r2 I:int) = (r0 I:java.util.List A[D('childAnimators' java.util.List\<android.animation.Animator\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|0x0012: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:45:0x0020 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0014|LOOP_END\lLOOP:0: B:31:0x000e\-\>B:33:0x0014\l|0x0014: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.List A[D('childAnimators' java.util.List\<android.animation.Animator\>)]), (r1 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:665)\l0x0018: CHECK_CAST (r2 I:android.animation.Animator) = (android.animation.Animator) (r2 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r3 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat), (r2 I:android.animation.Animator) type: DIRECT call: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupColorAnimator(android.animation.Animator):void A[MD:(android.animation.Animator):void (m)]\l0x001d: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:664)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|0x0020: INSTANCE_OF  (r0 I:boolean A[D('childAnimators' java.util.List\<android.animation.Animator\>)]) = (r4 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)]) android.animation.ObjectAnimator  (LINE:669)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:? \l}"];
Node_36 [shape=record,label="{36\:\ 0x0024|0x0024: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('animator' android.animation.Animator)])  (LINE:670)\l0x0025: CHECK_CAST (r0 I:android.animation.ObjectAnimator) = (android.animation.ObjectAnimator) (r0 I:??[OBJECT, ARRAY]) \l0x0027: INVOKE  (r1 I:java.lang.String) = (r0 I:android.animation.ObjectAnimator A[D('objectAnim' android.animation.ObjectAnimator)]) type: VIRTUAL call: android.animation.ObjectAnimator.getPropertyName():java.lang.String A[MD:():java.lang.String (c)] (LINE:671)\l0x002b: CONST_STR  (r2 I:java.lang.String) =  \"fillColor\"  (LINE:672)\l0x002d: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r1 I:java.lang.Object A[D('propertyName' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0031|0x0031: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x003b \l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|0x0033: CONST_STR  (r2 I:java.lang.String) =  \"strokeColor\" \l0x0035: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r1 I:java.lang.Object A[D('propertyName' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|0x0039: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN   A[SYNTHETIC] (LINE:679)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x003b|0x003b: IGET  (r2 I:android.animation.ArgbEvaluator) = (r3 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mArgbEvaluator android.animation.ArgbEvaluator  (LINE:673)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003d|0x003d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0046 \l}"];
Node_42 [shape=record,label="{42\:\ 0x003f|0x003f: NEW_INSTANCE  (r2 I:android.animation.ArgbEvaluator) =  android.animation.ArgbEvaluator  (LINE:674)\l0x0041: INVOKE  (r2 I:android.animation.ArgbEvaluator) type: DIRECT call: android.animation.ArgbEvaluator.\<init\>():void A[MD:():void (c)]\l0x0044: IPUT  (r2 I:android.animation.ArgbEvaluator), (r3 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mArgbEvaluator android.animation.ArgbEvaluator \l}"];
Node_43 [shape=record,label="{43\:\ 0x0046|0x0046: IGET  (r2 I:android.animation.ArgbEvaluator) = (r3 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mArgbEvaluator android.animation.ArgbEvaluator  (LINE:676)\l0x0048: INVOKE  \l  (r0 I:android.animation.ObjectAnimator A[D('objectAnim' android.animation.ObjectAnimator)])\l  (r2 I:android.animation.TypeEvaluator)\l type: VIRTUAL call: android.animation.ObjectAnimator.setEvaluator(android.animation.TypeEvaluator):void A[MD:(android.animation.TypeEvaluator):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x004b|RETURN\lORIG_RETURN\l|0x004b: RETURN    (LINE:679)\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|0x004b: RETURN   A[SYNTHETIC] (LINE:679)\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupColorAnimator((r3 'this' I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:android.animation.Animator A[D('animator' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0014 \-\> B:31:0x000e, CROSS_EDGE: B:41:0x003d \-\> B:43:0x0046, CROSS_EDGE: B:39:0x0039 \-\> B:44:0x004b, CROSS_EDGE: B:37:0x0031 \-\> B:40:0x003b, CROSS_EDGE: B:35:0x0022 \-\> B:44:0x004b, CROSS_EDGE: B:29:0x000b \-\> B:34:0x0020, CROSS_EDGE: B:27:0x0002 \-\> B:34:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0020: r0 'childAnimators' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/animation\/Animator;\>;\l  0x000e\-0x0020: r1 'i' I\l  0x0027\-0x004b: r0 'objectAnim' Landroid\/animation\/ObjectAnimator;\l  0x002b\-0x004b: r1 'propertyName' Ljava\/lang\/String;\l  \-1 \-0x004b: r4 'animator' Landroid\/animation\/Animator;\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_45;
Node_33 -> Node_31;
Node_45 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_46;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_47 -> Node_25;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_25;
Node_46 -> Node_25;
}

