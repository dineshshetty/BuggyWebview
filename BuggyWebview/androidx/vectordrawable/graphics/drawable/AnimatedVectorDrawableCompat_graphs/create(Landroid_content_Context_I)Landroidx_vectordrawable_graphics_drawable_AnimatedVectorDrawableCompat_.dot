digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.create(Landroid\/content\/Context;I)Landroidx\/vectordrawable\/graphics\/drawable\/AnimatedVectorDrawableCompat;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0008|if (android.os.Build.VERSION.SDK_INT \< 24) goto L6\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat(r8)\lr0.mDelegateDrawable = androidx.core.content.res.ResourcesCompat.getDrawable(r8.getResources(), r9, r8.getTheme())\lr0.mDelegateDrawable.setCallback(r0.mCallback)\lr0.mCachedConstantStateDelegate = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.AnimatedVectorDrawableDelegateState(r0.mDelegateDrawable.getConstantState())\l}"];
Node_33 [shape=record,label="{33\:\ 0x0031|RETURN\l|return r0\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|android.content.res.Resources r2 = r8.getResources()\l}"];
Node_52 [shape=record,label="{52\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|TRY_ENTER\lTryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lCatch: IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066\l|android.content.res.XmlResourceParser r3 = r2.getXml(r9)     \/\/ Catch: java.io.IOException \-\> L61 org.xmlpull.v1.XmlPullParserException \-\> L66\landroid.util.AttributeSet r4 = android.util.Xml.asAttributeSet(r3)     \/\/ Catch: java.io.IOException \-\> L61 org.xmlpull.v1.XmlPullParserException \-\> L66\l}"];
Node_36 [shape=record,label="{36\:\ 0x003e|LOOP_START\lTryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lLOOP:0: B:36:0x003e\-\>B:40:0x0049\lCatch: IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066\l|int r5 = r3.next()     \/\/ Catch: java.io.IOException \-\> L61 org.xmlpull.v1.XmlPullParserException \-\> L66\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|if (r5 == 2) goto L20\l}"];
Node_38 [shape=record,label="{38\:\ 0x0046}"];
Node_39 [shape=record,label="{39\:\ 0x0047|if (r5 == 1) goto L14\l}"];
Node_40 [shape=record,label="{40\:\ 0x0049|LOOP_END\lLOOP:0: B:36:0x003e\-\>B:40:0x0049\l}"];
Node_54 [shape=record,label="{54\:\ 0x004a|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x004a|if (r5 != 2) goto L18\l}"];
Node_42 [shape=record,label="{42\:\ 0x004c|TryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lCatch: IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066\l}"];
Node_43 [shape=record,label="{43\:\ 0x0058|RETURN\l|return createFromXmlInner(r8, r8.getResources(), r3, r4, r8.getTheme())\l}"];
Node_44 [shape=record,label="{44\:\ 0x0059|TryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lCatch: IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066\l}"];
Node_45 [shape=record,label="{45\:\ 0x0060|TRY_LEAVE\lTryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lCatch: IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066\l|throw new org.xmlpull.v1.XmlPullParserException(\"No start tag found\")     \/\/ Catch: java.io.IOException \-\> L61 org.xmlpull.v1.XmlPullParserException \-\> L66\l}"];
Node_53 [shape=record,label="{53\:\ 0x004a|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0061|ExcHandler: IOException \-\> 0x0061\l|java.io.IOException r3 = move\-exception\l}"];
Node_47 [shape=record,label="{47\:\ 0x0062|android.util.Log.e(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.LOGTAG, \"parser error\", r3)\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_48 [shape=record,label="{48\:\ 0x0066|ExcHandler: XmlPullParserException \-\> 0x0066\l|org.xmlpull.v1.XmlPullParserException r3 = move\-exception\l}"];
Node_49 [shape=record,label="{49\:\ 0x0067|android.util.Log.e(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.LOGTAG, \"parser error\", r3)\l}"];
Node_50 [shape=record,label="{50\:\ 0x006b|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.create((r8v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'resId' int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x0049 \-\> B:36:0x003e, CROSS_EDGE: B:43:0x0058 \-\> B:29:?, CROSS_EDGE: B:45:0x0060 \-\> B:29:?, CROSS_EDGE: B:37:0x0044 \-\> B:41:0x004a, CROSS_EDGE: B:51:0x006c \-\> B:29:?, CROSS_EDGE: B:49:0x0067 \-\> B:50:0x006b\lINLINE_NOT_NEEDED\lTryCatch #2 \{IOException \-\> 0x0061, XmlPullParserException \-\> 0x0066, blocks: (B:35:0x0036, B:36:0x003e, B:42:0x004c, B:44:0x0059, B:45:0x0060), top: B:52:0x0036 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_29;
Node_34 -> Node_52;
Node_52 -> Node_35;
Node_52 -> Node_46;
Node_52 -> Node_48;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_53;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_54;
Node_40 -> Node_36;
Node_54 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_29;
Node_44 -> Node_45;
Node_45 -> Node_29;
Node_53 -> Node_41;
Node_46 -> Node_47;
Node_47 -> Node_55;
Node_55 -> Node_29;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_29;
}

