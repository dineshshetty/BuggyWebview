digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget(Ljava\/lang\/String;Landroid\/animation\/Animator;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|java.lang.Object r0 = r3.mAnimatedVectorState.mVectorDrawable.getTargetByName(r4)\lr5.setTarget(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \>= 21) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x0011|setupColorAnimator(r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014}"];
Node_16 [shape=record,label="{16\:\ 0x0018|if (r3.mAnimatedVectorState.mAnimators != null) goto L7\l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState r1 = r3.mAnimatedVectorState\lr1.mAnimators = new java.util.ArrayList\<\>()\landroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState r1 = r3.mAnimatedVectorState\lr1.mTargetNameMap = new androidx.collection.ArrayMap\<\>()\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|r3.mAnimatedVectorState.mAnimators.add(r5)\lr3.mAnimatedVectorState.mTargetNameMap.put(r5, r4)\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.setupAnimatorsForTarget((r3v0 'this' androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r4v0 'name' java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'animator' android.animation.Animator A[D('animator' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0018 \-\> B:18:0x002c, CROSS_EDGE: B:13:0x000f \-\> B:15:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

