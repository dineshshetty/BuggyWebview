digraph "CFG forandroidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.unregisterAnimationCallback(Landroidx\/vectordrawable\/graphics\/drawable\/Animatable2Compat$AnimationCallback;)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:836)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mDelegateDrawable android.graphics.drawable.Drawable  (LINE:838)\l0x0006: CHECK_CAST (r0 I:android.graphics.drawable.AnimatedVectorDrawable) = (android.graphics.drawable.AnimatedVectorDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r0 I:android.graphics.drawable.AnimatedVectorDrawable)\l  (r3 I:androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback A[D('callback' androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)])\l type: STATIC call: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback):boolean A[MD:(android.graphics.drawable.AnimatedVectorDrawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback):boolean (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: IGET  (r0 I:java.util.ArrayList\<androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback\>) = (r2 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mAnimationCallbacks java.util.ArrayList  (LINE:841)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0022 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('callback' androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0012 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.ArrayList)\l  (r3 I:java.lang.Object A[D('callback' androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)])\l type: VIRTUAL call: java.util.ArrayList.remove(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:845)\l0x0016: IGET  (r1 I:java.util.ArrayList\<androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback\>) = (r2 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.mAnimationCallbacks java.util.ArrayList  (LINE:848)\l0x0018: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0021 \l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|0x001e: INVOKE  (r2 I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) type: DIRECT call: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.removeAnimatorSetListener():void A[MD:():void (m)] (LINE:849)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:boolean A[D('removed' boolean)])  (LINE:851)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('removed' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:843)\l0x0023: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('removed' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:843)\l0x0023: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.unregisterAnimationCallback((r2 'this' I:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback A[D('callback' androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001c \-\> B:28:0x0021, CROSS_EDGE: B:30:0x0023 \-\> B:17:?, CROSS_EDGE: B:22:0x000d \-\> B:29:0x0022, CROSS_EDGE: B:19:0x0002 \-\> B:21:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0022: r0 'removed' Z\l  \-1 \-0x0023: r3 'callback' Landroidx\/vectordrawable\/graphics\/drawable\/Animatable2Compat$AnimationCallback;\lMETHOD_OVERRIDE: [androidx.vectordrawable.graphics.drawable.Animatable2Compat.unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback):boolean]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_25;
Node_23 -> Node_31[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_17;
Node_31 -> Node_17;
Node_29 -> Node_17;
}

