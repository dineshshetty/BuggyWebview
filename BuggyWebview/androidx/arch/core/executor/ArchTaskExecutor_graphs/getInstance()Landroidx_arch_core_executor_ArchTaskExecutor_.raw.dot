digraph "CFG forandroidx.arch.core.executor.ArchTaskExecutor.getInstance()Landroidx\/arch\/core\/executor\/ArchTaskExecutor;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: SGET  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) =  androidx.arch.core.executor.ArchTaskExecutor.sInstance androidx.arch.core.executor.ArchTaskExecutor  (LINE:69)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0007 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: SGET  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) =  androidx.arch.core.executor.ArchTaskExecutor.sInstance androidx.arch.core.executor.ArchTaskExecutor  (LINE:70)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|0x0007: CONST_CLASS  (r0 I:java.lang.Class\<androidx.arch.core.executor.ArchTaskExecutor\>) =  androidx.arch.core.executor.ArchTaskExecutor.class  (LINE:72)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:27:0x000a, B:29:0x000e, B:30:0x0015), top: B:36:0x000a \}\lCatch: all \-\> 0x0019\l|0x000a: SGET  (r1 I:androidx.arch.core.executor.ArchTaskExecutor) =  androidx.arch.core.executor.ArchTaskExecutor.sInstance androidx.arch.core.executor.ArchTaskExecutor A[Catch: all \-\> 0x0019, TRY_ENTER] (LINE:73)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0015 \l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|TryCatch #0 \{all \-\> 0x0019, blocks: (B:27:0x000a, B:29:0x000e, B:30:0x0015), top: B:36:0x000a \}\lCatch: all \-\> 0x0019\l|0x000e: NEW_INSTANCE  (r1 I:androidx.arch.core.executor.ArchTaskExecutor) =  androidx.arch.core.executor.ArchTaskExecutor A[Catch: all \-\> 0x0019] (LINE:74)\l0x0010: INVOKE  (r1 I:androidx.arch.core.executor.ArchTaskExecutor) type: DIRECT call: androidx.arch.core.executor.ArchTaskExecutor.\<init\>():void A[Catch: all \-\> 0x0019, MD:():void (m)]\l0x0013: SPUT  (r1 I:androidx.arch.core.executor.ArchTaskExecutor) androidx.arch.core.executor.ArchTaskExecutor.sInstance androidx.arch.core.executor.ArchTaskExecutor A[Catch: all \-\> 0x0019]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:27:0x000a, B:29:0x000e, B:30:0x0015), top: B:36:0x000a \}\lCatch: all \-\> 0x0019\l|0x0015: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0019, TRY_LEAVE] (LINE:76)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: SGET  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) =  androidx.arch.core.executor.ArchTaskExecutor.sInstance androidx.arch.core.executor.ArchTaskExecutor  (LINE:77)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0019|ExcHandler: all \-\> 0x0019\l|0x0019: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0019] (LINE:76)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x0019\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|0x001b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static androidx.arch.core.executor.ArchTaskExecutor androidx.arch.core.executor.ArchTaskExecutor.getInstance()  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0018 \-\> B:20:?, CROSS_EDGE: B:35:0x001b \-\> B:20:?, CROSS_EDGE: B:28:0x000c \-\> B:30:0x0015, CROSS_EDGE: B:36:0x000a \-\> B:33:0x0019\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0019, blocks: (B:27:0x000a, B:29:0x000e, B:30:0x0015), top: B:36:0x000a \}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_36;
Node_36 -> Node_27;
Node_36 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_37 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_20;
}

