digraph "CFG forandroidx.arch.core.executor.DefaultTaskExecutor.1.newThread(Ljava\/lang\/Runnable;)Ljava\/lang\/Thread;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.Thread) =  java.lang.Thread  (LINE:48)\l0x0002: INVOKE  (r0 I:java.lang.Thread), (r5 I:java.lang.Runnable A[D('r' java.lang.Runnable)]) type: DIRECT call: java.lang.Thread.\<init\>(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (c)]\l0x0005: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:49)\l0x0006: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0008: IGET  (r2 I:java.util.concurrent.atomic.AtomicInteger) = (r4 I:androidx.arch.core.executor.DefaultTaskExecutor$1) androidx.arch.core.executor.DefaultTaskExecutor.1.mThreadId java.util.concurrent.atomic.AtomicInteger \l0x000a: INVOKE  (r2 I:int) = (r2 I:java.util.concurrent.atomic.AtomicInteger) type: VIRTUAL call: java.util.concurrent.atomic.AtomicInteger.getAndIncrement():int A[MD:():int (c)]\l0x000e: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: APUT  (r1 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) \l0x0015: CONST_STR  (r2 I:java.lang.String) =  \"arch_disk_io_%d\" \l0x0017: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.String), (r1 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x001b: INVOKE  (r0 I:java.lang.Thread A[D('t' java.lang.Thread)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.Thread.setName(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:java.lang.Thread A[D('t' java.lang.Thread)])  (LINE:50)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.Thread androidx.arch.core.executor.DefaultTaskExecutor.1.newThread((r4 'this' I:androidx.arch.core.executor.DefaultTaskExecutor$1 A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Runnable A[D('r' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x001e: r0 't' Ljava\/lang\/Thread;\l  \-1 \-0x001e: r5 'r' Ljava\/lang\/Runnable;\lMETHOD_OVERRIDE: [ClspMth\{java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable):java.lang.Thread\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

