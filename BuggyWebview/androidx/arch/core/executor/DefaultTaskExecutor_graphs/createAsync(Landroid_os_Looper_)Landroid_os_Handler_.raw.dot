digraph "CFG forandroidx.arch.core.executor.DefaultTaskExecutor.createAsync(Landroid\/os\/Looper;)Landroid\/os\/Handler;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:81)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:28:0x000b \l}"];
Node_26 [shape=record,label="{26\:\ 0x0006|0x0006: INVOKE  (r0 I:android.os.Handler) = (r7 I:android.os.Looper A[D('looper' android.os.Looper)]) type: STATIC call: android.os.Handler.createAsync(android.os.Looper):android.os.Handler A[MD:(android.os.Looper):android.os.Handler (c)] (LINE:82)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.os.Handler) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|0x000b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:84)\l0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:40:0x0049 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0049|0x0049: NEW_INSTANCE  (r0 I:android.os.Handler) =  android.os.Handler  (LINE:96)\l0x004b: INVOKE  (r0 I:android.os.Handler), (r7 I:android.os.Looper A[D('looper' android.os.Looper)]) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x004e|RETURN\l|0x004e: RETURN  (r0 I:android.os.Handler) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0048, InstantiationException \-\> 0x0046, NoSuchMethodException \-\> 0x0044, InvocationTargetException \-\> 0x003d, blocks: (B:30:0x0011), top: B:42:0x0011 \}\lCatch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048\l|0x0011: CONST_CLASS  (r0 I:java.lang.Class\<android.os.Handler\>) =  android.os.Handler.class A[TRY_ENTER] (LINE:86)\l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0014: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0016: CONST_CLASS  (r3 I:java.lang.Class\<android.os.Looper\>) =  android.os.Looper.class \l0x0018: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: APUT  (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x001b: CONST_CLASS  (r3 I:java.lang.Class\<android.os.Handler$Callback\>) =  android.os.Handler$Callback.class \l0x001d: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: APUT  (r2 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0020: SGET  (r3 I:java.lang.Class) =  java.lang.Boolean.TYPE java.lang.Class A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0022: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0023: APUT  (r2 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0025: INVOKE  (r0 I:java.lang.reflect.Constructor) = (r0 I:java.lang.Class), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0029: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x002b: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r7 I:??[OBJECT, ARRAY] A[D('looper' android.os.Looper)])\l A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x002d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: APUT  (r1 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0030: INVOKE  (r2 I:java.lang.Boolean) = (r5 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048, MD:(boolean):java.lang.Boolean (c)] (LINE:88)\l0x0034: APUT  (r1 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r2 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048]\l0x0036: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Constructor), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x003a: CHECK_CAST (r0 I:android.os.Handler) = (android.os.Handler) (r0 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x003d, NoSuchMethodException \-\> 0x0044, InstantiationException \-\> 0x0046, IllegalAccessException \-\> 0x0048, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x003c|RETURN\l|0x003c: RETURN  (r0 I:android.os.Handler)  (LINE:86)\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0048|ExcHandler: IllegalAccessException \-\> 0x0048\l|0x0048: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0048] (LINE:89)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0046|ExcHandler: InstantiationException \-\> 0x0046\l|0x0046: MOVE_EXCEPTION  (r0 I:java.lang.InstantiationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InstantiationException \-\> 0x0046] (LINE:90)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0044|ExcHandler: NoSuchMethodException \-\> 0x0044\l|0x0044: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0044] (LINE:91)\l}"];
Node_32 [shape=record,label="{32\:\ 0x003d|ExcHandler: InvocationTargetException \-\> 0x003d\l|0x003d: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x003d] (LINE:92)\l}"];
Node_33 [shape=record,label="{33\:\ 0x003e|0x003e: NEW_INSTANCE  (r1 I:android.os.Handler) =  android.os.Handler  (LINE:93)\l0x0040: INVOKE  (r1 I:android.os.Handler), (r7 I:android.os.Looper A[D('looper' android.os.Looper)]) type: DIRECT call: android.os.Handler.\<init\>(android.os.Looper):void A[MD:(android.os.Looper):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0043|RETURN\l|0x0043: RETURN  (r1 I:android.os.Handler) \l}"];
MethodNode[shape=record,label="{private static android.os.Handler androidx.arch.core.executor.DefaultTaskExecutor.createAsync((r7 I:android.os.Looper A[D('looper' android.os.Looper), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x004e \-\> B:23:?, CROSS_EDGE: B:31:0x003c \-\> B:23:?, CROSS_EDGE: B:39:0x0048 \-\> B:40:0x0049, CROSS_EDGE: B:37:0x0046 \-\> B:40:0x0049, CROSS_EDGE: B:35:0x0044 \-\> B:40:0x0049, CROSS_EDGE: B:34:0x0043 \-\> B:23:?, CROSS_EDGE: B:42:0x0011 \-\> B:39:0x0048, CROSS_EDGE: B:42:0x0011 \-\> B:37:0x0046, CROSS_EDGE: B:42:0x0011 \-\> B:35:0x0044, CROSS_EDGE: B:42:0x0011 \-\> B:32:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003e\-0x0044: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  \-1 \-0x004e: r7 'looper' Landroid\/os\/Looper;\lTryCatch #2 \{IllegalAccessException \-\> 0x0048, InstantiationException \-\> 0x0046, NoSuchMethodException \-\> 0x0044, InvocationTargetException \-\> 0x003d, blocks: (B:30:0x0011), top: B:42:0x0011 \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_23;
Node_28 -> Node_29;
Node_29 -> Node_40;
Node_29 -> Node_42[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_42 -> Node_30;
Node_42 -> Node_39;
Node_42 -> Node_37;
Node_42 -> Node_35;
Node_42 -> Node_32;
Node_30 -> Node_31;
Node_30 -> Node_43;
Node_31 -> Node_23;
Node_43 -> Node_39;
Node_43 -> Node_37;
Node_43 -> Node_35;
Node_43 -> Node_32;
Node_39 -> Node_40;
Node_37 -> Node_40;
Node_35 -> Node_40;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_23;
}

