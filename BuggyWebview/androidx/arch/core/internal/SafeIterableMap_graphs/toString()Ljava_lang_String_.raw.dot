digraph "CFG forandroidx.arch.core.internal.SafeIterableMap.toString()Ljava\/lang\/String;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:216)\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"[\"  (LINE:217)\l0x0007: INVOKE  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x000a: INVOKE  (r1 I:java.util.Iterator) = (r3 I:androidx.arch.core.internal.SafeIterableMap A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>)]) type: VIRTUAL call: androidx.arch.core.internal.SafeIterableMap.iterator():java.util.Iterator A[MD:():java.util.Iterator\<java.util.Map$Entry\<K, V\>\> (m)] (LINE:218)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|LOOP_START\lLOOP:0: B:18:0x000e\-\>B:27:0x000e\l|0x000e: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator\<java.util.Map$Entry\<K, V\>\>)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:219)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002d \l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator\<java.util.Map$Entry\<K, V\>\>)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:220)\l0x0018: CHECK_CAST (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0021: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator A[D('iterator' java.util.Iterator\<java.util.Map$Entry\<K, V\>\>)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:221)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|0x0025: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x000e \l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: CONST_STR  (r2 I:java.lang.String) =  \", \"  (LINE:222)\l0x0029: INVOKE  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x000e|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|LOOP_END\lSYNTHETIC\lLOOP:0: B:18:0x000e\-\>B:27:0x000e\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002d|0x002d: CONST_STR  (r2 I:java.lang.String) =  \"]\"  (LINE:225)\l0x002f: INVOKE  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0032: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:226)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0036|RETURN\l|0x0036: RETURN  (r2 I:java.lang.String) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.arch.core.internal.SafeIterableMap.toString((r3 'this' I:androidx.arch.core.internal.SafeIterableMap\<K, V\> A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0025 \-\> B:18:0x000e, BACK_EDGE: B:22:0x0027 \-\> B:18:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0036: r0 'builder' Ljava\/lang\/StringBuilder;\l  0x000e\-0x0036: r1 'iterator' Ljava\/util\/Iterator;, signature: Ljava\/util\/Iterator\<Ljava\/util\/Map$Entry\<TK;TV;\>;\>;\l  0x0000\-0x0036: r3 'this' Landroidx\/arch\/core\/internal\/SafeIterableMap;, signature: Landroidx\/arch\/core\/internal\/SafeIterableMap\<TK;TV;\>;\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_26[style=dashed];
Node_21 -> Node_28;
Node_26 -> Node_22;
Node_22 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_27;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
}

