digraph "CFG forandroidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.hasNext()Z" {
subgraph cluster_Region_55676322 {
label = "R(1:(2:(1:4)|(2:8|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1732880505 {
label = "R(2:(1:4)|(2:8|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_624160929 {
label = "IF [B:21:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0004|if (r3.mBeforeStart == true) goto L3\l}"];
subgraph cluster_Region_1790055889 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000a|RETURN\l|return androidx.arch.core.internal.SafeIterableMap.this.mStart != null\l}"];
}
}
subgraph cluster_Region_938927554 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x000f|androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\> androidx.arch.core.internal.SafeIterableMap.Entry\<K, V\> r0 = r3.mCurrent\l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|RETURN\l|return (r0 == null \|\| r0.mNext == null) ? false : true\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0006}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x000d|ORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ ?|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0013}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0015|REMOVE\lADDED_TO_REGION\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0018|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.hasNext((r3v0 'this' androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x000a \-\> B:26:0x000e, CROSS_EDGE: B:33:0x0019 \-\> B:19:?, CROSS_EDGE: B:30:0x0015 \-\> B:33:0x0019, CROSS_EDGE: B:28:0x0011 \-\> B:32:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.hasNext():boolean\}]\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_27[style=dashed];
Node_23 -> Node_25;
Node_23 -> Node_34;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_32;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_25 -> Node_19;
Node_34 -> Node_19;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_35;
Node_35 -> Node_19;
Node_32 -> Node_19;
}

