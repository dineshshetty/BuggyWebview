digraph "CFG forandroidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.next()Ljava\/util\/Map$Entry;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0002|if (r1.mBeforeStart == false) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|r1.mBeforeStart = false\lr1.mCurrent = androidx.arch.core.internal.SafeIterableMap.this.mStart\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018}"];
Node_23 [shape=record,label="{23\:\ 0x001a|RETURN\l|return r1.mCurrent\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\> r0 = r1.mCurrent\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|if (r0 == null) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\> r0 = r0.mNext\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|PHI: r0 \l  PHI: (r0v3 androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>) = (r0v2 androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>), (r0v4 androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>) binds: [B:20:0x0015, B:19:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r1.mCurrent = r0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|r0 = null\l}"];
MethodNode[shape=record,label="{public java.util.Map$Entry\<K, V\> androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.next((r1v0 'this' androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x0016 \-\> B:22:0x0018, CROSS_EDGE: B:20:0x0015 \-\> B:21:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: ()Ljava\/util\/Map$Entry\<TK;TV;\>;\lREPLACED_BY: androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.next():java.lang.Object\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_20 -> Node_21;
}

