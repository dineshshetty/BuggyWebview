digraph "CFG forandroidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.supportRemove(Landroidx\/arch\/core\/internal\/SafeIterableMap$Entry;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>) = \l  (r1 I:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions)])\l androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.mCurrent androidx.arch.core.internal.SafeIterableMap$Entry  (LINE:324)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('entry' androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IGET  (r0 I:androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>) = (r0 I:androidx.arch.core.internal.SafeIterableMap$Entry) androidx.arch.core.internal.SafeIterableMap.Entry.mPrevious androidx.arch.core.internal.SafeIterableMap$Entry  (LINE:325)\l0x0006: IPUT  \l  (r0 I:androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>)\l  (r1 I:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions)])\l androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.mCurrent androidx.arch.core.internal.SafeIterableMap$Entry \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000c  (LINE:326)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IPUT  \l  (r0 I:boolean)\l  (r1 I:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions)])\l androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.mBeforeStart boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: RETURN    (LINE:328)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN   A[SYNTHETIC] (LINE:328)\l}"];
MethodNode[shape=record,label="{public void androidx.arch.core.internal.SafeIterableMap.IteratorWithAdditions.supportRemove((r1 'this' I:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions A[D('this' androidx.arch.core.internal.SafeIterableMap\<K, V\>$IteratorWithAdditions), IMMUTABLE_TYPE, THIS]), (r2 I:androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\> A[D('entry' androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000c \-\> B:19:0x000d, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Landroidx\/arch\/core\/internal\/SafeIterableMap$Entry\<TK;TV;\>;)V\lDebug Info:\l  0x0000\-0x000f: r1 'this' Landroidx\/arch\/core\/internal\/SafeIterableMap$IteratorWithAdditions;, signature: Landroidx\/arch\/core\/internal\/SafeIterableMap\<TK;TV;\>.IteratorWithAdditions;\l  0x0000\-0x000f: r2 'entry' Landroidx\/arch\/core\/internal\/SafeIterableMap$Entry;, signature: Landroidx\/arch\/core\/internal\/SafeIterableMap$Entry\<TK;TV;\>;\lMETHOD_OVERRIDE: [androidx.arch.core.internal.SafeIterableMap.SupportRemove.supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry\<K, V\>):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_18 -> Node_19;
Node_21 -> Node_12;
}

