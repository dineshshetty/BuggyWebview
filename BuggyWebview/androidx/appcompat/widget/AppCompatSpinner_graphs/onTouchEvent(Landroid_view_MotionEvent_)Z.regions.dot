digraph "CFG forandroidx.appcompat.widget.AppCompatSpinner.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
subgraph cluster_Region_394141 {
label = "R(2:1|(2:(1:5)|(1:8)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.appcompat.widget.ForwardingListener androidx.appcompat.widget.ForwardingListener r0 = r1.mForwardingListener\l}"];
subgraph cluster_Region_401042773 {
label = "R(2:(1:5)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1203249979 {
label = "IF [B:13:0x0002, B:15:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r0 != null) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|ADDED_TO_REGION\l|if (r0.onTouch(r1, r2) != false) goto L5\l}"];
subgraph cluster_Region_942365544 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_237969745 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|return super.onTouchEvent(r2)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0004}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.AppCompatSpinner.onTouchEvent((r1v0 'this' androidx.appcompat.widget.AppCompatSpinner A[IMMUTABLE_TYPE, THIS]), (r2v0 'event' android.view.MotionEvent A[D('event' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:11:?, CROSS_EDGE: B:13:0x0002 \-\> B:18:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onTouchEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_16 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_18 -> Node_19;
}

