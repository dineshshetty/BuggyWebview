digraph "CFG forandroidx.appcompat.widget.AppCompatSpinner.onMeasure(II)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r3 I:android.widget.Spinner), (r4 I:int A[D('widthMeasureSpec' int)]), (r5 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.Spinner.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:443)\l0x0003: IGET  (r0 I:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup) = (r3 I:androidx.appcompat.widget.AppCompatSpinner) androidx.appcompat.widget.AppCompatSpinner.mPopup androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup  (LINE:445)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r4 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)]\l0x000b: CONST  (r1 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: INVOKE  (r0 I:int) = (r3 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getMeasuredWidth():int A[MD:():int (s)] (LINE:446)\l0x0014: INVOKE  (r1 I:android.widget.SpinnerAdapter) = (r3 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getAdapter():android.widget.SpinnerAdapter A[MD:():android.widget.SpinnerAdapter (s)] (LINE:448)\l0x0018: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r3 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)]\l0x001c: INVOKE  (r1 I:int) = \l  (r3 I:androidx.appcompat.widget.AppCompatSpinner)\l  (r1 I:android.widget.SpinnerAdapter)\l  (r2 I:android.graphics.drawable.Drawable)\l type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.compatMeasureContentWidth(android.widget.SpinnerAdapter, android.graphics.drawable.Drawable):int A[MD:(android.widget.SpinnerAdapter, android.graphics.drawable.Drawable):int (m)]\l0x0020: INVOKE  (r1 I:int) = (r0 I:int A[D('measuredWidth' int)]), (r1 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:447)\l0x0024: INVOKE  (r2 I:int) = (r4 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:449)\l0x0028: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:447)\l0x002c: INVOKE  (r2 I:int) = (r3 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getMeasuredHeight():int A[MD:():int (s)] (LINE:450)\l0x0030: INVOKE  (r3 I:androidx.appcompat.widget.AppCompatSpinner), (r1 I:int), (r2 I:int) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:447)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|RETURN\lORIG_RETURN\l|0x0033: RETURN    (LINE:452)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0033: RETURN   A[SYNTHETIC] (LINE:452)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0033: RETURN   A[SYNTHETIC] (LINE:452)\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.AppCompatSpinner.onMeasure((r3 'this' I:androidx.appcompat.widget.AppCompatSpinner A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:17:0x0033, CROSS_EDGE: B:13:0x0005 \-\> B:17:0x0033\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0033: r0 'measuredWidth' I\l  \-1 \-0x0033: r4 'widthMeasureSpec' I\l  \-1 \-0x0033: r5 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

