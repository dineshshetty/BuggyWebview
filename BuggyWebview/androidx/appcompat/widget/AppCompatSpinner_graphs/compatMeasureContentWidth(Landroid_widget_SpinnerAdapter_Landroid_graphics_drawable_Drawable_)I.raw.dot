digraph "CFG forandroidx.appcompat.widget.AppCompatSpinner.compatMeasureContentWidth(Landroid\/widget\/SpinnerAdapter;Landroid\/graphics\/drawable\/Drawable;)I" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:565)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0001|0x0001: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('adapter' android.widget.SpinnerAdapter)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0004 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:int)  (LINE:566)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:569)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:570)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:571)\l0x0008: INVOKE  (r4 I:int) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getMeasuredWidth():int A[MD:():int (s)] (LINE:573)\l0x000c: INVOKE  (r4 I:int) = (r4 I:int), (r0 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0011: INVOKE  (r5 I:int) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getMeasuredHeight():int A[MD:():int (s)] (LINE:575)\l0x0015: INVOKE  (r5 I:int) = (r5 I:int), (r0 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0019: INVOKE  (r6 I:int) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) type: VIRTUAL call: androidx.appcompat.widget.AppCompatSpinner.getSelectedItemPosition():int A[MD:():int (s)] (LINE:579)\l0x001d: INVOKE  (r6 I:int) = (r0 I:int), (r6 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0021: INVOKE  (r7 I:int) = (r13 I:android.widget.SpinnerAdapter A[D('adapter' android.widget.SpinnerAdapter)]) type: INTERFACE call: android.widget.SpinnerAdapter.getCount():int A[MD:():int (c)] (LINE:580)\l0x0025: ARITH  (r8 I:int) = (r6 I:int A[D('start' int)]) + (15 int) \l0x0027: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x002b: ARITH  (r8 I:int) = (r7 I:int A[D('end' int)]) \- (r6 I:int A[D('start' int)])  (LINE:581)\l0x002d: ARITH  (r9 I:int) = (15 int) \- (r8 I:int A[D('count' int)])  (LINE:582)\l0x002f: ARITH  (r9 I:int) = (r6 I:int A[D('start' int)]) \- (r9 I:int) \l0x0031: INVOKE  (r0 I:int) = (r0 I:int), (r9 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0035: MOVE  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:583)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|LOOP_START\lLOOP:0: B:27:0x0036\-\>B:34:0x0053\l|0x0036: IF  (r6 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char] A[D('end' int)])  \-\> B:38:0x0061 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0038|0x0038: INVOKE  (r9 I:int) = (r13 I:android.widget.SpinnerAdapter A[D('adapter' android.widget.SpinnerAdapter)]), (r6 I:int A[D('i' int)]) type: INTERFACE call: android.widget.SpinnerAdapter.getItemViewType(int):int A[MD:(int):int (c)] (LINE:584)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003c|0x003c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('positionType' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemType' int)])  \-\> B:31:0x0040  (LINE:585)\l}"];
Node_30 [shape=record,label="{30\:\ 0x003e|0x003e: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('itemType' int)]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('positionType' int)])  (LINE:586)\l0x003f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('itemView' android.view.View)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:587)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0040|0x0040: INVOKE  (r2 I:android.view.View A[D('itemView' android.view.View)]) = \l  (r13 I:android.widget.SpinnerAdapter A[D('adapter' android.widget.SpinnerAdapter)])\l  (r6 I:int A[D('i' int)])\l  (r2 I:android.view.View A[D('itemView' android.view.View)])\l  (r12 I:android.view.ViewGroup)\l type: INTERFACE call: android.widget.SpinnerAdapter.getView(int, android.view.View, android.view.ViewGroup):android.view.View A[MD:(int, android.view.View, android.view.ViewGroup):android.view.View (c)] (LINE:589)\l0x0044: INVOKE  (r10 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View A[D('itemView' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:590)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0053 \l}"];
Node_33 [shape=record,label="{33\:\ 0x004a|0x004a: NEW_INSTANCE  (r10 I:android.view.ViewGroup$LayoutParams) =  android.view.ViewGroup$LayoutParams  (LINE:591)\l0x004c: CONST  (r11 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char]) \l0x004d: INVOKE  (r10 I:android.view.ViewGroup$LayoutParams), (r11 I:int), (r11 I:int) type: DIRECT call: android.view.ViewGroup.LayoutParams.\<init\>(int, int):void A[MD:(int, int):void (c)]\l0x0050: INVOKE  (r2 I:android.view.View A[D('itemView' android.view.View)]), (r10 I:android.view.ViewGroup$LayoutParams) type: VIRTUAL call: android.view.View.setLayoutParams(android.view.ViewGroup$LayoutParams):void A[MD:(android.view.ViewGroup$LayoutParams):void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0053|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0053|LOOP_END\lLOOP:0: B:27:0x0036\-\>B:34:0x0053\l|0x0053: INVOKE  \l  (r2 I:android.view.View A[D('itemView' android.view.View)])\l  (r4 I:int A[D('widthMeasureSpec' int)])\l  (r5 I:int A[D('heightMeasureSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:595)\l0x0056: INVOKE  (r10 I:int) = (r2 I:android.view.View A[D('itemView' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:596)\l0x005a: INVOKE  (r1 I:int A[D('width' int)]) = (r1 I:int A[D('width' int)]), (r10 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x005e: ARITH  (r6 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:583)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0053|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0061|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0061|0x0061: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('background' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:?  (LINE:600)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0063|0x0063: IGET  (r6 I:android.graphics.Rect) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) androidx.appcompat.widget.AppCompatSpinner.mTempRect android.graphics.Rect  (LINE:601)\l0x0065: INVOKE  \l  (r14 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l  (r6 I:android.graphics.Rect)\l type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)]\l0x0068: IGET  (r6 I:android.graphics.Rect) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) androidx.appcompat.widget.AppCompatSpinner.mTempRect android.graphics.Rect  (LINE:602)\l0x006a: IGET  (r6 I:int) = (r6 I:android.graphics.Rect) android.graphics.Rect.left int \l0x006c: IGET  (r9 I:android.graphics.Rect) = (r12 I:androidx.appcompat.widget.AppCompatSpinner) androidx.appcompat.widget.AppCompatSpinner.mTempRect android.graphics.Rect \l0x006e: IGET  (r9 I:int) = (r9 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0070: ARITH  (r6 I:int) = (r6 I:int) + (r9 I:int) \l0x0071: ARITH  (r1 I:int) = (r1 I:int A[D('width' int)]) + (r6 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0072|RETURN\lORIG_RETURN\l|0x0072: RETURN  (r1 I:int A[D('width' int)])  (LINE:605)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0072: RETURN  (r1 I:int A[D('width' int)]) A[SYNTHETIC] (LINE:605)\l}"];
MethodNode[shape=record,label="{int androidx.appcompat.widget.AppCompatSpinner.compatMeasureContentWidth((r12 'this' I:androidx.appcompat.widget.AppCompatSpinner A[IMMUTABLE_TYPE, THIS]), (r13 I:android.widget.SpinnerAdapter A[D('adapter' android.widget.SpinnerAdapter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0053 \-\> B:27:0x0036, CROSS_EDGE: B:32:0x0048 \-\> B:34:0x0053, CROSS_EDGE: B:29:0x003c \-\> B:31:0x0040, CROSS_EDGE: B:37:0x0072 \-\> B:22:?, CROSS_EDGE: B:35:0x0061 \-\> B:37:0x0072\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x0035: r6 'start' I\l  0x003c\-0x005e: r9 'positionType' I\l  0x0036\-0x0061: r6 'i' I\l  0x0035\-0x0072: r0 'start' I\l  0x0005\-0x0072: r1 'width' I\l  0x0006\-0x0072: r2 'itemView' Landroid\/view\/View;\l  0x0007\-0x0072: r3 'itemType' I\l  0x0010\-0x0072: r4 'widthMeasureSpec' I\l  0x0019\-0x0072: r5 'heightMeasureSpec' I\l  0x002b\-0x0072: r7 'end' I\l  0x002d\-0x0072: r8 'count' I\l  \-1 \-0x0072: r13 'adapter' Landroid\/widget\/SpinnerAdapter;\l  \-1 \-0x0072: r14 'background' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_40;
Node_33 -> Node_39;
Node_39 -> Node_34;
Node_34 -> Node_27;
Node_40 -> Node_34;
Node_38 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_41;
Node_36 -> Node_37;
Node_37 -> Node_22;
Node_41 -> Node_22;
}

