digraph "CFG forandroidx.appcompat.widget.DrawableUtils.Api18Impl.getOpticalInsets(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/Rect;" {
subgraph cluster_Region_1277413963 {
label = "R(2:(1:(2:6|(1:9)))|15)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2092594787 {
label = "IF [B:21:0x0004, B:23:0x0008] THEN: R(1:(2:6|(1:9))) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 29) goto L3\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|ADDED_TO_REGION\l|if (androidx.appcompat.widget.DrawableUtils.Api18Impl.sReflectionSuccessful != false) goto L5\l}"];
subgraph cluster_Region_316571185 {
label = "R(1:(2:6|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1398899048 {
label = "Try: R(2:6|(1:9)) catches: R(0), R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_2136619874 {
label = "R(2:6|(1:9))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000a|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:24:0x000a, B:26:0x0015), top: B:34:0x000a \}\lCatch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036\l|java.lang.Object java.lang.Object r0 = androidx.appcompat.widget.DrawableUtils.Api18Impl.sGetOpticalInsets.invoke(r6, new java.lang.Object[0])     \/\/ Catch: java.lang.reflect.InvocationTargetException \-\> L34 java.lang.IllegalAccessException \-\> L36\l}"];
subgraph cluster_IfRegion_1518013724 {
label = "IF [B:25:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0013|if (r0 != null) goto L8\l}"];
subgraph cluster_Region_2052031292 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0032|RETURN\l|return new android.graphics.Rect(androidx.appcompat.widget.DrawableUtils.Api18Impl.sLeft.getInt(r0), androidx.appcompat.widget.DrawableUtils.Api18Impl.sTop.getInt(r0), androidx.appcompat.widget.DrawableUtils.Api18Impl.sRight.getInt(r0), androidx.appcompat.widget.DrawableUtils.Api18Impl.sBottom.getInt(r0))\l}"];
}
}
}
subgraph cluster_Region_29518045 {
label = "R(0) | ExcHandler: IllegalAccessException \-\> 0x0036\l";
node [shape=record,color=blue];
}
subgraph cluster_Region_786702312 {
label = "R(0) | ExcHandler: InvocationTargetException \-\> 0x0034\l";
node [shape=record,color=blue];
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x0039|RETURN\l|return androidx.appcompat.widget.DrawableUtils.INSETS_NONE\l}"];
}
subgraph cluster_Region_29518045 {
label = "R(0) | ExcHandler: IllegalAccessException \-\> 0x0036\l";
node [shape=record,color=blue];
}
subgraph cluster_Region_786702312 {
label = "R(0) | ExcHandler: InvocationTargetException \-\> 0x0034\l";
node [shape=record,color=blue];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0006}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0015|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:24:0x000a, B:26:0x0015), top: B:34:0x000a \}\lCatch: InvocationTargetException \-\> 0x0034, IllegalAccessException \-\> 0x0036\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0036|ExcHandler: IllegalAccessException \-\> 0x0036\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0034|ExcHandler: InvocationTargetException \-\> 0x0034\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0037}"];
MethodNode[shape=record,label="{static android.graphics.Rect androidx.appcompat.widget.DrawableUtils.Api18Impl.getOpticalInsets((r6v0 'drawable' android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0032 \-\> B:19:?, CROSS_EDGE: B:31:0x0036 \-\> B:32:0x0037, CROSS_EDGE: B:29:0x0034 \-\> B:32:0x0037, CROSS_EDGE: B:25:0x0013 \-\> B:32:0x0037, CROSS_EDGE: B:34:0x000a \-\> B:31:0x0036, CROSS_EDGE: B:34:0x000a \-\> B:29:0x0034, CROSS_EDGE: B:21:0x0004 \-\> B:32:0x0037\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x0036, InvocationTargetException \-\> 0x0034, blocks: (B:24:0x000a, B:26:0x0015), top: B:34:0x000a \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_32[style=dashed];
Node_23 -> Node_32[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_32[style=dashed];
Node_27 -> Node_19;
Node_33 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_34 -> Node_24;
Node_34 -> Node_31;
Node_34 -> Node_29;
Node_26 -> Node_27;
Node_26 -> Node_35;
Node_35 -> Node_31;
Node_35 -> Node_29;
Node_31 -> Node_32;
Node_29 -> Node_32;
Node_32 -> Node_33;
}

