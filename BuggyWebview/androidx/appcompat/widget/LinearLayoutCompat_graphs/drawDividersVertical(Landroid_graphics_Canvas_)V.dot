digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical(Landroid\/graphics\/Canvas;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|int r0 = getVirtualChildCount()\lr1 = 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x0005|LOOP_START\lLOOP:0: B:29:0x0005\-\>B:37:0x002e\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v5 'i' int) binds: [B:28:0x0000, B:37:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L15\l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|android.view.View r2 = getVirtualChildAt(r1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000b|if (r2 == null) goto L14\l}"];
Node_32 [shape=record,label="{32\:\ 0x000d}"];
Node_33 [shape=record,label="{33\:\ 0x0013|if (r2.getVisibility() == 8) goto L13\l}"];
Node_34 [shape=record,label="{34\:\ 0x0015}"];
Node_35 [shape=record,label="{35\:\ 0x0019|if (hasDividerBeforeChildAt(r1) == false) goto L12\l}"];
Node_36 [shape=record,label="{36\:\ 0x001b|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams r3 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r2.getLayoutParams()\lint r4 = (r2.getTop() \- r3.topMargin) \- r6.mDividerHeight\ldrawHorizontalDivider(r7, r4)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|LOOP_END\lLOOP:0: B:29:0x0005\-\>B:37:0x002e\l|int r1 = r1 + 1\l}"];
Node_50 [shape=record,label="{50\:\ 0x002e|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0031}"];
Node_39 [shape=record,label="{39\:\ 0x0035|if (hasDividerBeforeChildAt(r0) == false) goto L25\l}"];
Node_40 [shape=record,label="{40\:\ 0x0037|android.view.View r1 = getVirtualChildAt(r0 + (\-1))\l}"];
Node_41 [shape=record,label="{41\:\ 0x003e|if (r1 != null) goto L24\l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|int r3 = (getHeight() \- getPaddingBottom()) \- r6.mDividerHeight\l}"];
Node_44 [shape=record,label="{44\:\ 0x005c|PHI: r3 \l  PHI: (r3v3 'bottom' int) = (r3v2 'bottom' int), (r3v6 'bottom' int) binds: [B:43:0x004d, B:42:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|drawHorizontalDivider(r7, r3)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005f|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x004d|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams r3 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r1.getLayoutParams()\lint r2 = r1.getBottom() + r3.bottomMargin\lr3 = r2\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.LinearLayoutCompat.drawDividersVertical((r6v0 'this' androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r7v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:37:0x002e \-\> B:29:0x0005, CROSS_EDGE: B:35:0x0019 \-\> B:37:0x002e, CROSS_EDGE: B:33:0x0013 \-\> B:37:0x002e, CROSS_EDGE: B:31:0x000b \-\> B:37:0x002e, CROSS_EDGE: B:43:0x004d \-\> B:44:0x005c, CROSS_EDGE: B:39:0x0035 \-\> B:45:0x005f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_46;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_48;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_49;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_50;
Node_36 -> Node_47;
Node_47 -> Node_37;
Node_37 -> Node_29;
Node_50 -> Node_37;
Node_49 -> Node_37;
Node_48 -> Node_37;
Node_46 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_51;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_43 -> Node_44;
Node_51 -> Node_27;
}

