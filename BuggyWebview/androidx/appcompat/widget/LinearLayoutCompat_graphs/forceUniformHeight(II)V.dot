digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.forceUniformHeight(II)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = android.view.View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr1 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|LOOP_START\lLOOP:0: B:18:0x000b\-\>B:24:0x0038\lPHI: r1 \l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:17:0x0000, B:24:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r12) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|android.view.View r8 = getVirtualChildAt(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0017|if (r8.getVisibility() == 8) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0019|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams r9 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r8.getLayoutParams()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|if (r9.height != (\-1)) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0025|int r10 = r9.width\lr9.width = r8.getMeasuredWidth()\lmeasureChildWithMargins(r8, r13, 0, r0, 0)\lr9.width = r10\l}"];
Node_27 [shape=record,label="{27\:\ 0x0038|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|LOOP_END\lLOOP:0: B:18:0x000b\-\>B:24:0x0038\l|int r1 = r1 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0038|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0038|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x003b|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.LinearLayoutCompat.forceUniformHeight((r11v0 'this' androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r12v0 'count' int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x0038 \-\> B:18:0x000b, CROSS_EDGE: B:22:0x0023 \-\> B:24:0x0038, CROSS_EDGE: B:20:0x0017 \-\> B:24:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_27;
Node_27 -> Node_24;
Node_24 -> Node_18;
Node_29 -> Node_24;
Node_28 -> Node_24;
Node_26 -> Node_25;
Node_25 -> Node_16;
}

