digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.setBaselineAlignedChildIndex(I)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:16:0x000b  (LINE:511)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r3 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildCount():int A[MD:():int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char])  \-\> B:16:0x000b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IPUT  (r4 I:int A[D('i' int)]), (r3 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mBaselineAlignedChildIndex int  (LINE:515)\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:516)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:512)\l0x000d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"base aligned child index out of range (0, \" \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r2 I:int) = (r3 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildCount():int A[MD:():int (c)] (LINE:513)\l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001e: CONST_STR  (r2 I:java.lang.String) =  \")\" \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0023: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0027: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.LinearLayoutCompat.setBaselineAlignedChildIndex((r3 'this' I:androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x002a \-\> B:10:?, CROSS_EDGE: B:11:0x0000 \-\> B:16:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002a: r4 'i' I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_10;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

