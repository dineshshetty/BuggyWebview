digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.getBaseline()I" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mBaselineAlignedChildIndex int  (LINE:445)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:33:0x0009 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r6 I:android.view.ViewGroup) type: SUPER call: android.view.ViewGroup.getBaseline():int A[MD:():int (c)] (LINE:446)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|RETURN\l|0x0008: RETURN  (r0 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildCount():int A[MD:():int (c)] (LINE:449)\l0x000d: IGET  (r1 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mBaselineAlignedChildIndex int \l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:52:0x0073 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|0x0011: INVOKE  (r0 I:android.view.View) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat), (r1 I:int) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:454)\l0x0015: INVOKE  (r1 I:int) = (r0 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBaseline():int A[MD:():int (c)] (LINE:455)\l0x0019: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:457)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childBaseline' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0029 \l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: IGET  (r3 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mBaselineAlignedChildIndex int  (LINE:458)\l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|0x001e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0021 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0020|RETURN\l|0x0020: RETURN  (r2 I:int)  (LINE:460)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021|0x0021: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:464)\l0x0023: CONST_STR  (r3 I:java.lang.String) =  \"mBaselineAlignedChildIndex of LinearLayout points to a View that doesn't know how to get its baseline.\" \l0x0025: INVOKE  (r2 I:java.lang.RuntimeException), (r3 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0028|0x0028: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|0x0029: IGET  (r2 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mBaselineChildTop int  (LINE:474)\l0x002b: IGET  (r3 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mOrientation int  (LINE:476)\l0x002d: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|0x002e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0068 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0030|0x0030: IGET  (r3 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mGravity int  (LINE:477)\l0x0032: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) & (112(0x70, float:1.57E\-43) ??[int, float, short, byte, char]) \l0x0034: CONST  (r4 I:??[int, float, short, byte, char]) = (48 ??[int, float, short, byte, char])  (LINE:478)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|0x0036: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('majorGravity' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0068 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|0x0038: SWITCH  (r3 I:?? A[D('majorGravity' int)])\l case 16: goto B:49:0x004f\l case 80: goto B:48:0x003c\l default: goto B:50:0x0068  (LINE:479)\l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|0x003c: INVOKE  (r4 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getBottom():int A[MD:():int (s)] (LINE:481)\l0x0040: INVOKE  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getTop():int A[MD:():int (s)]\l0x0044: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0045: INVOKE  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getPaddingBottom():int A[MD:():int (s)]\l0x0049: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x004a: IGET  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mTotalLength int \l0x004c: ARITH  (r2 I:int A[D('childTop' int)]) = (r4 I:int) \- (r5 I:int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004f|0x004f: INVOKE  (r4 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getBottom():int A[MD:():int (s)] (LINE:485)\l0x0053: INVOKE  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getTop():int A[MD:():int (s)]\l0x0057: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0058: INVOKE  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getPaddingTop():int A[MD:():int (s)]\l0x005c: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x005d: INVOKE  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getPaddingBottom():int A[MD:():int (s)]\l0x0061: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0062: IGET  (r5 I:int) = (r6 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mTotalLength int \l0x0064: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0065: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x0067: ARITH  (r2 I:int) = (r2 I:int A[D('childTop' int)]) + (r4 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0068|0x0068: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r0 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:492)\l0x006c: CHECK_CAST (r3 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) = (androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) (r3 I:??[OBJECT, ARRAY]) \l0x006e: IGET  (r4 I:int) = \l  (r3 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)])\l androidx.appcompat.widget.LinearLayoutCompat.LayoutParams.topMargin int  (LINE:493)\l0x0070: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int A[D('childTop' int)]) \l0x0071: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int A[D('childBaseline' int)]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0072|RETURN\l|0x0072: RETURN  (r4 I:int) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0073|0x0073: NEW_INSTANCE  (r0 I:java.lang.RuntimeException A[D('child' android.view.View)]) =  java.lang.RuntimeException  (LINE:450)\l0x0075: CONST_STR  (r1 I:java.lang.String) =  \"mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.\" \l0x0077: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x007a|0x007a: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.widget.LinearLayoutCompat.getBaseline((r6 'this' I:androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:39:0x0020 \-\> B:28:?, CROSS_EDGE: B:41:0x0028 \-\> B:28:?, CROSS_EDGE: B:51:0x0072 \-\> B:28:?, CROSS_EDGE: B:49:0x004f \-\> B:50:0x0068, CROSS_EDGE: B:46:0x0038 \-\> B:50:0x0068, CROSS_EDGE: B:45:0x0036 \-\> B:50:0x0068, CROSS_EDGE: B:43:0x002e \-\> B:50:0x0068, CROSS_EDGE: B:53:0x007a \-\> B:28:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0034\-0x0068: r3 'majorGravity' I\l  0x0015\-0x0073: r0 'child' Landroid\/view\/View;\l  0x0019\-0x0073: r1 'childBaseline' I\l  0x002b\-0x0073: r2 'childTop' I\l  0x006e\-0x0073: r3 'lp' Landroidx\/appcompat\/widget\/LinearLayoutCompat$LayoutParams;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.getBaseline():int\}]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_52;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_28;
Node_40 -> Node_41;
Node_41 -> Node_28;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_50;
Node_46 -> Node_48;
Node_46 -> Node_49;
Node_46 -> Node_50;
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_28;
Node_52 -> Node_53;
Node_53 -> Node_28;
}

