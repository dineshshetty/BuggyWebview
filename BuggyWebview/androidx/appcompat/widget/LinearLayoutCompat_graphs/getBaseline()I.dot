digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.getBaseline()I" {
Node_27 [shape=record,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0000}"];
Node_30 [shape=record,label="{30\:\ 0x0002|if (r6.mBaselineAlignedChildIndex \>= 0) goto L6\l}"];
Node_31 [shape=record,label="{31\:\ 0x0004}"];
Node_32 [shape=record,label="{32\:\ 0x0008|RETURN\l|return super.getBaseline()\l}"];
Node_28 [shape=record,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|int r0 = getChildCount()\lint r1 = r6.mBaselineAlignedChildIndex\l}"];
Node_34 [shape=record,label="{34\:\ 0x000f|if (r0 \<= r1) goto L24\l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|android.view.View r0 = getChildAt(r1)\lint r1 = r0.getBaseline()\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|if (r1 != (\-1)) goto L15\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c}"];
Node_38 [shape=record,label="{38\:\ 0x001e|if (r6.mBaselineAlignedChildIndex != 0) goto L13\l}"];
Node_39 [shape=record,label="{39\:\ 0x0020|RETURN\l|return \-1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0021}"];
Node_41 [shape=record,label="{41\:\ 0x0028|throw new java.lang.RuntimeException(\"mBaselineAlignedChildIndex of LinearLayout points to a View that doesn't know how to get its baseline.\")\l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|int r2 = r6.mBaselineChildTop\l}"];
Node_43 [shape=record,label="{43\:\ 0x002e|if (r6.mOrientation != 1) goto L22\l}"];
Node_44 [shape=record,label="{44\:\ 0x0030|r3 = r6.mGravity & 112\l}"];
Node_45 [shape=record,label="{45\:\ 0x0036|if (r3 == 48) goto L22\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|switch(r3) \{\l    case 16: goto L21;\l    case 80: goto L20;\l    default: goto L22;\l\}\l}"];
Node_48 [shape=record,label="{48\:\ 0x003c|int r2 = ((getBottom() \- getTop()) \- getPaddingBottom()) \- r6.mTotalLength\l}"];
Node_49 [shape=record,label="{49\:\ 0x004f|int r2 = r2 + (((((getBottom() \- getTop()) \- getPaddingTop()) \- getPaddingBottom()) \- r6.mTotalLength) \/ 2)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0068|PHI: r2 \l  PHI: (r2v2 'childTop' int) = (r2v1 'childTop' int), (r2v1 'childTop' int), (r2v1 'childTop' int), (r2v3 'childTop' int), (r2v4 'childTop' int) binds: [B:43:0x002e, B:45:0x0036, B:46:0x0038, B:49:0x004f, B:48:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams r3 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r0.getLayoutParams()\l}"];
Node_51 [shape=record,label="{51\:\ 0x0072|RETURN\l|return (r3.topMargin + r2) + r1\l}"];
Node_52 [shape=record,label="{52\:\ 0x0073}"];
Node_53 [shape=record,label="{53\:\ 0x007a|throw new java.lang.RuntimeException(\"mBaselineAlignedChildIndex of LinearLayout set to an index that is out of bounds.\")\l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.widget.LinearLayoutCompat.getBaseline((r6v0 'this' androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:39:0x0020 \-\> B:28:?, CROSS_EDGE: B:41:0x0028 \-\> B:28:?, CROSS_EDGE: B:51:0x0072 \-\> B:28:?, CROSS_EDGE: B:49:0x004f \-\> B:50:0x0068, CROSS_EDGE: B:46:0x0038 \-\> B:50:0x0068, CROSS_EDGE: B:45:0x0036 \-\> B:50:0x0068, CROSS_EDGE: B:43:0x002e \-\> B:50:0x0068, CROSS_EDGE: B:53:0x007a \-\> B:28:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.getBaseline():int\}]\l}"];
MethodNode -> Node_27;Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_52;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_28;
Node_40 -> Node_41;
Node_41 -> Node_28;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_50;
Node_46 -> Node_48;
Node_46 -> Node_49;
Node_46 -> Node_50;
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_28;
Node_52 -> Node_53;
Node_53 -> Node_28;
}

