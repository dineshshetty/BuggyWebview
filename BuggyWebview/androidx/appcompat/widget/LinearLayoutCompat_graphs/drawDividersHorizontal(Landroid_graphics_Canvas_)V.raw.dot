digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(Landroid\/graphics\/Canvas;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildCount():int A[MD:():int (m)] (LINE:342)\l0x0004: INVOKE  (r1 I:boolean) = (r7 I:android.view.View) type: STATIC call: androidx.appcompat.widget.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:343)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:344)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0009|LOOP_START\lLOOP:0: B:38:0x0009\-\>B:50:0x003c\l|0x0009: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:64:0x003f \l}"];
Node_39 [shape=record,label="{39\:\ 0x000b|0x000b: INVOKE  (r3 I:android.view.View) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):android.view.View A[MD:(int):android.view.View (m)] (LINE:345)\l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|0x000f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x003c  (LINE:347)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|0x0011: INVOKE  (r4 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l0x0015: CONST  (r5 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0017|0x0017: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x003c \l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|0x0019: INVOKE  (r4 I:boolean) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.hasDividerBeforeChildAt(int):boolean A[MD:(int):boolean (m)] (LINE:348)\l}"];
Node_44 [shape=record,label="{44\:\ 0x001d|0x001d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x003c \l}"];
Node_45 [shape=record,label="{45\:\ 0x001f|0x001f: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:349)\l0x0023: CHECK_CAST (r4 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) = (androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLayoutRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x002f  (LINE:351)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0027|0x0027: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:352)\l0x002b: IGET  (r6 I:int) = \l  (r4 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)])\l androidx.appcompat.widget.LinearLayoutCompat.LayoutParams.rightMargin int \l0x002d: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0039|0x0039: INVOKE  \l  (r7 I:androidx.appcompat.widget.LinearLayoutCompat)\l  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r5 I:int A[D('position' int)])\l type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.drawVerticalDivider(android.graphics.Canvas, int):void A[MD:(android.graphics.Canvas, int):void (m)] (LINE:356)\l}"];
Node_65 [shape=record,label="{65\:\ 0x003c|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|LOOP_END\lLOOP:0: B:38:0x0009\-\>B:50:0x003c\l|0x003c: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:344)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002f|0x002f: INVOKE  (r5 I:int) = (r3 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:354)\l0x0033: IGET  (r6 I:int) = \l  (r4 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)])\l androidx.appcompat.widget.LinearLayoutCompat.LayoutParams.leftMargin int \l0x0035: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x0036: IGET  (r6 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mDividerWidth int \l0x0038: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l}"];
Node_68 [shape=record,label="{68\:\ 0x003c|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x003c|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x003c|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x003f|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x003f|0x003f: INVOKE  (r2 I:boolean) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat), (r0 I:int A[D('count' int)]) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.hasDividerBeforeChildAt(int):boolean A[MD:(int):boolean (m)] (LINE:361)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0043|0x0043: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:? \l}"];
Node_53 [shape=record,label="{53\:\ 0x0045|0x0045: ARITH  (r2 I:int) = (r0 I:int A[D('count' int)]) + (\-1 int)  (LINE:362)\l0x0047: INVOKE  (r2 I:android.view.View) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat), (r2 I:int) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getVirtualChildAt(int):android.view.View A[MD:(int):android.view.View (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x004b|0x004b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0061  (LINE:364)\l}"];
Node_55 [shape=record,label="{55\:\ 0x004d|0x004d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLayoutRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0054  (LINE:365)\l}"];
Node_56 [shape=record,label="{56\:\ 0x004f|0x004f: INVOKE  (r3 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getPaddingLeft():int A[MD:():int (s)] (LINE:366)\l}"];
Node_62 [shape=record,label="{62\:\ 0x007d|0x007d: INVOKE  \l  (r7 I:androidx.appcompat.widget.LinearLayoutCompat)\l  (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r3 I:int A[D('position' int)])\l type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.drawVerticalDivider(android.graphics.Canvas, int):void A[MD:(android.graphics.Canvas, int):void (m)] (LINE:378)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0080|RETURN\lORIG_RETURN\l|0x0080: RETURN    (LINE:380)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ 0x0054|0x0054: INVOKE  (r3 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getWidth():int A[MD:():int (s)] (LINE:368)\l0x0058: INVOKE  (r4 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getPaddingRight():int A[MD:():int (s)]\l0x005c: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x005d: IGET  (r4 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mDividerWidth int \l0x005f: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0061|0x0061: INVOKE  (r3 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:371)\l0x0065: CHECK_CAST (r3 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) = (androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0067|0x0067: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLayoutRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0075  (LINE:372)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0069|0x0069: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:373)\l0x006d: IGET  (r5 I:int) = \l  (r3 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)])\l androidx.appcompat.widget.LinearLayoutCompat.LayoutParams.leftMargin int \l0x006f: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0070: IGET  (r5 I:int) = (r7 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mDividerWidth int \l0x0072: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0073: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0075|0x0075: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:375)\l0x0079: IGET  (r5 I:int) = \l  (r3 I:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)])\l androidx.appcompat.widget.LinearLayoutCompat.LayoutParams.rightMargin int \l0x007b: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x007c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lp' androidx.appcompat.widget.LinearLayoutCompat$LayoutParams)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|0x0080: RETURN   A[SYNTHETIC] (LINE:380)\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal((r7 'this' I:androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r8 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:50:0x003c \-\> B:38:0x0009, CROSS_EDGE: B:48:0x002f \-\> B:49:0x0039, CROSS_EDGE: B:44:0x001d \-\> B:50:0x003c, CROSS_EDGE: B:42:0x0017 \-\> B:50:0x003c, CROSS_EDGE: B:40:0x000f \-\> B:50:0x003c, CROSS_EDGE: B:57:0x0054 \-\> B:62:0x007d, CROSS_EDGE: B:60:0x0069 \-\> B:62:0x007d, CROSS_EDGE: B:61:0x0075 \-\> B:62:0x007d, CROSS_EDGE: B:52:0x0043 \-\> B:63:0x0080\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x002f: r5 'position' I\l  0x000f\-0x003c: r3 'child' Landroid\/view\/View;\l  0x0025\-0x003c: r4 'lp' Landroidx\/appcompat\/widget\/LinearLayoutCompat$LayoutParams;\l  0x0039\-0x003c: r5 'position' I\l  0x0009\-0x003f: r2 'i' I\l  0x0053\-0x0054: r3 'position' I\l  0x0060\-0x0061: r3 'position' I\l  0x0074\-0x0075: r4 'position' I\l  0x0067\-0x007d: r3 'lp' Landroidx\/appcompat\/widget\/LinearLayoutCompat$LayoutParams;\l  0x004b\-0x0080: r2 'child' Landroid\/view\/View;\l  0x007d\-0x0080: r3 'position' I\l  0x0004\-0x0080: r0 'count' I\l  0x0008\-0x0080: r1 'isLayoutRtl' Z\l  \-1 \-0x0080: r8 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_64;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_66;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_67;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_68;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_65;
Node_65 -> Node_50;
Node_50 -> Node_38;
Node_48 -> Node_49;
Node_68 -> Node_50;
Node_67 -> Node_50;
Node_66 -> Node_50;
Node_64 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_69;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_36;
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_69 -> Node_36;
}

