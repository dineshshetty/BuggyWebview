digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_1959609807 {
label = "R(3:1|(3:3|(3:9|(1:11)(1:15)|12)|14)|(1:(3:22|(1:(1:25)(1:29))(2:30|(1:32)(1:33))|26))) | DECL_VAR: int position, int position\l";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0000|int int r0 = getVirtualChildCount()\lboolean boolean r1 = androidx.appcompat.widget.ViewUtils.isLayoutRtl(r7)\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_840107879 {
label = "LOOP:0: (3:3|(3:9|(1:11)(1:15)|12)|14)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0009|LOOP_START\lLOOP:0: B:38:0x0009\-\>B:50:0x003c\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v5 'i' int) binds: [B:37:0x0000, B:50:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r0) goto L3\l}"];
subgraph cluster_Region_335902918 {
label = "R(3:3|(3:9|(1:11)(1:15)|12)|14)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x000b|android.view.View android.view.View r3 = getVirtualChildAt(r2)\l}"];
subgraph cluster_IfRegion_1825416962 {
label = "IF [B:40:0x000f, B:42:0x0017, B:44:0x001d] THEN: R(3:9|(1:11)(1:15)|12) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x000f|if (r3 != null) goto L5\l}"];
Node_42 [shape=record,label="{42\:\ 0x0017|ADDED_TO_REGION\l|if (r3.getVisibility() != 8) goto L7\l}"];
Node_44 [shape=record,label="{44\:\ 0x001d|ADDED_TO_REGION\l|if (hasDividerBeforeChildAt(r2) != false) goto L9\l}"];
subgraph cluster_Region_220560631 {
label = "R(3:9|(1:11)(1:15)|12)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x001f|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams androidx.appcompat.widget.LinearLayoutCompat.LayoutParams r4 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r3.getLayoutParams()\l}"];
subgraph cluster_IfRegion_354264489 {
label = "IF [B:46:0x0025] THEN: R(1:11) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0025|if (r1 != false) goto L11\l}"];
subgraph cluster_Region_969226289 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x0027|int r5 = r3.getRight() + r4.rightMargin\l}"];
}
subgraph cluster_Region_214877961 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x002f|int int r5 = r3.getLeft()\lint r5 = (r5 \- r4.leftMargin) \- r7.mDividerWidth\l}"];
}
}
Node_49 [shape=record,label="{49\:\ 0x0039|PHI: r5 \l  PHI: (r5v7 'position' int) = (r5v6 'position' int), (r5v9 'position' int) binds: [B:48:0x002f, B:47:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|drawVerticalDivider(r8, r5)\l}"];
}
}
Node_50 [shape=record,label="{50\:\ 0x003c|LOOP_END\lADDED_TO_REGION\lLOOP:0: B:38:0x0009\-\>B:50:0x003c\l|r2++\l}"];
}
}
subgraph cluster_Region_204386152 {
label = "R(1:(3:22|(1:(1:25)(1:29))(2:30|(1:32)(1:33))|26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1828323114 {
label = "IF [B:52:0x0043] THEN: R(3:22|(1:(1:25)(1:29))(2:30|(1:32)(1:33))|26) ELSE: null";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0043|if (hasDividerBeforeChildAt(r0) != false) goto L22\l}"];
subgraph cluster_Region_199260711 {
label = "R(3:22|(1:(1:25)(1:29))(2:30|(1:32)(1:33))|26)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0045|android.view.View android.view.View r2 = getVirtualChildAt(r0 \- 1)\l}"];
subgraph cluster_IfRegion_781354985 {
label = "IF [B:54:0x004b] THEN: R(1:(1:25)(1:29)) ELSE: R(2:30|(1:32)(1:33))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x004b|if (r2 == null) goto L24\l}"];
subgraph cluster_Region_987181822 {
label = "R(1:(1:25)(1:29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1067429970 {
label = "IF [B:55:0x004d] THEN: R(1:25) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x004d|if (r1 != false) goto L25\l}"];
subgraph cluster_Region_451557839 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x004f|int r3 = getPaddingLeft()\l}"];
}
subgraph cluster_Region_1443657286 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0054|int int r3 = getWidth()\lint r3 = (r3 \- getPaddingRight()) \- r7.mDividerWidth\l}"];
}
}
}
subgraph cluster_Region_1377027895 {
label = "R(2:30|(1:32)(1:33))";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0061|androidx.appcompat.widget.LinearLayoutCompat$LayoutParams androidx.appcompat.widget.LinearLayoutCompat.LayoutParams r3 = (androidx.appcompat.widget.LinearLayoutCompat.LayoutParams) r2.getLayoutParams()\l}"];
subgraph cluster_IfRegion_473696292 {
label = "IF [B:59:0x0067] THEN: R(1:32) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0067|if (r1 != false) goto L32\l}"];
subgraph cluster_Region_1844397819 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0069|r3 = (r2.getLeft() \- r3.leftMargin) \- r7.mDividerWidth\l}"];
}
subgraph cluster_Region_1822099955 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0075|int int r4 = r2.getRight()\lr3 = r4 + r3.rightMargin\l}"];
}
}
}
}
Node_62 [shape=record,label="{62\:\ 0x007d|PHI: r3 \l  PHI: (r3v4 'position' int) = (r3v2 'position' int), (r3v3 'position' int), (r3v7 'position' int), (r3v8 'position' int) binds: [B:61:0x0075, B:60:0x0069, B:57:0x0054, B:56:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|drawVerticalDivider(r8, r3)\l}"];
}
}
}
}
Node_35 [shape=record,color=red,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0011}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0019}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x003c|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x003c|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x003c|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x003c|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x003f|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x003f}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0080|ORIG_RETURN\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_69 [shape=record,color=red,label="{69\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.LinearLayoutCompat.drawDividersHorizontal((r7v0 'this' androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r8v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:50:0x003c \-\> B:38:0x0009, CROSS_EDGE: B:48:0x002f \-\> B:49:0x0039, CROSS_EDGE: B:44:0x001d \-\> B:50:0x003c, CROSS_EDGE: B:42:0x0017 \-\> B:50:0x003c, CROSS_EDGE: B:40:0x000f \-\> B:50:0x003c, CROSS_EDGE: B:57:0x0054 \-\> B:62:0x007d, CROSS_EDGE: B:60:0x0069 \-\> B:62:0x007d, CROSS_EDGE: B:61:0x0075 \-\> B:62:0x007d, CROSS_EDGE: B:52:0x0043 \-\> B:63:0x0080\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_35;Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_64[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_66[style=dashed];
Node_42 -> Node_43;
Node_42 -> Node_67[style=dashed];
Node_44 -> Node_45;
Node_44 -> Node_68[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_65;
Node_50 -> Node_38;
Node_52 -> Node_53;
Node_52 -> Node_69[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_54 -> Node_58[style=dashed];
Node_55 -> Node_56;
Node_55 -> Node_57[style=dashed];
Node_56 -> Node_62;
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_59 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_35 -> Node_37;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_65 -> Node_50;
Node_68 -> Node_50;
Node_67 -> Node_50;
Node_66 -> Node_50;
Node_64 -> Node_51;
Node_51 -> Node_52;
Node_63 -> Node_36;
Node_69 -> Node_36;
}

