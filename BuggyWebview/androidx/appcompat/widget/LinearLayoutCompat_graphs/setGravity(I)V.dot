digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.setGravity(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r1.mGravity == r2) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if ((8388615 & r2) != 0) goto L6\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|r2 = r2 \| androidx.core.view.GravityCompat.START\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|PHI: r2 \l  PHI: (r2v1 'gravity' int) = (r2v0 'gravity' int), (r2v4 'gravity' int) binds: [B:18:0x0008, B:19:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|if ((r2 & 112) != 0) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|r2 = r2 \| 48\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|PHI: r2 \l  PHI: (r2v2 'gravity' int) = (r2v1 'gravity' int), (r2v3 'gravity' int) binds: [B:21:0x0010, B:22:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r1.mGravity = r2\lrequestLayout()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.LinearLayoutCompat.setGravity((r1v0 'this' androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r2v0 'gravity' int A[D('gravity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0010 \-\> B:23:0x0014, CROSS_EDGE: B:18:0x0008 \-\> B:20:0x000e, CROSS_EDGE: B:16:0x0002 \-\> B:24:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

