digraph "CFG forandroidx.appcompat.widget.LinearLayoutCompat.hasDividerBeforeChildAt(I)Z" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:590)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x000b \l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: IGET  (r2 I:int) = (r4 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mShowDividers int  (LINE:591)\l0x0006: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0007|0x0007: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:? \l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|RETURN\lORIG_RETURN\l|0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: RETURN  (r0 I:boolean) \l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_37 [shape=record,label="{37\:\ 0x000b|0x000b: INVOKE  (r2 I:int) = (r4 I:androidx.appcompat.widget.LinearLayoutCompat) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildCount():int A[MD:():int (c)] (LINE:592)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childIndex' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0019 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0011|0x0011: IGET  (r2 I:int) = (r4 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mShowDividers int  (LINE:593)\l0x0013: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (4 ??[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:? \l}"];
Node_41 [shape=record,label="{41\:\ 0x0017|RETURN\lORIG_RETURN\l|0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0018: RETURN  (r0 I:boolean) \l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|0x0019: IGET  (r1 I:int) = (r4 I:androidx.appcompat.widget.LinearLayoutCompat) androidx.appcompat.widget.LinearLayoutCompat.mShowDividers int  (LINE:594)\l0x001b: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) & (2 ??[int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0036 \l}"];
Node_45 [shape=record,label="{45\:\ 0x001f|0x001f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:595)\l0x0020: ARITH  (r1 I:int) = (r5 I:int A[D('childIndex' int)]) + (\-1 int)  (LINE:596)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|LOOP_START\lLOOP:0: B:46:0x0022\-\>B:50:0x0032\l|0x0022: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:53:0x0035 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0024|0x0024: INVOKE  (r2 I:android.view.View) = (r4 I:androidx.appcompat.widget.LinearLayoutCompat), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.LinearLayoutCompat.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:597)\l0x0028: INVOKE  (r2 I:int) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l0x002c: CONST  (r3 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|0x002e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0032 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0032|LOOP_END\lLOOP:0: B:46:0x0022\-\>B:50:0x0032\l|0x0032: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (\-1 int)  (LINE:596)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0030|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hasVisibleViewBefore' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:598)\l0x0035: RETURN  (r0 I:boolean A[D('hasVisibleViewBefore' boolean)])  (LINE:602)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0035|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN  (r0 I:boolean A[D('hasVisibleViewBefore' boolean)]) A[SYNTHETIC] (LINE:602)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0036|RETURN\l|0x0036: RETURN  (r0 I:boolean A[D('hasVisibleViewBefore' boolean)])  (LINE:604)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.LinearLayoutCompat.hasDividerBeforeChildAt((r4 'this' I:androidx.appcompat.widget.LinearLayoutCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('childIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0007 \-\> B:36:0x000a, CROSS_EDGE: B:42:0x0018 \-\> B:30:?, CROSS_EDGE: B:40:0x0015 \-\> B:42:0x0018, CROSS_EDGE: B:51:0x0035 \-\> B:30:?, BACK_EDGE: B:50:0x0032 \-\> B:46:0x0022, CROSS_EDGE: B:46:0x0022 \-\> B:51:0x0035, CROSS_EDGE: B:52:0x0036 \-\> B:30:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0035: r1 'i' I\l  0x0020\-0x0036: r0 'hasVisibleViewBefore' Z\l  \-1 \-0x0036: r5 'childIndex' I\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_55;
Node_35 -> Node_30;
Node_55 -> Node_30;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_56;
Node_41 -> Node_30;
Node_56 -> Node_30;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_52;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_53;
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_54[style=dashed];
Node_50 -> Node_46;
Node_54 -> Node_49;
Node_49 -> Node_30;
Node_53 -> Node_57;
Node_57 -> Node_30;
Node_52 -> Node_30;
}

