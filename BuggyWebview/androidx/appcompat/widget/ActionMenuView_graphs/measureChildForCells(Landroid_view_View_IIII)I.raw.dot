digraph "CFG forandroidx.appcompat.widget.ActionMenuView.measureChildForCells(Landroid\/view\/View;IIII)I" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:407)\l0x0001: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsRemaining' int)]) \l0x0003: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r15 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x0007: CHECK_CAST (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r2 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r3 I:int) = (r18 I:int A[D('parentHeightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:409)\l0x000d: ARITH  (r3 I:int) = (r3 I:int) \- (r19 I:int A[D('parentHeightPadding' int)]) \l0x000f: INVOKE  (r4 I:int) = (r18 I:int A[D('parentHeightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:411)\l0x0013: INVOKE  (r5 I:int) = (r3 I:int A[D('childHeightSize' int)]), (r4 I:int A[D('childHeightMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:412)\l0x0017: INSTANCE_OF  (r6 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.appcompat.view.menu.ActionMenuItemView  (LINE:414)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|0x0019: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001f \l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:415)\l0x001c: CHECK_CAST (r6 I:androidx.appcompat.view.menu.ActionMenuItemView) = (androidx.appcompat.view.menu.ActionMenuItemView) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|0x0020: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:416)\l0x0021: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|0x0022: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemView' androidx.appcompat.view.menu.ActionMenuItemView)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002c \l}"];
Node_37 [shape=record,label="{37\:\ 0x0024|0x0024: INVOKE  (r9 I:boolean) = (r6 I:androidx.appcompat.view.menu.ActionMenuItemView A[D('itemView' androidx.appcompat.view.menu.ActionMenuItemView)]) type: VIRTUAL call: androidx.appcompat.view.menu.ActionMenuItemView.hasText():boolean A[MD:():boolean (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|0x0028: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002c \l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|0x002a: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|0x002d: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:418)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002e|0x002e: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:52:0x0051  (LINE:419)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0030|0x0030: CONST  (r11 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|0x0031: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0035 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|0x0033: IF  (r1 I:??[int, byte, short, char]) \< (r11 I:??[int, byte, short, char])  \-\> B:52:0x0051 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0035|0x0035: ARITH  (r12 I:int) = (r16 I:int A[D('cellSize' int)]) * (r1 I:int)  (LINE:420)\l0x0037: CONST  (r13 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l0x0039: INVOKE  (r12 I:int) = (r12 I:int), (r13 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x003d: INVOKE  \l  (r15 I:android.view.View A[D('child' android.view.View)])\l  (r12 I:int A[D('childWidthSpec' int)])\l  (r5 I:int A[D('childHeightSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:422)\l0x0040: INVOKE  (r13 I:int) = (r15 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:424)\l0x0044: ARITH  (r10 I:int A[D('cellsUsed' int)]) = (r13 I:int A[D('measuredWidth' int)]) \/ (r16 I:int A[D('cellSize' int)])  (LINE:425)\l0x0046: ARITH  (r14 I:int) = (r13 I:int A[D('measuredWidth' int)]) % (r16 I:int A[D('cellSize' int)])  (LINE:426)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0048|0x0048: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x004c \l}"];
Node_48 [shape=record,label="{48\:\ 0x004a|0x004a: ARITH  (r10 I:int) = (r10 I:int A[D('cellsUsed' int)]) + (1 int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004c|0x004c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0051  (LINE:427)\l}"];
Node_50 [shape=record,label="{50\:\ 0x004e|0x004e: IF  (r10 I:??[int, byte, short, char] A[D('cellsUsed' int)]) \>= (r11 I:??[int, byte, short, char])  \-\> B:52:0x0051 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0050|0x0050: CONST  (r10 I:??[int, float, short, byte, char] A[D('cellsUsed' int)]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0051|0x0051: IGET  (r11 I:boolean) = \l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean  (LINE:430)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0053|0x0053: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0058 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0055|0x0055: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasText' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0058 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0057|0x0057: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0058|0x0058: IPUT  \l  (r7 I:boolean A[D('expandable' boolean)])\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expandable boolean  (LINE:431)\l0x005a: IPUT  \l  (r10 I:int A[D('cellsUsed' int)])\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:433)\l0x005c: ARITH  (r8 I:int) = (r10 I:int A[D('cellsUsed' int)]) * (r16 I:int A[D('cellSize' int)])  (LINE:434)\l0x005e: CONST  (r11 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:435)\l0x0060: INVOKE  (r11 I:int) = (r8 I:int A[D('targetWidth' int)]), (r11 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0064: INVOKE  (r15 I:android.view.View A[D('child' android.view.View)]), (r11 I:int), (r5 I:int A[D('childHeightSpec' int)]) type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0067|RETURN\l|0x0067: RETURN  (r10 I:int A[D('cellsUsed' int)])  (LINE:437)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|0x002c: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static int androidx.appcompat.widget.ActionMenuView.measureChildForCells((r15 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('cellSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('cellsRemaining' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('parentHeightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('parentHeightPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:54:0x0055 \-\> B:56:0x0058, CROSS_EDGE: B:53:0x0053 \-\> B:56:0x0058, CROSS_EDGE: B:50:0x004e \-\> B:52:0x0051, CROSS_EDGE: B:49:0x004c \-\> B:52:0x0051, CROSS_EDGE: B:47:0x0048 \-\> B:49:0x004c, CROSS_EDGE: B:45:0x0033 \-\> B:52:0x0051, CROSS_EDGE: B:44:0x0031 \-\> B:46:0x0035, CROSS_EDGE: B:42:0x002e \-\> B:52:0x0051, CROSS_EDGE: B:40:0x002c \-\> B:41:0x002d, CROSS_EDGE: B:36:0x0022 \-\> B:40:0x002c, CROSS_EDGE: B:34:0x001f \-\> B:35:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003d\-0x0051: r12 'childWidthSpec' I\l  0x0044\-0x0051: r13 'measuredWidth' I\l  0x0009\-0x0067: r2 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x000f\-0x0067: r3 'childHeightSize' I\l  0x0013\-0x0067: r4 'childHeightMode' I\l  0x0017\-0x0067: r5 'childHeightSpec' I\l  0x0020\-0x0067: r6 'itemView' Landroidx\/appcompat\/view\/menu\/ActionMenuItemView;\l  0x0058\-0x0067: r7 'expandable' Z\l  0x005e\-0x0067: r8 'targetWidth' I\l  0x002d\-0x0067: r9 'hasText' Z\l  0x002e\-0x0067: r10 'cellsUsed' I\l  \-1 \-0x0067: r15 'child' Landroid\/view\/View;\l  \-1 \-0x0067: r16 'cellSize' I\l  \-1 \-0x0067: r17 'cellsRemaining' I\l  \-1 \-0x0067: r18 'parentHeightMeasureSpec' I\l  \-1 \-0x0067: r19 'parentHeightPadding' I\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_52;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_52;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_40 -> Node_41;
Node_34 -> Node_35;
}

