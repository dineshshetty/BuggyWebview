digraph "CFG forandroidx.appcompat.widget.ActionMenuView.onMeasureExactFormat(II)V" {
Node_176 [shape=record,label="{176\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_178 [shape=record,label="{178\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r40 I:??[OBJECT, ARRAY])  (LINE:181)\l0x0002: INVOKE  (r1 I:int) = (r42 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)]\l0x0006: INVOKE  (r2 I:int) = (r41 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:182)\l0x000a: INVOKE  (r3 I:int) = (r42 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:183)\l0x000e: INVOKE  (r4 I:int) = (r40 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingLeft():int A[MD:():int (s)] (LINE:185)\l0x0012: INVOKE  (r5 I:int) = (r40 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingRight():int A[MD:():int (s)]\l0x0016: ARITH  (r4 I:int) = (r4 I:int) + (r5 I:int) \l0x0017: INVOKE  (r5 I:int) = (r40 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingTop():int A[MD:():int (s)] (LINE:186)\l0x001b: INVOKE  (r6 I:int) = (r40 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingBottom():int A[MD:():int (s)]\l0x001f: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0020: CONST  (r6 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char])  (LINE:188)\l0x0021: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r42 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l0x0023: INVOKE  (r6 I:int) = (r7 I:int), (r5 I:int A[D('heightPadding' int)]), (r6 I:int) type: STATIC call: androidx.appcompat.widget.ActionMenuView.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (s)]\l0x0027: ARITH  (r2 I:int) = (r2 I:int A[D('widthSize' int)]) \- (r4 I:int A[D('widthPadding' int)])  (LINE:191)\l0x0028: IGET  (r8 I:int) = (r0 I:androidx.appcompat.widget.ActionMenuView) androidx.appcompat.widget.ActionMenuView.mMinCellSize int  (LINE:194)\l0x002a: ARITH  (r9 I:int) = (r2 I:int A[D('widthSize' int)]) \/ (r8 I:int) \l0x002c: ARITH  (r10 I:int) = (r2 I:int A[D('widthSize' int)]) % (r8 I:int)  (LINE:195)\l0x002e: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:197)\l}"];
Node_179 [shape=record,label="{179\:\ 0x002f|0x002f: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cellCount' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:182:0x0035 \l}"];
Node_180 [shape=record,label="{180\:\ 0x0031|0x0031: INVOKE  (r0 I:androidx.appcompat.widget.ActionMenuView), (r2 I:int A[D('widthSize' int)]), (r11 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:199)\l}"];
Node_181 [shape=record,label="{181\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:200)\l}"];
Node_177 [shape=record,label="{177\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_182 [shape=record,label="{182\:\ 0x0035|0x0035: ARITH  (r12 I:int) = (r10 I:int A[D('cellSizeRemaining' int)]) \/ (r9 I:int A[D('cellCount' int)])  (LINE:203)\l0x0037: ARITH  (r8 I:int) = (r8 I:int) + (r12 I:int) \l0x0038: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellCount' int)])  (LINE:205)\l0x0039: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:206)\l0x003a: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:207)\l0x003b: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:208)\l0x003c: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:209)\l0x003e: CONST  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:210)\l0x0040: CONST  (r18 I:??[long, double]) = (0 ??[long, double])  (LINE:213)\l0x0042: INVOKE  (r11 I:int) = (r40 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildCount():int A[MD:():int (s)] (LINE:215)\l0x0046: CONST  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:216)\l0x0048: MOVE  (r38 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l0x004a: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) \l0x004c: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) = (r38 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004e: MOVE  (r39 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0050: MOVE  (r21 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthPadding' int)]) \l0x0052: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthPadding' int)]) = (r39 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_183 [shape=record,label="{183\:\ 0x0054|LOOP_START\lLOOP:0: B:183:0x0054\-\>B:211:0x00dc\l|0x0054: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:327:0x00e6 \l}"];
Node_184 [shape=record,label="{184\:\ 0x0056|0x0056: INVOKE  (r7 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r4 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:217)\l0x005a: MOVE  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellCount' int)])  (LINE:218)\l0x005c: INVOKE  (r9 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l0x0060: MOVE  (r24 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellSizeRemaining' int)]) \l0x0062: CONST  (r10 I:??[int, float, short, byte, char] A[D('cellSizeRemaining' int)]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_185 [shape=record,label="{185\:\ 0x0064|0x0064: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:187:0x0068 \l}"];
Node_187 [shape=record,label="{187\:\ 0x0068|0x0068: INSTANCE_OF  (r9 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) androidx.appcompat.view.menu.ActionMenuItemView  (LINE:220)\l0x006a: ARITH  (r3 I:int) = (r3 I:int A[D('visibleItemCount' int)]) + (1 int)  (LINE:221)\l}"];
Node_188 [shape=record,label="{188\:\ 0x006c|0x006c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isGeneratedItem' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:190:0x0077  (LINE:223)\l}"];
Node_189 [shape=record,label="{189\:\ 0x006e|0x006e: IGET  (r10 I:int) = (r0 I:androidx.appcompat.widget.ActionMenuView) androidx.appcompat.widget.ActionMenuView.mGeneratedItemPadding int  (LINE:226)\l0x0070: MOVE  (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l0x0072: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0073: INVOKE  \l  (r7 I:android.view.View A[D('child' android.view.View)])\l  (r10 I:int)\l  (r3 I:int A[D('visibleItemCount' int)])\l  (r10 I:int)\l  (r3 I:int A[D('visibleItemCount' int)])\l type: VIRTUAL call: android.view.View.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_191 [shape=record,label="{191\:\ 0x007a|0x007a: INVOKE  (r10 I:android.view.ViewGroup$LayoutParams) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:229)\l0x007e: CHECK_CAST (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r10 I:??[OBJECT, ARRAY]) \l0x0080: IPUT  \l  (r3 I:boolean)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expanded boolean  (LINE:230)\l0x0082: IPUT  \l  (r3 I:int)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.extraPixels int  (LINE:231)\l0x0084: IPUT  \l  (r3 I:int)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:232)\l0x0086: IPUT  \l  (r3 I:boolean)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expandable boolean  (LINE:233)\l0x0088: IPUT  \l  (r3 I:int)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int  (LINE:234)\l0x008a: IPUT  \l  (r3 I:int)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int  (LINE:235)\l}"];
Node_192 [shape=record,label="{192\:\ 0x008c|0x008c: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isGeneratedItem' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:196:0x0099  (LINE:236)\l}"];
Node_193 [shape=record,label="{193\:\ 0x008e|0x008e: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) \l0x008f: CHECK_CAST (r3 I:androidx.appcompat.view.menu.ActionMenuItemView) = (androidx.appcompat.view.menu.ActionMenuItemView) (r3 I:??[OBJECT, ARRAY]) \l0x0091: INVOKE  (r3 I:boolean) = (r3 I:androidx.appcompat.view.menu.ActionMenuItemView) type: VIRTUAL call: androidx.appcompat.view.menu.ActionMenuItemView.hasText():boolean A[MD:():boolean (m)]\l}"];
Node_194 [shape=record,label="{194\:\ 0x0095|0x0095: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:196:0x0099 \l}"];
Node_195 [shape=record,label="{195\:\ 0x0097|0x0097: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_197 [shape=record,label="{197\:\ 0x009a|0x009a: IPUT  \l  (r3 I:boolean)\l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.preventEdgeOffset boolean \l0x009c: IGET  (r3 I:boolean) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean  (LINE:239)\l}"];
Node_198 [shape=record,label="{198\:\ 0x009e|0x009e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:200:0x00a2 \l}"];
Node_199 [shape=record,label="{199\:\ 0x00a0|0x00a0: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_201 [shape=record,label="{201\:\ 0x00a3|0x00a3: MOVE  (r26 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isGeneratedItem' boolean)])  (LINE:241)\l0x00a5: INVOKE  (r9 I:int) = \l  (r7 I:android.view.View A[D('child' android.view.View)])\l  (r8 I:int A[D('cellSize' int)])\l  (r3 I:int A[D('cellsAvailable' int)])\l  (r6 I:int A[D('itemHeightSpec' int)])\l  (r5 I:int A[D('heightPadding' int)])\l type: STATIC call: androidx.appcompat.widget.ActionMenuView.measureChildForCells(android.view.View, int, int, int, int):int A[MD:(android.view.View, int, int, int, int):int (m)]\l0x00a9: INVOKE  (r14 I:int A[D('maxCellsUsed' int)]) = (r14 I:int A[D('maxCellsUsed' int)]), (r9 I:int A[D('cellsUsed' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:244)\l0x00ad: MOVE  (r27 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsAvailable' int)])  (LINE:245)\l0x00af: IGET  (r3 I:boolean A[D('cellsAvailable' int)]) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expandable boolean \l}"];
Node_202 [shape=record,label="{202\:\ 0x00b1|0x00b1: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:204:0x00b5 \l}"];
Node_203 [shape=record,label="{203\:\ 0x00b3|0x00b3: ARITH  (r15 I:int) = (r15 I:int A[D('expandableItemCount' int)]) + (1 int) \l}"];
Node_204 [shape=record,label="{204\:\ 0x00b5|0x00b5: IGET  (r3 I:boolean) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean  (LINE:246)\l}"];
Node_205 [shape=record,label="{205\:\ 0x00b7|0x00b7: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:207:0x00bb \l}"];
Node_206 [shape=record,label="{206\:\ 0x00b9|0x00b9: CONST  (r17 I:??[boolean, int, float, short, byte, char] A[D('hasOverflow' boolean)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_207 [shape=record,label="{207\:\ 0x00bb|0x00bb: ARITH  (r12 I:int) = (r12 I:int A[D('cellsRemaining' int)]) \- (r9 I:int A[D('cellsUsed' int)])  (LINE:248)\l0x00bc: INVOKE  (r3 I:int) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:249)\l0x00c0: INVOKE  (r3 I:int) = (r13 I:int A[D('maxChildHeight' int)]), (r3 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x00c4: CONST  (r13 I:??[boolean, int, float, short, byte, char] A[D('maxChildHeight' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:250)\l}"];
Node_208 [shape=record,label="{208\:\ 0x00c5|0x00c5: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cellsUsed' int)]) != (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:210:0x00d5 \l}"];
Node_209 [shape=record,label="{209\:\ 0x00c7|0x00c7: ARITH  (r13 I:int) = (r13 I:int) \<\< (r4 I:int A[D('i' int)]) \l0x00c8: MOVE  (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsUsed' int)]) \l0x00ca: MOVE  (r22 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)]) \l0x00cc: CAST (r9 I:long A[D('cellsUsed' int)]) = (long) (r13 I:int) \l0x00cd: ARITH  (r9 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) \| (r9 I:long) \l0x00cf: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxChildHeight' int)]) \l0x00d0: MOVE  (r18 I:??[long, double] A[D('smallestItemsAt' long)]) = (r9 I:??[long, double]) \l0x00d2: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxChildHeight' int)]) = (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l}"];
Node_329 [shape=record,label="{329\:\ 0x00dc|SYNTHETIC\l}"];
Node_211 [shape=record,label="{211\:\ 0x00dc|LOOP_END\lLOOP:0: B:183:0x0054\-\>B:211:0x00dc\l|0x00dc: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:216)\l0x00de: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r42 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMeasureSpec' int)]) \l0x00e0: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellCount' int)]) \l0x00e2: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r24 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellSizeRemaining' int)]) \l}"];
Node_210 [shape=record,label="{210\:\ 0x00d5|0x00d5: MOVE  (r28 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsUsed' int)]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsUsed' int)]) \l0x00d7: MOVE  (r22 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)]) \l0x00d9: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxChildHeight' int)]) \l0x00da: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxChildHeight' int)]) = (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l}"];
Node_328 [shape=record,label="{328\:\ 0x00dc|SYNTHETIC\l}"];
Node_200 [shape=record,label="{200\:\ 0x00a2|0x00a2: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsRemaining' int)]) \l}"];
Node_196 [shape=record,label="{196\:\ 0x0099|0x0099: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_190 [shape=record,label="{190\:\ 0x0077|0x0077: MOVE  (r25 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)])  (LINE:223)\l0x0079: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_330 [shape=record,label="{330\:\ 0x00dc|SYNTHETIC\l}"];
Node_327 [shape=record,label="{327\:\ 0x00e6|SYNTHETIC\l}"];
Node_212 [shape=record,label="{212\:\ 0x00e6|0x00e6: MOVE  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellCount' int)]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellCount' int)]) \l0x00e8: MOVE  (r24 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellSizeRemaining' int)]) \l0x00ea: CONST  (r4 I:??[int, float, short, byte, char] A[D('i' int)]) = (2 ??[int, float, short, byte, char])  (LINE:255)\l}"];
Node_213 [shape=record,label="{213\:\ 0x00eb|0x00eb: IF  (r17 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasOverflow' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:216:0x00f1 \l}"];
Node_214 [shape=record,label="{214\:\ 0x00ed|0x00ed: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibleItemCount' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:216:0x00f1 \l}"];
Node_215 [shape=record,label="{215\:\ 0x00ef|0x00ef: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_217 [shape=record,label="{217\:\ 0x00f2|0x00f2: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:260)\l}"];
Node_218 [shape=record,label="{218\:\ 0x00f3|LOOP_START\lLOOP:1: B:218:0x00f3\-\>B:251:0x019a\l|0x00f3: CONST  (r25 I:??[long, double]) = (1 ??[long, double])  (LINE:261)\l0x00f5: CONST  (r27 I:??[long, double]) = (0 ??[long, double]) \l}"];
Node_219 [shape=record,label="{219\:\ 0x00f7|0x00f7: IF  (r15 I:??[int, byte, short, char] A[D('expandableItemCount' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:332:0x01a8 \l}"];
Node_220 [shape=record,label="{220\:\ 0x00f9|0x00f9: IF  (r12 I:??[int, byte, short, char] A[D('cellsRemaining' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:333:0x01a8 \l}"];
Node_221 [shape=record,label="{221\:\ 0x00fb|0x00fb: CONST  (r10 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char])  (LINE:262)\l0x00fe: CONST  (r29 I:??[long, double]) = (0 ??[long, double])  (LINE:263)\l0x0100: CONST  (r31 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:264)\l0x0102: CONST  (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l0x0104: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r31 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minCellsItemCount' int)]) \l0x0106: MOVE  (r38 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0108: MOVE  (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightPadding' int)]) \l0x010a: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightPadding' int)]) = (r38 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_222 [shape=record,label="{222\:\ 0x010c|LOOP_START\lLOOP:2: B:222:0x010c\-\>B:232:0x0137\l|0x010c: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:334:0x013e \l}"];
Node_223 [shape=record,label="{223\:\ 0x010e|0x010e: INVOKE  (r33 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:266)\l0x0112: INVOKE  (r34 I:android.view.ViewGroup$LayoutParams) = (r33 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:267)\l0x0116: MOVE  (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) \l0x0118: MOVE  (r9 I:??[OBJECT, ARRAY] A[D('needsExpansion' boolean)]) = (r34 I:??[OBJECT, ARRAY]) \l0x011a: CHECK_CAST (r9 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r9 I:??[OBJECT, ARRAY]) \l0x011c: MOVE  (r34 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandableItemCount' int)])  (LINE:270)\l0x011e: IGET  (r15 I:boolean A[D('expandableItemCount' int)]) = \l  (r9 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expandable boolean \l}"];
Node_224 [shape=record,label="{224\:\ 0x0120|0x0120: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:226:0x0123 \l}"];
Node_226 [shape=record,label="{226\:\ 0x0123|0x0123: IGET  (r15 I:int) = \l  (r9 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:273)\l}"];
Node_227 [shape=record,label="{227\:\ 0x0125|0x0125: IF  (r15 I:??[int, byte, short, char]) \>= (r10 I:??[int, byte, short, char] A[D('minCells' int)])  \-\> B:229:0x012d \l}"];
Node_228 [shape=record,label="{228\:\ 0x0127|0x0127: IGET  (r10 I:int A[D('minCells' int)]) = \l  (r9 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:274)\l0x0129: ARITH  (r29 I:long A[D('minCellsAt' long)]) = (r25 I:long) \<\< (r5 I:long A[D('i' int)])  (LINE:275)\l0x012b: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('minCellsItemCount' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:276)\l}"];
Node_336 [shape=record,label="{336\:\ 0x0137|SYNTHETIC\l}"];
Node_232 [shape=record,label="{232\:\ 0x0137|LOOP_END\lLOOP:2: B:222:0x010c\-\>B:232:0x0137\l|0x0137: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:265)\l0x0139: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r34 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandableItemCount' int)]) \l0x013b: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) \l}"];
Node_229 [shape=record,label="{229\:\ 0x012d|0x012d: IGET  (r15 I:int) = \l  (r9 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:277)\l}"];
Node_230 [shape=record,label="{230\:\ 0x012f|0x012f: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minCells' int)])  \-\> B:337:0x0137 \l}"];
Node_231 [shape=record,label="{231\:\ 0x0131|0x0131: ARITH  (r36 I:long) = (r25 I:long) \<\< (r5 I:long A[D('i' int)])  (LINE:278)\l0x0133: ARITH  (r29 I:long) = (r29 I:long A[D('minCellsAt' long)]) \| (r36 I:long) \l0x0135: ARITH  (r4 I:int) = (r4 I:int A[D('minCellsItemCount' int)]) + (1 int)  (LINE:279)\l}"];
Node_335 [shape=record,label="{335\:\ 0x0137|SYNTHETIC\l}"];
Node_337 [shape=record,label="{337\:\ 0x0137|SYNTHETIC\l}"];
Node_338 [shape=record,label="{338\:\ 0x0137|SYNTHETIC\l}"];
Node_334 [shape=record,label="{334\:\ 0x013e|SYNTHETIC\l}"];
Node_233 [shape=record,label="{233\:\ 0x013e|0x013e: MOVE  (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) \l0x0140: MOVE  (r34 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandableItemCount' int)]) \l0x0142: ARITH  (r18 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) \| (r29 I:long A[D('minCellsAt' long)])  (LINE:284)\l}"];
Node_234 [shape=record,label="{234\:\ 0x0144|0x0144: IF  (r4 I:??[int, byte, short, char] A[D('minCellsItemCount' int)]) \<= (r12 I:??[int, byte, short, char] A[D('cellsRemaining' int)])  \-\> B:236:0x014c  (LINE:286)\l}"];
Node_236 [shape=record,label="{236\:\ 0x014c|0x014c: ARITH  (r10 I:int) = (r10 I:int A[D('minCells' int)]) + (1 int)  (LINE:289)\l0x014e: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:291)\l}"];
Node_237 [shape=record,label="{237\:\ 0x014f|LOOP_START\lLOOP:3: B:237:0x014f\-\>B:250:0x0191\l|0x014f: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:339:0x019a \l}"];
Node_238 [shape=record,label="{238\:\ 0x0151|0x0151: INVOKE  (r9 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:292)\l0x0155: INVOKE  (r15 I:android.view.ViewGroup$LayoutParams) = (r9 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:293)\l0x0159: CHECK_CAST (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r15 I:??[OBJECT, ARRAY]) \l0x015b: MOVE  (r33 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minCellsItemCount' int)])  (LINE:294)\l0x015d: CONST  (r22 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x015f: ARITH  (r4 I:int A[D('minCellsItemCount' int)]) = (r22 I:int) \<\< (r5 I:int A[D('i' int)]) \l0x0161: MOVE  (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0163: MOVE  (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) \l0x0165: CAST (r1 I:long A[D('heightMode' int)]) = (long) (r4 I:int) \l0x0166: ARITH  (r1 I:long) = (r29 I:long A[D('minCellsAt' long)]) & (r1 I:long) \l0x0168: CMP_L  (r4 I:int) = (r1 I:long), (r27 I:long) \l}"];
Node_239 [shape=record,label="{239\:\ 0x016a|0x016a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:243:0x0176 \l}"];
Node_240 [shape=record,label="{240\:\ 0x016c|0x016c: IGET  (r1 I:int) = \l  (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:296)\l}"];
Node_241 [shape=record,label="{241\:\ 0x016e|0x016e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minCells' int)])  \-\> B:341:0x0191 \l}"];
Node_242 [shape=record,label="{242\:\ 0x0170|0x0170: ARITH  (r1 I:int) = (r22 I:int) \<\< (r5 I:int A[D('i' int)]) \l0x0172: CAST (r1 I:long) = (long) (r1 I:int) \l0x0173: ARITH  (r18 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) \| (r1 I:long) \l}"];
Node_342 [shape=record,label="{342\:\ 0x0191|SYNTHETIC\l}"];
Node_250 [shape=record,label="{250\:\ 0x0191|LOOP_END\lLOOP:3: B:237:0x014f\-\>B:250:0x0191\l|0x0191: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:291)\l0x0193: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r33 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minCellsItemCount' int)]) \l0x0195: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0197: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) \l}"];
Node_341 [shape=record,label="{341\:\ 0x0191|SYNTHETIC\l}"];
Node_243 [shape=record,label="{243\:\ 0x0176|0x0176: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('centerSingleExpandedItem' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:249:0x0187  (LINE:300)\l}"];
Node_244 [shape=record,label="{244\:\ 0x0178|0x0178: IGET  (r1 I:boolean) = \l  (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.preventEdgeOffset boolean \l}"];
Node_245 [shape=record,label="{245\:\ 0x017a|0x017a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:249:0x0187 \l}"];
Node_246 [shape=record,label="{246\:\ 0x017c|0x017c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_247 [shape=record,label="{247\:\ 0x017d|0x017d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cellsRemaining' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:249:0x0187 \l}"];
Node_248 [shape=record,label="{248\:\ 0x017f|0x017f: IGET  (r1 I:int) = (r0 I:androidx.appcompat.widget.ActionMenuView) androidx.appcompat.widget.ActionMenuView.mGeneratedItemPadding int  (LINE:302)\l0x0181: ARITH  (r2 I:int) = (r1 I:int) + (r8 I:int A[D('cellSize' int)]) \l0x0183: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0184: INVOKE  (r9 I:android.view.View A[D('child' android.view.View)]), (r2 I:int), (r4 I:int), (r1 I:int), (r4 I:int) type: VIRTUAL call: android.view.View.setPadding(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_249 [shape=record,label="{249\:\ 0x0187|0x0187: IGET  (r1 I:int) = \l  (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:304)\l0x0189: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x018a: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x018b: IPUT  \l  (r1 I:int)\l  (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int \l0x018d: IPUT  \l  (r2 I:boolean)\l  (r15 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expanded boolean  (LINE:305)\l0x018f: ARITH  (r12 I:int) = (r12 I:int A[D('cellsRemaining' int)]) + (\-1 int)  (LINE:306)\l}"];
Node_340 [shape=record,label="{340\:\ 0x0191|SYNTHETIC\l}"];
Node_339 [shape=record,label="{339\:\ 0x019a|SYNTHETIC\l}"];
Node_251 [shape=record,label="{251\:\ 0x019a|LOOP_END\lLOOP:1: B:218:0x00f3\-\>B:251:0x019a\l|0x019a: MOVE  (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x019c: MOVE  (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) \l0x019e: MOVE  (r33 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minCellsItemCount' int)]) \l0x01a0: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:309)\l0x01a1: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightPadding' int)])  (LINE:310)\l0x01a3: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r34 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandableItemCount' int)]) \l0x01a5: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_331 [shape=record,label="{331\:\ 0x0146|SYNTHETIC\l}"];
Node_235 [shape=record,label="{235\:\ 0x0146|0x0146: MOVE  (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) \l0x0148: MOVE  (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) \l}"];
Node_253 [shape=record,label="{253\:\ 0x01b2|0x01b2: IF  (r17 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasOverflow' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:257:0x01b9  (LINE:315)\l}"];
Node_254 [shape=record,label="{254\:\ 0x01b4|0x01b4: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_255 [shape=record,label="{255\:\ 0x01b5|0x01b5: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibleItemCount' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:257:0x01b9 \l}"];
Node_256 [shape=record,label="{256\:\ 0x01b7|0x01b7: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_258 [shape=record,label="{258\:\ 0x01ba|0x01ba: IF  (r12 I:??[int, byte, short, char] A[D('cellsRemaining' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:309:0x0282  (LINE:316)\l}"];
Node_259 [shape=record,label="{259\:\ 0x01bc|0x01bc: CMP_L  (r2 I:int) = (r18 I:long A[D('smallestItemsAt' long)]), (r27 I:long) \l}"];
Node_260 [shape=record,label="{260\:\ 0x01be|0x01be: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:309:0x0282 \l}"];
Node_261 [shape=record,label="{261\:\ 0x01c0|0x01c0: ARITH  (r2 I:int) = (r3 I:int A[D('visibleItemCount' int)]) + (\-1 int) \l}"];
Node_262 [shape=record,label="{262\:\ 0x01c2|0x01c2: IF  (r12 I:??[int, byte, short, char] A[D('cellsRemaining' int)]) \< (r2 I:??[int, byte, short, char])  \-\> B:268:0x01cd \l}"];
Node_263 [shape=record,label="{263\:\ 0x01c4|0x01c4: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('singleItem' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:268:0x01cd \l}"];
Node_264 [shape=record,label="{264\:\ 0x01c6|0x01c6: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_265 [shape=record,label="{265\:\ 0x01c7|0x01c7: IF  (r14 I:??[int, byte, short, char] A[D('maxCellsUsed' int)]) \<= (r2 I:??[int, byte, short, char])  \-\> B:267:0x01ca \l}"];
Node_267 [shape=record,label="{267\:\ 0x01ca|0x01ca: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) \l}"];
Node_310 [shape=record,label="{310\:\ 0x0283|0x0283: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)])  (LINE:372)\l}"];
Node_311 [shape=record,label="{311\:\ 0x0285|0x0285: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needsExpansion' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:320:0x02b5 \l}"];
Node_312 [shape=record,label="{312\:\ 0x0287|0x0287: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:373)\l}"];
Node_313 [shape=record,label="{313\:\ 0x0288|LOOP_START\lLOOP:4: B:313:0x0288\-\>B:318:0x02ad\l|0x0288: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:343:0x02b2 \l}"];
Node_314 [shape=record,label="{314\:\ 0x028a|0x028a: INVOKE  (r4 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:374)\l0x028e: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:375)\l0x0292: CHECK_CAST (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l0x0294: IGET  (r15 I:boolean) = \l  (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expanded boolean  (LINE:377)\l}"];
Node_315 [shape=record,label="{315\:\ 0x0296|0x0296: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:317:0x029b \l}"];
Node_316 [shape=record,label="{316\:\ 0x0298|0x0298: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l}"];
Node_345 [shape=record,label="{345\:\ 0x02ad|SYNTHETIC\l}"];
Node_318 [shape=record,label="{318\:\ 0x02ad|LOOP_END\lLOOP:4: B:313:0x0288\-\>B:318:0x02ad\l|0x02ad: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:373)\l0x02af: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l}"];
Node_317 [shape=record,label="{317\:\ 0x029b|0x029b: IGET  (r15 I:int) = \l  (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.cellsUsed int  (LINE:379)\l0x029d: ARITH  (r15 I:int) = (r15 I:int) * (r8 I:int A[D('cellSize' int)]) \l0x029f: IGET  (r1 I:int) = \l  (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.extraPixels int \l0x02a1: ARITH  (r15 I:int) = (r15 I:int) + (r1 I:int) \l0x02a2: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)])  (LINE:380)\l0x02a4: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x02a6: INVOKE  (r3 I:int) = (r15 I:int A[D('width' int)]), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x02aa: INVOKE  (r4 I:android.view.View A[D('child' android.view.View)]), (r3 I:int), (r6 I:int A[D('itemHeightSpec' int)]) type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_344 [shape=record,label="{344\:\ 0x02ad|SYNTHETIC\l}"];
Node_343 [shape=record,label="{343\:\ 0x02b2|SYNTHETIC\l}"];
Node_319 [shape=record,label="{319\:\ 0x02b2|0x02b2: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) \l}"];
Node_321 [shape=record,label="{321\:\ 0x02b7|0x02b7: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)])  (LINE:385)\l0x02b9: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_322 [shape=record,label="{322\:\ 0x02bb|0x02bb: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('heightMode' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:324:0x02bf \l}"];
Node_323 [shape=record,label="{323\:\ 0x02bd|0x02bd: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxChildHeight' int)])  (LINE:386)\l}"];
Node_325 [shape=record,label="{325\:\ 0x02c1|0x02c1: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)])  (LINE:389)\l0x02c3: INVOKE  (r0 I:androidx.appcompat.widget.ActionMenuView), (r2 I:int A[D('widthSize' int)]), (r3 I:int A[D('heightSize' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)]\l}"];
Node_326 [shape=record,label="{326\:\ 0x02c6|RETURN\l|0x02c6: RETURN    (LINE:390)\l}"];
Node_324 [shape=record,label="{324\:\ 0x02bf|0x02bf: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightSize' int)])  (LINE:385)\l}"];
Node_320 [shape=record,label="{320\:\ 0x02b5|0x02b5: MOVE  (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('visibleItemCount' int)])  (LINE:372)\l}"];
Node_268 [shape=record,label="{268\:\ 0x01cd|0x01cd: INVOKE  (r2 I:int) = (r18 I:long A[D('smallestItemsAt' long)]) type: STATIC call: java.lang.Long.bitCount(long):int A[MD:(long):int (c)] (LINE:318)\l0x01d1: CAST (r2 I:float) = (float) (r2 I:int) \l}"];
Node_269 [shape=record,label="{269\:\ 0x01d2|0x01d2: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('singleItem' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:281:0x020b  (LINE:320)\l}"];
Node_270 [shape=record,label="{270\:\ 0x01d4|0x01d4: ARITH  (r4 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) & (r25 I:long)  (LINE:322)\l0x01d6: CONST  (r9 I:??[int, float, short, byte, char]) = (1056964608(0x3f000000, float:0.5) ??[int, float, short, byte, char]) \l0x01d8: CMP_L  (r10 I:int) = (r4 I:long), (r27 I:long) \l}"];
Node_271 [shape=record,label="{271\:\ 0x01da|0x01da: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:275:0x01ed \l}"];
Node_272 [shape=record,label="{272\:\ 0x01dc|0x01dc: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:323)\l0x01dd: INVOKE  (r5 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r4 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x01e1: INVOKE  (r5 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x01e5: CHECK_CAST (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r5 I:??[OBJECT, ARRAY]) \l0x01e7: IGET  (r10 I:boolean) = \l  (r5 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.preventEdgeOffset boolean  (LINE:324)\l}"];
Node_273 [shape=record,label="{273\:\ 0x01e9|0x01e9: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:276:0x01ee \l}"];
Node_274 [shape=record,label="{274\:\ 0x01eb|0x01eb: ARITH  (r2 I:float) = (r2 I:float A[D('expandCount' float)]) \- (r9 I:float) \l}"];
Node_276 [shape=record,label="{276\:\ 0x01ee|0x01ee: ARITH  (r5 I:int) = (r11 I:int A[D('childCount' int)]) + (\-1 int)  (LINE:326)\l0x01f0: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x01f1: ARITH  (r5 I:int) = (r10 I:int) \<\< (r5 I:int) \l0x01f3: CAST (r4 I:long) = (long) (r5 I:int) \l0x01f4: ARITH  (r4 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) & (r4 I:long) \l0x01f6: CMP_L  (r10 I:int) = (r4 I:long), (r27 I:long) \l}"];
Node_277 [shape=record,label="{277\:\ 0x01f8|0x01f8: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:281:0x020b \l}"];
Node_278 [shape=record,label="{278\:\ 0x01fa|0x01fa: ARITH  (r4 I:int) = (r11 I:int A[D('childCount' int)]) + (\-1 int)  (LINE:327)\l0x01fc: INVOKE  (r4 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r4 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x0200: INVOKE  (r4 I:android.view.ViewGroup$LayoutParams) = (r4 I:android.view.View) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x0204: CHECK_CAST (r4 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r4 I:??[OBJECT, ARRAY]) \l0x0206: IGET  (r5 I:boolean) = \l  (r4 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.preventEdgeOffset boolean  (LINE:328)\l}"];
Node_279 [shape=record,label="{279\:\ 0x0208|0x0208: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:281:0x020b \l}"];
Node_280 [shape=record,label="{280\:\ 0x020a|0x020a: ARITH  (r2 I:float) = (r2 I:float A[D('expandCount' float)]) \- (r9 I:float) \l}"];
Node_275 [shape=record,label="{275\:\ 0x01ed|0x01ed: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:322)\l}"];
Node_281 [shape=record,label="{281\:\ 0x020b|0x020b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:332)\l0x020c: CMP_L  (r4 I:int) = (r2 I:float A[D('expandCount' float)]), (r4 I:float) \l}"];
Node_282 [shape=record,label="{282\:\ 0x020e|0x020e: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:284:0x0218 \l}"];
Node_283 [shape=record,label="{283\:\ 0x0210|0x0210: ARITH  (r4 I:int) = (r12 I:int A[D('cellsRemaining' int)]) * (r8 I:int A[D('cellSize' int)])  (LINE:333)\l0x0212: CAST (r4 I:float) = (float) (r4 I:int) \l0x0213: ARITH  (r4 I:float) = (r4 I:float) \/ (r2 I:float A[D('expandCount' float)]) \l0x0214: CAST (r4 I:int) = (int) (r4 I:float) \l0x0215: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_285 [shape=record,label="{285\:\ 0x021a|0x021a: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x021c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:335)\l0x021d: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) \l}"];
Node_286 [shape=record,label="{286\:\ 0x021f|LOOP_START\lLOOP:5: B:286:0x021f\-\>B:307:0x0277\l|0x021f: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r11 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:346:0x027d \l}"];
Node_287 [shape=record,label="{287\:\ 0x0221|0x0221: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:336)\l0x0222: ARITH  (r15 I:int) = (r10 I:int) \<\< (r5 I:int A[D('i' int)]) \l0x0224: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) \l0x0225: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandCount' float)]) \l0x0227: CAST (r1 I:long A[D('singleItem' boolean)]) = (long) (r15 I:int) \l0x0228: ARITH  (r1 I:long) = (r18 I:long A[D('smallestItemsAt' long)]) & (r1 I:long) \l0x022a: CMP_L  (r15 I:int) = (r1 I:long), (r27 I:long) \l}"];
Node_288 [shape=record,label="{288\:\ 0x022c|0x022c: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:290:0x0231 \l}"];
Node_289 [shape=record,label="{289\:\ 0x022e|0x022e: CONST  (r25 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_348 [shape=record,label="{348\:\ 0x0277|SYNTHETIC\l}"];
Node_307 [shape=record,label="{307\:\ 0x0277|LOOP_END\lLOOP:5: B:286:0x021f\-\>B:307:0x0277\l|0x0277: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:335)\l0x0279: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) \l0x027a: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandCount' float)]) \l}"];
Node_290 [shape=record,label="{290\:\ 0x0231|0x0231: INVOKE  (r1 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:338)\l0x0235: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r1 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:339)\l0x0239: CHECK_CAST (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r2 I:??[OBJECT, ARRAY]) \l0x023b: INSTANCE_OF  (r15 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) androidx.appcompat.view.menu.ActionMenuItemView  (LINE:340)\l}"];
Node_291 [shape=record,label="{291\:\ 0x023d|0x023d: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:298:0x0255 \l}"];
Node_292 [shape=record,label="{292\:\ 0x023f|0x023f: IPUT  \l  (r4 I:int A[D('extraPixels' int)])\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.extraPixels int  (LINE:342)\l0x0241: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:343)\l0x0242: IPUT  \l  (r15 I:boolean)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expanded boolean \l}"];
Node_293 [shape=record,label="{293\:\ 0x0244|0x0244: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:297:0x0251  (LINE:344)\l}"];
Node_294 [shape=record,label="{294\:\ 0x0246|0x0246: IGET  (r15 I:boolean) = \l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.preventEdgeOffset boolean \l}"];
Node_295 [shape=record,label="{295\:\ 0x0248|0x0248: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:297:0x0251 \l}"];
Node_296 [shape=record,label="{296\:\ 0x024a|0x024a: NEG  (r15 I:int) = (r4 I:int A[D('extraPixels' int)])  (LINE:347)\l0x024b: CONST  (r25 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x024d: ARITH  (r15 I:int) = (r15 I:int) \/ (2 int) \l0x024f: IPUT  \l  (r15 I:int)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int \l}"];
Node_297 [shape=record,label="{297\:\ 0x0251|0x0251: CONST  (r9 I:??[boolean, int, float, short, byte, char] A[D('needsExpansion' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:349)\l0x0252: CONST  (r25 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_349 [shape=record,label="{349\:\ 0x0277|SYNTHETIC\l}"];
Node_298 [shape=record,label="{298\:\ 0x0255|0x0255: IGET  (r15 I:boolean) = \l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean  (LINE:350)\l}"];
Node_299 [shape=record,label="{299\:\ 0x0257|0x0257: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:301:0x0267 \l}"];
Node_300 [shape=record,label="{300\:\ 0x0259|0x0259: IPUT  \l  (r4 I:int A[D('extraPixels' int)])\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.extraPixels int  (LINE:351)\l0x025b: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:352)\l0x025c: IPUT  \l  (r15 I:boolean)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.expanded boolean \l0x025e: NEG  (r15 I:int) = (r4 I:int A[D('extraPixels' int)])  (LINE:353)\l0x025f: CONST  (r25 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0261: ARITH  (r15 I:int) = (r15 I:int) \/ (2 int) \l0x0263: IPUT  \l  (r15 I:int)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int \l0x0265: CONST  (r9 I:??[boolean, int, float, short, byte, char] A[D('needsExpansion' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:354)\l}"];
Node_350 [shape=record,label="{350\:\ 0x0277|SYNTHETIC\l}"];
Node_301 [shape=record,label="{301\:\ 0x0267|0x0267: CONST  (r25 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:359)\l}"];
Node_302 [shape=record,label="{302\:\ 0x0269|0x0269: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:304:0x026f \l}"];
Node_303 [shape=record,label="{303\:\ 0x026b|0x026b: ARITH  (r15 I:int) = (r4 I:int A[D('extraPixels' int)]) \/ (2 int)  (LINE:360)\l0x026d: IPUT  \l  (r15 I:int)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int \l}"];
Node_304 [shape=record,label="{304\:\ 0x026f|0x026f: ARITH  (r15 I:int) = (r11 I:int A[D('childCount' int)]) + (\-1 int)  (LINE:362)\l}"];
Node_305 [shape=record,label="{305\:\ 0x0271|0x0271: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) == (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:351:0x0277 \l}"];
Node_306 [shape=record,label="{306\:\ 0x0273|0x0273: ARITH  (r15 I:int) = (r4 I:int A[D('extraPixels' int)]) \/ (2 int)  (LINE:363)\l0x0275: IPUT  \l  (r15 I:int)\l  (r2 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int \l}"];
Node_347 [shape=record,label="{347\:\ 0x0277|SYNTHETIC\l}"];
Node_351 [shape=record,label="{351\:\ 0x0277|SYNTHETIC\l}"];
Node_346 [shape=record,label="{346\:\ 0x027d|SYNTHETIC\l}"];
Node_308 [shape=record,label="{308\:\ 0x027d|0x027d: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) \l0x027e: MOVE  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandCount' float)]) \l0x0280: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cellsRemaining' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:368)\l}"];
Node_284 [shape=record,label="{284\:\ 0x0218|0x0218: CONST  (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_309 [shape=record,label="{309\:\ 0x0282|0x0282: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('singleItem' boolean)])  (LINE:316)\l}"];
Node_257 [shape=record,label="{257\:\ 0x01b9|0x01b9: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_333 [shape=record,label="{333\:\ 0x01a8|SYNTHETIC\l}"];
Node_252 [shape=record,label="{252\:\ 0x01a8|0x01a8: MOVE  (r36 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightMode' int)])  (LINE:261)\l0x01aa: MOVE  (r37 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('widthSize' int)]) \l0x01ac: MOVE  (r32 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightPadding' int)]) \l0x01ae: MOVE  (r35 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('needsExpansion' boolean)]) \l0x01b0: MOVE  (r34 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('expandableItemCount' int)]) \l}"];
Node_332 [shape=record,label="{332\:\ 0x01a8|SYNTHETIC\l}"];
Node_216 [shape=record,label="{216\:\ 0x00f1|0x00f1: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ActionMenuView.onMeasureExactFormat((r40 'this' I:androidx.appcompat.widget.ActionMenuView A[IMMUTABLE_TYPE, THIS]), (r41 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:211:0x00dc \-\> B:183:0x0054, CROSS_EDGE: B:210:0x00d5 \-\> B:211:0x00dc, CROSS_EDGE: B:205:0x00b7 \-\> B:207:0x00bb, CROSS_EDGE: B:202:0x00b1 \-\> B:204:0x00b5, CROSS_EDGE: B:200:0x00a2 \-\> B:201:0x00a3, CROSS_EDGE: B:196:0x0099 \-\> B:197:0x009a, CROSS_EDGE: B:192:0x008c \-\> B:196:0x0099, CROSS_EDGE: B:190:0x0077 \-\> B:191:0x007a, CROSS_EDGE: B:185:0x0064 \-\> B:211:0x00dc, BACK_EDGE: B:232:0x0137 \-\> B:222:0x010c, CROSS_EDGE: B:231:0x0131 \-\> B:232:0x0137, CROSS_EDGE: B:230:0x012f \-\> B:232:0x0137, CROSS_EDGE: B:224:0x0120 \-\> B:232:0x0137, BACK_EDGE: B:318:0x02ad \-\> B:313:0x0288, CROSS_EDGE: B:317:0x029b \-\> B:318:0x02ad, CROSS_EDGE: B:326:0x02c6 \-\> B:177:?, CROSS_EDGE: B:324:0x02bf \-\> B:325:0x02c1, CROSS_EDGE: B:320:0x02b5 \-\> B:321:0x02b7, BACK_EDGE: B:307:0x0277 \-\> B:286:0x021f, CROSS_EDGE: B:297:0x0251 \-\> B:307:0x0277, CROSS_EDGE: B:295:0x0248 \-\> B:297:0x0251, CROSS_EDGE: B:293:0x0244 \-\> B:297:0x0251, CROSS_EDGE: B:300:0x0259 \-\> B:307:0x0277, CROSS_EDGE: B:306:0x0273 \-\> B:307:0x0277, CROSS_EDGE: B:305:0x0271 \-\> B:307:0x0277, CROSS_EDGE: B:302:0x0269 \-\> B:304:0x026f, CROSS_EDGE: B:308:0x027d \-\> B:311:0x0285, CROSS_EDGE: B:284:0x0218 \-\> B:285:0x021a, CROSS_EDGE: B:279:0x0208 \-\> B:281:0x020b, CROSS_EDGE: B:277:0x01f8 \-\> B:281:0x020b, CROSS_EDGE: B:273:0x01e9 \-\> B:276:0x01ee, CROSS_EDGE: B:275:0x01ed \-\> B:276:0x01ee, CROSS_EDGE: B:269:0x01d2 \-\> B:281:0x020b, CROSS_EDGE: B:263:0x01c4 \-\> B:268:0x01cd, CROSS_EDGE: B:262:0x01c2 \-\> B:268:0x01cd, CROSS_EDGE: B:309:0x0282 \-\> B:310:0x0283, CROSS_EDGE: B:258:0x01ba \-\> B:309:0x0282, CROSS_EDGE: B:257:0x01b9 \-\> B:258:0x01ba, CROSS_EDGE: B:253:0x01b2 \-\> B:257:0x01b9, BACK_EDGE: B:250:0x0191 \-\> B:237:0x014f, CROSS_EDGE: B:241:0x016e \-\> B:250:0x0191, CROSS_EDGE: B:249:0x0187 \-\> B:250:0x0191, CROSS_EDGE: B:247:0x017d \-\> B:249:0x0187, CROSS_EDGE: B:245:0x017a \-\> B:249:0x0187, CROSS_EDGE: B:243:0x0176 \-\> B:249:0x0187, BACK_EDGE: B:251:0x019a \-\> B:218:0x00f3, CROSS_EDGE: B:252:0x01a8 \-\> B:253:0x01b2, CROSS_EDGE: B:219:0x00f7 \-\> B:252:0x01a8, CROSS_EDGE: B:216:0x00f1 \-\> B:217:0x00f2, CROSS_EDGE: B:213:0x00eb \-\> B:216:0x00f1\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0054: r3 'heightSize' I\l  0x0017\-0x0054: r4 'widthPadding' I\l  0x003e\-0x0054: r16 'visibleItemCount' I\l  0x002c\-0x005c: r9 'cellCount' I\l  0x002e\-0x0062: r10 'cellSizeRemaining' I\l  0x0054\-0x0073: r3 'visibleItemCount' I\l  0x0073\-0x0077: r25 'visibleItemCount' I\l  0x0077\-0x007a: r3 'visibleItemCount' I\l  0x006a\-0x00a5: r9 'isGeneratedItem' Z\l  0x00a3\-0x00af: r3 'cellsAvailable' I\l  0x003a\-0x00c4: r13 'maxChildHeight' I\l  0x00a9\-0x00cc: r9 'cellsUsed' I\l  0x0080\-0x00cc: r10 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0042\-0x00d4: r18 'smallestItemsAt' J\l  0x00cc\-0x00d5: r22 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x00cc\-0x00d5: r28 'cellsUsed' I\l  0x00d4\-0x00d5: r9 'smallestItemsAt' J\l  0x00d5\-0x00d9: r9 'cellsUsed' I\l  0x00d5\-0x00d9: r10 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x005a\-0x00dc: r7 'child' Landroid\/view\/View;\l  0x00d9\-0x00dc: r22 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x007a\-0x00dc: r25 'visibleItemCount' I\l  0x00a5\-0x00dc: r26 'isGeneratedItem' Z\l  0x00af\-0x00dc: r27 'cellsAvailable' I\l  0x00d9\-0x00dc: r28 'cellsUsed' I\l  0x00c4\-0x00dc: r3 'maxChildHeight' I\l  0x005c\-0x00e6: r23 'cellCount' I\l  0x0062\-0x00e6: r24 'cellSizeRemaining' I\l  0x0054\-0x00ea: r4 'i' I\l  0x00e6\-0x00ea: r9 'cellCount' I\l  0x00e6\-0x00ea: r10 'cellSizeRemaining' I\l  0x0102\-0x010c: r31 'minCellsItemCount' I\l  0x0020\-0x010c: r5 'heightPadding' I\l  0x00f3\-0x0118: r9 'needsExpansion' Z\l  0x003c\-0x011e: r15 'expandableItemCount' I\l  0x011c\-0x0137: r9 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0112\-0x0137: r33 'child' Landroid\/view\/View;\l  0x011e\-0x013e: r34 'expandableItemCount' I\l  0x0118\-0x013e: r35 'needsExpansion' Z\l  0x010c\-0x0142: r5 'i' I\l  0x013e\-0x0142: r9 'needsExpansion' Z\l  0x013e\-0x0142: r15 'expandableItemCount' I\l  0x010c\-0x015f: r4 'minCellsItemCount' I\l  0x0006\-0x0165: r1 'heightMode' I\l  0x000a\-0x0165: r2 'widthSize' I\l  0x0155\-0x0191: r9 'child' Landroid\/view\/View;\l  0x015b\-0x0191: r15 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x015f\-0x019a: r33 'minCellsItemCount' I\l  0x0165\-0x019a: r36 'heightMode' I\l  0x0165\-0x019a: r37 'widthSize' I\l  0x019a\-0x01a0: r1 'heightMode' I\l  0x019a\-0x01a0: r2 'widthSize' I\l  0x019a\-0x01a0: r4 'minCellsItemCount' I\l  0x014f\-0x01a0: r5 'i' I\l  0x00fe\-0x01a1: r10 'minCells' I\l  0x0100\-0x01a1: r29 'minCellsAt' J\l  0x01a0\-0x01a1: r33 'minCellsItemCount' I\l  0x0142\-0x01a1: r35 'needsExpansion' Z\l  0x010c\-0x01a8: r32 'heightPadding' I\l  0x0142\-0x01a8: r34 'expandableItemCount' I\l  0x01a0\-0x01a8: r36 'heightMode' I\l  0x01a0\-0x01a8: r37 'widthSize' I\l  0x01a8\-0x01b2: r1 'heightMode' I\l  0x01a8\-0x01b2: r2 'widthSize' I\l  0x01a8\-0x01b2: r5 'heightPadding' I\l  0x01a1\-0x01b2: r9 'needsExpansion' Z\l  0x01a8\-0x01b2: r15 'expandableItemCount' I\l  0x01e7\-0x01ed: r5 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0206\-0x020b: r4 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x01b2\-0x021f: r35 'needsExpansion' Z\l  0x01ba\-0x0227: r1 'singleItem' Z\l  0x01d2\-0x0227: r2 'expandCount' F\l  0x0235\-0x0277: r1 'child' Landroid\/view\/View;\l  0x023b\-0x0277: r2 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0227\-0x027d: r10 'singleItem' Z\l  0x0227\-0x027d: r20 'expandCount' F\l  0x027d\-0x0280: r1 'singleItem' Z\l  0x027d\-0x0280: r2 'expandCount' F\l  0x021f\-0x0280: r5 'i' I\l  0x021c\-0x0282: r4 'extraPixels' I\l  0x021f\-0x0282: r9 'needsExpansion' Z\l  0x0280\-0x0282: r10 'singleItem' Z\l  0x0280\-0x0282: r20 'expandCount' F\l  0x0282\-0x0283: r1 'singleItem' Z\l  0x0282\-0x0285: r35 'needsExpansion' Z\l  0x00dc\-0x02a6: r3 'visibleItemCount' I\l  0x028e\-0x02ad: r4 'child' Landroid\/view\/View;\l  0x0294\-0x02ad: r5 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x02a2\-0x02ad: r15 'width' I\l  0x02a6\-0x02b2: r22 'visibleItemCount' I\l  0x02b2\-0x02b4: r3 'visibleItemCount' I\l  0x0288\-0x02b5: r2 'i' I\l  0x02b4\-0x02b5: r22 'visibleItemCount' I\l  0x02b5\-0x02b7: r3 'visibleItemCount' I\l  0x01b2\-0x02bb: r36 'heightMode' I\l  0x0054\-0x02be: r16 'heightSize' I\l  0x02be\-0x02bf: r3 'heightSize' I\l  0x02bf\-0x02c1: r16 'heightSize' I\l  0x01b2\-0x02c3: r37 'widthSize' I\l  0x02bb\-0x02c6: r1 'heightMode' I\l  0x02c3\-0x02c6: r2 'widthSize' I\l  0x02c1\-0x02c6: r3 'heightSize' I\l  0x0027\-0x02c6: r6 'itemHeightSpec' I\l  0x00f2\-0x02c6: r7 'centerSingleExpandedItem' Z\l  0x0038\-0x02c6: r8 'cellSize' I\l  0x0285\-0x02c6: r9 'needsExpansion' Z\l  0x0283\-0x02c6: r10 'singleItem' Z\l  0x0046\-0x02c6: r11 'childCount' I\l  0x0039\-0x02c6: r12 'cellsRemaining' I\l  0x00dc\-0x02c6: r13 'maxChildHeight' I\l  0x003b\-0x02c6: r14 'maxCellsUsed' I\l  0x0040\-0x02c6: r17 'hasOverflow' Z\l  0x00d5\-0x02c6: r18 'smallestItemsAt' J\l  0x0054\-0x02c6: r21 'widthPadding' I\l  0x02b7\-0x02c6: r22 'visibleItemCount' I\l  0x00ea\-0x02c6: r23 'cellCount' I\l  0x00ea\-0x02c6: r24 'cellSizeRemaining' I\l  0x01b2\-0x02c6: r32 'heightPadding' I\l  0x01b2\-0x02c6: r34 'expandableItemCount' I\l  \-1 \-0x02c6: r41 'widthMeasureSpec' I\l  \-1 \-0x02c6: r42 'heightMeasureSpec' I\l}"];
MethodNode -> Node_176;Node_176 -> Node_178;
Node_178 -> Node_179;
Node_179 -> Node_180[style=dashed];
Node_179 -> Node_182;
Node_180 -> Node_181;
Node_181 -> Node_177;
Node_182 -> Node_183;
Node_183 -> Node_184[style=dashed];
Node_183 -> Node_327;
Node_184 -> Node_185;
Node_185 -> Node_187;
Node_185 -> Node_330[style=dashed];
Node_187 -> Node_188;
Node_188 -> Node_189[style=dashed];
Node_188 -> Node_190;
Node_189 -> Node_191;
Node_191 -> Node_192;
Node_192 -> Node_193[style=dashed];
Node_192 -> Node_196;
Node_193 -> Node_194;
Node_194 -> Node_195[style=dashed];
Node_194 -> Node_196;
Node_195 -> Node_197;
Node_197 -> Node_198;
Node_198 -> Node_199[style=dashed];
Node_198 -> Node_200;
Node_199 -> Node_201;
Node_201 -> Node_202;
Node_202 -> Node_203[style=dashed];
Node_202 -> Node_204;
Node_203 -> Node_204;
Node_204 -> Node_205;
Node_205 -> Node_206[style=dashed];
Node_205 -> Node_207;
Node_206 -> Node_207;
Node_207 -> Node_208;
Node_208 -> Node_209[style=dashed];
Node_208 -> Node_210;
Node_209 -> Node_329;
Node_329 -> Node_211;
Node_211 -> Node_183;
Node_210 -> Node_328;
Node_328 -> Node_211;
Node_200 -> Node_201;
Node_196 -> Node_197;
Node_190 -> Node_191;
Node_330 -> Node_211;
Node_327 -> Node_212;
Node_212 -> Node_213;
Node_213 -> Node_214[style=dashed];
Node_213 -> Node_216;
Node_214 -> Node_215[style=dashed];
Node_214 -> Node_216;
Node_215 -> Node_217;
Node_217 -> Node_218;
Node_218 -> Node_219;
Node_219 -> Node_220[style=dashed];
Node_219 -> Node_332;
Node_220 -> Node_221[style=dashed];
Node_220 -> Node_333;
Node_221 -> Node_222;
Node_222 -> Node_223[style=dashed];
Node_222 -> Node_334;
Node_223 -> Node_224;
Node_224 -> Node_226;
Node_224 -> Node_338[style=dashed];
Node_226 -> Node_227;
Node_227 -> Node_228[style=dashed];
Node_227 -> Node_229;
Node_228 -> Node_336;
Node_336 -> Node_232;
Node_232 -> Node_222;
Node_229 -> Node_230;
Node_230 -> Node_231[style=dashed];
Node_230 -> Node_337;
Node_231 -> Node_335;
Node_335 -> Node_232;
Node_337 -> Node_232;
Node_338 -> Node_232;
Node_334 -> Node_233;
Node_233 -> Node_234;
Node_234 -> Node_236;
Node_234 -> Node_331[style=dashed];
Node_236 -> Node_237;
Node_237 -> Node_238[style=dashed];
Node_237 -> Node_339;
Node_238 -> Node_239;
Node_239 -> Node_240[style=dashed];
Node_239 -> Node_243;
Node_240 -> Node_241;
Node_241 -> Node_242[style=dashed];
Node_241 -> Node_341;
Node_242 -> Node_342;
Node_342 -> Node_250;
Node_250 -> Node_237;
Node_341 -> Node_250;
Node_243 -> Node_244[style=dashed];
Node_243 -> Node_249;
Node_244 -> Node_245;
Node_245 -> Node_246[style=dashed];
Node_245 -> Node_249;
Node_246 -> Node_247;
Node_247 -> Node_248[style=dashed];
Node_247 -> Node_249;
Node_248 -> Node_249;
Node_249 -> Node_340;
Node_340 -> Node_250;
Node_339 -> Node_251;
Node_251 -> Node_218;
Node_331 -> Node_235;
Node_235 -> Node_253;
Node_253 -> Node_254[style=dashed];
Node_253 -> Node_257;
Node_254 -> Node_255;
Node_255 -> Node_256[style=dashed];
Node_255 -> Node_257;
Node_256 -> Node_258;
Node_258 -> Node_259[style=dashed];
Node_258 -> Node_309;
Node_259 -> Node_260;
Node_260 -> Node_261[style=dashed];
Node_260 -> Node_309;
Node_261 -> Node_262;
Node_262 -> Node_263[style=dashed];
Node_262 -> Node_268;
Node_263 -> Node_264[style=dashed];
Node_263 -> Node_268;
Node_264 -> Node_265;
Node_265 -> Node_267;
Node_265 -> Node_268[style=dashed];
Node_267 -> Node_310;
Node_310 -> Node_311;
Node_311 -> Node_312[style=dashed];
Node_311 -> Node_320;
Node_312 -> Node_313;
Node_313 -> Node_314[style=dashed];
Node_313 -> Node_343;
Node_314 -> Node_315;
Node_315 -> Node_316[style=dashed];
Node_315 -> Node_317;
Node_316 -> Node_345;
Node_345 -> Node_318;
Node_318 -> Node_313;
Node_317 -> Node_344;
Node_344 -> Node_318;
Node_343 -> Node_319;
Node_319 -> Node_321;
Node_321 -> Node_322;
Node_322 -> Node_323[style=dashed];
Node_322 -> Node_324;
Node_323 -> Node_325;
Node_325 -> Node_326;
Node_326 -> Node_177;
Node_324 -> Node_325;
Node_320 -> Node_321;
Node_268 -> Node_269;
Node_269 -> Node_270[style=dashed];
Node_269 -> Node_281;
Node_270 -> Node_271;
Node_271 -> Node_272[style=dashed];
Node_271 -> Node_275;
Node_272 -> Node_273;
Node_273 -> Node_274[style=dashed];
Node_273 -> Node_276;
Node_274 -> Node_276;
Node_276 -> Node_277;
Node_277 -> Node_278[style=dashed];
Node_277 -> Node_281;
Node_278 -> Node_279;
Node_279 -> Node_280[style=dashed];
Node_279 -> Node_281;
Node_280 -> Node_281;
Node_275 -> Node_276;
Node_281 -> Node_282;
Node_282 -> Node_283[style=dashed];
Node_282 -> Node_284;
Node_283 -> Node_285;
Node_285 -> Node_286;
Node_286 -> Node_287[style=dashed];
Node_286 -> Node_346;
Node_287 -> Node_288;
Node_288 -> Node_289[style=dashed];
Node_288 -> Node_290;
Node_289 -> Node_348;
Node_348 -> Node_307;
Node_307 -> Node_286;
Node_290 -> Node_291;
Node_291 -> Node_292[style=dashed];
Node_291 -> Node_298;
Node_292 -> Node_293;
Node_293 -> Node_294[style=dashed];
Node_293 -> Node_297;
Node_294 -> Node_295;
Node_295 -> Node_296[style=dashed];
Node_295 -> Node_297;
Node_296 -> Node_297;
Node_297 -> Node_349;
Node_349 -> Node_307;
Node_298 -> Node_299;
Node_299 -> Node_300[style=dashed];
Node_299 -> Node_301;
Node_300 -> Node_350;
Node_350 -> Node_307;
Node_301 -> Node_302;
Node_302 -> Node_303[style=dashed];
Node_302 -> Node_304;
Node_303 -> Node_304;
Node_304 -> Node_305;
Node_305 -> Node_306[style=dashed];
Node_305 -> Node_351;
Node_306 -> Node_347;
Node_347 -> Node_307;
Node_351 -> Node_307;
Node_346 -> Node_308;
Node_308 -> Node_311;
Node_284 -> Node_285;
Node_309 -> Node_310;
Node_257 -> Node_258;
Node_333 -> Node_252;
Node_252 -> Node_253;
Node_332 -> Node_252;
Node_216 -> Node_217;
}

