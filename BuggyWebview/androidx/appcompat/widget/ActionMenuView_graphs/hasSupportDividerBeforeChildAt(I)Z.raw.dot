digraph "CFG forandroidx.appcompat.widget.ActionMenuView.hasSupportDividerBeforeChildAt(I)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childIndex' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0004  (LINE:733)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|RETURN\l|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:734)\l0x0003: RETURN  (r0 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: ARITH  (r0 I:int) = (r5 I:int A[D('childIndex' int)]) + (\-1 int)  (LINE:736)\l0x0006: INVOKE  (r0 I:android.view.View) = (r4 I:androidx.appcompat.widget.ActionMenuView), (r0 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)]\l0x000a: INVOKE  (r1 I:android.view.View) = (r4 I:androidx.appcompat.widget.ActionMenuView), (r5 I:int A[D('childIndex' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:737)\l0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:738)\l0x000f: INVOKE  (r3 I:int) = (r4 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildCount():int A[MD:():int (s)] (LINE:739)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0013|0x0013: IF  (r5 I:??[int, byte, short, char] A[D('childIndex' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:27:0x0021 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: INSTANCE_OF  (r3 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('childBefore' android.view.View)]) androidx.appcompat.widget.ActionMenuView$ActionMenuChildView \l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0021 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('childBefore' android.view.View)])  (LINE:740)\l0x001a: CHECK_CAST (r3 I:androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) = (androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) (r3 I:??[OBJECT, ARRAY]) \l0x001c: INVOKE  (r3 I:boolean) = (r3 I:androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) type: INTERFACE call: androidx.appcompat.widget.ActionMenuView.ActionMenuChildView.needsDividerAfter():boolean A[MD:():boolean (m)]\l0x0020: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('result' boolean)]) \| (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|0x0021: IF  (r5 I:??[int, byte, short, char] A[D('childIndex' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:32:?  (LINE:742)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|0x0023: INSTANCE_OF  (r3 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)]) androidx.appcompat.widget.ActionMenuView$ActionMenuChildView \l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_30 [shape=record,label="{30\:\ 0x0027|0x0027: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:743)\l0x0028: CHECK_CAST (r3 I:androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) = (androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) (r3 I:??[OBJECT, ARRAY]) \l0x002a: INVOKE  (r3 I:boolean) = (r3 I:androidx.appcompat.widget.ActionMenuView$ActionMenuChildView) type: INTERFACE call: androidx.appcompat.widget.ActionMenuView.ActionMenuChildView.needsDividerBefore():boolean A[MD:():boolean (m)]\l0x002e: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char] A[D('result' boolean)]) \| (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|RETURN\lORIG_RETURN\l|0x002f: RETURN  (r2 I:boolean A[D('result' boolean)])  (LINE:745)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN  (r2 I:boolean A[D('result' boolean)]) A[SYNTHETIC] (LINE:745)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN  (r2 I:boolean A[D('result' boolean)]) A[SYNTHETIC] (LINE:745)\l}"];
MethodNode[shape=record,label="{protected boolean androidx.appcompat.widget.ActionMenuView.hasSupportDividerBeforeChildAt((r4 'this' I:androidx.appcompat.widget.ActionMenuView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('childIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x002f \-\> B:18:?, CROSS_EDGE: B:29:0x0025 \-\> B:31:0x002f, CROSS_EDGE: B:27:0x0021 \-\> B:31:0x002f, CROSS_EDGE: B:25:0x0017 \-\> B:27:0x0021, CROSS_EDGE: B:23:0x0013 \-\> B:27:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x002f: r0 'childBefore' Landroid\/view\/View;\l  0x000e\-0x002f: r1 'child' Landroid\/view\/View;\l  0x000f\-0x002f: r2 'result' Z\l  \-1 \-0x002f: r5 'childIndex' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
}

