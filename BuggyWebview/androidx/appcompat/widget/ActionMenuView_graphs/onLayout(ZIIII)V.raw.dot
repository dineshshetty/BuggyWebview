digraph "CFG forandroidx.appcompat.widget.ActionMenuView.onLayout(ZIIII)V" {
Node_69 [shape=record,label="{69\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_71 [shape=record,label="{71\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY])  (LINE:442)\l0x0002: IGET  (r1 I:boolean) = (r0 I:androidx.appcompat.widget.ActionMenuView) androidx.appcompat.widget.ActionMenuView.mFormatItems boolean \l}"];
Node_72 [shape=record,label="{72\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x000a \l}"];
Node_73 [shape=record,label="{73\:\ 0x0006|0x0006: INVOKE  \l  (r20 I:androidx.appcompat.widget.LinearLayoutCompat)\l  (r21 I:boolean A[D('changed' boolean)])\l  (r22 I:int A[D('left' int)])\l  (r23 I:int A[D('top' int)])\l  (r24 I:int A[D('right' int)])\l  (r25 I:int A[D('bottom' int)])\l type: SUPER call: androidx.appcompat.widget.LinearLayoutCompat.onLayout(boolean, int, int, int, int):void A[MD:(boolean, int, int, int, int):void (m)] (LINE:443)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:444)\l}"];
Node_70 [shape=record,label="{70\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_75 [shape=record,label="{75\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildCount():int A[MD:():int (s)] (LINE:447)\l0x000e: ARITH  (r2 I:int) = (r25 I:int A[D('bottom' int)]) \- (r23 I:int A[D('top' int)])  (LINE:448)\l0x0010: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0012: INVOKE  (r3 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getDividerWidth():int A[MD:():int (m)] (LINE:449)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:450)\l0x0017: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:451)\l0x0018: ARITH  (r6 I:int) = (r24 I:int A[D('right' int)]) \- (r22 I:int A[D('left' int)])  (LINE:452)\l0x001a: INVOKE  (r7 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingRight():int A[MD:():int (s)]\l0x001e: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x001f: INVOKE  (r7 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingLeft():int A[MD:():int (s)]\l0x0023: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0024: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:453)\l0x0025: INVOKE  (r8 I:boolean) = (r20 I:android.view.View) type: STATIC call: androidx.appcompat.widget.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:454)\l0x0029: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:455)\l}"];
Node_76 [shape=record,label="{76\:\ 0x002a|LOOP_START\lLOOP:0: B:76:0x002a\-\>B:92:0x0090\l|0x002a: CONST  (r10 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x002c|0x002c: IF  (r9 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:125:0x0095 \l}"];
Node_78 [shape=record,label="{78\:\ 0x002e|0x002e: INVOKE  (r11 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r9 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:456)\l0x0032: INVOKE  (r12 I:int) = (r11 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:457)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0036|0x0036: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x003b \l}"];
Node_80 [shape=record,label="{80\:\ 0x0038|0x0038: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)])  (LINE:458)\l}"];
Node_127 [shape=record,label="{127\:\ 0x0090|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x0090|LOOP_END\lLOOP:0: B:76:0x002a\-\>B:92:0x0090\l|0x0090: ARITH  (r9 I:int) = (r9 I:int A[D('i' int)]) + (1 int)  (LINE:455)\l0x0092: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x003b|0x003b: INVOKE  (r10 I:android.view.ViewGroup$LayoutParams) = (r11 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:461)\l0x003f: CHECK_CAST (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r10 I:??[OBJECT, ARRAY]) \l0x0041: IGET  (r12 I:boolean) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('p' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean  (LINE:462)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0043|0x0043: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:91:0x007e \l}"];
Node_83 [shape=record,label="{83\:\ 0x0045|0x0045: INVOKE  (r4 I:int A[D('overflowWidth' int)]) = (r11 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:463)\l0x0049: INVOKE  (r12 I:boolean) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r9 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.hasSupportDividerBeforeChildAt(int):boolean A[MD:(int):boolean (m)] (LINE:464)\l}"];
Node_84 [shape=record,label="{84\:\ 0x004d|0x004d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0050 \l}"];
Node_85 [shape=record,label="{85\:\ 0x004f|0x004f: ARITH  (r4 I:int) = (r4 I:int A[D('overflowWidth' int)]) + (r3 I:int A[D('dividerWidth' int)])  (LINE:465)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0050|0x0050: INVOKE  (r12 I:int) = (r11 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:467)\l}"];
Node_87 [shape=record,label="{87\:\ 0x0054|0x0054: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLayoutRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x0060  (LINE:470)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0056|0x0056: INVOKE  (r13 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingLeft():int A[MD:():int (s)] (LINE:471)\l0x005a: IGET  (r14 I:int) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('p' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int \l0x005c: ARITH  (r13 I:int) = (r13 I:int) + (r14 I:int) \l0x005d: ARITH  (r14 I:int) = (r13 I:int A[D('l' int)]) + (r4 I:int A[D('overflowWidth' int)])  (LINE:472)\l}"];
Node_90 [shape=record,label="{90\:\ 0x006f|0x006f: ARITH  (r15 I:int) = (r12 I:int A[D('height' int)]) \/ (2 int)  (LINE:477)\l0x0071: ARITH  (r15 I:int) = (r2 I:int A[D('midVertical' int)]) \- (r15 I:int) \l0x0073: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)])  (LINE:478)\l0x0075: ARITH  (r3 I:int A[D('dividerWidth' int)]) = (r15 I:int A[D('t' int)]) + (r12 I:int A[D('height' int)]) \l0x0077: INVOKE  \l  (r11 I:android.view.View A[D('v' android.view.View)])\l  (r13 I:int A[D('l' int)])\l  (r15 I:int A[D('t' int)])\l  (r14 I:int A[D('r' int)])\l  (r3 I:int A[D('b' int)])\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:479)\l0x007a: ARITH  (r6 I:int) = (r6 I:int A[D('widthRemaining' int)]) \- (r4 I:int A[D('overflowWidth' int)])  (LINE:481)\l0x007b: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('b' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:482)\l0x007c: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('hasOverflow' boolean)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('hasOverflow' boolean)])  (LINE:483)\l}"];
Node_128 [shape=record,label="{128\:\ 0x0090|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0060|0x0060: INVOKE  (r13 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getWidth():int A[MD:():int (s)] (LINE:474)\l0x0064: INVOKE  (r14 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingRight():int A[MD:():int (s)]\l0x0068: ARITH  (r13 I:int) = (r13 I:int) \- (r14 I:int) \l0x0069: IGET  (r14 I:int) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('p' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int \l0x006b: ARITH  (r14 I:int) = (r13 I:int) \- (r14 I:int) \l0x006d: ARITH  (r13 I:int) = (r14 I:int A[D('r' int)]) \- (r4 I:int A[D('overflowWidth' int)])  (LINE:475)\l}"];
Node_91 [shape=record,label="{91\:\ 0x007e|0x007e: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)])  (LINE:484)\l0x0080: INVOKE  (r3 I:int) = (r11 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)]\l0x0084: IGET  (r12 I:int) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('p' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int \l0x0086: ARITH  (r3 I:int) = (r3 I:int) + (r12 I:int) \l0x0087: IGET  (r12 I:int) = \l  (r10 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('p' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int \l0x0089: ARITH  (r3 I:int) = (r3 I:int) + (r12 I:int) \l0x008a: ARITH  (r6 I:int) = (r6 I:int A[D('widthRemaining' int)]) \- (r3 I:int A[D('size' int)])  (LINE:485)\l0x008b: INVOKE  (r0 I:androidx.appcompat.widget.ActionMenuView), (r9 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.hasSupportDividerBeforeChildAt(int):boolean A[MD:(int):boolean (m)] (LINE:486)\l0x008e: ARITH  (r5 I:int) = (r5 I:int A[D('nonOverflowCount' int)]) + (1 int)  (LINE:488)\l}"];
Node_126 [shape=record,label="{126\:\ 0x0090|SYNTHETIC\l}"];
Node_125 [shape=record,label="{125\:\ 0x0095|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0095|0x0095: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)]) \l0x0097: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dividerWidth' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:492)\l0x0098: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_94 [shape=record,label="{94\:\ 0x0099|0x0099: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childCount' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:98:0x00bd \l}"];
Node_95 [shape=record,label="{95\:\ 0x009b|0x009b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasOverflow' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:98:0x00bd \l}"];
Node_96 [shape=record,label="{96\:\ 0x009d|0x009d: INVOKE  (r3 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r3 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:494)\l0x00a1: INVOKE  (r9 I:int) = (r3 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:495)\l0x00a5: INVOKE  (r10 I:int) = (r3 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:496)\l0x00a9: ARITH  (r11 I:int) = (r24 I:int A[D('right' int)]) \- (r22 I:int A[D('left' int)])  (LINE:497)\l0x00ab: ARITH  (r11 I:int) = (r11 I:int) \/ (2 int) \l0x00ad: ARITH  (r12 I:int) = (r9 I:int A[D('width' int)]) \/ (2 int)  (LINE:498)\l0x00af: ARITH  (r12 I:int) = (r11 I:int A[D('midHorizontal' int)]) \- (r12 I:int) \l0x00b1: ARITH  (r13 I:int) = (r10 I:int A[D('height' int)]) \/ (2 int)  (LINE:499)\l0x00b3: ARITH  (r13 I:int) = (r2 I:int A[D('midVertical' int)]) \- (r13 I:int) \l0x00b5: ARITH  (r14 I:int) = (r12 I:int A[D('l' int)]) + (r9 I:int A[D('width' int)])  (LINE:500)\l0x00b7: ARITH  (r15 I:int) = (r13 I:int A[D('t' int)]) + (r10 I:int A[D('height' int)]) \l0x00b9: INVOKE  \l  (r3 I:android.view.View A[D('v' android.view.View)])\l  (r12 I:int A[D('l' int)])\l  (r13 I:int A[D('t' int)])\l  (r14 I:int)\l  (r15 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_97 [shape=record,label="{97\:\ 0x00bc|RETURN\l|0x00bc: RETURN    (LINE:501)\l}"];
Node_98 [shape=record,label="{98\:\ 0x00bd|0x00bd: ARITH  (r9 I:??[int, boolean] A[D('width' int)]) = (r7 I:??[int, boolean, short, byte, char] A[D('hasOverflow' boolean)]) ^ (1 ??[boolean, int, float, short, byte, char])  (LINE:504)\l0x00bf: ARITH  (r9 I:int) = (r5 I:int A[D('nonOverflowCount' int)]) \- (r9 I:int) \l}"];
Node_99 [shape=record,label="{99\:\ 0x00c1|0x00c1: IF  (r9 I:??[int, byte, short, char] A[D('spacerCount' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:101:0x00c6  (LINE:505)\l}"];
Node_100 [shape=record,label="{100\:\ 0x00c3|0x00c3: ARITH  (r11 I:int) = (r6 I:int A[D('widthRemaining' int)]) \/ (r9 I:int A[D('spacerCount' int)]) \l}"];
Node_102 [shape=record,label="{102\:\ 0x00c7|0x00c7: INVOKE  (r3 I:int) = (r3 I:int), (r11 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_103 [shape=record,label="{103\:\ 0x00cb|0x00cb: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isLayoutRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:115:0x0124  (LINE:507)\l}"];
Node_104 [shape=record,label="{104\:\ 0x00cd|0x00cd: INVOKE  (r11 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getWidth():int A[MD:():int (s)] (LINE:508)\l0x00d1: INVOKE  (r12 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingRight():int A[MD:():int (s)]\l0x00d5: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x00d6: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:509)\l}"];
Node_105 [shape=record,label="{105\:\ 0x00d7|LOOP_START\lLOOP:1: B:105:0x00d7\-\>B:113:0x0116\l|0x00d7: IF  (r12 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:129:0x011f \l}"];
Node_106 [shape=record,label="{106\:\ 0x00d9|0x00d9: INVOKE  (r13 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r12 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:510)\l0x00dd: INVOKE  (r14 I:android.view.ViewGroup$LayoutParams) = (r13 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:511)\l0x00e1: CHECK_CAST (r14 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r14 I:??[OBJECT, ARRAY]) \l0x00e3: INVOKE  (r15 I:int) = (r13 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:512)\l}"];
Node_107 [shape=record,label="{107\:\ 0x00e7|0x00e7: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:112:0x0112 \l}"];
Node_108 [shape=record,label="{108\:\ 0x00e9|0x00e9: IGET  (r15 I:boolean) = \l  (r14 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean \l}"];
Node_109 [shape=record,label="{109\:\ 0x00eb|0x00eb: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x00f2 \l}"];
Node_110 [shape=record,label="{110\:\ 0x00ed|0x00ed: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)])  (LINE:513)\l0x00ef: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l}"];
Node_131 [shape=record,label="{131\:\ 0x0116|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x0116|LOOP_END\lLOOP:1: B:105:0x00d7\-\>B:113:0x0116\l|0x0116: ARITH  (r12 I:int) = (r12 I:int A[D('i' int)]) + (1 int)  (LINE:509)\l0x0118: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)]) \l0x011a: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l0x011c: CONST  (r10 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_111 [shape=record,label="{111\:\ 0x00f2|0x00f2: IGET  (r15 I:int) = \l  (r14 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int  (LINE:516)\l0x00f4: ARITH  (r11 I:int) = (r11 I:int A[D('startRight' int)]) \- (r15 I:int) \l0x00f5: INVOKE  (r15 I:int) = (r13 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:517)\l0x00f9: INVOKE  (r17 I:int) = (r13 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:518)\l0x00fd: ARITH  (r18 I:int) = (r17 I:int A[D('height' int)]) \/ (2 int)  (LINE:519)\l0x00ff: ARITH  (r10 I:int) = (r2 I:int A[D('midVertical' int)]) \- (r18 I:int) \l0x0101: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)])  (LINE:520)\l0x0103: ARITH  (r4 I:int A[D('overflowWidth' int)]) = (r11 I:int A[D('startRight' int)]) \- (r15 I:int A[D('width' int)]) \l0x0105: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l0x0107: ARITH  (r5 I:int A[D('nonOverflowCount' int)]) = (r10 I:int A[D('t' int)]) + (r17 I:int A[D('height' int)]) \l0x0109: INVOKE  \l  (r13 I:android.view.View A[D('v' android.view.View)])\l  (r4 I:int)\l  (r10 I:int A[D('t' int)])\l  (r11 I:int A[D('startRight' int)])\l  (r5 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x010c: IGET  (r4 I:int) = \l  (r14 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int  (LINE:521)\l0x010e: ARITH  (r4 I:int) = (r4 I:int) + (r15 I:int A[D('width' int)]) \l0x010f: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int A[D('spacerSize' int)]) \l0x0110: ARITH  (r11 I:int) = (r11 I:int A[D('startRight' int)]) \- (r4 I:int) \l}"];
Node_132 [shape=record,label="{132\:\ 0x0116|SYNTHETIC\l}"];
Node_112 [shape=record,label="{112\:\ 0x0112|0x0112: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)])  (LINE:512)\l0x0114: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l}"];
Node_130 [shape=record,label="{130\:\ 0x0116|SYNTHETIC\l}"];
Node_129 [shape=record,label="{129\:\ 0x011f|SYNTHETIC\l}"];
Node_114 [shape=record,label="{114\:\ 0x011f|0x011f: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)]) \l0x0121: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l}"];
Node_124 [shape=record,label="{124\:\ 0x0166|RETURN\lORIG_RETURN\l|0x0166: RETURN    (LINE:540)\l}"];
Node_115 [shape=record,label="{115\:\ 0x0124|0x0124: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('overflowWidth' int)])  (LINE:524)\l0x0126: MOVE  (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nonOverflowCount' int)]) \l0x0128: INVOKE  (r4 I:int) = (r20 I:androidx.appcompat.widget.ActionMenuView) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getPaddingLeft():int A[MD:():int (s)]\l0x012c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:525)\l}"];
Node_116 [shape=record,label="{116\:\ 0x012d|LOOP_START\lLOOP:2: B:116:0x012d\-\>B:123:0x0161\l|0x012d: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:133:0x0166 \l}"];
Node_117 [shape=record,label="{117\:\ 0x012f|0x012f: INVOKE  (r10 I:android.view.View) = (r0 I:androidx.appcompat.widget.ActionMenuView), (r5 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuView.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:526)\l0x0133: INVOKE  (r11 I:android.view.ViewGroup$LayoutParams) = (r10 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:527)\l0x0137: CHECK_CAST (r11 I:androidx.appcompat.widget.ActionMenuView$LayoutParams) = (androidx.appcompat.widget.ActionMenuView$LayoutParams) (r11 I:??[OBJECT, ARRAY]) \l0x0139: INVOKE  (r12 I:int) = (r10 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:528)\l0x013d: CONST  (r13 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_118 [shape=record,label="{118\:\ 0x013f|0x013f: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:135:0x0161 \l}"];
Node_119 [shape=record,label="{119\:\ 0x0141|0x0141: IGET  (r12 I:boolean) = \l  (r11 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.isOverflowButton boolean \l}"];
Node_120 [shape=record,label="{120\:\ 0x0143|0x0143: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:122:0x0146 \l}"];
Node_122 [shape=record,label="{122\:\ 0x0146|0x0146: IGET  (r12 I:int) = \l  (r11 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.leftMargin int  (LINE:532)\l0x0148: ARITH  (r4 I:int) = (r4 I:int A[D('startLeft' int)]) + (r12 I:int) \l0x0149: INVOKE  (r12 I:int) = (r10 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:533)\l0x014d: INVOKE  (r14 I:int) = (r10 I:android.view.View A[D('v' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:534)\l0x0151: ARITH  (r15 I:int) = (r14 I:int A[D('height' int)]) \/ (2 int)  (LINE:535)\l0x0153: ARITH  (r15 I:int) = (r2 I:int A[D('midVertical' int)]) \- (r15 I:int) \l0x0155: ARITH  (r13 I:int) = (r4 I:int A[D('startLeft' int)]) + (r12 I:int A[D('width' int)])  (LINE:536)\l0x0157: ARITH  (r0 I:int) = (r15 I:int A[D('t' int)]) + (r14 I:int A[D('height' int)]) \l0x0159: INVOKE  \l  (r10 I:android.view.View A[D('v' android.view.View)])\l  (r4 I:int A[D('startLeft' int)])\l  (r15 I:int A[D('t' int)])\l  (r13 I:int)\l  (r0 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x015c: IGET  (r0 I:int) = \l  (r11 I:androidx.appcompat.widget.ActionMenuView$LayoutParams A[D('lp' androidx.appcompat.widget.ActionMenuView$LayoutParams)])\l androidx.appcompat.widget.ActionMenuView.LayoutParams.rightMargin int  (LINE:537)\l0x015e: ARITH  (r0 I:int) = (r0 I:int) + (r12 I:int A[D('width' int)]) \l0x015f: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int A[D('spacerSize' int)]) \l0x0160: ARITH  (r4 I:int) = (r4 I:int A[D('startLeft' int)]) + (r0 I:int) \l}"];
Node_134 [shape=record,label="{134\:\ 0x0161|SYNTHETIC\l}"];
Node_123 [shape=record,label="{123\:\ 0x0161|LOOP_END\lLOOP:2: B:116:0x012d\-\>B:123:0x0161\l|0x0161: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:525)\l0x0163: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY]) \l}"];
Node_136 [shape=record,label="{136\:\ 0x0161|SYNTHETIC\l}"];
Node_135 [shape=record,label="{135\:\ 0x0161|SYNTHETIC\l}"];
Node_133 [shape=record,label="{133\:\ 0x0166|SYNTHETIC\l}"];
Node_137 [shape=record,label="{137\:\ ?|SYNTHETIC\lRETURN\l|0x0166: RETURN   A[SYNTHETIC] (LINE:540)\l}"];
Node_101 [shape=record,label="{101\:\ 0x00c6|0x00c6: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActionMenuView.onLayout((r20 'this' I:androidx.appcompat.widget.ActionMenuView A[IMMUTABLE_TYPE, THIS]), (r21 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:92:0x0090 \-\> B:76:0x002a, CROSS_EDGE: B:90:0x006f \-\> B:92:0x0090, CROSS_EDGE: B:89:0x0060 \-\> B:90:0x006f, CROSS_EDGE: B:84:0x004d \-\> B:86:0x0050, CROSS_EDGE: B:91:0x007e \-\> B:92:0x0090, CROSS_EDGE: B:97:0x00bc \-\> B:70:?, BACK_EDGE: B:113:0x0116 \-\> B:105:0x00d7, CROSS_EDGE: B:111:0x00f2 \-\> B:113:0x0116, CROSS_EDGE: B:112:0x0112 \-\> B:113:0x0116, CROSS_EDGE: B:124:0x0166 \-\> B:70:?, BACK_EDGE: B:123:0x0161 \-\> B:116:0x012d, CROSS_EDGE: B:120:0x0143 \-\> B:123:0x0161, CROSS_EDGE: B:118:0x013f \-\> B:123:0x0161, CROSS_EDGE: B:116:0x012d \-\> B:124:0x0166, CROSS_EDGE: B:101:0x00c6 \-\> B:102:0x00c7, CROSS_EDGE: B:94:0x0099 \-\> B:98:0x00bd\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005d\-0x0060: r13 'l' I\l  0x005f\-0x0060: r14 'r' I\l  0x0016\-0x0075: r3 'dividerWidth' I\l  0x0025\-0x007c: r7 'hasOverflow' Z\l  0x0054\-0x007c: r12 'height' I\l  0x006f\-0x007c: r13 'l' I\l  0x006d\-0x007c: r14 'r' I\l  0x0073\-0x007c: r15 't' I\l  0x0077\-0x007c: r3 'b' I\l  0x0075\-0x007e: r16 'dividerWidth' I\l  0x007c\-0x007e: r3 'hasOverflow' Z\l  0x007e\-0x0080: r3 'dividerWidth' I\l  0x008a\-0x0090: r3 'size' I\l  0x0041\-0x0090: r10 'p' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0032\-0x0090: r11 'v' Landroid\/view\/View;\l  0x0080\-0x0095: r16 'dividerWidth' I\l  0x0095\-0x0097: r3 'dividerWidth' I\l  0x002a\-0x0097: r9 'i' I\l  0x00a1\-0x00bd: r3 'v' Landroid\/view\/View;\l  0x00a5\-0x00bd: r9 'width' I\l  0x00a9\-0x00bd: r10 'height' I\l  0x00ad\-0x00bd: r11 'midHorizontal' I\l  0x00b1\-0x00bd: r12 'l' I\l  0x00b5\-0x00bd: r13 't' I\l  0x0017\-0x0103: r4 'overflowWidth' I\l  0x0018\-0x0107: r5 'nonOverflowCount' I\l  0x0101\-0x0112: r10 't' I\l  0x00f9\-0x0112: r15 'width' I\l  0x00fd\-0x0112: r17 'height' I\l  0x0103\-0x0112: r18 'overflowWidth' I\l  0x0107\-0x0112: r19 'nonOverflowCount' I\l  0x0112\-0x0116: r4 'overflowWidth' I\l  0x0112\-0x0116: r5 'nonOverflowCount' I\l  0x00dd\-0x0116: r13 'v' Landroid\/view\/View;\l  0x00e3\-0x0116: r14 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x0116\-0x011f: r18 'overflowWidth' I\l  0x0116\-0x011f: r19 'nonOverflowCount' I\l  0x011f\-0x0123: r4 'overflowWidth' I\l  0x011f\-0x0123: r5 'nonOverflowCount' I\l  0x00d6\-0x0123: r11 'startRight' I\l  0x00d7\-0x0123: r12 'i' I\l  0x0123\-0x0124: r18 'overflowWidth' I\l  0x0123\-0x0124: r19 'nonOverflowCount' I\l  0x0124\-0x0128: r4 'overflowWidth' I\l  0x0124\-0x0128: r5 'nonOverflowCount' I\l  0x0133\-0x0161: r10 'v' Landroid\/view\/View;\l  0x0139\-0x0161: r11 'lp' Landroidx\/appcompat\/widget\/ActionMenuView$LayoutParams;\l  0x014d\-0x0161: r12 'width' I\l  0x0151\-0x0161: r14 'height' I\l  0x0155\-0x0161: r15 't' I\l  0x012c\-0x0166: r4 'startLeft' I\l  0x012d\-0x0166: r5 'i' I\l  0x000e\-0x0166: r1 'childCount' I\l  0x0012\-0x0166: r2 'midVertical' I\l  0x00cb\-0x0166: r3 'spacerSize' I\l  0x0024\-0x0166: r6 'widthRemaining' I\l  0x007e\-0x0166: r7 'hasOverflow' Z\l  0x0029\-0x0166: r8 'isLayoutRtl' Z\l  0x00c1\-0x0166: r9 'spacerCount' I\l  0x0097\-0x0166: r16 'dividerWidth' I\l  0x0128\-0x0166: r18 'overflowWidth' I\l  0x0128\-0x0166: r19 'nonOverflowCount' I\l  \-1 \-0x0166: r21 'changed' Z\l  \-1 \-0x0166: r22 'left' I\l  \-1 \-0x0166: r23 'top' I\l  \-1 \-0x0166: r24 'right' I\l  \-1 \-0x0166: r25 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_69;Node_69 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_75;
Node_73 -> Node_74;
Node_74 -> Node_70;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_125;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_127;
Node_127 -> Node_92;
Node_92 -> Node_76;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_91;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_86;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_90;
Node_90 -> Node_128;
Node_128 -> Node_92;
Node_89 -> Node_90;
Node_91 -> Node_126;
Node_126 -> Node_92;
Node_125 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_98;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_98;
Node_96 -> Node_97;
Node_97 -> Node_70;
Node_98 -> Node_99;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_101;
Node_100 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_115;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_129;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_112;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_111;
Node_110 -> Node_131;
Node_131 -> Node_113;
Node_113 -> Node_105;
Node_111 -> Node_132;
Node_132 -> Node_113;
Node_112 -> Node_130;
Node_130 -> Node_113;
Node_129 -> Node_114;
Node_114 -> Node_124;
Node_124 -> Node_70;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_133;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_135;
Node_119 -> Node_120;
Node_120 -> Node_122;
Node_120 -> Node_136[style=dashed];
Node_122 -> Node_134;
Node_134 -> Node_123;
Node_123 -> Node_116;
Node_136 -> Node_123;
Node_135 -> Node_123;
Node_133 -> Node_137;
Node_137 -> Node_70;
Node_101 -> Node_102;
}

