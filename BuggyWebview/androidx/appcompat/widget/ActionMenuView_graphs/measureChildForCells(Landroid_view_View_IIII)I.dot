digraph "CFG forandroidx.appcompat.widget.ActionMenuView.measureChildForCells(Landroid\/view\/View;IIII)I" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|androidx.appcompat.widget.ActionMenuView$LayoutParams r2 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) r15.getLayoutParams()\lint r3 = android.view.View.MeasureSpec.getSize(r18) \- r19\lint r4 = android.view.View.MeasureSpec.getMode(r18)\lint r5 = android.view.View.MeasureSpec.makeMeasureSpec(r3, r4)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0019|if ((r15 instanceof androidx.appcompat.view.menu.ActionMenuItemView) == false) goto L28\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|androidx.appcompat.view.menu.ActionMenuItemView r6 = (androidx.appcompat.view.menu.ActionMenuItemView) r15\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|PHI: r6 \l  PHI: (r6v2 'itemView' androidx.appcompat.view.menu.ActionMenuItemView) = (r6v1 'itemView' androidx.appcompat.view.menu.ActionMenuItemView), (r6v4 'itemView' androidx.appcompat.view.menu.ActionMenuItemView) binds: [B:34:0x001f, B:33:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|r7 = false\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|if (r6 == null) goto L27\l}"];
Node_37 [shape=record,label="{37\:\ 0x0024}"];
Node_38 [shape=record,label="{38\:\ 0x0028|if (r6.hasText() == false) goto L27\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|r9 = true\l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|PHI: r9 \l  PHI: (r9v1 'hasText' boolean) = (r9v0 'hasText' boolean), (r9v3 'hasText' boolean) binds: [B:40:0x002c, B:39:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|r10 = 0\l}"];
Node_42 [shape=record,label="{42\:\ 0x002e|if (r17 \<= 0) goto L20\l}"];
Node_43 [shape=record,label="{43\:\ 0x0030}"];
Node_44 [shape=record,label="{44\:\ 0x0031|if (r9 == false) goto L14\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|if (r17 \< 2) goto L20\l}"];
Node_46 [shape=record,label="{46\:\ 0x0035|int r12 = android.view.View.MeasureSpec.makeMeasureSpec(r16 * r17, Integer.MIN_VALUE)\lr15.measure(r12, r5)\lint r13 = r15.getMeasuredWidth()\lint r10 = r13 \/ r16\l}"];
Node_47 [shape=record,label="{47\:\ 0x0048|if ((r13 % r16) == 0) goto L17\l}"];
Node_48 [shape=record,label="{48\:\ 0x004a|int r10 = r10 + 1\l}"];
Node_49 [shape=record,label="{49\:\ 0x004c|PHI: r10 \l  PHI: (r10v3 'cellsUsed' int) = (r10v2 'cellsUsed' int), (r10v5 'cellsUsed' int) binds: [B:47:0x0048, B:48:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L20\l}"];
Node_50 [shape=record,label="{50\:\ 0x004e|if (r10 \>= 2) goto L20\l}"];
Node_51 [shape=record,label="{51\:\ 0x0050|r10 = 2\l}"];
Node_52 [shape=record,label="{52\:\ 0x0051|PHI: r10 \l  PHI: (r10v1 'cellsUsed' int) = (r10v0 'cellsUsed' int), (r10v3 'cellsUsed' int), (r10v3 'cellsUsed' int), (r10v4 'cellsUsed' int), (r10v0 'cellsUsed' int) binds: [B:42:0x002e, B:49:0x004c, B:50:0x004e, B:51:0x0050, B:45:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0053|if (r2.isOverflowButton != false) goto L24\l}"];
Node_54 [shape=record,label="{54\:\ 0x0055|if (r9 == false) goto L24\l}"];
Node_55 [shape=record,label="{55\:\ 0x0057|r7 = true\l}"];
Node_56 [shape=record,label="{56\:\ 0x0058|PHI: r7 \l  PHI: (r7v1 'expandable' boolean) = (r7v0 'expandable' boolean), (r7v0 'expandable' boolean), (r7v2 'expandable' boolean) binds: [B:53:0x0053, B:54:0x0055, B:55:0x0057] A[DONT_GENERATE, DONT_INLINE]\l|r2.expandable = r7\lr2.cellsUsed = r10\lint r8 = r10 * r16\lr15.measure(android.view.View.MeasureSpec.makeMeasureSpec(r8, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY), r5)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0067|RETURN\l|return r10\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|r9 = false\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|r6 = null\l}"];
MethodNode[shape=record,label="{public static int androidx.appcompat.widget.ActionMenuView.measureChildForCells((r15v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'cellSize' int A[D('cellSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'cellsRemaining' int A[D('cellsRemaining' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'parentHeightMeasureSpec' int A[D('parentHeightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'parentHeightPadding' int A[D('parentHeightPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:54:0x0055 \-\> B:56:0x0058, CROSS_EDGE: B:53:0x0053 \-\> B:56:0x0058, CROSS_EDGE: B:50:0x004e \-\> B:52:0x0051, CROSS_EDGE: B:49:0x004c \-\> B:52:0x0051, CROSS_EDGE: B:47:0x0048 \-\> B:49:0x004c, CROSS_EDGE: B:45:0x0033 \-\> B:52:0x0051, CROSS_EDGE: B:44:0x0031 \-\> B:46:0x0035, CROSS_EDGE: B:42:0x002e \-\> B:52:0x0051, CROSS_EDGE: B:40:0x002c \-\> B:41:0x002d, CROSS_EDGE: B:36:0x0022 \-\> B:40:0x002c, CROSS_EDGE: B:34:0x001f \-\> B:35:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_52;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_52;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_40 -> Node_41;
Node_34 -> Node_35;
}

