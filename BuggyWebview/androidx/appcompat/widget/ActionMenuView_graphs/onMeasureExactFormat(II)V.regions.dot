digraph "CFG forandroidx.appcompat.widget.ActionMenuView.onMeasureExactFormat(II)V" {
subgraph cluster_Region_1330124212 {
label = "R(2:1|(2:(2:3|4)|(12:6|(3:8|(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))(0)|31)|40|43|(4:47|(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)|63|(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)))|170|87|(1:(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116)))(0)|100|(0)(0)|(0)(0)|116))) | DECL_VAR: int heightMode, int widthSize, boolean needsExpansion, boolean needsExpansion, int heightSize, int visibleItemCount, int visibleItemCount, ?? null\l";
node [shape=record,color=blue];
Node_178 [shape=record,label="{178\:\ 0x0000|int int r1 = android.view.View.MeasureSpec.getMode(r42)\lint int r2 = android.view.View.MeasureSpec.getSize(r41)\lint int r3 = android.view.View.MeasureSpec.getSize(r42)\lint int r4 = getPaddingLeft() + getPaddingRight()\lint int r5 = getPaddingTop() + getPaddingBottom()\lint int r6 = getChildMeasureSpec(r42, r5, \-2)\lint int r2 = r2 \- r4\lint int r8 = r40.mMinCellSize\lint int r9 = r2 \/ r8\lint int r10 = r2 % r8\l}"];
subgraph cluster_Region_1092848482 {
label = "R(2:(2:3|4)|(12:6|(3:8|(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))(0)|31)|40|43|(4:47|(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)|63|(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)))|170|87|(1:(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116)))(0)|100|(0)(0)|(0)(0)|116))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1710343928 {
label = "IF [B:179:0x002f] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_179 [shape=record,label="{179\:\ 0x002f|if (r9 == 0) goto L3\l}"];
subgraph cluster_Region_524481490 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_180 [shape=record,label="{180\:\ 0x0031|setMeasuredDimension(r2, 0)\l}"];
Node_181 [shape=record,label="{181\:\ 0x0034|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1355861118 {
label = "R(12:6|(3:8|(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))(0)|31)|40|43|(4:47|(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)|63|(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)))|170|87|(1:(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116)))(0)|100|(0)(0)|(0)(0)|116)";
node [shape=record,color=blue];
Node_182 [shape=record,label="{182\:\ 0x0035|int int r8 = r8 + (r10 \/ r9)\lint r12 = r9\lint r13 = 0\lint r14 = 0\lint r15 = 0\lboolean r17 = false\llong r18 = 0\lint int r11 = getChildCount()\lint r3 = 0\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_504109558 {
label = "LOOP:0: (3:8|(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))(0)|31)";
node [shape=record,color=blue];
Node_183 [shape=record,label="{183\:\ 0x0054|LOOP_START\lLOOP:0: B:183:0x0054\-\>B:211:0x00dc\lPHI: r3 r4 r9 r10 r12 r13 r14 r15 r17 r18 \l  PHI: (r3v2 'maxChildHeight' int) = (r3v1 'maxChildHeight' int), (r3v9 'maxChildHeight' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'widthPadding' int) = (r4v2 'widthPadding' int), (r4v33 'widthPadding' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 'cellCount' int) = (r9v0 'cellCount' int), (r9v19 'cellCount' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'cellSizeRemaining' int) = (r10v0 'cellSizeRemaining' int), (r10v17 'cellSizeRemaining' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v2 'cellsRemaining' int) = (r12v1 'cellsRemaining' int), (r12v8 'cellsRemaining' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'maxChildHeight' int) = (r13v0 'maxChildHeight' int), (r13v2 'maxChildHeight' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'maxCellsUsed' int) = (r14v0 'maxCellsUsed' int), (r14v2 'maxCellsUsed' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'expandableItemCount' int) = (r15v0 'expandableItemCount' int), (r15v29 'expandableItemCount' int) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v1 'hasOverflow' boolean) = (r17v0 'hasOverflow' boolean), (r17v2 'hasOverflow' boolean) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 'smallestItemsAt' long) = (r18v0 'smallestItemsAt' long), (r18v8 'smallestItemsAt' long) binds: [B:182:0x0035, B:211:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r11) goto L8\l}"];
subgraph cluster_Region_1439225008 {
label = "R(3:8|(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))(0)|31)";
node [shape=record,color=blue];
Node_184 [shape=record,label="{184\:\ 0x0056|android.view.View android.view.View r7 = getChildAt(r4)\lint r23 = r9\lint r24 = r10\l}"];
subgraph cluster_IfRegion_346731887 {
label = "IF [B:185:0x0064] THEN: R(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32)) ELSE: R(0)";
node [shape=record,color=blue];
Node_185 [shape=record,label="{185\:\ 0x0064|if (r7.getVisibility() != 8) goto L10\l}"];
subgraph cluster_Region_1449366638 {
label = "R(10:10|(1:36)(1:12)|13|18|19|21|(1:23)|(1:26)|27|(1:29)(1:32))";
node [shape=record,color=blue];
Node_187 [shape=record,label="{187\:\ 0x0068|boolean boolean r9 = r7 instanceof androidx.appcompat.view.menu.ActionMenuItemView\lint int r3 = r3 + 1\l}"];
subgraph cluster_IfRegion_1634866847 {
label = "IF [B:188:0x006c] THEN: R(1:36) ELSE: R(1:12)";
node [shape=record,color=blue];
Node_188 [shape=record,label="{188\:\ 0x006c|if (r9 == false) goto L36\l}"];
subgraph cluster_Region_890943909 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_190 [shape=record,label="{190\:\ 0x0077|r25 = r3\lr3 = 0\l}"];
}
subgraph cluster_Region_298538316 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_189 [shape=record,label="{189\:\ 0x006e|int int r10 = r40.mGeneratedItemPadding\lr25 = r3\lr3 = 0\lr7.setPadding(r10, 0, r10, 0)\l}"];
}
}
Node_191 [shape=record,label="{191\:\ 0x007a|PHI: r3 r25 \l  PHI: (r3v12 ??) = (r3v11 ??), (r3v29 ??) binds: [B:190:0x0077, B:189:0x006e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r25v7 'visibleItemCount' int) = (r25v6 'visibleItemCount' int), (r25v8 'visibleItemCount' int) binds: [B:190:0x0077, B:189:0x006e] A[DONT_GENERATE, DONT_INLINE]\l|androidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.LayoutParams r10 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) r7.getLayoutParams()\lr10.expanded = r3\lr10.extraPixels = r3\lr10.cellsUsed = r3\lr10.expandable = r3\lr10.leftMargin = r3\lr10.rightMargin = r3\l}"];
Node_197 [shape=record,label="{197\:\ 0x009a|PHI: r3 \l  PHI: (r3v14 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r10.preventEdgeOffset = r9 && ((androidx.appcompat.view.menu.ActionMenuItemView) r7).hasText()\l}"];
Node_198 [shape=record,label="{198\:\ 0x009e|int r3 = r10.isOverflowButton ? 1 : r12\l}"];
Node_201 [shape=record,label="{201\:\ 0x00a3|PHI: r3 \l  PHI: (r3v17 'cellsAvailable' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r9 = measureChildForCells(r7, r8, r3, r6, r5)\lint r14 = java.lang.Math.max(r14, r9)\l}"];
subgraph cluster_IfRegion_1960469412 {
label = "IF [B:202:0x00b1] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_202 [shape=record,label="{202\:\ 0x00b1|if (r10.expandable != false) goto L23\l}"];
subgraph cluster_Region_1768991049 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_203 [shape=record,label="{203\:\ 0x00b3|r15++\l}"];
}
}
subgraph cluster_IfRegion_1072707910 {
label = "IF [B:205:0x00b7] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_205 [shape=record,label="{205\:\ 0x00b7|if (r10.isOverflowButton != false) goto L26\l}"];
subgraph cluster_Region_1685005903 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_206 [shape=record,label="{206\:\ 0x00b9|r17 = true\l}"];
}
}
Node_207 [shape=record,label="{207\:\ 0x00bb|PHI: r17 \l  PHI: (r17v3 'hasOverflow' boolean) = (r17v1 'hasOverflow' boolean), (r17v4 'hasOverflow' boolean) binds: [B:205:0x00b7, B:206:0x00b9] A[DONT_GENERATE, DONT_INLINE]\l|r12 \-= r9\lint int r3 = java.lang.Math.max(r13, r7.getMeasuredHeight())\l}"];
subgraph cluster_IfRegion_1313281737 {
label = "IF [B:208:0x00c5] THEN: R(1:29) ELSE: R(1:32)";
node [shape=record,color=blue];
Node_208 [shape=record,label="{208\:\ 0x00c5|if (r9 == 1) goto L29\l}"];
subgraph cluster_Region_932663480 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_209 [shape=record,label="{209\:\ 0x00c7|r13 = r3\lr18 \|= 1 \<\< r4\lr3 = r25\l}"];
}
subgraph cluster_Region_845819193 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_210 [shape=record,label="{210\:\ 0x00d5|r13 = r3\lr3 = r25\l}"];
}
}
}
subgraph cluster_Region_1966196313 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_211 [shape=record,label="{211\:\ 0x00dc|LOOP_END\lLOOP:0: B:183:0x0054\-\>B:211:0x00dc\lPHI: r3 r12 r13 r14 r15 r17 r18 \l  PHI: (r3v9 'maxChildHeight' int) = (r3v2 'maxChildHeight' int), (r3v22 'maxChildHeight' int), (r3v23 'maxChildHeight' int) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v8 'cellsRemaining' int) = (r12v2 'cellsRemaining' int), (r12v9 'cellsRemaining' int), (r12v9 'cellsRemaining' int) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 'maxChildHeight' int) = (r13v1 'maxChildHeight' int), (r13v4 'maxChildHeight' int), (r13v6 'maxChildHeight' int) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v2 'maxCellsUsed' int) = (r14v1 'maxCellsUsed' int), (r14v3 'maxCellsUsed' int), (r14v3 'maxCellsUsed' int) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v29 'expandableItemCount' int) = (r15v1 'expandableItemCount' int), (r15v30 'expandableItemCount' int), (r15v30 'expandableItemCount' int) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v2 'hasOverflow' boolean) = (r17v1 'hasOverflow' boolean), (r17v3 'hasOverflow' boolean), (r17v3 'hasOverflow' boolean) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v8 'smallestItemsAt' long) = (r18v1 'smallestItemsAt' long), (r18v1 'smallestItemsAt' long), (r18v9 'smallestItemsAt' long) binds: [B:330:0x00dc, B:328:0x00dc, B:329:0x00dc] A[DONT_GENERATE, DONT_INLINE]\l|r4++\lr9 = r23\lr10 = r24\l}"];
}
}
Node_213 [shape=record,label="{213\:\ 0x00eb|boolean r7 = r17 && r3 == 2\l}"];
Node_217 [shape=record,label="{217\:\ 0x00f2|PHI: r7 \l  PHI: (r7v2 'centerSingleExpandedItem' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|boolean r9 = false\l}"];
subgraph cluster_LoopRegion_997055658 {
label = "LOOP:1: (4:47|(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)|63|(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)))";
node [shape=record,color=blue];
Node_219 [shape=record,label="{219\:\ 0x00f7|if (r15 \> 0) goto L46\l}"];
Node_220 [shape=record,label="{220\:\ 0x00f9|ADDED_TO_REGION\l|if (r12 \> 0) goto L47\l}"];
subgraph cluster_Region_8786400 {
label = "R(4:47|(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)|63|(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)))";
node [shape=record,color=blue];
Node_221 [shape=record,label="{221\:\ 0x00fb|int r10 = Integer.MAX_VALUE\llong r29 = 0\lint r4 = 0\lint r32 = r5\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_1292614679 {
label = "LOOP:2: (3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)";
node [shape=record,color=blue];
Node_222 [shape=record,label="{222\:\ 0x010c|LOOP_START\lLOOP:2: B:222:0x010c\-\>B:232:0x0137\lPHI: r4 r5 r9 r10 r15 r29 \l  PHI: (r4v23 'minCellsItemCount' int) = (r4v22 'minCellsItemCount' int), (r4v30 'minCellsItemCount' int) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v16 'heightPadding' int) = (r5v15 'heightPadding' int), (r5v21 'heightPadding' int) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v12 'needsExpansion' boolean) = (r9v3 'needsExpansion' boolean), (r9v17 'needsExpansion' boolean) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v12 'minCells' int) = (r10v11 'minCells' int), (r10v14 'minCells' int) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v21 'expandableItemCount' int) = (r15v2 'expandableItemCount' int), (r15v26 'expandableItemCount' int) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r29v1 'minCellsAt' long) = (r29v0 'minCellsAt' long), (r29v2 'minCellsAt' long) binds: [B:221:0x00fb, B:232:0x0137] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r11) goto L49\l}"];
subgraph cluster_Region_177233607 {
label = "R(3:49|(1:(1:53)(1:(1:58)(0)))(0)|55)";
node [shape=record,color=blue];
Node_223 [shape=record,label="{223\:\ 0x010e|boolean r35 = r9\landroidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.LayoutParams r9 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) getChildAt(r5).getLayoutParams()\lint r34 = r15\l}"];
subgraph cluster_IfRegion_1451251611 {
label = "IF [B:224:0x0120] THEN: R(1:(1:53)(1:(1:58)(0))) ELSE: R(0)";
node [shape=record,color=blue];
Node_224 [shape=record,label="{224\:\ 0x0120|if (r9.expandable != false) goto L51\l}"];
subgraph cluster_Region_2011622911 {
label = "R(1:(1:53)(1:(1:58)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1929377205 {
label = "IF [B:227:0x0125] THEN: R(1:53) ELSE: R(1:(1:58)(0))";
node [shape=record,color=blue];
Node_227 [shape=record,label="{227\:\ 0x0125|if (r9.cellsUsed \< r10) goto L53\l}"];
subgraph cluster_Region_250681824 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_228 [shape=record,label="{228\:\ 0x0127|int r10 = r9.cellsUsed\llong r29 = 1 \<\< r5\lr4 = 1\l}"];
}
subgraph cluster_Region_1672693564 {
label = "R(1:(1:58)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1764229103 {
label = "IF [B:230:0x012f] THEN: R(1:58) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_230 [shape=record,label="{230\:\ 0x012f|if (r9.cellsUsed == r10) goto L58\l}"];
subgraph cluster_Region_199827492 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_231 [shape=record,label="{231\:\ 0x0131|r29 \|= 1 \<\< r5\lr4++\l}"];
}
subgraph cluster_Region_1050065075 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1173266998 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_232 [shape=record,label="{232\:\ 0x0137|LOOP_END\lLOOP:2: B:222:0x010c\-\>B:232:0x0137\lPHI: r4 r10 r29 \l  PHI: (r4v30 'minCellsItemCount' int) = (r4v23 'minCellsItemCount' int), (r4v23 'minCellsItemCount' int), (r4v31 'minCellsItemCount' int), (r4v32 'minCellsItemCount' int) binds: [B:338:0x0137, B:337:0x0137, B:335:0x0137, B:336:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v14 'minCells' int) = (r10v12 'minCells' int), (r10v12 'minCells' int), (r10v12 'minCells' int), (r10v15 'minCells' int) binds: [B:338:0x0137, B:337:0x0137, B:335:0x0137, B:336:0x0137] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r29v2 'minCellsAt' long) = (r29v1 'minCellsAt' long), (r29v1 'minCellsAt' long), (r29v3 'minCellsAt' long), (r29v4 'minCellsAt' long) binds: [B:338:0x0137, B:337:0x0137, B:335:0x0137, B:336:0x0137] A[DONT_GENERATE, DONT_INLINE]\l|r5++\lr15 = r34\lr9 = r35\l}"];
}
}
Node_233 [shape=record,label="{233\:\ 0x013e|r35 = r9\lint r34 = r15\lr18 \|= r29\l}"];
subgraph cluster_Region_86451809 {
label = "R(2:(2:86|1)|(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_605069533 {
label = "IF [B:234:0x0144] THEN: R(2:86|1) ELSE: null";
node [shape=record,color=blue];
Node_234 [shape=record,label="{234\:\ 0x0144|if (r4 \> r12) goto L85\l}"];
subgraph cluster_Region_1277376251 {
label = "R(2:86|1)";
node [shape=record,color=blue];
Node_235 [shape=record,label="{235\:\ 0x0146|EDGE_INSN: B:235:0x0146\-\>B:253:0x01b2 ?: BREAK  \l|r36 = r1\lr37 = r2\l}"];
Node_InsnContainer_2094275422 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_61009423 {
label = "R(3:65|(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)|84)";
node [shape=record,color=blue];
Node_236 [shape=record,label="{236\:\ 0x014c|int int r10 = r10 + 1\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_1142493173 {
label = "LOOP:3: (3:67|(1:(1:71)(0))(2:(1:80)|81)|73)";
node [shape=record,color=blue];
Node_237 [shape=record,label="{237\:\ 0x014f|LOOP_START\lLOOP:3: B:237:0x014f\-\>B:250:0x0191\lPHI: r1 r2 r4 r5 r12 r18 \l  PHI: (r1v14 'heightMode' int) = (r1v1 'heightMode' int), (r1v22 'heightMode' int) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v21 'widthSize' int) = (r2v2 'widthSize' int), (r2v24 'widthSize' int) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v24 'minCellsItemCount' int) = (r4v23 'minCellsItemCount' int), (r4v29 'minCellsItemCount' int) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v18 'i' int) = (r5v17 'i' int), (r5v20 'i' int) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v5 'cellsRemaining' int) = (r12v3 'cellsRemaining' int), (r12v7 'cellsRemaining' int) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v5 'smallestItemsAt' long) = (r18v4 'smallestItemsAt' long), (r18v6 'smallestItemsAt' long) binds: [B:236:0x014c, B:250:0x0191] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r11) goto L67\l}"];
subgraph cluster_Region_326756282 {
label = "R(3:67|(1:(1:71)(0))(2:(1:80)|81)|73)";
node [shape=record,color=blue];
Node_238 [shape=record,label="{238\:\ 0x0151|android.view.View android.view.View r9 = getChildAt(r5)\landroidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.LayoutParams r15 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) r9.getLayoutParams()\lint r33 = r4\lint int r4 = 1 \<\< r5\lint r36 = r1\lint r37 = r2\l}"];
subgraph cluster_IfRegion_223418016 {
label = "IF [B:239:0x016a] THEN: R(1:(1:71)(0)) ELSE: R(2:(1:80)|81)";
node [shape=record,color=blue];
Node_239 [shape=record,label="{239\:\ 0x016a|if ((r29 & r4) == 0) goto L69\l}"];
subgraph cluster_Region_2005694295 {
label = "R(1:(1:71)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_9312482 {
label = "IF [B:241:0x016e] THEN: R(1:71) ELSE: R(0)";
node [shape=record,color=blue];
Node_241 [shape=record,label="{241\:\ 0x016e|if (r15.cellsUsed == r10) goto L71\l}"];
subgraph cluster_Region_1286405110 {
label = "R(1:71)";
node [shape=record,color=blue];
Node_242 [shape=record,label="{242\:\ 0x0170|r18 \|= 1 \<\< r5\l}"];
}
subgraph cluster_Region_1203995778 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1346377308 {
label = "R(2:(1:80)|81)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_324886983 {
label = "IF [B:243:0x0176, B:245:0x017a, B:247:0x017d] THEN: R(1:80) ELSE: null";
node [shape=record,color=blue];
Node_243 [shape=record,label="{243\:\ 0x0176|if (r7 != false) goto L76\l}"];
Node_245 [shape=record,label="{245\:\ 0x017a|ADDED_TO_REGION\l|if (r15.preventEdgeOffset != false) goto L78\l}"];
Node_247 [shape=record,label="{247\:\ 0x017d|ADDED_TO_REGION\l|if (r12 == 1) goto L80\l}"];
subgraph cluster_Region_1273663763 {
label = "R(1:80)";
node [shape=record,color=blue];
Node_248 [shape=record,label="{248\:\ 0x017f|int int r1 = r40.mGeneratedItemPadding\lr9.setPadding(r1 + r8, 0, r1, 0)\l}"];
}
}
Node_249 [shape=record,label="{249\:\ 0x0187|r15.cellsUsed++\lr15.expanded = true\lr12\-\-\l}"];
}
}
Node_250 [shape=record,label="{250\:\ 0x0191|LOOP_END\lLOOP:3: B:237:0x014f\-\>B:250:0x0191\lPHI: r12 r18 \l  PHI: (r12v7 'cellsRemaining' int) = (r12v6 'cellsRemaining' int), (r12v5 'cellsRemaining' int), (r12v5 'cellsRemaining' int) binds: [B:340:0x0191, B:341:0x0191, B:342:0x0191] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v6 'smallestItemsAt' long) = (r18v5 'smallestItemsAt' long), (r18v5 'smallestItemsAt' long), (r18v7 'smallestItemsAt' long) binds: [B:340:0x0191, B:341:0x0191, B:342:0x0191] A[DONT_GENERATE, DONT_INLINE]\l|r5++\lr4 = r33\lr1 = r36\lr2 = r37\l}"];
}
}
Node_251 [shape=record,label="{251\:\ 0x019a|LOOP_END\lLOOP:1: B:218:0x00f3\-\>B:251:0x019a\l|r9 = true\lr5 = r32\lr15 = r34\l}"];
}
}
}
}
Node_252 [shape=record,label="{252\:\ 0x01a8|r36 = r1\lr37 = r2\lr35 = r9\l}"];
Node_253 [shape=record,label="{253\:\ 0x01b2|EDGE_INSN: B:235:0x0146\-\>B:253:0x01b2 ?: BREAK  \lPHI: r18 r35 r36 r37 \l  PHI: (r18v3 'smallestItemsAt' long) = (r18v2 'smallestItemsAt' long), (r18v4 'smallestItemsAt' long) binds: [B:252:0x01a8, B:235:0x0146] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r35v1 'needsExpansion' boolean) = (r35v0 'needsExpansion' boolean), (r35v2 'needsExpansion' boolean) binds: [B:252:0x01a8, B:235:0x0146] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r36v1 'heightMode' int) = (r36v0 'heightMode' int), (r36v2 'heightMode' int) binds: [B:252:0x01a8, B:235:0x0146] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r37v1 'widthSize' int) = (r37v0 'widthSize' int), (r37v2 'widthSize' int) binds: [B:252:0x01a8, B:235:0x0146] A[DONT_GENERATE, DONT_INLINE]\l|boolean r1 = !r17 && r3 == 1\l}"];
subgraph cluster_IfRegion_379743071 {
label = "IF [B:258:0x01ba, B:260:0x01be] THEN: R(1:(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116))) ELSE: R(0)";
node [shape=record,color=blue];
Node_258 [shape=record,label="{258\:\ 0x01ba|PHI: r1 \l  PHI: (r1v3 'singleItem' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r12 \> 0) goto L92\l}"];
Node_260 [shape=record,label="{260\:\ 0x01be|ADDED_TO_REGION\l|if (r18 != 0) goto L94\l}"];
subgraph cluster_Region_2070656565 {
label = "R(1:(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116)))";
node [shape=record,color=blue];
subgraph cluster_Region_658066669 {
label = "R(1:(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1174433057 {
label = "IF [B:262:0x01c2, B:263:0x01c4, B:265:0x01c7] THEN: R(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116) ELSE: null";
node [shape=record,color=blue];
Node_262 [shape=record,label="{262\:\ 0x01c2|if (r12 \< (r3 \- 1)) goto L120\l}"];
Node_263 [shape=record,label="{263\:\ 0x01c4|ADDED_TO_REGION\l|if (r1 != false) goto L120\l}"];
Node_265 [shape=record,label="{265\:\ 0x01c7|ADDED_TO_REGION\l|if (r14 \> 1) goto L120\l}"];
subgraph cluster_Region_1128146911 {
label = "R(7:120|(2:(1:126)|(1:131))|136|(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)|(2:102|(3:104|(1:109)(1:106)|108))(0)|(1:118)(1:115)|116)";
node [shape=record,color=blue];
Node_268 [shape=record,label="{268\:\ 0x01cd|float float r2 = java.lang.Long.bitCount(r18)\l}"];
subgraph cluster_IfRegion_464877763 {
label = "IF [B:269:0x01d2] THEN: R(2:(1:126)|(1:131)) ELSE: null";
node [shape=record,color=blue];
Node_269 [shape=record,label="{269\:\ 0x01d2|if (r1 == false) goto L122\l}"];
subgraph cluster_Region_865837458 {
label = "R(2:(1:126)|(1:131))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1153626818 {
label = "IF [B:271:0x01da, B:273:0x01e9] THEN: R(1:126) ELSE: null";
node [shape=record,color=blue];
Node_271 [shape=record,label="{271\:\ 0x01da|if ((r18 & 1) != 0) goto L124\l}"];
Node_273 [shape=record,label="{273\:\ 0x01e9|ADDED_TO_REGION\l|if (((androidx.appcompat.widget.ActionMenuView.LayoutParams) getChildAt(0).getLayoutParams()).preventEdgeOffset == false) goto L126\l}"];
subgraph cluster_Region_2084979210 {
label = "R(1:126)";
node [shape=record,color=blue];
Node_274 [shape=record,label="{274\:\ 0x01eb|r2 \-= 0.5f\l}"];
}
}
subgraph cluster_IfRegion_672408050 {
label = "IF [B:277:0x01f8, B:279:0x0208] THEN: R(1:131) ELSE: null";
node [shape=record,color=blue];
Node_277 [shape=record,label="{277\:\ 0x01f8|if ((r18 & (1 \<\< (r11 \- 1))) != 0) goto L129\l}"];
Node_279 [shape=record,label="{279\:\ 0x0208|ADDED_TO_REGION\l|if (((androidx.appcompat.widget.ActionMenuView.LayoutParams) getChildAt(r11 \- 1).getLayoutParams()).preventEdgeOffset == false) goto L131\l}"];
subgraph cluster_Region_1570109409 {
label = "R(1:131)";
node [shape=record,color=blue];
Node_280 [shape=record,label="{280\:\ 0x020a|r2 \-= 0.5f\l}"];
}
}
}
}
Node_285 [shape=record,label="{285\:\ 0x021a|PHI: r20 \l  PHI: (r20v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r2 \> 0.0f ? (int) ((r12 * r8) \/ r2) : 0\lint r5 = 0\lr9 = r35\l}"];
subgraph cluster_LoopRegion_1357300648 {
label = "LOOP:5: (3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)";
node [shape=record,color=blue];
Node_286 [shape=record,label="{286\:\ 0x021f|LOOP_START\lLOOP:5: B:286:0x021f\-\>B:307:0x0277\lPHI: r1 r2 r5 r9 \l  PHI: (r1v7 'singleItem' boolean) = (r1v3 'singleItem' boolean), (r1v11 'singleItem' boolean) binds: [B:285:0x021a, B:307:0x0277] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v13 'expandCount' float) = (r2v12 'expandCount' float), (r2v16 'expandCount' float) binds: [B:285:0x021a, B:307:0x0277] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v7 'i' int) = (r5v6 'i' int), (r5v8 'i' int) binds: [B:285:0x021a, B:307:0x0277] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v7 'needsExpansion' boolean) = (r9v6 'needsExpansion' boolean), (r9v10 'needsExpansion' boolean) binds: [B:285:0x021a, B:307:0x0277] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r11) goto L138\l}"];
subgraph cluster_Region_660620365 {
label = "R(3:138|(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))(0)|142)";
node [shape=record,color=blue];
Node_287 [shape=record,label="{287\:\ 0x0221|boolean r10 = r1\lfloat r20 = r2\l}"];
subgraph cluster_IfRegion_894711777 {
label = "IF [B:288:0x022c] THEN: R(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_288 [shape=record,label="{288\:\ 0x022c|if ((r18 & (1 \<\< r5)) != 0) goto L143\l}"];
subgraph cluster_Region_1749228118 {
label = "R(2:143|(3:145|(1:149)|150)(1:(1:154)(2:(1:158)|(1:161)(0))))";
node [shape=record,color=blue];
Node_290 [shape=record,label="{290\:\ 0x0231|android.view.View android.view.View r1 = getChildAt(r5)\landroidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.LayoutParams r2 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) r1.getLayoutParams()\l}"];
subgraph cluster_IfRegion_1375295298 {
label = "IF [B:291:0x023d] THEN: R(3:145|(1:149)|150) ELSE: R(1:(1:154)(2:(1:158)|(1:161)(0)))";
node [shape=record,color=blue];
Node_291 [shape=record,label="{291\:\ 0x023d|if ((r1 instanceof androidx.appcompat.view.menu.ActionMenuItemView) != false) goto L145\l}"];
subgraph cluster_Region_383186053 {
label = "R(3:145|(1:149)|150)";
node [shape=record,color=blue];
Node_292 [shape=record,label="{292\:\ 0x023f|r2.extraPixels = r4\lr2.expanded = true\l}"];
subgraph cluster_IfRegion_1701402111 {
label = "IF [B:293:0x0244, B:295:0x0248] THEN: R(1:149) ELSE: null";
node [shape=record,color=blue];
Node_293 [shape=record,label="{293\:\ 0x0244|if (r5 == 0) goto L147\l}"];
Node_295 [shape=record,label="{295\:\ 0x0248|ADDED_TO_REGION\l|if (r2.preventEdgeOffset == false) goto L149\l}"];
subgraph cluster_Region_1133106644 {
label = "R(1:149)";
node [shape=record,color=blue];
Node_296 [shape=record,label="{296\:\ 0x024a|r2.leftMargin = (\-r4) \/ 2\l}"];
}
}
Node_297 [shape=record,label="{297\:\ 0x0251|r9 = true\l}"];
}
subgraph cluster_Region_1747440887 {
label = "R(1:(1:154)(2:(1:158)|(1:161)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_563635841 {
label = "IF [B:299:0x0257] THEN: R(1:154) ELSE: R(2:(1:158)|(1:161)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_299 [shape=record,label="{299\:\ 0x0257|if (r2.isOverflowButton != false) goto L154\l}"];
subgraph cluster_Region_2112121783 {
label = "R(1:154)";
node [shape=record,color=blue];
Node_300 [shape=record,label="{300\:\ 0x0259|r2.extraPixels = r4\lr2.expanded = true\lr2.rightMargin = (\-r4) \/ 2\lr9 = true\l}"];
}
subgraph cluster_Region_1314594264 {
label = "R(2:(1:158)|(1:161)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_764034836 {
label = "IF [B:302:0x0269] THEN: R(1:158) ELSE: null";
node [shape=record,color=blue];
Node_302 [shape=record,label="{302\:\ 0x0269|if (r5 != 0) goto L158\l}"];
subgraph cluster_Region_1409516827 {
label = "R(1:158)";
node [shape=record,color=blue];
Node_303 [shape=record,label="{303\:\ 0x026b|r2.leftMargin = r4 \/ 2\l}"];
}
}
subgraph cluster_IfRegion_786150379 {
label = "IF [B:305:0x0271] THEN: R(1:161) ELSE: R(0)";
node [shape=record,color=blue];
Node_305 [shape=record,label="{305\:\ 0x0271|if (r5 != (r11 \- 1)) goto L161\l}"];
subgraph cluster_Region_643517061 {
label = "R(1:161)";
node [shape=record,color=blue];
Node_306 [shape=record,label="{306\:\ 0x0273|r2.rightMargin = r4 \/ 2\l}"];
}
subgraph cluster_Region_594050778 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
subgraph cluster_Region_1293011988 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_307 [shape=record,label="{307\:\ 0x0277|LOOP_END\lLOOP:5: B:286:0x021f\-\>B:307:0x0277\lPHI: r9 \l  PHI: (r9v10 'needsExpansion' boolean) = (r9v7 'needsExpansion' boolean), (r9v7 'needsExpansion' boolean), (r9v8 'needsExpansion' boolean), (r9v9 'needsExpansion' boolean), (r9v7 'needsExpansion' boolean) binds: [B:351:0x0277, B:347:0x0277, B:350:0x0277, B:349:0x0277, B:348:0x0277] A[DONT_GENERATE, DONT_INLINE]\l|r5++\lr1 = r10\lr2 = r20\l}"];
}
}
subgraph cluster_IfRegion_466037037 {
label = "IF [B:311:0x0285] THEN: R(2:102|(3:104|(1:109)(1:106)|108)) ELSE: R(0)";
node [shape=record,color=blue];
Node_311 [shape=record,label="{311\:\ 0x0285|PHI: r9 \l  PHI: (r9v4 'needsExpansion' boolean) = (r9v5 'needsExpansion' boolean), (r9v7 'needsExpansion' boolean) binds: [B:310:0x0283, B:308:0x027d] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L119\l}"];
subgraph cluster_Region_858888254 {
label = "R(2:102|(3:104|(1:109)(1:106)|108))";
node [shape=record,color=blue];
Node_312 [shape=record,label="{312\:\ 0x0287|int r2 = 0\l}"];
subgraph cluster_LoopRegion_1050695971 {
label = "LOOP:4: (3:104|(1:109)(1:106)|108)";
node [shape=record,color=blue];
Node_313 [shape=record,label="{313\:\ 0x0288|LOOP_START\lLOOP:4: B:313:0x0288\-\>B:318:0x02ad\lPHI: r2 r3 \l  PHI: (r2v6 'i' int) = (r2v5 'i' int), (r2v7 'i' int) binds: [B:312:0x0287, B:318:0x02ad] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v6 'maxChildHeight' int) = (r3v2 'maxChildHeight' int), (r3v8 'maxChildHeight' int) binds: [B:312:0x0287, B:318:0x02ad] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r11) goto L104\l}"];
subgraph cluster_Region_852135845 {
label = "R(3:104|(1:109)(1:106)|108)";
node [shape=record,color=blue];
Node_314 [shape=record,label="{314\:\ 0x028a|android.view.View android.view.View r4 = getChildAt(r2)\landroidx.appcompat.widget.ActionMenuView$LayoutParams androidx.appcompat.widget.ActionMenuView.LayoutParams r5 = (androidx.appcompat.widget.ActionMenuView.LayoutParams) r4.getLayoutParams()\l}"];
subgraph cluster_IfRegion_66231803 {
label = "IF [B:315:0x0296] THEN: R(1:109) ELSE: R(1:106)";
node [shape=record,color=blue];
Node_315 [shape=record,label="{315\:\ 0x0296|if (r5.expanded == true) goto L109\l}"];
subgraph cluster_Region_193246779 {
label = "R(1:109)";
node [shape=record,color=blue];
Node_317 [shape=record,label="{317\:\ 0x029b|int int r15 = (r5.cellsUsed * r8) + r5.extraPixels\lr22 = r3\lint int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r15, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr4.measure(r3, r6)\l}"];
}
subgraph cluster_Region_1423434199 {
label = "R(1:106)";
node [shape=record,color=blue];
Node_316 [shape=record,label="{316\:\ 0x0298|r22 = r3\l}"];
}
}
Node_318 [shape=record,label="{318\:\ 0x02ad|LOOP_END\lLOOP:4: B:313:0x0288\-\>B:318:0x02ad\lPHI: r22 \l  PHI: (r22v3 'visibleItemCount' int) = (r22v2 'visibleItemCount' int), (r22v4 'visibleItemCount' int) binds: [B:344:0x02ad, B:345:0x02ad] A[DONT_GENERATE, DONT_INLINE]\l|r2++\lr3 = r22\l}"];
}
}
}
subgraph cluster_Region_224674384 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_1830450056 {
label = "IF [B:322:0x02bb] THEN: R(1:118) ELSE: R(1:115)";
node [shape=record,color=blue];
Node_322 [shape=record,label="{322\:\ 0x02bb|if (r36 != 1073741824) goto L115\l}"];
subgraph cluster_Region_1597671013 {
label = "R(1:118)";
node [shape=record,color=blue];
Node_324 [shape=record,label="{324\:\ 0x02bf|r3 = r3\l}"];
}
subgraph cluster_Region_1924876814 {
label = "R(1:115)";
node [shape=record,color=blue];
Node_323 [shape=record,label="{323\:\ 0x02bd|r3 = r13\l}"];
}
}
Node_325 [shape=record,label="{325\:\ 0x02c1|PHI: r3 \l  PHI: (r3v4 'heightSize' int) = (r3v3 'heightSize' int), (r3v5 'heightSize' int) binds: [B:324:0x02bf, B:323:0x02bd] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(r37, r3)\l}"];
}
}
}
}
subgraph cluster_Region_782791507 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_310 [shape=record,label="{310\:\ 0x0283|r9 = r35\l}"];
subgraph cluster_IfRegion_201636330 {
label = "IF [B:311:0x0285] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_311 [shape=record,label="{311\:\ 0x0285|PHI: r9 \l  PHI: (r9v4 'needsExpansion' boolean) = (r9v5 'needsExpansion' boolean), (r9v7 'needsExpansion' boolean) binds: [B:310:0x0283, B:308:0x027d] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L119\l}"];
subgraph cluster_Region_593300728 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_501595432 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_1891264300 {
label = "IF [B:322:0x02bb] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_322 [shape=record,label="{322\:\ 0x02bb|if (r36 != 1073741824) goto L115\l}"];
subgraph cluster_Region_1498958648 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_313112103 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_325 [shape=record,label="{325\:\ 0x02c1|PHI: r3 \l  PHI: (r3v4 'heightSize' int) = (r3v3 'heightSize' int), (r3v5 'heightSize' int) binds: [B:324:0x02bf, B:323:0x02bd] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(r37, r3)\l}"];
}
}
}
Node_176 [shape=record,color=red,label="{176\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_177 [shape=record,color=red,label="{177\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_192 [shape=record,color=red,label="{192\:\ 0x008c}"];
Node_193 [shape=record,color=red,label="{193\:\ 0x008e}"];
Node_194 [shape=record,color=red,label="{194\:\ 0x0095|REMOVE\lADDED_TO_REGION\l}"];
Node_195 [shape=record,color=red,label="{195\:\ 0x0097}"];
Node_199 [shape=record,color=red,label="{199\:\ 0x00a0}"];
Node_204 [shape=record,color=red,label="{204\:\ 0x00b5|PHI: r15 \l  PHI: (r15v30 'expandableItemCount' int) = (r15v1 'expandableItemCount' int), (r15v31 'expandableItemCount' int) binds: [B:202:0x00b1, B:203:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_329 [shape=record,color=red,label="{329\:\ 0x00dc|SYNTHETIC\l}"];
Node_328 [shape=record,color=red,label="{328\:\ 0x00dc|SYNTHETIC\l}"];
Node_200 [shape=record,color=red,label="{200\:\ 0x00a2}"];
Node_196 [shape=record,color=red,label="{196\:\ 0x0099}"];
Node_330 [shape=record,color=red,label="{330\:\ 0x00dc|SYNTHETIC\l}"];
Node_327 [shape=record,color=red,label="{327\:\ 0x00e6|SYNTHETIC\l}"];
Node_212 [shape=record,color=red,label="{212\:\ 0x00e6}"];
Node_214 [shape=record,color=red,label="{214\:\ 0x00ed|REMOVE\lADDED_TO_REGION\l}"];
Node_215 [shape=record,color=red,label="{215\:\ 0x00ef}"];
Node_218 [shape=record,color=red,label="{218\:\ 0x00f3|LOOP_START\lLOOP:1: B:218:0x00f3\-\>B:251:0x019a\lPHI: r1 r2 r5 r9 r12 r15 r18 \l  PHI: (r1v1 'heightMode' int) = (r1v0 'heightMode' int), (r1v14 'heightMode' int) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'widthSize' int) = (r2v1 'widthSize' int), (r2v21 'widthSize' int) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 'heightPadding' int) = (r5v2 'heightPadding' int), (r5v19 'heightPadding' int) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 'needsExpansion' boolean) = (r9v2 'needsExpansion' boolean), (r9v13 'needsExpansion' boolean) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v3 'cellsRemaining' int) = (r12v2 'cellsRemaining' int), (r12v5 'cellsRemaining' int) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v2 'expandableItemCount' int) = (r15v1 'expandableItemCount' int), (r15v22 'expandableItemCount' int) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v2 'smallestItemsAt' long) = (r18v1 'smallestItemsAt' long), (r18v5 'smallestItemsAt' long) binds: [B:217:0x00f2, B:251:0x019a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_226 [shape=record,color=red,label="{226\:\ 0x0123}"];
Node_336 [shape=record,color=red,label="{336\:\ 0x0137|SYNTHETIC\l}"];
Node_229 [shape=record,color=red,label="{229\:\ 0x012d}"];
Node_335 [shape=record,color=red,label="{335\:\ 0x0137|SYNTHETIC\l}"];
Node_337 [shape=record,color=red,label="{337\:\ 0x0137|SYNTHETIC\l}"];
Node_338 [shape=record,color=red,label="{338\:\ 0x0137|SYNTHETIC\l}"];
Node_334 [shape=record,color=red,label="{334\:\ 0x013e|SYNTHETIC\l}"];
Node_240 [shape=record,color=red,label="{240\:\ 0x016c}"];
Node_342 [shape=record,color=red,label="{342\:\ 0x0191|SYNTHETIC\l}"];
Node_341 [shape=record,color=red,label="{341\:\ 0x0191|SYNTHETIC\l}"];
Node_244 [shape=record,color=red,label="{244\:\ 0x0178}"];
Node_246 [shape=record,color=red,label="{246\:\ 0x017c}"];
Node_340 [shape=record,color=red,label="{340\:\ 0x0191|SYNTHETIC\l}"];
Node_339 [shape=record,color=red,label="{339\:\ 0x019a|SYNTHETIC\l}"];
Node_331 [shape=record,color=red,label="{331\:\ 0x0146|SYNTHETIC\l}"];
Node_254 [shape=record,color=red,label="{254\:\ 0x01b4}"];
Node_255 [shape=record,color=red,label="{255\:\ 0x01b5|REMOVE\lADDED_TO_REGION\l}"];
Node_256 [shape=record,color=red,label="{256\:\ 0x01b7}"];
Node_259 [shape=record,color=red,label="{259\:\ 0x01bc}"];
Node_261 [shape=record,color=red,label="{261\:\ 0x01c0}"];
Node_264 [shape=record,color=red,label="{264\:\ 0x01c6}"];
Node_267 [shape=record,color=red,label="{267\:\ 0x01ca}"];
Node_345 [shape=record,color=red,label="{345\:\ 0x02ad|SYNTHETIC\l}"];
Node_344 [shape=record,color=red,label="{344\:\ 0x02ad|SYNTHETIC\l}"];
Node_343 [shape=record,color=red,label="{343\:\ 0x02b2|SYNTHETIC\l}"];
Node_319 [shape=record,color=red,label="{319\:\ 0x02b2}"];
Node_321 [shape=record,color=red,label="{321\:\ 0x02b7}"];
Node_326 [shape=record,color=red,label="{326\:\ 0x02c6}"];
Node_320 [shape=record,color=red,label="{320\:\ 0x02b5}"];
Node_270 [shape=record,color=red,label="{270\:\ 0x01d4}"];
Node_272 [shape=record,color=red,label="{272\:\ 0x01dc}"];
Node_276 [shape=record,color=red,label="{276\:\ 0x01ee|ADDED_TO_REGION\lPHI: r2 \l  PHI: (r2v17 'expandCount' float) = (r2v11 'expandCount' float), (r2v11 'expandCount' float), (r2v19 'expandCount' float) binds: [B:275:0x01ed, B:273:0x01e9, B:274:0x01eb] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_278 [shape=record,color=red,label="{278\:\ 0x01fa}"];
Node_275 [shape=record,color=red,label="{275\:\ 0x01ed|ADDED_TO_REGION\l}"];
Node_281 [shape=record,color=red,label="{281\:\ 0x020b|PHI: r2 \l  PHI: (r2v12 'expandCount' float) = (r2v11 'expandCount' float), (r2v17 'expandCount' float), (r2v17 'expandCount' float), (r2v18 'expandCount' float) binds: [B:269:0x01d2, B:277:0x01f8, B:279:0x0208, B:280:0x020a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_282 [shape=record,color=red,label="{282\:\ 0x020e}"];
Node_283 [shape=record,color=red,label="{283\:\ 0x0210}"];
Node_289 [shape=record,color=red,label="{289\:\ 0x022e}"];
Node_348 [shape=record,color=red,label="{348\:\ 0x0277|SYNTHETIC\l}"];
Node_294 [shape=record,color=red,label="{294\:\ 0x0246}"];
Node_349 [shape=record,color=red,label="{349\:\ 0x0277|SYNTHETIC\l}"];
Node_298 [shape=record,color=red,label="{298\:\ 0x0255}"];
Node_350 [shape=record,color=red,label="{350\:\ 0x0277|SYNTHETIC\l}"];
Node_301 [shape=record,color=red,label="{301\:\ 0x0267}"];
Node_304 [shape=record,color=red,label="{304\:\ 0x026f}"];
Node_347 [shape=record,color=red,label="{347\:\ 0x0277|SYNTHETIC\l}"];
Node_351 [shape=record,color=red,label="{351\:\ 0x0277|SYNTHETIC\l}"];
Node_346 [shape=record,color=red,label="{346\:\ 0x027d|SYNTHETIC\l}"];
Node_308 [shape=record,color=red,label="{308\:\ 0x027d}"];
Node_284 [shape=record,color=red,label="{284\:\ 0x0218}"];
Node_309 [shape=record,color=red,label="{309\:\ 0x0282}"];
Node_257 [shape=record,color=red,label="{257\:\ 0x01b9}"];
Node_333 [shape=record,color=red,label="{333\:\ 0x01a8|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_332 [shape=record,color=red,label="{332\:\ 0x01a8|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_216 [shape=record,color=red,label="{216\:\ 0x00f1}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ActionMenuView.onMeasureExactFormat((r40v0 'this' androidx.appcompat.widget.ActionMenuView A[IMMUTABLE_TYPE, THIS]), (r41v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:211:0x00dc \-\> B:183:0x0054, CROSS_EDGE: B:210:0x00d5 \-\> B:211:0x00dc, CROSS_EDGE: B:205:0x00b7 \-\> B:207:0x00bb, CROSS_EDGE: B:202:0x00b1 \-\> B:204:0x00b5, CROSS_EDGE: B:200:0x00a2 \-\> B:201:0x00a3, CROSS_EDGE: B:196:0x0099 \-\> B:197:0x009a, CROSS_EDGE: B:192:0x008c \-\> B:196:0x0099, CROSS_EDGE: B:190:0x0077 \-\> B:191:0x007a, CROSS_EDGE: B:185:0x0064 \-\> B:211:0x00dc, BACK_EDGE: B:232:0x0137 \-\> B:222:0x010c, CROSS_EDGE: B:231:0x0131 \-\> B:232:0x0137, CROSS_EDGE: B:230:0x012f \-\> B:232:0x0137, CROSS_EDGE: B:224:0x0120 \-\> B:232:0x0137, BACK_EDGE: B:318:0x02ad \-\> B:313:0x0288, CROSS_EDGE: B:317:0x029b \-\> B:318:0x02ad, CROSS_EDGE: B:326:0x02c6 \-\> B:177:?, CROSS_EDGE: B:324:0x02bf \-\> B:325:0x02c1, CROSS_EDGE: B:320:0x02b5 \-\> B:321:0x02b7, BACK_EDGE: B:307:0x0277 \-\> B:286:0x021f, CROSS_EDGE: B:297:0x0251 \-\> B:307:0x0277, CROSS_EDGE: B:295:0x0248 \-\> B:297:0x0251, CROSS_EDGE: B:293:0x0244 \-\> B:297:0x0251, CROSS_EDGE: B:300:0x0259 \-\> B:307:0x0277, CROSS_EDGE: B:306:0x0273 \-\> B:307:0x0277, CROSS_EDGE: B:305:0x0271 \-\> B:307:0x0277, CROSS_EDGE: B:302:0x0269 \-\> B:304:0x026f, CROSS_EDGE: B:308:0x027d \-\> B:311:0x0285, CROSS_EDGE: B:284:0x0218 \-\> B:285:0x021a, CROSS_EDGE: B:279:0x0208 \-\> B:281:0x020b, CROSS_EDGE: B:277:0x01f8 \-\> B:281:0x020b, CROSS_EDGE: B:273:0x01e9 \-\> B:276:0x01ee, CROSS_EDGE: B:275:0x01ed \-\> B:276:0x01ee, CROSS_EDGE: B:269:0x01d2 \-\> B:281:0x020b, CROSS_EDGE: B:263:0x01c4 \-\> B:268:0x01cd, CROSS_EDGE: B:262:0x01c2 \-\> B:268:0x01cd, CROSS_EDGE: B:309:0x0282 \-\> B:310:0x0283, CROSS_EDGE: B:258:0x01ba \-\> B:309:0x0282, CROSS_EDGE: B:257:0x01b9 \-\> B:258:0x01ba, CROSS_EDGE: B:253:0x01b2 \-\> B:257:0x01b9, BACK_EDGE: B:250:0x0191 \-\> B:237:0x014f, CROSS_EDGE: B:241:0x016e \-\> B:250:0x0191, CROSS_EDGE: B:249:0x0187 \-\> B:250:0x0191, CROSS_EDGE: B:247:0x017d \-\> B:249:0x0187, CROSS_EDGE: B:245:0x017a \-\> B:249:0x0187, CROSS_EDGE: B:243:0x0176 \-\> B:249:0x0187, BACK_EDGE: B:251:0x019a \-\> B:218:0x00f3, CROSS_EDGE: B:252:0x01a8 \-\> B:253:0x01b2, CROSS_EDGE: B:219:0x00f7 \-\> B:252:0x01a8, CROSS_EDGE: B:216:0x00f1 \-\> B:217:0x00f2, CROSS_EDGE: B:213:0x00eb \-\> B:216:0x00f1\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l WARN: \l \-\> Type inference failed for: r3v11\l \-\> Type inference failed for: r3v12, types: [int, boolean]\l \-\> Type inference failed for: r3v29\l \-\> Removed duplicated region for block: B:320:0x02b5 \l \-\> Removed duplicated region for block: B:312:0x0287 \l \-\> Removed duplicated region for block: B:324:0x02bf \l \-\> Removed duplicated region for block: B:323:0x02bd \}\l}"];
MethodNode -> Node_176;Node_178 -> Node_179;
Node_179 -> Node_180;
Node_179 -> Node_182[style=dashed];
Node_180 -> Node_181;
Node_181 -> Node_177;
Node_182 -> Node_183;
Node_183 -> Node_184;
Node_183 -> Node_327[style=dashed];
Node_184 -> Node_185;
Node_185 -> Node_187;
Node_185 -> Node_330[style=dashed];
Node_187 -> Node_188;
Node_188 -> Node_189[style=dashed];
Node_188 -> Node_190;
Node_190 -> Node_191;
Node_189 -> Node_191;
Node_191 -> Node_192;
Node_197 -> Node_198;
Node_198 -> Node_199;
Node_198 -> Node_200;
Node_201 -> Node_202;
Node_202 -> Node_203;
Node_202 -> Node_204[style=dashed];
Node_203 -> Node_204;
Node_205 -> Node_206;
Node_205 -> Node_207[style=dashed];
Node_206 -> Node_207;
Node_207 -> Node_208;
Node_208 -> Node_209;
Node_208 -> Node_210[style=dashed];
Node_209 -> Node_329;
Node_210 -> Node_328;
Node_211 -> Node_183;
Node_213 -> Node_214;
Node_213 -> Node_216;
Node_217 -> Node_218;
Node_219 -> Node_220;
Node_219 -> Node_332[style=dashed];
Node_220 -> Node_221;
Node_220 -> Node_333[style=dashed];
Node_221 -> Node_222;
Node_222 -> Node_223;
Node_222 -> Node_334[style=dashed];
Node_223 -> Node_224;
Node_224 -> Node_226;
Node_224 -> Node_338[style=dashed];
Node_227 -> Node_228;
Node_227 -> Node_229[style=dashed];
Node_228 -> Node_336;
Node_230 -> Node_231;
Node_230 -> Node_337[style=dashed];
Node_231 -> Node_335;
Node_232 -> Node_222;
Node_233 -> Node_234;
Node_234 -> Node_236[style=dashed];
Node_234 -> Node_331;
Node_235 -> Node_253;
Node_236 -> Node_237;
Node_237 -> Node_238;
Node_237 -> Node_339[style=dashed];
Node_238 -> Node_239;
Node_239 -> Node_240;
Node_239 -> Node_243[style=dashed];
Node_241 -> Node_242;
Node_241 -> Node_341[style=dashed];
Node_242 -> Node_342;
Node_243 -> Node_244;
Node_243 -> Node_249[style=dashed];
Node_245 -> Node_246;
Node_245 -> Node_249[style=dashed];
Node_247 -> Node_248;
Node_247 -> Node_249[style=dashed];
Node_248 -> Node_249;
Node_249 -> Node_340;
Node_250 -> Node_237;
Node_251 -> Node_218;
Node_252 -> Node_253;
Node_253 -> Node_254;
Node_253 -> Node_257;
Node_258 -> Node_259;
Node_258 -> Node_309[style=dashed];
Node_260 -> Node_261;
Node_260 -> Node_309[style=dashed];
Node_262 -> Node_263[style=dashed];
Node_262 -> Node_268;
Node_263 -> Node_264[style=dashed];
Node_263 -> Node_268;
Node_265 -> Node_267[style=dashed];
Node_265 -> Node_268;
Node_268 -> Node_269;
Node_269 -> Node_270;
Node_269 -> Node_281[style=dashed];
Node_271 -> Node_272;
Node_271 -> Node_275[style=dashed];
Node_273 -> Node_274;
Node_273 -> Node_276[style=dashed];
Node_274 -> Node_276;
Node_277 -> Node_278;
Node_277 -> Node_281[style=dashed];
Node_279 -> Node_280;
Node_279 -> Node_281[style=dashed];
Node_280 -> Node_281;
Node_285 -> Node_286;
Node_286 -> Node_287;
Node_286 -> Node_346[style=dashed];
Node_287 -> Node_288;
Node_288 -> Node_289[style=dashed];
Node_288 -> Node_290;
Node_290 -> Node_291;
Node_291 -> Node_292;
Node_291 -> Node_298[style=dashed];
Node_292 -> Node_293;
Node_293 -> Node_294;
Node_293 -> Node_297[style=dashed];
Node_295 -> Node_296;
Node_295 -> Node_297[style=dashed];
Node_296 -> Node_297;
Node_297 -> Node_349;
Node_299 -> Node_300;
Node_299 -> Node_301[style=dashed];
Node_300 -> Node_350;
Node_302 -> Node_303;
Node_302 -> Node_304[style=dashed];
Node_303 -> Node_304;
Node_305 -> Node_306;
Node_305 -> Node_351[style=dashed];
Node_306 -> Node_347;
Node_307 -> Node_286;
Node_311 -> Node_312[style=dashed];
Node_311 -> Node_320;
Node_312 -> Node_313;
Node_313 -> Node_314;
Node_313 -> Node_343[style=dashed];
Node_314 -> Node_315;
Node_315 -> Node_316[style=dashed];
Node_315 -> Node_317;
Node_317 -> Node_344;
Node_316 -> Node_345;
Node_318 -> Node_313;
Node_322 -> Node_323;
Node_322 -> Node_324[style=dashed];
Node_324 -> Node_325;
Node_323 -> Node_325;
Node_325 -> Node_326;
Node_310 -> Node_311;
Node_311 -> Node_312[style=dashed];
Node_311 -> Node_320;
Node_322 -> Node_323;
Node_322 -> Node_324[style=dashed];
Node_325 -> Node_326;
Node_176 -> Node_178;
Node_192 -> Node_193;
Node_192 -> Node_196;
Node_193 -> Node_194;
Node_194 -> Node_195;
Node_194 -> Node_196;
Node_195 -> Node_197;
Node_199 -> Node_201;
Node_204 -> Node_205;
Node_329 -> Node_211;
Node_328 -> Node_211;
Node_200 -> Node_201;
Node_196 -> Node_197;
Node_330 -> Node_211;
Node_327 -> Node_212;
Node_212 -> Node_213;
Node_214 -> Node_215;
Node_214 -> Node_216;
Node_215 -> Node_217;
Node_218 -> Node_219;
Node_226 -> Node_227;
Node_336 -> Node_232;
Node_229 -> Node_230;
Node_335 -> Node_232;
Node_337 -> Node_232;
Node_338 -> Node_232;
Node_334 -> Node_233;
Node_240 -> Node_241;
Node_342 -> Node_250;
Node_341 -> Node_250;
Node_244 -> Node_245;
Node_246 -> Node_247;
Node_340 -> Node_250;
Node_339 -> Node_251;
Node_331 -> Node_235;
Node_254 -> Node_255;
Node_255 -> Node_256;
Node_255 -> Node_257;
Node_256 -> Node_258;
Node_259 -> Node_260;
Node_261 -> Node_262;
Node_264 -> Node_265;
Node_267 -> Node_310;
Node_345 -> Node_318;
Node_344 -> Node_318;
Node_343 -> Node_319;
Node_319 -> Node_321;
Node_321 -> Node_322;
Node_326 -> Node_177;
Node_320 -> Node_321;
Node_270 -> Node_271;
Node_272 -> Node_273;
Node_276 -> Node_277;
Node_278 -> Node_279;
Node_275 -> Node_276;
Node_281 -> Node_282;
Node_282 -> Node_283;
Node_282 -> Node_284;
Node_283 -> Node_285;
Node_289 -> Node_348;
Node_348 -> Node_307;
Node_294 -> Node_295;
Node_349 -> Node_307;
Node_298 -> Node_299;
Node_350 -> Node_307;
Node_301 -> Node_302;
Node_304 -> Node_305;
Node_347 -> Node_307;
Node_351 -> Node_307;
Node_346 -> Node_308;
Node_308 -> Node_311;
Node_284 -> Node_285;
Node_309 -> Node_310;
Node_257 -> Node_258;
Node_333 -> Node_252;
Node_332 -> Node_252;
Node_216 -> Node_217;
}

