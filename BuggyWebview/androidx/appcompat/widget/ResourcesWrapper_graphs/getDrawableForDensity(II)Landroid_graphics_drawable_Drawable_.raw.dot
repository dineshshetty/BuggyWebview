digraph "CFG forandroidx.appcompat.widget.ResourcesWrapper.getDrawableForDensity(II)Landroid\/graphics\/drawable\/Drawable;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.Resources) = (r2 I:androidx.appcompat.widget.ResourcesWrapper) androidx.appcompat.widget.ResourcesWrapper.mResources android.content.res.Resources  (LINE:165)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r0 I:android.content.res.Resources)\l  (r3 I:int A[D('id' int)])\l  (r4 I:int A[D('density' int)])\l  (r1 I:android.content.res.Resources$Theme)\l type: STATIC call: androidx.core.content.res.ResourcesCompat.getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources, int, int, android.content.res.Resources$Theme):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.appcompat.widget.ResourcesWrapper.getDrawableForDensity((r2 'this' I:androidx.appcompat.widget.ResourcesWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('density' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r3 'id' I\l  \-1 \-0x0007: r4 'density' I\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\lMETHOD_OVERRIDE: [ClspMth\{android.content.res.Resources.getDrawableForDensity(int, int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

