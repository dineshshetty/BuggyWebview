digraph "CFG forandroidx.appcompat.widget.ListPopupWindow.clearListSelection()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.DropDownListView) = (r2 I:androidx.appcompat.widget.ListPopupWindow) androidx.appcompat.widget.ListPopupWindow.mDropDownList androidx.appcompat.widget.DropDownListView  (LINE:849)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('list' androidx.appcompat.widget.DropDownListView)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:?  (LINE:850)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:852)\l0x0005: INVOKE  \l  (r0 I:androidx.appcompat.widget.DropDownListView A[D('list' androidx.appcompat.widget.DropDownListView)])\l  (r1 I:boolean)\l type: VIRTUAL call: androidx.appcompat.widget.DropDownListView.setListSelectionHidden(boolean):void A[MD:(boolean):void (m)]\l0x0008: INVOKE  (r0 I:androidx.appcompat.widget.DropDownListView A[D('list' androidx.appcompat.widget.DropDownListView)]) type: VIRTUAL call: androidx.appcompat.widget.DropDownListView.requestLayout():void A[MD:():void (s)] (LINE:854)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: RETURN    (LINE:856)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000b: RETURN   A[SYNTHETIC] (LINE:856)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ListPopupWindow.clearListSelection((r2 'this' I:androidx.appcompat.widget.ListPopupWindow A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x000b: r0 'list' Landroidx\/appcompat\/widget\/DropDownListView;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

