digraph "CFG forandroidx.appcompat.widget.ActionBarContainer.setVisibility(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r3 I:android.widget.FrameLayout), (r4 I:int A[D('visibility' int)]) type: SUPER call: android.widget.FrameLayout.setVisibility(int):void A[MD:(int):void (s)] (LINE:154)\l0x0003: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:155)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibility' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0008 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|0x0006: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0009|0x0009: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mBackground android.graphics.drawable.Drawable  (LINE:156)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0010 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r1 I:boolean A[D('isVisible' boolean)]), (r0 I:boolean) type: VIRTUAL call: android.graphics.drawable.Drawable.setVisible(boolean, boolean):boolean A[MD:(boolean, boolean):boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0010|0x0010: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mStackedBackground android.graphics.drawable.Drawable  (LINE:157)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0017 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0014|0x0014: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r1 I:boolean A[D('isVisible' boolean)]), (r0 I:boolean) type: VIRTUAL call: android.graphics.drawable.Drawable.setVisible(boolean, boolean):boolean A[MD:(boolean, boolean):boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mSplitBackground android.graphics.drawable.Drawable  (LINE:158)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: INVOKE  (r2 I:android.graphics.drawable.Drawable), (r1 I:boolean A[D('isVisible' boolean)]), (r0 I:boolean) type: VIRTUAL call: android.graphics.drawable.Drawable.setVisible(boolean, boolean):boolean A[MD:(boolean, boolean):boolean (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001e|RETURN\lORIG_RETURN\l|0x001e: RETURN    (LINE:159)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN   A[SYNTHETIC] (LINE:159)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActionBarContainer.setVisibility((r3 'this' I:androidx.appcompat.widget.ActionBarContainer A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:30:0x0019 \-\> B:32:0x001e, CROSS_EDGE: B:27:0x0012 \-\> B:29:0x0017, CROSS_EDGE: B:24:0x000b \-\> B:26:0x0010, CROSS_EDGE: B:22:0x0008 \-\> B:23:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x001e: r1 'isVisible' Z\l  \-1 \-0x001e: r4 'visibility' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_18;
Node_33 -> Node_18;
Node_22 -> Node_23;
}

