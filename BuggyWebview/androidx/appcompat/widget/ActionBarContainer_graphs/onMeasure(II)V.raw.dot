digraph "CFG forandroidx.appcompat.widget.ActionBarContainer.onMeasure(II)V" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mActionBarView android.view.View  (LINE:274)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x001d \l}"];
Node_37 [shape=record,label="{37\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:275)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x001d \l}"];
Node_39 [shape=record,label="{39\:\ 0x000c|0x000c: IGET  (r0 I:int) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mHeight int \l}"];
Node_40 [shape=record,label="{40\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:42:0x001d \l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|0x0011: INVOKE  (r2 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:277)\l0x0015: INVOKE  (r0 I:int) = (r0 I:int), (r2 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0019: INVOKE  (r7 I:int A[D('heightMeasureSpec' int)]) = (r0 I:int), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:276)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001d|0x001d: INVOKE  (r5 I:android.widget.FrameLayout), (r6 I:int A[D('widthMeasureSpec' int)]), (r7 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.FrameLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:279)\l0x0020: IGET  (r0 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mActionBarView android.view.View  (LINE:281)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0025 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|RETURN\l|0x0024: RETURN   \l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|0x0025: INVOKE  (r0 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:283)\l0x0029: IGET  (r2 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mTabContainer android.view.View  (LINE:284)\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|0x002b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:? \l}"];
Node_47 [shape=record,label="{47\:\ 0x002d|0x002d: INVOKE  (r2 I:int) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l0x0031: CONST  (r3 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|0x0033: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:? \l}"];
Node_49 [shape=record,label="{49\:\ 0x0035|0x0035: CONST  (r2 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0037|0x0037: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:? \l}"];
Node_51 [shape=record,label="{51\:\ 0x0039|0x0039: IGET  (r2 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mActionBarView android.view.View  (LINE:287)\l0x003b: INVOKE  (r2 I:boolean) = (r5 I:androidx.appcompat.widget.ActionBarContainer), (r2 I:android.view.View) type: DIRECT call: androidx.appcompat.widget.ActionBarContainer.isCollapsed(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x003f|0x003f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0048 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0041|0x0041: IGET  (r2 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mActionBarView android.view.View  (LINE:288)\l0x0043: INVOKE  (r2 I:int) = (r5 I:androidx.appcompat.widget.ActionBarContainer), (r2 I:android.view.View) type: DIRECT call: androidx.appcompat.widget.ActionBarContainer.getMeasuredHeightWithMargins(android.view.View):int A[MD:(android.view.View):int (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0058|0x0058: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x005f  (LINE:294)\l}"];
Node_59 [shape=record,label="{59\:\ 0x005a|0x005a: INVOKE  (r1 I:int) = (r7 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:295)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0062|0x0062: INVOKE  (r3 I:int) = (r5 I:androidx.appcompat.widget.ActionBarContainer) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContainer.getMeasuredWidth():int A[MD:():int (s)] (LINE:296)\l0x0066: IGET  (r4 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mTabContainer android.view.View \l0x0068: INVOKE  (r4 I:int) = (r5 I:androidx.appcompat.widget.ActionBarContainer), (r4 I:android.view.View) type: DIRECT call: androidx.appcompat.widget.ActionBarContainer.getMeasuredHeightWithMargins(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:297)\l0x006c: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int A[D('topMarginForTabs' int)]) \l0x006d: INVOKE  (r4 I:int) = (r4 I:int), (r1 I:int A[D('maxHeight' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0071: INVOKE  (r5 I:androidx.appcompat.widget.ActionBarContainer), (r3 I:int), (r4 I:int) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContainer.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)] (LINE:296)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0074|RETURN\lORIG_RETURN\l|0x0074: RETURN    (LINE:300)\l}"];
Node_60 [shape=record,label="{60\:\ 0x005f|0x005f: CONST  (r1 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0048|0x0048: IGET  (r2 I:android.view.View A[D('topMarginForTabs' int)]) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mContextView android.view.View  (LINE:289)\l0x004a: INVOKE  (r2 I:boolean) = (r5 I:androidx.appcompat.widget.ActionBarContainer), (r2 I:android.view.View) type: DIRECT call: androidx.appcompat.widget.ActionBarContainer.isCollapsed(android.view.View):boolean A[MD:(android.view.View):boolean (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x004e|0x004e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0057 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|0x0050: IGET  (r2 I:android.view.View) = (r5 I:androidx.appcompat.widget.ActionBarContainer) androidx.appcompat.widget.ActionBarContainer.mContextView android.view.View  (LINE:290)\l0x0052: INVOKE  (r2 I:int) = (r5 I:androidx.appcompat.widget.ActionBarContainer), (r2 I:android.view.View) type: DIRECT call: androidx.appcompat.widget.ActionBarContainer.getMeasuredHeightWithMargins(android.view.View):int A[MD:(android.view.View):int (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0057|0x0057: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('topMarginForTabs' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:292)\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x0074: RETURN   A[SYNTHETIC] (LINE:300)\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x0074: RETURN   A[SYNTHETIC] (LINE:300)\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x0074: RETURN   A[SYNTHETIC] (LINE:300)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActionBarContainer.onMeasure((r5 'this' I:androidx.appcompat.widget.ActionBarContainer A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:62:0x0074 \-\> B:34:?, CROSS_EDGE: B:60:0x005f \-\> B:61:0x0062, CROSS_EDGE: B:56:0x0050 \-\> B:58:0x0058, CROSS_EDGE: B:57:0x0057 \-\> B:58:0x0058, CROSS_EDGE: B:50:0x0037 \-\> B:62:0x0074, CROSS_EDGE: B:48:0x0033 \-\> B:62:0x0074, CROSS_EDGE: B:46:0x002b \-\> B:62:0x0074, CROSS_EDGE: B:40:0x000e \-\> B:42:0x001d, CROSS_EDGE: B:38:0x000a \-\> B:42:0x001d, CROSS_EDGE: B:36:0x0004 \-\> B:42:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0047\-0x0048: r2 'topMarginForTabs' I\l  0x0056\-0x0057: r2 'topMarginForTabs' I\l  0x0062\-0x0074: r1 'maxHeight' I\l  0x0058\-0x0074: r2 'topMarginForTabs' I\l  0x0029\-0x0074: r0 'mode' I\l  \-1 \-0x0074: r6 'widthMeasureSpec' I\l  \-1 \-0x0074: r7 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_34;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_63;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_64;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_65;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_34;
Node_60 -> Node_61;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_65 -> Node_34;
Node_64 -> Node_34;
Node_63 -> Node_34;
}

