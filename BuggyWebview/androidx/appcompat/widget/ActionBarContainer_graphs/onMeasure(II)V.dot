digraph "CFG forandroidx.appcompat.widget.ActionBarContainer.onMeasure(II)V" {
Node_33 [shape=record,label="{33\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0000}"];
Node_36 [shape=record,label="{36\:\ 0x0004|if (r5.mActionBarView != null) goto L8\l}"];
Node_37 [shape=record,label="{37\:\ 0x0006}"];
Node_38 [shape=record,label="{38\:\ 0x000a|if (android.view.View.MeasureSpec.getMode(r7) != Integer.MIN_VALUE) goto L8\l}"];
Node_39 [shape=record,label="{39\:\ 0x000c|int r0 = r5.mHeight\l}"];
Node_40 [shape=record,label="{40\:\ 0x000e|if (r0 \< 0) goto L8\l}"];
Node_41 [shape=record,label="{41\:\ 0x0011|int r7 = android.view.View.MeasureSpec.makeMeasureSpec(java.lang.Math.min(r0, android.view.View.MeasureSpec.getSize(r7)), Integer.MIN_VALUE)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001d|PHI: r7 \l  PHI: (r7v1 'heightMeasureSpec' int) = (r7v0 'heightMeasureSpec' int), (r7v0 'heightMeasureSpec' int), (r7v0 'heightMeasureSpec' int), (r7v2 'heightMeasureSpec' int) binds: [B:36:0x0004, B:38:0x000a, B:40:0x000e, B:41:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|super.onMeasure(r6, r7)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0022|if (r5.mActionBarView != null) goto L12\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|RETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|int r0 = android.view.View.MeasureSpec.getMode(r7)\landroid.view.View r2 = r5.mTabContainer\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|if (r2 == null) goto L32\l}"];
Node_47 [shape=record,label="{47\:\ 0x002d}"];
Node_48 [shape=record,label="{48\:\ 0x0033|if (r2.getVisibility() == 8) goto L31\l}"];
Node_49 [shape=record,label="{49\:\ 0x0035}"];
Node_50 [shape=record,label="{50\:\ 0x0037|if (r0 == 1073741824) goto L30\l}"];
Node_51 [shape=record,label="{51\:\ 0x0039}"];
Node_52 [shape=record,label="{52\:\ 0x003f|if (isCollapsed(r5.mActionBarView) != false) goto L26\l}"];
Node_53 [shape=record,label="{53\:\ 0x0041|int r2 = getMeasuredHeightWithMargins(r5.mActionBarView)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0058|PHI: r2 \l  PHI: (r2v10 'topMarginForTabs' int) = (r2v7 'topMarginForTabs' int), (r2v9 'topMarginForTabs' int), (r2v12 'topMarginForTabs' int) binds: [B:57:0x0057, B:56:0x0050, B:53:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != Integer.MIN_VALUE) goto L25\l}"];
Node_59 [shape=record,label="{59\:\ 0x005a|int r1 = android.view.View.MeasureSpec.getSize(r7)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0062|PHI: r1 \l  PHI: (r1v2 'maxHeight' int) = (r1v1 'maxHeight' int), (r1v3 'maxHeight' int) binds: [B:60:0x005f, B:59:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|setMeasuredDimension(getMeasuredWidth(), java.lang.Math.min(getMeasuredHeightWithMargins(r5.mTabContainer) + r2, r1))\l}"];
Node_62 [shape=record,label="{62\:\ 0x0074|RETURN\lORIG_RETURN\l|return\l}"];
Node_60 [shape=record,label="{60\:\ 0x005f|r1 = Integer.MAX_VALUE\l}"];
Node_54 [shape=record,label="{54\:\ 0x0048}"];
Node_55 [shape=record,label="{55\:\ 0x004e|if (isCollapsed(r5.mContextView) != false) goto L29\l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|int r2 = getMeasuredHeightWithMargins(r5.mContextView)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0057|r2 = 0\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActionBarContainer.onMeasure((r5v0 'this' androidx.appcompat.widget.ActionBarContainer A[IMMUTABLE_TYPE, THIS]), (r6v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:62:0x0074 \-\> B:34:?, CROSS_EDGE: B:60:0x005f \-\> B:61:0x0062, CROSS_EDGE: B:56:0x0050 \-\> B:58:0x0058, CROSS_EDGE: B:57:0x0057 \-\> B:58:0x0058, CROSS_EDGE: B:50:0x0037 \-\> B:62:0x0074, CROSS_EDGE: B:48:0x0033 \-\> B:62:0x0074, CROSS_EDGE: B:46:0x002b \-\> B:62:0x0074, CROSS_EDGE: B:40:0x000e \-\> B:42:0x001d, CROSS_EDGE: B:38:0x000a \-\> B:42:0x001d, CROSS_EDGE: B:36:0x0004 \-\> B:42:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_33;Node_33 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_42;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_34;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_63;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_64;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_65;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_34;
Node_60 -> Node_61;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_65 -> Node_34;
Node_64 -> Node_34;
Node_63 -> Node_34;
}

