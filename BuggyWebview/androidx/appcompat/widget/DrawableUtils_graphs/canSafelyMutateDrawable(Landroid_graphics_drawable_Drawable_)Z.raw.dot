digraph "CFG forandroidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable(Landroid\/graphics\/drawable\/Drawable;)Z" {
Node_46 [shape=record,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:107)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0005|0x0005: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:51:0x0008 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0007|RETURN\l|0x0007: RETURN  (r2 I:boolean)  (LINE:109)\l}"];
Node_47 [shape=record,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ 0x0008|0x0008: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:112)\l0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (15 ??[int, float, short, byte, char]) \l0x000c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:56:0x0014 \l}"];
Node_53 [shape=record,label="{53\:\ 0x000f|0x000f: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.InsetDrawable \l}"];
Node_54 [shape=record,label="{54\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0014 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0013|RETURN\l|0x0013: RETURN  (r4 I:boolean)  (LINE:113)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0014|0x0014: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:114)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0016|0x0016: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:61:0x001d \l}"];
Node_58 [shape=record,label="{58\:\ 0x0018|0x0018: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.GradientDrawable \l}"];
Node_59 [shape=record,label="{59\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x001d \l}"];
Node_60 [shape=record,label="{60\:\ 0x001c|RETURN\l|0x001c: RETURN  (r4 I:boolean)  (LINE:117)\l}"];
Node_61 [shape=record,label="{61\:\ 0x001d|0x001d: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:118)\l}"];
Node_62 [shape=record,label="{62\:\ 0x001f|0x001f: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:66:0x0026 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0021|0x0021: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.LayerDrawable \l}"];
Node_64 [shape=record,label="{64\:\ 0x0023|0x0023: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0026 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0025|RETURN\l|0x0025: RETURN  (r4 I:boolean)  (LINE:119)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0026|0x0026: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.DrawableContainer  (LINE:122)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0028|0x0028: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x004a \l}"];
Node_68 [shape=record,label="{68\:\ 0x002a|0x002a: INVOKE  (r0 I:android.graphics.drawable.Drawable$ConstantState) = (r9 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState A[MD:():android.graphics.drawable.Drawable$ConstantState (c)] (LINE:124)\l0x002e: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('state' android.graphics.drawable.Drawable$ConstantState)]) android.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:125)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x007a \l}"];
Node_70 [shape=record,label="{70\:\ 0x0032|0x0032: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('state' android.graphics.drawable.Drawable$ConstantState)])  (LINE:126)\l0x0033: CHECK_CAST (r1 I:android.graphics.drawable.DrawableContainer$DrawableContainerState) = (android.graphics.drawable.DrawableContainer$DrawableContainerState) (r1 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r3 I:android.graphics.drawable.Drawable[]) = \l  (r1 I:android.graphics.drawable.DrawableContainer$DrawableContainerState A[D('containerState' android.graphics.drawable.DrawableContainer$DrawableContainerState)])\l type: VIRTUAL call: android.graphics.drawable.DrawableContainer.DrawableContainerState.getChildren():android.graphics.drawable.Drawable[] A[MD:():android.graphics.drawable.Drawable[] (c)] (LINE:128)\l0x0039: ARRAY_LENGTH  (r5 I:int) = (r3 I:??[]) \l0x003a: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x003b|LOOP_START\lLOOP:0: B:71:0x003b\-\>B:75:0x0046\l|0x003b: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:91:0x007a \l}"];
Node_72 [shape=record,label="{72\:\ 0x003d|0x003d: AGET  (r7 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]) \l0x003f: INVOKE  (r8 I:boolean) = (r7 I:android.graphics.drawable.Drawable A[D('child' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)] (LINE:129)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0043|0x0043: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0046 \l}"];
Node_75 [shape=record,label="{75\:\ 0x0046|LOOP_END\lLOOP:0: B:71:0x003b\-\>B:75:0x0046\l|0x0046: ARITH  (r6 I:int) = (r6 I:int) + (1 int)  (LINE:128)\l}"];
Node_90 [shape=record,label="{90\:\ 0x0045|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0045|RETURN\l|0x0045: RETURN  (r4 I:boolean)  (LINE:130)\l}"];
Node_91 [shape=record,label="{91\:\ 0x007a|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x007a|RETURN\l|0x007a: RETURN  (r2 I:boolean)  (LINE:142)\l}"];
Node_77 [shape=record,label="{77\:\ 0x004a|0x004a: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) androidx.core.graphics.drawable.WrappedDrawable \l}"];
Node_78 [shape=record,label="{78\:\ 0x004c|0x004c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x005a \l}"];
Node_79 [shape=record,label="{79\:\ 0x004e|0x004e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:135)\l0x004f: CHECK_CAST (r0 I:androidx.core.graphics.drawable.WrappedDrawable) = (androidx.core.graphics.drawable.WrappedDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x0051: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:androidx.core.graphics.drawable.WrappedDrawable) type: INTERFACE call: androidx.core.graphics.drawable.WrappedDrawable.getWrappedDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (m)]\l0x0055: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x0059|RETURN\l|0x0059: RETURN  (r0 I:boolean) \l}"];
Node_81 [shape=record,label="{81\:\ 0x005a|0x005a: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) androidx.appcompat.graphics.drawable.DrawableWrapper  (LINE:136)\l}"];
Node_82 [shape=record,label="{82\:\ 0x005c|0x005c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x006a \l}"];
Node_83 [shape=record,label="{83\:\ 0x005e|0x005e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:137)\l0x005f: CHECK_CAST (r0 I:androidx.appcompat.graphics.drawable.DrawableWrapper) = (androidx.appcompat.graphics.drawable.DrawableWrapper) (r0 I:??[OBJECT, ARRAY]) \l0x0061: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:androidx.appcompat.graphics.drawable.DrawableWrapper) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableWrapper.getWrappedDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (m)]\l0x0065: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x0069|RETURN\l|0x0069: RETURN  (r0 I:boolean) \l}"];
Node_85 [shape=record,label="{85\:\ 0x006a|0x006a: INSTANCE_OF  (r0 I:boolean) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) android.graphics.drawable.ScaleDrawable  (LINE:138)\l}"];
Node_86 [shape=record,label="{86\:\ 0x006c|0x006c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:89:0x007a \l}"];
Node_87 [shape=record,label="{87\:\ 0x006e|0x006e: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)])  (LINE:139)\l0x006f: CHECK_CAST (r0 I:android.graphics.drawable.ScaleDrawable) = (android.graphics.drawable.ScaleDrawable) (r0 I:??[OBJECT, ARRAY]) \l0x0071: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.graphics.drawable.ScaleDrawable) type: VIRTUAL call: android.graphics.drawable.ScaleDrawable.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)]\l0x0075: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)]\l}"];
Node_88 [shape=record,label="{88\:\ 0x0079|RETURN\l|0x0079: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable((r9 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x0013 \-\> B:47:?, CROSS_EDGE: B:60:0x001c \-\> B:47:?, CROSS_EDGE: B:65:0x0025 \-\> B:47:?, CROSS_EDGE: B:74:0x0045 \-\> B:47:?, BACK_EDGE: B:75:0x0046 \-\> B:71:0x003b, CROSS_EDGE: B:89:0x007a \-\> B:47:?, CROSS_EDGE: B:69:0x0030 \-\> B:89:0x007a, CROSS_EDGE: B:80:0x0059 \-\> B:47:?, CROSS_EDGE: B:84:0x0069 \-\> B:47:?, CROSS_EDGE: B:88:0x0079 \-\> B:47:?, CROSS_EDGE: B:86:0x006c \-\> B:89:0x007a, CROSS_EDGE: B:62:0x001f \-\> B:66:0x0026, CROSS_EDGE: B:57:0x0016 \-\> B:61:0x001d, CROSS_EDGE: B:52:0x000d \-\> B:56:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003f\-0x0046: r7 'child' Landroid\/graphics\/drawable\/Drawable;\l  0x002e\-0x0049: r0 'state' Landroid\/graphics\/drawable\/Drawable$ConstantState;\l  0x0035\-0x0049: r1 'containerState' Landroid\/graphics\/drawable\/DrawableContainer$DrawableContainerState;\l  \-1 \-0x007a: r9 'drawable' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_46;Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_47;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_56;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_47;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_61;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_47;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_66;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_47;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_77;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_89;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_91;
Node_72 -> Node_73;
Node_73 -> Node_75;
Node_73 -> Node_90[style=dashed];
Node_75 -> Node_71;
Node_90 -> Node_74;
Node_74 -> Node_47;
Node_91 -> Node_89;
Node_89 -> Node_47;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_81;
Node_79 -> Node_80;
Node_80 -> Node_47;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_85;
Node_83 -> Node_84;
Node_84 -> Node_47;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_89;
Node_87 -> Node_88;
Node_88 -> Node_47;
}

