digraph "CFG forandroidx.appcompat.widget.PopupMenu.1.onMenuItemSelected(Landroidx\/appcompat\/view\/menu\/MenuBuilder;Landroid\/view\/MenuItem;)Z" {
subgraph cluster_Region_1256469711 {
label = "R(1:(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_816965133 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_857974858 {
label = "IF [B:3:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (androidx.appcompat.widget.PopupMenu.this.mMenuItemClickListener != null) goto L3\l}"];
subgraph cluster_Region_525379374 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|return androidx.appcompat.widget.PopupMenu.this.mMenuItemClickListener.onMenuItemClick(r3)\l}"];
}
}
subgraph cluster_Region_1954130503 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.PopupMenu.1.onMenuItemSelected((r1v0 'this' androidx.appcompat.widget.PopupMenu$1 A[IMMUTABLE_TYPE, THIS]), (r2v0 'menu' androidx.appcompat.view.menu.MenuBuilder A[D('menu' androidx.appcompat.view.menu.MenuBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'item' android.view.MenuItem A[D('item' android.view.MenuItem), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0010 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.view.menu.MenuBuilder.Callback.onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem):boolean]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_1;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

