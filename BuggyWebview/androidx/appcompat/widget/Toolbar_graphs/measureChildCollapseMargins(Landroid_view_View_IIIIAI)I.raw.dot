digraph "CFG forandroidx.appcompat.widget.Toolbar.measureChildCollapseMargins(Landroid\/view\/View;IIII[I)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r10 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1701)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0006: IGET  (r1 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.leftMargin int  (LINE:1703)\l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: AGET  (r3 I:??[int, float, short, byte, char]) = (r15 I:??[int, float][] A[D('collapsingMargins' int[])]), (r2 I:??[int, short, byte, char]) \l0x000b: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x000c: IGET  (r3 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.rightMargin int  (LINE:1704)\l0x000e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: AGET  (r5 I:??[int, float, short, byte, char]) = (r15 I:??[int, float][] A[D('collapsingMargins' int[])]), (r4 I:??[int, short, byte, char]) \l0x0011: ARITH  (r3 I:int) = (r3 I:int) \- (r5 I:int) \l0x0012: INVOKE  (r5 I:int) = (r2 I:int), (r1 I:int A[D('leftDiff' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1705)\l0x0016: INVOKE  (r6 I:int) = (r2 I:int), (r3 I:int A[D('rightDiff' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1706)\l0x001a: ARITH  (r7 I:int) = (r5 I:int A[D('leftMargin' int)]) + (r6 I:int A[D('rightMargin' int)])  (LINE:1707)\l0x001c: NEG  (r8 I:int) = (r1 I:int A[D('leftDiff' int)])  (LINE:1708)\l0x001d: INVOKE  (r8 I:int) = (r2 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0021: APUT  \l  (r15 I:??[int, float][] A[D('collapsingMargins' int[])])\l  (r2 I:??[int, short, byte, char])\l  (r8 I:??[int, float, short, byte, char])\l \l0x0023: NEG  (r8 I:int) = (r3 I:int A[D('rightDiff' int)])  (LINE:1709)\l0x0024: INVOKE  (r2 I:int) = (r2 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0028: APUT  \l  (r15 I:??[int, float][] A[D('collapsingMargins' int[])])\l  (r4 I:??[int, short, byte, char])\l  (r2 I:??[int, float, short, byte, char])\l \l0x002b: INVOKE  (r2 I:int) = (r9 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingLeft():int A[MD:():int (s)] (LINE:1712)\l0x002f: INVOKE  (r4 I:int) = (r9 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingRight():int A[MD:():int (s)]\l0x0033: ARITH  (r2 I:int) = (r2 I:int) + (r4 I:int) \l0x0034: ARITH  (r2 I:int) = (r2 I:int) + (r7 I:int A[D('hMargins' int)]) \l0x0035: ARITH  (r2 I:int) = (r2 I:int) + (r12 I:int A[D('widthUsed' int)]) \l0x0036: IGET  (r4 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.width int \l0x0038: INVOKE  (r2 I:int) = (r11 I:int A[D('parentWidthMeasureSpec' int)]), (r2 I:int), (r4 I:int) type: STATIC call: androidx.appcompat.widget.Toolbar.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:1711)\l0x003d: INVOKE  (r4 I:int) = (r9 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingTop():int A[MD:():int (s)] (LINE:1714)\l0x0041: INVOKE  (r8 I:int) = (r9 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingBottom():int A[MD:():int (s)]\l0x0045: ARITH  (r4 I:int) = (r4 I:int) + (r8 I:int) \l0x0046: IGET  (r8 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.topMargin int \l0x0048: ARITH  (r4 I:int) = (r4 I:int) + (r8 I:int) \l0x0049: IGET  (r8 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.bottomMargin int \l0x004b: ARITH  (r4 I:int) = (r4 I:int) + (r8 I:int) \l0x004c: ARITH  (r4 I:int) = (r4 I:int) + (r14 I:int A[D('heightUsed' int)]) \l0x004d: IGET  (r8 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.height int \l0x004f: INVOKE  (r4 I:int) = (r13 I:int A[D('parentHeightMeasureSpec' int)]), (r4 I:int), (r8 I:int) type: STATIC call: androidx.appcompat.widget.Toolbar.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:1713)\l0x0053: INVOKE  \l  (r10 I:android.view.View A[D('child' android.view.View)])\l  (r2 I:int A[D('childWidthMeasureSpec' int)])\l  (r4 I:int A[D('childHeightMeasureSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:1717)\l0x0056: INVOKE  (r8 I:int) = (r10 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:1718)\l0x005a: ARITH  (r8 I:int) = (r8 I:int) + (r7 I:int A[D('hMargins' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x005b|RETURN\l|0x005b: RETURN  (r8 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int androidx.appcompat.widget.Toolbar.measureChildCollapseMargins((r9 'this' I:androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('parentWidthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('widthUsed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('parentHeightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('heightUsed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int[] A[D('collapsingMargins' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x005b: r0 'lp' Landroid\/view\/ViewGroup$MarginLayoutParams;\l  0x000c\-0x005b: r1 'leftDiff' I\l  0x003c\-0x005b: r2 'childWidthMeasureSpec' I\l  0x0012\-0x005b: r3 'rightDiff' I\l  0x0053\-0x005b: r4 'childHeightMeasureSpec' I\l  0x0016\-0x005b: r5 'leftMargin' I\l  0x001a\-0x005b: r6 'rightMargin' I\l  0x001c\-0x005b: r7 'hMargins' I\l  \-1 \-0x005b: r10 'child' Landroid\/view\/View;\l  \-1 \-0x005b: r11 'parentWidthMeasureSpec' I\l  \-1 \-0x005b: r12 'widthUsed' I\l  \-1 \-0x005b: r13 'parentHeightMeasureSpec' I\l  \-1 \-0x005b: r14 'heightUsed' I\l  \-1 \-0x005b: r15 'collapsingMargins' [I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

