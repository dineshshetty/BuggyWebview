digraph "CFG forandroidx.appcompat.widget.Toolbar.onHoverEvent(Landroid\/view\/MotionEvent;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|int r0 = r6.getActionMasked()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|if (r0 != 9) goto L4\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|r5.mEatingHover = false\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b}"];
Node_23 [shape=record,label="{23\:\ 0x000e|if (r5.mEatingHover != false) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|boolean r3 = super.onHoverEvent(r6)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|if (r0 != 9) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|if (r3 != false) goto L10\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|r5.mEatingHover = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a}"];
Node_29 [shape=record,label="{29\:\ 0x001c|if (r0 == 10) goto L16\l}"];
Node_30 [shape=record,label="{30\:\ 0x001e}"];
Node_31 [shape=record,label="{31\:\ 0x001f|if (r0 != 3) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|RETURN\l|return true\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|r5.mEatingHover = false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.Toolbar.onHoverEvent((r5v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r6v0 'ev' android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x001f \-\> B:33:0x0023, CROSS_EDGE: B:29:0x001c \-\> B:32:0x0021, CROSS_EDGE: B:26:0x0016 \-\> B:28:0x001a, CROSS_EDGE: B:25:0x0014 \-\> B:28:0x001a, CROSS_EDGE: B:23:0x000e \-\> B:28:0x001a, CROSS_EDGE: B:20:0x0007 \-\> B:22:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onHoverEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_33 -> Node_18;
Node_32 -> Node_33;
}

