digraph "CFG forandroidx.appcompat.widget.Toolbar.measureChildConstrained(Landroid\/view\/View;IIIII)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r7 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:1676)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup$MarginLayoutParams) = (android.view.ViewGroup$MarginLayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:int) = (r6 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingLeft():int A[MD:():int (s)] (LINE:1679)\l0x000b: INVOKE  (r2 I:int) = (r6 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingRight():int A[MD:():int (s)]\l0x000f: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0010: IGET  (r2 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.leftMargin int \l0x0012: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0013: IGET  (r2 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.rightMargin int \l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0016: ARITH  (r1 I:int) = (r1 I:int) + (r9 I:int A[D('widthUsed' int)]) \l0x0017: IGET  (r2 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.width int \l0x0019: INVOKE  (r1 I:int) = (r8 I:int A[D('parentWidthSpec' int)]), (r1 I:int), (r2 I:int) type: STATIC call: androidx.appcompat.widget.Toolbar.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:1678)\l0x001e: INVOKE  (r2 I:int) = (r6 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingTop():int A[MD:():int (s)] (LINE:1682)\l0x0022: INVOKE  (r3 I:int) = (r6 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingBottom():int A[MD:():int (s)]\l0x0026: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0027: IGET  (r3 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.topMargin int \l0x0029: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x002a: IGET  (r3 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.bottomMargin int \l0x002c: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (r11 I:int A[D('heightUsed' int)]) \l0x002e: IGET  (r3 I:int) = (r0 I:android.view.ViewGroup$MarginLayoutParams A[D('lp' android.view.ViewGroup$MarginLayoutParams)]) android.view.ViewGroup.MarginLayoutParams.height int \l0x0030: INVOKE  (r2 I:int) = (r10 I:int A[D('parentHeightSpec' int)]), (r2 I:int), (r3 I:int) type: STATIC call: androidx.appcompat.widget.Toolbar.getChildMeasureSpec(int, int, int):int A[MD:(int, int, int):int (c)] (LINE:1681)\l0x0034: INVOKE  (r3 I:int) = (r2 I:int A[D('childHeightSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:1685)\l0x0038: CONST  (r4 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:1686)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childHeightMode' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004f \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IF  (r12 I:??[int, byte, short, char] A[D('heightConstraint' int)]) \< (0 ??[int, byte, short, char])  \-\> B:20:0x004f \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childHeightMode' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0049  (LINE:1687)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: INVOKE  (r5 I:int) = (r2 I:int A[D('childHeightSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:1688)\l0x0044: INVOKE  (r5 I:int) = (r5 I:int), (r12 I:int A[D('heightConstraint' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004b: INVOKE  (r2 I:int A[D('childHeightSpec' int)]) = (r5 I:int A[D('size' int)]), (r4 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:1690)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|0x0049: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('heightConstraint' int)])  (LINE:1689)\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: INVOKE  \l  (r7 I:android.view.View A[D('child' android.view.View)])\l  (r1 I:int A[D('childWidthSpec' int)])\l  (r2 I:int A[D('childHeightSpec' int)])\l type: VIRTUAL call: android.view.View.measure(int, int):void A[MD:(int, int):void (c)] (LINE:1692)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|RETURN\l|0x0052: RETURN    (LINE:1693)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.Toolbar.measureChildConstrained((r6 'this' I:androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('parentWidthSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('widthUsed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('parentHeightSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('heightUsed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('heightConstraint' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0049 \-\> B:19:0x004a, CROSS_EDGE: B:15:0x003c \-\> B:20:0x004f, CROSS_EDGE: B:14:0x003a \-\> B:20:0x004f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x004b\-0x004f: r5 'size' I\l  0x0006\-0x0052: r0 'lp' Landroid\/view\/ViewGroup$MarginLayoutParams;\l  0x001d\-0x0052: r1 'childWidthSpec' I\l  0x0034\-0x0052: r2 'childHeightSpec' I\l  0x0038\-0x0052: r3 'childHeightMode' I\l  \-1 \-0x0052: r7 'child' Landroid\/view\/View;\l  \-1 \-0x0052: r8 'parentWidthSpec' I\l  \-1 \-0x0052: r9 'widthUsed' I\l  \-1 \-0x0052: r10 'parentHeightSpec' I\l  \-1 \-0x0052: r11 'heightUsed' I\l  \-1 \-0x0052: r12 'heightConstraint' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

