digraph "CFG forandroidx.appcompat.widget.Toolbar.getCurrentContentInsetEnd()I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|r0 = false\landroidx.appcompat.widget.ActionMenuView r1 = r4.mMenuView\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|if (r1 == null) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|androidx.appcompat.view.menu.MenuBuilder r1 = r1.peekMenu()\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|if (r1 == null) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c}"];
Node_23 [shape=record,label="{23\:\ 0x0010|if (r1.hasVisibleItems() == false) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|r3 = true\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v4 boolean) binds: [B:25:0x0014, B:24:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r3\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|r3 = false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|PHI: r0 \l  PHI: (r0v1 'hasActions' boolean) = (r0v0 'hasActions' boolean), (r0v2 'hasActions' boolean) binds: [B:19:0x0004, B:26:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Math.max(getContentInsetEnd(), java.lang.Math.max(r4.mContentInsetEndWithActions, 0))\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0027}"];
Node_30 [shape=record,label="{30\:\ 0x002b|RETURN\lORIG_RETURN\l|return getContentInsetEnd()\l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.widget.Toolbar.getCurrentContentInsetEnd((r4v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0027 \-\> B:30:0x002b, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0015, CROSS_EDGE: B:21:0x000a \-\> B:25:0x0014, CROSS_EDGE: B:19:0x0004 \-\> B:27:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_25 -> Node_26;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_31;
Node_31 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

