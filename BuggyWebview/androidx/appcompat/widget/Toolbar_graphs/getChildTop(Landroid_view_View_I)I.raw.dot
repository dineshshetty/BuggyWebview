digraph "CFG forandroidx.appcompat.widget.Toolbar.getChildTop(Landroid\/view\/View;I)I" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewGroup$LayoutParams) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:2137)\l0x0004: CHECK_CAST (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams) = (androidx.appcompat.widget.Toolbar$LayoutParams) (r0 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:int) = (r12 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:2138)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2139)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|0x000b: IF  (r13 I:??[int, byte, short, char] A[D('alignmentHeight' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x0012 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000d|0x000d: ARITH  (r3 I:int) = (r1 I:int A[D('childHeight' int)]) \- (r13 I:int A[D('alignmentHeight' int)]) \l0x000f: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|0x0013: IGET  (r4 I:int) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.gravity int  (LINE:2140)\l0x0015: INVOKE  (r4 I:int) = (r11 I:androidx.appcompat.widget.Toolbar), (r4 I:int) type: DIRECT call: androidx.appcompat.widget.Toolbar.getChildVerticalGravity(int):int A[MD:(int):int (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: SWITCH  (r4 I:??)\l case 48: goto B:33:0x0045\l case 80: goto B:31:0x0036\l default: goto B:28:0x001c \l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|0x001c: INVOKE  (r4 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingTop():int A[MD:():int (s)] (LINE:2150)\l0x0020: INVOKE  (r5 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingBottom():int A[MD:():int (s)] (LINE:2151)\l0x0024: INVOKE  (r6 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getHeight():int A[MD:():int (s)] (LINE:2152)\l0x0028: ARITH  (r7 I:int) = (r6 I:int A[D('height' int)]) \- (r4 I:int A[D('paddingTop' int)])  (LINE:2153)\l0x002a: ARITH  (r7 I:int) = (r7 I:int) \- (r5 I:int A[D('paddingBottom' int)]) \l0x002b: ARITH  (r8 I:int) = (r7 I:int A[D('space' int)]) \- (r1 I:int A[D('childHeight' int)])  (LINE:2154)\l0x002d: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x002f: IGET  (r9 I:int) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.topMargin int  (LINE:2155)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0031|0x0031: IF  (r8 I:??[int, byte, short, char] A[D('spaceAbove' int)]) \>= (r9 I:??[int, byte, short, char])  \-\> B:35:0x004b \l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|0x0033: IGET  (r8 I:int A[D('spaceAbove' int)]) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.topMargin int  (LINE:2156)\l}"];
Node_38 [shape=record,label="{38\:\ 0x005d|0x005d: ARITH  (r2 I:int) = (r4 I:int A[D('paddingTop' int)]) + (r8 I:int A[D('spaceAbove' int)])  (LINE:2164)\l}"];
Node_39 [shape=record,label="{39\:\ 0x005f|RETURN\l|0x005f: RETURN  (r2 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x004b|0x004b: ARITH  (r9 I:int) = (r6 I:int A[D('height' int)]) \- (r5 I:int A[D('paddingBottom' int)])  (LINE:2158)\l0x004d: ARITH  (r9 I:int) = (r9 I:int) \- (r1 I:int A[D('childHeight' int)]) \l0x004e: ARITH  (r9 I:int) = (r9 I:int) \- (r8 I:int A[D('spaceAbove' int)]) \l0x004f: ARITH  (r9 I:int) = (r9 I:int) \- (r4 I:int A[D('paddingTop' int)]) \l0x0050: IGET  (r10 I:int) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.bottomMargin int  (LINE:2160)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0052|0x0052: IF  (r9 I:??[int, byte, short, char] A[D('spaceBelow' int)]) \>= (r10 I:??[int, byte, short, char])  \-\> B:38:0x005d \l}"];
Node_37 [shape=record,label="{37\:\ 0x0054|0x0054: IGET  (r10 I:int) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.bottomMargin int  (LINE:2161)\l0x0056: ARITH  (r10 I:int) = (r10 I:int) \- (r9 I:int A[D('spaceBelow' int)]) \l0x0057: ARITH  (r10 I:int) = (r8 I:int A[D('spaceAbove' int)]) \- (r10 I:int) \l0x0059: INVOKE  (r8 I:int A[D('spaceAbove' int)]) = (r2 I:int), (r10 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0036|0x0036: INVOKE  (r2 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getHeight():int A[MD:():int (s)] (LINE:2145)\l0x003a: INVOKE  (r4 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingBottom():int A[MD:():int (s)]\l0x003e: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x003f: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int A[D('childHeight' int)]) \l0x0040: IGET  (r4 I:int) = (r0 I:androidx.appcompat.widget.Toolbar$LayoutParams A[D('lp' androidx.appcompat.widget.Toolbar$LayoutParams)]) androidx.appcompat.widget.Toolbar.LayoutParams.bottomMargin int \l0x0042: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x0043: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int A[D('alignmentOffset' int)]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0044|RETURN\l|0x0044: RETURN  (r2 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0045|0x0045: INVOKE  (r2 I:int) = (r11 I:androidx.appcompat.widget.Toolbar) type: VIRTUAL call: androidx.appcompat.widget.Toolbar.getPaddingTop():int A[MD:():int (s)] (LINE:2142)\l0x0049: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int A[D('alignmentOffset' int)]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x004a|RETURN\l|0x004a: RETURN  (r2 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private int androidx.appcompat.widget.Toolbar.getChildTop((r11 'this' I:androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r12 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('alignmentHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0054 \-\> B:38:0x005d, CROSS_EDGE: B:36:0x0052 \-\> B:38:0x005d, CROSS_EDGE: B:32:0x0044 \-\> B:21:?, CROSS_EDGE: B:34:0x004a \-\> B:21:?, CROSS_EDGE: B:25:0x0012 \-\> B:26:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0036: r4 'paddingTop' I\l  0x0024\-0x0036: r5 'paddingBottom' I\l  0x0028\-0x0036: r6 'height' I\l  0x002b\-0x0036: r7 'space' I\l  0x002f\-0x0036: r8 'spaceAbove' I\l  0x0050\-0x005d: r9 'spaceBelow' I\l  0x0006\-0x0069: r0 'lp' Landroidx\/appcompat\/widget\/Toolbar$LayoutParams;\l  0x000a\-0x0069: r1 'childHeight' I\l  0x0013\-0x0069: r3 'alignmentOffset' I\l  0x004b\-0x0069: r4 'paddingTop' I\l  0x004b\-0x0069: r5 'paddingBottom' I\l  0x004b\-0x0069: r6 'height' I\l  0x004b\-0x0069: r7 'space' I\l  0x004b\-0x0069: r8 'spaceAbove' I\l  \-1 \-0x0069: r12 'child' Landroid\/view\/View;\l  \-1 \-0x0069: r13 'alignmentHeight' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_31;
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_21;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_25 -> Node_26;
}

