digraph "CFG forandroidx.appcompat.widget.Toolbar.addSystemView(Landroid\/view\/View;Z)V" {
subgraph cluster_Region_1565561948 {
label = "R(4:1|(1:3)(1:(1:15)(1:16))|4|(2:(2:8|9)|(1:11))) | DECL_VAR: androidx.appcompat.widget.Toolbar$LayoutParams lp\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|android.view.ViewGroup$LayoutParams android.view.ViewGroup.LayoutParams r0 = r4.getLayoutParams()\l}"];
subgraph cluster_IfRegion_1203382002 {
label = "IF [B:20:0x0004] THEN: R(1:3) ELSE: R(1:(1:15)(1:16))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_1438344819 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|androidx.appcompat.widget.Toolbar$LayoutParams r1 = generateDefaultLayoutParams()\l}"];
}
subgraph cluster_Region_1310187216 {
label = "R(1:(1:15)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1714634680 {
label = "IF [B:23:0x000f] THEN: R(1:15) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000f|if (checkLayoutParams(r0) == false) goto L15\l}"];
subgraph cluster_Region_436981802 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0011|androidx.appcompat.widget.Toolbar$LayoutParams r1 = generateLayoutParams(r0)\l}"];
}
subgraph cluster_Region_1134581059 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0016|androidx.appcompat.widget.Toolbar$LayoutParams r1 = (androidx.appcompat.widget.Toolbar.LayoutParams) r0\l}"];
}
}
}
}
Node_26 [shape=record,label="{26\:\ 0x0019|PHI: r1 \l  PHI: (r1v4 'lp' androidx.appcompat.widget.Toolbar$LayoutParams) = (r1v2 'lp' androidx.appcompat.widget.Toolbar$LayoutParams), (r1v3 'lp' androidx.appcompat.widget.Toolbar$LayoutParams), (r1v5 'lp' androidx.appcompat.widget.Toolbar$LayoutParams) binds: [B:25:0x0016, B:24:0x0011, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r1.mViewType = 1\l}"];
subgraph cluster_Region_642409745 {
label = "R(2:(2:8|9)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_175276013 {
label = "IF [B:27:0x001c, B:29:0x0020] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001c|if (r5 != false) goto L6\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|ADDED_TO_REGION\l|if (r3.mExpandedActionView != null) goto L8\l}"];
subgraph cluster_Region_1639635781 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0022|r4.setLayoutParams(r1)\lr3.mHiddenViews.add(r4)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_296446204 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x002b|addView(r4, r1)\l}"];
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x001e}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x002e|ORIG_RETURN\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000b}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.Toolbar.addSystemView((r3v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r4v0 'v' android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'allowHide' boolean A[D('allowHide' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x002b \-\> B:32:0x002e, CROSS_EDGE: B:27:0x001c \-\> B:31:0x002b, CROSS_EDGE: B:24:0x0011 \-\> B:26:0x0019, CROSS_EDGE: B:25:0x0016 \-\> B:26:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_31[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_32;
Node_17 -> Node_19;
Node_28 -> Node_29;
Node_32 -> Node_18;
Node_22 -> Node_23;
}

