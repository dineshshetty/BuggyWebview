digraph "CFG forandroidx.appcompat.widget.Toolbar.onSaveInstanceState()Landroid\/os\/Parcelable;" {
subgraph cluster_Region_976229152 {
label = "R(4:1|(1:5)|6|7)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|androidx.appcompat.widget.Toolbar$SavedState androidx.appcompat.widget.Toolbar.SavedState r0 = new androidx.appcompat.widget.Toolbar.SavedState(super.onSaveInstanceState())\landroidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter androidx.appcompat.widget.Toolbar.ExpandedActionViewMenuPresenter r1 = r2.mExpandedMenuPresenter\l}"];
subgraph cluster_IfRegion_1376594622 {
label = "IF [B:12:0x000b, B:14:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000b|if (r1 != null) goto L3\l}"];
Node_14 [shape=record,label="{14\:\ 0x000f|ADDED_TO_REGION\l|if (r1.mCurrentExpandedItem != null) goto L5\l}"];
subgraph cluster_Region_1038163471 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0011|r0.expandedMenuItemId = r2.mExpandedMenuPresenter.mCurrentExpandedItem.getItemId()\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x001b|r0.isOverflowOpen = isOverflowMenuShowing()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|RETURN\l|return r0\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000d}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.os.Parcelable androidx.appcompat.widget.Toolbar.onSaveInstanceState((r2v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x000f \-\> B:16:0x001b, CROSS_EDGE: B:12:0x000b \-\> B:16:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onSaveInstanceState():android.os.Parcelable\}]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_13 -> Node_14;
}

