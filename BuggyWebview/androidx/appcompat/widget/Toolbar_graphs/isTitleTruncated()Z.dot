digraph "CFG forandroidx.appcompat.widget.Toolbar.isTitleTruncated()Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|android.widget.TextView r0 = r5.mTitleTextView\l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|if (r0 != null) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|android.text.Layout r0 = r0.getLayout()\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|if (r0 != null) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|RETURN\l|return false\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|int r2 = r0.getLineCount()\lr3 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0012|LOOP_START\lLOOP:0: B:27:0x0012\-\>B:32:0x001c\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:26:0x000d, B:32:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r2) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x0014}"];
Node_29 [shape=record,label="{29\:\ 0x0018|if (r0.getEllipsisCount(r3) \<= 0) goto L12\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|LOOP_END\lLOOP:0: B:27:0x0012\-\>B:32:0x001c\l|int r3 = r3 + 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|RETURN\l|return true\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.Toolbar.isTitleTruncated((r5v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x000c \-\> B:19:?, CROSS_EDGE: B:31:0x001b \-\> B:19:?, BACK_EDGE: B:32:0x001c \-\> B:27:0x0012, CROSS_EDGE: B:33:0x001f \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_32;
Node_29 -> Node_35[style=dashed];
Node_32 -> Node_27;
Node_35 -> Node_30;
Node_30 -> Node_19;
Node_34 -> Node_33;
Node_33 -> Node_19;
}

