digraph "CFG forandroidx.appcompat.widget.Toolbar.getChildTop(Landroid\/view\/View;I)I" {
subgraph cluster_Region_994958814 {
label = "R(3:1|2|5)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0000|androidx.appcompat.widget.Toolbar$LayoutParams androidx.appcompat.widget.Toolbar.LayoutParams r0 = (androidx.appcompat.widget.Toolbar.LayoutParams) r12.getLayoutParams()\lint int r1 = r12.getMeasuredHeight()\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|int r3 = r13 \> 0 ? (r1 \- r13) \/ 2 : 0\l}"];
subgraph cluster_SwitchRegion_876229467 {
label = "Switch: 3
 case 48 -> R(1:18)
 case 80 -> R(1:16)
 case default -> R(3:6|(1:8)(2:12|(1:14))|10)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0019|switch(getChildVerticalGravity(r0.gravity)) \{\l    case 48: goto L17;\l    case 80: goto L15;\l    default: goto L6;\l\}\l}"];
subgraph cluster_Region_1018696562 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x004a|RETURN\l|return getPaddingTop() \- r3\l}"];
}
subgraph cluster_Region_1535924455 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0044|RETURN\l|return (((getHeight() \- getPaddingBottom()) \- r1) \- r0.bottomMargin) \- r3\l}"];
}
subgraph cluster_Region_1936409948 {
label = "R(3:6|(1:8)(2:12|(1:14))|10)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001c|int int r4 = getPaddingTop()\lint int r5 = getPaddingBottom()\lint int r6 = getHeight()\lint int r7 = (r6 \- r4) \- r5\lint int r8 = (r7 \- r1) \/ 2\l}"];
subgraph cluster_IfRegion_1367298089 {
label = "IF [B:29:0x0031] THEN: R(1:8) ELSE: R(2:12|(1:14))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0031|if (r8 \< r0.topMargin) goto L8\l}"];
subgraph cluster_Region_76141813 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0033|int r8 = r0.topMargin\l}"];
}
subgraph cluster_Region_957286840 {
label = "R(2:12|(1:14))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x004b|int int r9 = (((r6 \- r5) \- r1) \- r8) \- r4\l}"];
subgraph cluster_IfRegion_1640800212 {
label = "IF [B:36:0x0052] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0052|if (r9 \< r0.bottomMargin) goto L14\l}"];
subgraph cluster_Region_1480501354 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0054|int r8 = java.lang.Math.max(0, r8 \- (r0.bottomMargin \- r9))\l}"];
}
}
}
}
Node_39 [shape=record,label="{39\:\ 0x005f|RETURN\l|return r4 + r8\l}"];
}
}
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x000d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0013|PHI: r3 \l  PHI: (r3v1 'alignmentOffset' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x005d|PHI: r8 \l  PHI: (r8v3 'spaceAbove' int) = (r8v1 'spaceAbove' int), (r8v2 'spaceAbove' int), (r8v4 'spaceAbove' int) binds: [B:36:0x0052, B:37:0x0054, B:30:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0036}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0045}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0012}"];
MethodNode[shape=record,label="{private int androidx.appcompat.widget.Toolbar.getChildTop((r11v0 'this' androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]), (r12v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'alignmentHeight' int A[D('alignmentHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0054 \-\> B:38:0x005d, CROSS_EDGE: B:36:0x0052 \-\> B:38:0x005d, CROSS_EDGE: B:32:0x0044 \-\> B:21:?, CROSS_EDGE: B:34:0x004a \-\> B:21:?, CROSS_EDGE: B:25:0x0012 \-\> B:26:0x0013\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_27 -> Node_28;
Node_27 -> Node_31;
Node_27 -> Node_33;
Node_34 -> Node_21;
Node_32 -> Node_21;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_35[style=dashed];
Node_30 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_38;
Node_39 -> Node_21;
Node_20 -> Node_22;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_38 -> Node_39;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_25 -> Node_26;
}

