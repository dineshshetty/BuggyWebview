digraph "CFG forandroidx.appcompat.widget.Toolbar.hasExpandedActionView()Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter) = (r1 I:androidx.appcompat.widget.Toolbar) androidx.appcompat.widget.Toolbar.mExpandedMenuPresenter androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter  (LINE:733)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IGET  (r0 I:androidx.appcompat.view.menu.MenuItemImpl) = (r0 I:androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter) androidx.appcompat.widget.Toolbar.ExpandedActionViewMenuPresenter.mCurrentExpandedItem androidx.appcompat.view.menu.MenuItemImpl \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x000a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|SYNTHETIC\lRETURN\l|0x0008: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.Toolbar.hasExpandedActionView((r1 'this' I:androidx.appcompat.widget.Toolbar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000a \-\> B:18:0x000b, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

