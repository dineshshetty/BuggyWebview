digraph "CFG forandroidx.appcompat.widget.DropDownListView.positionSelectorCompat(ILandroid\/view\/View;)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|android.graphics.Rect r0 = r5.mSelectorRect\lr0.set(r7.getLeft(), r7.getTop(), r7.getRight(), r7.getBottom())\lr0.left = r0.left \- r5.mSelectionLeftPadding\lr0.top = r0.top \- r5.mSelectionTopPadding\lr0.right = r0.right + r5.mSelectionRightPadding\lr0.bottom = r0.bottom + r5.mSelectionBottomPadding\l}"];
Node_37 [shape=record,label="{37\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0031|TRY_ENTER\lTryCatch #0 \{IllegalAccessException \-\> 0x0052, blocks: (B:24:0x0031, B:26:0x003d, B:30:0x0044, B:32:0x004e), top: B:37:0x0031 \}\lCatch: IllegalAccessException \-\> 0x0052\l|boolean r1 = r5.mIsChildViewEnabled.getBoolean(r5)     \/\/ Catch: java.lang.IllegalAccessException \-\> L52\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|if (r7.isEnabled() == r1) goto L16\l}"];
Node_26 [shape=record,label="{26\:\ 0x003d|TryCatch #0 \{IllegalAccessException \-\> 0x0052, blocks: (B:24:0x0031, B:26:0x003d, B:30:0x0044, B:32:0x004e), top: B:37:0x0031 \}\lCatch: IllegalAccessException \-\> 0x0052\l|java.lang.reflect.Field r2 = r5.mIsChildViewEnabled     \/\/ Catch: java.lang.IllegalAccessException \-\> L52\l}"];
Node_27 [shape=record,label="{27\:\ 0x003f|if (r1 != false) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x0041|r3 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0044|TryCatch #0 \{IllegalAccessException \-\> 0x0052, blocks: (B:24:0x0031, B:26:0x003d, B:30:0x0044, B:32:0x004e), top: B:37:0x0031 \}\lCatch: IllegalAccessException \-\> 0x0052\lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v4 boolean) binds: [B:29:0x0043, B:28:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|r2.set(r5, java.lang.Boolean.valueOf(r3))     \/\/ Catch: java.lang.IllegalAccessException \-\> L52\l}"];
Node_31 [shape=record,label="{31\:\ 0x004c|if (r6 == (\-1)) goto L14\l}"];
Node_32 [shape=record,label="{32\:\ 0x004e|TRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x0052, blocks: (B:24:0x0031, B:26:0x003d, B:30:0x0044, B:32:0x004e), top: B:37:0x0031 \}\lCatch: IllegalAccessException \-\> 0x0052\l|refreshDrawableState()     \/\/ Catch: java.lang.IllegalAccessException \-\> L52\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|r3 = false\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ 0x0052|ExcHandler: IllegalAccessException \-\> 0x0052\l|java.lang.IllegalAccessException r1 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x0053|r1.printStackTrace()\l}"];
Node_36 [shape=record,label="{36\:\ 0x0056|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.DropDownListView.positionSelectorCompat((r5v0 'this' androidx.appcompat.widget.DropDownListView A[IMMUTABLE_TYPE, THIS]), (r6v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'sel' android.view.View A[D('sel' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0053 \-\> B:36:0x0056, CROSS_EDGE: B:31:0x004c \-\> B:36:0x0056, CROSS_EDGE: B:29:0x0043 \-\> B:30:0x0044, CROSS_EDGE: B:25:0x003b \-\> B:36:0x0056, CROSS_EDGE: B:37:0x0031 \-\> B:34:0x0052\lINLINE_NOT_NEEDED\lTryCatch #0 \{IllegalAccessException \-\> 0x0052, blocks: (B:24:0x0031, B:26:0x003d, B:30:0x0044, B:32:0x004e), top: B:37:0x0031 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_37;
Node_37 -> Node_24;
Node_37 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_40;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_41;
Node_32 -> Node_38;
Node_32 -> Node_39;
Node_38 -> Node_34;
Node_39 -> Node_22;
Node_41 -> Node_22;
Node_29 -> Node_30;
Node_40 -> Node_22;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_22;
}

