digraph "CFG forandroidx.appcompat.widget.ActionBarContextView.hideOverflowMenu()Z" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.ActionMenuPresenter) = (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mActionMenuPresenter androidx.appcompat.widget.ActionMenuPresenter  (LINE:221)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0004|0x0004: IGET  (r0 I:androidx.appcompat.widget.ActionMenuPresenter) = (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mActionMenuPresenter androidx.appcompat.widget.ActionMenuPresenter  (LINE:222)\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:androidx.appcompat.widget.ActionMenuPresenter) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.hideOverflowMenu():boolean A[MD:():boolean (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:224)\l0x000c: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.ActionBarContextView.hideOverflowMenu((r1 'this' I:androidx.appcompat.widget.ActionBarContextView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000c \-\> B:9:?\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.appcompat.widget.AbsActionBarView.hideOverflowMenu():boolean]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_9;
}

