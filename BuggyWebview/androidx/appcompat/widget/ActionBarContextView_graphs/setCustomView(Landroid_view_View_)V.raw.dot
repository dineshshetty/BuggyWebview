digraph "CFG forandroidx.appcompat.widget.ActionBarContextView.setCustomView(Landroid\/view\/View;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mCustomView android.view.View  (LINE:102)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarContextView), (r0 I:android.view.View) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContextView.removeView(android.view.View):void A[MD:(android.view.View):void (s)] (LINE:103)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IPUT  (r2 I:android.view.View A[D('view' android.view.View)]), (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mCustomView android.view.View  (LINE:105)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0015  (LINE:106)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: IGET  (r0 I:android.widget.LinearLayout) = (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mTitleLayout android.widget.LinearLayout \l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0015 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarContextView), (r0 I:android.view.View) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContextView.removeView(android.view.View):void A[MD:(android.view.View):void (s)] (LINE:107)\l0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:108)\l0x0013: IPUT  (r0 I:android.widget.LinearLayout), (r1 I:androidx.appcompat.widget.ActionBarContextView) androidx.appcompat.widget.ActionBarContextView.mTitleLayout android.widget.LinearLayout \l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001a  (LINE:110)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarContextView), (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContextView.addView(android.view.View):void A[MD:(android.view.View):void (s)] (LINE:111)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarContextView) type: VIRTUAL call: androidx.appcompat.widget.ActionBarContextView.requestLayout():void A[MD:():void (s)] (LINE:113)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|RETURN\l|0x001d: RETURN    (LINE:114)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActionBarContextView.setCustomView((r1 'this' I:androidx.appcompat.widget.ActionBarContextView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0015 \-\> B:26:0x001a, CROSS_EDGE: B:22:0x000d \-\> B:24:0x0015, CROSS_EDGE: B:20:0x0009 \-\> B:24:0x0015, CROSS_EDGE: B:17:0x0002 \-\> B:19:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r2 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

