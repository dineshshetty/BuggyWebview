digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Api23Impl.createStaticLayoutForMeasuring(Ljava\/lang\/CharSequence;Landroid\/text\/Layout$Alignment;IILandroid\/widget\/TextView;Landroid\/text\/TextPaint;Landroidx\/appcompat\/widget\/AppCompatTextViewAutoSizeHelper$Impl;)Landroid\/text\/StaticLayout;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0001|0x0001: INVOKE  (r0 I:int) = (r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.length():int A[MD:():int (c)] (LINE:920)\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:919)\l0x0006: INVOKE  (r0 I:android.text.StaticLayout$Builder) = \l  (r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence)])\l  (r1 I:int)\l  (r0 I:int)\l  (r9 I:android.text.TextPaint A[D('tempTextPaint' android.text.TextPaint)])\l  (r6 I:int A[D('availableWidth' int)])\l type: STATIC call: android.text.StaticLayout.Builder.obtain(java.lang.CharSequence, int, int, android.text.TextPaint, int):android.text.StaticLayout$Builder A[MD:(java.lang.CharSequence, int, int, android.text.TextPaint, int):android.text.StaticLayout$Builder (c)]\l0x000a: INVOKE  (r1 I:android.text.StaticLayout$Builder) = \l  (r0 I:android.text.StaticLayout$Builder A[D('layoutBuilder' android.text.StaticLayout$Builder)])\l  (r5 I:android.text.Layout$Alignment A[D('alignment' android.text.Layout$Alignment)])\l type: VIRTUAL call: android.text.StaticLayout.Builder.setAlignment(android.text.Layout$Alignment):android.text.StaticLayout$Builder A[MD:(android.text.Layout$Alignment):android.text.StaticLayout$Builder (c)] (LINE:922)\l0x000e: INVOKE  (r2 I:float) = (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getLineSpacingExtra():float A[MD:():float (c)] (LINE:924)\l0x0012: INVOKE  (r3 I:float) = (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getLineSpacingMultiplier():float A[MD:():float (c)] (LINE:925)\l0x0016: INVOKE  (r1 I:android.text.StaticLayout$Builder) = (r1 I:android.text.StaticLayout$Builder), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.text.StaticLayout.Builder.setLineSpacing(float, float):android.text.StaticLayout$Builder A[MD:(float, float):android.text.StaticLayout$Builder (c)] (LINE:923)\l0x001a: INVOKE  (r2 I:boolean) = (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getIncludeFontPadding():boolean A[MD:():boolean (c)] (LINE:926)\l0x001e: INVOKE  (r1 I:android.text.StaticLayout$Builder) = (r1 I:android.text.StaticLayout$Builder), (r2 I:boolean) type: VIRTUAL call: android.text.StaticLayout.Builder.setIncludePad(boolean):android.text.StaticLayout$Builder A[MD:(boolean):android.text.StaticLayout$Builder (c)]\l0x0022: INVOKE  (r2 I:int) = (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getBreakStrategy():int A[MD:():int (c)] (LINE:927)\l0x0026: INVOKE  (r1 I:android.text.StaticLayout$Builder) = (r1 I:android.text.StaticLayout$Builder), (r2 I:int) type: VIRTUAL call: android.text.StaticLayout.Builder.setBreakStrategy(int):android.text.StaticLayout$Builder A[MD:(int):android.text.StaticLayout$Builder (c)]\l0x002a: INVOKE  (r2 I:int) = (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getHyphenationFrequency():int A[MD:():int (c)] (LINE:928)\l0x002e: INVOKE  (r1 I:android.text.StaticLayout$Builder) = (r1 I:android.text.StaticLayout$Builder), (r2 I:int) type: VIRTUAL call: android.text.StaticLayout.Builder.setHyphenationFrequency(int):android.text.StaticLayout$Builder A[MD:(int):android.text.StaticLayout$Builder (c)]\l0x0032: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:929)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0033|0x0033: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maxLines' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0039 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: CONST  (r2 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003a|0x003a: INVOKE  (r1 I:android.text.StaticLayout$Builder), (r2 I:int) type: VIRTUAL call: android.text.StaticLayout.Builder.setMaxLines(int):android.text.StaticLayout$Builder A[MD:(int):android.text.StaticLayout$Builder (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ClassCastException \-\> 0x0041, blocks: (B:7:0x003d), top: B:13:0x003d \}\lCatch: ClassCastException \-\> 0x0041\l|0x003d: INVOKE  \l  (r10 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl A[D('impl' androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)])\l  (r0 I:android.text.StaticLayout$Builder A[D('layoutBuilder' android.text.StaticLayout$Builder)])\l  (r8 I:android.widget.TextView A[D('textView' android.widget.TextView)])\l type: VIRTUAL call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Impl.computeAndSetTextDirection(android.text.StaticLayout$Builder, android.widget.TextView):void A[Catch: ClassCastException \-\> 0x0041, MD:(android.text.StaticLayout$Builder, android.widget.TextView):void (m), TRY_ENTER, TRY_LEAVE] (LINE:934)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: INVOKE  (r1 I:android.text.StaticLayout) = (r0 I:android.text.StaticLayout$Builder A[D('layoutBuilder' android.text.StaticLayout$Builder)]) type: VIRTUAL call: android.text.StaticLayout.Builder.build():android.text.StaticLayout A[MD:():android.text.StaticLayout (c)] (LINE:939)\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|RETURN\l|0x004d: RETURN  (r1 I:android.text.StaticLayout) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|ExcHandler: ClassCastException \-\> 0x0041\l|0x0041: MOVE_EXCEPTION  (r1 I:java.lang.ClassCastException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassCastException \-\> 0x0041] (LINE:935)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: CONST_STR  (r2 I:java.lang.String) =  \"ACTVAutoSizeHelper\"  (LINE:937)\l0x0044: CONST_STR  (r3 I:java.lang.String) =  \"Failed to obtain TextDirectionHeuristic, auto size may be incorrect\" \l0x0046: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|0x0039: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxLines' int)]) \l}"];
MethodNode[shape=record,label="{static android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Api23Impl.createStaticLayoutForMeasuring((r4 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.text.Layout$Alignment A[D('alignment' android.text.Layout$Alignment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('availableWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('maxLines' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.text.TextPaint A[D('tempTextPaint' android.text.TextPaint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl A[D('impl' androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0042 \-\> B:11:0x0049, CROSS_EDGE: B:13:0x003d \-\> B:9:0x0041, CROSS_EDGE: B:5:0x0039 \-\> B:6:0x003a\lDebug Info:\l  0x0042\-0x0049: r1 'e' Ljava\/lang\/ClassCastException;\l  0x000a\-0x004d: r0 'layoutBuilder' Landroid\/text\/StaticLayout$Builder;\l  \-1 \-0x004d: r4 'text' Ljava\/lang\/CharSequence;\l  \-1 \-0x004d: r5 'alignment' Landroid\/text\/Layout$Alignment;\l  \-1 \-0x004d: r6 'availableWidth' I\l  \-1 \-0x004d: r7 'maxLines' I\l  \-1 \-0x004d: r8 'textView' Landroid\/widget\/TextView;\l  \-1 \-0x004d: r9 'tempTextPaint' Landroid\/text\/TextPaint;\l  \-1 \-0x004d: r10 'impl' Landroidx\/appcompat\/widget\/AppCompatTextViewAutoSizeHelper$Impl;\lTryCatch #0 \{ClassCastException \-\> 0x0041, blocks: (B:7:0x003d), top: B:13:0x003d \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_9;
Node_7 -> Node_11;
Node_7 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_14 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_5 -> Node_6;
}

