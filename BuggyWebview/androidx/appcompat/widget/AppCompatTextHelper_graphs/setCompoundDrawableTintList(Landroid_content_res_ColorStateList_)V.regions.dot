digraph "CFG forandroidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList(Landroid\/content\/res\/ColorStateList;)V" {
subgraph cluster_Region_34818199 {
label = "R(3:(1:3)|4|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_431290627 {
label = "IF [B:14:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r2.mDrawableTint == null) goto L3\l}"];
subgraph cluster_Region_831868913 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0004|r2.mDrawableTint = new androidx.appcompat.widget.TintInfo()\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x000b|r2.mDrawableTint.mTintList = r3\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|PHI: r1 \l  PHI: (r1v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.mDrawableTint.mHasTintList = r3 != null\lsetCompoundTints()\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0011}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0013}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001b}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0015}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList((r2v0 'this' androidx.appcompat.widget.AppCompatTextHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'tintList' android.content.res.ColorStateList A[D('tintList' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0015 \-\> B:20:0x0016, CROSS_EDGE: B:14:0x0002 \-\> B:16:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_20 -> Node_21;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_12;
Node_19 -> Node_20;
}

