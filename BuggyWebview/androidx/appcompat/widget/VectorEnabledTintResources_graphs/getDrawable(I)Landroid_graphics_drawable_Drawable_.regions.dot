digraph "CFG forandroidx.appcompat.widget.VectorEnabledTintResources.getDrawable(I)Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_818191958 {
label = "R(2:1|(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|android.content.Context android.content.Context r0 = r2.mContextRef.get()\l}"];
subgraph cluster_Region_1593615160 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_848320910 {
label = "IF [B:11:0x0008] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_363413345 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|return androidx.appcompat.widget.ResourceManagerInternal.get().onDrawableLoadedFromResources(r0, r2, r3)\l}"];
}
}
subgraph cluster_Region_690766225 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0017|RETURN\l|return getDrawableCanonical(r3)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000a}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0013}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.appcompat.widget.VectorEnabledTintResources.getDrawable((r2v0 'this' androidx.appcompat.widget.VectorEnabledTintResources A[IMMUTABLE_TYPE, THIS]), (r3v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0017 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\lMETHOD_OVERRIDE: [ClspMth\{android.content.res.Resources.getDrawable(int):android.graphics.drawable.Drawable throws android.content.res.Resources$NotFoundException\}]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_13 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

