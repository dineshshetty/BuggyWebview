digraph "CFG forandroidx.appcompat.widget.VectorEnabledTintResources.openRawResource(ILandroid\/util\/TypedValue;)Ljava\/io\/InputStream;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000}"];
Node_7 [shape=record,label="{7\:\ 0x0004|RETURN\l|return super.openRawResource(r1, r2)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ java.io.InputStream androidx.appcompat.widget.VectorEnabledTintResources.openRawResource((r0v0 'this' androidx.appcompat.widget.VectorEnabledTintResources A[IMMUTABLE_TYPE, THIS]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 android.util.TypedValue A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Landroid\/content\/res\/Resources$NotFoundException;]\lMETHOD_OVERRIDE: [ClspMth\{android.content.res.Resources.openRawResource(int, android.util.TypedValue):java.io.InputStream throws android.content.res.Resources$NotFoundException\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

