digraph "CFG forandroidx.appcompat.widget.AbsActionBarView.onTouchEvent(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = r5.getActionMasked()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r0 != 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|r4.mEatingTouch = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (r4.mEatingTouch != false) goto L10\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|boolean r2 = super.onTouchEvent(r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|if (r0 != 0) goto L10\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|if (r2 != false) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|r4.mEatingTouch = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|if (r0 == 1) goto L15\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a}"];
Node_13 [shape=record,label="{13\:\ 0x001b|if (r0 != 3) goto L13\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|RETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|r4.mEatingTouch = false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.AbsActionBarView.onTouchEvent((r4v0 'this' androidx.appcompat.widget.AbsActionBarView A[IMMUTABLE_TYPE, THIS]), (r5v0 'ev' android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x001b \-\> B:15:0x001f, CROSS_EDGE: B:11:0x0018 \-\> B:14:0x001d, CROSS_EDGE: B:9:0x0014 \-\> B:11:0x0018, CROSS_EDGE: B:8:0x0012 \-\> B:11:0x0018, CROSS_EDGE: B:6:0x000c \-\> B:11:0x0018, CROSS_EDGE: B:3:0x0005 \-\> B:5:0x0009\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onTouchEvent(android.view.MotionEvent):boolean\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_1;
Node_14 -> Node_15;
}

