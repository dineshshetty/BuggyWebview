digraph "CFG forandroidx.appcompat.widget.AbsActionBarView.setVisibility(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r1 I:androidx.appcompat.widget.AbsActionBarView) type: VIRTUAL call: androidx.appcompat.widget.AbsActionBarView.getVisibility():int A[MD:():int (s)] (LINE:187)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibility' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r1 I:androidx.appcompat.widget.AbsActionBarView) androidx.appcompat.widget.AbsActionBarView.mVisibilityAnim androidx.core.view.ViewPropertyAnimatorCompat  (LINE:188)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000d \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) type: VIRTUAL call: androidx.core.view.ViewPropertyAnimatorCompat.cancel():void A[MD:():void (m)] (LINE:189)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: INVOKE  (r1 I:android.view.ViewGroup), (r2 I:int A[D('visibility' int)]) type: SUPER call: android.view.ViewGroup.setVisibility(int):void A[MD:(int):void (c)] (LINE:191)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|RETURN\lORIG_RETURN\l|0x0010: RETURN    (LINE:193)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN   A[SYNTHETIC] (LINE:193)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AbsActionBarView.setVisibility((r1 'this' I:androidx.appcompat.widget.AbsActionBarView A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:5:0x0008 \-\> B:7:0x000d, CROSS_EDGE: B:3:0x0004 \-\> B:8:0x0010\lDebug Info:\l  \-1 \-0x0010: r2 'visibility' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

