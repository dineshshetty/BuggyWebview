digraph "CFG forandroidx.appcompat.widget.AbsActionBarView.positionChild(Landroid\/view\/View;IIIZ)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:262)\l0x0004: INVOKE  (r1 I:int) = (r6 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:263)\l0x0008: ARITH  (r2 I:int) = (r9 I:int A[D('contentHeight' int)]) \- (r1 I:int A[D('childHeight' int)])  (LINE:264)\l0x000a: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x000c: ARITH  (r2 I:int) = (r2 I:int) + (r8 I:int A[D('y' int)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reverse' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017  (LINE:266)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: ARITH  (r3 I:int) = (r7 I:int A[D('x' int)]) \- (r0 I:int A[D('childWidth' int)])  (LINE:267)\l0x0011: ARITH  (r4 I:int) = (r2 I:int A[D('childTop' int)]) + (r1 I:int A[D('childHeight' int)]) \l0x0013: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r3 I:int)\l  (r2 I:int A[D('childTop' int)])\l  (r7 I:int A[D('x' int)])\l  (r4 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reverse' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022  (LINE:272)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: NEG  (r3 I:int) = (r0 I:int A[D('childWidth' int)]) \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN  (r3 I:int) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childWidth' int)]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN  (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: ARITH  (r3 I:int) = (r7 I:int A[D('x' int)]) + (r0 I:int A[D('childWidth' int)])  (LINE:269)\l0x0019: ARITH  (r4 I:int) = (r2 I:int A[D('childTop' int)]) + (r1 I:int A[D('childHeight' int)]) \l0x001b: INVOKE  \l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r7 I:int A[D('x' int)])\l  (r2 I:int A[D('childTop' int)])\l  (r3 I:int)\l  (r4 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
MethodNode[shape=record,label="{protected int androidx.appcompat.widget.AbsActionBarView.positionChild((r5 'this' I:androidx.appcompat.widget.AbsActionBarView A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('contentHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('reverse' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0022 \-\> B:9:0x0023, CROSS_EDGE: B:5:0x0017 \-\> B:6:0x001e\lDebug Info:\l  0x0004\-0x0023: r0 'childWidth' I\l  0x0008\-0x0023: r1 'childHeight' I\l  0x000d\-0x0023: r2 'childTop' I\l  \-1 \-0x0023: r6 'child' Landroid\/view\/View;\l  \-1 \-0x0023: r7 'x' I\l  \-1 \-0x0023: r8 'y' I\l  \-1 \-0x0023: r9 'contentHeight' I\l  \-1 \-0x0023: r10 'reverse' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_5 -> Node_6;
}

