digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Impl.isHorizontallyScrollable(Landroid\/widget\/TextView;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:117)\l0x0001: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"getHorizontallyScrolling\" \l0x0007: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.lang.Object A[D('textView' android.widget.TextView)]), (r1 I:java.lang.String), (r0 I:java.lang.Object) type: STATIC call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.invokeAndReturnWithDefault(java.lang.Object, java.lang.String, java.lang.Object):java.lang.Object A[MD:\<T\>:(java.lang.Object, java.lang.String, T):T (m)]\l0x000b: CHECK_CAST (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|0x0011: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Impl.isHorizontallyScrollable((r2 'this' I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl A[IMMUTABLE_TYPE, THIS]), (r3 I:android.widget.TextView A[D('textView' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0011: r3 'textView' Landroid\/widget\/TextView;\lMETHOD_OVERRIDE: [androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Impl.isHorizontallyScrollable(android.widget.TextView):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

