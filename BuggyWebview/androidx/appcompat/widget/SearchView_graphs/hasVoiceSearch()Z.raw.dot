digraph "CFG forandroidx.appcompat.widget.SearchView.hasVoiceSearch()Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:android.app.SearchableInfo) = (r4 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchable android.app.SearchableInfo  (LINE:904)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0035 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|0x0005: INVOKE  (r0 I:boolean) = (r0 I:android.app.SearchableInfo) type: VIRTUAL call: android.app.SearchableInfo.getVoiceSearchEnabled():boolean A[MD:():boolean (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0035 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:905)\l0x000c: IGET  (r2 I:android.app.SearchableInfo) = (r4 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchable android.app.SearchableInfo  (LINE:906)\l0x000e: INVOKE  (r2 I:boolean) = (r2 I:android.app.SearchableInfo) type: VIRTUAL call: android.app.SearchableInfo.getVoiceSearchLaunchWebSearch():boolean A[MD:():boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0017 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|0x0014: IGET  (r0 I:android.content.Intent A[D('testIntent' android.content.Intent)]) = (r4 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mVoiceWebSearchIntent android.content.Intent  (LINE:907)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('testIntent' android.content.Intent)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0035  (LINE:911)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: INVOKE  (r2 I:android.content.Context) = (r4 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.getContext():android.content.Context A[MD:():android.content.Context (s)] (LINE:912)\l0x0027: INVOKE  (r2 I:android.content.pm.PackageManager) = (r2 I:android.content.Context) type: VIRTUAL call: android.content.Context.getPackageManager():android.content.pm.PackageManager A[MD:():android.content.pm.PackageManager (c)]\l0x002b: CONST  (r3 I:??[int, float, short, byte, char]) = (65536(0x10000, float:9.1835E\-41) ??[int, float, short, byte, char]) \l0x002d: INVOKE  (r2 I:android.content.pm.ResolveInfo) = \l  (r2 I:android.content.pm.PackageManager)\l  (r0 I:android.content.Intent A[D('testIntent' android.content.Intent)])\l  (r3 I:int)\l type: VIRTUAL call: android.content.pm.PackageManager.resolveActivity(android.content.Intent, int):android.content.pm.ResolveInfo A[MD:(android.content.Intent, int):android.content.pm.ResolveInfo (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0031|0x0031: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ri' android.content.pm.ResolveInfo)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:?  (LINE:914)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|RETURN\lORIG_RETURN\l|0x0033: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0034: RETURN  (r1 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0034: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: IGET  (r2 I:android.app.SearchableInfo) = (r4 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchable android.app.SearchableInfo  (LINE:908)\l0x0019: INVOKE  (r2 I:boolean) = (r2 I:android.app.SearchableInfo) type: VIRTUAL call: android.app.SearchableInfo.getVoiceSearchLaunchRecognizer():boolean A[MD:():boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0021 \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: IGET  (r0 I:android.content.Intent A[D('testIntent' android.content.Intent)]) = (r4 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mVoiceAppSearchIntent android.content.Intent  (LINE:909)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|RETURN\l|0x0035: RETURN  (r1 I:boolean)  (LINE:917)\l}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.widget.SearchView.hasVoiceSearch((r4 'this' I:androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0031 \-\> B:35:0x0034, CROSS_EDGE: B:36:0x0035 \-\> B:20:?, CROSS_EDGE: B:30:0x001f \-\> B:31:0x0021, CROSS_EDGE: B:29:0x001d \-\> B:31:0x0021, CROSS_EDGE: B:24:0x0009 \-\> B:36:0x0035, CROSS_EDGE: B:22:0x0003 \-\> B:36:0x0035\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0035: r0 'testIntent' Landroid\/content\/Intent;\l  0x0031\-0x0035: r2 'ri' Landroid\/content\/pm\/ResolveInfo;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_36;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_36;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_36 -> Node_20;
}

