digraph "CFG forandroidx.appcompat.widget.SearchView.onMeasure(II)V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0004|if (isIconified() == false) goto L6\l}"];
Node_32 [shape=record,label="{32\:\ 0x0006|super.onMeasure(r7, r8)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x000a|int r0 = android.view.View.MeasureSpec.getMode(r7)\lint r1 = android.view.View.MeasureSpec.getSize(r7)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|switch(r0) \{\l    case \-2147483648: goto L15;\l    case 0: goto L11;\l    case 1073741824: goto L8;\l    default: goto L19;\l\}\l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|int r2 = r6.mMaxWidth\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|if (r2 \<= 0) goto L19\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|int r1 = java.lang.Math.min(r2, r1)\l}"];
Node_40 [shape=record,label="{40\:\ 0x001f|int r2 = r6.mMaxWidth\l}"];
Node_41 [shape=record,label="{41\:\ 0x0021|if (r2 \<= 0) goto L13\l}"];
Node_43 [shape=record,label="{43\:\ 0x0024|int r2 = getPreferredWidth()\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|PHI: r2 \l  PHI: (r2v5 int) = (r2v4 int), (r2v6 int) binds: [B:41:0x0021, B:43:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r2\l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|int r2 = r6.mMaxWidth\l}"];
Node_46 [shape=record,label="{46\:\ 0x002c|if (r2 \<= 0) goto L18\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|int r1 = java.lang.Math.min(r2, r1)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|int r1 = java.lang.Math.min(getPreferredWidth(), r1)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|PHI: r1 \l  PHI: (r1v1 'width' int) = (r1v0 'width' int), (r1v2 'width' int), (r1v3 'width' int), (r1v4 'width' int), (r1v0 'width' int), (r1v5 'width' int) binds: [B:35:0x0012, B:48:0x0033, B:47:0x002e, B:44:0x0028, B:38:0x0018, B:39:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = android.view.View.MeasureSpec.getMode(r8)\lint r3 = android.view.View.MeasureSpec.getSize(r8)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0046|switch(r2) \{\l    case \-2147483648: goto L22;\l    case 0: goto L21;\l    default: goto L23;\l\}\l}"];
Node_52 [shape=record,label="{52\:\ 0x004a|int r3 = getPreferredHeight()\l}"];
Node_53 [shape=record,label="{53\:\ 0x004f|int r3 = java.lang.Math.min(getPreferredHeight(), r3)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0058|PHI: r3 \l  PHI: (r3v1 'height' int) = (r3v0 'height' int), (r3v2 'height' int), (r3v3 'height' int) binds: [B:50:0x0046, B:53:0x004f, B:52:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|super.onMeasure(android.view.View.MeasureSpec.makeMeasureSpec(r1, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY), android.view.View.MeasureSpec.makeMeasureSpec(r3, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY))\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SearchView.onMeasure((r6v0 'this' androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r7v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:55:0x0065 \-\> B:29:?, CROSS_EDGE: B:53:0x004f \-\> B:54:0x0058, CROSS_EDGE: B:50:0x0046 \-\> B:54:0x0058, CROSS_EDGE: B:38:0x0018 \-\> B:49:0x003c, CROSS_EDGE: B:44:0x0028 \-\> B:49:0x003c, CROSS_EDGE: B:41:0x0021 \-\> B:44:0x0028, CROSS_EDGE: B:47:0x002e \-\> B:49:0x003c, CROSS_EDGE: B:48:0x0033 \-\> B:49:0x003c, CROSS_EDGE: B:35:0x0012 \-\> B:49:0x003c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_29;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_40;
Node_35 -> Node_45;
Node_35 -> Node_49;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_49;
Node_39 -> Node_49;
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_44[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_53;
Node_50 -> Node_54;
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_29;
}

