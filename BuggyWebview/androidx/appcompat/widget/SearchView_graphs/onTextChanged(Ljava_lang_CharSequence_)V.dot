digraph "CFG forandroidx.appcompat.widget.SearchView.onTextChanged(Ljava\/lang\/CharSequence;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.text.Editable r0 = r4.mSearchSrcTextView.getText()\lr4.mUserQuery = r0\lr2 = true\lr1 = android.text.TextUtils.isEmpty(r0) ^ true\lupdateSubmitButton(r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|if (r1 != false) goto L3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|r2 = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v7 boolean) binds: [B:16:0x0011, B:18:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|updateVoiceButton(r2)\lupdateCloseButton()\lupdateSubmitArea()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|if (r4.mOnQueryChangeListener == null) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022}"];
Node_22 [shape=record,label="{22\:\ 0x0028|if (android.text.TextUtils.equals(r5, r4.mOldQueryText) != false) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|r4.mOnQueryChangeListener.onQueryTextChange(r5.toString())\l}"];
Node_24 [shape=record,label="{24\:\ 0x0033|r4.mOldQueryText = r5.toString()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0039|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.SearchView.onTextChanged((r4v0 'this' androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r5v0 'newText' java.lang.CharSequence A[D('newText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0028 \-\> B:24:0x0033, CROSS_EDGE: B:20:0x0020 \-\> B:24:0x0033, CROSS_EDGE: B:16:0x0011 \-\> B:19:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

