digraph "CFG forandroidx.appcompat.widget.SearchView.onMeasure(II)V" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.isIconified():boolean A[MD:():boolean (m)] (LINE:794)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x000a \l}"];
Node_32 [shape=record,label="{32\:\ 0x0006|0x0006: INVOKE  \l  (r6 I:androidx.appcompat.widget.LinearLayoutCompat)\l  (r7 I:int A[D('widthMeasureSpec' int)])\l  (r8 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: androidx.appcompat.widget.LinearLayoutCompat.onMeasure(int, int):void A[MD:(int, int):void (m)] (LINE:795)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:796)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r7 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:799)\l0x000e: INVOKE  (r1 I:int) = (r7 I:int A[D('widthMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:800)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|0x0012: SWITCH  (r0 I:?? A[D('widthMode' int)])\l case \-2147483648: goto B:45:0x002a\l case 0: goto B:40:0x001f\l case 1073741824: goto B:37:0x0016\l default: goto B:49:0x003c  (LINE:802)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|0x0016: IGET  (r2 I:int) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mMaxWidth int  (LINE:813)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0018|0x0018: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:49:0x003c \l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|0x001a: INVOKE  (r1 I:int A[D('width' int)]) = (r2 I:int), (r1 I:int A[D('width' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:814)\l}"];
Node_40 [shape=record,label="{40\:\ 0x001f|0x001f: IGET  (r2 I:int) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mMaxWidth int  (LINE:819)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0021|0x0021: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:43:0x0024 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0024|0x0024: INVOKE  (r2 I:int) = (r6 I:androidx.appcompat.widget.SearchView) type: DIRECT call: androidx.appcompat.widget.SearchView.getPreferredWidth():int A[MD:():int (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0028|0x0028: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|0x002a: IGET  (r2 I:int) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mMaxWidth int  (LINE:805)\l}"];
Node_46 [shape=record,label="{46\:\ 0x002c|0x002c: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:48:0x0033 \l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|0x002e: INVOKE  (r1 I:int A[D('width' int)]) = (r2 I:int), (r1 I:int A[D('width' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:806)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0033|0x0033: INVOKE  (r2 I:int) = (r6 I:androidx.appcompat.widget.SearchView) type: DIRECT call: androidx.appcompat.widget.SearchView.getPreferredWidth():int A[MD:():int (m)] (LINE:808)\l0x0037: INVOKE  (r1 I:int A[D('width' int)]) = (r2 I:int), (r1 I:int A[D('width' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|0x003c: CONST  (r0 I:??[int, float, short, byte, char] A[D('widthMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:822)\l0x003e: INVOKE  (r2 I:int) = (r8 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getMode(int):int A[MD:(int):int (c)] (LINE:824)\l0x0042: INVOKE  (r3 I:int) = (r8 I:int A[D('heightMeasureSpec' int)]) type: STATIC call: android.view.View.MeasureSpec.getSize(int):int A[MD:(int):int (c)] (LINE:825)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0046|0x0046: SWITCH  (r2 I:?? A[D('heightMode' int)])\l case \-2147483648: goto B:53:0x004f\l case 0: goto B:52:0x004a\l default: goto B:54:0x0058  (LINE:827)\l}"];
Node_52 [shape=record,label="{52\:\ 0x004a|0x004a: INVOKE  (r3 I:int A[D('height' int)]) = (r6 I:androidx.appcompat.widget.SearchView) type: DIRECT call: androidx.appcompat.widget.SearchView.getPreferredHeight():int A[MD:():int (m)] (LINE:832)\l}"];
Node_53 [shape=record,label="{53\:\ 0x004f|0x004f: INVOKE  (r4 I:int) = (r6 I:androidx.appcompat.widget.SearchView) type: DIRECT call: androidx.appcompat.widget.SearchView.getPreferredHeight():int A[MD:():int (m)] (LINE:829)\l0x0053: INVOKE  (r3 I:int A[D('height' int)]) = (r4 I:int), (r3 I:int A[D('height' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0058|0x0058: CONST  (r2 I:??[int, float, short, byte, char] A[D('heightMode' int)]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:835)\l0x005a: INVOKE  (r4 I:int) = (r1 I:int A[D('width' int)]), (r0 I:int A[D('widthMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:837)\l0x005e: INVOKE  (r5 I:int) = (r3 I:int A[D('height' int)]), (r2 I:int A[D('heightMode' int)]) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)] (LINE:838)\l0x0062: INVOKE  (r6 I:androidx.appcompat.widget.LinearLayoutCompat), (r4 I:int), (r5 I:int) type: SUPER call: androidx.appcompat.widget.LinearLayoutCompat.onMeasure(int, int):void A[MD:(int, int):void (m)] (LINE:837)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0065|RETURN\l|0x0065: RETURN    (LINE:839)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SearchView.onMeasure((r6 'this' I:androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:55:0x0065 \-\> B:29:?, CROSS_EDGE: B:53:0x004f \-\> B:54:0x0058, CROSS_EDGE: B:50:0x0046 \-\> B:54:0x0058, CROSS_EDGE: B:38:0x0018 \-\> B:49:0x003c, CROSS_EDGE: B:44:0x0028 \-\> B:49:0x003c, CROSS_EDGE: B:41:0x0021 \-\> B:44:0x0028, CROSS_EDGE: B:47:0x002e \-\> B:49:0x003c, CROSS_EDGE: B:48:0x0033 \-\> B:49:0x003c, CROSS_EDGE: B:35:0x0012 \-\> B:49:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x007d: r0 'widthMode' I\l  0x0012\-0x007d: r1 'width' I\l  0x0042\-0x007d: r2 'heightMode' I\l  0x0046\-0x007d: r3 'height' I\l  \-1 \-0x007d: r7 'widthMeasureSpec' I\l  \-1 \-0x007d: r8 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_29;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_40;
Node_35 -> Node_45;
Node_35 -> Node_49;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_49;
Node_39 -> Node_49;
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_44[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_53;
Node_50 -> Node_54;
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_29;
}

