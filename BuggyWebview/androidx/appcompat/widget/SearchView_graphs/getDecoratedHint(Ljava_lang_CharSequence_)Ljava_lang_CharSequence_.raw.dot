digraph "CFG forandroidx.appcompat.widget.SearchView.getDecoratedHint(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mIconifiedByDefault boolean  (LINE:1104)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0034 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.drawable.Drawable) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchHintIcon android.graphics.drawable.Drawable \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0009 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|0x0009: IGET  (r0 I:androidx.appcompat.widget.SearchView$SearchAutoComplete) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchSrcTextView androidx.appcompat.widget.SearchView$SearchAutoComplete  (LINE:1108)\l0x000b: INVOKE  (r0 I:float) = (r0 I:androidx.appcompat.widget.SearchView$SearchAutoComplete) type: VIRTUAL call: androidx.appcompat.widget.SearchView.SearchAutoComplete.getTextSize():float A[MD:():float (s)]\l0x000f: CAST (r0 I:double) = (double) (r0 I:float) \l0x0010: CONST  (r2 I:??[long, double]) = (4608308318706860032(0x3ff4000000000000, double:1.25) ??[long, double]) \l0x0012: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0014: CAST (r0 I:int) = (int) (r0 I:double) \l0x0015: IGET  (r1 I:android.graphics.drawable.Drawable) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchHintIcon android.graphics.drawable.Drawable  (LINE:1109)\l0x0017: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r2 I:int)\l  (r2 I:int)\l  (r0 I:int A[D('textSize' int)])\l  (r0 I:int A[D('textSize' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x001b: NEW_INSTANCE  (r1 I:android.text.SpannableStringBuilder) =  android.text.SpannableStringBuilder  (LINE:1111)\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"   \" \l0x001f: INVOKE  (r1 I:android.text.SpannableStringBuilder), (r2 I:java.lang.CharSequence) type: DIRECT call: android.text.SpannableStringBuilder.\<init\>(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x0022: NEW_INSTANCE  (r2 I:android.text.style.ImageSpan) =  android.text.style.ImageSpan  (LINE:1112)\l0x0024: IGET  (r3 I:android.graphics.drawable.Drawable) = (r6 I:androidx.appcompat.widget.SearchView) androidx.appcompat.widget.SearchView.mSearchHintIcon android.graphics.drawable.Drawable \l0x0026: INVOKE  (r2 I:android.text.style.ImageSpan), (r3 I:android.graphics.drawable.Drawable) type: DIRECT call: android.text.style.ImageSpan.\<init\>(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (c)]\l0x0029: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002a: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x002b: CONST  (r5 I:??[int, float, short, byte, char]) = (33 ??[int, float, short, byte, char]) \l0x002d: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder A[D('ssb' android.text.SpannableStringBuilder)])\l  (r2 I:java.lang.Object)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l type: VIRTUAL call: android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void A[MD:(java.lang.Object, int, int, int):void (c)]\l0x0030: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder A[D('ssb' android.text.SpannableStringBuilder)])\l  (r7 I:java.lang.CharSequence A[D('hintText' java.lang.CharSequence)])\l type: VIRTUAL call: android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder A[MD:(java.lang.CharSequence):android.text.SpannableStringBuilder (c)] (LINE:1113)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|RETURN\l|0x0033: RETURN  (r1 I:java.lang.CharSequence A[D('ssb' android.text.SpannableStringBuilder)])  (LINE:1114)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|RETURN\l|0x0034: RETURN  (r7 I:java.lang.CharSequence A[D('hintText' java.lang.CharSequence)])  (LINE:1105)\l}"];
MethodNode[shape=record,label="{private java.lang.CharSequence androidx.appcompat.widget.SearchView.getDecoratedHint((r6 'this' I:androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.CharSequence A[D('hintText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0034 \-\> B:11:?, CROSS_EDGE: B:13:0x0002 \-\> B:19:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x0034: r0 'textSize' I\l  0x0022\-0x0034: r1 'ssb' Landroid\/text\/SpannableStringBuilder;\l  \-1 \-0x0034: r7 'hintText' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

