digraph "CFG forandroidx.appcompat.widget.SearchView.launchIntent(Landroid\/content\/Intent;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('intent' android.content.Intent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0003  (LINE:1510)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|RETURN\l|0x0002: RETURN    (LINE:1511)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{RuntimeException \-\> 0x000b, blocks: (B:16:0x0003), top: B:21:0x0003 \}\lCatch: RuntimeException \-\> 0x000b\l|0x0003: INVOKE  (r0 I:android.content.Context) = (r3 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.getContext():android.content.Context A[Catch: RuntimeException \-\> 0x000b, MD:():android.content.Context (s), TRY_ENTER] (LINE:1516)\l0x0007: INVOKE  (r0 I:android.content.Context), (r4 I:android.content.Intent A[D('intent' android.content.Intent)]) type: VIRTUAL call: android.content.Context.startActivity(android.content.Intent):void A[Catch: RuntimeException \-\> 0x000b, MD:(android.content.Intent):void (c), TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:1520)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|ExcHandler: RuntimeException \-\> 0x000b\l|0x000b: MOVE_EXCEPTION  (r0 I:java.lang.RuntimeException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: RuntimeException \-\> 0x000b] (LINE:1517)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1518)\l0x000e: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"Failed launch activity: \" \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0016: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.Object A[D('intent' android.content.Intent)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \"SearchView\" \l0x001f: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String), (r0 I:java.lang.Throwable A[D('ex' java.lang.RuntimeException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:1520)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.SearchView.launchIntent((r3 'this' I:androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0022 \-\> B:13:?, CROSS_EDGE: B:19:0x000c \-\> B:20:0x0022, CROSS_EDGE: B:21:0x0003 \-\> B:18:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0022: r0 'ex' Ljava\/lang\/RuntimeException;\l  \-1 \-0x0022: r4 'intent' Landroid\/content\/Intent;\lTryCatch #0 \{RuntimeException \-\> 0x000b, blocks: (B:16:0x0003), top: B:21:0x0003 \}\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_13;
Node_21 -> Node_16;
Node_21 -> Node_18;
Node_16 -> Node_22;
Node_16 -> Node_23;
Node_22 -> Node_18;
Node_23 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_13;
}

