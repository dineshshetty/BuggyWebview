digraph "CFG forandroidx.appcompat.widget.SearchView.requestFocus(ILandroid\/graphics\/Rect;)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0003|if (r2.mClearingFocus == false) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if (isFocusable() != false) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|RETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ 0x000d}"];
Node_25 [shape=record,label="{25\:\ 0x0011|if (isIconified() != false) goto L14\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|boolean r0 = r2.mSearchSrcTextView.requestFocus(r3, r4)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|if (r0 == false) goto L13\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|updateViewsVisibility(false)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|RETURN\l|return r0\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f}"];
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\l|return super.requestFocus(r3, r4)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.SearchView.requestFocus((r2v0 'this' androidx.appcompat.widget.SearchView A[IMMUTABLE_TYPE, THIS]), (r3v0 'direction' int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'previouslyFocusedRect' android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x000c \-\> B:17:?, CROSS_EDGE: B:29:0x001e \-\> B:17:?, CROSS_EDGE: B:27:0x0019 \-\> B:29:0x001e, CROSS_EDGE: B:31:0x0023 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.requestFocus(int, android.graphics.Rect):boolean\}]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_17;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

