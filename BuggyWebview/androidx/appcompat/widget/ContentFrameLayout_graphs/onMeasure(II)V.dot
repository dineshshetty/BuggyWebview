digraph "CFG forandroidx.appcompat.widget.ContentFrameLayout.onMeasure(II)V" {
Node_60 [shape=record,label="{60\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_62 [shape=record,label="{62\:\ 0x0000|android.util.DisplayMetrics r0 = getContext().getResources().getDisplayMetrics()\l}"];
Node_63 [shape=record,label="{63\:\ 0x0010|if (r0.widthPixels \>= r0.heightPixels) goto L59\l}"];
Node_64 [shape=record,label="{64\:\ 0x0012|r1 = true\l}"];
Node_66 [shape=record,label="{66\:\ 0x0015|PHI: r1 \l  PHI: (r1v2 'isPortrait' boolean) = (r1v1 'isPortrait' boolean), (r1v3 'isPortrait' boolean) binds: [B:65:0x0014, B:64:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = android.view.View.MeasureSpec.getMode(r14)\lint r3 = android.view.View.MeasureSpec.getMode(r15)\lr4 = false\l}"];
Node_67 [shape=record,label="{67\:\ 0x0024|if (r2 != Integer.MIN_VALUE) goto L20\l}"];
Node_68 [shape=record,label="{68\:\ 0x0026|if (r1 == false) goto L19\l}"];
Node_69 [shape=record,label="{69\:\ 0x0028|android.util.TypedValue r9 = r13.mFixedWidthMinor\l}"];
Node_71 [shape=record,label="{71\:\ 0x002d|PHI: r9 \l  PHI: (r9v5 'tvw' android.util.TypedValue) = (r9v4 'tvw' android.util.TypedValue), (r9v6 'tvw' android.util.TypedValue) binds: [B:70:0x002b, B:69:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == null) goto L20\l}"];
Node_72 [shape=record,label="{72\:\ 0x002f}"];
Node_73 [shape=record,label="{73\:\ 0x0031|if (r9.type == 0) goto L20\l}"];
Node_74 [shape=record,label="{74\:\ 0x0033|r10 = 0\l}"];
Node_75 [shape=record,label="{75\:\ 0x0036|if (r9.type != 5) goto L16\l}"];
Node_76 [shape=record,label="{76\:\ 0x0038|int r10 = (int) r9.getDimension(r0)\l}"];
Node_80 [shape=record,label="{80\:\ 0x004d|PHI: r10 \l  PHI: (r10v12 'w' int) = (r10v10 'w' int), (r10v11 'w' int), (r10v14 'w' int) binds: [B:78:0x0040, B:79:0x0042, B:76:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 \<= 0) goto L20\l}"];
Node_81 [shape=record,label="{81\:\ 0x004f|int r10 = r10 \- (r13.mDecorPadding.left + r13.mDecorPadding.right)\lint r11 = android.view.View.MeasureSpec.getSize(r14)\lint r14 = android.view.View.MeasureSpec.makeMeasureSpec(java.lang.Math.min(r10, r11), androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr4 = true\l}"];
Node_77 [shape=record,label="{77\:\ 0x003e}"];
Node_78 [shape=record,label="{78\:\ 0x0040|if (r9.type != 6) goto L14\l}"];
Node_79 [shape=record,label="{79\:\ 0x0042|int r10 = (int) r9.getFraction((float) r0.widthPixels, (float) r0.widthPixels)\l}"];
Node_70 [shape=record,label="{70\:\ 0x002b|android.util.TypedValue r9 = r13.mFixedWidthMajor\l}"];
Node_82 [shape=record,label="{82\:\ 0x0067|PHI: r4 r14 \l  PHI: (r4v1 'fixedWidth' boolean) = (r4v0 'fixedWidth' boolean), (r4v0 'fixedWidth' boolean), (r4v0 'fixedWidth' boolean), (r4v0 'fixedWidth' boolean), (r4v2 'fixedWidth' boolean) binds: [B:67:0x0024, B:71:0x002d, B:73:0x0031, B:80:0x004d, B:81:0x004f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'widthMeasureSpec' int) = (r14v0 'widthMeasureSpec' int), (r14v0 'widthMeasureSpec' int), (r14v0 'widthMeasureSpec' int), (r14v0 'widthMeasureSpec' int), (r14v5 'widthMeasureSpec' int) binds: [B:67:0x0024, B:71:0x002d, B:73:0x0031, B:80:0x004d, B:81:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != Integer.MIN_VALUE) goto L35\l}"];
Node_83 [shape=record,label="{83\:\ 0x0069|if (r1 == false) goto L34\l}"];
Node_84 [shape=record,label="{84\:\ 0x006b|android.util.TypedValue r9 = r13.mFixedHeightMajor\l}"];
Node_86 [shape=record,label="{86\:\ 0x0070|PHI: r9 \l  PHI: (r9v2 'tvh' android.util.TypedValue) = (r9v1 'tvh' android.util.TypedValue), (r9v3 'tvh' android.util.TypedValue) binds: [B:85:0x006e, B:84:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == null) goto L35\l}"];
Node_87 [shape=record,label="{87\:\ 0x0072}"];
Node_88 [shape=record,label="{88\:\ 0x0074|if (r9.type == 0) goto L35\l}"];
Node_89 [shape=record,label="{89\:\ 0x0076|r10 = 0\l}"];
Node_90 [shape=record,label="{90\:\ 0x0079|if (r9.type != 5) goto L31\l}"];
Node_91 [shape=record,label="{91\:\ 0x007b|int r10 = (int) r9.getDimension(r0)\l}"];
Node_95 [shape=record,label="{95\:\ 0x0090|PHI: r10 \l  PHI: (r10v6 'h' int) = (r10v4 'h' int), (r10v5 'h' int), (r10v8 'h' int) binds: [B:93:0x0083, B:94:0x0085, B:91:0x007b] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 \<= 0) goto L35\l}"];
Node_96 [shape=record,label="{96\:\ 0x0092|int r10 = r10 \- (r13.mDecorPadding.top + r13.mDecorPadding.bottom)\lint r11 = android.view.View.MeasureSpec.getSize(r15)\lint r15 = android.view.View.MeasureSpec.makeMeasureSpec(java.lang.Math.min(r10, r11), androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\l}"];
Node_92 [shape=record,label="{92\:\ 0x0081}"];
Node_93 [shape=record,label="{93\:\ 0x0083|if (r9.type != 6) goto L29\l}"];
Node_94 [shape=record,label="{94\:\ 0x0085|int r10 = (int) r9.getFraction((float) r0.heightPixels, (float) r0.heightPixels)\l}"];
Node_85 [shape=record,label="{85\:\ 0x006e|android.util.TypedValue r9 = r13.mFixedHeightMinor\l}"];
Node_97 [shape=record,label="{97\:\ 0x00a9|PHI: r15 \l  PHI: (r15v1 'heightMeasureSpec' int) = (r15v0 'heightMeasureSpec' int), (r15v0 'heightMeasureSpec' int), (r15v0 'heightMeasureSpec' int), (r15v0 'heightMeasureSpec' int), (r15v2 'heightMeasureSpec' int) binds: [B:82:0x0067, B:86:0x0070, B:88:0x0074, B:95:0x0090, B:96:0x0092] A[DONT_GENERATE, DONT_INLINE]\l|super.onMeasure(r14, r15)\lint r9 = getMeasuredWidth()\lr10 = false\lint r14 = android.view.View.MeasureSpec.makeMeasureSpec(r9, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\l}"];
Node_98 [shape=record,label="{98\:\ 0x00b5|if (r4 != false) goto L54\l}"];
Node_99 [shape=record,label="{99\:\ 0x00b7|if (r2 != Integer.MIN_VALUE) goto L54\l}"];
Node_100 [shape=record,label="{100\:\ 0x00b9|if (r1 == false) goto L53\l}"];
Node_101 [shape=record,label="{101\:\ 0x00bb|android.util.TypedValue r7 = r13.mMinWidthMinor\l}"];
Node_103 [shape=record,label="{103\:\ 0x00c0|PHI: r7 \l  PHI: (r7v2 'tv' android.util.TypedValue) = (r7v1 'tv' android.util.TypedValue), (r7v3 'tv' android.util.TypedValue) binds: [B:102:0x00be, B:101:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L54\l}"];
Node_104 [shape=record,label="{104\:\ 0x00c2}"];
Node_105 [shape=record,label="{105\:\ 0x00c4|if (r7.type == 0) goto L54\l}"];
Node_106 [shape=record,label="{106\:\ 0x00c6|r11 = 0\l}"];
Node_107 [shape=record,label="{107\:\ 0x00c9|if (r7.type != 5) goto L50\l}"];
Node_108 [shape=record,label="{108\:\ 0x00cb|int r11 = (int) r7.getDimension(r0)\l}"];
Node_112 [shape=record,label="{112\:\ 0x00e0|PHI: r11 \l  PHI: (r11v3 'min' int) = (r11v1 'min' int), (r11v2 'min' int), (r11v6 'min' int) binds: [B:110:0x00d3, B:111:0x00d5, B:108:0x00cb] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 \<= 0) goto L48\l}"];
Node_113 [shape=record,label="{113\:\ 0x00e2|int r11 = r11 \- (r13.mDecorPadding.left + r13.mDecorPadding.right)\l}"];
Node_114 [shape=record,label="{114\:\ 0x00ec|PHI: r11 \l  PHI: (r11v4 'min' int) = (r11v3 'min' int), (r11v5 'min' int) binds: [B:112:0x00e0, B:113:0x00e2] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \>= r11) goto L54\l}"];
Node_115 [shape=record,label="{115\:\ 0x00ee|int r14 = android.view.View.MeasureSpec.makeMeasureSpec(r11, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr10 = true\l}"];
Node_109 [shape=record,label="{109\:\ 0x00d1}"];
Node_110 [shape=record,label="{110\:\ 0x00d3|if (r7.type != 6) goto L46\l}"];
Node_111 [shape=record,label="{111\:\ 0x00d5|int r11 = (int) r7.getFraction((float) r0.widthPixels, (float) r0.widthPixels)\l}"];
Node_102 [shape=record,label="{102\:\ 0x00be|android.util.TypedValue r7 = r13.mMinWidthMajor\l}"];
Node_116 [shape=record,label="{116\:\ 0x00f3|PHI: r10 r14 \l  PHI: (r10v1 'measure' boolean) = (r10v0 'measure' boolean), (r10v0 'measure' boolean), (r10v0 'measure' boolean), (r10v0 'measure' boolean), (r10v0 'measure' boolean), (r10v2 'measure' boolean) binds: [B:98:0x00b5, B:99:0x00b7, B:103:0x00c0, B:105:0x00c4, B:114:0x00ec, B:115:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v3 'widthMeasureSpec' int) = (r14v2 'widthMeasureSpec' int), (r14v2 'widthMeasureSpec' int), (r14v2 'widthMeasureSpec' int), (r14v2 'widthMeasureSpec' int), (r14v2 'widthMeasureSpec' int), (r14v4 'widthMeasureSpec' int) binds: [B:98:0x00b5, B:99:0x00b7, B:103:0x00c0, B:105:0x00c4, B:114:0x00ec, B:115:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == false) goto L58\l}"];
Node_117 [shape=record,label="{117\:\ 0x00f5|super.onMeasure(r14, r15)\l}"];
Node_118 [shape=record,label="{118\:\ 0x00f8|RETURN\lORIG_RETURN\l|return\l}"];
Node_61 [shape=record,label="{61\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_119 [shape=record,label="{119\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_65 [shape=record,label="{65\:\ 0x0014|r1 = false\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.ContentFrameLayout.onMeasure((r13v0 'this' androidx.appcompat.widget.ContentFrameLayout A[IMMUTABLE_TYPE, THIS]), (r14v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:116:0x00f3 \-\> B:118:0x00f8, CROSS_EDGE: B:114:0x00ec \-\> B:116:0x00f3, CROSS_EDGE: B:112:0x00e0 \-\> B:114:0x00ec, CROSS_EDGE: B:111:0x00d5 \-\> B:112:0x00e0, CROSS_EDGE: B:110:0x00d3 \-\> B:112:0x00e0, CROSS_EDGE: B:105:0x00c4 \-\> B:116:0x00f3, CROSS_EDGE: B:103:0x00c0 \-\> B:116:0x00f3, CROSS_EDGE: B:102:0x00be \-\> B:103:0x00c0, CROSS_EDGE: B:99:0x00b7 \-\> B:116:0x00f3, CROSS_EDGE: B:98:0x00b5 \-\> B:116:0x00f3, CROSS_EDGE: B:95:0x0090 \-\> B:97:0x00a9, CROSS_EDGE: B:94:0x0085 \-\> B:95:0x0090, CROSS_EDGE: B:93:0x0083 \-\> B:95:0x0090, CROSS_EDGE: B:88:0x0074 \-\> B:97:0x00a9, CROSS_EDGE: B:86:0x0070 \-\> B:97:0x00a9, CROSS_EDGE: B:85:0x006e \-\> B:86:0x0070, CROSS_EDGE: B:82:0x0067 \-\> B:97:0x00a9, CROSS_EDGE: B:80:0x004d \-\> B:82:0x0067, CROSS_EDGE: B:79:0x0042 \-\> B:80:0x004d, CROSS_EDGE: B:78:0x0040 \-\> B:80:0x004d, CROSS_EDGE: B:73:0x0031 \-\> B:82:0x0067, CROSS_EDGE: B:71:0x002d \-\> B:82:0x0067, CROSS_EDGE: B:70:0x002b \-\> B:71:0x002d, CROSS_EDGE: B:67:0x0024 \-\> B:82:0x0067, CROSS_EDGE: B:65:0x0014 \-\> B:66:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_60;Node_60 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_82;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_69 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_82;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_82;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_82;
Node_81 -> Node_82;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_70 -> Node_71;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_97;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_85;
Node_84 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_97;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_97;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_97;
Node_96 -> Node_97;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_95;
Node_85 -> Node_86;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_116;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_116;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_103;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_116;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_116;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_109;
Node_108 -> Node_112;
Node_112 -> Node_113[style=dashed];
Node_112 -> Node_114;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_116;
Node_115 -> Node_116;
Node_109 -> Node_110;
Node_110 -> Node_111[style=dashed];
Node_110 -> Node_112;
Node_111 -> Node_112;
Node_102 -> Node_103;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_119;
Node_117 -> Node_118;
Node_118 -> Node_61;
Node_119 -> Node_61;
Node_65 -> Node_66;
}

