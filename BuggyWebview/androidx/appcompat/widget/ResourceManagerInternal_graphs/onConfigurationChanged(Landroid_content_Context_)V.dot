digraph "CFG forandroidx.appcompat.widget.ResourceManagerInternal.onConfigurationChanged(Landroid\/content\/Context;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|monitor\-enter(r1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{, blocks: (B:16:0x0001, B:18:0x000b), top: B:24:0x0001 \}\lCatch: all \-\> 0x0010\l|androidx.collection.LongSparseArray r0 = r1.mDrawableCaches.get(r2)     \/\/ Catch: java.lang.Throwable \-\> L10\l}"];
Node_17 [shape=record,label="{17\:\ 0x0009|if (r0 == null) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:16:0x0001, B:18:0x000b), top: B:24:0x0001 \}\lCatch: all \-\> 0x0010\l|r0.clear()     \/\/ Catch: java.lang.Throwable \-\> L10\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|monitor\-exit(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|REMOVE\lExcHandler: all \-\> 0x0010\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public synchronized void androidx.appcompat.widget.ResourceManagerInternal.onConfigurationChanged((r1v0 'this' androidx.appcompat.widget.ResourceManagerInternal A[IMMUTABLE_TYPE, THIS]), (r2v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0012 \-\> B:14:?, CROSS_EDGE: B:17:0x0009 \-\> B:19:0x000e, CROSS_EDGE: B:24:0x0001 \-\> B:21:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_24;
Node_24 -> Node_16;
Node_24 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_25 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_14;
Node_21 -> Node_23;
Node_23 -> Node_14;
}

