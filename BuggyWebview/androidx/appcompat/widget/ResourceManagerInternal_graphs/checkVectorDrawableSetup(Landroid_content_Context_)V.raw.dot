digraph "CFG forandroidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(Landroid\/content\/Context;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mHasCheckedVectorDrawableSetup boolean  (LINE:499)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0005 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:501)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:505)\l0x0006: IPUT  (r0 I:boolean), (r3 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mHasCheckedVectorDrawableSetup boolean \l0x0008: SGET  (r0 I:int) =  androidx.appcompat.resources.R.drawable.abc_vector_test int  (LINE:506)\l0x000a: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r3 I:androidx.appcompat.widget.ResourceManagerInternal)\l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l  (r0 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('d' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0017  (LINE:507)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: INVOKE  (r1 I:boolean) = (r0 I:android.graphics.drawable.Drawable A[D('d' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.appcompat.widget.ResourceManagerInternal.isVectorDrawable(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0017 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:512)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:508)\l0x0018: IPUT  (r1 I:boolean), (r3 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mHasCheckedVectorDrawableSetup boolean \l0x001a: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:509)\l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.\" \l0x001e: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup((r3 'this' I:androidx.appcompat.widget.ResourceManagerInternal A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0016 \-\> B:13:?, CROSS_EDGE: B:23:0x0021 \-\> B:13:?, CROSS_EDGE: B:18:0x000e \-\> B:22:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0021: r0 'd' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0021: r4 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

