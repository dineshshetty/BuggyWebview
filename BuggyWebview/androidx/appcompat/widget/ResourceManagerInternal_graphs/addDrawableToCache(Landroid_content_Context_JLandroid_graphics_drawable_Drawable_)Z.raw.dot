digraph "CFG forandroidx.appcompat.widget.ResourceManagerInternal.addDrawableToCache(Landroid\/content\/Context;JLandroid\/graphics\/drawable\/Drawable;)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: MONITOR_ENTER  (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002a, blocks: (B:23:0x0001, B:25:0x0007, B:27:0x0011, B:28:0x001c), top: B:38:0x0001 \}\lCatch: all \-\> 0x002a\l|0x0001: INVOKE  (r0 I:android.graphics.drawable.Drawable$ConstantState) = (r7 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState A[Catch: all \-\> 0x002a, MD:():android.graphics.drawable.Drawable$ConstantState (c), TRY_ENTER] (LINE:341)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cs' android.graphics.drawable.Drawable$ConstantState)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0027  (LINE:342)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|TryCatch #0 \{all \-\> 0x002a, blocks: (B:23:0x0001, B:25:0x0007, B:27:0x0011, B:28:0x001c), top: B:38:0x0001 \}\lCatch: all \-\> 0x002a\l|0x0007: IGET  (r1 I:java.util.WeakHashMap\<android.content.Context, androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>\>) = (r3 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mDrawableCaches java.util.WeakHashMap A[Catch: all \-\> 0x002a] (LINE:343)\l0x0009: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.WeakHashMap), (r4 I:java.lang.Object A[D('context' android.content.Context)]) type: VIRTUAL call: java.util.WeakHashMap.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002a, MD:(java.lang.Object):V (c)]\l0x000d: CHECK_CAST (r1 I:androidx.collection.LongSparseArray) = (androidx.collection.LongSparseArray) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002a]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001c  (LINE:344)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|TryCatch #0 \{all \-\> 0x002a, blocks: (B:23:0x0001, B:25:0x0007, B:27:0x0011, B:28:0x001c), top: B:38:0x0001 \}\lCatch: all \-\> 0x002a\l|0x0011: NEW_INSTANCE  (r2 I:androidx.collection.LongSparseArray) =  androidx.collection.LongSparseArray A[Catch: all \-\> 0x002a] (LINE:345)\l0x0013: INVOKE  (r2 I:androidx.collection.LongSparseArray) type: DIRECT call: androidx.collection.LongSparseArray.\<init\>():void A[Catch: all \-\> 0x002a, MD:():void (m)]\l0x0016: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0017: IGET  (r2 I:java.util.WeakHashMap\<android.content.Context, androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>\>) = (r3 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mDrawableCaches java.util.WeakHashMap A[Catch: all \-\> 0x002a] (LINE:346)\l0x0019: INVOKE  \l  (r2 I:java.util.WeakHashMap)\l  (r4 I:java.lang.Object A[D('context' android.content.Context)])\l  (r1 I:java.lang.Object A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)])\l type: VIRTUAL call: java.util.WeakHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002a, MD:(K, V):V (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x002a, blocks: (B:23:0x0001, B:25:0x0007, B:27:0x0011, B:28:0x001c), top: B:38:0x0001 \}\lCatch: all \-\> 0x002a\l|0x001c: NEW_INSTANCE  (r2 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference A[Catch: all \-\> 0x002a] (LINE:348)\l0x001e: INVOKE  (r2 I:java.lang.ref.WeakReference), (r0 I:java.lang.Object A[D('cs' android.graphics.drawable.Drawable$ConstantState)]) type: DIRECT call: java.lang.ref.WeakReference.\<init\>(java.lang.Object):void A[Catch: all \-\> 0x002a, MD:(T):void (c)]\l0x0021: INVOKE  \l  (r1 I:androidx.collection.LongSparseArray A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)])\l  (r5 I:long A[D('key' long)])\l  (r2 I:java.lang.Object)\l type: VIRTUAL call: androidx.collection.LongSparseArray.put(long, java.lang.Object):void A[Catch: all \-\> 0x002a, MD:(long, E):void (m), TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|0x0024: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:349)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|0x0025: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|0x0027: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:351)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|0x0028: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|RETURN\l|0x0029: RETURN  (r1 I:boolean) \l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|ExcHandler: all \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r4 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002a] (LINE:340)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002c|0x002c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private synchronized boolean androidx.appcompat.widget.ResourceManagerInternal.addDrawableToCache((r3 'this' I:androidx.appcompat.widget.ResourceManagerInternal A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[D('key' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x002c \-\> B:21:?, CROSS_EDGE: B:26:0x000f \-\> B:28:0x001c, CROSS_EDGE: B:34:0x0029 \-\> B:21:?, CROSS_EDGE: B:38:0x0001 \-\> B:35:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0027: r1 'cache' Landroidx\/collection\/LongSparseArray;, signature: Landroidx\/collection\/LongSparseArray\<Ljava\/lang\/ref\/WeakReference\<Landroid\/graphics\/drawable\/Drawable$ConstantState;\>;\>;\l  0x0005\-0x002a: r0 'cs' Landroid\/graphics\/drawable\/Drawable$ConstantState;\l  \-1 \-0x002a: r4 'context' Landroid\/content\/Context;\l  \-1 \-0x002a: r5 'key' J\l  \-1 \-0x002a: r7 'drawable' Landroid\/graphics\/drawable\/Drawable;\lTryCatch #0 \{all \-\> 0x002a, blocks: (B:23:0x0001, B:25:0x0007, B:27:0x0011, B:28:0x001c), top: B:38:0x0001 \}\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_38;
Node_38 -> Node_23;
Node_38 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_39 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_35 -> Node_37;
Node_37 -> Node_21;
}

