digraph "CFG forandroidx.appcompat.widget.ResourceManagerInternal.getCachedDrawable(Landroid\/content\/Context;J)Landroid\/graphics\/drawable\/Drawable;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: MONITOR_ENTER  (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\lCatch: all \-\> 0x002d\l|0x0001: IGET  (r0 I:java.util.WeakHashMap\<android.content.Context, androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>\>) = (r4 I:androidx.appcompat.widget.ResourceManagerInternal) androidx.appcompat.widget.ResourceManagerInternal.mDrawableCaches java.util.WeakHashMap A[Catch: all \-\> 0x002d, TRY_ENTER] (LINE:320)\l0x0003: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.WeakHashMap), (r5 I:java.lang.Object A[D('context' android.content.Context)]) type: VIRTUAL call: java.util.WeakHashMap.get(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x002d, MD:(java.lang.Object):V (c)]\l0x0007: CHECK_CAST (r0 I:androidx.collection.LongSparseArray) = (androidx.collection.LongSparseArray) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002d, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:321)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x000e \l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: MONITOR_EXIT  (r4 I:??[OBJECT, ARRAY])  (LINE:322)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\lCatch: all \-\> 0x002d\l|0x000e: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:androidx.collection.LongSparseArray A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)])\l  (r6 I:long A[D('key' long)])\l type: VIRTUAL call: androidx.collection.LongSparseArray.get(long):java.lang.Object A[Catch: all \-\> 0x002d, MD:(long):E (m), TRY_ENTER] (LINE:325)\l0x0012: CHECK_CAST (r2 I:java.lang.ref.WeakReference) = (java.lang.ref.WeakReference) (r2 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002d]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('wr' java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002b  (LINE:326)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0016|TryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\lCatch: all \-\> 0x002d\l|0x0016: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:java.lang.ref.WeakReference A[D('wr' java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>)])\l type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[Catch: all \-\> 0x002d, MD:():T (c)] (LINE:328)\l0x001a: CHECK_CAST (r3 I:android.graphics.drawable.Drawable$ConstantState) = (android.graphics.drawable.Drawable$ConstantState) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002d]\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|0x001c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('entry' android.graphics.drawable.Drawable$ConstantState)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028  (LINE:329)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\lCatch: all \-\> 0x002d\l|0x001e: INVOKE  (r1 I:android.content.res.Resources) = (r5 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[Catch: all \-\> 0x002d, MD:():android.content.res.Resources (c)] (LINE:330)\l0x0022: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r3 I:android.graphics.drawable.Drawable$ConstantState A[D('entry' android.graphics.drawable.Drawable$ConstantState)])\l  (r1 I:android.content.res.Resources)\l type: VIRTUAL call: android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable A[Catch: all \-\> 0x002d, MD:(android.content.res.Resources):android.graphics.drawable.Drawable (c), TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|0x0026: MONITOR_EXIT  (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|RETURN\l|0x0027: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\lCatch: all \-\> 0x002d\l|0x0028: INVOKE  \l  (r0 I:androidx.collection.LongSparseArray A[D('cache' androidx.collection.LongSparseArray\<java.lang.ref.WeakReference\<android.graphics.drawable.Drawable$ConstantState\>\>)])\l  (r6 I:long A[D('key' long)])\l type: VIRTUAL call: androidx.collection.LongSparseArray.remove(long):void A[Catch: all \-\> 0x002d, MD:(long):void (m), TRY_ENTER, TRY_LEAVE] (LINE:333)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|0x002b: MONITOR_EXIT  (r4 I:??[OBJECT, ARRAY])  (LINE:336)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x002d|ExcHandler: all \-\> 0x002d\l|0x002d: MOVE_EXCEPTION  (r5 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002d] (LINE:319)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|0x002f: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private synchronized android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.getCachedDrawable((r4 'this' I:androidx.appcompat.widget.ResourceManagerInternal A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('key' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0027 \-\> B:23:?, CROSS_EDGE: B:39:0x002c \-\> B:23:?, CROSS_EDGE: B:31:0x0014 \-\> B:38:0x002b, CROSS_EDGE: B:42:0x002f \-\> B:23:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x002b: r3 'entry' Landroid\/graphics\/drawable\/Drawable$ConstantState;\l  0x0009\-0x002d: r0 'cache' Landroidx\/collection\/LongSparseArray;, signature: Landroidx\/collection\/LongSparseArray\<Ljava\/lang\/ref\/WeakReference\<Landroid\/graphics\/drawable\/Drawable$ConstantState;\>;\>;\l  0x0014\-0x002d: r2 'wr' Ljava\/lang\/ref\/WeakReference;, signature: Ljava\/lang\/ref\/WeakReference\<Landroid\/graphics\/drawable\/Drawable$ConstantState;\>;\l  \-1 \-0x002d: r5 'context' Landroid\/content\/Context;\l  \-1 \-0x002d: r6 'key' J\lTryCatch #0 \{all \-\> 0x002d, blocks: (B:25:0x0001, B:30:0x000e, B:32:0x0016, B:34:0x001e, B:37:0x0028), top: B:43:0x0001 \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_43;
Node_43 -> Node_25;
Node_43 -> Node_40;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_23;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_23;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_23;
Node_40 -> Node_42;
Node_42 -> Node_23;
}

