digraph "CFG forandroidx.appcompat.widget.ResourceManagerInternal.getDrawable(Landroid\/content\/Context;IZ)Landroid\/graphics\/drawable\/Drawable;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: MONITOR_ENTER  (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\lCatch: all \-\> 0x0024\l|0x0001: INVOKE  \l  (r2 I:androidx.appcompat.widget.ResourceManagerInternal)\l  (r3 I:android.content.Context A[D('context' android.content.Context)])\l type: DIRECT call: androidx.appcompat.widget.ResourceManagerInternal.checkVectorDrawableSetup(android.content.Context):void A[Catch: all \-\> 0x0024, MD:(android.content.Context):void (m), TRY_ENTER] (LINE:142)\l0x0004: INVOKE  (r0 I:android.graphics.drawable.Drawable) = \l  (r2 I:androidx.appcompat.widget.ResourceManagerInternal)\l  (r3 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:int A[D('resId' int)])\l type: DIRECT call: androidx.appcompat.widget.ResourceManagerInternal.loadDrawableFromDelegates(android.content.Context, int):android.graphics.drawable.Drawable A[Catch: all \-\> 0x0024, MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)] (LINE:144)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000f  (LINE:145)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|TryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\lCatch: all \-\> 0x0024\l|0x000a: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r2 I:androidx.appcompat.widget.ResourceManagerInternal)\l  (r3 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:int A[D('resId' int)])\l type: DIRECT call: androidx.appcompat.widget.ResourceManagerInternal.createDrawableIfNeeded(android.content.Context, int):android.graphics.drawable.Drawable A[Catch: all \-\> 0x0024, MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)] (LINE:146)\l0x000e: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0016  (LINE:148)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|TryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\lCatch: all \-\> 0x0024\l|0x0011: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r3 I:android.content.Context A[D('context' android.content.Context)]), (r4 I:int A[D('resId' int)]) type: STATIC call: androidx.core.content.ContextCompat.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[Catch: all \-\> 0x0024, MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)] (LINE:149)\l0x0015: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001d  (LINE:152)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|TryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\lCatch: all \-\> 0x0024\l|0x0018: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r2 I:androidx.appcompat.widget.ResourceManagerInternal)\l  (r3 I:android.content.Context A[D('context' android.content.Context)])\l  (r4 I:int A[D('resId' int)])\l  (r5 I:boolean A[D('failIfNotKnown' boolean)])\l  (r0 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l type: DIRECT call: androidx.appcompat.widget.ResourceManagerInternal.tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable):android.graphics.drawable.Drawable A[Catch: all \-\> 0x0024, MD:(android.content.Context, int, boolean, android.graphics.drawable.Drawable):android.graphics.drawable.Drawable (m)] (LINE:154)\l0x001c: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawable' android.graphics.drawable.Drawable)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x001d|0x001d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0022  (LINE:156)\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\lCatch: all \-\> 0x0024\l|0x001f: INVOKE  (r0 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.appcompat.widget.DrawableUtils.fixDrawable(android.graphics.drawable.Drawable):void A[Catch: all \-\> 0x0024, MD:(android.graphics.drawable.Drawable):void (m), TRY_LEAVE] (LINE:158)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY])  (LINE:160)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|ExcHandler: all \-\> 0x0024\l|0x0024: MOVE_EXCEPTION  (r3 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0024] (LINE:141)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|0x0026: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized android.graphics.drawable.Drawable androidx.appcompat.widget.ResourceManagerInternal.getDrawable((r2 'this' I:androidx.appcompat.widget.ResourceManagerInternal A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('failIfNotKnown' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0026 \-\> B:20:?, CROSS_EDGE: B:29:0x001d \-\> B:31:0x0022, CROSS_EDGE: B:27:0x0016 \-\> B:29:0x001d, CROSS_EDGE: B:25:0x000f \-\> B:27:0x0016, CROSS_EDGE: B:23:0x0008 \-\> B:25:0x000f, CROSS_EDGE: B:36:0x0001 \-\> B:33:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0024: r0 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0024: r3 'context' Landroid\/content\/Context;\l  \-1 \-0x0024: r4 'resId' I\l  \-1 \-0x0024: r5 'failIfNotKnown' Z\lTryCatch #0 \{all \-\> 0x0024, blocks: (B:22:0x0001, B:24:0x000a, B:26:0x0011, B:28:0x0018, B:30:0x001f), top: B:36:0x0001 \}\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_36;
Node_36 -> Node_22;
Node_36 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_30 -> Node_37;
Node_37 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_33 -> Node_35;
Node_35 -> Node_20;
}

