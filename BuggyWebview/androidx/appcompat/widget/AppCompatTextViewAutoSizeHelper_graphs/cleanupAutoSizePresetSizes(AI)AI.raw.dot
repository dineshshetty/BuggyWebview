digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.cleanupAutoSizePresetSizes([I)[I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r7 I:??[] A[D('presetValues' int[])])  (LINE:512)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|0x0001: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('presetValuesLength' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0004  (LINE:513)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|RETURN\l|0x0003: RETURN  (r7 I:int[] A[D('presetValues' int[])])  (LINE:514)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|0x0004: INVOKE  (r7 I:int[] A[D('presetValues' int[])]) type: STATIC call: java.util.Arrays.sort(int[]):void A[MD:(int[]):void (c)] (LINE:516)\l0x0007: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:518)\l0x0009: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:519)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|LOOP_START\lLOOP:0: B:6:0x000d\-\>B:12:0x0024\l|0x000d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('presetValuesLength' int)])  \-\> B:20:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: AGET  (r3 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][] A[D('presetValues' int[])]), (r2 I:??[int, short, byte, char] A[D('i' int)])  (LINE:520)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IF  (r3 I:??[int, byte, short, char] A[D('currentPresetValue' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:22:0x0024  (LINE:522)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int A[D('currentPresetValue' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:523)\l0x0017: INVOKE  (r4 I:int) = (r1 I:java.util.List A[D('uniqueValidSizes' java.util.List\<java.lang.Integer\>)]), (r4 I:java.lang.Object) type: STATIC call: java.util.Collections.binarySearch(java.util.List, java.lang.Object):int A[MD:\<T\>:(java.util.List\<? extends java.lang.Comparable\<? super T\>\>, T):int (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: IF  (r4 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0024 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: INVOKE  (r4 I:java.lang.Integer) = (r3 I:int A[D('currentPresetValue' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)] (LINE:524)\l0x0021: INVOKE  (r1 I:java.util.List A[D('uniqueValidSizes' java.util.List\<java.lang.Integer\>)]), (r4 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lLOOP:0: B:6:0x000d\-\>B:12:0x0024\l|0x0024: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:519)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0027|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: INVOKE  (r2 I:int) = (r1 I:java.util.List A[D('uniqueValidSizes' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:528)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|0x002b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('presetValuesLength' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002e \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|RETURN\l|0x002d: RETURN  (r7 I:int[] A[D('presetValues' int[])])  (LINE:529)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: INVOKE  (r2 I:int) = (r1 I:java.util.List A[D('uniqueValidSizes' java.util.List\<java.lang.Integer\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:531)\l0x0032: NEW_ARRAY  (r3 I:int[]) = (r2 I:int A[D('uniqueValidSizesLength' int), IMMUTABLE_TYPE]) type: int[]  (LINE:532)\l0x0034: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:533)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|LOOP_START\lLOOP:1: B:17:0x0035\-\>B:18:0x0037\l|0x0035: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('uniqueValidSizesLength' int)])  \-\> B:24:0x0046 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|LOOP_END\lLOOP:1: B:17:0x0035\-\>B:18:0x0037\l|0x0037: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.util.List A[D('uniqueValidSizes' java.util.List\<java.lang.Integer\>)]), (r4 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:534)\l0x003b: CHECK_CAST (r5 I:java.lang.Integer) = (java.lang.Integer) (r5 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  (r5 I:int) = (r5 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)]\l0x0041: APUT  \l  (r3 I:??[int, float][] A[D('cleanedUpSizes' int[])])\l  (r4 I:??[int, short, byte, char] A[D('i' int)])\l  (r5 I:??[int, float, short, byte, char])\l \l0x0043: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:533)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|RETURN\l|0x0046: RETURN  (r3 I:int[] A[D('cleanedUpSizes' int[])])  (LINE:536)\l}"];
MethodNode[shape=record,label="{private int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.cleanupAutoSizePresetSizes((r6 'this' I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r7 I:int[] A[D('presetValues' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0024 \-\> B:6:0x000d, CROSS_EDGE: B:10:0x001b \-\> B:12:0x0024, CROSS_EDGE: B:8:0x0011 \-\> B:12:0x0024, CROSS_EDGE: B:15:0x002d \-\> B:1:?, BACK_EDGE: B:18:0x0037 \-\> B:17:0x0035, CROSS_EDGE: B:19:0x0046 \-\> B:1:?\lDebug Info:\l  0x0011\-0x0024: r3 'currentPresetValue' I\l  0x000d\-0x0027: r2 'i' I\l  0x0035\-0x0046: r4 'i' I\l  0x0001\-0x0046: r0 'presetValuesLength' I\l  0x000c\-0x0046: r1 'uniqueValidSizes' Ljava\/util\/List;, signature: Ljava\/util\/List\<Ljava\/lang\/Integer;\>;\l  0x0032\-0x0046: r2 'uniqueValidSizesLength' I\l  0x0034\-0x0046: r3 'cleanedUpSizes' [I\l  \-1 \-0x0046: r7 'presetValues' [I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_11 -> Node_21;
Node_21 -> Node_12;
Node_12 -> Node_6;
Node_23 -> Node_12;
Node_22 -> Node_12;
Node_20 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_17;
Node_24 -> Node_19;
Node_19 -> Node_1;
}

