digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.autoSizeText()V" {
subgraph cluster_Region_2064037912 {
label = "R(1:(2:(1:3)|(2:(1:(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59)))))|34))) | DECL_VAR: int availableWidth\l";
node [shape=record,color=blue];
subgraph cluster_Region_1100226995 {
label = "R(2:(1:3)|(2:(1:(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59)))))|34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_489718782 {
label = "IF [B:3:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (isAutoSizeEnabled() == false) goto L3\l}"];
subgraph cluster_Region_1089707241 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_242952855 {
label = "R(2:(1:(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59)))))|34)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1854016338 {
label = "IF [B:6:0x0009] THEN: R(1:(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59))))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r6.mNeedsAutoSizeText != false) goto L7\l}"];
subgraph cluster_Region_1999919631 {
label = "R(1:(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59)))))";
node [shape=record,color=blue];
subgraph cluster_Region_737969364 {
label = "R(2:(1:32)|(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2080652462 {
label = "IF [B:8:0x0011, B:10:0x0019] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r6.mTextView.getMeasuredHeight() \<= 0) goto L33\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|ADDED_TO_REGION\l|if (r6.mTextView.getMeasuredWidth() \<= 0) goto L32\l}"];
subgraph cluster_Region_44196071 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_605132094 {
label = "R(4:11|(1:13)(1:31)|14|(2:(1:29)|(2:17|59)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001c|boolean boolean r0 = r6.mImpl.isHorizontallyScrollable(r6.mTextView)\l}"];
subgraph cluster_IfRegion_1707211861 {
label = "IF [B:13:0x0024] THEN: R(1:13) ELSE: R(1:31)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0024|if (r0 != false) goto L13\l}"];
subgraph cluster_Region_890778311 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0026|r1 = 1048576\l}"];
}
subgraph cluster_Region_976161758 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0029|int r1 = (r6.mTextView.getMeasuredWidth() \- r6.mTextView.getTotalPaddingLeft()) \- r6.mTextView.getTotalPaddingRight()\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x003d|PHI: r1 \l  PHI: (r1v5 'availableWidth' int) = (r1v4 'availableWidth' int), (r1v6 'availableWidth' int) binds: [B:15:0x0029, B:14:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|int int r2 = (r6.mTextView.getHeight() \- r6.mTextView.getCompoundPaddingBottom()) \- r6.mTextView.getCompoundPaddingTop()\l}"];
subgraph cluster_Region_1460909726 {
label = "R(2:(1:29)|(2:17|59))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_487127359 {
label = "IF [B:17:0x0052, B:18:0x0054] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0052|if (r1 \<= 0) goto L30\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|ADDED_TO_REGION\l|if (r2 \<= 0) goto L29\l}"];
subgraph cluster_Region_403067532 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_896670018 {
label = "R(2:17|59)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0057|android.graphics.RectF android.graphics.RectF r3 = androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.TEMP_RECTF\l}"];
subgraph cluster_SynchronizedRegion_1099471649 {
label = "Synchronized:R(2:18|(2:20|(1:22)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0059}"];
subgraph cluster_Region_2009173407 {
label = "R(2:20|(1:22))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x005a|TRY_ENTER\lTryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|r3.setEmpty()     \/\/ Catch: java.lang.Throwable \-\> L78\lr3.right = r1     \/\/ Catch: java.lang.Throwable \-\> L78\lr3.bottom = r2     \/\/ Catch: java.lang.Throwable \-\> L78\lfloat float r4 = findLargestTextSizeWhichFits(r3)     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
subgraph cluster_IfRegion_454251310 {
label = "IF [B:23:0x0070] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0070|if (r4 != r6.mTextView.getTextSize()) goto L22\l}"];
subgraph cluster_Region_1615169702 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0072|TryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|setTextSizeInternal(0, r4)     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
}
}
}
}
}
}
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x007d|r6.mNeedsAutoSizeText = true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x005a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0076|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0077}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0078|REMOVE\lExcHandler: all \-\> 0x0078\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0079|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0078\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x007a|REMOVE\l|throw r4\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x007b|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x007c|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0080}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.autoSizeText((r6v0 'this' androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0080 \-\> B:1:?, CROSS_EDGE: B:29:0x007a \-\> B:1:?, CROSS_EDGE: B:23:0x0070 \-\> B:25:0x0076, CROSS_EDGE: B:34:0x005a \-\> B:27:0x0078, CROSS_EDGE: B:30:0x007b \-\> B:1:?, CROSS_EDGE: B:17:0x0052 \-\> B:30:0x007b, CROSS_EDGE: B:15:0x0029 \-\> B:16:0x003d, CROSS_EDGE: B:31:0x007c \-\> B:1:?, CROSS_EDGE: B:8:0x0011 \-\> B:31:0x007c, CROSS_EDGE: B:6:0x0009 \-\> B:32:0x007d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_32[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_31;
Node_10 -> Node_12[style=dashed];
Node_10 -> Node_37;
Node_37 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_30;
Node_18 -> Node_20[style=dashed];
Node_18 -> Node_36;
Node_36 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_32 -> Node_33;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_34 -> Node_22;
Node_34 -> Node_27;
Node_25 -> Node_26;
Node_25 -> Node_35;
Node_26 -> Node_32;
Node_35 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_1;
Node_30 -> Node_1;
Node_31 -> Node_1;
Node_33 -> Node_1;
}

