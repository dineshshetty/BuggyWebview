digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithPresetSizes([II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) type: DIRECT call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.supportsAutoSizeText():boolean A[MD:():boolean (m)] (LINE:373)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: ARRAY_LENGTH  (r0 I:int) = (r6 I:??[] A[D('presetSizes' int[])])  (LINE:374)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('presetSizesLength' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:17:0x0057  (LINE:375)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[D('presetSizesLength' int), IMMUTABLE_TYPE]) type: int[]  (LINE:376)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('unit' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0012  (LINE:378)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: INVOKE  (r1 I:int[] A[D('presetSizesInPx' int[])]) = (r6 I:int[] A[D('presetSizes' int[])]), (r0 I:int A[D('presetSizesLength' int)]) type: STATIC call: java.util.Arrays.copyOf(int[], int):int[] A[MD:(int[], int):int[] (c)] (LINE:379)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: INVOKE  (r2 I:int[]) = (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper), (r1 I:int[] A[D('presetSizesInPx' int[])]) type: DIRECT call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.cleanupAutoSizePresetSizes(int[]):int[] A[MD:(int[]):int[] (m)] (LINE:390)\l0x0033: IPUT  (r2 I:int[]), (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextSizesInPx int[] \l0x0035: INVOKE  (r2 I:boolean) = (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) type: DIRECT call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizesConfiguration():boolean A[MD:():boolean (m)] (LINE:391)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003c \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:392)\l0x003e: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0040: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0043: CONST_STR  (r4 I:java.lang.String) =  \"None of the preset sizes is valid: \" \l0x0045: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0048: INVOKE  (r4 I:java.lang.String) = (r6 I:int[] A[D('presetSizes' int[])]) type: STATIC call: java.util.Arrays.toString(int[]):java.lang.String A[MD:(int[]):java.lang.String (c)] (LINE:393)\l0x004c: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004f: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0053: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|0x005a: INVOKE  (r1 I:boolean) = (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) type: DIRECT call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeText():boolean A[MD:():boolean (m)] (LINE:399)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005e|0x005e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x0060|0x0060: INVOKE  (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) type: VIRTUAL call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.autoSizeText():void A[MD:():void (m)] (LINE:400)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|RETURN\lORIG_RETURN\l|0x0063: RETURN    (LINE:403)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0063: RETURN   A[SYNTHETIC] (LINE:403)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IGET  (r2 I:android.content.Context) = (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mContext android.content.Context  (LINE:381)\l0x0014: INVOKE  (r2 I:android.content.res.Resources) = (r2 I:android.content.Context) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:382)\l0x0018: INVOKE  (r2 I:android.util.DisplayMetrics) = (r2 I:android.content.res.Resources) type: VIRTUAL call: android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics A[MD:():android.util.DisplayMetrics (c)]\l0x001c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:384)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|LOOP_START\lLOOP:0: B:10:0x001d\-\>B:11:0x001f\l|0x001d: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('presetSizesLength' int)])  \-\> B:22:0x002f \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|LOOP_END\lLOOP:0: B:10:0x001d\-\>B:11:0x001f\l|0x001f: AGET  (r4 I:??[int, float, short, byte, char]) = (r6 I:??[int, float][] A[D('presetSizes' int[])]), (r3 I:??[int, short, byte, char] A[D('i' int)])  (LINE:385)\l0x0021: CAST (r4 I:float) = (float) (r4 I:int) \l0x0022: INVOKE  (r4 I:float) = \l  (r7 I:int A[D('unit' int)])\l  (r4 I:float)\l  (r2 I:android.util.DisplayMetrics A[D('displayMetrics' android.util.DisplayMetrics)])\l type: STATIC call: android.util.TypedValue.applyDimension(int, float, android.util.DisplayMetrics):float A[MD:(int, float, android.util.DisplayMetrics):float (c)]\l0x0026: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x002a: APUT  \l  (r1 I:??[int, float][] A[D('presetSizesInPx' int[])])\l  (r3 I:??[int, short, byte, char] A[D('i' int)])\l  (r4 I:??[int, float, short, byte, char])\l \l0x002c: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:384)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|0x0057: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('presetSizesInPx' int[])]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:396)\l0x0058: IPUT  (r1 I:boolean), (r5 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mHasPresetAutoSizeValues boolean \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0063: RETURN   A[SYNTHETIC] (LINE:403)\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithPresetSizes((r5 'this' I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r6 I:int[] A[D('presetSizes' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('unit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0063 \-\> B:1:?, CROSS_EDGE: B:19:0x005e \-\> B:21:0x0063, BACK_EDGE: B:11:0x001f \-\> B:10:0x001d, CROSS_EDGE: B:10:0x001d \-\> B:12:0x002f, CROSS_EDGE: B:17:0x0057 \-\> B:18:0x005a, CROSS_EDGE: B:3:0x0004 \-\> B:21:0x0063\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x002f: r2 'displayMetrics' Landroid\/util\/DisplayMetrics;\l  0x001d\-0x002f: r3 'i' I\l  0x000b\-0x003b: r1 'presetSizesInPx' [I\l  0x003c\-0x0057: r1 'presetSizesInPx' [I\l  0x0007\-0x0063: r0 'presetSizesLength' I\l  \-1 \-0x0063: r6 'presetSizes' [I\l  \-1 \-0x0063: r7 'unit' I\lEXCEPTIONS:[Ljava\/lang\/IllegalArgumentException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_24 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_10;
Node_22 -> Node_12;
Node_17 -> Node_18;
Node_23 -> Node_1;
}

