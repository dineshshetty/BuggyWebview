digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.autoSizeText()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (isAutoSizeEnabled() != false) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x0009|if (r6.mNeedsAutoSizeText == false) goto L34\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b}"];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r6.mTextView.getMeasuredHeight() \<= 0) goto L33\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013}"];
Node_10 [shape=record,label="{10\:\ 0x0019|if (r6.mTextView.getMeasuredWidth() \> 0) goto L11\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|boolean r0 = r6.mImpl.isHorizontallyScrollable(r6.mTextView)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|if (r0 == false) goto L31\l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|r1 = 1048576\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|PHI: r1 \l  PHI: (r1v5 'availableWidth' int) = (r1v4 'availableWidth' int), (r1v6 'availableWidth' int) binds: [B:15:0x0029, B:14:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = (r6.mTextView.getHeight() \- r6.mTextView.getCompoundPaddingBottom()) \- r6.mTextView.getCompoundPaddingTop()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|if (r1 \<= 0) goto L30\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|if (r2 \> 0) goto L17\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|android.graphics.RectF r3 = androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.TEMP_RECTF\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|monitor\-enter(r3)\l}"];
Node_34 [shape=record,label="{34\:\ 0x005a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|TRY_ENTER\lTryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|r3.setEmpty()     \/\/ Catch: java.lang.Throwable \-\> L78\lr3.right = (float) r1     \/\/ Catch: java.lang.Throwable \-\> L78\lr3.bottom = (float) r2     \/\/ Catch: java.lang.Throwable \-\> L78\lfloat r4 = (float) findLargestTextSizeWhichFits(r3)     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
Node_23 [shape=record,label="{23\:\ 0x0070|if ((r4 \> r6.mTextView.getTextSize() ? 1 : (r4 == r6.mTextView.getTextSize() ? 0 : \-1)) == 0) goto L23\l}"];
Node_24 [shape=record,label="{24\:\ 0x0072|TryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|setTextSizeInternal(0, r4)     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
Node_25 [shape=record,label="{25\:\ 0x0076|TryCatch #0 \{, blocks: (B:22:0x005a, B:24:0x0072, B:25:0x0076), top: B:34:0x005a \}\lCatch: all \-\> 0x0078\l|monitor\-exit(r3)     \/\/ Catch: java.lang.Throwable \-\> L78\l}"];
Node_26 [shape=record,label="{26\:\ 0x0077}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0078|REMOVE\lExcHandler: all \-\> 0x0078\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_28 [shape=record,label="{28\:\ 0x0079|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0078\l}"];
Node_29 [shape=record,label="{29\:\ 0x007a|REMOVE\l|throw r4\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x007b|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|int r1 = (r6.mTextView.getMeasuredWidth() \- r6.mTextView.getTotalPaddingLeft()) \- r6.mTextView.getTotalPaddingRight()\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ 0x007c|RETURN\lORIG_RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x007d|r6.mNeedsAutoSizeText = true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0080|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.autoSizeText((r6v0 'this' androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0080 \-\> B:1:?, CROSS_EDGE: B:29:0x007a \-\> B:1:?, CROSS_EDGE: B:23:0x0070 \-\> B:25:0x0076, CROSS_EDGE: B:34:0x005a \-\> B:27:0x0078, CROSS_EDGE: B:30:0x007b \-\> B:1:?, CROSS_EDGE: B:17:0x0052 \-\> B:30:0x007b, CROSS_EDGE: B:15:0x0029 \-\> B:16:0x003d, CROSS_EDGE: B:31:0x007c \-\> B:1:?, CROSS_EDGE: B:8:0x0011 \-\> B:31:0x007c, CROSS_EDGE: B:6:0x0009 \-\> B:32:0x007d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_32;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_31;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_37[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_30;
Node_18 -> Node_20;
Node_18 -> Node_36[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_34;
Node_34 -> Node_22;
Node_34 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_35;
Node_26 -> Node_32;
Node_35 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_1;
Node_36 -> Node_1;
Node_30 -> Node_1;
Node_15 -> Node_16;
Node_37 -> Node_1;
Node_31 -> Node_1;
Node_32 -> Node_33;
Node_33 -> Node_1;
}

