digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod(Ljava\/lang\/String;)Ljava\/lang\/reflect\/Method;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l|0x0000: SGET  (r0 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.reflect.Method\>) =  androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache java.util.concurrent.ConcurrentHashMap A[Catch: Exception \-\> 0x0020, TRY_ENTER] (LINE:846)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.ConcurrentHashMap), (r3 I:java.lang.Object A[D('methodName' java.lang.String)]) type: VIRTUAL call: java.util.concurrent.ConcurrentHashMap.get(java.lang.Object):java.lang.Object A[Catch: Exception \-\> 0x0020, MD:(java.lang.Object):V (c)]\l0x0006: CHECK_CAST (r0 I:java.lang.reflect.Method) = (java.lang.reflect.Method) (r0 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0020]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('method' java.lang.reflect.Method)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f  (LINE:847)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|TryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l|0x000a: CONST_CLASS  (r1 I:java.lang.Class\<android.widget.TextView\>) =  android.widget.TextView.class  (LINE:848)\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: Exception \-\> 0x0020]\l0x000f: INVOKE  (r1 I:java.lang.reflect.Method) = (r1 I:java.lang.Class), (r3 I:java.lang.String A[D('methodName' java.lang.String)]), (r2 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: Exception \-\> 0x0020, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0013: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('method' java.lang.reflect.Method)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('method' java.lang.reflect.Method)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f  (LINE:849)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l|0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:850)\l0x0017: INVOKE  (r0 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: Exception \-\> 0x0020, MD:(boolean):void (s)]\l0x001a: SGET  (r1 I:java.util.concurrent.ConcurrentHashMap\<java.lang.String, java.lang.reflect.Method\>) =  androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache java.util.concurrent.ConcurrentHashMap A[Catch: Exception \-\> 0x0020] (LINE:852)\l0x001c: INVOKE  \l  (r1 I:java.util.concurrent.ConcurrentHashMap)\l  (r3 I:java.lang.Object A[D('methodName' java.lang.String)])\l  (r0 I:java.lang.Object A[D('method' java.lang.reflect.Method)])\l type: VIRTUAL call: java.util.concurrent.ConcurrentHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: Exception \-\> 0x0020, MD:(K, V):V (c), TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)])  (LINE:856)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|ExcHandler: Exception \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0020] (LINE:857)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:858)\l0x0023: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0026: CONST_STR  (r2 I:java.lang.String) =  \"Failed to retrieve TextView#\" \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String A[D('methodName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: CONST_STR  (r2 I:java.lang.String) =  \"() method\" \l0x0030: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0033: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0037: CONST_STR  (r2 I:java.lang.String) =  \"ACTVAutoSizeHelper\" \l0x0039: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String), (r0 I:java.lang.Throwable A[D('ex' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l0x003c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:859)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|RETURN\l|0x003d: RETURN  (r1 I:java.lang.reflect.Method) \l}"];
MethodNode[shape=record,label="{private static java.lang.reflect.Method androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod((r3 I:java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x003d \-\> B:1:?, CROSS_EDGE: B:5:0x0014 \-\> B:7:0x001f, CROSS_EDGE: B:3:0x0008 \-\> B:7:0x001f, CROSS_EDGE: B:11:0x0000 \-\> B:8:0x0020\lDebug Info:\l  0x0008\-0x0020: r0 'method' Ljava\/lang\/reflect\/Method;\l  0x0021\-0x003d: r0 'ex' Ljava\/lang\/Exception;\l  \-1 \-0x003d: r3 'methodName' Ljava\/lang\/String;\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\l}"];
MethodNode -> Node_0;Node_0 -> Node_11;
Node_11 -> Node_2;
Node_11 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_12 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

