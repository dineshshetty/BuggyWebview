digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod(Ljava\/lang\/String;)Ljava\/lang\/reflect\/Method;" {
subgraph cluster_Region_1788477783 {
label = "R(1:(3:2|(1:6)|8))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_832069606 {
label = "Try: R(3:2|(1:6)|8) catches: R(3:10|11|12)";
node [shape=record,color=blue];
subgraph cluster_Region_158864813 {
label = "R(3:2|(1:6)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l|java.lang.reflect.Method java.lang.reflect.Method r0 = androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache.get(r3)     \/\/ Catch: java.lang.Exception \-\> L20\l}"];
subgraph cluster_IfRegion_1088170706 {
label = "IF [B:3:0x0008, B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 == null) goto L4\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|ADDED_TO_REGION\l|if ((r0 = android.widget.TextView.class.getDeclaredMethod(r3, new java.lang.Class[0])) != null) goto L6\l}"];
subgraph cluster_Region_1581960440 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l|r0.setAccessible(true)     \/\/ Catch: java.lang.Exception \-\> L20\landroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.sTextViewMethodByNameCache.put(r3, r0)     \/\/ Catch: java.lang.Exception \-\> L20\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x001f|RETURN\lPHI: r0 \l  PHI: (r0v4 'method' java.lang.reflect.Method) = (r0v3 'method' java.lang.reflect.Method), (r0v5 'method' java.lang.reflect.Method), (r0v5 'method' java.lang.reflect.Method) binds: [B:3:0x0008, B:5:0x0014, B:6:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
subgraph cluster_Region_535083555 {
label = "R(3:10|11|12) | ExcHandler: Exception \-\> 0x0020\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|ExcHandler: Exception \-\> 0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|android.util.Log.w(androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.TAG, \"Failed to retrieve TextView#\" + r3 + \"() method\", r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_535083555 {
label = "R(3:10|11|12) | ExcHandler: Exception \-\> 0x0020\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|ExcHandler: Exception \-\> 0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|android.util.Log.w(androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.TAG, \"Failed to retrieve TextView#\" + r3 + \"() method\", r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|RETURN\l|return null\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a|TryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lCatch: Exception \-\> 0x0020\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static java.lang.reflect.Method androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod((r3v0 'methodName' java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x003d \-\> B:1:?, CROSS_EDGE: B:5:0x0014 \-\> B:7:0x001f, CROSS_EDGE: B:3:0x0008 \-\> B:7:0x001f, CROSS_EDGE: B:11:0x0000 \-\> B:8:0x0020\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x0020, blocks: (B:2:0x0000, B:4:0x000a, B:6:0x0016), top: B:11:0x0000 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_0 -> Node_11;
Node_11 -> Node_2;
Node_11 -> Node_8;
Node_4 -> Node_5;
Node_12 -> Node_8;
}

