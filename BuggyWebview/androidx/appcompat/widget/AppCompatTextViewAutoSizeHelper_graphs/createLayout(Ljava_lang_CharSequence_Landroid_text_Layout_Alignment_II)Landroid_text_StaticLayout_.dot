digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createLayout(Ljava\/lang\/CharSequence;Landroid\/text\/Layout$Alignment;II)Landroid\/text\/StaticLayout;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 23) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Api23Impl.createStaticLayoutForMeasuring(r10, r11, r12, r13, r9.mTextView, r9.mTempTextPaint, r9.mImpl)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if (android.os.Build.VERSION.SDK_INT \< 16) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b}"];
Node_9 [shape=record,label="{9\:\ 0x0023|RETURN\l|return androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.Api16Impl.createStaticLayoutForMeasuring(r10, r11, r12, r9.mTextView, r9.mTempTextPaint)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024}"];
Node_11 [shape=record,label="{11\:\ 0x0028|RETURN\l|return createStaticLayoutForMeasuringPre16(r10, r11, r12)\l}"];
MethodNode[shape=record,label="{android.text.StaticLayout androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.createLayout((r9v0 'this' androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r10v0 'text' java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'alignment' android.text.Layout$Alignment A[D('alignment' android.text.Layout$Alignment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'availableWidth' int A[D('availableWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'maxLines' int A[D('maxLines' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0023 \-\> B:1:?, CROSS_EDGE: B:11:0x0028 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

