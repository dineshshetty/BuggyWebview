digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.invokeAndReturnWithDefault(Ljava\/lang\/Object;Ljava\/lang\/String;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:808)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:809)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x0016, blocks: (B:3:0x0002), top: B:21:0x0002, outer: #0 \}\lCatch: all \-\> 0x0014, Exception \-\> 0x0016\l|0x0002: INVOKE  (r2 I:java.lang.reflect.Method) = (r7 I:java.lang.String A[D('methodName' java.lang.String)]) type: STATIC call: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getTextViewMethod(java.lang.String):java.lang.reflect.Method A[Catch: all \-\> 0x0014, Exception \-\> 0x0016, MD:(java.lang.String):java.lang.reflect.Method (m), TRY_ENTER] (LINE:813)\l0x0006: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:814)\l0x0007: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: all \-\> 0x0014, Exception \-\> 0x0016]\l0x0009: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)])\l  (r6 I:java.lang.Object A[D('object' java.lang.Object)])\l  (r3 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: all \-\> 0x0014, Exception \-\> 0x0016, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' T)]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' T)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039  (LINE:819)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exceptionThrown' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:? \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' T)]) = (r8 I:??[OBJECT, ARRAY] A[D('defaultValue' T)])  (LINE:820)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN  (r0 I:T A[D('result' T)]) A[SYNTHETIC] (LINE:824)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN  (r0 I:T A[D('result' T)]) A[SYNTHETIC] (LINE:824)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: RETURN  (r0 I:T A[D('result' T)])  (LINE:824)\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|ExcHandler: all \-\> 0x0014\l|0x0014: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0014] (LINE:819)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' T)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003f  (LINE:819)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exceptionThrown' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003f \l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|0x003e: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('result' T)]) = (r8 I:??[OBJECT, ARRAY] A[D('defaultValue' T)])  (LINE:820)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|0x003f: THROW  (r2 I:java.lang.Throwable)  (LINE:822)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|ExcHandler: Exception \-\> 0x0016\l|0x0016: MOVE_EXCEPTION  (r2 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0016] (LINE:815)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: CONST  (r1 I:??[boolean, int, float, short, byte, char] A[D('exceptionThrown' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:816)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0014, blocks: (B:3:0x0002, B:12:0x0018), top: B:21:0x0002, inners: #1 \}\lCatch: all \-\> 0x0014\l|0x0018: CONST_STR  (r3 I:java.lang.String) =  \"ACTVAutoSizeHelper\" A[TRY_ENTER] (LINE:817)\l0x001a: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x0014]\l0x001c: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x0014, MD:():void (c)]\l0x001f: CONST_STR  (r5 I:java.lang.String) =  \"Failed to invoke TextView#\" \l0x0021: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0014, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0024: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.String A[D('methodName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0014, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0027: CONST_STR  (r5 I:java.lang.String) =  \"() method\" \l0x0029: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0014, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002c: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x0014, MD:():java.lang.String (c)]\l0x0030: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String), (r2 I:java.lang.Throwable A[D('ex' java.lang.Exception)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[Catch: all \-\> 0x0014, MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c), TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' T)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exceptionThrown' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:? \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN  (r0 I:T A[D('result' T)]) A[SYNTHETIC] (LINE:824)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN  (r0 I:T A[D('result' T)]) A[SYNTHETIC] (LINE:824)\l}"];
MethodNode[shape=record,label="{static T androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.invokeAndReturnWithDefault((r6 I:java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[D('methodName' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:T A[D('defaultValue' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x0010 \-\> B:16:0x0039, CROSS_EDGE: B:5:0x000e \-\> B:16:0x0039, CROSS_EDGE: B:14:0x0036 \-\> B:16:0x0039, CROSS_EDGE: B:14:0x0036 \-\> B:7:0x0012, CROSS_EDGE: B:13:0x0034 \-\> B:16:0x0039, CROSS_EDGE: B:20:0x003f \-\> B:1:?, CROSS_EDGE: B:18:0x003c \-\> B:20:0x003f, CROSS_EDGE: B:17:0x003a \-\> B:20:0x003f, CROSS_EDGE: B:21:0x0002 \-\> B:8:0x0014, CROSS_EDGE: B:21:0x0002 \-\> B:10:0x0016\lDebug Info:\l  0x0006\-0x000e: r2 'method' Ljava\/lang\/reflect\/Method;\l  0x0017\-0x0034: r2 'ex' Ljava\/lang\/Exception;\l  0x0001\-0x003f: r0 'result' Ljava\/lang\/Object;, signature: TT;\l  0x0002\-0x003f: r1 'exceptionThrown' Z\l  \-1 \-0x003f: r6 'object' Ljava\/lang\/Object;\l  \-1 \-0x003f: r7 'methodName' Ljava\/lang\/String;\l  0x0000\-0x003f: r8 'defaultValue' Ljava\/lang\/Object;, signature: TT;\lTYPE_VARS: [T]\lTryCatch #0 \{all \-\> 0x0014, blocks: (B:3:0x0002, B:12:0x0018), top: B:21:0x0002, inners: #1 \}, TryCatch #1 \{Exception \-\> 0x0016, blocks: (B:3:0x0002), top: B:21:0x0002, outer: #0 \}\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Object;Ljava\/lang\/String;TT;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_21;
Node_21 -> Node_3;
Node_21 -> Node_8;
Node_21 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_24;
Node_24 -> Node_1;
Node_23 -> Node_1;
Node_16 -> Node_1;
Node_22 -> Node_10;
Node_22 -> Node_8;
Node_8 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_25;
Node_14 -> Node_7[style=dashed];
Node_14 -> Node_26;
Node_26 -> Node_1;
Node_25 -> Node_1;
}

