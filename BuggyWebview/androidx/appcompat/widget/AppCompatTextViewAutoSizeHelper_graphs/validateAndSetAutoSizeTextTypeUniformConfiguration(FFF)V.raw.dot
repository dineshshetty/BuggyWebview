digraph "CFG forandroidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.validateAndSetAutoSizeTextTypeUniformConfiguration(FFF)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"px) is less or equal to (0px)\"  (LINE:550)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CMP_G  (r2 I:int) = (r5 I:float A[D('autoSizeMinTextSizeInPx' float)]), (r1 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:14:0x005a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CMP_G  (r2 I:int) = (r6 I:float A[D('autoSizeMaxTextSizeInPx' float)]), (r5 I:float A[D('autoSizeMinTextSizeInPx' float)])  (LINE:555)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:12:0x0036 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CMP_G  (r1 I:int) = (r7 I:float A[D('autoSizeStepGranularityInPx' float)]), (r1 I:float)  (LINE:561)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:10:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:567)\l0x0010: IPUT  (r0 I:int), (r4 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeTextType int \l0x0012: IPUT  (r5 I:float A[D('autoSizeMinTextSizeInPx' float)]), (r4 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeMinTextSizeInPx float  (LINE:568)\l0x0014: IPUT  (r6 I:float A[D('autoSizeMaxTextSizeInPx' float)]), (r4 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeMaxTextSizeInPx float  (LINE:569)\l0x0016: IPUT  \l  (r7 I:float A[D('autoSizeStepGranularityInPx' float)])\l  (r4 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper)\l androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mAutoSizeStepGranularityInPx float  (LINE:570)\l0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:571)\l0x0019: IPUT  (r0 I:boolean), (r4 I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper) androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.mHasPresetAutoSizeValues boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:572)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:562)\l0x001e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0020: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0023: CONST_STR  (r3 I:java.lang.String) =  \"The auto\-size step granularity (\" \l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0028: INVOKE  (r2 I:java.lang.StringBuilder), (r7 I:float A[D('autoSizeStepGranularityInPx' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0032: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:556)\l0x0038: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003d: CONST_STR  (r2 I:java.lang.String) =  \"Maximum auto\-size text size (\" \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:float A[D('autoSizeMaxTextSizeInPx' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x0045: CONST_STR  (r2 I:java.lang.String) =  \"px) is less or equal to minimum auto\-size text size (\" \l0x0047: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:float A[D('autoSizeMinTextSizeInPx' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x004d: CONST_STR  (r2 I:java.lang.String) =  \"px)\" \l0x004f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0052: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0056: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0059|0x0059: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|0x005a: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:551)\l0x005c: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005e: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0061: CONST_STR  (r3 I:java.lang.String) =  \"Minimum auto\-size text size (\" \l0x0063: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0066: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:float A[D('autoSizeMinTextSizeInPx' float)]) type: VIRTUAL call: java.lang.StringBuilder.append(float):java.lang.StringBuilder A[MD:(float):java.lang.StringBuilder (c)]\l0x0069: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x006c: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0070: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|0x0073: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.validateAndSetAutoSizeTextTypeUniformConfiguration((r4 'this' I:androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[D('autoSizeMinTextSizeInPx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('autoSizeMaxTextSizeInPx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[D('autoSizeStepGranularityInPx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0035 \-\> B:1:?, CROSS_EDGE: B:13:0x0059 \-\> B:1:?, CROSS_EDGE: B:15:0x0073 \-\> B:1:?\lDebug Info:\l  \-1 \-0x0073: r5 'autoSizeMinTextSizeInPx' F\l  \-1 \-0x0073: r6 'autoSizeMaxTextSizeInPx' F\l  \-1 \-0x0073: r7 'autoSizeStepGranularityInPx' F\lEXCEPTIONS:[Ljava\/lang\/IllegalArgumentException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

