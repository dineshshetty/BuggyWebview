digraph "CFG forandroidx.appcompat.widget.ViewUtils.makeOptionalFitsSystemWindows(Landroid\/view\/View;)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Could not invoke makeOptionalFitsSystemWindows\"  (LINE:80)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"ViewUtils\" \l0x0004: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0006: CONST  (r3 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:40:? \l}"];
Node_38 [shape=record,label="{38\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x0028, NoSuchMethodException \-\> 0x0032, InvocationTargetException \-\> 0x002d, blocks: (B:26:0x000a, B:28:0x001d, B:29:0x0021), top: B:38:0x000a \}\lCatch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032\l|0x000a: INVOKE  (r2 I:java.lang.Class) = (r6 I:java.lang.Object A[D('view' android.view.View)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032, MD:():java.lang.Class\<?\> (c), TRY_ENTER] (LINE:84)\l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"makeOptionalFitsSystemWindows\" \l0x0010: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032]\l0x0013: INVOKE  (r2 I:java.lang.reflect.Method) = (r2 I:java.lang.Class), (r3 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0017: INVOKE  (r3 I:boolean) = (r2 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]) type: VIRTUAL call: java.lang.reflect.Method.isAccessible():boolean A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032, MD:():boolean (s)] (LINE:85)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0021 \l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|TryCatch #2 \{IllegalAccessException \-\> 0x0028, NoSuchMethodException \-\> 0x0032, InvocationTargetException \-\> 0x002d, blocks: (B:26:0x000a, B:28:0x001d, B:29:0x0021), top: B:38:0x000a \}\lCatch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032\l|0x001d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:86)\l0x001e: INVOKE  (r2 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032, MD:(boolean):void (s)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0021|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0028, NoSuchMethodException \-\> 0x0032, InvocationTargetException \-\> 0x002d, blocks: (B:26:0x000a, B:28:0x001d, B:29:0x0021), top: B:38:0x000a \}\lCatch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032\l|0x0021: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032] (LINE:88)\l0x0023: INVOKE  \l  (r2 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)])\l  (r6 I:java.lang.Object A[D('view' android.view.View)])\l  (r3 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0028, InvocationTargetException \-\> 0x002d, NoSuchMethodException \-\> 0x0032, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:97)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0028|ExcHandler: IllegalAccessException \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r2 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0028] (LINE:93)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|0x0029: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:94)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:97)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0032|ExcHandler: NoSuchMethodException \-\> 0x0032\l|0x0032: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0032] (LINE:89)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0033|0x0033: CONST_STR  (r2 I:java.lang.String) =  \"Could not find method makeOptionalFitsSystemWindows. Oh well...\"  (LINE:90)\l0x0035: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) type: STATIC call: android.util.Log.d(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0038|RETURN\lORIG_RETURN\l|0x0038: RETURN    (LINE:97)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002d|ExcHandler: InvocationTargetException \-\> 0x002d\l|0x002d: MOVE_EXCEPTION  (r2 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x002d] (LINE:91)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002e|0x002e: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)])\l type: STATIC call: android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:92)\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:97)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:97)\l}"];
MethodNode[shape=record,label="{public static void androidx.appcompat.widget.ViewUtils.makeOptionalFitsSystemWindows((r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0021 \-\> B:37:0x0038, CROSS_EDGE: B:32:0x0029 \-\> B:37:0x0038, CROSS_EDGE: B:36:0x0033 \-\> B:37:0x0038, CROSS_EDGE: B:34:0x002e \-\> B:37:0x0038, CROSS_EDGE: B:27:0x001b \-\> B:29:0x0021, CROSS_EDGE: B:38:0x000a \-\> B:31:0x0028, CROSS_EDGE: B:38:0x000a \-\> B:35:0x0032, CROSS_EDGE: B:38:0x000a \-\> B:33:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0027: r2 'method' Ljava\/lang\/reflect\/Method;\l  0x0029\-0x002d: r2 'e' Ljava\/lang\/IllegalAccessException;\l  0x002e\-0x0031: r2 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0033\-0x0038: r0 'e' Ljava\/lang\/NoSuchMethodException;\l  \-1 \-0x0038: r6 'view' Landroid\/view\/View;\lTryCatch #2 \{IllegalAccessException \-\> 0x0028, NoSuchMethodException \-\> 0x0032, InvocationTargetException \-\> 0x002d, blocks: (B:26:0x000a, B:28:0x001d, B:29:0x0021), top: B:38:0x000a \}\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_38[style=dashed];
Node_25 -> Node_40;
Node_38 -> Node_26;
Node_38 -> Node_31;
Node_38 -> Node_35;
Node_38 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_39;
Node_29 -> Node_43;
Node_39 -> Node_31;
Node_39 -> Node_35;
Node_39 -> Node_33;
Node_43 -> Node_23;
Node_31 -> Node_32;
Node_32 -> Node_41;
Node_41 -> Node_23;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_23;
Node_33 -> Node_34;
Node_34 -> Node_42;
Node_42 -> Node_23;
Node_40 -> Node_23;
}

