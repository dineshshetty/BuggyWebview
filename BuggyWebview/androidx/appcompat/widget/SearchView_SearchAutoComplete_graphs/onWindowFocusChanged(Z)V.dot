digraph "CFG forandroidx.appcompat.widget.SearchView.SearchAutoComplete.onWindowFocusChanged(Z)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|super.onWindowFocusChanged(r2)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|if (r2 == false) goto L15\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005}"];
Node_21 [shape=record,label="{21\:\ 0x000b|if (r1.mSearchView.hasFocus() == false) goto L14\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (getVisibility() != 0) goto L13\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|r1.mHasPendingShowSoftInputRequest = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|if (androidx.appcompat.widget.SearchView.isLandscapeMode(getContext()) == false) goto L12\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|ensureImeVisible()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SearchView.SearchAutoComplete.onWindowFocusChanged((r1v0 'this' androidx.appcompat.widget.SearchView$SearchAutoComplete A[IMMUTABLE_TYPE, THIS]), (r2v0 'hasWindowFocus' boolean A[D('hasWindowFocus' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x001e \-\> B:27:0x0023, CROSS_EDGE: B:23:0x0011 \-\> B:27:0x0023, CROSS_EDGE: B:21:0x000b \-\> B:27:0x0023, CROSS_EDGE: B:19:0x0003 \-\> B:27:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onWindowFocusChanged(boolean):void\}]\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_29 -> Node_17;
Node_28 -> Node_17;
}

