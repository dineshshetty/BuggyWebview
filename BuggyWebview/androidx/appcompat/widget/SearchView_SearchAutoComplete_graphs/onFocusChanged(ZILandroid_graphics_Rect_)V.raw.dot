digraph "CFG forandroidx.appcompat.widget.SearchView.SearchAutoComplete.onFocusChanged(ZILandroid\/graphics\/Rect;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  \l  (r1 I:androidx.appcompat.widget.AppCompatAutoCompleteTextView)\l  (r2 I:boolean A[D('focused' boolean)])\l  (r3 I:int A[D('direction' int)])\l  (r4 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect)])\l type: SUPER call: androidx.appcompat.widget.AppCompatAutoCompleteTextView.onFocusChanged(boolean, int, android.graphics.Rect):void A[MD:(boolean, int, android.graphics.Rect):void (c)] (LINE:1937)\l0x0003: IGET  (r0 I:androidx.appcompat.widget.SearchView) = (r1 I:androidx.appcompat.widget.SearchView$SearchAutoComplete) androidx.appcompat.widget.SearchView.SearchAutoComplete.mSearchView androidx.appcompat.widget.SearchView  (LINE:1938)\l0x0005: INVOKE  (r0 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.onTextFocusChanged():void A[MD:():void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:1939)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.SearchView.SearchAutoComplete.onFocusChanged((r1 'this' I:androidx.appcompat.widget.SearchView$SearchAutoComplete A[IMMUTABLE_TYPE, THIS]), (r2 I:boolean A[D('focused' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('direction' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Rect A[D('previouslyFocusedRect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0008: r2 'focused' Z\l  \-1 \-0x0008: r3 'direction' I\l  \-1 \-0x0008: r4 'previouslyFocusedRect' Landroid\/graphics\/Rect;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onFocusChanged(boolean, int, android.graphics.Rect):void\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

