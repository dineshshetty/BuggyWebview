digraph "CFG forandroidx.appcompat.widget.ActionBarOverlayLayout.onLayout(ZIIII)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r13 I:androidx.appcompat.widget.ActionBarOverlayLayout) type: VIRTUAL call: androidx.appcompat.widget.ActionBarOverlayLayout.getChildCount():int A[MD:():int (c)] (LINE:520)\l0x0004: INVOKE  (r1 I:int) = (r13 I:androidx.appcompat.widget.ActionBarOverlayLayout) type: VIRTUAL call: androidx.appcompat.widget.ActionBarOverlayLayout.getPaddingLeft():int A[MD:():int (s)] (LINE:522)\l0x0008: INVOKE  (r2 I:int) = (r13 I:androidx.appcompat.widget.ActionBarOverlayLayout) type: VIRTUAL call: androidx.appcompat.widget.ActionBarOverlayLayout.getPaddingTop():int A[MD:():int (s)] (LINE:523)\l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:525)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000d|LOOP_START\lLOOP:0: B:16:0x000d\-\>B:20:0x0037\l|0x000d: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:23:0x003a \l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY])  (LINE:526)\l0x0010: INVOKE  (r5 I:android.view.View) = (r13 I:androidx.appcompat.widget.ActionBarOverlayLayout), (r3 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ActionBarOverlayLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)]\l0x0014: INVOKE  (r6 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)] (LINE:527)\l0x0018: CONST  (r7 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|0x001a: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0037 \l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|0x001c: INVOKE  (r6 I:android.view.ViewGroup$LayoutParams) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)] (LINE:528)\l0x0020: CHECK_CAST (r6 I:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) = (androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams) (r6 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  (r7 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredWidth():int A[MD:():int (c)] (LINE:530)\l0x0026: INVOKE  (r8 I:int) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getMeasuredHeight():int A[MD:():int (c)] (LINE:531)\l0x002a: IGET  (r9 I:int) = \l  (r6 I:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams A[D('lp' androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams)])\l androidx.appcompat.widget.ActionBarOverlayLayout.LayoutParams.leftMargin int  (LINE:533)\l0x002c: ARITH  (r9 I:int) = (r9 I:int) + (r1 I:int A[D('parentLeft' int)]) \l0x002d: IGET  (r10 I:int) = \l  (r6 I:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams A[D('lp' androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams)])\l androidx.appcompat.widget.ActionBarOverlayLayout.LayoutParams.topMargin int  (LINE:534)\l0x002f: ARITH  (r10 I:int) = (r10 I:int) + (r2 I:int A[D('parentTop' int)]) \l0x0030: ARITH  (r11 I:int) = (r9 I:int A[D('childLeft' int)]) + (r7 I:int A[D('width' int)])  (LINE:536)\l0x0032: ARITH  (r12 I:int) = (r10 I:int A[D('childTop' int)]) + (r8 I:int A[D('height' int)]) \l0x0034: INVOKE  \l  (r5 I:android.view.View A[D('child' android.view.View)])\l  (r9 I:int A[D('childLeft' int)])\l  (r10 I:int A[D('childTop' int)])\l  (r11 I:int)\l  (r12 I:int)\l type: VIRTUAL call: android.view.View.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0037|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|LOOP_END\lLOOP:0: B:16:0x000d\-\>B:20:0x0037\l|0x0037: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:525)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0037|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x003a|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r13 I:??[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|RETURN\l|0x003b: RETURN    (LINE:539)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.ActionBarOverlayLayout.onLayout((r13 'this' I:androidx.appcompat.widget.ActionBarOverlayLayout A[IMMUTABLE_TYPE, THIS]), (r14 I:boolean A[D('changed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:20:0x0037 \-\> B:16:0x000d, CROSS_EDGE: B:18:0x001a \-\> B:20:0x0037\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0037: r5 'child' Landroid\/view\/View;\l  0x0022\-0x0037: r6 'lp' Landroidx\/appcompat\/widget\/ActionBarOverlayLayout$LayoutParams;\l  0x0026\-0x0037: r7 'width' I\l  0x002a\-0x0037: r8 'height' I\l  0x002d\-0x0037: r9 'childLeft' I\l  0x0030\-0x0037: r10 'childTop' I\l  0x000d\-0x003b: r3 'i' I\l  0x0004\-0x003b: r0 'count' I\l  0x0008\-0x003b: r1 'parentLeft' I\l  0x000c\-0x003b: r2 'parentTop' I\l  \-1 \-0x003b: r14 'changed' Z\l  \-1 \-0x003b: r15 'left' I\l  \-1 \-0x003b: r16 'top' I\l  \-1 \-0x003b: r17 'right' I\l  \-1 \-0x003b: r18 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onLayout(boolean, int, int, int, int):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_24;
Node_24 -> Node_20;
Node_20 -> Node_16;
Node_25 -> Node_20;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_14;
}

