digraph "CFG forandroidx.appcompat.widget.ActionBarOverlayLayout.onNestedFling(Landroid\/view\/View;FFZ)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r1 I:androidx.appcompat.widget.ActionBarOverlayLayout) androidx.appcompat.widget.ActionBarOverlayLayout.mHideOnContentScroll boolean  (LINE:646)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0018 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('consumed' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0007 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r1 I:androidx.appcompat.widget.ActionBarOverlayLayout), (r4 I:float A[D('velocityY' float)]) type: DIRECT call: androidx.appcompat.widget.ActionBarOverlayLayout.shouldHideActionBarOnFling(float):boolean A[MD:(float):boolean (m)] (LINE:649)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0011 \l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|0x000d: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarOverlayLayout) type: DIRECT call: androidx.appcompat.widget.ActionBarOverlayLayout.addActionBarHideOffset():void A[MD:():void (m)] (LINE:650)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:654)\l0x0015: IPUT  (r0 I:boolean), (r1 I:androidx.appcompat.widget.ActionBarOverlayLayout) androidx.appcompat.widget.ActionBarOverlayLayout.mAnimatingForFling boolean \l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:boolean)  (LINE:655)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|0x0011: INVOKE  (r1 I:androidx.appcompat.widget.ActionBarOverlayLayout) type: DIRECT call: androidx.appcompat.widget.ActionBarOverlayLayout.removeActionBarHideOffset():void A[MD:():void (m)] (LINE:652)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:647)\l0x0019: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:647)\l0x0019: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.ActionBarOverlayLayout.onNestedFling((r1 'this' I:androidx.appcompat.widget.ActionBarOverlayLayout A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('target' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('velocityX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('velocityY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('consumed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x0011 \-\> B:25:0x0014, CROSS_EDGE: B:28:0x0019 \-\> B:16:?, CROSS_EDGE: B:18:0x0002 \-\> B:27:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r2 'target' Landroid\/view\/View;\l  \-1 \-0x0019: r3 'velocityX' F\l  \-1 \-0x0019: r4 'velocityY' F\l  \-1 \-0x0019: r5 'consumed' Z\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewParent.onNestedFling(android.view.View, float, float, boolean):boolean\}, androidx.core.view.NestedScrollingParent.onNestedFling(android.view.View, float, float, boolean):boolean, ClspMth\{android.view.ViewGroup.onNestedFling(android.view.View, float, float, boolean):boolean\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_21;
Node_19 -> Node_29[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_24 -> Node_25;
Node_29 -> Node_16;
Node_27 -> Node_16;
}

