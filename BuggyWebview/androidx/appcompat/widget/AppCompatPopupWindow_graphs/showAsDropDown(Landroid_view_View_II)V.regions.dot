digraph "CFG forandroidx.appcompat.widget.AppCompatPopupWindow.showAsDropDown(Landroid\/view\/View;II)V" {
subgraph cluster_Region_925662300 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_747146697 {
label = "IF [B:12:0x0002, B:14:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|if (androidx.appcompat.widget.AppCompatPopupWindow.COMPAT_OVERLAP_ANCHOR != false) goto L3\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|ADDED_TO_REGION\l|if (r1.mOverlapAnchor != false) goto L5\l}"];
subgraph cluster_Region_1043767075 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0008|r4 \-= r2.getHeight()\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x000d|PHI: r4 \l  PHI: (r4v1 'yoff' int) = (r4v0 'yoff' int), (r4v0 'yoff' int), (r4v2 'yoff' int) binds: [B:12:0x0002, B:14:0x0006, B:15:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|super.showAsDropDown(r2, r3, r4)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0004}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatPopupWindow.showAsDropDown((r1v0 'this' androidx.appcompat.widget.AppCompatPopupWindow A[IMMUTABLE_TYPE, THIS]), (r2v0 'anchor' android.view.View A[D('anchor' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'xoff' int A[D('xoff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'yoff' int A[D('yoff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:14:0x0006 \-\> B:16:0x000d, CROSS_EDGE: B:12:0x0002 \-\> B:16:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.widget.PopupWindow.showAsDropDown(android.view.View, int, int):void\}]\l}"];
MethodNode -> Node_9;Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_17 -> Node_10;
}

