digraph "CFG forandroidx.appcompat.widget.AppCompatPopupWindow.init(Landroid\/content\/Context;Landroid\/util\/AttributeSet;II)V" {
subgraph cluster_Region_539055253 {
label = "R(3:1|(1:3)|4)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray r0 = androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(r4, r5, androidx.appcompat.C0019R.styleable.PopupWindow, r6, r7)\l}"];
subgraph cluster_IfRegion_1208282431 {
label = "IF [B:10:0x000c] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000c|if (r0.hasValue(androidx.appcompat.C0019R.styleable.PopupWindow_overlapAnchor) != false) goto L3\l}"];
subgraph cluster_Region_1654075554 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000e|setSupportOverlapAnchor(r0.getBoolean(androidx.appcompat.C0019R.styleable.PopupWindow_overlapAnchor, false))\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0018|setBackgroundDrawable(r0.getDrawable(androidx.appcompat.C0019R.styleable.PopupWindow_android_popupBackground))\lr0.recycle()\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.AppCompatPopupWindow.init((r3v0 'this' androidx.appcompat.widget.AppCompatPopupWindow A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'defStyleAttr' int A[D('defStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'defStyleRes' int A[D('defStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000c \-\> B:12:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_7 -> Node_9;
Node_13 -> Node_8;
}

