digraph "CFG forandroidx.appcompat.widget.SuggestionsAdapter.changeCursor(Landroid\/database\/Cursor;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mClosed boolean  (LINE:215)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"SuggestionsAdapter\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"Tried to change cursor after adapter was closed.\"  (LINE:216)\l0x0008: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:?  (LINE:217)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.close():void A[MD:():void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\lORIG_RETURN\l|0x0010: RETURN    (LINE:218)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|0x0010: RETURN   A[SYNTHETIC] (LINE:218)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0047, blocks: (B:8:0x0011, B:10:0x0016), top: B:15:0x0011 \}\lCatch: Exception \-\> 0x0047\l|0x0011: INVOKE  \l  (r3 I:androidx.cursoradapter.widget.ResourceCursorAdapter)\l  (r4 I:android.database.Cursor A[D('c' android.database.Cursor)])\l type: SUPER call: androidx.cursoradapter.widget.ResourceCursorAdapter.changeCursor(android.database.Cursor):void A[Catch: Exception \-\> 0x0047, MD:(android.database.Cursor):void (m), TRY_ENTER] (LINE:222)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:?  (LINE:224)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0047, blocks: (B:8:0x0011, B:10:0x0016), top: B:15:0x0011 \}\lCatch: Exception \-\> 0x0047\l|0x0016: CONST_STR  (r0 I:java.lang.String) =  \"suggest_text_1\"  (LINE:225)\l0x0018: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x001c: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mText1Col int A[Catch: Exception \-\> 0x0047]\l0x001e: CONST_STR  (r0 I:java.lang.String) =  \"suggest_text_2\"  (LINE:226)\l0x0020: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x0024: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mText2Col int A[Catch: Exception \-\> 0x0047]\l0x0026: CONST_STR  (r0 I:java.lang.String) =  \"suggest_text_2_url\"  (LINE:227)\l0x0028: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x002c: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mText2UrlCol int A[Catch: Exception \-\> 0x0047]\l0x002e: CONST_STR  (r0 I:java.lang.String) =  \"suggest_icon_1\"  (LINE:228)\l0x0030: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x0034: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mIconName1Col int A[Catch: Exception \-\> 0x0047]\l0x0036: CONST_STR  (r0 I:java.lang.String) =  \"suggest_icon_2\"  (LINE:229)\l0x0038: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x003c: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mIconName2Col int A[Catch: Exception \-\> 0x0047]\l0x003e: CONST_STR  (r0 I:java.lang.String) =  \"suggest_flags\"  (LINE:230)\l0x0040: INVOKE  (r0 I:int) = (r4 I:android.database.Cursor A[D('c' android.database.Cursor)]), (r0 I:java.lang.String) type: INTERFACE call: android.database.Cursor.getColumnIndex(java.lang.String):int A[Catch: Exception \-\> 0x0047, MD:(java.lang.String):int (c)]\l0x0044: IPUT  (r0 I:int), (r3 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mFlagsCol int A[Catch: Exception \-\> 0x0047, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x004d: RETURN   A[SYNTHETIC] (LINE:235)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x004d: RETURN   A[SYNTHETIC] (LINE:235)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|ExcHandler: Exception \-\> 0x0047\l|0x0047: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0047] (LINE:232)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: CONST_STR  (r2 I:java.lang.String) =  \"error changing cursor and caching columns\"  (LINE:233)\l0x004a: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|RETURN\lORIG_RETURN\l|0x004d: RETURN    (LINE:235)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SuggestionsAdapter.changeCursor((r3 'this' I:androidx.appcompat.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:android.database.Cursor A[D('c' android.database.Cursor), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000b \-\> B:7:0x0010, CROSS_EDGE: B:14:0x004d \-\> B:1:?, CROSS_EDGE: B:13:0x0048 \-\> B:14:0x004d, CROSS_EDGE: B:9:0x0014 \-\> B:14:0x004d, CROSS_EDGE: B:15:0x0011 \-\> B:12:0x0047\lDebug Info:\l  0x0048\-0x004d: r0 'e' Ljava\/lang\/Exception;\l  \-1 \-0x004d: r4 'c' Landroid\/database\/Cursor;\lTryCatch #0 \{Exception \-\> 0x0047, blocks: (B:8:0x0011, B:10:0x0016), top: B:15:0x0011 \}\lMETHOD_OVERRIDE: [androidx.cursoradapter.widget.CursorFilter.CursorFilterClient.changeCursor(android.database.Cursor):void, androidx.cursoradapter.widget.CursorAdapter.changeCursor(android.database.Cursor):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_17 -> Node_1;
Node_15 -> Node_8;
Node_15 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_16;
Node_10 -> Node_18;
Node_16 -> Node_12;
Node_18 -> Node_1;
Node_19 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
}

