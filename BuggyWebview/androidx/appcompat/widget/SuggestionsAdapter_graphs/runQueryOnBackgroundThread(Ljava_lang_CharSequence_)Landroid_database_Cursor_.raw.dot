digraph "CFG forandroidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread(Ljava\/lang\/CharSequence;)Landroid\/database\/Cursor;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('constraint' java.lang.CharSequence)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0005  (LINE:144)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: CONST_STR  (r0 I:java.lang.String) =  \"\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:149)\l0x000a: IGET  (r2 I:androidx.appcompat.widget.SearchView) = (r6 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mSearchView androidx.appcompat.widget.SearchView  (LINE:150)\l0x000c: INVOKE  (r2 I:int) = (r2 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.getVisibility():int A[MD:():int (s)]\l0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0035 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IGET  (r2 I:androidx.appcompat.widget.SearchView) = (r6 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mSearchView androidx.appcompat.widget.SearchView \l0x0015: INVOKE  (r2 I:int) = (r2 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.getWindowVisibility():int A[MD:():int (s)] (LINE:151)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x001c \l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|TRY_ENTER\lTryCatch #0 \{RuntimeException \-\> 0x002c, blocks: (B:10:0x001c, B:12:0x0027), top: B:19:0x001c \}\lCatch: RuntimeException \-\> 0x002c\l|0x001c: IGET  (r2 I:android.app.SearchableInfo) = (r6 I:androidx.appcompat.widget.SuggestionsAdapter) androidx.appcompat.widget.SuggestionsAdapter.mSearchable android.app.SearchableInfo A[Catch: RuntimeException \-\> 0x002c, TRY_ENTER] (LINE:155)\l0x001e: CONST  (r4 I:??[int, float, short, byte, char]) = (50 ??[int, float, short, byte, char]) \l0x0020: INVOKE  (r2 I:android.database.Cursor) = \l  (r6 I:androidx.appcompat.widget.SuggestionsAdapter)\l  (r2 I:android.app.SearchableInfo)\l  (r0 I:java.lang.String A[D('query' java.lang.String)])\l  (r4 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.SuggestionsAdapter.getSearchManagerSuggestions(android.app.SearchableInfo, java.lang.String, int):android.database.Cursor A[Catch: RuntimeException \-\> 0x002c, MD:(android.app.SearchableInfo, java.lang.String, int):android.database.Cursor (m)]\l0x0024: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('cursor' android.database.Cursor)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cursor' android.database.Cursor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0034  (LINE:158)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|TRY_LEAVE\lTryCatch #0 \{RuntimeException \-\> 0x002c, blocks: (B:10:0x001c, B:12:0x0027), top: B:19:0x001c \}\lCatch: RuntimeException \-\> 0x002c\l|0x0027: INVOKE  (r1 I:android.database.Cursor A[D('cursor' android.database.Cursor)]) type: INTERFACE call: android.database.Cursor.getCount():int A[Catch: RuntimeException \-\> 0x002c, MD:():int (c), TRY_LEAVE] (LINE:159)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|RETURN\l|0x002a: RETURN  (r1 I:android.database.Cursor A[D('cursor' android.database.Cursor)])  (LINE:160)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|RETURN\l|0x0034: RETURN  (r3 I:android.database.Cursor)  (LINE:167)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|ExcHandler: RuntimeException \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r2 I:java.lang.RuntimeException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: RuntimeException \-\> 0x002c] (LINE:162)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: CONST_STR  (r4 I:java.lang.String) =  \"SuggestionsAdapter\"  (LINE:163)\l0x002f: CONST_STR  (r5 I:java.lang.String) =  \"Search suggestions query threw an exception.\" \l0x0031: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.RuntimeException)]) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|RETURN\l|0x0035: RETURN  (r3 I:android.database.Cursor)  (LINE:152)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: INVOKE  (r0 I:java.lang.String) = (r7 I:java.lang.CharSequence A[D('constraint' java.lang.CharSequence)]) type: INTERFACE call: java.lang.CharSequence.toString():java.lang.String A[MD:():java.lang.String (c)]\l}"];
MethodNode[shape=record,label="{public android.database.Cursor androidx.appcompat.widget.SuggestionsAdapter.runQueryOnBackgroundThread((r6 'this' I:androidx.appcompat.widget.SuggestionsAdapter A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.CharSequence A[D('constraint' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002a \-\> B:1:?, CROSS_EDGE: B:17:0x0034 \-\> B:1:?, CROSS_EDGE: B:11:0x0025 \-\> B:17:0x0034, CROSS_EDGE: B:19:0x001c \-\> B:15:0x002c, CROSS_EDGE: B:6:0x0011 \-\> B:18:0x0035, CROSS_EDGE: B:4:0x0005 \-\> B:5:0x0009\lDebug Info:\l  0x002d\-0x0034: r2 'e' Ljava\/lang\/RuntimeException;\l  0x0009\-0x0035: r0 'query' Ljava\/lang\/String;\l  0x000a\-0x0035: r1 'cursor' Landroid\/database\/Cursor;\l  \-1 \-0x0035: r7 'constraint' Ljava\/lang\/CharSequence;\lTryCatch #0 \{RuntimeException \-\> 0x002c, blocks: (B:10:0x001c, B:12:0x0027), top: B:19:0x001c \}\lMETHOD_OVERRIDE: [androidx.cursoradapter.widget.CursorFilter.CursorFilterClient.runQueryOnBackgroundThread(java.lang.CharSequence):android.database.Cursor, androidx.cursoradapter.widget.CursorAdapter.runQueryOnBackgroundThread(java.lang.CharSequence):android.database.Cursor]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_18[style=dashed];
Node_8 -> Node_19;
Node_19 -> Node_10;
Node_19 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_12 -> Node_20;
Node_13 -> Node_1;
Node_20 -> Node_15;
Node_17 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_1;
Node_4 -> Node_5;
}

