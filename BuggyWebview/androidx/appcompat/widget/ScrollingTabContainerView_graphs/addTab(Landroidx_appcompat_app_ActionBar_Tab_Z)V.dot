digraph "CFG forandroidx.appcompat.widget.ScrollingTabContainerView.addTab(Landroidx\/appcompat\/app\/ActionBar$Tab;Z)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|androidx.appcompat.widget.ScrollingTabContainerView$TabView r1 = createTabView(r7, false)\lr6.mTabLayout.addView(r1, new androidx.appcompat.widget.LinearLayoutCompat.LayoutParams(0, \-1, 1.0f))\landroid.widget.Spinner r0 = r6.mTabSpinner\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|if (r0 == null) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|((androidx.appcompat.widget.ScrollingTabContainerView.TabAdapter) r0.getAdapter()).notifyDataSetChanged()\l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|if (r8 == false) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0021|r1.setSelected(true)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025}"];
Node_20 [shape=record,label="{20\:\ 0x0027|if (r6.mAllowCollapse == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0029|requestLayout()\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|RETURN\lORIG_RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ScrollingTabContainerView.addTab((r6v0 'this' androidx.appcompat.widget.ScrollingTabContainerView A[IMMUTABLE_TYPE, THIS]), (r7v0 'tab' androidx.appcompat.app.ActionBar$Tab A[D('tab' androidx.appcompat.app.ActionBar$Tab), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'setSelected' boolean A[D('setSelected' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0027 \-\> B:22:0x002c, CROSS_EDGE: B:17:0x001f \-\> B:19:0x0025, CROSS_EDGE: B:15:0x0014 \-\> B:17:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

