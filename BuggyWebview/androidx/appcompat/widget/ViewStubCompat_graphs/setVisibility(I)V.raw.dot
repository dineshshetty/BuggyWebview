digraph "CFG forandroidx.appcompat.widget.ViewStubCompat.setVisibility(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<android.view.View\>) = (r3 I:androidx.appcompat.widget.ViewStubCompat) androidx.appcompat.widget.ViewStubCompat.mInflatedViewRef java.lang.ref.WeakReference  (LINE:175)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) type: VIRTUAL call: java.lang.ref.WeakReference.get():java.lang.Object A[MD:():T (c)] (LINE:176)\l0x0008: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0010  (LINE:177)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: INVOKE  (r0 I:android.view.View A[D('view' android.view.View)]), (r4 I:int A[D('visibility' int)]) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:178)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:188)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:180)\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"setVisibility called on un\-referenced view\" \l0x0014: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: INVOKE  (r3 I:android.view.View), (r4 I:int A[D('visibility' int)]) type: SUPER call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:183)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|0x001b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibility' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0020  (LINE:184)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d|0x001d: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibility' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0023: RETURN   A[SYNTHETIC] (LINE:188)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|0x0020: INVOKE  (r3 I:androidx.appcompat.widget.ViewStubCompat) type: VIRTUAL call: androidx.appcompat.widget.ViewStubCompat.inflate():android.view.View A[MD:():android.view.View (m)] (LINE:185)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\lORIG_RETURN\l|0x0023: RETURN    (LINE:188)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ViewStubCompat.setVisibility((r3 'this' I:androidx.appcompat.widget.ViewStubCompat A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x0017 \-\> B:18:?, CROSS_EDGE: B:30:0x0020 \-\> B:31:0x0023, CROSS_EDGE: B:29:0x001e \-\> B:31:0x0023, CROSS_EDGE: B:27:0x001b \-\> B:30:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x000f: r0 'view' Landroid\/view\/View;\l  0x0010\-0x0018: r0 'view' Landroid\/view\/View;\l  \-1 \-0x0023: r4 'visibility' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_32;
Node_32 -> Node_18;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_33 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

