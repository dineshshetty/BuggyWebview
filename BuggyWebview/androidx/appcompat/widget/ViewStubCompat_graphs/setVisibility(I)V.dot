digraph "CFG forandroidx.appcompat.widget.ViewStubCompat.setVisibility(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|java.lang.ref.WeakReference\<android.view.View\> r0 = r3.mInflatedViewRef\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|if (r0 == null) goto L10\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|android.view.View r0 = r0.get()\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|if (r0 == null) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|r0.setVisibility(r4)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010}"];
Node_25 [shape=record,label="{25\:\ 0x0017|throw new java.lang.IllegalStateException(\"setVisibility called on un\-referenced view\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|super.setVisibility(r4)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|if (r4 == 0) goto L15\l}"];
Node_28 [shape=record,label="{28\:\ 0x001d}"];
Node_29 [shape=record,label="{29\:\ 0x001e|if (r4 != 4) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|inflate()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ViewStubCompat.setVisibility((r3v0 'this' androidx.appcompat.widget.ViewStubCompat A[IMMUTABLE_TYPE, THIS]), (r4v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x0017 \-\> B:18:?, CROSS_EDGE: B:30:0x0020 \-\> B:31:0x0023, CROSS_EDGE: B:29:0x001e \-\> B:31:0x0023, CROSS_EDGE: B:27:0x001b \-\> B:30:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setVisibility(int):void\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_32;
Node_32 -> Node_18;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_33 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

