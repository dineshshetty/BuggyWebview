digraph "CFG forandroidx.appcompat.widget.AppCompatBackgroundHelper.applySupportBackgroundTint()V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) androidx.appcompat.widget.AppCompatBackgroundHelper.mView android.view.View  (LINE:123)\l0x0002: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('background' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:?  (LINE:124)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) type: DIRECT call: androidx.appcompat.widget.AppCompatBackgroundHelper.shouldApplyFrameworkTintUsingColorFilter():boolean A[MD:():boolean (m)] (LINE:125)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0015 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000e|0x000e: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper)\l  (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l type: DIRECT call: androidx.appcompat.widget.AppCompatBackgroundHelper.applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):boolean A[MD:(android.graphics.drawable.Drawable):boolean (m)] (LINE:126)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0015 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:129)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: IGET  (r1 I:androidx.appcompat.widget.TintInfo) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) androidx.appcompat.widget.AppCompatBackgroundHelper.mBackgroundTint androidx.appcompat.widget.TintInfo  (LINE:132)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0023 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0019|0x0019: IGET  (r2 I:android.view.View) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) androidx.appcompat.widget.AppCompatBackgroundHelper.mView android.view.View  (LINE:133)\l0x001b: INVOKE  (r2 I:int[]) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getDrawableState():int[] A[MD:():int[] (c)] (LINE:134)\l0x001f: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l  (r1 I:androidx.appcompat.widget.TintInfo)\l  (r2 I:int[])\l type: STATIC call: androidx.appcompat.widget.AppCompatDrawableManager.tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[]):void A[MD:(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[]):void (m)] (LINE:133)\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN   A[SYNTHETIC] (LINE:140)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|0x0023: IGET  (r1 I:androidx.appcompat.widget.TintInfo) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) androidx.appcompat.widget.AppCompatBackgroundHelper.mInternalBackgroundTint androidx.appcompat.widget.TintInfo  (LINE:135)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:? \l}"];
Node_33 [shape=record,label="{33\:\ 0x0027|0x0027: IGET  (r2 I:android.view.View) = (r3 I:androidx.appcompat.widget.AppCompatBackgroundHelper) androidx.appcompat.widget.AppCompatBackgroundHelper.mView android.view.View  (LINE:136)\l0x0029: INVOKE  (r2 I:int[]) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getDrawableState():int[] A[MD:():int[] (c)] (LINE:137)\l0x002d: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l  (r1 I:androidx.appcompat.widget.TintInfo)\l  (r2 I:int[])\l type: STATIC call: androidx.appcompat.widget.AppCompatDrawableManager.tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[]):void A[MD:(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[]):void (m)] (LINE:136)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: RETURN    (LINE:140)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN   A[SYNTHETIC] (LINE:140)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN   A[SYNTHETIC] (LINE:140)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatBackgroundHelper.applySupportBackgroundTint((r3 'this' I:androidx.appcompat.widget.AppCompatBackgroundHelper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0030 \-\> B:20:?, CROSS_EDGE: B:33:0x0027 \-\> B:34:0x0030, CROSS_EDGE: B:32:0x0025 \-\> B:34:0x0030, CROSS_EDGE: B:24:0x000c \-\> B:28:0x0015, CROSS_EDGE: B:22:0x0006 \-\> B:34:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0030: r0 'background' Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_20;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_36;
Node_36 -> Node_20;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_37 -> Node_20;
Node_35 -> Node_20;
}

