digraph "CFG forandroidx.appcompat.widget.ActivityChooserView.dismissPopup()Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r2 I:androidx.appcompat.widget.ActivityChooserView) type: VIRTUAL call: androidx.appcompat.widget.ActivityChooserView.isShowingPopup():boolean A[MD:():boolean (m)] (LINE:416)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:? \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: INVOKE  (r0 I:androidx.appcompat.widget.ListPopupWindow) = (r2 I:androidx.appcompat.widget.ActivityChooserView) type: VIRTUAL call: androidx.appcompat.widget.ActivityChooserView.getListPopupWindow():androidx.appcompat.widget.ListPopupWindow A[MD:():androidx.appcompat.widget.ListPopupWindow (m)] (LINE:417)\l0x000a: INVOKE  (r0 I:androidx.appcompat.widget.ListPopupWindow) type: VIRTUAL call: androidx.appcompat.widget.ListPopupWindow.dismiss():void A[MD:():void (m)]\l0x000d: INVOKE  (r0 I:android.view.ViewTreeObserver) = (r2 I:androidx.appcompat.widget.ActivityChooserView) type: VIRTUAL call: androidx.appcompat.widget.ActivityChooserView.getViewTreeObserver():android.view.ViewTreeObserver A[MD:():android.view.ViewTreeObserver (s)] (LINE:418)\l0x0011: INVOKE  (r1 I:boolean) = (r0 I:android.view.ViewTreeObserver A[D('viewTreeObserver' android.view.ViewTreeObserver)]) type: VIRTUAL call: android.view.ViewTreeObserver.isAlive():boolean A[MD:():boolean (c)] (LINE:419)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|0x0017: IGET  (r1 I:android.view.ViewTreeObserver$OnGlobalLayoutListener) = (r2 I:androidx.appcompat.widget.ActivityChooserView) androidx.appcompat.widget.ActivityChooserView.mOnGlobalLayoutListener android.view.ViewTreeObserver$OnGlobalLayoutListener  (LINE:420)\l0x0019: INVOKE  \l  (r0 I:android.view.ViewTreeObserver A[D('viewTreeObserver' android.view.ViewTreeObserver)])\l  (r1 I:android.view.ViewTreeObserver$OnGlobalLayoutListener)\l type: VIRTUAL call: android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener):void A[MD:(android.view.ViewTreeObserver$OnGlobalLayoutListener):void (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('viewTreeObserver' android.view.ViewTreeObserver)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:423)\l0x001d: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001c: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('viewTreeObserver' android.view.ViewTreeObserver)]) = (1 ??[boolean, int, float, short, byte, char]) A[SYNTHETIC] (LINE:423)\l0x001d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x001c: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('viewTreeObserver' android.view.ViewTreeObserver)]) = (1 ??[boolean, int, float, short, byte, char]) A[SYNTHETIC] (LINE:423)\l0x001d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.widget.ActivityChooserView.dismissPopup((r2 'this' I:androidx.appcompat.widget.ActivityChooserView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0015 \-\> B:18:0x001c, CROSS_EDGE: B:14:0x0004 \-\> B:18:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001c: r0 'viewTreeObserver' Landroid\/view\/ViewTreeObserver;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_20 -> Node_12;
}

