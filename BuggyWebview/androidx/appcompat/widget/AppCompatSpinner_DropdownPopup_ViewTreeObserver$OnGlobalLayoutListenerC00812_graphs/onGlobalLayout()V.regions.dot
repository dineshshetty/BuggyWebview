digraph "CFG forandroidx.appcompat.widget.AppCompatSpinner.DropdownPopup.2.onGlobalLayout()V" {
subgraph cluster_Region_505527004 {
label = "R(2:1|(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|androidx.appcompat.widget.AppCompatSpinner$DropdownPopup androidx.appcompat.widget.AppCompatSpinner.DropdownPopup r0 = androidx.appcompat.widget.AppCompatSpinner.DropdownPopup.this\l}"];
subgraph cluster_Region_236695938 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_613885048 {
label = "IF [B:11:0x0008] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r0.isVisibleToUser(androidx.appcompat.widget.AppCompatSpinner.this) == false) goto L3\l}"];
subgraph cluster_Region_608705214 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000a|androidx.appcompat.widget.AppCompatSpinner.DropdownPopup.this.dismiss()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_2075847892 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0010|androidx.appcompat.widget.AppCompatSpinner.DropdownPopup.this.computeContentWidth()\landroidx.appcompat.widget.AppCompatSpinner.DropdownPopup.super.show()\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x001a|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatSpinner.DropdownPopup.2.onGlobalLayout((r2v0 'this' androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0010 \-\> B:14:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewTreeObserver.OnGlobalLayoutListener.onGlobalLayout():void\}]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_8 -> Node_10;
Node_14 -> Node_9;
}

