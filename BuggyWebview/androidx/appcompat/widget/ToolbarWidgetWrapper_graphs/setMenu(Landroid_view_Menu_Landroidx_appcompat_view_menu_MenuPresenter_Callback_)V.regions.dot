digraph "CFG forandroidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(Landroid\/view\/Menu;Landroidx\/appcompat\/view\/menu\/MenuPresenter$Callback;)V" {
subgraph cluster_Region_768739290 {
label = "R(2:(1:3)|4)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1834417099 {
label = "IF [B:10:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0002|if (r3.mActionMenuPresenter == null) goto L3\l}"];
subgraph cluster_Region_843077628 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0004|androidx.appcompat.widget.ActionMenuPresenter androidx.appcompat.widget.ActionMenuPresenter r0 = new androidx.appcompat.widget.ActionMenuPresenter(r3.mToolbar.getContext())\lr3.mActionMenuPresenter = r0\lr0.setId(androidx.appcompat.C0019R.C0022id.action_menu_presenter)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0016|r3.mActionMenuPresenter.setCallback(r5)\lr3.mToolbar.setMenu((androidx.appcompat.view.menu.MenuBuilder) r4, r3.mActionMenuPresenter)\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0025}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu((r3v0 'this' androidx.appcompat.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS]), (r4v0 'menu' android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'cb' androidx.appcompat.view.menu.MenuPresenter$Callback A[D('cb' androidx.appcompat.view.menu.MenuPresenter$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.widget.DecorToolbar.setMenu(android.view.Menu, androidx.appcompat.view.menu.MenuPresenter$Callback):void]\l}"];
MethodNode -> Node_7;Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_13 -> Node_8;
}

