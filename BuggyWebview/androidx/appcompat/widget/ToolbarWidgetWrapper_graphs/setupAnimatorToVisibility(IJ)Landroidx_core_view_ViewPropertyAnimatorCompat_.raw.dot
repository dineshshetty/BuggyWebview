digraph "CFG forandroidx.appcompat.widget.ToolbarWidgetWrapper.setupAnimatorToVisibility(IJ)Landroidx\/core\/view\/ViewPropertyAnimatorCompat;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.Toolbar) = (r2 I:androidx.appcompat.widget.ToolbarWidgetWrapper) androidx.appcompat.widget.ToolbarWidgetWrapper.mToolbar androidx.appcompat.widget.Toolbar  (LINE:569)\l0x0002: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r0 I:android.view.View) type: STATIC call: androidx.core.view.ViewCompat.animate(android.view.View):androidx.core.view.ViewPropertyAnimatorCompat A[MD:(android.view.View):androidx.core.view.ViewPropertyAnimatorCompat (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('visibility' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000b  (LINE:570)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0008|0x0008: CONST  (r1 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r0 I:androidx.core.view.ViewPropertyAnimatorCompat), (r1 I:float) type: VIRTUAL call: androidx.core.view.ViewPropertyAnimatorCompat.alpha(float):androidx.core.view.ViewPropertyAnimatorCompat A[MD:(float):androidx.core.view.ViewPropertyAnimatorCompat (m)]\l0x0010: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r0 I:androidx.core.view.ViewPropertyAnimatorCompat), (r4 I:long A[D('duration' long)]) type: VIRTUAL call: androidx.core.view.ViewPropertyAnimatorCompat.setDuration(long):androidx.core.view.ViewPropertyAnimatorCompat A[MD:(long):androidx.core.view.ViewPropertyAnimatorCompat (m)] (LINE:571)\l0x0014: NEW_INSTANCE  (r1 I:androidx.appcompat.widget.ToolbarWidgetWrapper$2) =  androidx.appcompat.widget.ToolbarWidgetWrapper$2 \l0x0016: INVOKE  \l  (r1 I:androidx.appcompat.widget.ToolbarWidgetWrapper$2)\l  (r2 I:androidx.appcompat.widget.ToolbarWidgetWrapper)\l  (r3 I:int A[D('visibility' int)])\l type: DIRECT call: androidx.appcompat.widget.ToolbarWidgetWrapper.2.\<init\>(androidx.appcompat.widget.ToolbarWidgetWrapper, int):void A[MD:(androidx.appcompat.widget.ToolbarWidgetWrapper, int):void (m)]\l0x0019: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r0 I:androidx.core.view.ViewPropertyAnimatorCompat), (r1 I:androidx.core.view.ViewPropertyAnimatorListener) type: VIRTUAL call: androidx.core.view.ViewPropertyAnimatorCompat.setListener(androidx.core.view.ViewPropertyAnimatorListener):androidx.core.view.ViewPropertyAnimatorCompat A[MD:(androidx.core.view.ViewPropertyAnimatorListener):androidx.core.view.ViewPropertyAnimatorCompat (m)] (LINE:572)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat)  (LINE:569)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public androidx.core.view.ViewPropertyAnimatorCompat androidx.appcompat.widget.ToolbarWidgetWrapper.setupAnimatorToVisibility((r2 'this' I:androidx.appcompat.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('duration' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000b \-\> B:14:0x000c\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r3 'visibility' I\l  \-1 \-0x001d: r4 'duration' J\lMETHOD_OVERRIDE: [androidx.appcompat.widget.DecorToolbar.setupAnimatorToVisibility(int, long):androidx.core.view.ViewPropertyAnimatorCompat]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

