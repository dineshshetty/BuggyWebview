digraph "CFG forandroidx.appcompat.widget.ToolbarWidgetWrapper.animateToVisibility(I)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (200(0xc8, double:9.9E\-322) ??[long, double])  (LINE:559)\l0x0002: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat) = (r2 I:androidx.appcompat.widget.ToolbarWidgetWrapper), (r3 I:int A[D('visibility' int)]), (r0 I:long) type: VIRTUAL call: androidx.appcompat.widget.ToolbarWidgetWrapper.setupAnimatorToVisibility(int, long):androidx.core.view.ViewPropertyAnimatorCompat A[MD:(int, long):androidx.core.view.ViewPropertyAnimatorCompat (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('anim' androidx.core.view.ViewPropertyAnimatorCompat)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:?  (LINE:561)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|0x0008: INVOKE  (r0 I:androidx.core.view.ViewPropertyAnimatorCompat A[D('anim' androidx.core.view.ViewPropertyAnimatorCompat)]) type: VIRTUAL call: androidx.core.view.ViewPropertyAnimatorCompat.start():void A[MD:():void (m)] (LINE:562)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: RETURN    (LINE:564)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000b: RETURN   A[SYNTHETIC] (LINE:564)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ToolbarWidgetWrapper.animateToVisibility((r2 'this' I:androidx.appcompat.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0006 \-\> B:12:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x000b: r0 'anim' Landroidx\/core\/view\/ViewPropertyAnimatorCompat;\l  \-1 \-0x000b: r3 'visibility' I\lMETHOD_OVERRIDE: [androidx.appcompat.widget.DecorToolbar.animateToVisibility(int):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

