digraph "CFG forandroidx.appcompat.widget.ToolbarWidgetWrapper.setCustomView(Landroid\/view\/View;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|android.view.View r0 = r2.mCustomView\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r0 == null) goto L6\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004}"];
Node_20 [shape=record,label="{20\:\ 0x0008|if ((r2.mDisplayOpts & 16) == 0) goto L6\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|r2.mToolbar.removeView(r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|r2.mCustomView = r3\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r3 == null) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013}"];
Node_25 [shape=record,label="{25\:\ 0x0017|if ((r2.mDisplayOpts & 16) == 0) goto L13\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|r2.mToolbar.addView(r3)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ToolbarWidgetWrapper.setCustomView((r2v0 'this' androidx.appcompat.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS]), (r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0017 \-\> B:27:0x001e, CROSS_EDGE: B:23:0x0011 \-\> B:27:0x001e, CROSS_EDGE: B:20:0x0008 \-\> B:22:0x000f, CROSS_EDGE: B:18:0x0002 \-\> B:22:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.widget.DecorToolbar.setCustomView(android.view.View):void]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_29 -> Node_16;
Node_28 -> Node_16;
}

