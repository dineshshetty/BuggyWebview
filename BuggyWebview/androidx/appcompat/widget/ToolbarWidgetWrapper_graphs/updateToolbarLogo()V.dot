digraph "CFG forandroidx.appcompat.widget.ToolbarWidgetWrapper.updateToolbarLogo()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r0 = null\lint r1 = r3.mDisplayOpts\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|if ((r1 & 2) == 0) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007}"];
Node_19 [shape=record,label="{19\:\ 0x0009|if ((r1 & 1) == 0) goto L9\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|android.graphics.drawable.Drawable r1 = r3.mLogo\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|if (r1 == null) goto L7\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|android.graphics.drawable.Drawable r1 = r3.mIcon\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|PHI: r1 \l  PHI: (r1v4 android.graphics.drawable.Drawable) = (r1v3 android.graphics.drawable.Drawable), (r1v5 android.graphics.drawable.Drawable) binds: [B:21:0x000d, B:23:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|android.graphics.drawable.Drawable r0 = r3.mIcon\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|PHI: r0 \l  PHI: (r0v1 'logo' android.graphics.drawable.Drawable) = (r0v0 'logo' android.graphics.drawable.Drawable), (r0v2 'logo' android.graphics.drawable.Drawable), (r0v3 'logo' android.graphics.drawable.Drawable) binds: [B:17:0x0005, B:25:0x0014, B:24:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r3.mToolbar.setLogo(r0)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ToolbarWidgetWrapper.updateToolbarLogo((r3v0 'this' androidx.appcompat.widget.ToolbarWidgetWrapper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x000d \-\> B:24:0x0012, CROSS_EDGE: B:25:0x0014 \-\> B:26:0x0016, CROSS_EDGE: B:17:0x0005 \-\> B:26:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

