digraph "CFG forandroidx.appcompat.widget.AppCompatSeekBarHelper.drawTickMarks(Landroid\/graphics\/Canvas;)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mTickMark android.graphics.drawable.Drawable  (LINE:165)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:? \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IGET  (r0 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar  (LINE:166)\l0x0006: INVOKE  (r0 I:int) = (r0 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getMax():int A[MD:():int (s)]\l0x000a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:167)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('count' int)]) \<= (r1 I:??[int, byte, short, char])  \-\> B:39:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: IGET  (r2 I:android.graphics.drawable.Drawable) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mTickMark android.graphics.drawable.Drawable  (LINE:168)\l0x000f: INVOKE  (r2 I:int) = (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x0013: IGET  (r3 I:android.graphics.drawable.Drawable) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mTickMark android.graphics.drawable.Drawable  (LINE:169)\l0x0015: INVOKE  (r3 I:int) = (r3 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0019|0x0019: IF  (r2 I:??[int, byte, short, char] A[D('w' int)]) \< (0 ??[int, byte, short, char])  \-\> B:29:0x001e  (LINE:170)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|0x001b: ARITH  (r4 I:int) = (r2 I:int A[D('w' int)]) \/ (2 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: IF  (r3 I:??[int, byte, short, char] A[D('h' int)]) \< (0 ??[int, byte, short, char])  \-\> B:32:0x0023  (LINE:171)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: ARITH  (r1 I:int) = (r3 I:int A[D('h' int)]) \/ (2 int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|0x0023: IGET  (r5 I:android.graphics.drawable.Drawable) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mTickMark android.graphics.drawable.Drawable  (LINE:172)\l0x0025: NEG  (r6 I:int) = (r4 I:int A[D('halfW' int)]) \l0x0026: NEG  (r7 I:int) = (r1 I:int A[D('halfH' int)]) \l0x0027: INVOKE  \l  (r5 I:android.graphics.drawable.Drawable)\l  (r6 I:int)\l  (r7 I:int)\l  (r4 I:int A[D('halfW' int)])\l  (r1 I:int A[D('halfH' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x002a: IGET  (r5 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar  (LINE:174)\l0x002c: INVOKE  (r5 I:int) = (r5 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getWidth():int A[MD:():int (s)]\l0x0030: IGET  (r6 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar \l0x0032: INVOKE  (r6 I:int) = (r6 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getPaddingLeft():int A[MD:():int (s)]\l0x0036: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x0037: IGET  (r6 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar \l0x0039: INVOKE  (r6 I:int) = (r6 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getPaddingRight():int A[MD:():int (s)] (LINE:175)\l0x003d: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x003e: CAST (r5 I:float) = (float) (r5 I:int) \l0x003f: CAST (r6 I:float) = (float) (r0 I:int A[D('count' int)]) \l0x0040: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0041: INVOKE  (r6 I:int) = (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:176)\l0x0045: IGET  (r7 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar  (LINE:177)\l0x0047: INVOKE  (r7 I:int) = (r7 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getPaddingLeft():int A[MD:():int (s)]\l0x004b: CAST (r7 I:float) = (float) (r7 I:int) \l0x004c: IGET  (r8 I:android.widget.SeekBar) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mView android.widget.SeekBar \l0x004e: INVOKE  (r8 I:int) = (r8 I:android.widget.SeekBar) type: VIRTUAL call: android.widget.SeekBar.getHeight():int A[MD:():int (s)]\l0x0052: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0054: CAST (r8 I:float) = (float) (r8 I:int) \l0x0055: INVOKE  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r7 I:float), (r8 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0058: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:178)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0059|LOOP_START\lLOOP:0: B:33:0x0059\-\>B:34:0x005b\l|0x0059: IF  (r7 I:??[int, byte, short, char] A[D('i' int)]) \> (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:37:0x0067 \l}"];
Node_34 [shape=record,label="{34\:\ 0x005b|LOOP_END\lLOOP:0: B:33:0x0059\-\>B:34:0x005b\l|0x005b: IGET  (r8 I:android.graphics.drawable.Drawable) = (r9 I:androidx.appcompat.widget.AppCompatSeekBarHelper) androidx.appcompat.widget.AppCompatSeekBarHelper.mTickMark android.graphics.drawable.Drawable  (LINE:179)\l0x005d: INVOKE  (r8 I:android.graphics.drawable.Drawable), (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l0x0060: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:180)\l0x0061: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r5 I:float A[D('spacing' float)])\l  (r8 I:float)\l type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0064: ARITH  (r7 I:int) = (r7 I:int A[D('i' int)]) + (1 int)  (LINE:178)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0067|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0067|0x0067: INVOKE  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]), (r6 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:182)\l}"];
Node_36 [shape=record,label="{36\:\ 0x006a|RETURN\lORIG_RETURN\l|0x006a: RETURN    (LINE:185)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x001e|0x001e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x006a: RETURN   A[SYNTHETIC] (LINE:185)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x006a: RETURN   A[SYNTHETIC] (LINE:185)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.AppCompatSeekBarHelper.drawTickMarks((r9 'this' I:androidx.appcompat.widget.AppCompatSeekBarHelper A[IMMUTABLE_TYPE, THIS]), (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x005b \-\> B:33:0x0059, CROSS_EDGE: B:30:0x001f \-\> B:32:0x0023, CROSS_EDGE: B:29:0x001e \-\> B:30:0x001f, CROSS_EDGE: B:25:0x000b \-\> B:36:0x006a, CROSS_EDGE: B:23:0x0002 \-\> B:36:0x006a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0059\-0x0067: r7 'i' I\l  0x000a\-0x006a: r0 'count' I\l  0x0023\-0x006a: r1 'halfH' I\l  0x0013\-0x006a: r2 'w' I\l  0x0019\-0x006a: r3 'h' I\l  0x001f\-0x006a: r4 'halfW' I\l  0x0041\-0x006a: r5 'spacing' F\l  0x0045\-0x006a: r6 'saveCount' I\l  \-1 \-0x006a: r10 'canvas' Landroid\/graphics\/Canvas;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_38;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_39;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_33;
Node_37 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_21;
Node_29 -> Node_30;
Node_39 -> Node_21;
Node_38 -> Node_21;
}

