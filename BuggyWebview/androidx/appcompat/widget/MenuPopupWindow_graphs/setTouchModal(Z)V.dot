digraph "CFG forandroidx.appcompat.widget.MenuPopupWindow.setTouchModal(Z)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \> 28) goto L14\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|java.lang.reflect.Method r0 = androidx.appcompat.widget.MenuPopupWindow.sSetTouchModalMethod\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|if (r0 == null) goto L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x001a, blocks: (B:24:0x000a), top: B:31:0x000a \}\lCatch: Exception \-\> 0x001a\l|r0.invoke(r5.mPopup, new java.lang.Object[]\{java.lang.Boolean.valueOf(r6)\})     \/\/ Catch: java.lang.Exception \-\> L1a\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|ExcHandler: Exception \-\> 0x001a\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|android.util.Log.i(androidx.appcompat.widget.MenuPopupWindow.TAG, \"Could not invoke setTouchModal() on PopupWindow. Oh well.\")\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0023|androidx.appcompat.widget.MenuPopupWindow.Api29Impl.setTouchModal(r5.mPopup, r6)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.MenuPopupWindow.setTouchModal((r5v0 'this' androidx.appcompat.widget.MenuPopupWindow A[IMMUTABLE_TYPE, THIS]), (r6v0 'touchModal' boolean A[D('touchModal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x000a \-\> B:30:0x0028, CROSS_EDGE: B:27:0x001b \-\> B:30:0x0028, CROSS_EDGE: B:31:0x000a \-\> B:26:0x001a, CROSS_EDGE: B:29:0x0023 \-\> B:30:0x0028\lINLINE_NOT_NEEDED\lTryCatch #0 \{Exception \-\> 0x001a, blocks: (B:24:0x000a), top: B:31:0x000a \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_31[style=dashed];
Node_23 -> Node_33;
Node_31 -> Node_24;
Node_31 -> Node_26;
Node_24 -> Node_32;
Node_24 -> Node_35;
Node_32 -> Node_26;
Node_35 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_34;
Node_34 -> Node_19;
Node_33 -> Node_19;
Node_29 -> Node_30;
Node_30 -> Node_19;
}

