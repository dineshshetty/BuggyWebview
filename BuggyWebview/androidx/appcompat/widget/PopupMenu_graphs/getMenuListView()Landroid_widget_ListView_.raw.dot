digraph "CFG forandroidx.appcompat.widget.PopupMenu.getMenuListView()Landroid\/widget\/ListView;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.view.menu.MenuPopupHelper) = (r1 I:androidx.appcompat.widget.PopupMenu) androidx.appcompat.widget.PopupMenu.mPopup androidx.appcompat.view.menu.MenuPopupHelper  (LINE:319)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.appcompat.view.menu.MenuPopupHelper) type: VIRTUAL call: androidx.appcompat.view.menu.MenuPopupHelper.isShowing():boolean A[MD:():boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|0x0008: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:320)\l0x0009: RETURN  (r0 I:android.widget.ListView) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: IGET  (r0 I:androidx.appcompat.view.menu.MenuPopupHelper) = (r1 I:androidx.appcompat.widget.PopupMenu) androidx.appcompat.widget.PopupMenu.mPopup androidx.appcompat.view.menu.MenuPopupHelper  (LINE:322)\l0x000c: INVOKE  (r0 I:android.widget.ListView) = (r0 I:androidx.appcompat.view.menu.MenuPopupHelper) type: VIRTUAL call: androidx.appcompat.view.menu.MenuPopupHelper.getListView():android.widget.ListView A[MD:():android.widget.ListView (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:android.widget.ListView) \l}"];
MethodNode[shape=record,label="{android.widget.ListView androidx.appcompat.widget.PopupMenu.getMenuListView((r1 'this' I:androidx.appcompat.widget.PopupMenu A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0010 \-\> B:1:?\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

