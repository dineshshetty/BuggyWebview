digraph "CFG forandroidx.appcompat.widget.ActivityChooserView.ActivityChooserViewAdapter.getCount()I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|int r0 = r3.mDataModel.getActivityCount()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|if (r3.mShowDefaultActivity != false) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a}"];
Node_17 [shape=record,label="{17\:\ 0x0010|if (r3.mDataModel.getDefaultActivity() == null) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|int r0 = r0 + (\-1)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|PHI: r0 \l  PHI: (r0v2 'activityCount' int) = (r0v1 'activityCount' int), (r0v1 'activityCount' int), (r0v3 'activityCount' int) binds: [B:15:0x0008, B:17:0x0010, B:18:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = java.lang.Math.min(r0, r3.mMaxActivityCount)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001c|if (r3.mShowFooterView == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x001e}"];
Node_22 [shape=record,label="{22\:\ 0x0020|RETURN\lORIG_RETURN\l|return r1 + 1\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.widget.ActivityChooserView.ActivityChooserViewAdapter.getCount((r3v0 'this' androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:20:0x001c \-\> B:22:0x0020, CROSS_EDGE: B:17:0x0010 \-\> B:19:0x0014, CROSS_EDGE: B:15:0x0008 \-\> B:19:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.widget.Adapter.getCount():int\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

