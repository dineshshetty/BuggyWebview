digraph "CFG forandroidx.appcompat.widget.TintTypedArray.getColorStateList(I)Landroid\/content\/res\/ColorStateList;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.TypedArray) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:175)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IGET  (r0 I:android.content.res.TypedArray) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:176)\l0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:int) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resourceId' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a  (LINE:177)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: IGET  (r1 I:android.content.Context) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mContext android.content.Context  (LINE:178)\l0x0013: INVOKE  (r1 I:android.content.res.ColorStateList) = (r1 I:android.content.Context), (r0 I:int A[D('resourceId' int)]) type: STATIC call: androidx.appcompat.content.res.AppCompatResources.getColorStateList(android.content.Context, int):android.content.res.ColorStateList A[MD:(android.content.Context, int):android.content.res.ColorStateList (m)] (LINE:179)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a  (LINE:180)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:android.content.res.ColorStateList A[D('value' android.content.res.ColorStateList)])  (LINE:181)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: IGET  (r0 I:android.content.res.TypedArray A[D('resourceId' int)]) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:185)\l0x001c: INVOKE  (r0 I:android.content.res.ColorStateList) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]) type: VIRTUAL call: android.content.res.TypedArray.getColorStateList(int):android.content.res.ColorStateList A[MD:(int):android.content.res.ColorStateList (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|RETURN\l|0x0020: RETURN  (r0 I:android.content.res.ColorStateList) \l}"];
MethodNode[shape=record,label="{public android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList((r2 'this' I:androidx.appcompat.widget.TintTypedArray A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0020 \-\> B:12:?, CROSS_EDGE: B:16:0x000f \-\> B:20:0x001a, CROSS_EDGE: B:14:0x0006 \-\> B:20:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x001a: r0 'resourceId' I\l  0x0017\-0x001a: r1 'value' Landroid\/content\/res\/ColorStateList;\l  \-1 \-0x0020: r3 'index' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

