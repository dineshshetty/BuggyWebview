digraph "CFG forandroidx.appcompat.widget.TintTypedArray.getDrawableIfKnown(I)Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_1708782753 {
label = "R(1:(2:(1:6)|(1:8))) | DECL_VAR: int resourceId\l";
node [shape=record,color=blue];
subgraph cluster_Region_676503839 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_547395512 {
label = "IF [B:14:0x0006, B:16:0x000f] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|if (r4.mWrapped.hasValue(r5) != false) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|ADDED_TO_REGION\l|if ((r0 = r4.mWrapped.getResourceId(r5, 0)) != 0) goto L5\l}"];
subgraph cluster_Region_1949851639 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001c|RETURN\l|return androidx.appcompat.widget.AppCompatDrawableManager.get().getDrawable(r4.mContext, r0, true)\l}"];
}
}
subgraph cluster_Region_1592709421 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0008}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0011}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x001d|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return null\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawableIfKnown((r4v0 'this' androidx.appcompat.widget.TintTypedArray A[IMMUTABLE_TYPE, THIS]), (r5v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x001e \-\> B:12:?, CROSS_EDGE: B:14:0x0006 \-\> B:19:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_12;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_12;
}

