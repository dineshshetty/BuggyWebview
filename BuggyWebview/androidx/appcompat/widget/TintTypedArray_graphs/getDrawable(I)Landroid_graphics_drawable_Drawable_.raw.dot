digraph "CFG forandroidx.appcompat.widget.TintTypedArray.getDrawable(I)Landroid\/graphics\/drawable\/Drawable;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.TypedArray) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:81)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0018 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: IGET  (r0 I:android.content.res.TypedArray) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:82)\l0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:int) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.getResourceId(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resourceId' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0018  (LINE:83)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0011|0x0011: IGET  (r1 I:android.content.Context) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mContext android.content.Context  (LINE:84)\l0x0013: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r1 I:android.content.Context), (r0 I:int A[D('resourceId' int)]) type: STATIC call: androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|RETURN\l|0x0017: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0018|0x0018: IGET  (r0 I:android.content.res.TypedArray A[D('resourceId' int)]) = (r2 I:androidx.appcompat.widget.TintTypedArray) androidx.appcompat.widget.TintTypedArray.mWrapped android.content.res.TypedArray  (LINE:87)\l0x001a: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.content.res.TypedArray), (r3 I:int A[D('index' int)]) type: VIRTUAL call: android.content.res.TypedArray.getDrawable(int):android.graphics.drawable.Drawable A[MD:(int):android.graphics.drawable.Drawable (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|RETURN\l|0x001e: RETURN  (r0 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable((r2 'this' I:androidx.appcompat.widget.TintTypedArray A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001e \-\> B:11:?, CROSS_EDGE: B:13:0x0006 \-\> B:18:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x0018: r0 'resourceId' I\l  \-1 \-0x001e: r3 'index' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

