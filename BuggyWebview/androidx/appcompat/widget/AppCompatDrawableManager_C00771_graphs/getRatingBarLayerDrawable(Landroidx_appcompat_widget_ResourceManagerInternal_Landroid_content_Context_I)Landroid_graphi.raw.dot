digraph "CFG forandroidx.appcompat.widget.AppCompatDrawableManager.1.getRatingBarLayerDrawable(Landroidx\/appcompat\/widget\/ResourceManagerInternal;Landroid\/content\/Context;I)Landroid\/graphics\/drawable\/LayerDrawable;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: INVOKE  (r0 I:android.content.res.Resources) = (r13 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[MD:():android.content.res.Resources (c)] (LINE:260)\l0x0004: INVOKE  (r0 I:int) = (r0 I:android.content.res.Resources), (r14 I:int A[D('dimenResId' int)]) type: VIRTUAL call: android.content.res.Resources.getDimensionPixelSize(int):int A[MD:(int):int throws android.content.res.Resources$NotFoundException (c)]\l0x0008: SGET  (r1 I:int) =  androidx.appcompat.R.drawable.abc_star_black_48dp int  (LINE:262)\l0x000a: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r12 I:androidx.appcompat.widget.ResourceManagerInternal A[D('resourceManager' androidx.appcompat.widget.ResourceManagerInternal)])\l  (r13 I:android.content.Context A[D('context' android.content.Context)])\l  (r1 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l0x000e: SGET  (r2 I:int) =  androidx.appcompat.R.drawable.abc_star_half_black_48dp int  (LINE:264)\l0x0010: INVOKE  (r2 I:android.graphics.drawable.Drawable) = \l  (r12 I:androidx.appcompat.widget.ResourceManagerInternal A[D('resourceManager' androidx.appcompat.widget.ResourceManagerInternal)])\l  (r13 I:android.content.Context A[D('context' android.content.Context)])\l  (r2 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.ResourceManagerInternal.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l0x0014: INSTANCE_OF  (r3 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('star' android.graphics.drawable.Drawable)]) android.graphics.drawable.BitmapDrawable  (LINE:269)\l0x0016: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0032 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|0x0019: INVOKE  (r3 I:int) = (r1 I:android.graphics.drawable.Drawable A[D('star' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('starSize' int)])  \-\> B:29:0x0032 \l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: INVOKE  (r3 I:int) = (r1 I:android.graphics.drawable.Drawable A[D('star' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)] (LINE:270)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('starSize' int)])  \-\> B:29:0x0032 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('star' android.graphics.drawable.Drawable)])  (LINE:272)\l0x0026: CHECK_CAST (r3 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r3 I:??[OBJECT, ARRAY]) \l0x0028: NEW_INSTANCE  (r5 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable  (LINE:274)\l0x002a: INVOKE  (r6 I:android.graphics.Bitmap) = (r3 I:android.graphics.drawable.BitmapDrawable A[D('starBitmapDrawable' android.graphics.drawable.BitmapDrawable)]) type: VIRTUAL call: android.graphics.drawable.BitmapDrawable.getBitmap():android.graphics.Bitmap A[MD:():android.graphics.Bitmap (c)] (LINE:275)\l0x002e: INVOKE  (r5 I:android.graphics.drawable.BitmapDrawable), (r6 I:android.graphics.Bitmap) type: DIRECT call: android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x004f|0x004f: SGET  (r6 I:android.graphics.Shader$TileMode A[D('starBitmapDrawable' android.graphics.drawable.BitmapDrawable)]) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode  (LINE:286)\l0x0051: INVOKE  \l  (r5 I:android.graphics.drawable.BitmapDrawable A[D('tiledStarBitmapDrawable' android.graphics.drawable.BitmapDrawable)])\l  (r6 I:android.graphics.Shader$TileMode)\l type: VIRTUAL call: android.graphics.drawable.BitmapDrawable.setTileModeX(android.graphics.Shader$TileMode):void A[MD:(android.graphics.Shader$TileMode):void (c)]\l0x0054: INSTANCE_OF  (r6 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('halfStar' android.graphics.drawable.Drawable)]) android.graphics.drawable.BitmapDrawable  (LINE:289)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0056|0x0056: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0068 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0058|0x0058: INVOKE  (r6 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('halfStar' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)] (LINE:290)\l}"];
Node_33 [shape=record,label="{33\:\ 0x005c|0x005c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('starSize' int)])  \-\> B:37:0x0068 \l}"];
Node_34 [shape=record,label="{34\:\ 0x005e|0x005e: INVOKE  (r6 I:int) = (r2 I:android.graphics.drawable.Drawable A[D('halfStar' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)] (LINE:291)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0062|0x0062: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('starSize' int)])  \-\> B:37:0x0068 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0064|0x0064: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('halfStar' android.graphics.drawable.Drawable)])  (LINE:293)\l0x0065: CHECK_CAST (r6 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r6 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x007f|0x007f: NEW_INSTANCE  (r7 I:android.graphics.drawable.LayerDrawable A[D('canvasHalfStar' android.graphics.Canvas)]) =  android.graphics.drawable.LayerDrawable  (LINE:303)\l0x0081: CONST  (r8 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0082: NEW_ARRAY  (r8 I:android.graphics.drawable.Drawable[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: android.graphics.drawable.Drawable[] \l0x0084: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r3 I:??[OBJECT, ARRAY] A[D('starBitmapDrawable' android.graphics.drawable.BitmapDrawable)])\l \l0x0086: CONST  (r9 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0087: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r9 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('halfStarBitmapDrawable' android.graphics.drawable.BitmapDrawable)])\l \l0x0089: CONST  (r10 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x008a: APUT  \l  (r8 I:??[OBJECT, ARRAY][])\l  (r10 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('tiledStarBitmapDrawable' android.graphics.drawable.BitmapDrawable)])\l \l0x008c: INVOKE  (r7 I:android.graphics.drawable.LayerDrawable), (r8 I:android.graphics.drawable.Drawable[]) type: DIRECT call: android.graphics.drawable.LayerDrawable.\<init\>(android.graphics.drawable.Drawable[]):void A[MD:(android.graphics.drawable.Drawable[]):void (c)]\l0x008f: CONST  (r8 I:??[int, float, short, byte, char]) = (16908288(0x1020000, float:2.387723E\-38) ??[int, float, short, byte, char])  (LINE:306)\l0x0091: INVOKE  \l  (r7 I:android.graphics.drawable.LayerDrawable A[D('result' android.graphics.drawable.LayerDrawable)])\l  (r4 I:int)\l  (r8 I:int)\l type: VIRTUAL call: android.graphics.drawable.LayerDrawable.setId(int, int):void A[MD:(int, int):void (c)]\l0x0094: CONST  (r4 I:??[int, float, short, byte, char]) = (16908303(0x102000f, float:2.387727E\-38) ??[int, float, short, byte, char])  (LINE:307)\l0x0097: INVOKE  \l  (r7 I:android.graphics.drawable.LayerDrawable A[D('result' android.graphics.drawable.LayerDrawable)])\l  (r9 I:int)\l  (r4 I:int)\l type: VIRTUAL call: android.graphics.drawable.LayerDrawable.setId(int, int):void A[MD:(int, int):void (c)]\l0x009a: CONST  (r4 I:??[int, float, short, byte, char]) = (16908301(0x102000d, float:2.3877265E\-38) ??[int, float, short, byte, char])  (LINE:308)\l0x009d: INVOKE  \l  (r7 I:android.graphics.drawable.LayerDrawable A[D('result' android.graphics.drawable.LayerDrawable)])\l  (r10 I:int)\l  (r4 I:int)\l type: VIRTUAL call: android.graphics.drawable.LayerDrawable.setId(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00a0|RETURN\l|0x00a0: RETURN  (r7 I:android.graphics.drawable.LayerDrawable A[D('result' android.graphics.drawable.LayerDrawable)])  (LINE:309)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0068|0x0068: SGET  (r6 I:android.graphics.Bitmap$Config A[D('halfStarBitmapDrawable' android.graphics.drawable.BitmapDrawable)]) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:295)\l0x006a: INVOKE  (r6 I:android.graphics.Bitmap) = (r0 I:int A[D('starSize' int)]), (r0 I:int A[D('starSize' int)]), (r6 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x006e: NEW_INSTANCE  (r7 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:297)\l0x0070: INVOKE  (r7 I:android.graphics.Canvas), (r6 I:android.graphics.Bitmap A[D('bitmapHalfStar' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x0073: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('halfStar' android.graphics.drawable.Drawable)])\l  (r4 I:int)\l  (r4 I:int)\l  (r0 I:int A[D('starSize' int)])\l  (r0 I:int A[D('starSize' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:298)\l0x0076: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('halfStar' android.graphics.drawable.Drawable)])\l  (r7 I:android.graphics.Canvas A[D('canvasHalfStar' android.graphics.Canvas)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:299)\l0x0079: NEW_INSTANCE  (r8 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable  (LINE:300)\l0x007b: INVOKE  \l  (r8 I:android.graphics.drawable.BitmapDrawable)\l  (r6 I:android.graphics.Bitmap A[D('bitmapHalfStar' android.graphics.Bitmap)])\l type: DIRECT call: android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x007e: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('bitmapHalfStar' android.graphics.Bitmap)]) = (r8 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0032|0x0032: SGET  (r3 I:android.graphics.Bitmap$Config A[D('starBitmapDrawable' android.graphics.drawable.BitmapDrawable)]) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:277)\l0x0034: INVOKE  (r3 I:android.graphics.Bitmap) = (r0 I:int A[D('starSize' int)]), (r0 I:int A[D('starSize' int)]), (r3 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x0038: NEW_INSTANCE  (r5 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:279)\l0x003a: INVOKE  (r5 I:android.graphics.Canvas), (r3 I:android.graphics.Bitmap A[D('bitmapStar' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x003d: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable A[D('star' android.graphics.drawable.Drawable)])\l  (r4 I:int)\l  (r4 I:int)\l  (r0 I:int A[D('starSize' int)])\l  (r0 I:int A[D('starSize' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:280)\l0x0040: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable A[D('star' android.graphics.drawable.Drawable)])\l  (r5 I:android.graphics.Canvas A[D('canvasStar' android.graphics.Canvas)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:281)\l0x0043: NEW_INSTANCE  (r6 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable  (LINE:282)\l0x0045: INVOKE  \l  (r6 I:android.graphics.drawable.BitmapDrawable)\l  (r3 I:android.graphics.Bitmap A[D('bitmapStar' android.graphics.Bitmap)])\l type: DIRECT call: android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x0048: NEW_INSTANCE  (r7 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable  (LINE:284)\l0x004a: INVOKE  \l  (r7 I:android.graphics.drawable.BitmapDrawable)\l  (r3 I:android.graphics.Bitmap A[D('bitmapStar' android.graphics.Bitmap)])\l type: DIRECT call: android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x004d: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('bitmapStar' android.graphics.Bitmap)]) = (r6 I:??[OBJECT, ARRAY] A[D('starBitmapDrawable' android.graphics.drawable.BitmapDrawable)]) \l0x004e: MOVE  (r5 I:??[OBJECT, ARRAY] A[D('canvasStar' android.graphics.Canvas)]) = (r7 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private android.graphics.drawable.LayerDrawable androidx.appcompat.widget.AppCompatDrawableManager.1.getRatingBarLayerDrawable((r11 'this' I:androidx.appcompat.widget.AppCompatDrawableManager$1 A[IMMUTABLE_TYPE, THIS]), (r12 I:androidx.appcompat.widget.ResourceManagerInternal A[D('resourceManager' androidx.appcompat.widget.ResourceManagerInternal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('dimenResId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0068 \-\> B:38:0x007f, CROSS_EDGE: B:33:0x005c \-\> B:37:0x0068, CROSS_EDGE: B:31:0x0056 \-\> B:37:0x0068, CROSS_EDGE: B:29:0x0032 \-\> B:30:0x004f, CROSS_EDGE: B:25:0x001d \-\> B:29:0x0032, CROSS_EDGE: B:23:0x0017 \-\> B:29:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0032: r3 'starBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x0031\-0x0032: r5 'tiledStarBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x0048\-0x004f: r6 'starBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x0038\-0x004f: r3 'bitmapStar' Landroid\/graphics\/Bitmap;\l  0x003d\-0x004f: r5 'canvasStar' Landroid\/graphics\/Canvas;\l  0x0067\-0x0068: r6 'halfStarBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x0073\-0x007f: r7 'canvasHalfStar' Landroid\/graphics\/Canvas;\l  0x006e\-0x007f: r6 'bitmapHalfStar' Landroid\/graphics\/Bitmap;\l  0x0008\-0x00a0: r0 'starSize' I\l  0x000e\-0x00a0: r1 'star' Landroid\/graphics\/drawable\/Drawable;\l  0x0014\-0x00a0: r2 'halfStar' Landroid\/graphics\/drawable\/Drawable;\l  0x004f\-0x00a0: r3 'starBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x004f\-0x00a0: r5 'tiledStarBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x007f\-0x00a0: r6 'halfStarBitmapDrawable' Landroid\/graphics\/drawable\/BitmapDrawable;\l  0x008f\-0x00a0: r7 'result' Landroid\/graphics\/drawable\/LayerDrawable;\l  \-1 \-0x00a0: r12 'resourceManager' Landroidx\/appcompat\/widget\/ResourceManagerInternal;\l  \-1 \-0x00a0: r13 'context' Landroid\/content\/Context;\l  \-1 \-0x00a0: r14 'dimenResId' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_21;
Node_37 -> Node_38;
Node_29 -> Node_30;
}

