digraph "CFG forandroidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.setFrame(IIII)Z" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r14 I:androidx.appcompat.widget.AppCompatImageView)\l  (r15 I:int A[D('l' int)])\l  (r16 I:int A[D('t' int)])\l  (r17 I:int A[D('r' int)])\l  (r18 I:int A[D('b' int)])\l type: SUPER call: androidx.appcompat.widget.AppCompatImageView.setFrame(int, int, int, int):boolean A[MD:(int, int, int, int):boolean (c)] (LINE:692)\l0x0004: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:695)\l0x0008: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:696)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('d' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043  (LINE:697)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bg' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: INVOKE  (r3 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getWidth():int A[MD:():int (s)] (LINE:698)\l0x0014: INVOKE  (r4 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getHeight():int A[MD:():int (s)] (LINE:699)\l0x0018: INVOKE  (r5 I:int) = (r3 I:int A[D('width' int)]), (r4 I:int A[D('height' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:700)\l0x001c: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x001e: INVOKE  (r6 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingLeft():int A[MD:():int (s)] (LINE:701)\l0x0022: INVOKE  (r7 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingRight():int A[MD:():int (s)]\l0x0026: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x0027: INVOKE  (r7 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingTop():int A[MD:():int (s)] (LINE:702)\l0x002b: INVOKE  (r8 I:int) = (r14 I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton) type: VIRTUAL call: androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.getPaddingBottom():int A[MD:():int (s)]\l0x002f: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0030: ARITH  (r8 I:int) = (r3 I:int A[D('width' int)]) + (r6 I:int A[D('offsetX' int)])  (LINE:703)\l0x0032: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0034: ARITH  (r9 I:int) = (r4 I:int A[D('height' int)]) + (r7 I:int A[D('offsetY' int)])  (LINE:704)\l0x0036: ARITH  (r9 I:int) = (r9 I:int) \/ (2 int) \l0x0038: ARITH  (r10 I:int) = (r8 I:int A[D('centerX' int)]) \- (r5 I:int A[D('halfEdge' int)])  (LINE:705)\l0x003a: ARITH  (r11 I:int) = (r9 I:int A[D('centerY' int)]) \- (r5 I:int A[D('halfEdge' int)]) \l0x003c: ARITH  (r12 I:int) = (r8 I:int A[D('centerX' int)]) + (r5 I:int A[D('halfEdge' int)]) \l0x003e: ARITH  (r13 I:int) = (r9 I:int A[D('centerY' int)]) + (r5 I:int A[D('halfEdge' int)]) \l0x0040: INVOKE  \l  (r2 I:android.graphics.drawable.Drawable A[D('bg' android.graphics.drawable.Drawable)])\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int):void A[MD:(android.graphics.drawable.Drawable, int, int, int, int):void (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|RETURN\l|0x0043: RETURN  (r0 I:boolean A[D('changed' boolean)])  (LINE:709)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected boolean androidx.appcompat.widget.ActionMenuPresenter.OverflowMenuButton.setFrame((r14 'this' I:androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton A[IMMUTABLE_TYPE, THIS]), (r15 I:int A[D('l' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('t' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('r' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('b' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:11:0x000e \-\> B:13:0x0043, CROSS_EDGE: B:10:0x000c \-\> B:13:0x0043\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0043: r3 'width' I\l  0x0018\-0x0043: r4 'height' I\l  0x001e\-0x0043: r5 'halfEdge' I\l  0x0027\-0x0043: r6 'offsetX' I\l  0x0030\-0x0043: r7 'offsetY' I\l  0x0034\-0x0043: r8 'centerX' I\l  0x0038\-0x0043: r9 'centerY' I\l  0x0004\-0x0043: r0 'changed' Z\l  0x0008\-0x0043: r1 'd' Landroid\/graphics\/drawable\/Drawable;\l  0x000c\-0x0043: r2 'bg' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0043: r15 'l' I\l  \-1 \-0x0043: r16 't' I\l  \-1 \-0x0043: r17 'r' I\l  \-1 \-0x0043: r18 'b' I\lMETHOD_OVERRIDE: [ClspMth\{android.widget.ImageView.setFrame(int, int, int, int):boolean\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

