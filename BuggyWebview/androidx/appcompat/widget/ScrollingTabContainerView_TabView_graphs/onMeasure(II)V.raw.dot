digraph "CFG forandroidx.appcompat.widget.ScrollingTabContainerView.TabView.onMeasure(II)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r2 I:android.widget.LinearLayout), (r3 I:int A[D('widthMeasureSpec' int)]), (r4 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.LinearLayout.onMeasure(int, int):void A[MD:(int, int):void (c)] (LINE:444)\l0x0003: IGET  (r0 I:androidx.appcompat.widget.ScrollingTabContainerView) = (r2 I:androidx.appcompat.widget.ScrollingTabContainerView$TabView) androidx.appcompat.widget.ScrollingTabContainerView.TabView.this$0 androidx.appcompat.widget.ScrollingTabContainerView  (LINE:447)\l0x0005: IGET  (r0 I:int) = (r0 I:androidx.appcompat.widget.ScrollingTabContainerView) androidx.appcompat.widget.ScrollingTabContainerView.mMaxTabWidth int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|0x0007: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r2 I:androidx.appcompat.widget.ScrollingTabContainerView$TabView) type: VIRTUAL call: androidx.appcompat.widget.ScrollingTabContainerView.TabView.getMeasuredWidth():int A[MD:():int (s)]\l0x000d: IGET  (r1 I:androidx.appcompat.widget.ScrollingTabContainerView) = (r2 I:androidx.appcompat.widget.ScrollingTabContainerView$TabView) androidx.appcompat.widget.ScrollingTabContainerView.TabView.this$0 androidx.appcompat.widget.ScrollingTabContainerView \l0x000f: IGET  (r1 I:int) = (r1 I:androidx.appcompat.widget.ScrollingTabContainerView) androidx.appcompat.widget.ScrollingTabContainerView.mMaxTabWidth int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: IGET  (r0 I:androidx.appcompat.widget.ScrollingTabContainerView) = (r2 I:androidx.appcompat.widget.ScrollingTabContainerView$TabView) androidx.appcompat.widget.ScrollingTabContainerView.TabView.this$0 androidx.appcompat.widget.ScrollingTabContainerView  (LINE:448)\l0x0015: IGET  (r0 I:int) = (r0 I:androidx.appcompat.widget.ScrollingTabContainerView) androidx.appcompat.widget.ScrollingTabContainerView.mMaxTabWidth int \l0x0017: CONST  (r1 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0019: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x001d: INVOKE  (r2 I:android.widget.LinearLayout), (r0 I:int), (r4 I:int A[D('heightMeasureSpec' int)]) type: SUPER call: android.widget.LinearLayout.onMeasure(int, int):void A[MD:(int, int):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|RETURN\lORIG_RETURN\l|0x0020: RETURN    (LINE:451)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN   A[SYNTHETIC] (LINE:451)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0020: RETURN   A[SYNTHETIC] (LINE:451)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ScrollingTabContainerView.TabView.onMeasure((r2 'this' I:androidx.appcompat.widget.ScrollingTabContainerView$TabView A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:17:0x0020, CROSS_EDGE: B:13:0x0007 \-\> B:17:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0020: r3 'widthMeasureSpec' I\l  \-1 \-0x0020: r4 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

