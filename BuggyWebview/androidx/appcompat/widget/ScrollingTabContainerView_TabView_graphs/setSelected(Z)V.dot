digraph "CFG forandroidx.appcompat.widget.ScrollingTabContainerView.TabView.setSelected(Z)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (isSelected() == r3) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|r0 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|PHI: r0 \l  PHI: (r0v2 'changed' boolean) = (r0v1 'changed' boolean), (r0v3 'changed' boolean) binds: [B:18:0x0008, B:17:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|super.setSelected(r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|if (r0 == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|if (r3 == false) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|sendAccessibilityEvent(4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|r0 = false\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ScrollingTabContainerView.TabView.setSelected((r2v0 'this' androidx.appcompat.widget.ScrollingTabContainerView$TabView A[IMMUTABLE_TYPE, THIS]), (r3v0 'selected' boolean A[D('selected' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x000e \-\> B:23:0x0014, CROSS_EDGE: B:20:0x000c \-\> B:23:0x0014, CROSS_EDGE: B:18:0x0008 \-\> B:19:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.setSelected(boolean):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_18 -> Node_19;
}

