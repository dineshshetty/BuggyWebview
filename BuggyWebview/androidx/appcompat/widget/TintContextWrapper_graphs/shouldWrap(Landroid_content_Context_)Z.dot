digraph "CFG forandroidx.appcompat.widget.TintContextWrapper.shouldWrap(Landroid\/content\/Context;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0003|if ((r3 instanceof androidx.appcompat.widget.TintContextWrapper) != false) goto L14\l}"];
Node_21 [shape=record,label="{21\:\ 0x0005}"];
Node_22 [shape=record,label="{22\:\ 0x000b|if ((r3.getResources() instanceof androidx.appcompat.widget.TintResources) != false) goto L14\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d}"];
Node_24 [shape=record,label="{24\:\ 0x0013|if ((r3.getResources() instanceof androidx.appcompat.widget.VectorEnabledTintResources) == false) goto L7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016}"];
Node_27 [shape=record,label="{27\:\ 0x001a|if (android.os.Build.VERSION.SDK_INT \< 21) goto L13\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c}"];
Node_29 [shape=record,label="{29\:\ 0x0020|if (androidx.appcompat.widget.VectorEnabledTintResources.shouldBeUsed() == false) goto L11\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|RETURN\lORIG_RETURN\l|return true\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean androidx.appcompat.widget.TintContextWrapper.shouldWrap((r3v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0020 \-\> B:31:0x0023, CROSS_EDGE: B:27:0x001a \-\> B:30:0x0022, CROSS_EDGE: B:32:0x0024 \-\> B:18:?, CROSS_EDGE: B:22:0x000b \-\> B:32:0x0024, CROSS_EDGE: B:20:0x0003 \-\> B:32:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_32[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_33 -> Node_18;
Node_30 -> Node_18;
Node_32 -> Node_18;
}

