digraph "CFG forandroidx.appcompat.widget.SearchView.4.onLayoutChange(Landroid\/view\/View;IIIIIIII)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.SearchView) = (r1 I:androidx.appcompat.widget.SearchView$4) androidx.appcompat.widget.SearchView.4.this$0 androidx.appcompat.widget.SearchView  (LINE:387)\l0x0002: INVOKE  (r0 I:androidx.appcompat.widget.SearchView) type: VIRTUAL call: androidx.appcompat.widget.SearchView.adjustDropDownSizeAndPosition():void A[MD:():void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:388)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SearchView.4.onLayoutChange((r1 'this' I:androidx.appcompat.widget.SearchView$4 A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('oldLeft' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('oldTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('oldRight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('oldBottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0005: r2 'v' Landroid\/view\/View;\l  \-1 \-0x0005: r3 'left' I\l  \-1 \-0x0005: r4 'top' I\l  \-1 \-0x0005: r5 'right' I\l  \-1 \-0x0005: r6 'bottom' I\l  \-1 \-0x0005: r7 'oldLeft' I\l  \-1 \-0x0005: r8 'oldTop' I\l  \-1 \-0x0005: r9 'oldRight' I\l  \-1 \-0x0005: r10 'oldBottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnLayoutChangeListener.onLayoutChange(android.view.View, int, int, int, int, int, int, int, int):void\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

