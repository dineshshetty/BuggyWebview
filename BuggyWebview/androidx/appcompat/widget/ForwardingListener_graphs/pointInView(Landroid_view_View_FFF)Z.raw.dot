digraph "CFG forandroidx.appcompat.widget.ForwardingListener.pointInView(Landroid\/view\/View;FFF)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: NEG  (r0 I:float) = (r5 I:float A[D('slop' float)])  (LINE:288)\l0x0001: CMP_L  (r0 I:int) = (r3 I:float A[D('localX' float)]), (r0 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:25:0x002a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0005|0x0005: NEG  (r0 I:float) = (r5 I:float A[D('slop' float)]) \l0x0006: CMP_L  (r0 I:int) = (r4 I:float A[D('localY' float)]), (r0 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|0x0008: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:25:0x002a \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:289)\l0x000e: INVOKE  (r1 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)]\l0x0012: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0013: CAST (r0 I:float) = (float) (r0 I:int) \l0x0014: ARITH  (r0 I:float) = (r0 I:float) + (r5 I:float A[D('slop' float)]) \l0x0015: CMP_G  (r0 I:int) = (r3 I:float A[D('localX' float)]), (r0 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:25:0x002a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|0x0019: INVOKE  (r0 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:290)\l0x001d: INVOKE  (r1 I:int) = (r2 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0021: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0022: CAST (r0 I:float) = (float) (r0 I:int) \l0x0023: ARITH  (r0 I:float) = (r0 I:float) + (r5 I:float A[D('slop' float)]) \l0x0024: CMP_G  (r0 I:int) = (r4 I:float A[D('localY' float)]), (r0 I:float) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|0x0026: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:25:0x002a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|SYNTHETIC\lRETURN\l|0x0028: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002b: RETURN  (r0 I:boolean) A[SYNTHETIC] (LINE:288)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|RETURN\lORIG_RETURN\l|0x002a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: RETURN  (r0 I:boolean)  (LINE:288)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.appcompat.widget.ForwardingListener.pointInView((r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('localX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[D('localY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:float A[D('slop' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x002a \-\> B:26:0x002b, CROSS_EDGE: B:21:0x0017 \-\> B:25:0x002a, CROSS_EDGE: B:19:0x0008 \-\> B:25:0x002a, CROSS_EDGE: B:17:0x0003 \-\> B:25:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x002b: r2 'view' Landroid\/view\/View;\l  \-1 \-0x002b: r3 'localX' F\l  \-1 \-0x002b: r4 'localY' F\l  \-1 \-0x002b: r5 'slop' F\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_15;
}

