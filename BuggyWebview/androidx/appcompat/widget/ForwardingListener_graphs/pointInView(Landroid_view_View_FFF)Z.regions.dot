digraph "CFG forandroidx.appcompat.widget.ForwardingListener.pointInView(Landroid\/view\/View;FFF)Z" {
subgraph cluster_Region_254586873 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0003|RETURN\l|return r3 \>= (\-r5) && r4 \>= (\-r5) && r3 \< ((float) (r2.getRight() \- r2.getLeft())) + r5 && r4 \< ((float) (r2.getBottom() \- r2.getTop())) + r5\l}"];
}
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0005}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0008|REMOVE\lADDED_TO_REGION\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000a}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0017|REMOVE\lADDED_TO_REGION\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0019}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0026|REMOVE\lADDED_TO_REGION\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0028|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x002a|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static boolean androidx.appcompat.widget.ForwardingListener.pointInView((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'localX' float A[D('localX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'localY' float A[D('localY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'slop' float A[D('slop' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x002a \-\> B:26:0x002b, CROSS_EDGE: B:21:0x0017 \-\> B:25:0x002a, CROSS_EDGE: B:19:0x0008 \-\> B:25:0x002a, CROSS_EDGE: B:17:0x0003 \-\> B:25:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_17 -> Node_18;
Node_17 -> Node_25;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_15;
Node_25 -> Node_15;
}

