digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.readHistoricalDataImpl()V" {
Node_76 [shape=record,label="{76\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_78 [shape=record,label="{78\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Error reading historical recrod file: \"  (LINE:964)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_131 [shape=record,label="{131\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_79 [shape=record,label="{79\:\ 0x0003|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{FileNotFoundException \-\> 0x00d4, blocks: (B:79:0x0003), top: B:131:0x0003 \}\lCatch: FileNotFoundException \-\> 0x00d4\l|0x0003: IGET  (r2 I:android.content.Context) = (r12 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mContext android.content.Context A[Catch: FileNotFoundException \-\> 0x00d4, TRY_ENTER] (LINE:966)\l0x0005: IGET  (r3 I:java.lang.String) = (r12 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mHistoryFileName java.lang.String A[Catch: FileNotFoundException \-\> 0x00d4]\l0x0007: INVOKE  (r2 I:java.io.FileInputStream) = (r2 I:android.content.Context), (r3 I:java.lang.String) type: VIRTUAL call: android.content.Context.openFileInput(java.lang.String):java.io.FileInputStream A[Catch: FileNotFoundException \-\> 0x00d4, MD:(java.lang.String):java.io.FileInputStream throws java.io.FileNotFoundException (c), TRY_LEAVE]\l}"];
Node_80 [shape=record,label="{80\:\ 0x000b|0x000b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('fis' java.io.FileInputStream)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_135 [shape=record,label="{135\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_130 [shape=record,label="{130\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_81 [shape=record,label="{81\:\ 0x000d|TRY_ENTER\lTryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x000d: INVOKE  (r2 I:org.xmlpull.v1.XmlPullParser) =  type: STATIC call: android.util.Xml.newPullParser():org.xmlpull.v1.XmlPullParser A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():org.xmlpull.v1.XmlPullParser (c), TRY_ENTER] (LINE:974)\l0x0011: CONST_STR  (r3 I:java.lang.String) =  \"UTF\-8\"  (LINE:975)\l0x0013: INVOKE  \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r1 I:java.io.InputStream A[D('fis' java.io.FileInputStream)])\l  (r3 I:java.lang.String)\l type: INTERFACE call: org.xmlpull.v1.XmlPullParser.setInput(java.io.InputStream, java.lang.String):void A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.io.InputStream, java.lang.String):void throws org.xmlpull.v1.XmlPullParserException (c)]\l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:977)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0017|LOOP_START\lLOOP:0: B:82:0x0017\-\>B:86:0x001d\l|0x0017: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:978)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:136:0x0023 \l}"];
Node_84 [shape=record,label="{84\:\ 0x001a|0x001a: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:137:0x0023 \l}"];
Node_86 [shape=record,label="{86\:\ 0x001d|LOOP_END\lTryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lLOOP:0: B:82:0x0017\-\>B:86:0x001d\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x001d: INVOKE  (r4 I:int) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:979)\l0x0021: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0022: GOTO  \-\> 0x0017 \l}"];
Node_137 [shape=record,label="{137\:\ 0x0023|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0023|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x0023: CONST_STR  (r5 I:java.lang.String) =  \"historical\-records\"  (LINE:982)\l0x0025: INVOKE  (r6 I:java.lang.String) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():java.lang.String (c)]\l0x0029: INVOKE  (r5 I:boolean) = (r5 I:java.lang.String), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.Object):boolean (c)]\l}"];
Node_88 [shape=record,label="{88\:\ 0x002d|0x002d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:106:0x0083 \l}"];
Node_89 [shape=record,label="{89\:\ 0x002f|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x002f: IGET  (r5 I:java.util.List\<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord\>) = (r12 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mHistoricalRecords java.util.List A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab] (LINE:987)\l0x0031: INVOKE  \l  (r5 I:java.util.List A[D('historicalRecords' java.util.List\<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord\>)])\l type: INTERFACE call: java.util.List.clear():void A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():void (c)] (LINE:988)\l}"];
Node_90 [shape=record,label="{90\:\ 0x0034|TRY_LEAVE\lLOOP_START\lTryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lLOOP:1: B:90:0x0034\-\>B:142:0x0034\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x0034: INVOKE  (r6 I:int) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c), TRY_LEAVE] (LINE:991)\l}"];
Node_91 [shape=record,label="{91\:\ 0x0038|0x0038: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('type' int)]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_92 [shape=record,label="{92\:\ 0x0039|0x0039: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x0043  (LINE:992)\l}"];
Node_96 [shape=record,label="{96\:\ 0x0043|0x0043: CONST  (r6 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:995)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0044|0x0044: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:143:0x0034 \l}"];
Node_138 [shape=record,label="{138\:\ 0x0046|SYNTHETIC\l}"];
Node_98 [shape=record,label="{98\:\ 0x0046|0x0046: CONST  (r6 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_99 [shape=record,label="{99\:\ 0x0047|0x0047: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:140:0x004a \l}"];
Node_140 [shape=record,label="{140\:\ 0x004a|SYNTHETIC\l}"];
Node_101 [shape=record,label="{101\:\ 0x004a|TRY_ENTER\lTryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x004a: INVOKE  (r6 I:java.lang.String) = (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:():java.lang.String (c), TRY_ENTER] (LINE:998)\l0x004e: CONST_STR  (r7 I:java.lang.String) =  \"historical\-record\"  (LINE:999)\l0x0050: INVOKE  (r7 I:boolean) = (r7 I:java.lang.String), (r6 I:java.lang.Object A[D('nodeName' java.lang.String)]) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.Object):boolean (c)]\l}"];
Node_102 [shape=record,label="{102\:\ 0x0054|0x0054: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:141:0x007b \l}"];
Node_103 [shape=record,label="{103\:\ 0x0056|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x0056: CONST_STR  (r7 I:java.lang.String) =  \"activity\"  (LINE:1003)\l0x0058: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0059: INVOKE  (r7 I:java.lang.String) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r8 I:java.lang.String)\l  (r7 I:java.lang.String)\l type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String, java.lang.String):java.lang.String (c)]\l0x005d: CONST_STR  (r9 I:java.lang.String) =  \"time\"  (LINE:1004)\l0x005f: INVOKE  (r9 I:java.lang.String) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String, java.lang.String):java.lang.String (c)] (LINE:1005)\l0x0063: INVOKE  (r9 I:long) = (r9 I:java.lang.String) type: STATIC call: java.lang.Long.parseLong(java.lang.String):long A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String):long throws java.lang.NumberFormatException (c)]\l0x0067: CONST_STR  (r11 I:java.lang.String) =  \"weight\"  (LINE:1006)\l0x0069: INVOKE  (r8 I:java.lang.String) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r8 I:java.lang.String)\l  (r11 I:java.lang.String)\l type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String, java.lang.String):java.lang.String (c)] (LINE:1007)\l0x006d: INVOKE  (r8 I:float) = (r8 I:java.lang.String) type: STATIC call: java.lang.Float.parseFloat(java.lang.String):float A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String):float throws java.lang.NumberFormatException (c)]\l0x0071: NEW_INSTANCE  (r11 I:androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) =  androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab] (LINE:1008)\l0x0073: INVOKE  \l  (r11 I:androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord)\l  (r7 I:java.lang.String A[D('activity' java.lang.String)])\l  (r9 I:long A[D('time' long)])\l  (r8 I:float A[D('weight' float)])\l type: DIRECT call: androidx.appcompat.widget.ActivityChooserModel.HistoricalRecord.\<init\>(java.lang.String, long, float):void A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String, long, float):void (m)]\l0x0076: INVOKE  \l  (r5 I:java.util.List A[D('historicalRecords' java.util.List\<androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord\>)])\l  (r11 I:java.lang.Object A[D('readRecord' androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(E):boolean (c)] (LINE:1009)\l0x007a: GOTO  \-\> 0x0034 \l}"];
Node_145 [shape=record,label="{145\:\ 0x0034|SYNTHETIC\l}"];
Node_142 [shape=record,label="{142\:\ 0x0034|LOOP_END\lSYNTHETIC\lLOOP:1: B:90:0x0034\-\>B:142:0x0034\l}"];
Node_141 [shape=record,label="{141\:\ 0x007b|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x007b|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x007b: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab] (LINE:1000)\l0x007d: CONST_STR  (r7 I:java.lang.String) =  \"Share records file not well\-formed.\" \l0x007f: INVOKE  (r4 I:org.xmlpull.v1.XmlPullParserException), (r7 I:java.lang.String) type: DIRECT call: org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String):void (c)]\l}"];
Node_105 [shape=record,label="{105\:\ 0x0082|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x0082: THROW  (r4 I:java.lang.Throwable) A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab]\l}"];
Node_77 [shape=record,label="{77\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_144 [shape=record,label="{144\:\ 0x0034|SYNTHETIC\l}"];
Node_143 [shape=record,label="{143\:\ 0x0034|SYNTHETIC\l}"];
Node_139 [shape=record,label="{139\:\ 0x003c|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x003c|0x003c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fis' java.io.FileInputStream)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:122:0x00cb  (LINE:1024)\l}"];
Node_94 [shape=record,label="{94\:\ 0x003e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00c9, blocks: (B:94:0x003e, B:113:0x00a7, B:118:0x00c5, B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, inners: #1, #5 \}\lCatch: IOException \-\> 0x00c9\l|0x003e: INVOKE  (r1 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.close():void A[Catch: IOException \-\> 0x00c9, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:1026)\l}"];
Node_149 [shape=record,label="{149\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_122 [shape=record,label="{122\:\ 0x00cb|RETURN\lORIG_RETURN\l|0x00cb: RETURN    (LINE:1032)\l}"];
Node_106 [shape=record,label="{106\:\ 0x0083|TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x0083: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab] (LINE:983)\l0x0085: CONST_STR  (r5 I:java.lang.String) =  \"Share records file does not start with historical\-records tag.\" \l0x0087: INVOKE  (r4 I:org.xmlpull.v1.XmlPullParserException), (r5 I:java.lang.String) type: DIRECT call: org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, MD:(java.lang.String):void (c)]\l}"];
Node_107 [shape=record,label="{107\:\ 0x008a|TRY_LEAVE\lTryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lCatch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab\l|0x008a: THROW  (r4 I:java.lang.Throwable) A[Catch: all \-\> 0x008b, IOException \-\> 0x008d, XmlPullParserException \-\> 0x00ab, TRY_LEAVE]\l}"];
Node_136 [shape=record,label="{136\:\ 0x0023|SYNTHETIC\l}"];
Node_120 [shape=record,label="{120\:\ 0x00c9|ExcHandler: IOException \-\> 0x00c9\l|0x00c9: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x00c9] (LINE:1027)\l}"];
Node_151 [shape=record,label="{151\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_115 [shape=record,label="{115\:\ 0x00ab|ExcHandler: XmlPullParserException \-\> 0x00ab\l|0x00ab: MOVE_EXCEPTION  (r2 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x00ab] (LINE:1019)\l}"];
Node_116 [shape=record,label="{116\:\ 0x00ac|TRY_ENTER\lTRY_LEAVE\lTryCatch #4 \{all \-\> 0x008b, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a, B:111:0x008e, B:116:0x00ac), top: B:135:0x000d \}\lCatch: all \-\> 0x008b\l|0x00ac: SGET  (r3 I:java.lang.String) =  androidx.appcompat.widget.ActivityChooserModel.LOG_TAG java.lang.String A[Catch: all \-\> 0x008b, TRY_ENTER] (LINE:1020)\l0x00ae: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x008b]\l0x00b0: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x008b, MD:():void (c)]\l0x00b3: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x008b, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00b6: IGET  (r0 I:java.lang.String) = (r12 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mHistoryFileName java.lang.String A[Catch: all \-\> 0x008b]\l0x00b8: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x008b, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x00bb: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x008b, MD:():java.lang.String (c)]\l0x00bf: INVOKE  \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('xppe' org.xmlpull.v1.XmlPullParserException)])\l type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[Catch: all \-\> 0x008b, MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c), TRY_LEAVE]\l}"];
Node_117 [shape=record,label="{117\:\ 0x00c3|0x00c3: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fis' java.io.FileInputStream)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:147:? \l}"];
Node_118 [shape=record,label="{118\:\ 0x00c5|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00c9, blocks: (B:94:0x003e, B:113:0x00a7, B:118:0x00c5, B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, inners: #1, #5 \}\lCatch: IOException \-\> 0x00c9\l|0x00c5: INVOKE  (r1 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.close():void A[Catch: IOException \-\> 0x00c9, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:1026)\l}"];
Node_148 [shape=record,label="{148\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_147 [shape=record,label="{147\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_110 [shape=record,label="{110\:\ 0x008d|ExcHandler: IOException \-\> 0x008d\l|0x008d: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x008d] (LINE:1021)\l}"];
Node_111 [shape=record,label="{111\:\ 0x008e|TRY_ENTER\lTRY_LEAVE\lTryCatch #4 \{all \-\> 0x008b, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a, B:111:0x008e, B:116:0x00ac), top: B:135:0x000d \}\lCatch: all \-\> 0x008b\l|0x008e: SGET  (r3 I:java.lang.String) =  androidx.appcompat.widget.ActivityChooserModel.LOG_TAG java.lang.String A[Catch: all \-\> 0x008b, TRY_ENTER] (LINE:1022)\l0x0090: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x008b]\l0x0092: INVOKE  (r4 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x008b, MD:():void (c)]\l0x0095: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x008b, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0098: IGET  (r0 I:java.lang.String) = (r12 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mHistoryFileName java.lang.String A[Catch: all \-\> 0x008b]\l0x009a: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x008b, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x009d: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x008b, MD:():java.lang.String (c)]\l0x00a1: INVOKE  (r3 I:java.lang.String), (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('ioe' java.io.IOException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[Catch: all \-\> 0x008b, MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c), TRY_LEAVE]\l}"];
Node_112 [shape=record,label="{112\:\ 0x00a5|0x00a5: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fis' java.io.FileInputStream)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:146:? \l}"];
Node_113 [shape=record,label="{113\:\ 0x00a7|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x00c9, blocks: (B:94:0x003e, B:113:0x00a7, B:118:0x00c5, B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, inners: #1, #5 \}\lCatch: IOException \-\> 0x00c9\l|0x00a7: INVOKE  (r1 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.close():void A[Catch: IOException \-\> 0x00c9, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:1026)\l}"];
Node_150 [shape=record,label="{150\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_146 [shape=record,label="{146\:\ ?|SYNTHETIC\lRETURN\l|0x00cb: RETURN   A[SYNTHETIC] (LINE:1032)\l}"];
Node_108 [shape=record,label="{108\:\ 0x008b|ExcHandler: all \-\> 0x008b\l|0x008b: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x008b] (LINE:1024)\l}"];
Node_123 [shape=record,label="{123\:\ 0x00cc|0x00cc: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fis' java.io.FileInputStream)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:127:0x00d3  (LINE:1024)\l}"];
Node_127 [shape=record,label="{127\:\ 0x00d3|0x00d3: THROW  (r0 I:java.lang.Throwable)  (LINE:1031)\l}"];
Node_133 [shape=record,label="{133\:\ 0x00ce|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_124 [shape=record,label="{124\:\ 0x00ce|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IOException \-\> 0x00d2, blocks: (B:124:0x00ce), top: B:133:0x00ce \}\lCatch: IOException \-\> 0x00d2\l|0x00ce: INVOKE  (r1 I:java.io.FileInputStream A[D('fis' java.io.FileInputStream)]) type: VIRTUAL call: java.io.FileInputStream.close():void A[Catch: IOException \-\> 0x00d2, MD:():void throws java.io.IOException (c), TRY_ENTER, TRY_LEAVE] (LINE:1026)\l}"];
Node_134 [shape=record,label="{134\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_126 [shape=record,label="{126\:\ 0x00d2|ExcHandler: IOException \-\> 0x00d2\l|0x00d2: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x00d2] (LINE:1027)\l}"];
Node_132 [shape=record,label="{132\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_128 [shape=record,label="{128\:\ 0x00d4|ExcHandler: FileNotFoundException \-\> 0x00d4\l|0x00d4: MOVE_EXCEPTION  (r0 I:java.io.FileNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: FileNotFoundException \-\> 0x00d4] (LINE:967)\l}"];
Node_129 [shape=record,label="{129\:\ 0x00d5|RETURN\l|0x00d5: RETURN    (LINE:971)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ActivityChooserModel.readHistoricalDataImpl((r12 'this' I:androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]))  | BACK_EDGE: B:86:0x001d \-\> B:82:0x0017, CROSS_EDGE: B:93:0x003c \-\> B:122:0x00cb, BACK_EDGE: B:97:0x0044 \-\> B:90:0x0034, BACK_EDGE: B:103:0x0056 \-\> B:90:0x0034, CROSS_EDGE: B:105:0x0082 \-\> B:77:?, BACK_EDGE: B:99:0x0047 \-\> B:90:0x0034, CROSS_EDGE: B:107:0x008a \-\> B:77:?, CROSS_EDGE: B:83:0x0018 \-\> B:87:0x0023, CROSS_EDGE: B:120:0x00c9 \-\> B:122:0x00cb, CROSS_EDGE: B:118:0x00c5 \-\> B:122:0x00cb, CROSS_EDGE: B:117:0x00c3 \-\> B:122:0x00cb, CROSS_EDGE: B:113:0x00a7 \-\> B:122:0x00cb, CROSS_EDGE: B:112:0x00a5 \-\> B:122:0x00cb, CROSS_EDGE: B:127:0x00d3 \-\> B:77:?, CROSS_EDGE: B:124:0x00ce \-\> B:127:0x00d3, CROSS_EDGE: B:126:0x00d2 \-\> B:127:0x00d3, CROSS_EDGE: B:133:0x00ce \-\> B:126:0x00d2, CROSS_EDGE: B:129:0x00d5 \-\> B:77:?, CROSS_EDGE: B:131:0x0003 \-\> B:128:0x00d4\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x003c: r2 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  0x0017\-0x003c: r3 'type' I\l  0x0031\-0x003c: r5 'historicalRecords' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/appcompat\/widget\/ActivityChooserModel$HistoricalRecord;\>;\l  0x004e\-0x007a: r6 'nodeName' Ljava\/lang\/String;\l  0x005d\-0x007a: r7 'activity' Ljava\/lang\/String;\l  0x0071\-0x007a: r8 'weight' F\l  0x0067\-0x007a: r9 'time' J\l  0x0076\-0x007a: r11 'readRecord' Landroidx\/appcompat\/widget\/ActivityChooserModel$HistoricalRecord;\l  0x0003\-0x0082: r1 'fis' Ljava\/io\/FileInputStream;\l  0x0043\-0x0083: r5 'historicalRecords' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/appcompat\/widget\/ActivityChooserModel$HistoricalRecord;\>;\l  0x007b\-0x0083: r6 'nodeName' Ljava\/lang\/String;\l  0x0083\-0x008a: r1 'fis' Ljava\/io\/FileInputStream;\l  0x0043\-0x008b: r2 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  0x0043\-0x008b: r3 'type' I\l  0x008e\-0x00a5: r2 'ioe' Ljava\/io\/IOException;\l  0x00ac\-0x00c3: r2 'xppe' Lorg\/xmlpull\/v1\/XmlPullParserException;\l  0x00d5\-0x00d5: r0 'fnfe' Ljava\/io\/FileNotFoundException;\l  0x008b\-0x00d5: r1 'fis' Ljava\/io\/FileInputStream;\lTryCatch #0 \{IOException \-\> 0x00c9, blocks: (B:94:0x003e, B:113:0x00a7, B:118:0x00c5, B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, inners: #1, #5 \}, TryCatch #1 \{XmlPullParserException \-\> 0x00ab, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}, TryCatch #2 \{FileNotFoundException \-\> 0x00d4, blocks: (B:79:0x0003), top: B:131:0x0003 \}, TryCatch #3 \{IOException \-\> 0x00d2, blocks: (B:124:0x00ce), top: B:133:0x00ce \}, TryCatch #4 \{all \-\> 0x008b, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a, B:111:0x008e, B:116:0x00ac), top: B:135:0x000d \}, TryCatch #5 \{IOException \-\> 0x008d, blocks: (B:81:0x000d, B:86:0x001d, B:87:0x0023, B:89:0x002f, B:90:0x0034, B:101:0x004a, B:103:0x0056, B:104:0x007b, B:105:0x0082, B:106:0x0083, B:107:0x008a), top: B:130:0x000d, outer: #0 \}\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [1026=4]\}\l}"];
MethodNode -> Node_76;Node_76 -> Node_78;
Node_78 -> Node_131;
Node_131 -> Node_79;
Node_131 -> Node_128;
Node_79 -> Node_80;
Node_79 -> Node_132;
Node_80 -> Node_135;
Node_135 -> Node_130;
Node_135 -> Node_108;
Node_130 -> Node_81;
Node_130 -> Node_120;
Node_130 -> Node_115;
Node_130 -> Node_110;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_136;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_137;
Node_86 -> Node_82;
Node_137 -> Node_87;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_106;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92;
Node_92 -> Node_96;
Node_92 -> Node_139[style=dashed];
Node_96 -> Node_97;
Node_97 -> Node_138[style=dashed];
Node_97 -> Node_143;
Node_138 -> Node_98;
Node_98 -> Node_99;
Node_99 -> Node_140;
Node_99 -> Node_144[style=dashed];
Node_140 -> Node_101;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_141;
Node_103 -> Node_145;
Node_145 -> Node_142;
Node_142 -> Node_90;
Node_141 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_77;
Node_144 -> Node_142;
Node_143 -> Node_142;
Node_139 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_122;
Node_94 -> Node_149;
Node_149 -> Node_77;
Node_122 -> Node_77;
Node_106 -> Node_107;
Node_107 -> Node_77;
Node_136 -> Node_87;
Node_120 -> Node_151;
Node_151 -> Node_77;
Node_115 -> Node_116;
Node_116 -> Node_117;
Node_117 -> Node_118[style=dashed];
Node_117 -> Node_147;
Node_118 -> Node_148;
Node_148 -> Node_77;
Node_147 -> Node_77;
Node_110 -> Node_111;
Node_111 -> Node_112;
Node_112 -> Node_113[style=dashed];
Node_112 -> Node_146;
Node_113 -> Node_150;
Node_150 -> Node_77;
Node_146 -> Node_77;
Node_108 -> Node_123;
Node_123 -> Node_127;
Node_123 -> Node_133[style=dashed];
Node_127 -> Node_77;
Node_133 -> Node_124;
Node_133 -> Node_126;
Node_124 -> Node_127;
Node_124 -> Node_134;
Node_134 -> Node_126;
Node_126 -> Node_127;
Node_132 -> Node_128;
Node_128 -> Node_129;
Node_129 -> Node_77;
}

