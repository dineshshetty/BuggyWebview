digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.setHistoryMaxSize(I)V" {
subgraph cluster_Region_1563926372 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
subgraph cluster_SynchronizedRegion_179451848 {
label = "Synchronized:R(2:2|(1:(2:(1:7)|(2:9|(1:11)))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0002}"];
subgraph cluster_Region_1370046650 {
label = "R(1:(2:(1:7)|(2:9|(1:11))))";
node [shape=record,color=blue];
subgraph cluster_Region_119843873 {
label = "R(2:(1:7)|(2:9|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1711918878 {
label = "IF [B:22:0x0005] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0005|if (r2.mHistoryMaxSize == r3) goto L6\l}"];
subgraph cluster_Region_2107553888 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0008|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1714002937 {
label = "R(2:9|(1:11))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0009|TryCatch #0 \{, blocks: (B:21:0x0003, B:23:0x0007, B:25:0x0009, B:27:0x0014, B:28:0x0017), top: B:33:0x0003 \}\lCatch: all \-\> 0x0019\l|r2.mHistoryMaxSize = r3     \/\/ Catch: java.lang.Throwable \-\> L19\lpruneExcessiveHistoricalRecordsIfNeeded()     \/\/ Catch: java.lang.Throwable \-\> L19\l}"];
subgraph cluster_IfRegion_1154377401 {
label = "IF [B:26:0x0012] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0012|if (sortActivitiesIfNeeded() != false) goto L11\l}"];
subgraph cluster_Region_1821843457 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0014|TryCatch #0 \{, blocks: (B:21:0x0003, B:23:0x0007, B:25:0x0009, B:27:0x0014, B:28:0x0017), top: B:33:0x0003 \}\lCatch: all \-\> 0x0019\l|notifyChanged()     \/\/ Catch: java.lang.Throwable \-\> L19\l}"];
}
}
}
}
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:21:0x0003, B:23:0x0007, B:25:0x0009, B:27:0x0014, B:28:0x0017), top: B:33:0x0003 \}\lCatch: all \-\> 0x0019\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0007|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:21:0x0003, B:23:0x0007, B:25:0x0009, B:27:0x0014, B:28:0x0017), top: B:33:0x0003 \}\lCatch: all \-\> 0x0019\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L19\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0017|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:21:0x0003, B:23:0x0007, B:25:0x0009, B:27:0x0014, B:28:0x0017), top: B:33:0x0003 \}\lCatch: all \-\> 0x0019\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L19\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0018}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0019|REMOVE\lExcHandler: all \-\> 0x0019\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001a|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0019\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001b|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActivityChooserModel.setHistoryMaxSize((r2v0 'this' androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]), (r3v0 'historyMaxSize' int A[D('historyMaxSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0018 \-\> B:18:?, CROSS_EDGE: B:26:0x0012 \-\> B:28:0x0017, CROSS_EDGE: B:32:0x001b \-\> B:18:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_33;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_17 -> Node_19;
Node_33 -> Node_21;
Node_33 -> Node_30;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_18;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_18;
}

