digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.persistHistoricalDataIfNeeded()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r6.mReadShareHistoryCalled == false) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004}"];
Node_19 [shape=record,label="{19\:\ 0x0006|if (r6.mHistoricalRecordsChanged != false) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|r6.mHistoricalRecordsChanged = false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (android.text.TextUtils.isEmpty(r6.mHistoryFileName) != false) goto L11\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|new androidx.appcompat.widget.ActivityChooserModel.PersistHistoryAsyncTask().executeOnExecutor(android.os.AsyncTask.THREAD_POOL_EXECUTOR, new java.lang.Object[]\{new java.util.ArrayList(r6.mHistoricalRecords), r6.mHistoryFileName\})\l}"];
Node_24 [shape=record,label="{24\:\ 0x002f|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030}"];
Node_26 [shape=record,label="{26\:\ 0x0037|throw new java.lang.IllegalStateException(\"No preceding call to #readHistoricalData\")\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ActivityChooserModel.persistHistoricalDataIfNeeded((r6v0 'this' androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x002f \-\> B:15:?, CROSS_EDGE: B:22:0x0012 \-\> B:24:0x002f, CROSS_EDGE: B:26:0x0037 \-\> B:15:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_15;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
}

