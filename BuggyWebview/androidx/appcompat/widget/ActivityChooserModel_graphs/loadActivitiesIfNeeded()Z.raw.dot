digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.loadActivitiesIfNeeded()Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mReloadActivities boolean  (LINE:687)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0038 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: IGET  (r0 I:android.content.Intent) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mIntent android.content.Intent \l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0038 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IPUT  (r1 I:boolean), (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mReloadActivities boolean  (LINE:688)\l0x000b: IGET  (r0 I:java.util.List\<androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo\>) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mActivities java.util.List  (LINE:689)\l0x000d: INVOKE  (r0 I:java.util.List) type: INTERFACE call: java.util.List.clear():void A[MD:():void (c)]\l0x0010: IGET  (r0 I:android.content.Context) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mContext android.content.Context  (LINE:690)\l0x0012: INVOKE  (r0 I:android.content.pm.PackageManager) = (r0 I:android.content.Context) type: VIRTUAL call: android.content.Context.getPackageManager():android.content.pm.PackageManager A[MD:():android.content.pm.PackageManager (c)]\l0x0016: IGET  (r2 I:android.content.Intent) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mIntent android.content.Intent \l0x0018: INVOKE  (r0 I:java.util.List) = (r0 I:android.content.pm.PackageManager), (r2 I:android.content.Intent), (r1 I:int) type: VIRTUAL call: android.content.pm.PackageManager.queryIntentActivities(android.content.Intent, int):java.util.List A[MD:(android.content.Intent, int):java.util.List\<android.content.pm.ResolveInfo\> (c)] (LINE:691)\l0x001c: INVOKE  (r1 I:int) = (r0 I:java.util.List A[D('resolveInfos' java.util.List\<android.content.pm.ResolveInfo\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:692)\l0x0020: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:693)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|LOOP_START\lLOOP:0: B:20:0x0021\-\>B:21:0x0023\l|0x0021: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('resolveInfoCount' int)])  \-\> B:25:0x0036 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|LOOP_END\lLOOP:0: B:20:0x0021\-\>B:21:0x0023\l|0x0023: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List A[D('resolveInfos' java.util.List\<android.content.pm.ResolveInfo\>)]), (r2 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:694)\l0x0027: CHECK_CAST (r3 I:android.content.pm.ResolveInfo) = (android.content.pm.ResolveInfo) (r3 I:??[OBJECT, ARRAY]) \l0x0029: IGET  (r4 I:java.util.List\<androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo\>) = (r6 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mActivities java.util.List  (LINE:695)\l0x002b: NEW_INSTANCE  (r5 I:androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) =  androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo \l0x002d: INVOKE  \l  (r5 I:androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo)\l  (r3 I:android.content.pm.ResolveInfo A[D('resolveInfo' android.content.pm.ResolveInfo)])\l type: DIRECT call: androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo.\<init\>(android.content.pm.ResolveInfo):void A[MD:(android.content.pm.ResolveInfo):void (m)]\l0x0030: INVOKE  (r4 I:java.util.List), (r5 I:java.lang.Object) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0033: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:693)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|RETURN\l|0x0036: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('i' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:697)\l0x0037: RETURN  (r2 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|RETURN\l|0x0038: RETURN  (r1 I:boolean A[D('resolveInfoCount' int)])  (LINE:699)\l}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.widget.ActivityChooserModel.loadActivitiesIfNeeded((r6 'this' I:androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0023 \-\> B:20:0x0021, CROSS_EDGE: B:24:0x0038 \-\> B:14:?, CROSS_EDGE: B:16:0x0003 \-\> B:24:0x0038\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0033: r3 'resolveInfo' Landroid\/content\/pm\/ResolveInfo;\l  0x0021\-0x0036: r2 'i' I\l  0x001c\-0x0038: r0 'resolveInfos' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/content\/pm\/ResolveInfo;\>;\l  0x0020\-0x0038: r1 'resolveInfoCount' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_20;
Node_25 -> Node_22;
Node_22 -> Node_14;
Node_24 -> Node_14;
}

