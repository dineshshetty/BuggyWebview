digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.loadActivitiesIfNeeded()Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r6.mReloadActivities == false) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005}"];
Node_18 [shape=record,label="{18\:\ 0x0007|if (r6.mIntent == null) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|r6.mReloadActivities = false\lr6.mActivities.clear()\ljava.util.List r0 = r6.mContext.getPackageManager().queryIntentActivities(r6.mIntent, 0)\lint r1 = r0.size()\lr2 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|LOOP_START\lLOOP:0: B:20:0x0021\-\>B:21:0x0023\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v4 'i' int) binds: [B:19:0x0009, B:21:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L8\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|LOOP_END\lLOOP:0: B:20:0x0021\-\>B:21:0x0023\l|android.content.pm.ResolveInfo r3 = r0.get(r2)\lr6.mActivities.add(new androidx.appcompat.widget.ActivityChooserModel.ActivityResolveInfo(r3))\lint r2 = r2 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0038|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.widget.ActivityChooserModel.loadActivitiesIfNeeded((r6v0 'this' androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0023 \-\> B:20:0x0021, CROSS_EDGE: B:24:0x0038 \-\> B:14:?, CROSS_EDGE: B:16:0x0003 \-\> B:24:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_20;
Node_25 -> Node_22;
Node_22 -> Node_14;
Node_24 -> Node_14;
}

