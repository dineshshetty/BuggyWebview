digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.setIntent(Landroid\/content\/Intent;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mInstanceLock java.lang.Object  (LINE:365)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0003, B:21:0x0007, B:23:0x0009, B:24:0x0011), top: B:29:0x0003 \}\lCatch: all \-\> 0x0013\l|0x0003: IGET  (r1 I:android.content.Intent) = (r2 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mIntent android.content.Intent A[Catch: all \-\> 0x0013, TRY_ENTER] (LINE:366)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('intent' android.content.Intent)])  \-\> B:23:0x0009 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|TryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0003, B:21:0x0007, B:23:0x0009, B:24:0x0011), top: B:29:0x0003 \}\lCatch: all \-\> 0x0013\l|0x0007: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0013] (LINE:367)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008|RETURN\l|0x0008: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0009|TryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0003, B:21:0x0007, B:23:0x0009, B:24:0x0011), top: B:29:0x0003 \}\lCatch: all \-\> 0x0013\l|0x0009: IPUT  \l  (r3 I:android.content.Intent A[D('intent' android.content.Intent)])\l  (r2 I:androidx.appcompat.widget.ActivityChooserModel)\l androidx.appcompat.widget.ActivityChooserModel.mIntent android.content.Intent A[Catch: all \-\> 0x0013] (LINE:369)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:370)\l0x000c: IPUT  (r1 I:boolean), (r2 I:androidx.appcompat.widget.ActivityChooserModel) androidx.appcompat.widget.ActivityChooserModel.mReloadActivities boolean A[Catch: all \-\> 0x0013]\l0x000e: INVOKE  (r2 I:androidx.appcompat.widget.ActivityChooserModel) type: DIRECT call: androidx.appcompat.widget.ActivityChooserModel.ensureConsistentState():void A[Catch: all \-\> 0x0013, MD:():void (m)] (LINE:371)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0011|TryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0003, B:21:0x0007, B:23:0x0009, B:24:0x0011), top: B:29:0x0003 \}\lCatch: all \-\> 0x0013\l|0x0011: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0013] (LINE:372)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:373)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|ExcHandler: all \-\> 0x0013\l|0x0013: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0013] (LINE:372)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0014|TRY_LEAVE\lCatch: all \-\> 0x0013\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ActivityChooserModel.setIntent((r2 'this' I:androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]), (r3 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0012 \-\> B:16:?, CROSS_EDGE: B:28:0x0015 \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0015: r3 'intent' Landroid\/content\/Intent;\lTryCatch #0 \{all \-\> 0x0013, blocks: (B:19:0x0003, B:21:0x0007, B:23:0x0009, B:24:0x0011), top: B:29:0x0003 \}\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_29;
Node_29 -> Node_19;
Node_29 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

