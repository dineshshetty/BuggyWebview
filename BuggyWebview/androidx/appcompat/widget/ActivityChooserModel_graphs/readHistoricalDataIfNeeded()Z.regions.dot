digraph "CFG forandroidx.appcompat.widget.ActivityChooserModel.readHistoricalDataIfNeeded()Z" {
subgraph cluster_Region_711947787 {
label = "R(1:(2:(2:7|8)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_699195877 {
label = "R(2:(2:7|8)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_201626667 {
label = "IF [B:14:0x0003, B:16:0x0007, B:18:0x000f] THEN: R(2:7|8) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0003|if (r2.mCanReadHistoricalData == true) goto L3\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|ADDED_TO_REGION\l|if (r2.mHistoricalRecordsChanged == true) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|ADDED_TO_REGION\l|if (android.text.TextUtils.isEmpty(r2.mHistoryFileName) != true) goto L7\l}"];
subgraph cluster_Region_1976468850 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0011|r2.mCanReadHistoricalData = false\lr2.mReadShareHistoryCalled = true\lreadHistoricalDataImpl()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0019|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_608201454 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x001a|RETURN\l|return false\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0005}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0009}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.widget.ActivityChooserModel.readHistoricalDataIfNeeded((r2v0 'this' androidx.appcompat.widget.ActivityChooserModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x001a \-\> B:12:?, CROSS_EDGE: B:16:0x0007 \-\> B:21:0x001a, CROSS_EDGE: B:14:0x0003 \-\> B:21:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_21[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

