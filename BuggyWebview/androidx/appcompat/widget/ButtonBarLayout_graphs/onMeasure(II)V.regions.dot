digraph "CFG forandroidx.appcompat.widget.ButtonBarLayout.onMeasure(II)V" {
subgraph cluster_Region_800027899 {
label = "R(10:1|(2:(1:7)|8)|9|(1:13)(1:43)|14|(3:18|19|(1:22))|(1:25)|26|(2:28|(2:30|(1:32))(1:33))|(1:(2:36|(1:(1:38))))) | DECL_VAR: int initialWidthMeasureSpec\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = android.view.View.MeasureSpec.getSize(r12)\l}"];
subgraph cluster_IfRegion_2040150164 {
label = "IF [B:3:0x0007] THEN: R(2:(1:7)|8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r11.mAllowStacking != false) goto L3\l}"];
subgraph cluster_Region_487637946 {
label = "R(2:(1:7)|8)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1457387716 {
label = "IF [B:5:0x000b, B:7:0x0011] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r0 \> r11.mLastWidthSize) goto L5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|ADDED_TO_REGION\l|if (isStacked() != false) goto L7\l}"];
subgraph cluster_Region_917006637 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|setStacked(false)\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0016|r11.mLastWidthSize = r0\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0018|boolean r1 = false\l}"];
subgraph cluster_IfRegion_1110125386 {
label = "IF [B:11:0x001d, B:13:0x0025] THEN: R(1:13) ELSE: R(1:43)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|if (isStacked() == false) goto L11\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|ADDED_TO_REGION\l|if (android.view.View.MeasureSpec.getMode(r12) == 1073741824) goto L13\l}"];
subgraph cluster_Region_1674215348 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0027|int r3 = android.view.View.MeasureSpec.makeMeasureSpec(r0, Integer.MIN_VALUE)\lr1 = true\l}"];
}
subgraph cluster_Region_354553115 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002f|r3 = r12\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0030|PHI: r1 r3 \l  PHI: (r1v2 'needsRemeasure' boolean) = (r1v1 'needsRemeasure' boolean), (r1v5 'needsRemeasure' boolean) binds: [B:15:0x002f, B:14:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 'initialWidthMeasureSpec' int) = (r3v1 'initialWidthMeasureSpec' int), (r3v5 'initialWidthMeasureSpec' int) binds: [B:15:0x002f, B:14:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|super.onMeasure(r3, r13)\l}"];
subgraph cluster_IfRegion_1217621168 {
label = "IF [B:17:0x0035, B:19:0x003b] THEN: R(3:18|19|(1:22)) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0035|if (r11.mAllowStacking != false) goto L16\l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|ADDED_TO_REGION\l|if (isStacked() == false) goto L18\l}"];
subgraph cluster_Region_1673676323 {
label = "R(3:18|19|(1:22))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x003d|int int r4 = getMeasuredWidthAndState()\lint r5 = (\-16777216) & r4\l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|boolean r6 = r5 == 16777216\l}"];
subgraph cluster_IfRegion_577241798 {
label = "IF [B:24:0x004c] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x004c|PHI: r6 \l  PHI: (r6v4 'stack' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 != false) goto L22\l}"];
subgraph cluster_Region_924239770 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x004e|setStacked(true)\lr1 = true\l}"];
}
}
}
}
subgraph cluster_IfRegion_246678116 {
label = "IF [B:26:0x0052] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0052|PHI: r1 \l  PHI: (r1v3 'needsRemeasure' boolean) = (r1v2 'needsRemeasure' boolean), (r1v2 'needsRemeasure' boolean), (r1v2 'needsRemeasure' boolean), (r1v4 'needsRemeasure' boolean) binds: [B:17:0x0035, B:19:0x003b, B:24:0x004c, B:25:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L25\l}"];
subgraph cluster_Region_1625662382 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0054|super.onMeasure(r12, r13)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0057|int r4 = 0\lint int r2 = getNextVisibleChildIndex(0)\l}"];
subgraph cluster_IfRegion_1475527470 {
label = "IF [B:29:0x005c] THEN: R(2:28|(2:30|(1:32))(1:33)) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x005c|if (r2 \>= 0) goto L28\l}"];
subgraph cluster_Region_631629780 {
label = "R(2:28|(2:30|(1:32))(1:33))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x005e|android.view.View android.view.View r5 = getChildAt(r2)\landroid.widget.LinearLayout$LayoutParams android.widget.LinearLayout.LayoutParams r6 = (android.widget.LinearLayout.LayoutParams) r5.getLayoutParams()\lint r4 = 0 + getPaddingTop() + r5.getMeasuredHeight() + r6.topMargin + r6.bottomMargin\l}"];
subgraph cluster_IfRegion_368136094 {
label = "IF [B:31:0x007c] THEN: R(2:30|(1:32)) ELSE: R(1:33)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x007c|if (isStacked() != false) goto L30\l}"];
subgraph cluster_Region_1731999973 {
label = "R(2:30|(1:32))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x007e|int int r7 = getNextVisibleChildIndex(r2 + 1)\l}"];
subgraph cluster_IfRegion_774901959 {
label = "IF [B:33:0x0084] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0084|if (r7 \>= 0) goto L32\l}"];
subgraph cluster_Region_176639786 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0086|r4 += getChildAt(r7).getPaddingTop() + ((int) (getResources().getDisplayMetrics().density * 16.0f))\l}"];
}
}
}
subgraph cluster_Region_604950253 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00a0|r4 += getPaddingBottom()\l}"];
}
}
}
}
subgraph cluster_Region_245061393 {
label = "R(1:(2:36|(1:(1:38))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_264819124 {
label = "IF [B:38:0x00a9] THEN: R(2:36|(1:(1:38))) ELSE: null";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00a9|if (androidx.core.view.ViewCompat.getMinimumHeight(r11) != r4) goto L36\l}"];
subgraph cluster_Region_98110686 {
label = "R(2:36|(1:(1:38)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00ab|setMinimumHeight(r4)\l}"];
subgraph cluster_Region_1572756638 {
label = "R(1:(1:38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_269188180 {
label = "IF [B:40:0x00ae] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x00ae|if (r13 == 0) goto L38\l}"];
subgraph cluster_Region_261704820 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00b0|super.onMeasure(r12, r13)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001f}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0037}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0049}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x004b}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00a5|PHI: r4 \l  PHI: (r4v2 'minHeight' int) = (r4v1 'minHeight' int), (r4v4 'minHeight' int), (r4v3 'minHeight' int), (r4v5 'minHeight' int) binds: [B:29:0x005c, B:36:0x00a0, B:33:0x0084, B:34:0x0086] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00b3|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.ButtonBarLayout.onMeasure((r11v0 'this' androidx.appcompat.widget.ButtonBarLayout A[IMMUTABLE_TYPE, THIS]), (r12v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:40:0x00ae \-\> B:42:0x00b3, CROSS_EDGE: B:38:0x00a9 \-\> B:42:0x00b3, CROSS_EDGE: B:33:0x0084 \-\> B:37:0x00a5, CROSS_EDGE: B:36:0x00a0 \-\> B:37:0x00a5, CROSS_EDGE: B:29:0x005c \-\> B:37:0x00a5, CROSS_EDGE: B:26:0x0052 \-\> B:28:0x0057, CROSS_EDGE: B:24:0x004c \-\> B:26:0x0052, CROSS_EDGE: B:23:0x004b \-\> B:24:0x004c, CROSS_EDGE: B:19:0x003b \-\> B:26:0x0052, CROSS_EDGE: B:17:0x0035 \-\> B:26:0x0052, CROSS_EDGE: B:15:0x002f \-\> B:16:0x0030, CROSS_EDGE: B:11:0x001d \-\> B:15:0x002f, CROSS_EDGE: B:7:0x0011 \-\> B:9:0x0016, CROSS_EDGE: B:5:0x000b \-\> B:9:0x0016, CROSS_EDGE: B:3:0x0007 \-\> B:10:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_26[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_26[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_37[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_37[style=dashed];
Node_34 -> Node_37;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_38 -> Node_43[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_44[style=dashed];
Node_41 -> Node_42;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_12 -> Node_13;
Node_18 -> Node_19;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_37 -> Node_38;
Node_42 -> Node_1;
Node_44 -> Node_1;
Node_43 -> Node_1;
}

