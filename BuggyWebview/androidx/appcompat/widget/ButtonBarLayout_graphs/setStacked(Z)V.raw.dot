digraph "CFG forandroidx.appcompat.widget.ButtonBarLayout.setStacked(Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r4 I:androidx.appcompat.widget.ButtonBarLayout) androidx.appcompat.widget.ButtonBarLayout.mStacked boolean  (LINE:165)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stacked' boolean)])  \-\> B:20:0x003d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stacked' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r4 I:androidx.appcompat.widget.ButtonBarLayout) androidx.appcompat.widget.ButtonBarLayout.mAllowStacking boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:? \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:183)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: IPUT  (r5 I:boolean A[D('stacked' boolean)]), (r4 I:androidx.appcompat.widget.ButtonBarLayout) androidx.appcompat.widget.ButtonBarLayout.mStacked boolean  (LINE:166)\l0x000c: INVOKE  (r4 I:androidx.appcompat.widget.ButtonBarLayout), (r5 I:int A[D('stacked' boolean)]) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.setOrientation(int):void A[MD:(int):void (c)] (LINE:168)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stacked' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0015  (LINE:169)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, short, byte, char]) = (8388613(0x800005, float:1.175495E\-38) ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: INVOKE  (r4 I:androidx.appcompat.widget.ButtonBarLayout), (r0 I:int) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.setGravity(int):void A[MD:(int):void (c)]\l0x001a: SGET  (r0 I:int) =  androidx.appcompat.R.id.spacer int  (LINE:171)\l0x001c: INVOKE  (r0 I:android.view.View) = (r4 I:androidx.appcompat.widget.ButtonBarLayout), (r0 I:int) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.findViewById(int):android.view.View A[MD:(int):android.view.View (s)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spacer' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x002b  (LINE:172)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('stacked' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0027  (LINE:173)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0028|0x0028: INVOKE  (r0 I:android.view.View A[D('spacer' android.view.View)]), (r1 I:int) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: INVOKE  (r1 I:int) = (r4 I:androidx.appcompat.widget.ButtonBarLayout) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.getChildCount():int A[MD:():int (s)] (LINE:178)\l0x002f: ARITH  (r2 I:int) = (r1 I:int A[D('childCount' int)]) + (\-2 int)  (LINE:179)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|LOOP_START\lLOOP:0: B:18:0x0031\-\>B:19:0x0033\l|0x0031: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x003d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|LOOP_END\lLOOP:0: B:18:0x0031\-\>B:19:0x0033\l|0x0033: INVOKE  (r3 I:android.view.View) = (r4 I:androidx.appcompat.widget.ButtonBarLayout), (r2 I:int A[D('i' int)]) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.getChildAt(int):android.view.View A[MD:(int):android.view.View (s)] (LINE:180)\l0x0037: INVOKE  (r4 I:androidx.appcompat.widget.ButtonBarLayout), (r3 I:android.view.View) type: VIRTUAL call: androidx.appcompat.widget.ButtonBarLayout.bringChildToFront(android.view.View):void A[MD:(android.view.View):void (s)]\l0x003a: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int)  (LINE:179)\l}"];
Node_21 [shape=record,label="{21\:\ 0x003d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:183)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: CONST  (r0 I:??[int, float, short, byte, char]) = (80 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|RETURN\lORIG_RETURN\l|0x003d: RETURN    (LINE:183)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.ButtonBarLayout.setStacked((r4 'this' I:androidx.appcompat.widget.ButtonBarLayout A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[D('stacked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0033 \-\> B:18:0x0031, CROSS_EDGE: B:15:0x0027 \-\> B:16:0x0028, CROSS_EDGE: B:12:0x0020 \-\> B:17:0x002b, CROSS_EDGE: B:10:0x0015 \-\> B:11:0x0017, CROSS_EDGE: B:6:0x0008 \-\> B:20:0x003d, CROSS_EDGE: B:4:0x0004 \-\> B:7:0x000a, CROSS_EDGE: B:3:0x0002 \-\> B:20:0x003d\lDebug Info:\l  0x0020\-0x003d: r0 'spacer' Landroid\/view\/View;\l  0x002f\-0x003d: r1 'childCount' I\l  0x0031\-0x003d: r2 'i' I\l  \-1 \-0x003d: r5 'stacked' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_22 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_18;
Node_21 -> Node_23;
Node_23 -> Node_1;
Node_10 -> Node_11;
Node_20 -> Node_1;
}

