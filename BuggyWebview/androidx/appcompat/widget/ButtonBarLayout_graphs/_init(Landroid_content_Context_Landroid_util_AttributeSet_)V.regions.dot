digraph "CFG forandroidx.appcompat.widget.ButtonBarLayout.\<init\>(Landroid\/content\/Context;Landroid\/util\/AttributeSet;)V" {
subgraph cluster_Region_1897378092 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super(r9, r10)\lr8.mLastWidthSize = \-1\landroid.content.res.TypedArray android.content.res.TypedArray r0 = r9.obtainStyledAttributes(r10, androidx.appcompat.C0019R.styleable.ButtonBarLayout)\landroidx.core.view.ViewCompat.saveAttributeDataForStyleable(r8, r9, androidx.appcompat.C0019R.styleable.ButtonBarLayout, r10, r0, 0, 0)\lr8.mAllowStacking = r0.getBoolean(androidx.appcompat.C0019R.styleable.ButtonBarLayout_allowStacking, true)\lr0.recycle()\l}"];
subgraph cluster_Region_168654595 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2064632639 {
label = "IF [B:3:0x0027] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0027|if (getOrientation() == 1) goto L3\l}"];
subgraph cluster_Region_429099178 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0029|setStacked(r8.mAllowStacking)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x002e|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.ButtonBarLayout.\<init\>((r8v0 'this' androidx.appcompat.widget.ButtonBarLayout A[IMMUTABLE_TYPE, THIS]), (r9v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'attrs' android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0027 \-\> B:5:0x002e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_2;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

