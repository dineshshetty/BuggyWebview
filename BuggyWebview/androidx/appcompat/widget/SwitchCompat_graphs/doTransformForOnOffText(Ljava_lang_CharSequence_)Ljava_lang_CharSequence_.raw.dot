digraph "CFG forandroidx.appcompat.widget.SwitchCompat.doTransformForOnOffText(Ljava\/lang\/CharSequence;)Ljava\/lang\/CharSequence;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|0x0001: INVOKE  (r0 I:androidx.appcompat.widget.AppCompatEmojiTextHelper) = (r2 I:androidx.appcompat.widget.SwitchCompat) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.getEmojiTextViewHelper():androidx.appcompat.widget.AppCompatEmojiTextHelper A[MD:():androidx.appcompat.widget.AppCompatEmojiTextHelper (m)] (LINE:876)\l0x0005: IGET  (r1 I:android.text.method.TransformationMethod) = (r2 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchTransformationMethod android.text.method.TransformationMethod \l0x0007: INVOKE  (r0 I:android.text.method.TransformationMethod) = (r0 I:androidx.appcompat.widget.AppCompatEmojiTextHelper), (r1 I:android.text.method.TransformationMethod) type: VIRTUAL call: androidx.appcompat.widget.AppCompatEmojiTextHelper.wrapTransformationMethod(android.text.method.TransformationMethod):android.text.method.TransformationMethod A[MD:(android.text.method.TransformationMethod):android.text.method.TransformationMethod (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transformationMethod' android.text.method.TransformationMethod)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0012  (LINE:877)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: INVOKE  (r1 I:java.lang.CharSequence) = \l  (r0 I:android.text.method.TransformationMethod A[D('transformationMethod' android.text.method.TransformationMethod)])\l  (r3 I:java.lang.CharSequence A[D('onOffText' java.lang.CharSequence)])\l  (r2 I:android.view.View)\l type: INTERFACE call: android.text.method.TransformationMethod.getTransformation(java.lang.CharSequence, android.view.View):java.lang.CharSequence A[MD:(java.lang.CharSequence, android.view.View):java.lang.CharSequence (c)] (LINE:878)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN  (r1 I:java.lang.CharSequence) A[SYNTHETIC] (LINE:877)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|0x0012: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('onOffText' java.lang.CharSequence)])  (LINE:879)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN  (r1 I:java.lang.CharSequence)  (LINE:877)\l}"];
MethodNode[shape=record,label="{private java.lang.CharSequence androidx.appcompat.widget.SwitchCompat.doTransformForOnOffText((r2 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('onOffText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0012 \-\> B:14:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0013: r0 'transformationMethod' Landroid\/text\/method\/TransformationMethod;\l  \-1 \-0x0013: r3 'onOffText' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

