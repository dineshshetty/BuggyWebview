digraph "CFG forandroidx.appcompat.widget.SwitchCompat.drawableHotspotChanged(FF)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 21) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|super.drawableHotspotChanged(r3, r4)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|android.graphics.drawable.Drawable r0 = r2.mThumbDrawable\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|if (r0 == null) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|androidx.core.graphics.drawable.DrawableCompat.setHotspot(r0, r3, r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|android.graphics.drawable.Drawable r0 = r2.mTrackDrawable\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|if (r0 == null) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|androidx.core.graphics.drawable.DrawableCompat.setHotspot(r0, r3, r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.drawableHotspotChanged((r2v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x0012 \-\> B:24:0x0017, CROSS_EDGE: B:19:0x000b \-\> B:21:0x0010, CROSS_EDGE: B:16:0x0004 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.drawableHotspotChanged(float, float):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

