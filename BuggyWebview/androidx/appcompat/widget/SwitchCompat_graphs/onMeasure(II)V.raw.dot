digraph "CFG forandroidx.appcompat.widget.SwitchCompat.onMeasure(II)V" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mShowText boolean  (LINE:914)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001c \l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|0x0004: IGET  (r0 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOnLayout android.text.Layout  (LINE:915)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0010 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.CharSequence) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOnTransformed java.lang.CharSequence  (LINE:916)\l0x000a: INVOKE  (r0 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat), (r0 I:java.lang.CharSequence) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.makeLayout(java.lang.CharSequence):android.text.Layout A[MD:(java.lang.CharSequence):android.text.Layout (m)]\l0x000e: IPUT  (r0 I:android.text.Layout), (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOnLayout android.text.Layout \l}"];
Node_41 [shape=record,label="{41\:\ 0x0010|0x0010: IGET  (r0 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOffLayout android.text.Layout  (LINE:919)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001c \l}"];
Node_43 [shape=record,label="{43\:\ 0x0014|0x0014: IGET  (r0 I:java.lang.CharSequence) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOffTransformed java.lang.CharSequence  (LINE:920)\l0x0016: INVOKE  (r0 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat), (r0 I:java.lang.CharSequence) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.makeLayout(java.lang.CharSequence):android.text.Layout A[MD:(java.lang.CharSequence):android.text.Layout (m)]\l0x001a: IPUT  (r0 I:android.text.Layout), (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOffLayout android.text.Layout \l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|0x001c: IGET  (r0 I:android.graphics.Rect) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTempRect android.graphics.Rect  (LINE:924)\l0x001e: IGET  (r1 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:927)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0038 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|0x0022: INVOKE  (r1 I:android.graphics.drawable.Drawable), (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:929)\l0x0025: IGET  (r1 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:930)\l0x0027: INVOKE  (r1 I:int) = (r1 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l0x002b: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l0x002d: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x002e: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l0x0030: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x0031: IGET  (r2 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:931)\l0x0033: INVOKE  (r2 I:int) = (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x003a|0x003a: IGET  (r3 I:boolean) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mShowText boolean  (LINE:938)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|0x003c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0054 \l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|0x003e: IGET  (r3 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOnLayout android.text.Layout  (LINE:939)\l0x0040: INVOKE  (r3 I:int) = (r3 I:android.text.Layout) type: VIRTUAL call: android.text.Layout.getWidth():int A[MD:():int (c)]\l0x0044: IGET  (r4 I:android.text.Layout) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOffLayout android.text.Layout \l0x0046: INVOKE  (r4 I:int) = (r4 I:android.text.Layout) type: VIRTUAL call: android.text.Layout.getWidth():int A[MD:():int (c)]\l0x004a: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x004e: IGET  (r4 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbTextPadding int \l0x0050: ARITH  (r4 I:int) = (r4 I:int) * (2 int) \l0x0052: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0055|0x0055: INVOKE  (r4 I:int) = (r3 I:int A[D('maxTextWidth' int)]), (r1 I:int A[D('thumbWidth' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:945)\l0x0059: IPUT  (r4 I:int), (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbWidth int \l0x005b: IGET  (r4 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable  (LINE:948)\l}"];
Node_53 [shape=record,label="{53\:\ 0x005d|0x005d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0069 \l}"];
Node_54 [shape=record,label="{54\:\ 0x005f|0x005f: INVOKE  (r4 I:android.graphics.drawable.Drawable), (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:949)\l0x0062: IGET  (r4 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable  (LINE:950)\l0x0064: INVOKE  (r4 I:int) = (r4 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x006d|0x006d: IGET  (r5 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:958)\l0x006f: IGET  (r6 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:959)\l0x0071: IGET  (r7 I:android.graphics.drawable.Drawable) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:960)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|0x0073: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0085 \l}"];
Node_58 [shape=record,label="{58\:\ 0x0075|0x0075: INVOKE  (r7 I:android.graphics.Rect) = (r7 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.appcompat.widget.DrawableUtils.getOpticalBounds(android.graphics.drawable.Drawable):android.graphics.Rect A[MD:(android.graphics.drawable.Drawable):android.graphics.Rect (m)] (LINE:961)\l0x0079: IGET  (r8 I:int) = (r7 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:962)\l0x007b: INVOKE  (r5 I:int A[D('paddingLeft' int)]) = (r5 I:int A[D('paddingLeft' int)]), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x007f: IGET  (r8 I:int) = (r7 I:android.graphics.Rect A[D('inset' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:963)\l0x0081: INVOKE  (r6 I:int A[D('paddingRight' int)]) = (r6 I:int A[D('paddingRight' int)]), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0085|0x0085: IGET  (r7 I:boolean A[D('inset' android.graphics.Rect)]) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mEnforceSwitchWidth boolean  (LINE:967)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0087|0x0087: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x0096 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0089|0x0089: IGET  (r7 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchMinWidth int  (LINE:968)\l0x008b: IGET  (r8 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbWidth int \l0x008d: ARITH  (r8 I:int) = (r8 I:int) * (2 int) \l0x008f: ARITH  (r8 I:int) = (r8 I:int) + (r5 I:int A[D('paddingLeft' int)]) \l0x0090: ARITH  (r8 I:int) = (r8 I:int) + (r6 I:int A[D('paddingRight' int)]) \l0x0091: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0098|0x0099: INVOKE  (r8 I:int) = (r4 I:int A[D('trackHeight' int)]), (r2 I:int A[D('thumbHeight' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:970)\l0x009d: IPUT  (r7 I:int A[D('switchWidth' int)]), (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchWidth int  (LINE:971)\l0x009f: IPUT  (r8 I:int A[D('switchHeight' int)]), (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchHeight int  (LINE:972)\l0x00a1: INVOKE  \l  (r11 I:android.widget.CompoundButton)\l  (r12 I:int A[D('widthMeasureSpec' int)])\l  (r13 I:int A[D('heightMeasureSpec' int)])\l type: SUPER call: android.widget.CompoundButton.onMeasure(int, int):void A[MD:(int, int):void (s)] (LINE:974)\l0x00a4: INVOKE  (r9 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getMeasuredHeight():int A[MD:():int (s)] (LINE:976)\l}"];
Node_64 [shape=record,label="{64\:\ 0x00a8|0x00a8: IF  (r9 I:??[int, byte, short, char] A[D('measuredHeight' int)]) \>= (r8 I:??[int, byte, short, char] A[D('switchHeight' int)])  \-\> B:67:?  (LINE:977)\l}"];
Node_65 [shape=record,label="{65\:\ 0x00aa|0x00aa: INVOKE  (r10 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getMeasuredWidthAndState():int A[MD:():int (s)] (LINE:978)\l0x00ae: INVOKE  (r11 I:androidx.appcompat.widget.SwitchCompat), (r10 I:int), (r8 I:int A[D('switchHeight' int)]) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.setMeasuredDimension(int, int):void A[MD:(int, int):void (s)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x00b1|RETURN\lORIG_RETURN\l|0x00b1: RETURN    (LINE:980)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x00b1: RETURN   A[SYNTHETIC] (LINE:980)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0096|0x0096: IGET  (r7 I:int) = (r11 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchMinWidth int  (LINE:969)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0069|0x0069: INVOKE  (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.setEmpty():void A[MD:():void (c)] (LINE:952)\l0x006c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:953)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|0x0054: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxTextWidth' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:942)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0038|0x0038: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('thumbWidth' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:933)\l0x0039: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:934)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.onMeasure((r11 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:64:0x00a8 \-\> B:66:0x00b1, CROSS_EDGE: B:62:0x0096 \-\> B:63:0x0098, CROSS_EDGE: B:57:0x0073 \-\> B:59:0x0085, CROSS_EDGE: B:55:0x0069 \-\> B:56:0x006d, CROSS_EDGE: B:51:0x0054 \-\> B:52:0x0055, CROSS_EDGE: B:47:0x0038 \-\> B:48:0x003a, CROSS_EDGE: B:42:0x0012 \-\> B:44:0x001c, CROSS_EDGE: B:39:0x0006 \-\> B:41:0x0010, CROSS_EDGE: B:37:0x0002 \-\> B:44:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x0038: r1 'thumbWidth' I\l  0x0037\-0x0038: r2 'thumbHeight' I\l  0x0053\-0x0054: r3 'maxTextWidth' I\l  0x0068\-0x0069: r4 'trackHeight' I\l  0x0079\-0x0085: r7 'inset' Landroid\/graphics\/Rect;\l  0x001e\-0x00b1: r0 'padding' Landroid\/graphics\/Rect;\l  0x0039\-0x00b1: r1 'thumbWidth' I\l  0x003a\-0x00b1: r2 'thumbHeight' I\l  0x0055\-0x00b1: r3 'maxTextWidth' I\l  0x006d\-0x00b1: r4 'trackHeight' I\l  0x006f\-0x00b1: r5 'paddingLeft' I\l  0x0071\-0x00b1: r6 'paddingRight' I\l  0x0099\-0x00b1: r7 'switchWidth' I\l  0x009d\-0x00b1: r8 'switchHeight' I\l  0x00a8\-0x00b1: r9 'measuredHeight' I\l  \-1 \-0x00b1: r12 'widthMeasureSpec' I\l  \-1 \-0x00b1: r13 'heightMeasureSpec' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_67;
Node_65 -> Node_66;
Node_66 -> Node_35;
Node_67 -> Node_35;
Node_62 -> Node_63;
Node_55 -> Node_56;
Node_51 -> Node_52;
Node_47 -> Node_48;
}

