digraph "CFG forandroidx.appcompat.widget.SwitchCompat.draw(Landroid\/graphics\/Canvas;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|android.graphics.Rect r0 = r13.mTempRect\lint r1 = r13.mSwitchLeft\lint r2 = r13.mSwitchTop\lint r3 = r13.mSwitchRight\lint r4 = r13.mSwitchBottom\lint r5 = getThumbOffset() + r1\landroid.graphics.drawable.Drawable r6 = r13.mThumbDrawable\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|if (r6 == null) goto L29\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|android.graphics.Rect r6 = androidx.appcompat.widget.DrawableUtils.getOpticalBounds(r6)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|PHI: r6 \l  PHI: (r6v2 'thumbInsets' android.graphics.Rect) = (r6v1 'thumbInsets' android.graphics.Rect), (r6v3 'thumbInsets' android.graphics.Rect) binds: [B:35:0x0018, B:34:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable r7 = r13.mTrackDrawable\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|if (r7 == null) goto L21\l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|r7.getPadding(r0)\lint r5 = r5 + r0.left\lr7 = r1\lr8 = r2\lr9 = r3\lr10 = r4\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|if (r6 == null) goto L20\l}"];
Node_40 [shape=record,label="{40\:\ 0x002a}"];
Node_41 [shape=record,label="{41\:\ 0x002e|if (r6.left \<= r0.left) goto L11\l}"];
Node_42 [shape=record,label="{42\:\ 0x0030|int r7 = r7 + (r6.left \- r0.left)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0036|PHI: r7 \l  PHI: (r7v7 'trackLeft' int) = (r7v5 'trackLeft' int), (r7v8 'trackLeft' int) binds: [B:41:0x002e, B:42:0x0030] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|if (r6.top \<= r0.top) goto L14\l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|int r8 = r8 + (r6.top \- r0.top)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0042|PHI: r8 \l  PHI: (r8v5 'trackTop' int) = (r8v3 'trackTop' int), (r8v6 'trackTop' int) binds: [B:44:0x003a, B:45:0x003c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0046|if (r6.right \<= r0.right) goto L17\l}"];
Node_48 [shape=record,label="{48\:\ 0x0048|int r9 = r9 \- (r6.right \- r0.right)\l}"];
Node_49 [shape=record,label="{49\:\ 0x004e|PHI: r9 \l  PHI: (r9v5 'trackRight' int) = (r9v3 'trackRight' int), (r9v6 'trackRight' int) binds: [B:47:0x0046, B:48:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0052|if (r6.bottom \<= r0.bottom) goto L20\l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|int r10 = r10 \- (r6.bottom \- r0.bottom)\l}"];
Node_52 [shape=record,label="{52\:\ 0x005a|PHI: r7 r8 r9 r10 \l  PHI: (r7v6 'trackLeft' int) = (r7v5 'trackLeft' int), (r7v7 'trackLeft' int), (r7v7 'trackLeft' int) binds: [B:39:0x0028, B:50:0x0052, B:51:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v4 'trackTop' int) = (r8v3 'trackTop' int), (r8v5 'trackTop' int), (r8v5 'trackTop' int) binds: [B:39:0x0028, B:50:0x0052, B:51:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v4 'trackRight' int) = (r9v3 'trackRight' int), (r9v5 'trackRight' int), (r9v5 'trackRight' int) binds: [B:39:0x0028, B:50:0x0052, B:51:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'trackBottom' int) = (r10v0 'trackBottom' int), (r10v0 'trackBottom' int), (r10v2 'trackBottom' int) binds: [B:39:0x0028, B:50:0x0052, B:51:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|r13.mTrackDrawable.setBounds(r7, r8, r9, r10)\l}"];
Node_53 [shape=record,label="{53\:\ 0x005f|PHI: r5 \l  PHI: (r5v2 'thumbInitialLeft' int) = (r5v1 'thumbInitialLeft' int), (r5v3 'thumbInitialLeft' int) binds: [B:37:0x001c, B:52:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.drawable.Drawable r7 = r13.mThumbDrawable\l}"];
Node_54 [shape=record,label="{54\:\ 0x0061|if (r7 == null) goto L26\l}"];
Node_55 [shape=record,label="{55\:\ 0x0063|r7.getPadding(r0)\lint r7 = r5 \- r0.left\lint r8 = (r13.mThumbWidth + r5) + r0.right\lr13.mThumbDrawable.setBounds(r7, r2, r8, r4)\landroid.graphics.drawable.Drawable r9 = getBackground()\l}"];
Node_56 [shape=record,label="{56\:\ 0x0079|if (r9 == null) goto L26\l}"];
Node_57 [shape=record,label="{57\:\ 0x007b|androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(r9, r7, r2, r8, r4)\l}"];
Node_58 [shape=record,label="{58\:\ 0x007e|super.draw(r14)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0081|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|android.graphics.Rect r6 = androidx.appcompat.widget.DrawableUtils.INSETS_NONE\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.draw((r13v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r14v0 'c' android.graphics.Canvas A[D('c' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:56:0x0079 \-\> B:58:0x007e, CROSS_EDGE: B:54:0x0061 \-\> B:58:0x007e, CROSS_EDGE: B:50:0x0052 \-\> B:52:0x005a, CROSS_EDGE: B:47:0x0046 \-\> B:49:0x004e, CROSS_EDGE: B:44:0x003a \-\> B:46:0x0042, CROSS_EDGE: B:41:0x002e \-\> B:43:0x0036, CROSS_EDGE: B:39:0x0028 \-\> B:52:0x005a, CROSS_EDGE: B:37:0x001c \-\> B:53:0x005f, CROSS_EDGE: B:35:0x0018 \-\> B:36:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_53;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_52;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_31;
Node_35 -> Node_36;
}

