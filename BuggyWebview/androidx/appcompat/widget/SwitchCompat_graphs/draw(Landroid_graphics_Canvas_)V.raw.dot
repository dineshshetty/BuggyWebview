digraph "CFG forandroidx.appcompat.widget.SwitchCompat.draw(Landroid\/graphics\/Canvas;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Rect) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTempRect android.graphics.Rect  (LINE:1262)\l0x0002: IGET  (r1 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchLeft int  (LINE:1263)\l0x0004: IGET  (r2 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchTop int  (LINE:1264)\l0x0006: IGET  (r3 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchRight int  (LINE:1265)\l0x0008: IGET  (r4 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchBottom int  (LINE:1266)\l0x000a: INVOKE  (r5 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.getThumbOffset():int A[MD:():int (m)] (LINE:1268)\l0x000e: ARITH  (r5 I:int) = (r5 I:int) + (r1 I:int A[D('switchLeft' int)]) \l0x000f: IGET  (r6 I:android.graphics.drawable.Drawable) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:1271)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0011|0x0011: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0018 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|0x0013: INVOKE  (r6 I:android.graphics.Rect) = (r6 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.appcompat.widget.DrawableUtils.getOpticalBounds(android.graphics.drawable.Drawable):android.graphics.Rect A[MD:(android.graphics.drawable.Drawable):android.graphics.Rect (m)] (LINE:1272)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001a|0x001a: IGET  (r7 I:android.graphics.drawable.Drawable) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable  (LINE:1278)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001c|0x001c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x005f \l}"];
Node_38 [shape=record,label="{38\:\ 0x001e|0x001e: INVOKE  (r7 I:android.graphics.drawable.Drawable), (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:1279)\l0x0021: IGET  (r7 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1282)\l0x0023: ARITH  (r5 I:int) = (r5 I:int A[D('thumbInitialLeft' int)]) + (r7 I:int) \l0x0024: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('switchLeft' int)])  (LINE:1285)\l0x0025: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('switchTop' int)])  (LINE:1286)\l0x0026: MOVE  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('switchRight' int)])  (LINE:1287)\l0x0027: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('switchBottom' int)])  (LINE:1288)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thumbInsets' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x005a  (LINE:1289)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002a|0x002a: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1290)\l0x002c: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l}"];
Node_41 [shape=record,label="{41\:\ 0x002e|0x002e: IF  (r11 I:??[int, byte, short, char]) \<= (r12 I:??[int, byte, short, char])  \-\> B:43:0x0036 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0030|0x0030: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1291)\l0x0032: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0034: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x0035: ARITH  (r7 I:int) = (r7 I:int A[D('trackLeft' int)]) + (r11 I:int) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0036|0x0036: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1293)\l0x0038: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.top int \l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|0x003a: IF  (r11 I:??[int, byte, short, char]) \<= (r12 I:??[int, byte, short, char])  \-\> B:46:0x0042 \l}"];
Node_45 [shape=record,label="{45\:\ 0x003c|0x003c: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1294)\l0x003e: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.top int \l0x0040: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x0041: ARITH  (r8 I:int) = (r8 I:int A[D('trackTop' int)]) + (r11 I:int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0042|0x0042: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:1296)\l0x0044: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l}"];
Node_47 [shape=record,label="{47\:\ 0x0046|0x0046: IF  (r11 I:??[int, byte, short, char]) \<= (r12 I:??[int, byte, short, char])  \-\> B:49:0x004e \l}"];
Node_48 [shape=record,label="{48\:\ 0x0048|0x0048: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:1297)\l0x004a: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l0x004c: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x004d: ARITH  (r9 I:int) = (r9 I:int A[D('trackRight' int)]) \- (r11 I:int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x004e|0x004e: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:1299)\l0x0050: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.bottom int \l}"];
Node_50 [shape=record,label="{50\:\ 0x0052|0x0052: IF  (r11 I:??[int, byte, short, char]) \<= (r12 I:??[int, byte, short, char])  \-\> B:52:0x005a \l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|0x0054: IGET  (r11 I:int) = (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:1300)\l0x0056: IGET  (r12 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x0058: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x0059: ARITH  (r10 I:int) = (r10 I:int A[D('trackBottom' int)]) \- (r11 I:int) \l}"];
Node_52 [shape=record,label="{52\:\ 0x005a|0x005a: IGET  (r11 I:android.graphics.drawable.Drawable) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable  (LINE:1303)\l0x005c: INVOKE  \l  (r11 I:android.graphics.drawable.Drawable)\l  (r7 I:int A[D('trackLeft' int)])\l  (r8 I:int A[D('trackTop' int)])\l  (r9 I:int A[D('trackRight' int)])\l  (r10 I:int A[D('trackBottom' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x005f|0x005f: IGET  (r7 I:android.graphics.drawable.Drawable A[D('trackLeft' int)]) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:1307)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0061|0x0061: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x007e \l}"];
Node_55 [shape=record,label="{55\:\ 0x0063|0x0063: INVOKE  (r7 I:android.graphics.drawable.Drawable), (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:1308)\l0x0066: IGET  (r7 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1310)\l0x0068: ARITH  (r7 I:int) = (r5 I:int A[D('thumbInitialLeft' int)]) \- (r7 I:int) \l0x006a: IGET  (r8 I:int) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbWidth int  (LINE:1311)\l0x006c: ARITH  (r8 I:int) = (r8 I:int) + (r5 I:int A[D('thumbInitialLeft' int)]) \l0x006d: IGET  (r9 I:int) = (r0 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l0x006f: ARITH  (r8 I:int) = (r8 I:int) + (r9 I:int) \l0x0070: IGET  (r9 I:android.graphics.drawable.Drawable) = (r13 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:1312)\l0x0072: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable)\l  (r7 I:int A[D('thumbLeft' int)])\l  (r2 I:int A[D('switchTop' int)])\l  (r8 I:int A[D('thumbRight' int)])\l  (r4 I:int A[D('switchBottom' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0075: INVOKE  (r9 I:android.graphics.drawable.Drawable) = (r13 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getBackground():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (s)] (LINE:1314)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0079|0x0079: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('background' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x007e  (LINE:1315)\l}"];
Node_57 [shape=record,label="{57\:\ 0x007b|0x007b: INVOKE  \l  (r9 I:android.graphics.drawable.Drawable A[D('background' android.graphics.drawable.Drawable)])\l  (r7 I:int A[D('thumbLeft' int)])\l  (r2 I:int A[D('switchTop' int)])\l  (r8 I:int A[D('thumbRight' int)])\l  (r4 I:int A[D('switchBottom' int)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int):void A[MD:(android.graphics.drawable.Drawable, int, int, int, int):void (m)] (LINE:1316)\l}"];
Node_58 [shape=record,label="{58\:\ 0x007e|0x007e: INVOKE  (r13 I:android.widget.CompoundButton), (r14 I:android.graphics.Canvas A[D('c' android.graphics.Canvas)]) type: SUPER call: android.widget.CompoundButton.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (s)] (LINE:1322)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0081|RETURN\l|0x0081: RETURN    (LINE:1323)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ 0x0018|0x0018: SGET  (r6 I:android.graphics.Rect A[D('thumbInsets' android.graphics.Rect)]) =  androidx.appcompat.widget.DrawableUtils.INSETS_NONE android.graphics.Rect  (LINE:1274)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.draw((r13 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r14 I:android.graphics.Canvas A[D('c' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:56:0x0079 \-\> B:58:0x007e, CROSS_EDGE: B:54:0x0061 \-\> B:58:0x007e, CROSS_EDGE: B:50:0x0052 \-\> B:52:0x005a, CROSS_EDGE: B:47:0x0046 \-\> B:49:0x004e, CROSS_EDGE: B:44:0x003a \-\> B:46:0x0042, CROSS_EDGE: B:41:0x002e \-\> B:43:0x0036, CROSS_EDGE: B:39:0x0028 \-\> B:52:0x005a, CROSS_EDGE: B:37:0x001c \-\> B:53:0x005f, CROSS_EDGE: B:35:0x0018 \-\> B:36:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0017\-0x0018: r6 'thumbInsets' Landroid\/graphics\/Rect;\l  0x0025\-0x005f: r7 'trackLeft' I\l  0x0026\-0x005f: r8 'trackTop' I\l  0x0027\-0x005f: r9 'trackRight' I\l  0x0028\-0x005f: r10 'trackBottom' I\l  0x006a\-0x007e: r7 'thumbLeft' I\l  0x0070\-0x007e: r8 'thumbRight' I\l  0x0079\-0x007e: r9 'background' Landroid\/graphics\/drawable\/Drawable;\l  0x0002\-0x0081: r0 'padding' Landroid\/graphics\/Rect;\l  0x0004\-0x0081: r1 'switchLeft' I\l  0x0006\-0x0081: r2 'switchTop' I\l  0x0008\-0x0081: r3 'switchRight' I\l  0x000a\-0x0081: r4 'switchBottom' I\l  0x000f\-0x0081: r5 'thumbInitialLeft' I\l  0x001a\-0x0081: r6 'thumbInsets' Landroid\/graphics\/Rect;\l  \-1 \-0x0081: r14 'c' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_53;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_52;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_31;
Node_35 -> Node_36;
}

