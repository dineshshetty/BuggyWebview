digraph "CFG forandroidx.appcompat.widget.SwitchCompat.hitThumb(FF)Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000}"];
Node_22 [shape=record,label="{22\:\ 0x0003|if (r7.mThumbDrawable != null) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x0005|RETURN\l|return false\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|int r0 = getThumbOffset()\lr7.mThumbDrawable.getPadding(r7.mTempRect)\lint r2 = r7.mSwitchTop\lint r3 = r7.mTouchSlop\lint r2 = r2 \- r3\lint r4 = (r7.mSwitchLeft + r0) \- r3\lint r3 = ((r7.mThumbWidth + r4) + r7.mTempRect.left) + r7.mTempRect.right\lint r5 = r7.mTouchSlop\lint r3 = r3 + r5\lint r6 = r7.mSwitchBottom + r5\l}"];
Node_25 [shape=record,label="{25\:\ 0x0030|if ((r8 \> ((float) r4) ? 1 : (r8 == ((float) r4) ? 0 : \-1)) \<= 0) goto L17\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032}"];
Node_27 [shape=record,label="{27\:\ 0x0035|if ((r8 \> ((float) r3) ? 1 : (r8 == ((float) r3) ? 0 : \-1)) \>= 0) goto L16\l}"];
Node_28 [shape=record,label="{28\:\ 0x0037}"];
Node_29 [shape=record,label="{29\:\ 0x003a|if ((r9 \> ((float) r2) ? 1 : (r9 == ((float) r2) ? 0 : \-1)) \<= 0) goto L15\l}"];
Node_30 [shape=record,label="{30\:\ 0x003c}"];
Node_31 [shape=record,label="{31\:\ 0x003f|if ((r9 \> ((float) r6) ? 1 : (r9 == ((float) r6) ? 0 : \-1)) \>= 0) goto L14\l}"];
Node_32 [shape=record,label="{32\:\ 0x0041|RETURN\lORIG_RETURN\l|return true\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.widget.SwitchCompat.hitThumb((r7v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r8v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0042 \-\> B:20:?, CROSS_EDGE: B:31:0x003f \-\> B:33:0x0042, CROSS_EDGE: B:29:0x003a \-\> B:33:0x0042, CROSS_EDGE: B:27:0x0035 \-\> B:33:0x0042, CROSS_EDGE: B:25:0x0030 \-\> B:33:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_20;
Node_37 -> Node_20;
Node_36 -> Node_20;
Node_35 -> Node_20;
Node_34 -> Node_20;
}

