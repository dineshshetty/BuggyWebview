digraph "CFG forandroidx.appcompat.widget.SwitchCompat.stopDrag(Landroid\/view\/MotionEvent;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1111)\l0x0001: IPUT  (r0 I:int), (r7 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTouchMode int \l0x0003: INVOKE  (r1 I:int) = (r8 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: VIRTUAL call: android.view.MotionEvent.getAction():int A[MD:():int (c)] (LINE:1115)\l0x0007: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0012 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = (r7 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.isEnabled():boolean A[MD:():boolean (s)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0012 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0010|0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|0x0013: INVOKE  (r3 I:boolean) = (r7 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.isChecked():boolean A[MD:():boolean (c)] (LINE:1116)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('commitChange' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0049  (LINE:1118)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x0019: IGET  (r4 I:android.view.VelocityTracker) = (r7 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mVelocityTracker android.view.VelocityTracker  (LINE:1119)\l0x001b: CONST  (r5 I:??[int, float, short, byte, char]) = (1000(0x3e8, float:1.401E\-42) ??[int, float, short, byte, char]) \l0x001d: INVOKE  (r4 I:android.view.VelocityTracker), (r5 I:int) type: VIRTUAL call: android.view.VelocityTracker.computeCurrentVelocity(int):void A[MD:(int):void (c)]\l0x0020: IGET  (r4 I:android.view.VelocityTracker) = (r7 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mVelocityTracker android.view.VelocityTracker  (LINE:1120)\l0x0022: INVOKE  (r4 I:float) = (r4 I:android.view.VelocityTracker) type: VIRTUAL call: android.view.VelocityTracker.getXVelocity():float A[MD:():float (c)]\l0x0026: INVOKE  (r5 I:float) = (r4 I:float A[D('xvel' float)]) type: STATIC call: java.lang.Math.abs(float):float A[MD:(float):float (c)] (LINE:1121)\l0x002a: IGET  (r6 I:int) = (r7 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mMinFlingVelocity int \l0x002c: CAST (r6 I:float) = (float) (r6 I:int) \l0x002d: CMP_L  (r5 I:int) = (r5 I:float), (r6 I:float) \l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|0x002f: IF  (r5 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:51:0x0044 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0031|0x0031: INVOKE  (r5 I:boolean) = (r7 I:android.view.View) type: STATIC call: androidx.appcompat.widget.ViewUtils.isLayoutRtl(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:1122)\l0x0035: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|0x0036: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x003d \l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|0x0038: CMP_G  (r5 I:int) = (r4 I:float A[D('xvel' float)]), (r6 I:float) \l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|0x003a: IF  (r5 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:49:0x0042 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0042|0x0042: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x004a|0x004a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newState' boolean)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('oldState' boolean)])  \-\> B:56:0x004f  (LINE:1130)\l}"];
Node_55 [shape=record,label="{55\:\ 0x004c|0x004c: INVOKE  (r7 I:androidx.appcompat.widget.SwitchCompat), (r0 I:int) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.playSoundEffect(int):void A[MD:(int):void (s)] (LINE:1131)\l}"];
Node_56 [shape=record,label="{56\:\ 0x004f|0x004f: INVOKE  (r7 I:androidx.appcompat.widget.SwitchCompat), (r2 I:boolean A[D('newState' boolean)]) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.setChecked(boolean):void A[MD:(boolean):void (m)] (LINE:1134)\l0x0052: INVOKE  (r7 I:androidx.appcompat.widget.SwitchCompat), (r8 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent)]) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.cancelSuperTouch(android.view.MotionEvent):void A[MD:(android.view.MotionEvent):void (m)] (LINE:1135)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0055|RETURN\l|0x0055: RETURN    (LINE:1136)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x003d|0x003d: CMP_L  (r5 I:int) = (r4 I:float A[D('xvel' float)]), (r6 I:float) \l}"];
Node_47 [shape=record,label="{47\:\ 0x003f|0x003f: IF  (r5 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:49:0x0042 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0044|0x0044: INVOKE  (r2 I:boolean) = (r7 I:androidx.appcompat.widget.SwitchCompat) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.getTargetCheckedState():boolean A[MD:():boolean (m)] (LINE:1124)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0049|0x0049: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newState' boolean)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('oldState' boolean)])  (LINE:1127)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0012|0x0012: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.widget.SwitchCompat.stopDrag((r7 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r8 I:android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:54:0x004a \-\> B:56:0x004f, CROSS_EDGE: B:44:0x003a \-\> B:54:0x004a, CROSS_EDGE: B:47:0x003f \-\> B:49:0x0042, CROSS_EDGE: B:47:0x003f \-\> B:54:0x004a, CROSS_EDGE: B:51:0x0044 \-\> B:54:0x004a, CROSS_EDGE: B:53:0x0049 \-\> B:54:0x004a, CROSS_EDGE: B:36:0x0012 \-\> B:37:0x0013, CROSS_EDGE: B:32:0x0008 \-\> B:36:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0043\-0x0044: r2 'newState' Z\l  0x0026\-0x0048: r4 'xvel' F\l  0x0048\-0x0049: r2 'newState' Z\l  0x0013\-0x0055: r1 'commitChange' Z\l  0x004a\-0x0055: r2 'newState' Z\l  0x0017\-0x0055: r3 'oldState' Z\l  \-1 \-0x0055: r8 'ev' Landroid\/view\/MotionEvent;\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_53;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_51;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_49;
Node_44 -> Node_54[style=dashed];
Node_49 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_47 -> Node_54[style=dashed];
Node_51 -> Node_54;
Node_53 -> Node_54;
Node_36 -> Node_37;
}

