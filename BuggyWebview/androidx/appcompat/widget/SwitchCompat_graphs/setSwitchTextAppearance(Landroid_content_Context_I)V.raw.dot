digraph "CFG forandroidx.appcompat.widget.SwitchCompat.setSwitchTextAppearance(Landroid\/content\/Context;I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.appcompat.R.styleable.TextAppearance int[]  (LINE:341)\l0x0002: INVOKE  (r0 I:androidx.appcompat.widget.TintTypedArray) = (r9 I:android.content.Context A[D('context' android.content.Context)]), (r10 I:int A[D('resid' int)]), (r0 I:int[]) type: STATIC call: androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context, int, int[]):androidx.appcompat.widget.TintTypedArray A[MD:(android.content.Context, int, int[]):androidx.appcompat.widget.TintTypedArray (m)]\l0x0006: SGET  (r1 I:int) =  androidx.appcompat.R.styleable.TextAppearance_android_textColor int  (LINE:347)\l0x0008: INVOKE  (r1 I:android.content.res.ColorStateList) = (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)]), (r1 I:int) type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.getColorStateList(int):android.content.res.ColorStateList A[MD:(int):android.content.res.ColorStateList (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('colors' android.content.res.ColorStateList)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0011  (LINE:348)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IPUT  \l  (r1 I:android.content.res.ColorStateList A[D('colors' android.content.res.ColorStateList)])\l  (r8 I:androidx.appcompat.widget.SwitchCompat)\l androidx.appcompat.widget.SwitchCompat.mTextColors android.content.res.ColorStateList  (LINE:349)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: SGET  (r2 I:int) =  androidx.appcompat.R.styleable.TextAppearance_android_textSize int  (LINE:355)\l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: INVOKE  (r2 I:int) = \l  (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)])\l  (r2 I:int)\l  (r3 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int, int):int A[MD:(int, int):int (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ts' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0034  (LINE:356)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: CAST (r4 I:float) = (float) (r2 I:int A[D('ts' int)])  (LINE:357)\l0x0021: IGET  (r5 I:android.text.TextPaint) = (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextPaint android.text.TextPaint \l0x0023: INVOKE  (r5 I:float) = (r5 I:android.text.TextPaint) type: VIRTUAL call: android.text.TextPaint.getTextSize():float A[MD:():float (c)]\l0x0027: CMP_L  (r4 I:int) = (r4 I:float), (r5 I:float) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0034 \l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: IGET  (r4 I:android.text.TextPaint) = (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextPaint android.text.TextPaint  (LINE:358)\l0x002d: CAST (r5 I:float) = (float) (r2 I:int A[D('ts' int)]) \l0x002e: INVOKE  (r4 I:android.text.TextPaint), (r5 I:float) type: VIRTUAL call: android.text.TextPaint.setTextSize(float):void A[MD:(float):void (c)]\l0x0031: INVOKE  (r8 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.requestLayout():void A[MD:():void (s)] (LINE:359)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0034|0x0034: SGET  (r4 I:int) =  androidx.appcompat.R.styleable.TextAppearance_android_typeface int  (LINE:364)\l0x0036: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0037: INVOKE  (r4 I:int) = \l  (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)])\l  (r4 I:int)\l  (r5 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.getInt(int, int):int A[MD:(int, int):int (m)]\l0x003b: SGET  (r6 I:int) =  androidx.appcompat.R.styleable.TextAppearance_android_textStyle int  (LINE:365)\l0x003d: INVOKE  (r5 I:int) = \l  (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)])\l  (r6 I:int)\l  (r5 I:int)\l type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.getInt(int, int):int A[MD:(int, int):int (m)]\l0x0041: INVOKE  (r8 I:androidx.appcompat.widget.SwitchCompat), (r4 I:int A[D('typefaceIndex' int)]), (r5 I:int A[D('styleIndex' int)]) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.setSwitchTypefaceByIndex(int, int):void A[MD:(int, int):void (m)] (LINE:367)\l0x0044: SGET  (r6 I:int) =  androidx.appcompat.R.styleable.TextAppearance_textAllCaps int  (LINE:369)\l0x0046: INVOKE  (r3 I:boolean) = \l  (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)])\l  (r6 I:int)\l  (r3 I:boolean)\l type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (m)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x004a|0x004a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allCaps' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0058  (LINE:370)\l}"];
Node_30 [shape=record,label="{30\:\ 0x004c|0x004c: NEW_INSTANCE  (r6 I:androidx.appcompat.text.AllCapsTransformationMethod) =  androidx.appcompat.text.AllCapsTransformationMethod  (LINE:371)\l0x004e: INVOKE  (r7 I:android.content.Context) = (r8 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getContext():android.content.Context A[MD:():android.content.Context (s)]\l0x0052: INVOKE  (r6 I:androidx.appcompat.text.AllCapsTransformationMethod), (r7 I:android.content.Context) type: DIRECT call: androidx.appcompat.text.AllCapsTransformationMethod.\<init\>(android.content.Context):void A[MD:(android.content.Context):void (m)]\l0x0055: IPUT  (r6 I:android.text.method.TransformationMethod), (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchTransformationMethod android.text.method.TransformationMethod \l}"];
Node_32 [shape=record,label="{32\:\ 0x005b|0x005b: IGET  (r6 I:java.lang.CharSequence) = (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOn java.lang.CharSequence  (LINE:376)\l0x005d: INVOKE  (r8 I:androidx.appcompat.widget.SwitchCompat), (r6 I:java.lang.CharSequence) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.setTextOnInternal(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x0060: IGET  (r6 I:java.lang.CharSequence) = (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOff java.lang.CharSequence  (LINE:377)\l0x0062: INVOKE  (r8 I:androidx.appcompat.widget.SwitchCompat), (r6 I:java.lang.CharSequence) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.setTextOffInternal(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (m)]\l0x0065: INVOKE  (r0 I:androidx.appcompat.widget.TintTypedArray A[D('appearance' androidx.appcompat.widget.TintTypedArray)]) type: VIRTUAL call: androidx.appcompat.widget.TintTypedArray.recycle():void A[MD:():void (m)] (LINE:379)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|RETURN\l|0x0068: RETURN    (LINE:380)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0058|0x0058: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:373)\l0x0059: IPUT  (r6 I:android.text.method.TransformationMethod), (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchTransformationMethod android.text.method.TransformationMethod \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: INVOKE  (r2 I:android.content.res.ColorStateList) = (r8 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getTextColors():android.content.res.ColorStateList A[MD:():android.content.res.ColorStateList (s)] (LINE:352)\l0x0015: IPUT  (r2 I:android.content.res.ColorStateList), (r8 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextColors android.content.res.ColorStateList \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.setSwitchTextAppearance((r8 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r9 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('resid' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x0058 \-\> B:32:0x005b, CROSS_EDGE: B:26:0x0029 \-\> B:28:0x0034, CROSS_EDGE: B:24:0x001e \-\> B:28:0x0034, CROSS_EDGE: B:22:0x0011 \-\> B:23:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0068: r0 'appearance' Landroidx\/appcompat\/widget\/TintTypedArray;\l  0x000c\-0x0068: r1 'colors' Landroid\/content\/res\/ColorStateList;\l  0x001e\-0x0068: r2 'ts' I\l  0x004a\-0x0068: r3 'allCaps' Z\l  0x003b\-0x0068: r4 'typefaceIndex' I\l  0x0041\-0x0068: r5 'styleIndex' I\l  \-1 \-0x0068: r9 'context' Landroid\/content\/Context;\l  \-1 \-0x0068: r10 'resid' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_32;
Node_22 -> Node_23;
}

