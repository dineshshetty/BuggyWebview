digraph "CFG forandroidx.appcompat.widget.SwitchCompat.setThumbDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_2106386137 {
label = "R(5:1|(1:3)|4|(1:6)|7)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|android.graphics.drawable.Drawable android.graphics.drawable.Drawable r0 = r2.mThumbDrawable\l}"];
subgraph cluster_IfRegion_1764497786 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_172047369 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|r0.setCallback(null)\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0008|r2.mThumbDrawable = r3\l}"];
subgraph cluster_IfRegion_820289764 {
label = "IF [B:16:0x000a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|if (r3 != null) goto L6\l}"];
subgraph cluster_Region_856472401 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000c|r3.setCallback(r2)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x000f|requestLayout()\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0012}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.setThumbDrawable((r2v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r3v0 'thumb' android.graphics.drawable.Drawable A[D('thumb' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x000a \-\> B:18:0x000f, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.widget.SwitchCompat.setThumbDrawable(android.graphics.drawable.Drawable):void]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_19 -> Node_11;
}

