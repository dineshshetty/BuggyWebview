digraph "CFG forandroidx.appcompat.widget.SwitchCompat.constrain(FFF)F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CMP_G  (r0 I:int) = (r1 I:float A[D('amount' float)]), (r2 I:float A[D('low' float)])  (LINE:1576)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:17:0x0006 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('low' float)]) \l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|0x000d: RETURN  (r0 I:float) A[SYNTHETIC]\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: CMP_L  (r0 I:int) = (r1 I:float A[D('amount' float)]), (r3 I:float A[D('high' float)]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:20:0x000c \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('high' float)]) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x000d: RETURN  (r0 I:float) A[SYNTHETIC]\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('amount' float)]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: RETURN  (r0 I:float) \l}"];
MethodNode[shape=record,label="{private static float androidx.appcompat.widget.SwitchCompat.constrain((r1 I:float A[D('amount' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float A[D('low' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('high' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:21:0x000d, CROSS_EDGE: B:20:0x000c \-\> B:21:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r1 'amount' F\l  \-1 \-0x000d: r2 'low' F\l  \-1 \-0x000d: r3 'high' F\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_22;
Node_22 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_23;
Node_23 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_13;
}

