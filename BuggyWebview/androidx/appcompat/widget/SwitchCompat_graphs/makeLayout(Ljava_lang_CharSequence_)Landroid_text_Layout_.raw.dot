digraph "CFG forandroidx.appcompat.widget.SwitchCompat.makeLayout(Ljava\/lang\/CharSequence;)Landroid\/text\/Layout;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: NEW_INSTANCE  (r8 I:android.text.StaticLayout) =  android.text.StaticLayout  (LINE:993)\l0x0002: IGET  (r2 I:android.text.TextPaint) = (r9 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextPaint android.text.TextPaint \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transformedText' java.lang.CharSequence)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0012  (LINE:994)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r0 I:float) = (r10 I:java.lang.CharSequence A[D('transformedText' java.lang.CharSequence)]), (r2 I:android.text.TextPaint) type: STATIC call: android.text.Layout.getDesiredWidth(java.lang.CharSequence, android.text.TextPaint):float A[MD:(java.lang.CharSequence, android.text.TextPaint):float (c)] (LINE:995)\l0x000a: CAST (r0 I:double) = (double) (r0 I:float) \l0x000b: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.ceil(double):double A[MD:(double):double (c)]\l0x000f: CAST (r0 I:int) = (int) (r0 I:double) \l0x0010: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|0x0014: SGET  (r4 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment \l0x0016: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char]) \l0x0018: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0019: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY]) \l0x001b: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('transformedText' java.lang.CharSequence)]) \l0x001c: INVOKE  \l  (r0 I:android.text.StaticLayout)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:android.text.TextPaint)\l  (r3 I:int)\l  (r4 I:android.text.Layout$Alignment)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:boolean)\l type: DIRECT call: android.text.StaticLayout.\<init\>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean):void A[MD:(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|RETURN\l|0x001f: RETURN  (r8 I:android.text.Layout)  (LINE:993)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private android.text.Layout androidx.appcompat.widget.SwitchCompat.makeLayout((r9 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.CharSequence A[D('transformedText' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0012 \-\> B:14:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001f: r10 'transformedText' Ljava\/lang\/CharSequence;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

