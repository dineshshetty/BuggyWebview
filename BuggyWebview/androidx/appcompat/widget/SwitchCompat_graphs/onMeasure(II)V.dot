digraph "CFG forandroidx.appcompat.widget.SwitchCompat.onMeasure(II)V" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000}"];
Node_37 [shape=record,label="{37\:\ 0x0002|if (r11.mShowText == false) goto L9\l}"];
Node_38 [shape=record,label="{38\:\ 0x0004}"];
Node_39 [shape=record,label="{39\:\ 0x0006|if (r11.mOnLayout != null) goto L6\l}"];
Node_40 [shape=record,label="{40\:\ 0x0008|r11.mOnLayout = makeLayout(r11.mTextOnTransformed)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0010}"];
Node_42 [shape=record,label="{42\:\ 0x0012|if (r11.mOffLayout != null) goto L9\l}"];
Node_43 [shape=record,label="{43\:\ 0x0014|r11.mOffLayout = makeLayout(r11.mTextOffTransformed)\l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|android.graphics.Rect r0 = r11.mTempRect\landroid.graphics.drawable.Drawable r1 = r11.mThumbDrawable\l}"];
Node_45 [shape=record,label="{45\:\ 0x0020|if (r1 == null) goto L33\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|r1.getPadding(r0)\lint r1 = (r11.mThumbDrawable.getIntrinsicWidth() \- r0.left) \- r0.right\lint r2 = r11.mThumbDrawable.getIntrinsicHeight()\l}"];
Node_48 [shape=record,label="{48\:\ 0x003a|PHI: r1 r2 \l  PHI: (r1v2 'thumbWidth' int) = (r1v1 'thumbWidth' int), (r1v6 'thumbWidth' int) binds: [B:47:0x0038, B:46:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'thumbHeight' int) = (r2v0 'thumbHeight' int), (r2v5 'thumbHeight' int) binds: [B:47:0x0038, B:46:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ 0x003c|if (r11.mShowText == false) goto L32\l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|int r3 = java.lang.Math.max(r11.mOnLayout.getWidth(), r11.mOffLayout.getWidth()) + (r11.mThumbTextPadding * 2)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0055|PHI: r3 \l  PHI: (r3v2 'maxTextWidth' int) = (r3v1 'maxTextWidth' int), (r3v6 'maxTextWidth' int) binds: [B:51:0x0054, B:50:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r11.mThumbWidth = java.lang.Math.max(r3, r1)\landroid.graphics.drawable.Drawable r4 = r11.mTrackDrawable\l}"];
Node_53 [shape=record,label="{53\:\ 0x005d|if (r4 == null) goto L31\l}"];
Node_54 [shape=record,label="{54\:\ 0x005f|r4.getPadding(r0)\lint r4 = r11.mTrackDrawable.getIntrinsicHeight()\l}"];
Node_56 [shape=record,label="{56\:\ 0x006d|PHI: r4 \l  PHI: (r4v3 'trackHeight' int) = (r4v2 'trackHeight' int), (r4v5 'trackHeight' int) binds: [B:55:0x0069, B:54:0x005f] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = r0.left\lint r6 = r0.right\landroid.graphics.drawable.Drawable r7 = r11.mThumbDrawable\l}"];
Node_57 [shape=record,label="{57\:\ 0x0073|if (r7 == null) goto L21\l}"];
Node_58 [shape=record,label="{58\:\ 0x0075|android.graphics.Rect r7 = androidx.appcompat.widget.DrawableUtils.getOpticalBounds(r7)\lint r5 = java.lang.Math.max(r5, r7.left)\lint r6 = java.lang.Math.max(r6, r7.right)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0085|PHI: r5 r6 \l  PHI: (r5v1 'paddingLeft' int) = (r5v0 'paddingLeft' int), (r5v2 'paddingLeft' int) binds: [B:57:0x0073, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'paddingRight' int) = (r6v0 'paddingRight' int), (r6v2 'paddingRight' int) binds: [B:57:0x0073, B:58:0x0075] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0087|if (r11.mEnforceSwitchWidth == false) goto L30\l}"];
Node_61 [shape=record,label="{61\:\ 0x0089|int r7 = java.lang.Math.max(r11.mSwitchMinWidth, ((r11.mThumbWidth * 2) + r5) + r6)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0098|PHI: r7 \l  PHI: (r7v3 'switchWidth' int) = (r7v2 'switchWidth' int), (r7v5 'switchWidth' int) binds: [B:62:0x0096, B:61:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = java.lang.Math.max(r4, r2)\lr11.mSwitchWidth = r7\lr11.mSwitchHeight = r8\lsuper.onMeasure(r12, r13)\lint r9 = getMeasuredHeight()\l}"];
Node_64 [shape=record,label="{64\:\ 0x00a8|if (r9 \>= r8) goto L29\l}"];
Node_65 [shape=record,label="{65\:\ 0x00aa|setMeasuredDimension(getMeasuredWidthAndState(), r8)\l}"];
Node_66 [shape=record,label="{66\:\ 0x00b1|RETURN\lORIG_RETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_62 [shape=record,label="{62\:\ 0x0096|int r7 = r11.mSwitchMinWidth\l}"];
Node_55 [shape=record,label="{55\:\ 0x0069|r0.setEmpty()\lr4 = 0\l}"];
Node_51 [shape=record,label="{51\:\ 0x0054|r3 = 0\l}"];
Node_47 [shape=record,label="{47\:\ 0x0038|r1 = 0\lr2 = 0\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.onMeasure((r11v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r12v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:64:0x00a8 \-\> B:66:0x00b1, CROSS_EDGE: B:62:0x0096 \-\> B:63:0x0098, CROSS_EDGE: B:57:0x0073 \-\> B:59:0x0085, CROSS_EDGE: B:55:0x0069 \-\> B:56:0x006d, CROSS_EDGE: B:51:0x0054 \-\> B:52:0x0055, CROSS_EDGE: B:47:0x0038 \-\> B:48:0x003a, CROSS_EDGE: B:42:0x0012 \-\> B:44:0x001c, CROSS_EDGE: B:39:0x0006 \-\> B:41:0x0010, CROSS_EDGE: B:37:0x0002 \-\> B:44:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_67;
Node_65 -> Node_66;
Node_66 -> Node_35;
Node_67 -> Node_35;
Node_62 -> Node_63;
Node_55 -> Node_56;
Node_51 -> Node_52;
Node_47 -> Node_48;
}

