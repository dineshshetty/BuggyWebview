digraph "CFG forandroidx.appcompat.widget.SwitchCompat.setSwitchTypeface(Landroid\/graphics\/Typeface;I)V" {
subgraph cluster_Region_1276808187 {
label = "R(1:(2:(7:(1:4)(1:18)|5|6|8|11|14|15)|(1:19))) | DECL_VAR: android.graphics.Typeface tf\l";
node [shape=record,color=blue];
subgraph cluster_Region_1406332450 {
label = "R(2:(7:(1:4)(1:18)|5|6|8|11|14|15)|(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2043188316 {
label = "IF [B:24:0x0002] THEN: R(7:(1:4)(1:18)|5|6|8|11|14|15) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0002|if (r8 \> 0) goto L3\l}"];
subgraph cluster_Region_421989281 {
label = "R(7:(1:4)(1:18)|5|6|8|11|14|15)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1603497999 {
label = "IF [B:25:0x0004] THEN: R(1:4) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0004|if (r7 == null) goto L4\l}"];
subgraph cluster_Region_1048764436 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0006|android.graphics.Typeface r7 = android.graphics.Typeface.defaultFromStyle(r8)\l}"];
}
subgraph cluster_Region_2020980957 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x000b|android.graphics.Typeface r7 = android.graphics.Typeface.create(r7, r8)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x000f|PHI: r7 \l  PHI: (r7v2 'tf' android.graphics.Typeface) = (r7v1 'tf' android.graphics.Typeface), (r7v3 'tf' android.graphics.Typeface) binds: [B:27:0x000b, B:26:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|setSwitchTypeface(r7)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|int r2 = r7 != null ? r7.getStyle() : 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a|PHI: r2 \l  PHI: (r2v2 'typefaceStyle' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = (~r2) & r8\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|PHI: r1 \l  PHI: (r1v2 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r6.mTextPaint.setFakeBoldText((r3 & 1) != 0)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002e|PHI: r0 \l  PHI: (r0v1 float A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r6.mTextPaint.setTextSkewX((r3 & 2) != 0 ? \-0.25f : 0.0f)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1204714837 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0032|r6.mTextPaint.setFakeBoldText(false)\lr6.mTextPaint.setTextSkewX(0.0f)\lsetSwitchTypeface(r7)\l}"];
}
}
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0000}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0014}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0020}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0022}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x002a}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x002c}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0019}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x003f|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.setSwitchTypeface((r6v0 'this' androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r7v0 'tf' android.graphics.Typeface A[D('tf' android.graphics.Typeface), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x002a \-\> B:38:0x002e, CROSS_EDGE: B:33:0x0020 \-\> B:35:0x0023, CROSS_EDGE: B:31:0x0019 \-\> B:32:0x001a, CROSS_EDGE: B:27:0x000b \-\> B:28:0x000f, CROSS_EDGE: B:39:0x0032 \-\> B:40:0x003f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_24 -> Node_25;
Node_24 -> Node_39[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_32 -> Node_33;
Node_35 -> Node_36;
Node_38 -> Node_41;
Node_41 -> Node_22;
Node_39 -> Node_40;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_30 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_31 -> Node_32;
Node_40 -> Node_22;
}

