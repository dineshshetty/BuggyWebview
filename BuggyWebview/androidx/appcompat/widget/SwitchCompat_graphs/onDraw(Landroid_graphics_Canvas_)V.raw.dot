digraph "CFG forandroidx.appcompat.widget.SwitchCompat.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:1327)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0004: INVOKE  (r16 I:android.widget.CompoundButton), (r17 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: SUPER call: android.widget.CompoundButton.onDraw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)]\l0x0007: IGET  (r2 I:android.graphics.Rect) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTempRect android.graphics.Rect  (LINE:1329)\l0x0009: IGET  (r3 I:android.graphics.drawable.Drawable) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTrackDrawable android.graphics.drawable.Drawable  (LINE:1330)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('trackDrawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0011  (LINE:1331)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|0x000d: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('trackDrawable' android.graphics.drawable.Drawable)])\l  (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:1332)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: IGET  (r4 I:int) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchTop int  (LINE:1337)\l0x0016: IGET  (r5 I:int) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSwitchBottom int  (LINE:1338)\l0x0018: IGET  (r6 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:1339)\l0x001a: ARITH  (r6 I:int) = (r6 I:int) + (r4 I:int A[D('switchTop' int)]) \l0x001b: IGET  (r7 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:1340)\l0x001d: ARITH  (r7 I:int) = (r5 I:int A[D('switchBottom' int)]) \- (r7 I:int) \l0x001f: IGET  (r8 I:android.graphics.drawable.Drawable) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mThumbDrawable android.graphics.drawable.Drawable  (LINE:1342)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|0x0021: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('trackDrawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0051  (LINE:1343)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0023|0x0023: IGET  (r9 I:boolean) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mSplitTrack boolean  (LINE:1344)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0025|0x0025: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x004e \l}"];
Node_41 [shape=record,label="{41\:\ 0x0027|0x0027: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thumbDrawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x004e \l}"];
Node_42 [shape=record,label="{42\:\ 0x0029|0x0029: INVOKE  (r9 I:android.graphics.Rect) = (r8 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)]) type: STATIC call: androidx.appcompat.widget.DrawableUtils.getOpticalBounds(android.graphics.drawable.Drawable):android.graphics.Rect A[MD:(android.graphics.drawable.Drawable):android.graphics.Rect (m)] (LINE:1345)\l0x002d: INVOKE  \l  (r8 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)])\l  (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.copyBounds(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:1346)\l0x0030: IGET  (r10 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1347)\l0x0032: IGET  (r11 I:int) = (r9 I:android.graphics.Rect A[D('insets' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0034: ARITH  (r10 I:int) = (r10 I:int) + (r11 I:int) \l0x0035: IPUT  (r10 I:int), (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0037: IGET  (r10 I:int) = (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:1348)\l0x0039: IGET  (r11 I:int) = (r9 I:android.graphics.Rect A[D('insets' android.graphics.Rect)]) android.graphics.Rect.right int \l0x003b: ARITH  (r10 I:int) = (r10 I:int) \- (r11 I:int) \l0x003c: IPUT  (r10 I:int), (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int \l0x003e: INVOKE  (r10 I:int) = (r17 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:1350)\l0x0042: SGET  (r11 I:android.graphics.Region$Op) =  android.graphics.Region.Op.DIFFERENCE android.graphics.Region$Op  (LINE:1351)\l0x0044: INVOKE  \l  (r1 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)])\l  (r11 I:android.graphics.Region$Op)\l type: VIRTUAL call: android.graphics.Canvas.clipRect(android.graphics.Rect, android.graphics.Region$Op):boolean A[MD:(android.graphics.Rect, android.graphics.Region$Op):boolean (c)]\l0x0047: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('trackDrawable' android.graphics.drawable.Drawable)])\l  (r1 I:android.graphics.Canvas)\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:1352)\l0x004a: INVOKE  (r1 I:android.graphics.Canvas), (r10 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:1353)\l}"];
Node_43 [shape=record,label="{43\:\ 0x004e|0x004e: INVOKE  \l  (r3 I:android.graphics.drawable.Drawable A[D('trackDrawable' android.graphics.drawable.Drawable)])\l  (r1 I:android.graphics.Canvas)\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:1355)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0051|0x0051: INVOKE  (r9 I:int) = (r17 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:1359)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0055|0x0055: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thumbDrawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x005a  (LINE:1361)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0057|0x0057: INVOKE  \l  (r8 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)])\l  (r1 I:android.graphics.Canvas)\l type: VIRTUAL call: android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:1362)\l}"];
Node_47 [shape=record,label="{47\:\ 0x005a|0x005a: INVOKE  (r10 I:boolean) = (r16 I:androidx.appcompat.widget.SwitchCompat) type: DIRECT call: androidx.appcompat.widget.SwitchCompat.getTargetCheckedState():boolean A[MD:():boolean (m)] (LINE:1365)\l}"];
Node_48 [shape=record,label="{48\:\ 0x005e|0x005e: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0063 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0060|0x0060: IGET  (r10 I:android.text.Layout) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOnLayout android.text.Layout \l}"];
Node_51 [shape=record,label="{51\:\ 0x0065|0x0065: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('switchText' android.text.Layout)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x00a9  (LINE:1366)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0067|0x0067: INVOKE  (r11 I:int[]) = (r16 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getDrawableState():int[] A[MD:():int[] (s)] (LINE:1367)\l0x006b: IGET  (r12 I:android.content.res.ColorStateList) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextColors android.content.res.ColorStateList  (LINE:1368)\l}"];
Node_53 [shape=record,label="{53\:\ 0x006d|0x006d: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0079 \l}"];
Node_54 [shape=record,label="{54\:\ 0x006f|0x006f: IGET  (r13 I:android.text.TextPaint) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextPaint android.text.TextPaint  (LINE:1369)\l0x0071: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0072: INVOKE  (r12 I:int) = (r12 I:android.content.res.ColorStateList), (r11 I:int[] A[D('drawableState' int[])]), (r14 I:int) type: VIRTUAL call: android.content.res.ColorStateList.getColorForState(int[], int):int A[MD:(int[], int):int (c)]\l0x0076: INVOKE  (r13 I:android.text.TextPaint), (r12 I:int) type: VIRTUAL call: android.text.TextPaint.setColor(int):void A[MD:(int):void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0079|0x0079: IGET  (r12 I:android.text.TextPaint) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextPaint android.text.TextPaint  (LINE:1371)\l0x007b: IPUT  (r11 I:int[] A[D('drawableState' int[])]), (r12 I:android.text.TextPaint) android.text.TextPaint.drawableState int[] \l}"];
Node_56 [shape=record,label="{56\:\ 0x007d|0x007d: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thumbDrawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0089  (LINE:1374)\l}"];
Node_57 [shape=record,label="{57\:\ 0x007f|0x007f: INVOKE  (r12 I:android.graphics.Rect) = (r8 I:android.graphics.drawable.Drawable A[D('thumbDrawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)] (LINE:1375)\l0x0083: IGET  (r13 I:int) = (r12 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:1376)\l0x0085: IGET  (r14 I:int) = (r12 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) android.graphics.Rect.right int \l0x0087: ARITH  (r13 I:int) = (r13 I:int) + (r14 I:int) \l}"];
Node_59 [shape=record,label="{59\:\ 0x008d|0x008d: ARITH  (r12 I:int) = (r13 I:int A[D('cX' int)]) \/ (2 int)  (LINE:1381)\l0x008f: INVOKE  (r14 I:int) = (r10 I:android.text.Layout A[D('switchText' android.text.Layout)]) type: VIRTUAL call: android.text.Layout.getWidth():int A[MD:():int (c)]\l0x0093: ARITH  (r14 I:int) = (r14 I:int) \/ (2 int) \l0x0095: ARITH  (r12 I:int) = (r12 I:int) \- (r14 I:int) \l0x0096: ARITH  (r14 I:int) = (r6 I:int A[D('switchInnerTop' int)]) + (r7 I:int A[D('switchInnerBottom' int)])  (LINE:1382)\l0x0098: ARITH  (r14 I:int) = (r14 I:int) \/ (2 int) \l0x009a: INVOKE  (r15 I:int) = (r10 I:android.text.Layout A[D('switchText' android.text.Layout)]) type: VIRTUAL call: android.text.Layout.getHeight():int A[MD:():int (c)]\l0x009e: ARITH  (r15 I:int) = (r15 I:int) \/ (2 int) \l0x00a0: ARITH  (r14 I:int) = (r14 I:int) \- (r15 I:int) \l0x00a1: CAST (r15 I:float) = (float) (r12 I:int A[D('left' int)])  (LINE:1383)\l0x00a2: CAST (r0 I:float) = (float) (r14 I:int A[D('top' int)]) \l0x00a3: INVOKE  (r1 I:android.graphics.Canvas), (r15 I:float), (r0 I:float) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x00a6: INVOKE  (r10 I:android.text.Layout A[D('switchText' android.text.Layout)]), (r1 I:android.graphics.Canvas) type: VIRTUAL call: android.text.Layout.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:1384)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0089|0x0089: INVOKE  (r13 I:int) = (r16 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.getWidth():int A[MD:():int (s)] (LINE:1378)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00a9|0x00a9: INVOKE  (r1 I:android.graphics.Canvas), (r9 I:int A[D('saveCount' int)]) type: VIRTUAL call: android.graphics.Canvas.restoreToCount(int):void A[MD:(int):void (c)] (LINE:1387)\l}"];
Node_61 [shape=record,label="{61\:\ 0x00ac|RETURN\l|0x00ac: RETURN    (LINE:1388)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0063|0x0063: IGET  (r10 I:android.text.Layout) = (r0 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mOffLayout android.text.Layout \l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: INVOKE  (r2 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.setEmpty():void A[MD:():void (c)] (LINE:1334)\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.widget.SwitchCompat.onDraw((r16 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r17 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:58:0x0089 \-\> B:59:0x008d, CROSS_EDGE: B:53:0x006d \-\> B:55:0x0079, CROSS_EDGE: B:51:0x0065 \-\> B:60:0x00a9, CROSS_EDGE: B:50:0x0063 \-\> B:51:0x0065, CROSS_EDGE: B:45:0x0055 \-\> B:47:0x005a, CROSS_EDGE: B:43:0x004e \-\> B:44:0x0051, CROSS_EDGE: B:40:0x0025 \-\> B:43:0x004e, CROSS_EDGE: B:38:0x0021 \-\> B:44:0x0051, CROSS_EDGE: B:36:0x0011 \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002d\-0x004d: r9 'insets' Landroid\/graphics\/Rect;\l  0x0042\-0x004d: r10 'saveCount' I\l  0x0083\-0x0088: r12 'bounds' Landroid\/graphics\/Rect;\l  0x0088\-0x0089: r13 'cX' I\l  0x006b\-0x00a9: r11 'drawableState' [I\l  0x0096\-0x00a9: r12 'left' I\l  0x008d\-0x00a9: r13 'cX' I\l  0x00a1\-0x00a9: r14 'top' I\l  0x0009\-0x00ac: r2 'padding' Landroid\/graphics\/Rect;\l  0x000b\-0x00ac: r3 'trackDrawable' Landroid\/graphics\/drawable\/Drawable;\l  0x0016\-0x00ac: r4 'switchTop' I\l  0x0018\-0x00ac: r5 'switchBottom' I\l  0x001b\-0x00ac: r6 'switchInnerTop' I\l  0x001f\-0x00ac: r7 'switchInnerBottom' I\l  0x0021\-0x00ac: r8 'thumbDrawable' Landroid\/graphics\/drawable\/Drawable;\l  0x0055\-0x00ac: r9 'saveCount' I\l  0x0065\-0x00ac: r10 'switchText' Landroid\/text\/Layout;\l  \-1 \-0x00ac: r17 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_60;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_59;
Node_59 -> Node_60;
Node_58 -> Node_59;
Node_60 -> Node_61;
Node_61 -> Node_32;
Node_50 -> Node_51;
Node_36 -> Node_37;
}

