digraph "CFG forandroidx.appcompat.widget.SwitchCompat.onInitializeAccessibilityNodeInfo(Landroid\/view\/accessibility\/AccessibilityNodeInfo;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  \l  (r4 I:android.widget.CompoundButton)\l  (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)])\l type: SUPER call: android.widget.CompoundButton.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo):void A[MD:(android.view.accessibility.AccessibilityNodeInfo):void (s)] (LINE:1526)\l0x0003: CONST_STR  (r0 I:java.lang.String) =  \"android.widget.Switch\"  (LINE:1527)\l0x0005: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: android.view.accessibility.AccessibilityNodeInfo.setClassName(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)]\l0x0008: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:1528)\l0x000a: CONST  (r1 I:??[int, float, short, byte, char]) = (30 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:33:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = (r4 I:androidx.appcompat.widget.SwitchCompat) type: VIRTUAL call: androidx.appcompat.widget.SwitchCompat.isChecked():boolean A[MD:():boolean (c)] (LINE:1529)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0017 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|0x0014: IGET  (r0 I:java.lang.CharSequence) = (r4 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOn java.lang.CharSequence \l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: INVOKE  (r1 I:boolean) = (r0 I:java.lang.CharSequence A[D('switchText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:1530)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:? \l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|0x001f: INVOKE  (r1 I:java.lang.CharSequence) = (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)]) type: VIRTUAL call: android.view.accessibility.AccessibilityNodeInfo.getText():java.lang.CharSequence A[MD:():java.lang.CharSequence (c)] (LINE:1531)\l0x0023: INVOKE  (r2 I:boolean) = (r1 I:java.lang.CharSequence A[D('oldText' java.lang.CharSequence)]) type: STATIC call: android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence):boolean (c)] (LINE:1532)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002d \l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|0x0029: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)])\l  (r0 I:java.lang.CharSequence A[D('switchText' java.lang.CharSequence)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)] (LINE:1533)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:1541)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:1535)\l0x002f: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0032: INVOKE  \l  (r2 I:java.lang.StringBuilder A[D('newText' java.lang.StringBuilder)])\l  (r1 I:java.lang.CharSequence A[D('oldText' java.lang.CharSequence)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.CharSequence):java.lang.StringBuilder A[MD:(java.lang.CharSequence):java.lang.StringBuilder (c)] (LINE:1536)\l0x0035: CONST  (r3 I:??[int, float, short, byte, char]) = (32 ??[int, float, short, byte, char]) \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder A[D('newText' java.lang.StringBuilder)]), (r3 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x003a: INVOKE  \l  (r2 I:java.lang.StringBuilder A[D('newText' java.lang.StringBuilder)])\l  (r0 I:java.lang.CharSequence A[D('switchText' java.lang.CharSequence)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.CharSequence):java.lang.StringBuilder A[MD:(java.lang.CharSequence):java.lang.StringBuilder (c)]\l0x003d: INVOKE  \l  (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo)])\l  (r2 I:java.lang.CharSequence A[D('newText' java.lang.StringBuilder)])\l type: VIRTUAL call: android.view.accessibility.AccessibilityNodeInfo.setText(java.lang.CharSequence):void A[MD:(java.lang.CharSequence):void (c)] (LINE:1537)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|RETURN\lORIG_RETURN\l|0x0040: RETURN    (LINE:1541)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:1541)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: IGET  (r0 I:java.lang.CharSequence) = (r4 I:androidx.appcompat.widget.SwitchCompat) androidx.appcompat.widget.SwitchCompat.mTextOff java.lang.CharSequence \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0040: RETURN   A[SYNTHETIC] (LINE:1541)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.widget.SwitchCompat.onInitializeAccessibilityNodeInfo((r4 'this' I:androidx.appcompat.widget.SwitchCompat A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.accessibility.AccessibilityNodeInfo A[D('info' android.view.accessibility.AccessibilityNodeInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x002d \-\> B:32:0x0040, CROSS_EDGE: B:27:0x001d \-\> B:32:0x0040, CROSS_EDGE: B:25:0x0017 \-\> B:26:0x0019, CROSS_EDGE: B:21:0x000c \-\> B:32:0x0040\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0019\-0x0040: r0 'switchText' Ljava\/lang\/CharSequence;\l  0x0023\-0x0040: r1 'oldText' Ljava\/lang\/CharSequence;\l  0x0032\-0x0040: r2 'newText' Ljava\/lang\/StringBuilder;\l  \-1 \-0x0040: r5 'info' Landroid\/view\/accessibility\/AccessibilityNodeInfo;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo):void\}]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_35;
Node_35 -> Node_19;
Node_31 -> Node_32;
Node_32 -> Node_19;
Node_34 -> Node_19;
Node_25 -> Node_26;
Node_33 -> Node_19;
}

