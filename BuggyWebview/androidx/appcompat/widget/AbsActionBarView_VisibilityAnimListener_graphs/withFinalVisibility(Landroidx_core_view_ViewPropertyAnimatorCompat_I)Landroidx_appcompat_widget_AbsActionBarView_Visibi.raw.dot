digraph "CFG forandroidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener.withFinalVisibility(Landroidx\/core\/view\/ViewPropertyAnimatorCompat;I)Landroidx\/appcompat\/widget\/AbsActionBarView$VisibilityAnimListener;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.AbsActionBarView) = (r1 I:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener) androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener.this$0 androidx.appcompat.widget.AbsActionBarView  (LINE:281)\l0x0002: IPUT  \l  (r2 I:androidx.core.view.ViewPropertyAnimatorCompat A[D('animation' androidx.core.view.ViewPropertyAnimatorCompat)])\l  (r0 I:androidx.appcompat.widget.AbsActionBarView)\l androidx.appcompat.widget.AbsActionBarView.mVisibilityAnim androidx.core.view.ViewPropertyAnimatorCompat \l0x0004: IPUT  (r3 I:int A[D('visibility' int)]), (r1 I:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener) androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener.mFinalVisibility int  (LINE:282)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|0x0006: RETURN  (r1 I:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener)  (LINE:283)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener androidx.appcompat.widget.AbsActionBarView.VisibilityAnimListener.withFinalVisibility((r1 'this' I:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.core.view.ViewPropertyAnimatorCompat A[D('animation' androidx.core.view.ViewPropertyAnimatorCompat), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0006: r2 'animation' Landroidx\/core\/view\/ViewPropertyAnimatorCompat;\l  \-1 \-0x0006: r3 'visibility' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

