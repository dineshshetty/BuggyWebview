digraph "CFG forandroidx.appcompat.widget.AppCompatReceiveContentHelper.OnDropApi24Impl.onDropForTextView(Landroid\/view\/DragEvent;Landroid\/widget\/TextView;Landroid\/app\/Activity;)Z" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  \l  (r6 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r4 I:android.view.DragEvent A[D('event' android.view.DragEvent)])\l type: VIRTUAL call: android.app.Activity.requestDragAndDropPermissions(android.view.DragEvent):android.view.DragAndDropPermissions A[MD:(android.view.DragEvent):android.view.DragAndDropPermissions (c)] (LINE:123)\l0x0003: INVOKE  (r0 I:float) = (r4 I:android.view.DragEvent A[D('event' android.view.DragEvent)]) type: VIRTUAL call: android.view.DragEvent.getX():float A[MD:():float (c)] (LINE:124)\l0x0007: INVOKE  (r1 I:float) = (r4 I:android.view.DragEvent A[D('event' android.view.DragEvent)]) type: VIRTUAL call: android.view.DragEvent.getY():float A[MD:():float (c)]\l0x000b: INVOKE  (r0 I:int) = (r5 I:android.widget.TextView A[D('view' android.widget.TextView)]), (r0 I:float), (r1 I:float) type: VIRTUAL call: android.widget.TextView.getOffsetForPosition(float, float):int A[MD:(float, float):int (c)]\l0x000f: INVOKE  (r5 I:android.widget.TextView A[D('view' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.beginBatchEdit():void A[MD:():void (c)] (LINE:125)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:14:0x0012), top: B:20:0x0012 \}\lCatch: all \-\> 0x0033\l|0x0012: INVOKE  (r1 I:java.lang.CharSequence) = (r5 I:android.widget.TextView A[D('view' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.getText():java.lang.CharSequence A[Catch: all \-\> 0x0033, MD:():java.lang.CharSequence (c), TRY_ENTER] (LINE:127)\l0x0016: CHECK_CAST (r1 I:android.text.Spannable) = (android.text.Spannable) (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0033]\l0x0018: INVOKE  (r1 I:android.text.Spannable), (r0 I:int A[D('offset' int)]) type: STATIC call: android.text.Selection.setSelection(android.text.Spannable, int):void A[Catch: all \-\> 0x0033, MD:(android.text.Spannable, int):void (c)]\l0x001b: NEW_INSTANCE  (r1 I:androidx.core.view.ContentInfoCompat$Builder) =  androidx.core.view.ContentInfoCompat$Builder A[Catch: all \-\> 0x0033] (LINE:128)\l0x001d: INVOKE  (r2 I:android.content.ClipData) = (r4 I:android.view.DragEvent A[D('event' android.view.DragEvent)]) type: VIRTUAL call: android.view.DragEvent.getClipData():android.content.ClipData A[Catch: all \-\> 0x0033, MD:():android.content.ClipData (c)] (LINE:129)\l0x0021: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0022: INVOKE  (r1 I:androidx.core.view.ContentInfoCompat$Builder), (r2 I:android.content.ClipData), (r3 I:int) type: DIRECT call: androidx.core.view.ContentInfoCompat.Builder.\<init\>(android.content.ClipData, int):void A[Catch: all \-\> 0x0033, MD:(android.content.ClipData, int):void (m)]\l0x0025: INVOKE  (r1 I:androidx.core.view.ContentInfoCompat) = (r1 I:androidx.core.view.ContentInfoCompat$Builder) type: VIRTUAL call: androidx.core.view.ContentInfoCompat.Builder.build():androidx.core.view.ContentInfoCompat A[Catch: all \-\> 0x0033, MD:():androidx.core.view.ContentInfoCompat (m)]\l0x0029: INVOKE  \l  (r5 I:android.view.View A[D('view' android.widget.TextView)])\l  (r1 I:androidx.core.view.ContentInfoCompat A[D('payload' androidx.core.view.ContentInfoCompat)])\l type: STATIC call: androidx.core.view.ViewCompat.performReceiveContent(android.view.View, androidx.core.view.ContentInfoCompat):androidx.core.view.ContentInfoCompat A[Catch: all \-\> 0x0033, MD:(android.view.View, androidx.core.view.ContentInfoCompat):androidx.core.view.ContentInfoCompat (m), TRY_LEAVE] (LINE:130)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: INVOKE  (r5 I:android.widget.TextView A[D('view' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.endBatchEdit():void A[MD:():void (c)]\l0x0031: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:134)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|RETURN\l|0x0032: RETURN  (r1 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|ExcHandler: all \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0033] (LINE:132)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: INVOKE  (r5 I:android.widget.TextView A[D('view' android.widget.TextView)]) type: VIRTUAL call: android.widget.TextView.endBatchEdit():void A[MD:():void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0037|0x0037: THROW  (r1 I:java.lang.Throwable)  (LINE:133)\l}"];
MethodNode[shape=record,label="{static boolean androidx.appcompat.widget.AppCompatReceiveContentHelper.OnDropApi24Impl.onDropForTextView((r4 I:android.view.DragEvent A[D('event' android.view.DragEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.widget.TextView A[D('view' android.widget.TextView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0037 \-\> B:12:?, CROSS_EDGE: B:20:0x0012 \-\> B:17:0x0033\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x002d: r1 'payload' Landroidx\/core\/view\/ContentInfoCompat;\l  0x000f\-0x0037: r0 'offset' I\l  \-1 \-0x0037: r4 'event' Landroid\/view\/DragEvent;\l  \-1 \-0x0037: r5 'view' Landroid\/widget\/TextView;\l  \-1 \-0x0037: r6 'activity' Landroid\/app\/Activity;\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:14:0x0012), top: B:20:0x0012 \}\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

