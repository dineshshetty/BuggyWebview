digraph "CFG forandroidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.setActionBarUpIndicator(Landroid\/graphics\/drawable\/Drawable;I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.app.Activity) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate) androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.mActivity android.app.Activity  (LINE:556)\l0x0002: INVOKE  (r0 I:android.app.ActionBar) = (r0 I:android.app.Activity) type: VIRTUAL call: android.app.Activity.getActionBar():android.app.ActionBar A[MD:():android.app.ActionBar (c)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('actionBar' android.app.ActionBar)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:?  (LINE:557)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:558)\l0x000a: CONST  (r2 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:18:0x0015 \l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: INVOKE  \l  (r0 I:android.app.ActionBar A[D('actionBar' android.app.ActionBar)])\l  (r4 I:android.graphics.drawable.Drawable A[D('themeImage' android.graphics.drawable.Drawable)])\l type: STATIC call: androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.Api18Impl.setHomeAsUpIndicator(android.app.ActionBar, android.graphics.drawable.Drawable):void A[MD:(android.app.ActionBar, android.graphics.drawable.Drawable):void (m)] (LINE:559)\l0x0011: INVOKE  (r0 I:android.app.ActionBar A[D('actionBar' android.app.ActionBar)]), (r5 I:int A[D('contentDescRes' int)]) type: STATIC call: androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.Api18Impl.setHomeActionContentDescription(android.app.ActionBar, int):void A[MD:(android.app.ActionBar, int):void (m)] (LINE:560)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:568)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|0x0015: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:562)\l0x0016: INVOKE  (r0 I:android.app.ActionBar A[D('actionBar' android.app.ActionBar)]), (r1 I:boolean) type: VIRTUAL call: android.app.ActionBar.setDisplayShowHomeEnabled(boolean):void A[MD:(boolean):void (c)]\l0x0019: IGET  (r1 I:android.app.Activity) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate) androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.mActivity android.app.Activity  (LINE:563)\l0x001b: INVOKE  (r1 I:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo) = \l  (r1 I:android.app.Activity)\l  (r4 I:android.graphics.drawable.Drawable A[D('themeImage' android.graphics.drawable.Drawable)])\l  (r5 I:int A[D('contentDescRes' int)])\l type: STATIC call: androidx.appcompat.app.ActionBarDrawerToggleHoneycomb.setActionBarUpIndicator(android.app.Activity, android.graphics.drawable.Drawable, int):androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo A[MD:(android.app.Activity, android.graphics.drawable.Drawable, int):androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo (m)]\l0x001f: IPUT  \l  (r1 I:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo)\l  (r3 I:androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate)\l androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.mSetIndicatorInfo androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo \l0x0021: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:565)\l0x0022: INVOKE  (r0 I:android.app.ActionBar A[D('actionBar' android.app.ActionBar)]), (r1 I:boolean) type: VIRTUAL call: android.app.ActionBar.setDisplayShowHomeEnabled(boolean):void A[MD:(boolean):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|RETURN\lORIG_RETURN\l|0x0025: RETURN    (LINE:568)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|0x0025: RETURN   A[SYNTHETIC] (LINE:568)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.ActionBarDrawerToggle.FrameworkActionBarDelegate.setActionBarUpIndicator((r3 'this' I:androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate A[IMMUTABLE_TYPE, THIS]), (r4 I:android.graphics.drawable.Drawable A[D('themeImage' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('contentDescRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0015 \-\> B:19:0x0025, CROSS_EDGE: B:14:0x0006 \-\> B:19:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0025: r0 'actionBar' Landroid\/app\/ActionBar;\l  \-1 \-0x0025: r4 'themeImage' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0025: r5 'contentDescRes' I\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBarDrawerToggle.Delegate.setActionBarUpIndicator(android.graphics.drawable.Drawable, int):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_21;
Node_21 -> Node_12;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_12;
}

