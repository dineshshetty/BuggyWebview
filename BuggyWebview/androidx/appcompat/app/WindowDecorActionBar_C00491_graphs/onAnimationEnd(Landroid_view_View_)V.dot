digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.1.onAnimationEnd(Landroid\/view\/View;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r2.this$0.mContentAnimations == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r2.this$0.mContentView == null) goto L6\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|r2.this$0.mContentView.setTranslationY(0.0f)\lr2.this$0.mContainerView.setTranslationY(0.0f)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|r2.this$0.mContainerView.setVisibility(8)\lr2.this$0.mContainerView.setTransitioning(false)\lr2.this$0.mCurrentShowAnim = null\lr2.this$0.completeDeferredDestroyActionMode()\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|if (r2.this$0.mOverlayLayout == null) goto L11\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|androidx.core.view.ViewCompat.requestApplyInsets(r2.this$0.mOverlayLayout)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.WindowDecorActionBar.1.onAnimationEnd((r2v0 'this' androidx.appcompat.app.WindowDecorActionBar$1 A[IMMUTABLE_TYPE, THIS]), (r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x003a \-\> B:10:0x0043, CROSS_EDGE: B:5:0x000a \-\> B:7:0x001b, CROSS_EDGE: B:3:0x0004 \-\> B:7:0x001b\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.ViewPropertyAnimatorListener.onAnimationEnd(android.view.View):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

