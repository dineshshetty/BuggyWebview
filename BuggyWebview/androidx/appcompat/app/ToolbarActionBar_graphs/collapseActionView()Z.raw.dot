digraph "CFG forandroidx.appcompat.app.ToolbarActionBar.collapseActionView()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.widget.DecorToolbar) = (r1 I:androidx.appcompat.app.ToolbarActionBar) androidx.appcompat.app.ToolbarActionBar.mDecorToolbar androidx.appcompat.widget.DecorToolbar  (LINE:443)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.appcompat.widget.DecorToolbar) type: INTERFACE call: androidx.appcompat.widget.DecorToolbar.hasExpandedActionView():boolean A[MD:():boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:androidx.appcompat.widget.DecorToolbar) = (r1 I:androidx.appcompat.app.ToolbarActionBar) androidx.appcompat.app.ToolbarActionBar.mDecorToolbar androidx.appcompat.widget.DecorToolbar  (LINE:444)\l0x000a: INVOKE  (r0 I:androidx.appcompat.widget.DecorToolbar) type: INTERFACE call: androidx.appcompat.widget.DecorToolbar.collapseActionView():void A[MD:():void (m)]\l0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:445)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|0x000f: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:447)\l0x0010: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.ToolbarActionBar.collapseActionView((r1 'this' I:androidx.appcompat.app.ToolbarActionBar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0010 \-\> B:1:?\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBar.collapseActionView():boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

