digraph "CFG forandroidx.appcompat.app.ToolbarActionBar.onKeyShortcut(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.Menu) = (r5 I:androidx.appcompat.app.ToolbarActionBar) type: DIRECT call: androidx.appcompat.app.ToolbarActionBar.getMenu():android.view.Menu A[MD:():android.view.Menu (m)] (LINE:479)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:480)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('menu' android.view.Menu)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ev' android.view.KeyEvent)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e  (LINE:482)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: INVOKE  (r2 I:int) = (r7 I:android.view.KeyEvent A[D('ev' android.view.KeyEvent)]) type: VIRTUAL call: android.view.KeyEvent.getDeviceId():int A[MD:():int (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: INVOKE  (r2 I:android.view.KeyCharacterMap) = (r2 I:int) type: STATIC call: android.view.KeyCharacterMap.load(int):android.view.KeyCharacterMap A[MD:(int):android.view.KeyCharacterMap (c)] (LINE:481)\l0x0013: INVOKE  (r3 I:int) = (r2 I:android.view.KeyCharacterMap A[D('kmap' android.view.KeyCharacterMap)]) type: VIRTUAL call: android.view.KeyCharacterMap.getKeyboardType():int A[MD:():int (c)] (LINE:483)\l0x0017: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: INVOKE  (r0 I:android.view.Menu A[D('menu' android.view.Menu)]), (r4 I:boolean) type: INTERFACE call: android.view.Menu.setQwertyMode(boolean):void A[MD:(boolean):void (c)]\l0x001f: INVOKE  (r1 I:boolean) = \l  (r0 I:android.view.Menu A[D('menu' android.view.Menu)])\l  (r6 I:int A[D('keyCode' int)])\l  (r7 I:android.view.KeyEvent A[D('ev' android.view.KeyEvent)])\l  (r1 I:int)\l type: INTERFACE call: android.view.Menu.performShortcut(int, android.view.KeyEvent, int):boolean A[MD:(int, android.view.KeyEvent, int):boolean (c)] (LINE:484)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|0x0023: RETURN  (r1 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|RETURN\l|0x0024: RETURN  (r1 I:boolean)  (LINE:486)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.ToolbarActionBar.onKeyShortcut((r5 'this' I:androidx.appcompat.app.ToolbarActionBar A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.KeyEvent A[D('ev' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0018 \-\> B:11:0x001c, CROSS_EDGE: B:6:0x000e \-\> B:7:0x000f, CROSS_EDGE: B:13:0x0024 \-\> B:1:?\lDebug Info:\l  0x0013\-0x0024: r2 'kmap' Landroid\/view\/KeyCharacterMap;\l  0x0004\-0x0024: r0 'menu' Landroid\/view\/Menu;\l  \-1 \-0x0024: r6 'keyCode' I\l  \-1 \-0x0024: r7 'ev' Landroid\/view\/KeyEvent;\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBar.onKeyShortcut(int, android.view.KeyEvent):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_6 -> Node_7;
Node_13 -> Node_1;
}

