digraph "CFG forandroidx.appcompat.app.ToolbarActionBar.onKeyShortcut(ILandroid\/view\/KeyEvent;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|android.view.Menu r0 = getMenu()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r0 == null) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r7 == null) goto L11\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|int r2 = r7.getDeviceId()\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:6:0x000e, B:5:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|android.view.KeyCharacterMap r2 = android.view.KeyCharacterMap.load(r2)\lr4 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r2.getKeyboardType() == 1) goto L7\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|r4 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v2 boolean) binds: [B:8:0x0018, B:10:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|r0.setQwertyMode(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|RETURN\l|return r0.performShortcut(r6, r7, 0)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|r2 = \-1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.ToolbarActionBar.onKeyShortcut((r5v0 'this' androidx.appcompat.app.ToolbarActionBar A[IMMUTABLE_TYPE, THIS]), (r6v0 'keyCode' int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'ev' android.view.KeyEvent A[D('ev' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0018 \-\> B:11:0x001c, CROSS_EDGE: B:6:0x000e \-\> B:7:0x000f, CROSS_EDGE: B:13:0x0024 \-\> B:1:?\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBar.onKeyShortcut(int, android.view.KeyEvent):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_6 -> Node_7;
Node_13 -> Node_1;
}

