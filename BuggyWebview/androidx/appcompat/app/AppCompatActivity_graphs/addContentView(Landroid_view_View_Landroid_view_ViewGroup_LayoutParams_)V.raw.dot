digraph "CFG forandroidx.appcompat.app.AppCompatActivity.addContentView(Landroid\/view\/View;Landroid\/view\/ViewGroup$LayoutParams;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r1 I:androidx.appcompat.app.AppCompatActivity) type: DIRECT call: androidx.appcompat.app.AppCompatActivity.initViewTreeOwners():void A[MD:():void (m)] (LINE:212)\l0x0003: INVOKE  (r0 I:androidx.appcompat.app.AppCompatDelegate) = (r1 I:androidx.appcompat.app.AppCompatActivity) type: VIRTUAL call: androidx.appcompat.app.AppCompatActivity.getDelegate():androidx.appcompat.app.AppCompatDelegate A[MD:():androidx.appcompat.app.AppCompatDelegate (m)] (LINE:213)\l0x0007: INVOKE  \l  (r0 I:androidx.appcompat.app.AppCompatDelegate)\l  (r2 I:android.view.View A[D('view' android.view.View)])\l  (r3 I:android.view.ViewGroup$LayoutParams A[D('params' android.view.ViewGroup$LayoutParams)])\l type: VIRTUAL call: androidx.appcompat.app.AppCompatDelegate.addContentView(android.view.View, android.view.ViewGroup$LayoutParams):void A[MD:(android.view.View, android.view.ViewGroup$LayoutParams):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:214)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.AppCompatActivity.addContentView((r1 'this' I:androidx.appcompat.app.AppCompatActivity A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.ViewGroup$LayoutParams A[D('params' android.view.ViewGroup$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lMETHOD_OVERRIDE: [ClspMth\{android.app.Activity.addContentView(android.view.View, android.view.ViewGroup$LayoutParams):void\}]\lDebug Info:\l  \-1 \-0x000a: r2 'view' Landroid\/view\/View;\l  \-1 \-0x000a: r3 'params' Landroid\/view\/ViewGroup$LayoutParams;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

