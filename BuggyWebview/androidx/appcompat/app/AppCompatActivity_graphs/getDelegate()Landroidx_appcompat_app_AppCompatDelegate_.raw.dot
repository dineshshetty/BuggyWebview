digraph "CFG forandroidx.appcompat.app.AppCompatActivity.getDelegate()Landroidx\/appcompat\/app\/AppCompatDelegate;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.app.AppCompatDelegate) = (r1 I:androidx.appcompat.app.AppCompatActivity) androidx.appcompat.app.AppCompatActivity.mDelegate androidx.appcompat.app.AppCompatDelegate  (LINE:585)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:androidx.appcompat.app.AppCompatDelegate) = (r1 I:android.app.Activity), (r1 I:androidx.appcompat.app.AppCompatCallback) type: STATIC call: androidx.appcompat.app.AppCompatDelegate.create(android.app.Activity, androidx.appcompat.app.AppCompatCallback):androidx.appcompat.app.AppCompatDelegate A[MD:(android.app.Activity, androidx.appcompat.app.AppCompatCallback):androidx.appcompat.app.AppCompatDelegate (m)] (LINE:586)\l0x0008: IPUT  (r0 I:androidx.appcompat.app.AppCompatDelegate), (r1 I:androidx.appcompat.app.AppCompatActivity) androidx.appcompat.app.AppCompatActivity.mDelegate androidx.appcompat.app.AppCompatDelegate \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r0 I:androidx.appcompat.app.AppCompatDelegate) = (r1 I:androidx.appcompat.app.AppCompatActivity) androidx.appcompat.app.AppCompatActivity.mDelegate androidx.appcompat.app.AppCompatDelegate  (LINE:588)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:androidx.appcompat.app.AppCompatDelegate) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.appcompat.app.AppCompatDelegate androidx.appcompat.app.AppCompatActivity.getDelegate((r1 'this' I:androidx.appcompat.app.AppCompatActivity A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x000a\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

