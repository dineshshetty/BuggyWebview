digraph "CFG forandroidx.appcompat.app.AppCompatActivity.getResources()Landroid\/content\/res\/Resources;" {
subgraph cluster_Region_1513607235 {
label = "R(3:(1:5)|6|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_585647839 {
label = "IF [B:3:0x0002, B:5:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r2.mResources == null) goto L3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|ADDED_TO_REGION\l|if (androidx.appcompat.widget.VectorEnabledTintResources.shouldBeUsed() != false) goto L5\l}"];
subgraph cluster_Region_1472224387 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.mResources = new androidx.appcompat.widget.VectorEnabledTintResources(r2, super.getResources())\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0015|android.content.res.Resources android.content.res.Resources r0 = r2.mResources\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|RETURN\l|return r0 == null ? super.getResources() : r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0019}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001d|ORIG_RETURN\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.content.res.Resources androidx.appcompat.app.AppCompatActivity.getResources((r2v0 'this' androidx.appcompat.app.AppCompatActivity A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lMETHOD_OVERRIDE: [ClspMth\{android.content.Context.getResources():android.content.res.Resources\}]\lCROSS_EDGE: B:8:0x0017 \-\> B:10:0x001d, CROSS_EDGE: B:5:0x0008 \-\> B:7:0x0015, CROSS_EDGE: B:3:0x0002 \-\> B:7:0x0015\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

