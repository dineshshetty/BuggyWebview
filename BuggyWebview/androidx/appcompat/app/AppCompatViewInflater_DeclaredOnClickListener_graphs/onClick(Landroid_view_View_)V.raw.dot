digraph "CFG forandroidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.onClick(Landroid\/view\/View;)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener) androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.mResolvedMethod java.lang.reflect.Method  (LINE:436)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x000d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IGET  (r0 I:android.view.View) = (r4 I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener) androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.mHostView android.view.View  (LINE:437)\l0x0006: INVOKE  (r0 I:android.content.Context) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)]\l0x000a: INVOKE  (r4 I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener), (r0 I:android.content.Context) type: DIRECT call: androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.resolveMethod(android.content.Context):void A[MD:(android.content.Context):void (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0025, InvocationTargetException \-\> 0x001c, blocks: (B:20:0x000d), top: B:28:0x000d \}\lCatch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025\l|0x000d: IGET  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener) androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.mResolvedMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025, TRY_ENTER] (LINE:441)\l0x000f: IGET  (r1 I:android.content.Context) = (r4 I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener) androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.mResolvedContext android.content.Context A[Catch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025]\l0x0011: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025]\l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY] A[D('v' android.view.View)]) A[Catch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025]\l0x0017: INVOKE  (r0 I:java.lang.reflect.Method), (r1 I:java.lang.Object), (r2 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x001c, IllegalAccessException \-\> 0x0025, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:449)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|ExcHandler: IllegalAccessException \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0025] (LINE:442)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0026|0x0026: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:443)\l0x0028: CONST_STR  (r2 I:java.lang.String) =  \"Could not execute non\-public method for android:onClick\" \l0x002a: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)])\l type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|0x002d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|ExcHandler: InvocationTargetException \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x001c] (LINE:445)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:446)\l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"Could not execute method for android:onClick\" \l0x0021: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)])\l type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0024|0x0024: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.AppCompatViewInflater.DeclaredOnClickListener.onClick((r4 'this' I:androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:27:0x002d \-\> B:16:?, CROSS_EDGE: B:24:0x0024 \-\> B:16:?, CROSS_EDGE: B:28:0x000d \-\> B:25:0x0025, CROSS_EDGE: B:28:0x000d \-\> B:22:0x001c, CROSS_EDGE: B:18:0x0002 \-\> B:28:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x0025: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0026\-0x002d: r0 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x002d: r5 'v' Landroid\/view\/View;\lTryCatch #2 \{IllegalAccessException \-\> 0x0025, InvocationTargetException \-\> 0x001c, blocks: (B:20:0x000d), top: B:28:0x000d \}\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnClickListener.onClick(android.view.View):void\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_28;
Node_28 -> Node_20;
Node_28 -> Node_25;
Node_28 -> Node_22;
Node_20 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_16;
Node_29 -> Node_25;
Node_29 -> Node_22;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
}

