digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.applyDayNight(Z)Z" {
subgraph cluster_Region_1272693636 {
label = "R(1:(2:(1:3)|(4:5|(1:7)(2:15|(1:17))|(1:10)(2:12|(1:14))|11)))";
node [shape=record,color=blue];
subgraph cluster_Region_2127229442 {
label = "R(2:(1:3)|(4:5|(1:7)(2:15|(1:17))|(1:10)(2:12|(1:14))|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_793512441 {
label = "IF [B:22:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0002|if (r4.mDestroyed != false) goto L3\l}"];
subgraph cluster_Region_1170325754 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0004|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1221937367 {
label = "R(4:5|(1:7)(2:15|(1:17))|(1:10)(2:12|(1:14))|11)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0006|int int r0 = calculateNightMode()\lint int r1 = mapNightMode(r4.mContext, r0)\lboolean boolean r2 = updateForNightMode(r1, r5)\l}"];
subgraph cluster_IfRegion_44805923 {
label = "IF [B:26:0x0014] THEN: R(1:7) ELSE: R(2:15|(1:17))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0014|if (r0 == 0) goto L7\l}"];
subgraph cluster_Region_1343482917 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0016|getAutoTimeNightModeManager(r4.mContext).setup()\l}"];
}
subgraph cluster_Region_1140822313 {
label = "R(2:15|(1:17))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0020|androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager androidx.appcompat.app.AppCompatDelegateImpl.AutoNightModeManager r3 = r4.mAutoTimeNightModeManager\l}"];
subgraph cluster_IfRegion_563018353 {
label = "IF [B:29:0x0022] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0022|if (r3 != null) goto L17\l}"];
subgraph cluster_Region_2114161620 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0024|r3.cleanup()\l}"];
}
}
}
}
subgraph cluster_IfRegion_1740046648 {
label = "IF [B:32:0x0028] THEN: R(1:10) ELSE: R(2:12|(1:14))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0028|if (r0 == 3) goto L10\l}"];
subgraph cluster_Region_2044747463 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002a|getAutoBatteryNightModeManager(r4.mContext).setup()\l}"];
}
subgraph cluster_Region_560131053 {
label = "R(2:12|(1:14))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0034|androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager androidx.appcompat.app.AppCompatDelegateImpl.AutoNightModeManager r3 = r4.mAutoBatteryNightModeManager\l}"];
subgraph cluster_IfRegion_514539569 {
label = "IF [B:35:0x0036] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0036|if (r3 != null) goto L14\l}"];
subgraph cluster_Region_1210088679 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0038|r3.cleanup()\l}"];
}
}
}
}
Node_37 [shape=record,label="{37\:\ 0x003b|RETURN\l|return r2\l}"];
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0000}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0027}"];
MethodNode[shape=record,label="{private boolean androidx.appcompat.app.AppCompatDelegateImpl.applyDayNight((r4v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 'allowRecreation' boolean A[D('allowRecreation' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x003b \-\> B:20:?, CROSS_EDGE: B:36:0x0038 \-\> B:37:0x003b, CROSS_EDGE: B:35:0x0036 \-\> B:37:0x003b, CROSS_EDGE: B:30:0x0024 \-\> B:31:0x0027, CROSS_EDGE: B:29:0x0022 \-\> B:31:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_31 -> Node_32;
}

