digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(Landroid\/content\/res\/Configuration;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r2.mHasActionBar == false) goto L8\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004}"];
Node_16 [shape=record,label="{16\:\ 0x0006|if (r2.mSubDecorInstalled == false) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|androidx.appcompat.app.ActionBar r0 = getSupportActionBar()\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|if (r0 == null) goto L8\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|r0.onConfigurationChanged(r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|androidx.appcompat.widget.AppCompatDrawableManager.get().onConfigurationChanged(r2.mContext)\lr2.mEffectiveConfiguration = new android.content.res.Configuration(r2.mContext.getResources().getConfiguration())\lapplyDayNight(false)\lr3.updateFrom(r2.mContext.getResources().getConfiguration())\l}"];
Node_21 [shape=record,label="{21\:\ 0x003c|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged((r2v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r3v0 'newConfig' android.content.res.Configuration A[D('newConfig' android.content.res.Configuration), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000c \-\> B:20:0x0011, CROSS_EDGE: B:16:0x0006 \-\> B:20:0x0011, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.app.AppCompatDelegate.onConfigurationChanged(android.content.res.Configuration):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

