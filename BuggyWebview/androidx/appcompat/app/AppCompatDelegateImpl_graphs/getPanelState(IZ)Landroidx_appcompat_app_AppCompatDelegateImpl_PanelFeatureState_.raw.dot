digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.getPanelState(IZ)Landroidx\/appcompat\/app\/AppCompatDelegateImpl$PanelFeatureState;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]) = (r4 I:androidx.appcompat.app.AppCompatDelegateImpl) androidx.appcompat.app.AppCompatDelegateImpl.mPanels androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]  (LINE:2123)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0008 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: ARRAY_LENGTH  (r0 I:int) = (r1 I:??[] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: IF  (r0 I:??[int, byte, short, char]) \> (r5 I:??[int, byte, short, char] A[D('featureId' int)])  \-\> B:25:0x0016 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|0x0016: AGET  (r0 I:??[OBJECT, ARRAY] A[D('nar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])]) = \l  (r1 I:??[OBJECT, ARRAY][] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])\l  (r5 I:??[int, short, byte, char] A[D('featureId' int)])\l  (LINE:2131)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('st' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:?  (LINE:2132)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|0x001a: NEW_INSTANCE  (r2 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) =  androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState  (LINE:2133)\l0x001c: INVOKE  (r2 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState), (r5 I:int A[D('featureId' int)]) type: DIRECT call: androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState.\<init\>(int):void A[MD:(int):void (m)]\l0x001f: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('st' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0020: APUT  \l  (r1 I:??[OBJECT, ARRAY][] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])\l  (r5 I:??[int, short, byte, char] A[D('featureId' int)])\l  (r2 I:??[OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN  \l  (r0 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState A[D('st' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)])\l  (LINE:2135)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN  \l  (r0 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState A[D('st' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)])\l A[SYNTHETIC] (LINE:2135)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: ARITH  (r0 I:int) = (r5 I:int A[D('featureId' int)]) + (1 int)  (LINE:2124)\l0x000a: NEW_ARRAY  (r0 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0013  (LINE:2125)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])  (LINE:2126)\l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: INVOKE  \l  (r1 I:java.lang.Object A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])\l  (r3 I:int)\l  (r0 I:java.lang.Object A[D('nar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])\l  (r3 I:int)\l  (r2 I:int)\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])]) = (r0 I:??[OBJECT, ARRAY] A[D('nar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])  (LINE:2128)\l0x0014: IPUT  \l  (r0 I:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] A[D('nar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[])])\l  (r4 I:androidx.appcompat.app.AppCompatDelegateImpl)\l androidx.appcompat.app.AppCompatDelegateImpl.mPanels androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] \l}"];
MethodNode[shape=record,label="{protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState androidx.appcompat.app.AppCompatDelegateImpl.getPanelState((r4 'this' I:androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('required' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0018 \-\> B:28:0x0022, CROSS_EDGE: B:22:0x000c \-\> B:24:0x0013, CROSS_EDGE: B:20:0x0006 \-\> B:25:0x0016, CROSS_EDGE: B:18:0x0003 \-\> B:21:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0016: r0 'nar' [Landroidx\/appcompat\/app\/AppCompatDelegateImpl$PanelFeatureState;\l  0x0018\-0x0022: r0 'st' Landroidx\/appcompat\/app\/AppCompatDelegateImpl$PanelFeatureState;\l  0x0003\-0x0022: r1 'ar' [Landroidx\/appcompat\/app\/AppCompatDelegateImpl$PanelFeatureState;\l  \-1 \-0x0022: r5 'featureId' I\l  \-1 \-0x0022: r6 'required' Z\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
}

