digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed(I)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0003|if (r4 != 108) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|androidx.appcompat.app.ActionBar r1 = getSupportActionBar()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|if (r1 == null) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|r1.dispatchMenuVisibilityChanged(false)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ 0x000f|if (r4 != 0) goto L15\l}"];
Node_25 [shape=record,label="{25\:\ 0x0011|androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r1 = getPanelState(r4, true)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|if (r1.isOpen == false) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|closePanel(r1, false)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|RETURN\lORIG_RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.app.AppCompatDelegateImpl.onPanelClosed((r3v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 'featureId' int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0009 \-\> B:29:0x001f, CROSS_EDGE: B:27:0x001a \-\> B:29:0x001f, CROSS_EDGE: B:26:0x0018 \-\> B:29:0x001f, CROSS_EDGE: B:24:0x000f \-\> B:29:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_32;
Node_32 -> Node_18;
Node_31 -> Node_18;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_30;
Node_30 -> Node_18;
Node_29 -> Node_18;
Node_33 -> Node_18;
}

