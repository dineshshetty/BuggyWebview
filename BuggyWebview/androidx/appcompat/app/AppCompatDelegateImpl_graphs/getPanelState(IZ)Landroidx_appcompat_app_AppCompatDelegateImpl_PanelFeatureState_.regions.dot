digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.getPanelState(IZ)Landroidx\/appcompat\/app\/AppCompatDelegateImpl$PanelFeatureState;" {
subgraph cluster_Region_805198463 {
label = "R(4:1|(3:11|(1:13)|14)|5|(2:(2:7|8)|(1:10)))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0000|androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState[] r0 = r4.mPanels\landroidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState[] r1 = r0\l}"];
subgraph cluster_IfRegion_1768317745 {
label = "IF [B:18:0x0003, B:20:0x0006] THEN: R(3:11|(1:13)|14) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r0 == null) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|ADDED_TO_REGION\l|if (r1.length \<= r5) goto L11\l}"];
subgraph cluster_Region_1727373050 {
label = "R(3:11|(1:13)|14)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0008|androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState[] r0 = new androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState[r5 + 1]\l}"];
subgraph cluster_IfRegion_2099316571 {
label = "IF [B:22:0x000c] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000c|if (r1 != null) goto L13\l}"];
subgraph cluster_Region_550606626 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000e|java.lang.System.arraycopy(r1, 0, r0, 0, r1.length)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0013|r1 = r0\lr4.mPanels = r0\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x0016|PHI: r1 \l  PHI: (r1v2 'ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]) = (r1v1 'ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]), (r1v0 'ar' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[]) binds: [B:24:0x0013, B:20:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState r0 = r1[r5]\l}"];
subgraph cluster_Region_1877551157 {
label = "R(2:(2:7|8)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_809255944 {
label = "IF [B:26:0x0018] THEN: R(2:7|8) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0018|if (r0 == null) goto L7\l}"];
subgraph cluster_Region_2062813154 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001a|androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState r2 = new androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState(r5)\lr1[r5] = r2\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|RETURN\lORIG_RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_1171429003 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0005}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState androidx.appcompat.app.AppCompatDelegateImpl.getPanelState((r4v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r5v0 'featureId' int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'required' boolean A[D('required' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0018 \-\> B:28:0x0022, CROSS_EDGE: B:22:0x000c \-\> B:24:0x0013, CROSS_EDGE: B:20:0x0006 \-\> B:25:0x0016, CROSS_EDGE: B:18:0x0003 \-\> B:21:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_15;Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_20 -> Node_21;
Node_20 -> Node_25[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
Node_15 -> Node_17;
Node_19 -> Node_20;
}

