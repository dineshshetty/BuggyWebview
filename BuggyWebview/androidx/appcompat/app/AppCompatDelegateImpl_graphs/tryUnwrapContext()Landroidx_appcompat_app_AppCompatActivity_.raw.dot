digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.tryUnwrapContext()Landroidx\/appcompat\/app\/AppCompatActivity;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:android.content.Context) = (r3 I:androidx.appcompat.app.AppCompatDelegateImpl) androidx.appcompat.app.AppCompatDelegateImpl.mContext android.content.Context  (LINE:1634)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|LOOP_START\lLOOP:0: B:20:0x0002\-\>B:28:0x0011\l|0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1635)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('context' android.content.Context)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x001a \l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: INSTANCE_OF  (r2 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) androidx.appcompat.app.AppCompatActivity  (LINE:1636)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000d \l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: INSTANCE_OF  (r2 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) android.content.ContextWrapper  (LINE:1639)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0019 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|LOOP_END\lLOOP:0: B:20:0x0002\-\>B:28:0x0011\l|0x0011: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:1640)\l0x0012: CHECK_CAST (r1 I:android.content.ContextWrapper) = (android.content.ContextWrapper) (r1 I:??[OBJECT, ARRAY]) \l0x0014: INVOKE  (r0 I:android.content.Context A[D('context' android.content.Context)]) = (r1 I:android.content.ContextWrapper) type: VIRTUAL call: android.content.ContextWrapper.getBaseContext():android.content.Context A[MD:():android.content.Context (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0019|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:androidx.appcompat.app.AppCompatActivity)  (LINE:1642)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0009|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)])  (LINE:1637)\l0x000a: CHECK_CAST (r1 I:androidx.appcompat.app.AppCompatActivity) = (androidx.appcompat.app.AppCompatActivity) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:androidx.appcompat.app.AppCompatActivity) \l}"];
Node_31 [shape=record,label="{31\:\ 0x001a|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|RETURN\l|0x001a: RETURN  (r1 I:androidx.appcompat.app.AppCompatActivity)  (LINE:1645)\l}"];
MethodNode[shape=record,label="{private androidx.appcompat.app.AppCompatActivity androidx.appcompat.app.AppCompatDelegateImpl.tryUnwrapContext((r3 'this' I:androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x0011 \-\> B:20:0x0002, CROSS_EDGE: B:29:0x0019 \-\> B:18:?, CROSS_EDGE: B:30:0x001a \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x001a: r0 'context' Landroid\/content\/Context;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_26;
Node_23 -> Node_32[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_20;
Node_33 -> Node_29;
Node_29 -> Node_18;
Node_32 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

