digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.\<clinit\>()V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.collection.SimpleArrayMap) =  androidx.collection.SimpleArrayMap  (LINE:136)\l0x0002: INVOKE  (r0 I:androidx.collection.SimpleArrayMap) type: DIRECT call: androidx.collection.SimpleArrayMap.\<init\>():void A[MD:():void (m)]\l0x0005: SPUT  (r0 I:androidx.collection.SimpleArrayMap\<java.lang.String, java.lang.Integer\>) androidx.appcompat.app.AppCompatDelegateImpl.sLocalNightModes androidx.collection.SimpleArrayMap \l0x0007: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:137)\l0x0009: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: CONST  (r3 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: IF  (r0 I:??[int, byte, short, char]) \>= (r3 I:??[int, byte, short, char])  \-\> B:22:0x0011 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: SPUT  (r0 I:boolean) androidx.appcompat.app.AppCompatDelegateImpl.IS_PRE_LOLLIPOP boolean \l0x0014: NEW_ARRAY  (r3 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[]  (LINE:139)\l0x0016: CONST  (r4 I:??[int, float, short, byte, char]) = (16842836(0x1010054, float:2.3693793E\-38) ??[int, float, short, byte, char]) \l0x0019: APUT  (r3 I:??[int, float][]), (r1 I:??[int, short, byte, char]), (r4 I:??[int, float, short, byte, char]) \l0x001b: SPUT  (r3 I:int[]) androidx.appcompat.app.AppCompatDelegateImpl.sWindowBackgroundStyleable int[] \l0x001d: SGET  (r3 I:java.lang.String) =  android.os.Build.FINGERPRINT java.lang.String  (LINE:145)\l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"robolectric\"  (LINE:146)\l0x0021: INVOKE  (r3 I:boolean) = (r4 I:java.lang.String), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l0x0025: ARITH  (r3 I:??[int, boolean]) = (r3 I:??[int, boolean, short, byte, char]) ^ (r2 I:??[int, boolean, short, byte, char]) \l0x0026: SPUT  (r3 I:boolean) androidx.appcompat.app.AppCompatDelegateImpl.sCanReturnDifferentContext boolean \l0x0028: SGET  (r3 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:151)\l0x002a: CONST  (r4 I:??[int, float, short, byte, char]) = (17 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002c|0x002c: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:26:0x002f \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|0x002e: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x002f|0x002f: SPUT  (r1 I:boolean) androidx.appcompat.app.AppCompatDelegateImpl.sCanApplyOverrideConfiguration boolean \l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|0x0031: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:?  (LINE:160)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|0x0033: SGET  (r0 I:boolean) =  androidx.appcompat.app.AppCompatDelegateImpl.sInstalledExceptionHandler boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x0035|0x0035: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|0x0037: INVOKE  (r0 I:java.lang.Thread$UncaughtExceptionHandler) =  type: STATIC call: java.lang.Thread.getDefaultUncaughtExceptionHandler():java.lang.Thread$UncaughtExceptionHandler A[MD:():java.lang.Thread$UncaughtExceptionHandler (c)] (LINE:162)\l0x003b: NEW_INSTANCE  (r1 I:androidx.appcompat.app.AppCompatDelegateImpl$1) =  androidx.appcompat.app.AppCompatDelegateImpl$1  (LINE:164)\l0x003d: INVOKE  \l  (r1 I:androidx.appcompat.app.AppCompatDelegateImpl$1)\l  (r0 I:java.lang.Thread$UncaughtExceptionHandler A[D('defHandler' java.lang.Thread$UncaughtExceptionHandler)])\l type: DIRECT call: androidx.appcompat.app.AppCompatDelegateImpl.1.\<init\>(java.lang.Thread$UncaughtExceptionHandler):void A[MD:(java.lang.Thread$UncaughtExceptionHandler):void (m)]\l0x0040: INVOKE  (r1 I:java.lang.Thread$UncaughtExceptionHandler) type: STATIC call: java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler):void A[MD:(java.lang.Thread$UncaughtExceptionHandler):void (c)]\l0x0043: SPUT  (r2 I:boolean) androidx.appcompat.app.AppCompatDelegateImpl.sInstalledExceptionHandler boolean  (LINE:190)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0045|RETURN\lORIG_RETURN\l|0x0045: RETURN    (LINE:192)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0045: RETURN   A[SYNTHETIC] (LINE:192)\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0045: RETURN   A[SYNTHETIC] (LINE:192)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{static void androidx.appcompat.app.AppCompatDelegateImpl.\<clinit\>()  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0035 \-\> B:31:0x0045, CROSS_EDGE: B:27:0x0031 \-\> B:31:0x0045, CROSS_EDGE: B:24:0x002c \-\> B:26:0x002f, CROSS_EDGE: B:22:0x0011 \-\> B:23:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x0045: r0 'defHandler' Ljava\/lang\/Thread$UncaughtExceptionHandler;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_18;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_22 -> Node_23;
}

