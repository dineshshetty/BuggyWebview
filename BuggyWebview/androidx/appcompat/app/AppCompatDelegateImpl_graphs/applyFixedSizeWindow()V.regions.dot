digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.applyFixedSizeWindow()V" {
subgraph cluster_Region_326521334 {
label = "R(6:1|(1:3)|(1:6)|(1:9)|(1:12)|13)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0000|androidx.appcompat.widget.ContentFrameLayout androidx.appcompat.widget.ContentFrameLayout r0 = (androidx.appcompat.widget.ContentFrameLayout) r6.mSubDecor.findViewById(16908290)\landroid.view.View android.view.View r1 = r6.mWindow.getDecorView()\lr0.setDecorPadding(r1.getPaddingLeft(), r1.getPaddingTop(), r1.getPaddingRight(), r1.getPaddingBottom())\landroid.content.res.TypedArray android.content.res.TypedArray r2 = r6.mContext.obtainStyledAttributes(androidx.appcompat.C0019R.styleable.AppCompatTheme)\lr2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowMinWidthMajor, r0.getMinWidthMajor())\lr2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowMinWidthMinor, r0.getMinWidthMinor())\l}"];
subgraph cluster_IfRegion_266987340 {
label = "IF [B:19:0x0044] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0044|if (r2.hasValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedWidthMajor) != false) goto L3\l}"];
subgraph cluster_Region_1101215591 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0046|r2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedWidthMajor, r0.getFixedWidthMajor())\l}"];
}
}
subgraph cluster_IfRegion_233973177 {
label = "IF [B:22:0x0055] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0055|if (r2.hasValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedWidthMinor) != false) goto L6\l}"];
subgraph cluster_Region_2018462418 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0057|r2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedWidthMinor, r0.getFixedWidthMinor())\l}"];
}
}
subgraph cluster_IfRegion_1956251939 {
label = "IF [B:25:0x0066] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0066|if (r2.hasValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedHeightMajor) != false) goto L9\l}"];
subgraph cluster_Region_1995570200 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0068|r2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedHeightMajor, r0.getFixedHeightMajor())\l}"];
}
}
subgraph cluster_IfRegion_1828522515 {
label = "IF [B:28:0x0077] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0077|if (r2.hasValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedHeightMinor) != false) goto L12\l}"];
subgraph cluster_Region_1470757585 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0079|r2.getValue(androidx.appcompat.C0019R.styleable.AppCompatTheme_windowFixedHeightMinor, r0.getFixedHeightMinor())\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0082|r2.recycle()\lr0.requestLayout()\l}"];
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x004f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0060}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0071}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0088}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.app.AppCompatDelegateImpl.applyFixedSizeWindow((r6v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0077 \-\> B:30:0x0082, CROSS_EDGE: B:25:0x0066 \-\> B:27:0x0071, CROSS_EDGE: B:22:0x0055 \-\> B:24:0x0060, CROSS_EDGE: B:19:0x0044 \-\> B:21:0x004f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_16 -> Node_18;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_27 -> Node_28;
Node_31 -> Node_17;
}

