digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.onKeyUp(ILandroid\/view\/KeyEvent;)Z" {
subgraph cluster_Region_724957709 {
label = "R(2:2|16)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1616784810 {
label = "Switch: 2
 case 82 -> R(2:3|4)
 case 4 -> R(3:6|(2:(1:11)|12)(1:(1:15))|1)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002|switch(r6) \{\l    case 4: goto L6;\l    case 82: goto L3;\l    default: goto L16;\l\}\l}"];
subgraph cluster_Region_988507794 {
label = "R(2:3|4) | FALL_THROUGH\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0006|onKeyUpPanel(0, r7)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|RETURN\l|return true\l}"];
}
subgraph cluster_Region_735729947 {
label = "R(3:6|(2:(1:11)|12)(1:(1:15))|1)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000a|FALL_THROUGH\l|boolean boolean r2 = r5.mLongPressBackDown\lr5.mLongPressBackDown = false\landroidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState r3 = getPanelState(0, false)\l}"];
subgraph cluster_IfRegion_770515179 {
label = "IF [B:26:0x0012, B:28:0x0016] THEN: R(2:(1:11)|12) ELSE: R(1:(1:15))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0012|if (r3 != null) goto L8\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|ADDED_TO_REGION\l|if (r3.isOpen != false) goto L10\l}"];
subgraph cluster_Region_846644318 {
label = "R(2:(1:11)|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_170830478 {
label = "IF [B:29:0x0018] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0018|if (r2 == false) goto L11\l}"];
subgraph cluster_Region_316581435 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001a|closePanel(r3, true)\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x001d|RETURN\l|return true\l}"];
}
subgraph cluster_Region_907523471 {
label = "R(1:(1:15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_666234266 {
label = "IF [B:33:0x0022] THEN: R(1:15) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0022|if (onBackPressed() != false) goto L15\l}"];
subgraph cluster_Region_1187743744 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0024|RETURN\l|return true\l}"];
}
}
}
}
Node_InsnContainer_1109127347 [shape=record,label="{|break\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0025|RETURN\l|return false\l}"];
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0014}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x001e}"];
MethodNode[shape=record,label="{boolean androidx.appcompat.app.AppCompatDelegateImpl.onKeyUp((r5v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 'keyCode' int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'event' android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x001d \-\> B:19:?, CROSS_EDGE: B:29:0x0018 \-\> B:31:0x001d, CROSS_EDGE: B:34:0x0024 \-\> B:19:?, CROSS_EDGE: B:35:0x0025 \-\> B:19:?, CROSS_EDGE: B:26:0x0012 \-\> B:32:0x001e, CROSS_EDGE: B:21:0x0002 \-\> B:35:0x0025\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_23;
Node_21 -> Node_25;
Node_21 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_32[style=dashed];
Node_28 -> Node_29;
Node_28 -> Node_32[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_19;
Node_35 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_27 -> Node_28;
Node_32 -> Node_33;
}

