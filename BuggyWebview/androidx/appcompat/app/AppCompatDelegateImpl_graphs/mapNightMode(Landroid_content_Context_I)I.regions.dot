digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.mapNightMode(Landroid\/content\/Context;I)I" {
subgraph cluster_Region_2031061291 {
label = "R(1:2)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_620586994 {
label = "Switch: 5
 case androidx.appcompat.app.AppCompatDelegate.MODE_NIGHT_UNSPECIFIED :int -> R(1:16)
 case -1, 1, 2 -> R(1:15)
 case 0 -> R(2:(2:10|(1:12))|14)
 case 3 -> R(1:7)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0001|switch(r5) \{\l    case \-100: goto L16;\l    case \-1: goto L15;\l    case 0: goto L8;\l    case 1: goto L15;\l    case 2: goto L15;\l    case 3: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_1137201471 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0038|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_268153036 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0037|RETURN\l|return r5\l}"];
}
subgraph cluster_Region_179840713 {
label = "R(2:(2:10|(1:12))|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1161106075 {
label = "IF [B:26:0x0019] THEN: R(2:10|(1:12)) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0019|if (android.os.Build.VERSION.SDK_INT \>= 23) goto L10\l}"];
subgraph cluster_Region_1489100629 {
label = "R(2:10|(1:12))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001b|android.app.UiModeManager android.app.UiModeManager r1 = (android.app.UiModeManager) r4.getApplicationContext().getSystemService(\"uimode\")\l}"];
subgraph cluster_IfRegion_2091294020 {
label = "IF [B:28:0x002b] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x002b|if (r1.getNightMode() == 0) goto L12\l}"];
subgraph cluster_Region_1156969131 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002d|RETURN\l|return \-1\l}"];
}
}
}
}
Node_31 [shape=record,label="{31\:\ 0x0036|RETURN\l|return getAutoTimeNightModeManager(r4).getApplyableNightMode()\l}"];
}
subgraph cluster_Region_375015209 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0014|RETURN\l|return getAutoBatteryNightModeManager(r4).getApplyableNightMode()\l}"];
}
subgraph cluster_Region_1562355013 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000b|throw new java.lang.IllegalStateException(\"Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.\")\l}"];
}
}
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0015}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x002e}"];
MethodNode[shape=record,label="{int androidx.appcompat.app.AppCompatDelegateImpl.mapNightMode((r3v0 'this' androidx.appcompat.app.AppCompatDelegateImpl A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'mode' int A[D('mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0014 \-\> B:18:?, CROSS_EDGE: B:29:0x002d \-\> B:18:?, CROSS_EDGE: B:31:0x0036 \-\> B:18:?, CROSS_EDGE: B:26:0x0019 \-\> B:30:0x002e, CROSS_EDGE: B:32:0x0037 \-\> B:18:?, CROSS_EDGE: B:33:0x0038 \-\> B:18:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_23;
Node_20 -> Node_25;
Node_20 -> Node_32;
Node_20 -> Node_33;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_26 -> Node_27;
Node_26 -> Node_30[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_18;
Node_31 -> Node_18;
Node_24 -> Node_18;
Node_22 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_30 -> Node_31;
}

