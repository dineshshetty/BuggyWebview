digraph "CFG forandroidx.appcompat.app.ToolbarActionBar.ToolbarMenuCallback.onPreparePanel(I)Z" {
subgraph cluster_Region_2125081679 {
label = "R(1:(2:(2:4|5)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_535775685 {
label = "R(2:(2:4|5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1435735644 {
label = "IF [B:2:0x0000, B:4:0x0006] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r3 == 0) goto L2\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ADDED_TO_REGION\l|if (androidx.appcompat.app.ToolbarActionBar.this.mToolbarMenuPrepared == false) goto L4\l}"];
subgraph cluster_Region_1048231993 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|androidx.appcompat.app.ToolbarActionBar.this.mDecorToolbar.setMenuPrepared()\landroidx.appcompat.app.ToolbarActionBar.this.mToolbarMenuPrepared = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_295521261 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0002}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.ToolbarActionBar.ToolbarMenuCallback.onPreparePanel((r2v0 'this' androidx.appcompat.app.ToolbarActionBar$ToolbarMenuCallback A[IMMUTABLE_TYPE, THIS]), (r3v0 'featureId' int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:4:0x0006 \-\> B:6:0x0014, CROSS_EDGE: B:2:0x0000 \-\> B:6:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.app.AppCompatDelegateImpl.ActionBarMenuCallback.onPreparePanel(int):boolean]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_9 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_1;
}

