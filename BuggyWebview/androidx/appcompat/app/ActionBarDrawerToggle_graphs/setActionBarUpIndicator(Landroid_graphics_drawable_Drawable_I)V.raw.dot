digraph "CFG forandroidx.appcompat.app.ActionBarDrawerToggle.setActionBarUpIndicator(Landroid\/graphics\/drawable\/Drawable;I)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mWarnedForDisplayHomeAsUp boolean  (LINE:491)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0016 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IGET  (r0 I:androidx.appcompat.app.ActionBarDrawerToggle$Delegate) = (r2 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mActivityImpl androidx.appcompat.app.ActionBarDrawerToggle$Delegate \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:androidx.appcompat.app.ActionBarDrawerToggle$Delegate) type: INTERFACE call: androidx.appcompat.app.ActionBarDrawerToggle.Delegate.isNavigationVisible():boolean A[MD:():boolean (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0016 \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|0x000c: CONST_STR  (r0 I:java.lang.String) =  \"ActionBarDrawerToggle\"  (LINE:492)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"DrawerToggle may not show up because NavigationIcon is not visible. You may need to call actionbar.setDisplayHomeAsUpEnabled(true);\" \l0x0010: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.w(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l0x0013: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:495)\l0x0014: IPUT  (r0 I:boolean), (r2 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mWarnedForDisplayHomeAsUp boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|0x0016: IGET  (r0 I:androidx.appcompat.app.ActionBarDrawerToggle$Delegate) = (r2 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mActivityImpl androidx.appcompat.app.ActionBarDrawerToggle$Delegate  (LINE:497)\l0x0018: INVOKE  \l  (r0 I:androidx.appcompat.app.ActionBarDrawerToggle$Delegate)\l  (r3 I:android.graphics.drawable.Drawable A[D('upDrawable' android.graphics.drawable.Drawable)])\l  (r4 I:int A[D('contentDescRes' int)])\l type: INTERFACE call: androidx.appcompat.app.ActionBarDrawerToggle.Delegate.setActionBarUpIndicator(android.graphics.drawable.Drawable, int):void A[MD:(android.graphics.drawable.Drawable, int):void (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:498)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.app.ActionBarDrawerToggle.setActionBarUpIndicator((r2 'this' I:androidx.appcompat.app.ActionBarDrawerToggle A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[D('upDrawable' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('contentDescRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x000a \-\> B:16:0x0016, CROSS_EDGE: B:12:0x0002 \-\> B:16:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r3 'upDrawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x001b: r4 'contentDescRes' I\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

