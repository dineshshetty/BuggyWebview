digraph "CFG forandroidx.appcompat.app.ActionBarDrawerToggle.toggle()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mDrawerLayout androidx.drawerlayout.widget.DrawerLayout  (LINE:284)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (8388611(0x800003, float:1.1754948E\-38) ??[int, float, short, byte, char]) \l0x0005: INVOKE  (r0 I:int) = (r0 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.getDrawerLockMode(int):int A[MD:(int):int (m)]\l0x0009: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mDrawerLayout androidx.drawerlayout.widget.DrawerLayout  (LINE:285)\l0x000b: INVOKE  (r2 I:boolean) = (r2 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.isDrawerVisible(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawerLockMode' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|0x0014: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mDrawerLayout androidx.drawerlayout.widget.DrawerLayout  (LINE:287)\l0x0016: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.closeDrawer(int):void A[MD:(int):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:291)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|0x001a: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:288)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawerLockMode' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|0x001d: IGET  (r2 I:androidx.drawerlayout.widget.DrawerLayout) = (r3 I:androidx.appcompat.app.ActionBarDrawerToggle) androidx.appcompat.app.ActionBarDrawerToggle.mDrawerLayout androidx.drawerlayout.widget.DrawerLayout  (LINE:289)\l0x001f: INVOKE  (r2 I:androidx.drawerlayout.widget.DrawerLayout), (r1 I:int) type: VIRTUAL call: androidx.drawerlayout.widget.DrawerLayout.openDrawer(int):void A[MD:(int):void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:291)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:291)\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.app.ActionBarDrawerToggle.toggle((r3 'this' I:androidx.appcompat.app.ActionBarDrawerToggle A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001d \-\> B:23:0x0022, CROSS_EDGE: B:21:0x001b \-\> B:23:0x0022, CROSS_EDGE: B:16:0x000f \-\> B:20:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0022: r0 'drawerLockMode' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_24;
Node_24 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
}

