digraph "CFG forandroidx.appcompat.app.ActionBarDrawerToggle.setDrawerIndicatorEnabled(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r4 == r3.mDrawerIndicatorEnabled) goto L13\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r4 == false) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0 = r3.mSlider\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|if (r3.mDrawerLayout.isDrawerOpen(androidx.core.view.GravityCompat.START) == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|int r1 = r3.mCloseDrawerContentDescRes\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|PHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:22:0x0016, B:21:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|setActionBarUpIndicator(r0, r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|r3.mDrawerIndicatorEnabled = r4\l}"];
Node_26 [shape=record,label="{26\:\ 0x0024|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|int r1 = r3.mOpenDrawerContentDescRes\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|setActionBarUpIndicator(r3.mHomeAsUpIndicator, 0)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.ActionBarDrawerToggle.setDrawerIndicatorEnabled((r3v0 'this' androidx.appcompat.app.ActionBarDrawerToggle A[IMMUTABLE_TYPE, THIS]), (r4v0 'enable' boolean A[D('enable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0016 \-\> B:23:0x0018, CROSS_EDGE: B:24:0x001c \-\> B:25:0x0022, CROSS_EDGE: B:17:0x0002 \-\> B:26:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_27 -> Node_15;
}

