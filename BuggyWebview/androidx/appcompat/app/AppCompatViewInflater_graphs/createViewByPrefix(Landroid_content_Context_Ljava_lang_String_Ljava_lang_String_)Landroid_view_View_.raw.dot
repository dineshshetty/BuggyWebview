digraph "CFG forandroidx.appcompat.app.AppCompatViewInflater.createViewByPrefix(Landroid\/content\/Context;Ljava\/lang\/String;Ljava\/lang\/String;)Landroid\/view\/View;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: SGET  (r0 I:androidx.collection.SimpleArrayMap\<java.lang.String, java.lang.reflect.Constructor\<? extends android.view.View\>\>) =  androidx.appcompat.app.AppCompatViewInflater.sConstructorMap androidx.collection.SimpleArrayMap  (LINE:340)\l0x0002: INVOKE  (r1 I:java.lang.Object) = (r0 I:androidx.collection.SimpleArrayMap), (r7 I:java.lang.Object A[D('name' java.lang.String)]) type: VIRTUAL call: androidx.collection.SimpleArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)]\l0x0006: CHECK_CAST (r1 I:java.lang.reflect.Constructor) = (java.lang.reflect.Constructor) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('constructor' java.lang.reflect.Constructor\<? extends android.view.View\>)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0036  (LINE:343)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('prefix' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x001c  (LINE:346)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|0x001c: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('name' java.lang.String)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|TryCatch #0 \{Exception \-\> 0x0043, blocks: (B:20:0x000c, B:22:0x001d, B:23:0x0036), top: B:28:0x000c \}\lCatch: Exception \-\> 0x0043\l|0x001d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: INVOKE  (r4 I:java.lang.ClassLoader) = (r6 I:android.content.Context A[D('context' android.content.Context)]) type: VIRTUAL call: android.content.Context.getClassLoader():java.lang.ClassLoader A[Catch: Exception \-\> 0x0043, MD:():java.lang.ClassLoader (c)] (LINE:348)\l0x0022: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.String), (r3 I:boolean), (r4 I:java.lang.ClassLoader) type: STATIC call: java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class A[Catch: Exception \-\> 0x0043, MD:(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)] (LINE:345)\l0x0026: CONST_CLASS  (r3 I:java.lang.Class\<android.view.View\>) =  android.view.View.class \l0x0028: INVOKE  (r2 I:java.lang.Class) = (r2 I:java.lang.Class), (r3 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.asSubclass(java.lang.Class):java.lang.Class A[Catch: Exception \-\> 0x0043, MD:\<U\>:(java.lang.Class\<U\>):java.lang.Class\<? extends U\> (c)] (LINE:348)\l0x002c: SGET  (r3 I:java.lang.Class\<?\>[]) =  androidx.appcompat.app.AppCompatViewInflater.sConstructorSignature java.lang.Class[] A[Catch: Exception \-\> 0x0043] (LINE:350)\l0x002e: INVOKE  (r3 I:java.lang.reflect.Constructor) = (r2 I:java.lang.Class A[D('clazz' java.lang.Class\<? extends android.view.View\>)]), (r3 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor A[Catch: Exception \-\> 0x0043, MD:(java.lang.Class\<?\>[]):java.lang.reflect.Constructor\<T\> VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0032: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('constructor' java.lang.reflect.Constructor\<? extends android.view.View\>)]) = (r3 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r0 I:androidx.collection.SimpleArrayMap)\l  (r7 I:java.lang.Object A[D('name' java.lang.String)])\l  (r1 I:java.lang.Object A[D('constructor' java.lang.reflect.Constructor\<? extends android.view.View\>)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: Exception \-\> 0x0043, MD:(K, V):V (m)] (LINE:351)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|TRY_ENTER\lTryCatch #0 \{Exception \-\> 0x0043, blocks: (B:20:0x000c, B:22:0x001d, B:23:0x0036), top: B:28:0x000c \}\lCatch: Exception \-\> 0x0043\l|0x000c: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: Exception \-\> 0x0043, TRY_ENTER]\l0x000e: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: Exception \-\> 0x0043, MD:():void (c)]\l0x0011: INVOKE  (r2 I:java.lang.StringBuilder), (r8 I:java.lang.String A[D('prefix' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: Exception \-\> 0x0043, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0014: INVOKE  (r2 I:java.lang.StringBuilder), (r7 I:java.lang.String A[D('name' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: Exception \-\> 0x0043, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0017: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: Exception \-\> 0x0043, MD:():java.lang.String (c)]\l0x001b: GOTO  \-\> 0x001d \l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|ExcHandler: Exception \-\> 0x0043\l|0x0043: MOVE_EXCEPTION  (r0 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0043] (LINE:355)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0044|RETURN\l|0x0044: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:358)\l0x0045: RETURN  (r2 I:android.view.View) \l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0036|TRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0043, blocks: (B:20:0x000c, B:22:0x001d, B:23:0x0036), top: B:28:0x000c \}\lCatch: Exception \-\> 0x0043\l|0x0036: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:353)\l0x0037: INVOKE  \l  (r1 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor\<? extends android.view.View\>)])\l  (r0 I:boolean)\l type: VIRTUAL call: java.lang.reflect.Constructor.setAccessible(boolean):void A[Catch: Exception \-\> 0x0043, MD:(boolean):void (s)]\l0x003a: IGET  (r0 I:java.lang.Object[]) = (r5 I:androidx.appcompat.app.AppCompatViewInflater) androidx.appcompat.app.AppCompatViewInflater.mConstructorArgs java.lang.Object[] A[Catch: Exception \-\> 0x0043] (LINE:354)\l0x003c: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor\<? extends android.view.View\>)])\l  (r0 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object A[Catch: Exception \-\> 0x0043, MD:(java.lang.Object[]):T VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.InstantiationException, java.lang.reflect.InvocationTargetException (c)]\l0x0040: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) A[Catch: Exception \-\> 0x0043, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|RETURN\l|0x0042: RETURN  (r0 I:android.view.View) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{private android.view.View androidx.appcompat.app.AppCompatViewInflater.createViewByPrefix((r5 'this' I:androidx.appcompat.app.AppCompatViewInflater A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('prefix' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0045 \-\> B:16:?, CROSS_EDGE: B:20:0x000c \-\> B:22:0x001d, CROSS_EDGE: B:28:0x000c \-\> B:25:0x0043, CROSS_EDGE: B:18:0x0008 \-\> B:23:0x0036\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0036: r2 'clazz' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<+Landroid\/view\/View;\>;\l  0x0044\-0x0045: r0 'e' Ljava\/lang\/Exception;\l  0x0008\-0x0045: r1 'constructor' Ljava\/lang\/reflect\/Constructor;, signature: Ljava\/lang\/reflect\/Constructor\<+Landroid\/view\/View;\>;\l  \-1 \-0x0045: r6 'context' Landroid\/content\/Context;\l  \-1 \-0x0045: r7 'name' Ljava\/lang\/String;\l  \-1 \-0x0045: r8 'prefix' Ljava\/lang\/String;\lTryCatch #0 \{Exception \-\> 0x0043, blocks: (B:20:0x000c, B:22:0x001d, B:23:0x0036), top: B:28:0x000c \}\lEXCEPTIONS:[Ljava\/lang\/ClassNotFoundException;, Landroid\/view\/InflateException;]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_21;
Node_19 -> Node_28[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_28 -> Node_20;
Node_28 -> Node_25;
Node_20 -> Node_22;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_23 -> Node_24;
Node_23 -> Node_29;
Node_24 -> Node_16;
Node_29 -> Node_25;
}

