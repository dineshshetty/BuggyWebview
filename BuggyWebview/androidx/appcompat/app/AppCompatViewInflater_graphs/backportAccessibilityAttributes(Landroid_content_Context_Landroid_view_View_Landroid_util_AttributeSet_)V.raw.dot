digraph "CFG forandroidx.appcompat.app.AppCompatViewInflater.backportAccessibilityAttributes(Landroid\/content\/Context;Landroid\/view\/View;Landroid\/util\/AttributeSet;)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:395)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (19 ??[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:38:0x0051 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|0x0006: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0008: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r0 I:??[int, byte, short, char]) \<= (r1 I:??[int, byte, short, char])  \-\> B:27:0x000d \l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: SGET  (r0 I:int[]) =  androidx.appcompat.app.AppCompatViewInflater.sAccessibilityHeading int[]  (LINE:399)\l0x000f: INVOKE  (r0 I:android.content.res.TypedArray) = \l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r0 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:400)\l0x0014: INVOKE  (r2 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0021 \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|0x001a: INVOKE  (r2 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int), (r1 I:boolean) type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)] (LINE:401)\l0x001e: INVOKE  (r5 I:android.view.View A[D('view' android.view.View)]), (r2 I:boolean) type: STATIC call: androidx.core.view.ViewCompat.setAccessibilityHeading(android.view.View, boolean):void A[MD:(android.view.View, boolean):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:403)\l0x0024: SGET  (r2 I:int[]) =  androidx.appcompat.app.AppCompatViewInflater.sAccessibilityPaneTitle int[]  (LINE:405)\l0x0026: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) = \l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r2 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x002a: INVOKE  (r2 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)] (LINE:406)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002e|0x002e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0037 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|0x0030: INVOKE  (r2 I:java.lang.String) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.getString(int):java.lang.String A[MD:(int):java.lang.String (c)] (LINE:407)\l0x0034: INVOKE  (r5 I:android.view.View A[D('view' android.view.View)]), (r2 I:java.lang.CharSequence) type: STATIC call: androidx.core.view.ViewCompat.setAccessibilityPaneTitle(android.view.View, java.lang.CharSequence):void A[MD:(android.view.View, java.lang.CharSequence):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0037|0x0037: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:409)\l0x003a: SGET  (r2 I:int[]) =  androidx.appcompat.app.AppCompatViewInflater.sScreenReaderFocusable int[]  (LINE:411)\l0x003c: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) = \l  (r4 I:android.content.Context A[D('context' android.content.Context)])\l  (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r2 I:int[])\l type: VIRTUAL call: android.content.Context.obtainStyledAttributes(android.util.AttributeSet, int[]):android.content.res.TypedArray A[MD:(android.util.AttributeSet, int[]):android.content.res.TypedArray (c)]\l0x0040: INVOKE  (r2 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int) type: VIRTUAL call: android.content.res.TypedArray.hasValue(int):boolean A[MD:(int):boolean (c)] (LINE:412)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0044|0x0044: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x004d \l}"];
Node_35 [shape=record,label="{35\:\ 0x0046|0x0046: INVOKE  (r1 I:boolean) = (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]), (r1 I:int), (r1 I:boolean) type: VIRTUAL call: android.content.res.TypedArray.getBoolean(int, boolean):boolean A[MD:(int, boolean):boolean (c)] (LINE:413)\l0x004a: INVOKE  (r5 I:android.view.View A[D('view' android.view.View)]), (r1 I:boolean) type: STATIC call: androidx.core.view.ViewCompat.setScreenReaderFocusable(android.view.View, boolean):void A[MD:(android.view.View, boolean):void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x004d|0x004d: INVOKE  (r0 I:android.content.res.TypedArray A[D('a' android.content.res.TypedArray)]) type: VIRTUAL call: android.content.res.TypedArray.recycle():void A[MD:():void (c)] (LINE:415)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0050|RETURN\l|0x0050: RETURN    (LINE:416)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0051: RETURN   A[SYNTHETIC] (LINE:396)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0051|RETURN\lORIG_RETURN\l|0x0051: RETURN    (LINE:396)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.app.AppCompatViewInflater.backportAccessibilityAttributes((r3 'this' I:androidx.appcompat.app.AppCompatViewInflater A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0044 \-\> B:36:0x004d, CROSS_EDGE: B:31:0x002e \-\> B:33:0x0037, CROSS_EDGE: B:28:0x0018 \-\> B:30:0x0021, CROSS_EDGE: B:38:0x0051 \-\> B:21:?, CROSS_EDGE: B:23:0x0004 \-\> B:38:0x0051\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0051: r0 'a' Landroid\/content\/res\/TypedArray;\l  \-1 \-0x0051: r4 'context' Landroid\/content\/Context;\l  \-1 \-0x0051: r5 'view' Landroid\/view\/View;\l  \-1 \-0x0051: r6 'attrs' Landroid\/util\/AttributeSet;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_38;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_39[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
}

