digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.TabImpl.setIcon(I)Landroidx\/appcompat\/app\/ActionBar$Tab;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.app.WindowDecorActionBar) = (r1 I:androidx.appcompat.app.WindowDecorActionBar$TabImpl) androidx.appcompat.app.WindowDecorActionBar.TabImpl.this$0 androidx.appcompat.app.WindowDecorActionBar  (LINE:1236)\l0x0002: IGET  (r0 I:android.content.Context) = (r0 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mContext android.content.Context \l0x0004: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:android.content.Context), (r2 I:int A[D('resId' int)]) type: STATIC call: androidx.appcompat.content.res.AppCompatResources.getDrawable(android.content.Context, int):android.graphics.drawable.Drawable A[MD:(android.content.Context, int):android.graphics.drawable.Drawable (m)]\l0x0008: INVOKE  (r0 I:androidx.appcompat.app.ActionBar$Tab) = (r1 I:androidx.appcompat.app.WindowDecorActionBar$TabImpl), (r0 I:android.graphics.drawable.Drawable) type: VIRTUAL call: androidx.appcompat.app.WindowDecorActionBar.TabImpl.setIcon(android.graphics.drawable.Drawable):androidx.appcompat.app.ActionBar$Tab A[MD:(android.graphics.drawable.Drawable):androidx.appcompat.app.ActionBar$Tab (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|0x000c: RETURN  (r0 I:androidx.appcompat.app.ActionBar$Tab) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.appcompat.app.ActionBar$Tab androidx.appcompat.app.WindowDecorActionBar.TabImpl.setIcon((r1 'this' I:androidx.appcompat.app.WindowDecorActionBar$TabImpl A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('resId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000c: r2 'resId' I\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBar.Tab.setIcon(int):androidx.appcompat.app.ActionBar$Tab]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

