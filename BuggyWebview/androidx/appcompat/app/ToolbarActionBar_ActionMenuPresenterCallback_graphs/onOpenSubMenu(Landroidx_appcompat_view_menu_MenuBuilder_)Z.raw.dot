digraph "CFG forandroidx.appcompat.app.ToolbarActionBar.ActionMenuPresenterCallback.onOpenSubMenu(Landroidx\/appcompat\/view\/menu\/MenuBuilder;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.app.ToolbarActionBar) = (r2 I:androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback) androidx.appcompat.app.ToolbarActionBar.ActionMenuPresenterCallback.this$0 androidx.appcompat.app.ToolbarActionBar  (LINE:561)\l0x0002: IGET  (r0 I:android.view.Window$Callback) = (r0 I:androidx.appcompat.app.ToolbarActionBar) androidx.appcompat.app.ToolbarActionBar.mWindowCallback android.view.Window$Callback \l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (108(0x6c, float:1.51E\-43) ??[int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r0 I:android.view.Window$Callback)\l  (r1 I:int)\l  (r3 I:android.view.Menu A[D('subMenu' androidx.appcompat.view.menu.MenuBuilder)])\l type: INTERFACE call: android.view.Window.Callback.onMenuOpened(int, android.view.Menu):boolean A[MD:(int, android.view.Menu):boolean (c)]\l0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:562)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.ToolbarActionBar.ActionMenuPresenterCallback.onOpenSubMenu((r2 'this' I:androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.appcompat.view.menu.MenuBuilder A[D('subMenu' androidx.appcompat.view.menu.MenuBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000a: r3 'subMenu' Landroidx\/appcompat\/view\/menu\/MenuBuilder;\lMETHOD_OVERRIDE: [androidx.appcompat.view.menu.MenuPresenter.Callback.onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

