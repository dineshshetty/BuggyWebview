digraph "CFG forandroidx.appcompat.app.AlertController.getIconAttributeResId(I)I" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.util.TypedValue) =  android.util.TypedValue  (LINE:398)\l0x0002: INVOKE  (r0 I:android.util.TypedValue) type: DIRECT call: android.util.TypedValue.\<init\>():void A[MD:():void (c)]\l0x0005: IGET  (r1 I:android.content.Context) = (r3 I:androidx.appcompat.app.AlertController) androidx.appcompat.app.AlertController.mContext android.content.Context  (LINE:399)\l0x0007: INVOKE  (r1 I:android.content.res.Resources$Theme) = (r1 I:android.content.Context) type: VIRTUAL call: android.content.Context.getTheme():android.content.res.Resources$Theme A[MD:():android.content.res.Resources$Theme (c)]\l0x000b: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: INVOKE  \l  (r1 I:android.content.res.Resources$Theme)\l  (r4 I:int A[D('attrId' int)])\l  (r0 I:android.util.TypedValue A[D('out' android.util.TypedValue)])\l  (r2 I:boolean)\l type: VIRTUAL call: android.content.res.Resources.Theme.resolveAttribute(int, android.util.TypedValue, boolean):boolean A[MD:(int, android.util.TypedValue, boolean):boolean (c)]\l0x000f: IGET  (r1 I:int) = (r0 I:android.util.TypedValue A[D('out' android.util.TypedValue)]) android.util.TypedValue.resourceId int  (LINE:400)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|0x0011: RETURN  (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.app.AlertController.getIconAttributeResId((r3 'this' I:androidx.appcompat.app.AlertController A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('attrId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0011: r0 'out' Landroid\/util\/TypedValue;\l  \-1 \-0x0011: r4 'attrId' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

