digraph "CFG forandroidx.appcompat.app.AlertController.canTextInput(Landroid\/view\/View;)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0005|if (r5.onCheckIsTextEditor() == false) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008}"];
Node_22 [shape=record,label="{22\:\ 0x000b|if ((r5 instanceof android.view.ViewGroup) != false) goto L8\l}"];
Node_23 [shape=record,label="{23\:\ 0x000d|RETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|android.view.ViewGroup r0 = (android.view.ViewGroup) r5\lint r3 = r0.getChildCount()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|LOOP_START\lLOOP:0: B:25:0x0015\-\>B:27:0x0021\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:24:0x000e, B:27:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \<= 0) goto L14\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|int r3 = r3 + (\-1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|LOOP_END\lLOOP:0: B:25:0x0015\-\>B:27:0x0021\l|if (canTextInput(r0.getChildAt(r3)) == false) goto L9\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|RETURN\l|return true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0024|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{static boolean androidx.appcompat.app.AlertController.canTextInput((r5v0 'v' android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x000d \-\> B:17:?, BACK_EDGE: B:27:0x0021 \-\> B:25:0x0015, CROSS_EDGE: B:28:0x0023 \-\> B:17:?, CROSS_EDGE: B:29:0x0024 \-\> B:17:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_17;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_25;
Node_27 -> Node_30[style=dashed];
Node_30 -> Node_28;
Node_28 -> Node_17;
Node_31 -> Node_29;
Node_29 -> Node_17;
}

