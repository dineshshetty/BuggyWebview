digraph "CFG forandroidx.appcompat.app.AlertController.manageScrollIndicators(Landroid\/view\/View;Landroid\/view\/View;Landroid\/view\/View;)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:748)\l0x0001: CONST  (r1 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('upIndicator' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0012 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|0x0005: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:750)\l0x0006: INVOKE  (r2 I:boolean) = (r3 I:android.view.View A[D('v' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.canScrollVertically(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x000e \l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: INVOKE  (r4 I:android.view.View A[D('upIndicator' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:749)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e|0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0012|0x0012: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('downIndicator' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:?  (LINE:752)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|0x0015: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:754)\l0x0016: INVOKE  (r2 I:boolean) = (r3 I:android.view.View A[D('v' android.view.View)]), (r2 I:int) type: VIRTUAL call: android.view.View.canScrollVertically(int):boolean A[MD:(int):boolean (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001d \l}"];
Node_30 [shape=record,label="{30\:\ 0x001d|0x001d: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x001e|0x001e: INVOKE  (r5 I:android.view.View A[D('downIndicator' android.view.View)]), (r0 I:int) type: VIRTUAL call: android.view.View.setVisibility(int):void A[MD:(int):void (c)] (LINE:753)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:756)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:756)\l}"];
MethodNode[shape=record,label="{static void androidx.appcompat.app.AlertController.manageScrollIndicators((r3 I:android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.View A[D('upIndicator' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('downIndicator' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001a \-\> B:31:0x001e, CROSS_EDGE: B:26:0x0012 \-\> B:32:0x0021, CROSS_EDGE: B:24:0x000e \-\> B:25:0x000f, CROSS_EDGE: B:20:0x0002 \-\> B:26:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r3 'v' Landroid\/view\/View;\l  \-1 \-0x0021: r4 'upIndicator' Landroid\/view\/View;\l  \-1 \-0x0021: r5 'downIndicator' Landroid\/view\/View;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_18;
Node_33 -> Node_18;
}

