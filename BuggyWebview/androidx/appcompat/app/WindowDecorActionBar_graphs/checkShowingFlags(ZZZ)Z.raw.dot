digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.checkShowingFlags(ZZZ)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:756)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|0x0001: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('showingForMode' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0004 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean)  (LINE:757)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hiddenByApp' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000a  (LINE:758)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0006|0x0006: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hiddenBySystem' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0009 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:boolean)  (LINE:761)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:759)\l0x000b: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:759)\l0x000b: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{static boolean androidx.appcompat.app.WindowDecorActionBar.checkShowingFlags((r1 I:boolean A[D('hiddenByApp' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:boolean A[D('hiddenBySystem' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('showingForMode' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0009 \-\> B:1:?, CROSS_EDGE: B:10:0x000b \-\> B:1:?, CROSS_EDGE: B:5:0x0004 \-\> B:9:0x000a\lDebug Info:\l  \-1 \-0x000b: r1 'hiddenByApp' Z\l  \-1 \-0x000b: r2 'hiddenBySystem' Z\l  \-1 \-0x000b: r3 'showingForMode' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_8;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_1;
Node_11 -> Node_1;
Node_9 -> Node_1;
}

