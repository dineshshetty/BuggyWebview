digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.startActionMode(Landroidx\/appcompat\/view\/ActionMode$Callback;)Landroidx\/appcompat\/view\/ActionMode;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl r0 = r2.mActionMode\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|r0.finish()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|r2.mOverlayLayout.setHideOnContentScrollEnabled(false)\lr2.mContextView.killMode()\landroidx.appcompat.app.WindowDecorActionBar$ActionModeImpl r0 = new androidx.appcompat.app.WindowDecorActionBar.ActionModeImpl(r2, r2.mContextView.getContext(), r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r0.dispatchOnCreate() == false) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|r2.mActionMode = r0\lr0.invalidate()\lr2.mContextView.initForMode(r0)\lanimateToMode(true)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public androidx.appcompat.view.ActionMode androidx.appcompat.app.WindowDecorActionBar.startActionMode((r2v0 'this' androidx.appcompat.app.WindowDecorActionBar A[IMMUTABLE_TYPE, THIS]), (r3v0 'callback' androidx.appcompat.view.ActionMode$Callback A[D('callback' androidx.appcompat.view.ActionMode$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0033 \-\> B:1:?, CROSS_EDGE: B:3:0x0002 \-\> B:5:0x0007\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.app.ActionBar.startActionMode(androidx.appcompat.view.ActionMode$Callback):androidx.appcompat.view.ActionMode]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

