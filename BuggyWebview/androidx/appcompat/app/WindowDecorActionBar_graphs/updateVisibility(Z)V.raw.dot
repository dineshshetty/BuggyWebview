digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.updateVisibility(Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mHiddenByApp boolean  (LINE:767)\l0x0002: IGET  (r1 I:boolean) = (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mHiddenBySystem boolean \l0x0004: IGET  (r2 I:boolean) = (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mShowingForMode boolean \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:boolean), (r1 I:boolean), (r2 I:boolean) type: STATIC call: androidx.appcompat.app.WindowDecorActionBar.checkShowingFlags(boolean, boolean, boolean):boolean A[MD:(boolean, boolean, boolean):boolean (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shown' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017  (LINE:770)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r1 I:boolean) = (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mNowShowing boolean  (LINE:771)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:? \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:772)\l0x0011: IPUT  (r1 I:boolean), (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mNowShowing boolean \l0x0013: INVOKE  (r3 I:androidx.appcompat.app.WindowDecorActionBar), (r4 I:boolean A[D('fromSystem' boolean)]) type: VIRTUAL call: androidx.appcompat.app.WindowDecorActionBar.doShow(boolean):void A[MD:(boolean):void (m)] (LINE:773)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:781)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:781)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IGET  (r1 I:boolean) = (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mNowShowing boolean  (LINE:776)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:777)\l0x001c: IPUT  (r1 I:boolean), (r3 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mNowShowing boolean \l0x001e: INVOKE  (r3 I:androidx.appcompat.app.WindowDecorActionBar), (r4 I:boolean A[D('fromSystem' boolean)]) type: VIRTUAL call: androidx.appcompat.app.WindowDecorActionBar.doHide(boolean):void A[MD:(boolean):void (m)] (LINE:778)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:781)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:781)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.app.WindowDecorActionBar.updateVisibility((r3 'this' I:androidx.appcompat.app.WindowDecorActionBar A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('fromSystem' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000e \-\> B:10:0x0021, CROSS_EDGE: B:9:0x001b \-\> B:10:0x0021, CROSS_EDGE: B:8:0x0019 \-\> B:10:0x0021\lDebug Info:\l  0x000a\-0x0021: r0 'shown' Z\l  \-1 \-0x0021: r4 'fromSystem' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_12;
Node_12 -> Node_1;
Node_11 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_13 -> Node_1;
}

