digraph "CFG forandroidx.appcompat.app.WindowDecorActionBar.onContentScrollStarted()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.view.ViewPropertyAnimatorCompatSet) = (r1 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mCurrentShowAnim androidx.appcompat.view.ViewPropertyAnimatorCompatSet  (LINE:959)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:androidx.appcompat.view.ViewPropertyAnimatorCompatSet) type: VIRTUAL call: androidx.appcompat.view.ViewPropertyAnimatorCompatSet.cancel():void A[MD:():void (m)] (LINE:960)\l0x0007: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:961)\l0x0008: IPUT  (r0 I:androidx.appcompat.view.ViewPropertyAnimatorCompatSet), (r1 I:androidx.appcompat.app.WindowDecorActionBar) androidx.appcompat.app.WindowDecorActionBar.mCurrentShowAnim androidx.appcompat.view.ViewPropertyAnimatorCompatSet \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: RETURN    (LINE:963)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN   A[SYNTHETIC] (LINE:963)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.WindowDecorActionBar.onContentScrollStarted((r1 'this' I:androidx.appcompat.app.WindowDecorActionBar A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:3:0x0002 \-\> B:5:0x000a\lMETHOD_OVERRIDE: [androidx.appcompat.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback.onContentScrollStarted():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_1;
}

