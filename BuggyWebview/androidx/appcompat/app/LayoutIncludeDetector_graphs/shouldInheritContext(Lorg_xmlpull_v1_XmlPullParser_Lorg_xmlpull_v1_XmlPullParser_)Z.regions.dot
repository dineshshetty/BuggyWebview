digraph "CFG forandroidx.appcompat.app.LayoutIncludeDetector.shouldInheritContext(Lorg\/xmlpull\/v1\/XmlPullParser;Lorg\/xmlpull\/v1\/XmlPullParser;)Z" {
subgraph cluster_Region_645416307 {
label = "R(1:(2:(1:(1:(2:(1:7)|(1:10))))|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1789030154 {
label = "R(2:(1:(1:(2:(1:7)|(1:10))))|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1342040603 {
label = "IF [B:19:0x0000, B:20:0x0002] THEN: R(1:(1:(2:(1:7)|(1:10)))) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|if (r3 != null) goto L2\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|ADDED_TO_REGION\l|if (r2 != r3) goto L3\l}"];
subgraph cluster_Region_1041844996 {
label = "R(1:(1:(2:(1:7)|(1:10))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1521406569 {
label = "Try: R(1:(2:(1:7)|(1:10))) catches: R(1:12)";
node [shape=record,color=blue];
subgraph cluster_Region_588069897 {
label = "R(1:(2:(1:7)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_58763073 {
label = "R(2:(1:7)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2008386910 {
label = "IF [B:22:0x0009] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0009|if (r3.getEventType() == 2) goto L6\l}"];
subgraph cluster_Region_1537483867 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0015|RETURN\l|return \"include\".equals(r3.getName())\l}"];
}
}
subgraph cluster_Region_285455954 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_398434716 {
label = "R(1:12) | ExcHandler: XmlPullParserException \-\> 0x0017\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
subgraph cluster_Region_1287323976 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_398434716 {
label = "R(1:12) | ExcHandler: XmlPullParserException \-\> 0x0017\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\lORIG_RETURN\l|return false\l}"];
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\lCatch: XmlPullParserException \-\> 0x0017\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000b|TRY_LEAVE\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\lCatch: XmlPullParserException \-\> 0x0017\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0017|ExcHandler: XmlPullParserException \-\> 0x0017\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean androidx.appcompat.app.LayoutIncludeDetector.shouldInheritContext((r2v0 'parser' org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'previousParser' org.xmlpull.v1.XmlPullParser A[D('previousParser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0015 \-\> B:18:?, CROSS_EDGE: B:26:0x0017 \-\> B:27:0x0018, CROSS_EDGE: B:22:0x0009 \-\> B:27:0x0018, CROSS_EDGE: B:29:0x0004 \-\> B:26:0x0017, CROSS_EDGE: B:19:0x0000 \-\> B:27:0x0018\lINLINE_NOT_NEEDED\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_19 -> Node_31[style=dashed];
Node_20 -> Node_29;
Node_20 -> Node_32[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_33[style=dashed];
Node_24 -> Node_18;
Node_33 -> Node_18;
Node_27 -> Node_18;
Node_32 -> Node_18;
Node_27 -> Node_18;
Node_17 -> Node_19;
Node_29 -> Node_21;
Node_29 -> Node_26;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_30;
Node_30 -> Node_26;
Node_26 -> Node_27;
Node_31 -> Node_18;
}

