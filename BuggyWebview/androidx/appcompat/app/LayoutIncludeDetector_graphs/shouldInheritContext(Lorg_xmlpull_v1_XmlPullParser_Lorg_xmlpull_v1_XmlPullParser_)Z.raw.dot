digraph "CFG forandroidx.appcompat.app.LayoutIncludeDetector.shouldInheritContext(Lorg\/xmlpull\/v1\/XmlPullParser;Lorg\/xmlpull\/v1\/XmlPullParser;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousParser' org.xmlpull.v1.XmlPullParser)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:?  (LINE:66)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parser' org.xmlpull.v1.XmlPullParser)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousParser' org.xmlpull.v1.XmlPullParser)])  \-\> B:32:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\lCatch: XmlPullParserException \-\> 0x0017\l|0x0004: INVOKE  (r0 I:int) = (r3 I:org.xmlpull.v1.XmlPullParser A[D('previousParser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getEventType():int A[Catch: XmlPullParserException \-\> 0x0017, MD:():int throws org.xmlpull.v1.XmlPullParserException (c), TRY_ENTER] (LINE:75)\l0x0008: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_23 [shape=record,label="{23\:\ 0x000b|TRY_LEAVE\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\lCatch: XmlPullParserException \-\> 0x0017\l|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"include\"  (LINE:78)\l0x000d: INVOKE  (r1 I:java.lang.String) = (r3 I:org.xmlpull.v1.XmlPullParser A[D('previousParser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[Catch: XmlPullParserException \-\> 0x0017, MD:():java.lang.String (c)]\l0x0011: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[Catch: XmlPullParserException \-\> 0x0017, MD:(java.lang.Object):boolean (c), TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:83)\l0x0019: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|ExcHandler: XmlPullParserException \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r0 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x0017] (LINE:80)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:83)\l0x0019: RETURN  (r0 I:boolean) \l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:83)\l0x0019: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0018: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:83)\l0x0019: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private static boolean androidx.appcompat.app.LayoutIncludeDetector.shouldInheritContext((r2 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.xmlpull.v1.XmlPullParser A[D('previousParser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0015 \-\> B:18:?, CROSS_EDGE: B:26:0x0017 \-\> B:27:0x0018, CROSS_EDGE: B:22:0x0009 \-\> B:27:0x0018, CROSS_EDGE: B:29:0x0004 \-\> B:26:0x0017, CROSS_EDGE: B:19:0x0000 \-\> B:27:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r2 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0019: r3 'previousParser' Lorg\/xmlpull\/v1\/XmlPullParser;\lTryCatch #0 \{XmlPullParserException \-\> 0x0017, blocks: (B:21:0x0004, B:23:0x000b), top: B:29:0x0004 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_31;
Node_20 -> Node_29[style=dashed];
Node_20 -> Node_32;
Node_29 -> Node_21;
Node_29 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_23 -> Node_30;
Node_24 -> Node_18;
Node_30 -> Node_26;
Node_33 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_18;
Node_32 -> Node_18;
Node_31 -> Node_18;
}

