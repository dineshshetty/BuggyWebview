digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState.hasPanelItems()Z" {
subgraph cluster_Region_1422784312 {
label = "R(1:(2:(1:3)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1729379884 {
label = "R(2:(1:3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1454190890 {
label = "IF [B:16:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r3.shownPanelView == null) goto L3\l}"];
subgraph cluster_Region_122785943 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0005|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1017037682 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0009|RETURN\l|return r3.createdPanelView != null \|\| r3.listMenuPresenter.getAdapter().getCount() \> 0\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000b|RETURN\lADDED_TO_REGION\l|return true\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000c}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0016|REMOVE\lADDED_TO_REGION\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0018|ORIG_RETURN\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.AppCompatDelegateImpl.PanelFeatureState.hasPanelItems((r3v0 'this' androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x000b \-\> B:14:?, CROSS_EDGE: B:24:0x0019 \-\> B:14:?, CROSS_EDGE: B:22:0x0016 \-\> B:24:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_14;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_14;
Node_25 -> Node_14;
}

