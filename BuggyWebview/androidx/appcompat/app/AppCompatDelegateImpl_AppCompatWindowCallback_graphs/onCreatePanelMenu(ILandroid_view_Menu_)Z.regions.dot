digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.AppCompatWindowCallback.onCreatePanelMenu(ILandroid\/view\/Menu;)Z" {
subgraph cluster_Region_126114940 {
label = "R(1:(2:(1:4)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_2139877342 {
label = "R(2:(1:4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2112155553 {
label = "IF [B:11:0x0000, B:13:0x0004] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 == 0) goto L2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|ADDED_TO_REGION\l|if ((r3 instanceof androidx.appcompat.view.menu.MenuBuilder) == false) goto L4\l}"];
subgraph cluster_Region_1755352875 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1306675711 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000c|RETURN\l|return super.onCreatePanelMenu(r2, r3)\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0002}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.AppCompatDelegateImpl.AppCompatWindowCallback.onCreatePanelMenu((r1v0 'this' androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback A[IMMUTABLE_TYPE, THIS]), (r2v0 'featureId' int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'menu' android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x000c \-\> B:10:?, CROSS_EDGE: B:11:0x0000 \-\> B:16:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.Window.Callback.onCreatePanelMenu(int, android.view.Menu):boolean\}]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_10;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_16 -> Node_17;
}

