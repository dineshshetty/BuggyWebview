digraph "CFG forandroidx.appcompat.app.AppCompatDelegateImpl.AppCompatWindowCallback.bypassOnPanelClosed(Landroid\/view\/Window$Callback;ILandroid\/view\/Menu;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|r1 = false\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000b, blocks: (B:14:0x0002), top: B:20:0x0002 \}\lCatch: all \-\> 0x000b\l|r2.mOnPanelClosedBypassEnabled = true     \/\/ Catch: java.lang.Throwable \-\> Lb\lr3.onPanelClosed(r4, r5)     \/\/ Catch: java.lang.Throwable \-\> Lb\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|DONT_GENERATE\l|r2.mOnPanelClosedBypassEnabled = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|ExcHandler: all \-\> 0x000b\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|FINALLY_INSNS\l|r2.mOnPanelClosedBypassEnabled = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|throw r0\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.AppCompatDelegateImpl.AppCompatWindowCallback.bypassOnPanelClosed((r2v0 'this' androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback A[IMMUTABLE_TYPE, THIS]), (r3v0 'c' android.view.Window$Callback A[D('c' android.view.Window$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'featureId' int A[D('featureId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'menu' android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000e \-\> B:12:?, CROSS_EDGE: B:20:0x0002 \-\> B:17:0x000b\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x000b, blocks: (B:14:0x0002), top: B:20:0x0002 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_20;
Node_20 -> Node_14;
Node_20 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
}

