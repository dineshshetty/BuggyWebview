digraph "CFG forandroidx.appcompat.app.TwilightManager.updateState(Landroid\/location\/Location;)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|androidx.appcompat.app.TwilightManager$TwilightState r1 = r22.mTwilightState\llong r9 = java.lang.System.currentTimeMillis()\landroidx.appcompat.app.TwilightCalculator r11 = androidx.appcompat.app.TwilightCalculator.getInstance()\lr11.calculateTwilight(r9 \- 86400000, r23.getLatitude(), r23.getLongitude())\llong r14 = r11.sunset\lr11.calculateTwilight(r9, r23.getLatitude(), r23.getLongitude())\lr3 = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|if (r11.state != 1) goto L3\l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|r3 = false\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|PHI: r3 \l  PHI: (r3v3 boolean) = (r3v2 boolean), (r3v6 boolean) binds: [B:25:0x002e, B:27:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r3\llong r5 = r11.sunrise\llong r3 = r11.sunset\lr11.calculateTwilight(86400000 + r9, r23.getLatitude(), r23.getLongitude())\llong r2 = r11.sunrise\l}"];
Node_29 [shape=record,label="{29\:\ 0x0056|if ((r5 \> (\-1) ? 1 : (r5 == (\-1) ? 0 : \-1)) == 0) goto L19\l}"];
Node_30 [shape=record,label="{30\:\ 0x0058}"];
Node_31 [shape=record,label="{31\:\ 0x005a|if ((r3 \> (\-1) ? 1 : (r3 == (\-1) ? 0 : \-1)) != 0) goto L8\l}"];
Node_33 [shape=record,label="{33\:\ 0x005d}"];
Node_34 [shape=record,label="{34\:\ 0x005f|if ((r9 \> r3 ? 1 : (r9 == r3 ? 0 : \-1)) \<= 0) goto L15\l}"];
Node_35 [shape=record,label="{35\:\ 0x0061|long r4 = 0 + r2\l}"];
Node_40 [shape=record,label="{40\:\ 0x006a|PHI: r4 \l  PHI: (r4v5 'nextUpdate' long) = (r4v3 'nextUpdate' long), (r4v4 'nextUpdate' long), (r4v7 'nextUpdate' long) binds: [B:39:0x0069, B:38:0x0067, B:35:0x0061] A[DONT_GENERATE, DONT_INLINE]\l|long r4 = r4 + 60000\l}"];
Node_42 [shape=record,label="{42\:\ 0x0074|PHI: r4 \l  PHI: (r4v2 'nextUpdate' long) = (r4v1 'nextUpdate' long), (r4v6 'nextUpdate' long) binds: [B:41:0x006f, B:40:0x006a] A[DONT_GENERATE, DONT_INLINE]\l|r1.isNight = r7\lr1.yesterdaySunset = r14\lr1.todaySunrise = r5\lr1.todaySunset = r3\lr1.tomorrowSunrise = r2\lr1.nextUpdate = r4\l}"];
Node_43 [shape=record,label="{43\:\ 0x0082|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0063}"];
Node_37 [shape=record,label="{37\:\ 0x0065|if ((r9 \> r5 ? 1 : (r9 == r5 ? 0 : \-1)) \<= 0) goto L18\l}"];
Node_38 [shape=record,label="{38\:\ 0x0067|long r4 = 0 + r3\l}"];
Node_39 [shape=record,label="{39\:\ 0x0069|long r4 = 0 + r5\l}"];
Node_41 [shape=record,label="{41\:\ 0x006f|long r4 = r9 + 43200000\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.app.TwilightManager.updateState((r22v0 'this' androidx.appcompat.app.TwilightManager A[IMMUTABLE_TYPE, THIS]), (r23v0 'location' android.location.Location A[D('location' android.location.Location), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0067 \-\> B:40:0x006a, CROSS_EDGE: B:39:0x0069 \-\> B:40:0x006a, CROSS_EDGE: B:41:0x006f \-\> B:42:0x0074, CROSS_EDGE: B:29:0x0056 \-\> B:41:0x006f, CROSS_EDGE: B:25:0x002e \-\> B:28:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_41;
Node_30 -> Node_31;
Node_31 -> Node_33;
Node_31 -> Node_41[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_40;
Node_40 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_23;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_41 -> Node_42;
}

