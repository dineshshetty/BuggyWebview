digraph "CFG forandroidx.appcompat.app.TwilightManager.isNight()Z" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|androidx.appcompat.app.TwilightManager$TwilightState r0 = r5.mTwilightState\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|if (isStateValid() == false) goto L6\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008}"];
Node_24 [shape=record,label="{24\:\ 0x000a|RETURN\l|return r0.isNight\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|android.location.Location r1 = getLastKnownLocation()\l}"];
Node_26 [shape=record,label="{26\:\ 0x000f|if (r1 == null) goto L10\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|updateState(r1)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|RETURN\l|return r0.isNight\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|android.util.Log.i(androidx.appcompat.app.TwilightManager.TAG, \"Could not get last known location. This is probably because the app does not have any location permissions. Falling back to hardcoded sunrise\/sunset values.\")\ljava.util.Calendar r2 = java.util.Calendar.getInstance()\lint r3 = r2.get(11)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|if (r3 \< 6) goto L15\l}"];
Node_31 [shape=record,label="{31\:\ 0x002b}"];
Node_32 [shape=record,label="{32\:\ 0x002d|if (r3 \< 22) goto L14\l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|SYNTHETIC\lRETURN\l|return false\l}"];
Node_35 [shape=record,label="{35\:\ 0x0032|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.app.TwilightManager.isNight((r5v0 'this' androidx.appcompat.app.TwilightManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0016 \-\> B:20:?, CROSS_EDGE: B:36:0x0033 \-\> B:20:?, CROSS_EDGE: B:35:0x0032 \-\> B:36:0x0033, CROSS_EDGE: B:30:0x0029 \-\> B:35:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_20;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_34;
Node_32 -> Node_35[style=dashed];
Node_34 -> Node_20;
Node_35 -> Node_20;
}

