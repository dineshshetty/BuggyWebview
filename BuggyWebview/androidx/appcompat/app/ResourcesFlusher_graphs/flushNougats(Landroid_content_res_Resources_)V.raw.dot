digraph "CFG forandroidx.appcompat.app.ResourcesFlusher.flushNougats(Landroid\/content\/res\/Resources;)V" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.appcompat.app.ResourcesFlusher.sResourcesImplFieldFetched boolean  (LINE:114)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST_STR  (r2 I:java.lang.String) =  \"ResourcesFlusher\" \l}"];
Node_47 [shape=record,label="{47\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x001d \l}"];
Node_53 [shape=record,label="{53\:\ 0x001d|0x001d: SGET  (r0 I:java.lang.reflect.Field) =  androidx.appcompat.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field  (LINE:124)\l}"];
Node_54 [shape=record,label="{54\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0022 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0021|RETURN\l|0x0021: RETURN    (LINE:126)\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0022|0x0022: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:129)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0023|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_57 [shape=record,label="{57\:\ 0x0023|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x0029, blocks: (B:57:0x0023), top: B:85:0x0023 \}\lCatch: IllegalAccessException \-\> 0x0029\l|0x0023: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r5 I:java.lang.Object A[D('resources' android.content.res.Resources)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0029, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER, TRY_LEAVE] (LINE:131)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0027|0x0027: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('resourcesImpl' java.lang.Object)]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x002f|0x002f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resourcesImpl' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0032  (LINE:136)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0031|RETURN\l|0x0031: RETURN    (LINE:138)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0032|0x0032: SGET  (r0 I:boolean) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:141)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0034|0x0034: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x004e \l}"];
Node_70 [shape=record,label="{70\:\ 0x004e|0x004e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:151)\l0x004f: SGET  (r1 I:java.lang.reflect.Field) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field  (LINE:152)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0051|0x0051: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:76:0x005f \l}"];
Node_76 [shape=record,label="{76\:\ 0x005f|0x005f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawableCache' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:?  (LINE:160)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0061|0x0061: INVOKE  (r0 I:java.lang.Object A[D('drawableCache' java.lang.Object)]) type: STATIC call: androidx.appcompat.app.ResourcesFlusher.flushThemedResourcesCache(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:161)\l}"];
Node_78 [shape=record,label="{78\:\ 0x0064|RETURN\lORIG_RETURN\l|0x0064: RETURN    (LINE:163)\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|0x0064: RETURN   A[SYNTHETIC] (LINE:163)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0053|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_72 [shape=record,label="{72\:\ 0x0053|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0059, blocks: (B:72:0x0053), top: B:83:0x0053 \}\lCatch: IllegalAccessException \-\> 0x0059\l|0x0053: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.reflect.Field), (r3 I:java.lang.Object A[D('resourcesImpl' java.lang.Object)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0059, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER, TRY_LEAVE] (LINE:154)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0057|0x0057: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawableCache' java.lang.Object)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_74 [shape=record,label="{74\:\ 0x0059|ExcHandler: IllegalAccessException \-\> 0x0059\l|0x0059: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0059] (LINE:155)\l}"];
Node_75 [shape=record,label="{75\:\ 0x005a|0x005a: CONST_STR  (r4 I:java.lang.String) =  \"Could not retrieve value from ResourcesImpl#mDrawableCache\"  (LINE:156)\l0x005c: INVOKE  (r2 I:java.lang.String), (r4 I:java.lang.String), (r1 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_79 [shape=record,label="{79\:\ 0x0036|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_65 [shape=record,label="{65\:\ 0x0036|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchFieldException \-\> 0x0046, blocks: (B:65:0x0036), top: B:79:0x0036 \}\lCatch: NoSuchFieldException \-\> 0x0046\l|0x0036: INVOKE  (r0 I:java.lang.Class) = (r3 I:java.lang.Object A[D('resourcesImpl' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: NoSuchFieldException \-\> 0x0046, MD:():java.lang.Class\<?\> (c), TRY_ENTER] (LINE:143)\l0x003a: CONST_STR  (r4 I:java.lang.String) =  \"mDrawableCache\" \l0x003c: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0046, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x0040: SPUT  (r0 I:java.lang.reflect.Field) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0046]\l0x0042: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0046, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:144)\l}"];
Node_69 [shape=record,label="{69\:\ 0x004c|0x004c: SPUT  (r1 I:boolean) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:148)\l}"];
Node_80 [shape=record,label="{80\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_67 [shape=record,label="{67\:\ 0x0046|ExcHandler: NoSuchFieldException \-\> 0x0046\l|0x0046: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0046] (LINE:145)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0047|0x0047: CONST_STR  (r4 I:java.lang.String) =  \"Could not retrieve ResourcesImpl#mDrawableCache field\"  (LINE:146)\l0x0049: INVOKE  (r2 I:java.lang.String), (r4 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_59 [shape=record,label="{59\:\ 0x0029|ExcHandler: IllegalAccessException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0029] (LINE:132)\l}"];
Node_60 [shape=record,label="{60\:\ 0x002a|0x002a: CONST_STR  (r4 I:java.lang.String) =  \"Could not retrieve value from Resources#mResourcesImpl\"  (LINE:133)\l0x002c: INVOKE  (r2 I:java.lang.String), (r4 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_48 [shape=record,label="{48\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{NoSuchFieldException \-\> 0x0015, blocks: (B:48:0x0007), top: B:81:0x0007 \}\lCatch: NoSuchFieldException \-\> 0x0015\l|0x0007: CONST_CLASS  (r0 I:java.lang.Class\<android.content.res.Resources\>) =  android.content.res.Resources.class A[TRY_ENTER] (LINE:116)\l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"mResourcesImpl\" \l0x000b: INVOKE  (r0 I:java.lang.reflect.Field) = (r0 I:java.lang.Class), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x000f: SPUT  (r0 I:java.lang.reflect.Field) androidx.appcompat.app.ResourcesFlusher.sResourcesImplField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015]\l0x0011: INVOKE  (r0 I:java.lang.reflect.Field), (r1 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0015, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:117)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001b|0x001b: SPUT  (r1 I:boolean) androidx.appcompat.app.ResourcesFlusher.sResourcesImplFieldFetched boolean  (LINE:121)\l}"];
Node_82 [shape=record,label="{82\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_50 [shape=record,label="{50\:\ 0x0015|ExcHandler: NoSuchFieldException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0015] (LINE:118)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0016|0x0016: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve Resources#mResourcesImpl field\"  (LINE:119)\l0x0018: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
MethodNode[shape=record,label="{private static void androidx.appcompat.app.ResourcesFlusher.flushNougats((r5 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:62:0x0031 \-\> B:45:?, CROSS_EDGE: B:78:0x0064 \-\> B:45:?, CROSS_EDGE: B:76:0x005f \-\> B:78:0x0064, CROSS_EDGE: B:73:0x0057 \-\> B:76:0x005f, CROSS_EDGE: B:75:0x005a \-\> B:76:0x005f, CROSS_EDGE: B:83:0x0053 \-\> B:74:0x0059, CROSS_EDGE: B:69:0x004c \-\> B:70:0x004e, CROSS_EDGE: B:68:0x0047 \-\> B:69:0x004c, CROSS_EDGE: B:79:0x0036 \-\> B:67:0x0046, CROSS_EDGE: B:60:0x002a \-\> B:61:0x002f, CROSS_EDGE: B:85:0x0023 \-\> B:59:0x0029, CROSS_EDGE: B:52:0x001b \-\> B:53:0x001d, CROSS_EDGE: B:51:0x0016 \-\> B:52:0x001b, CROSS_EDGE: B:81:0x0007 \-\> B:50:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001b: r0 'e' Ljava\/lang\/NoSuchFieldException;\l  0x002a\-0x002f: r0 'e' Ljava\/lang\/IllegalAccessException;\l  0x0047\-0x004c: r0 'e' Ljava\/lang\/NoSuchFieldException;\l  0x005a\-0x005f: r1 'e' Ljava\/lang\/IllegalAccessException;\l  0x004f\-0x0064: r0 'drawableCache' Ljava\/lang\/Object;\l  0x0023\-0x0064: r3 'resourcesImpl' Ljava\/lang\/Object;\l  \-1 \-0x0064: r5 'resources' Landroid\/content\/res\/Resources;\lTryCatch #0 \{NoSuchFieldException \-\> 0x0046, blocks: (B:65:0x0036), top: B:79:0x0036 \}, TryCatch #1 \{NoSuchFieldException \-\> 0x0015, blocks: (B:48:0x0007), top: B:81:0x0007 \}, TryCatch #2 \{IllegalAccessException \-\> 0x0059, blocks: (B:72:0x0053), top: B:83:0x0053 \}, TryCatch #3 \{IllegalAccessException \-\> 0x0029, blocks: (B:57:0x0023), top: B:85:0x0023 \}\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_53;
Node_47 -> Node_81[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_45;
Node_56 -> Node_85;
Node_85 -> Node_57;
Node_85 -> Node_59;
Node_57 -> Node_58;
Node_57 -> Node_86;
Node_58 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_45;
Node_63 -> Node_64;
Node_64 -> Node_70;
Node_64 -> Node_79[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_76;
Node_71 -> Node_83[style=dashed];
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_87;
Node_77 -> Node_78;
Node_78 -> Node_45;
Node_87 -> Node_45;
Node_83 -> Node_72;
Node_83 -> Node_74;
Node_72 -> Node_73;
Node_72 -> Node_84;
Node_73 -> Node_76;
Node_84 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76;
Node_79 -> Node_65;
Node_79 -> Node_67;
Node_65 -> Node_69;
Node_65 -> Node_80;
Node_69 -> Node_70;
Node_80 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69;
Node_86 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_81 -> Node_48;
Node_81 -> Node_50;
Node_48 -> Node_52;
Node_48 -> Node_82;
Node_52 -> Node_53;
Node_82 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
}

