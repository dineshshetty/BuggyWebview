digraph "CFG forandroidx.appcompat.app.ResourcesFlusher.flush(Landroid\/content\/res\/Resources;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:47)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:23:0x0007 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:49)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:50)\l0x0009: CONST  (r1 I:??[int, float, short, byte, char]) = (24 ??[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:26:0x0011 \l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: INVOKE  (r2 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]) type: STATIC call: androidx.appcompat.app.ResourcesFlusher.flushNougats(android.content.res.Resources):void A[MD:(android.content.res.Resources):void (m)] (LINE:51)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:57)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:52)\l0x0013: CONST  (r1 I:??[int, float, short, byte, char]) = (23 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|0x0015: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:29:0x001b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: INVOKE  (r2 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]) type: STATIC call: androidx.appcompat.app.ResourcesFlusher.flushMarshmallows(android.content.res.Resources):void A[MD:(android.content.res.Resources):void (m)] (LINE:53)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:57)\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|0x001b: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:54)\l0x001d: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|0x001f: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:35:? \l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|0x0021: INVOKE  (r2 I:android.content.res.Resources A[D('resources' android.content.res.Resources)]) type: STATIC call: androidx.appcompat.app.ResourcesFlusher.flushLollipops(android.content.res.Resources):void A[MD:(android.content.res.Resources):void (m)] (LINE:55)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:57)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:57)\l}"];
MethodNode[shape=record,label="{public static void androidx.appcompat.app.ResourcesFlusher.flush((r2 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x0024 \-\> B:19:?, CROSS_EDGE: B:28:0x0017 \-\> B:32:0x0024, CROSS_EDGE: B:31:0x0021 \-\> B:32:0x0024, CROSS_EDGE: B:30:0x001f \-\> B:32:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0024: r2 'resources' Landroid\/content\/res\/Resources;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_33;
Node_33 -> Node_19;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_34;
Node_34 -> Node_19;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_32 -> Node_19;
Node_35 -> Node_19;
}

