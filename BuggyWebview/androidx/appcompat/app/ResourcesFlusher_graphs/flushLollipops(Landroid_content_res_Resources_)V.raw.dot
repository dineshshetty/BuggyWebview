digraph "CFG forandroidx.appcompat.app.ResourcesFlusher.flushLollipops(Landroid\/content\/res\/Resources;)V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:61)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesFlusher\" \l}"];
Node_29 [shape=record,label="{29\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001d \l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:63)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchFieldException \-\> 0x0015, blocks: (B:31:0x0007), top: B:46:0x0007 \}\lCatch: NoSuchFieldException \-\> 0x0015\l|0x0007: CONST_CLASS  (r2 I:java.lang.Class\<android.content.res.Resources\>) =  android.content.res.Resources.class A[TRY_ENTER]\l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"mDrawableCache\" \l0x000b: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x000f: SPUT  (r2 I:java.lang.reflect.Field) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015]\l0x0011: INVOKE  (r2 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0015, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:64)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|0x001b: SPUT  (r0 I:boolean) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:68)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|ExcHandler: NoSuchFieldException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r2 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0015] (LINE:65)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0016|0x0016: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve Resources#mDrawableCache field\"  (LINE:66)\l0x0018: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x001d|0x001d: SGET  (r0 I:java.lang.reflect.Field) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field  (LINE:70)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:? \l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|0x0021: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:71)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_39 [shape=record,label="{39\:\ 0x0022|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{IllegalAccessException \-\> 0x002a, blocks: (B:39:0x0022), top: B:48:0x0022 \}\lCatch: IllegalAccessException \-\> 0x002a\l|0x0022: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Field), (r4 I:java.lang.Object A[D('resources' android.content.res.Resources)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x002a, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER] (LINE:73)\l0x0026: CHECK_CAST (r0 I:java.util.Map) = (java.util.Map) (r0 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x002a, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|0x0028: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('drawableCache' java.util.Map)]) = (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0030|0x0030: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawableCache' java.util.Map)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:?  (LINE:77)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0032|0x0032: INVOKE  (r2 I:java.util.Map A[D('drawableCache' java.util.Map)]) type: INTERFACE call: java.util.Map.clear():void A[MD:():void (c)] (LINE:78)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0035|RETURN\lORIG_RETURN\l|0x0035: RETURN    (LINE:81)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:81)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x002a|ExcHandler: IllegalAccessException \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x002a] (LINE:74)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002b|0x002b: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve value from Resources#mDrawableCache\"  (LINE:75)\l0x002d: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:81)\l}"];
MethodNode[shape=record,label="{private static void androidx.appcompat.app.ResourcesFlusher.flushLollipops((r4 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0030 \-\> B:45:0x0035, CROSS_EDGE: B:42:0x002b \-\> B:43:0x0030, CROSS_EDGE: B:48:0x0022 \-\> B:41:0x002a, CROSS_EDGE: B:37:0x001f \-\> B:45:0x0035, CROSS_EDGE: B:34:0x0016 \-\> B:35:0x001b, CROSS_EDGE: B:46:0x0007 \-\> B:33:0x0015, CROSS_EDGE: B:29:0x0004 \-\> B:36:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001b: r2 'e' Ljava\/lang\/NoSuchFieldException;\l  0x002b\-0x0030: r0 'e' Ljava\/lang\/IllegalAccessException;\l  0x0022\-0x0035: r2 'drawableCache' Ljava\/util\/Map;\l  \-1 \-0x0035: r4 'resources' Landroid\/content\/res\/Resources;\lTryCatch #0 \{NoSuchFieldException \-\> 0x0015, blocks: (B:31:0x0007), top: B:46:0x0007 \}, TryCatch #1 \{IllegalAccessException \-\> 0x002a, blocks: (B:39:0x0022), top: B:48:0x0022 \}\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_46;
Node_46 -> Node_31;
Node_46 -> Node_33;
Node_31 -> Node_35;
Node_31 -> Node_47;
Node_35 -> Node_36;
Node_47 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_50;
Node_38 -> Node_48;
Node_48 -> Node_39;
Node_48 -> Node_41;
Node_39 -> Node_40;
Node_39 -> Node_49;
Node_40 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_51;
Node_44 -> Node_45;
Node_45 -> Node_27;
Node_51 -> Node_27;
Node_49 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_50 -> Node_27;
}

