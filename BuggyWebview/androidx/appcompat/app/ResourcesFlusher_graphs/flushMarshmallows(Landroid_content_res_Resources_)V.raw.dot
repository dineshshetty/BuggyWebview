digraph "CFG forandroidx.appcompat.app.ResourcesFlusher.flushMarshmallows(Landroid\/content\/res\/Resources;)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:85)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"ResourcesFlusher\" \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x001d \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:87)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0007|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{NoSuchFieldException \-\> 0x0015, blocks: (B:29:0x0007), top: B:46:0x0007 \}\lCatch: NoSuchFieldException \-\> 0x0015\l|0x0007: CONST_CLASS  (r2 I:java.lang.Class\<android.content.res.Resources\>) =  android.content.res.Resources.class A[TRY_ENTER]\l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"mDrawableCache\" \l0x000b: INVOKE  (r2 I:java.lang.reflect.Field) = (r2 I:java.lang.Class), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x000f: SPUT  (r2 I:java.lang.reflect.Field) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0015]\l0x0011: INVOKE  (r2 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0015, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:88)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001b|0x001b: SPUT  (r0 I:boolean) androidx.appcompat.app.ResourcesFlusher.sDrawableCacheFieldFetched boolean  (LINE:92)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ 0x0015|ExcHandler: NoSuchFieldException \-\> 0x0015\l|0x0015: MOVE_EXCEPTION  (r2 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0015] (LINE:89)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0016|0x0016: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve Resources#mDrawableCache field\"  (LINE:90)\l0x0018: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.NoSuchFieldException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|0x001d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:95)\l0x001e: SGET  (r2 I:java.lang.reflect.Field) =  androidx.appcompat.app.ResourcesFlusher.sDrawableCacheField java.lang.reflect.Field  (LINE:96)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0020|0x0020: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x002e \l}"];
Node_40 [shape=record,label="{40\:\ 0x002e|0x002e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawableCache' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0031  (LINE:104)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0030|RETURN\l|0x0030: RETURN    (LINE:106)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|0x0031: INVOKE  (r0 I:java.lang.Object A[D('drawableCache' java.lang.Object)]) type: STATIC call: androidx.appcompat.app.ResourcesFlusher.flushThemedResourcesCache(java.lang.Object):void A[MD:(java.lang.Object):void (m)] (LINE:109)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:110)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0022|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x0028, blocks: (B:36:0x0022), top: B:44:0x0022 \}\lCatch: IllegalAccessException \-\> 0x0028\l|0x0022: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.lang.reflect.Field), (r4 I:java.lang.Object A[D('resources' android.content.res.Resources)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0028, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER, TRY_LEAVE] (LINE:98)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0026|0x0026: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawableCache' java.lang.Object)]) = (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|ExcHandler: IllegalAccessException \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r2 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0028] (LINE:99)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0029|0x0029: CONST_STR  (r3 I:java.lang.String) =  \"Could not retrieve value from Resources#mDrawableCache\"  (LINE:100)\l0x002b: INVOKE  (r1 I:java.lang.String), (r3 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)]\l}"];
MethodNode[shape=record,label="{private static void androidx.appcompat.app.ResourcesFlusher.flushMarshmallows((r4 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0034 \-\> B:25:?, CROSS_EDGE: B:37:0x0026 \-\> B:40:0x002e, CROSS_EDGE: B:39:0x0029 \-\> B:40:0x002e, CROSS_EDGE: B:44:0x0022 \-\> B:38:0x0028, CROSS_EDGE: B:32:0x0016 \-\> B:33:0x001b, CROSS_EDGE: B:46:0x0007 \-\> B:31:0x0015, CROSS_EDGE: B:27:0x0004 \-\> B:34:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x001b: r2 'e' Ljava\/lang\/NoSuchFieldException;\l  0x0029\-0x002e: r2 'e' Ljava\/lang\/IllegalAccessException;\l  0x001e\-0x0034: r0 'drawableCache' Ljava\/lang\/Object;\l  \-1 \-0x0034: r4 'resources' Landroid\/content\/res\/Resources;\lTryCatch #0 \{IllegalAccessException \-\> 0x0028, blocks: (B:36:0x0022), top: B:44:0x0022 \}, TryCatch #1 \{NoSuchFieldException \-\> 0x0015, blocks: (B:29:0x0007), top: B:46:0x0007 \}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_31;
Node_29 -> Node_33;
Node_29 -> Node_47;
Node_33 -> Node_34;
Node_47 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_40;
Node_35 -> Node_44[style=dashed];
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_25;
Node_42 -> Node_43;
Node_43 -> Node_25;
Node_44 -> Node_36;
Node_44 -> Node_38;
Node_36 -> Node_37;
Node_36 -> Node_45;
Node_37 -> Node_40;
Node_45 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40;
}

