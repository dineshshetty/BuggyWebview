digraph "CFG forandroidx.appcompat.app.TwilightCalculator.calculateTwilight(JDD)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r29 I:??[OBJECT, ARRAY])  (LINE:89)\l0x0002: CONST  (r1 I:??[long, double]) = (946728000000(0xdc6d62da00, double:4.67745780756E\-312) ??[long, double]) \l0x0007: ARITH  (r3 I:long) = (r30 I:long A[D('time' long)]) \- (r1 I:long) \l0x0009: CAST (r3 I:float) = (float) (r3 I:long) \l0x000a: CONST  (r4 I:??[int, float, short, byte, char]) = (1285868416(0x4ca4cb80, float:8.64E7) ??[int, float, short, byte, char]) \l0x000d: ARITH  (r3 I:float) = (r3 I:float) \/ (r4 I:float) \l0x000e: CONST  (r4 I:??[int, float, short, byte, char]) = (1015868197(0x3c8ceb25, float:0.01720197) ??[int, float, short, byte, char])  (LINE:92)\l0x0011: ARITH  (r4 I:float) = (r4 I:float) * (r3 I:float A[D('daysSince2000' float)]) \l0x0013: CONST  (r5 I:??[int, float, short, byte, char]) = (1086828178(0x40c7ae92, float:6.24006) ??[int, float, short, byte, char]) \l0x0016: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x0017: CAST (r5 I:double) = (double) (r4 I:float A[D('meanAnomaly' float)])  (LINE:95)\l0x0018: CAST (r7 I:double) = (double) (r4 I:float A[D('meanAnomaly' float)]) \l0x0019: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x001d: CONST  (r9 I:??[long, double]) = (4584977093208571904(0x3fa11c5fc0000000, double:0.03341960161924362) ??[long, double]) \l0x0022: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0024: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x0025: CONST  (r7 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0027: ARITH  (r7 I:float) = (r7 I:float) * (r4 I:float A[D('meanAnomaly' float)]) \l0x0029: CAST (r7 I:double) = (double) (r7 I:float) \l0x002a: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)] (LINE:96)\l0x002e: CONST  (r9 I:??[long, double]) = (4555074754578481152(0x3f36e05b00000000, double:3.4906598739326E\-4) ??[long, double]) \l0x0033: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0035: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x0036: CONST  (r7 I:??[int, float, short, byte, char]) = (1077936128(0x40400000, float:3.0) ??[int, float, short, byte, char]) \l0x0038: ARITH  (r7 I:float) = (r7 I:float) * (r4 I:float A[D('meanAnomaly' float)]) \l0x003a: CAST (r7 I:double) = (double) (r7 I:float) \l0x003b: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x003f: CONST  (r9 I:??[long, double]) = (4527795603731644416(0x3ed5f61cc0000000, double:5.236000106378924E\-6) ??[long, double]) \l0x0044: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0046: ARITH  (r5 I:double) = (r5 I:double) + (r7 I:double) \l0x0047: CONST  (r7 I:??[long, double]) = (4610769955021710130(0x3ffcbed85e1ce332, double:1.796593063) ??[long, double])  (LINE:99)\l0x004c: ARITH  (r7 I:double) = (r7 I:double) + (r5 I:double A[D('trueAnomaly' double)]) \l0x004d: CONST  (r9 I:??[long, double]) = (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ??[long, double]) \l0x0052: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x0053: MOVE  (r9 I:??[long, double]) = (r34 I:??[long, double] A[D('longitude' double)])  (LINE:102)\l0x0055: NEG  (r11 I:double) = (r9 I:double) \l0x0056: CONST  (r13 I:??[long, double]) = (4645040803167600640(0x4076800000000000, double:360.0) ??[long, double]) \l0x005b: ARITH  (r11 I:double) = (r11 I:double) \/ (r13 I:double) \l0x005c: CONST  (r13 I:??[int, float, short, byte, char]) = (980151802(0x3a6bedfa, float:9.0E\-4) ??[int, float, short, byte, char])  (LINE:103)\l0x005f: ARITH  (r14 I:float) = (r3 I:float A[D('daysSince2000' float)]) \- (r13 I:float) \l0x0061: CAST (r14 I:double) = (double) (r14 I:float) \l0x0062: ARITH  (r14 I:double) = (r14 I:double) \- (r11 I:double A[D('arcLongitude' double)]) \l0x0063: INVOKE  (r14 I:long) = (r14 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x0067: CAST (r14 I:float) = (float) (r14 I:long) \l0x0068: ARITH  (r13 I:float) = (r13 I:float) + (r14 I:float A[D('n' float)])  (LINE:104)\l0x0069: CAST (r1 I:double) = (double) (r13 I:float) \l0x006a: ARITH  (r1 I:double) = (r1 I:double) + (r11 I:double A[D('arcLongitude' double)]) \l0x006b: MOVE  (r17 I:??[long, double]) = (r5 I:??[long, double] A[D('trueAnomaly' double)]) \l0x006d: CAST (r5 I:double A[D('trueAnomaly' double)]) = (double) (r4 I:float A[D('meanAnomaly' float)]) \l0x006e: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0072: CONST  (r19 I:??[long, double]) = (4572760506128099233(0x3f75b573eab367a1, double:0.0053) ??[long, double]) \l0x0077: ARITH  (r5 I:double) = (r5 I:double) * (r19 I:double) \l0x0079: ARITH  (r1 I:double) = (r1 I:double) + (r5 I:double) \l0x007a: CONST  (r5 I:??[long, double]) = (4611686018427387904(0x4000000000000000, double:2.0) ??[long, double]) \l0x007c: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double A[D('solarLng' double)]) \l0x007e: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)] (LINE:105)\l0x0082: CONST  (r19 I:??[long, double]) = (\-4648766856319305620(0xbf7c432ca57a786c, double:\-0.0069) ??[long, double]) \l0x0087: ARITH  (r5 I:double) = (r5 I:double) * (r19 I:double) \l0x0089: ARITH  (r1 I:double) = (r1 I:double) + (r5 I:double) \l0x008a: INVOKE  (r5 I:double) = (r7 I:double A[D('solarLng' double)]) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)] (LINE:108)\l0x008e: CONST  (r19 I:??[long, double]) = (4601044547609296896(0x3fda31a380000000, double:0.4092797040939331) ??[long, double]) \l0x0093: INVOKE  (r19 I:double) = (r19 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0097: ARITH  (r5 I:double) = (r5 I:double) * (r19 I:double) \l0x0099: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.asin(double):double A[MD:(double):double (c)]\l0x009d: CONST  (r19 I:??[long, double]) = (4580687790437564416(0x3f91df46a0000000, double:0.01745329238474369) ??[long, double])  (LINE:110)\l0x00a2: ARITH  (r19 I:double) = (r19 I:double) * (r32 I:double A[D('latitude' double)]) \l0x00a4: CONST  (r21 I:??[long, double]) = (\-4631161762379464704(0xbfbaceea00000000, double:\-0.10471975803375244) ??[long, double])  (LINE:112)\l0x00a9: INVOKE  (r21 I:double) = (r21 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x00ad: INVOKE  (r23 I:double) = (r19 I:double A[D('latRad' double)]) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x00b1: INVOKE  (r25 I:double) = (r5 I:double A[D('solarDec' double)]) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)] (LINE:113)\l0x00b5: ARITH  (r23 I:double) = (r23 I:double) * (r25 I:double) \l0x00b7: ARITH  (r21 I:double) = (r21 I:double) \- (r23 I:double) \l0x00b9: INVOKE  (r23 I:double) = (r19 I:double A[D('latRad' double)]) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x00bd: INVOKE  (r25 I:double) = (r5 I:double A[D('solarDec' double)]) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x00c1: ARITH  (r23 I:double) = (r23 I:double) * (r25 I:double) \l0x00c3: ARITH  (r21 I:double) = (r21 I:double) \/ (r23 I:double) \l0x00c5: MOVE  (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('n' float)])  (LINE:116)\l0x00c7: CONST  (r13 I:??[long, double]) = (\-1 ??[long, double]) \l0x00c9: CONST  (r25 I:??[long, double]) = (4607182418800017408(0x3ff0000000000000, double:1.0) ??[long, double]) \l0x00cb: CMP_L  (r27 I:int) = (r21 I:double A[D('cosHourAngle' double)]), (r25 I:double) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00cd|0x00cd: IF  (r27 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:24:0x00d7 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00cf|0x00cf: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:117)\l0x00d0: IPUT  (r15 I:int), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.state int \l0x00d2: IPUT  (r13 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunset long  (LINE:118)\l0x00d4: IPUT  (r13 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunrise long  (LINE:119)\l}"];
Node_23 [shape=record,label="{23\:\ 0x00d6|RETURN\l|0x00d6: RETURN    (LINE:120)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d7|0x00d7: CONST  (r25 I:??[long, double]) = (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ??[long, double])  (LINE:121)\l0x00d9: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00da: CMP_G  (r16 I:int) = (r21 I:double A[D('cosHourAngle' double)]), (r25 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00dc|0x00dc: IF  (r16 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:28:0x00e5 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00de|0x00de: IPUT  (r15 I:int), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.state int  (LINE:122)\l0x00e0: IPUT  (r13 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunset long  (LINE:123)\l0x00e2: IPUT  (r13 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunrise long  (LINE:124)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00e4|RETURN\l|0x00e4: RETURN    (LINE:125)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00e5|0x00e5: INVOKE  (r13 I:double) = (r21 I:double A[D('cosHourAngle' double)]) type: STATIC call: java.lang.Math.acos(double):double A[MD:(double):double (c)] (LINE:128)\l0x00e9: CONST  (r25 I:??[long, double]) = (4618760256179416344(0x401921fb54442d18, double:6.283185307179586) ??[long, double]) \l0x00ee: ARITH  (r13 I:double) = (r13 I:double) \/ (r25 I:double) \l0x00f0: CAST (r13 I:float) = (float) (r13 I:double) \l0x00f1: MOVE  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('daysSince2000' float)])  (LINE:130)\l0x00f2: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('meanAnomaly' float)]) \l0x00f4: CAST (r3 I:double A[D('daysSince2000' float)]) = (double) (r13 I:float A[D('hourAngle' float)]) \l0x00f5: ARITH  (r3 I:double) = (r3 I:double) + (r1 I:double A[D('solarTransitJ2000' double)]) \l0x00f6: CONST  (r25 I:??[long, double]) = (4725570615333879808(0x4194997000000000, double:8.64E7) ??[long, double]) \l0x00fb: ARITH  (r3 I:double) = (r3 I:double) * (r25 I:double) \l0x00fd: INVOKE  (r3 I:long) = (r3 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x0101: CONST  (r27 I:??[long, double]) = (946728000000(0xdc6d62da00, double:4.67745780756E\-312) ??[long, double]) \l0x0106: ARITH  (r3 I:long) = (r3 I:long) + (r27 I:long) \l0x0108: IPUT  (r3 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunset long \l0x010a: CAST (r3 I:double) = (double) (r13 I:float A[D('hourAngle' float)])  (LINE:131)\l0x010b: ARITH  (r3 I:double) = (r1 I:double A[D('solarTransitJ2000' double)]) \- (r3 I:double) \l0x010d: ARITH  (r3 I:double) = (r3 I:double) * (r25 I:double) \l0x010f: INVOKE  (r3 I:long) = (r3 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x0113: ARITH  (r3 I:long) = (r3 I:long) + (r27 I:long) \l0x0115: IPUT  (r3 I:long), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunrise long \l0x0117: CMP_L  (r25 I:int) = (r3 I:long), (r30 I:long A[D('time' long)])  (LINE:133)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0119|0x0119: IF  (r25 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:33:0x0124 \l}"];
Node_30 [shape=record,label="{30\:\ 0x011b|0x011b: IGET  (r3 I:long) = (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.sunset long \l0x011d: CMP_L  (r25 I:int) = (r3 I:long), (r30 I:long A[D('time' long)]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x011f|0x011f: IF  (r25 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:33:0x0124 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0121|0x0121: IPUT  (r15 I:int), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.state int  (LINE:134)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0127: RETURN   A[SYNTHETIC] (LINE:138)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0124|0x0124: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:136)\l0x0125: IPUT  (r3 I:int), (r0 I:androidx.appcompat.app.TwilightCalculator) androidx.appcompat.app.TwilightCalculator.state int \l}"];
Node_34 [shape=record,label="{34\:\ 0x0127|RETURN\lORIG_RETURN\l|0x0127: RETURN    (LINE:138)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.TwilightCalculator.calculateTwilight((r29 'this' I:androidx.appcompat.app.TwilightCalculator A[IMMUTABLE_TYPE, THIS]), (r30 I:long A[D('time' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:double A[D('latitude' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:double A[D('longitude' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x00e4 \-\> B:19:?, CROSS_EDGE: B:34:0x0127 \-\> B:19:?, CROSS_EDGE: B:33:0x0124 \-\> B:34:0x0127, CROSS_EDGE: B:29:0x0119 \-\> B:33:0x0124\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0047\-0x006d: r5 'trueAnomaly' D\l  0x0068\-0x00c7: r14 'n' F\l  0x000e\-0x00f4: r3 'daysSince2000' F\l  0x0017\-0x00f4: r4 'meanAnomaly' F\l  0x008a\-0x0127: r1 'solarTransitJ2000' D\l  0x009d\-0x0127: r5 'solarDec' D\l  0x0053\-0x0127: r7 'solarLng' D\l  0x005c\-0x0127: r11 'arcLongitude' D\l  0x00f1\-0x0127: r13 'hourAngle' F\l  0x00f4\-0x0127: r14 'daysSince2000' F\l  0x00f4\-0x0127: r16 'meanAnomaly' F\l  0x006d\-0x0127: r17 'trueAnomaly' D\l  0x00a4\-0x0127: r19 'latRad' D\l  0x00c5\-0x0127: r21 'cosHourAngle' D\l  0x00c7\-0x0127: r23 'n' F\l  \-1 \-0x0127: r30 'time' J\l  \-1 \-0x0127: r32 'latitude' D\l  \-1 \-0x0127: r34 'longitude' D\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_35;
Node_35 -> Node_19;
Node_33 -> Node_34;
Node_34 -> Node_19;
}

