digraph "CFG forandroidx.appcompat.app.TwilightCalculator.calculateTwilight(JDD)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|float r3 = ((float) (r30 \- androidx.appcompat.app.TwilightCalculator.UTC_2000)) \/ 8.64E7f\lfloat r4 = (0.01720197f * r3) + 6.24006f\ldouble r5 = ((((double) r4) + (java.lang.Math.sin((double) r4) * 0.03341960161924362d)) + (java.lang.Math.sin((double) (2.0f * r4)) * 3.4906598739326E\-4d)) + (java.lang.Math.sin((double) (3.0f * r4)) * 5.236000106378924E\-6d)\ldouble r7 = (1.796593063d + r5) + 3.141592653589793d\ldouble r11 = (\-r34) \/ 360.0d\lfloat r14 = (float) java.lang.Math.round(((double) (r3 \- androidx.appcompat.app.TwilightCalculator.f11J0)) \- r11)\ldouble r5 = (double) r4\ldouble r1 = ((((double) (androidx.appcompat.app.TwilightCalculator.f11J0 + r14)) + r11) + (java.lang.Math.sin(r5) * 0.0053d)) + (java.lang.Math.sin(2.0d * r7) * (\-0.0069d))\ldouble r5 = java.lang.Math.asin(java.lang.Math.sin(r7) * java.lang.Math.sin(0.4092797040939331d))\ldouble r19 = 0.01745329238474369d * r32\ldouble r21 = (java.lang.Math.sin(\-0.10471975803375244d) \- (java.lang.Math.sin(r19) * java.lang.Math.sin(r5))) \/ (java.lang.Math.cos(r19) * java.lang.Math.cos(r5))\l}"];
Node_21 [shape=record,label="{21\:\ 0x00cd|if ((r21 \> 1.0d ? 1 : (r21 == 1.0d ? 0 : \-1)) \< 0) goto L6\l}"];
Node_22 [shape=record,label="{22\:\ 0x00cf|r29.state = 1\lr29.sunset = \-1\lr29.sunrise = \-1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00d6|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x00d7}"];
Node_25 [shape=record,label="{25\:\ 0x00dc|if ((r21 \> (\-1.0d) ? 1 : (r21 == (\-1.0d) ? 0 : \-1)) \> 0) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x00de|r29.state = 0\lr29.sunset = \-1\lr29.sunrise = \-1\l}"];
Node_27 [shape=record,label="{27\:\ 0x00e4|RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ 0x00e5|float r13 = (float) (java.lang.Math.acos(r21) \/ 6.283185307179586d)\lr29.sunset = java.lang.Math.round((((double) r13) + r1) * 8.64E7d) + androidx.appcompat.app.TwilightCalculator.UTC_2000\llong r3 = java.lang.Math.round((r1 \- ((double) r13)) * 8.64E7d) + androidx.appcompat.app.TwilightCalculator.UTC_2000\lr29.sunrise = r3\l}"];
Node_29 [shape=record,label="{29\:\ 0x0119|if ((r3 \> r30 ? 1 : (r3 == r30 ? 0 : \-1)) \>= 0) goto L16\l}"];
Node_30 [shape=record,label="{30\:\ 0x011b}"];
Node_31 [shape=record,label="{31\:\ 0x011f|if ((r29.sunset \> r30 ? 1 : (r29.sunset == r30 ? 0 : \-1)) \<= 0) goto L16\l}"];
Node_32 [shape=record,label="{32\:\ 0x0121|r29.state = 0\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ 0x0124|r29.state = 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x0127|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.app.TwilightCalculator.calculateTwilight((r29v0 'this' androidx.appcompat.app.TwilightCalculator A[IMMUTABLE_TYPE, THIS]), (r30v0 'time' long A[D('time' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'latitude' double A[D('latitude' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'longitude' double A[D('longitude' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x00e4 \-\> B:19:?, CROSS_EDGE: B:34:0x0127 \-\> B:19:?, CROSS_EDGE: B:33:0x0124 \-\> B:34:0x0127, CROSS_EDGE: B:29:0x0119 \-\> B:33:0x0124\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_19;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_35;
Node_35 -> Node_19;
Node_33 -> Node_34;
Node_34 -> Node_19;
}

