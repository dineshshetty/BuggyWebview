digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getChild(I)Landroid\/graphics\/drawable\/Drawable;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|r0 = r6.mDrawables[r7]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if (r0 == null) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|return r0\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\> r1 = r6.mDrawableFutures\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|if (r1 == null) goto L13\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|int r1 = r1.indexOfKey(r7)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|if (r1 \< 0) goto L13\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|android.graphics.drawable.Drawable$ConstantState r3 = r6.mDrawableFutures.valueAt(r1)\landroid.graphics.drawable.Drawable r4 = prepareDrawable(r3.newDrawable(r6.mSourceRes))\lr6.mDrawables[r7] = r4\lr6.mDrawableFutures.removeAt(r1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0033|if (r6.mDrawableFutures.size() != 0) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|r6.mDrawableFutures = null\l}"];
Node_26 [shape=record,label="{26\:\ 0x0037|RETURN\l|return r4\l}"];
Node_27 [shape=record,label="{27\:\ 0x0038|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public final android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getChild((r6v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]), (r7v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0037 \-\> B:15:?, CROSS_EDGE: B:24:0x0033 \-\> B:26:0x0037, CROSS_EDGE: B:27:0x0038 \-\> B:15:?, CROSS_EDGE: B:20:0x000a \-\> B:27:0x0038\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

