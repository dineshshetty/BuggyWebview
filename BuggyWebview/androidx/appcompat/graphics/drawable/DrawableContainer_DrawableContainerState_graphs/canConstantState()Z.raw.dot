digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.canConstantState()Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedConstantState boolean  (LINE:1143)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0007 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: IGET  (r0 I:boolean) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCanConstantState boolean  (LINE:1144)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: INVOKE  (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.createAllFutures():void A[MD:():void (m)] (LINE:1146)\l0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1147)\l0x000b: IPUT  (r0 I:boolean), (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedConstantState boolean \l0x000d: IGET  (r1 I:int) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mNumChildren int  (LINE:1148)\l0x000f: IGET  (r2 I:android.graphics.drawable.Drawable[]) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[]  (LINE:1149)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1150)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|LOOP_START\lLOOP:0: B:24:0x0012\-\>B:29:0x0020\l|0x0012: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:32:0x0023 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|0x0014: AGET  (r4 I:??[OBJECT, ARRAY]) = \l  (r2 I:??[OBJECT, ARRAY][] A[D('drawables' android.graphics.drawable.Drawable[])])\l  (r3 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:1151)\l0x0016: INVOKE  (r4 I:android.graphics.drawable.Drawable$ConstantState) = (r4 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getConstantState():android.graphics.drawable.Drawable$ConstantState A[MD:():android.graphics.drawable.Drawable$ConstantState (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0020 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|LOOP_END\lLOOP:0: B:24:0x0012\-\>B:29:0x0020\l|0x0020: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:1150)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|0x001c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1152)\l0x001d: IPUT  (r0 I:boolean), (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCanConstantState boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:boolean)  (LINE:1153)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|0x0023: IPUT  (r0 I:boolean), (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCanConstantState boolean  (LINE:1156)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:boolean)  (LINE:1157)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.canConstantState((r5 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001f \-\> B:18:?, BACK_EDGE: B:29:0x0020 \-\> B:24:0x0012, CROSS_EDGE: B:31:0x0025 \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0023: r3 'i' I\l  0x000f\-0x0025: r1 'count' I\l  0x0011\-0x0025: r2 'drawables' [Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_26;
Node_26 -> Node_29;
Node_26 -> Node_33[style=dashed];
Node_29 -> Node_24;
Node_33 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_32 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_18;
}

