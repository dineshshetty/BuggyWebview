digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding()Landroid\/graphics\/Rect;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mVariablePadding boolean  (LINE:975)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0006 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0004|RETURN\l|0x0004: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:976)\l0x0005: RETURN  (r0 I:android.graphics.Rect) \l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0006|0x0006: IGET  (r0 I:android.graphics.Rect) = (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mConstantPadding android.graphics.Rect  (LINE:978)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0061 \l}"];
Node_45 [shape=record,label="{45\:\ 0x000a|0x000a: IGET  (r1 I:boolean) = (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedPadding boolean \l}"];
Node_46 [shape=record,label="{46\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x000f \l}"];
Node_48 [shape=record,label="{48\:\ 0x000f|0x000f: INVOKE  (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.createAllFutures():void A[MD:():void (m)] (LINE:981)\l0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:982)\l0x0013: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:983)\l0x0015: INVOKE  (r1 I:android.graphics.Rect) type: DIRECT call: android.graphics.Rect.\<init\>():void A[MD:():void (c)]\l0x0018: IGET  (r2 I:int) = (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mNumChildren int  (LINE:984)\l0x001a: IGET  (r3 I:android.graphics.drawable.Drawable[]) = (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[]  (LINE:985)\l0x001c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:986)\l}"];
Node_49 [shape=record,label="{49\:\ 0x001d|LOOP_START\lLOOP:0: B:49:0x001d\-\>B:66:0x0058\l|0x001d: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:70:0x005b \l}"];
Node_50 [shape=record,label="{50\:\ 0x001f|0x001f: AGET  (r5 I:??[OBJECT, ARRAY]) = \l  (r3 I:??[OBJECT, ARRAY][] A[D('drawables' android.graphics.drawable.Drawable[])])\l  (r4 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:987)\l0x0021: INVOKE  (r5 I:boolean) = (r5 I:android.graphics.drawable.Drawable), (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0025|0x0025: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0058 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0027|0x0027: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('r' android.graphics.Rect)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0030  (LINE:988)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0029|0x0029: NEW_INSTANCE  (r5 I:android.graphics.Rect) =  android.graphics.Rect \l0x002b: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002c: INVOKE  (r5 I:android.graphics.Rect), (r6 I:int), (r6 I:int), (r6 I:int), (r6 I:int) type: DIRECT call: android.graphics.Rect.\<init\>(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x002f: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('r' android.graphics.Rect)]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0030|0x0030: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:989)\l0x0032: IGET  (r6 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.left int \l}"];
Node_55 [shape=record,label="{55\:\ 0x0034|0x0034: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:57:0x003a \l}"];
Node_56 [shape=record,label="{56\:\ 0x0036|0x0036: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0038: IPUT  (r5 I:int), (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.left int \l}"];
Node_57 [shape=record,label="{57\:\ 0x003a|0x003a: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.top int  (LINE:990)\l0x003c: IGET  (r6 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.top int \l}"];
Node_58 [shape=record,label="{58\:\ 0x003e|0x003e: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:60:0x0044 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0040|0x0040: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.top int \l0x0042: IPUT  (r5 I:int), (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.top int \l}"];
Node_60 [shape=record,label="{60\:\ 0x0044|0x0044: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:991)\l0x0046: IGET  (r6 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.right int \l}"];
Node_61 [shape=record,label="{61\:\ 0x0048|0x0048: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:63:0x004e \l}"];
Node_62 [shape=record,label="{62\:\ 0x004a|0x004a: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.right int \l0x004c: IPUT  (r5 I:int), (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.right int \l}"];
Node_63 [shape=record,label="{63\:\ 0x004e|0x004e: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.bottom int  (LINE:992)\l0x0050: IGET  (r6 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.bottom int \l}"];
Node_64 [shape=record,label="{64\:\ 0x0052|0x0052: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:73:0x0058 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0054|0x0054: IGET  (r5 I:int) = (r1 I:android.graphics.Rect A[D('t' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x0056: IPUT  (r5 I:int), (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.bottom int \l}"];
Node_71 [shape=record,label="{71\:\ 0x0058|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0058|LOOP_END\lLOOP:0: B:49:0x001d\-\>B:66:0x0058\l|0x0058: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:986)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0058|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0058|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x005b|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x005b|0x005b: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('i' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:995)\l0x005c: IPUT  (r4 I:boolean), (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedPadding boolean \l0x005e: IPUT  \l  (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)])\l  (r7 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)\l androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mConstantPadding android.graphics.Rect  (LINE:996)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0060|RETURN\l|0x0060: RETURN  (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0061|RETURN\l|0x0061: RETURN  (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)])  (LINE:979)\l}"];
MethodNode[shape=record,label="{public final android.graphics.Rect androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding((r7 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:66:0x0058 \-\> B:49:0x001d, CROSS_EDGE: B:64:0x0052 \-\> B:66:0x0058, CROSS_EDGE: B:61:0x0048 \-\> B:63:0x004e, CROSS_EDGE: B:58:0x003e \-\> B:60:0x0044, CROSS_EDGE: B:55:0x0034 \-\> B:57:0x003a, CROSS_EDGE: B:52:0x0027 \-\> B:54:0x0030, CROSS_EDGE: B:51:0x0025 \-\> B:66:0x0058, CROSS_EDGE: B:68:0x0060 \-\> B:38:?, CROSS_EDGE: B:69:0x0061 \-\> B:38:?, CROSS_EDGE: B:44:0x0008 \-\> B:69:0x0061\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001d\-0x005b: r4 'i' I\l  0x0013\-0x0061: r0 'r' Landroid\/graphics\/Rect;\l  0x0018\-0x0061: r1 't' Landroid\/graphics\/Rect;\l  0x001a\-0x0061: r2 'count' I\l  0x001c\-0x0061: r3 'drawables' [Landroid\/graphics\/drawable\/Drawable;\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_38;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_69;
Node_45 -> Node_46;
Node_46 -> Node_48;
Node_46 -> Node_69[style=dashed];
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_70;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_72;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_73;
Node_65 -> Node_71;
Node_71 -> Node_66;
Node_66 -> Node_49;
Node_73 -> Node_66;
Node_72 -> Node_66;
Node_70 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_38;
Node_69 -> Node_38;
}

