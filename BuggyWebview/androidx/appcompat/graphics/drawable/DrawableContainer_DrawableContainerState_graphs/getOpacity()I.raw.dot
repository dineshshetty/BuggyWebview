digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getOpacity()I" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedOpacity boolean  (LINE:1091)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0007 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IGET  (r0 I:int) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mOpacity int  (LINE:1092)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0007|0x0007: INVOKE  (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.createAllFutures():void A[MD:():void (m)] (LINE:1094)\l0x000a: IGET  (r0 I:int) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mNumChildren int  (LINE:1095)\l0x000c: IGET  (r1 I:android.graphics.drawable.Drawable[]) = (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[]  (LINE:1096)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: IF  (r0 I:??[int, byte, short, char] A[D('count' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x0018  (LINE:1097)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0010|0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: AGET  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('drawables' android.graphics.drawable.Drawable[])]), (r2 I:??[int, short, byte, char]) \l0x0013: INVOKE  (r2 I:int) = (r2 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getOpacity():int A[MD:():int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0019|0x0019: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1098)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|LOOP_START\lLOOP:0: B:27:0x001a\-\>B:28:0x001c\l|0x001a: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('count' int)])  \-\> B:31:0x0029 \l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|LOOP_END\lLOOP:0: B:27:0x001a\-\>B:28:0x001c\l|0x001c: AGET  (r4 I:??[OBJECT, ARRAY]) = \l  (r1 I:??[OBJECT, ARRAY][] A[D('drawables' android.graphics.drawable.Drawable[])])\l  (r3 I:??[int, short, byte, char] A[D('i' int)])\l  (LINE:1099)\l0x001e: INVOKE  (r4 I:int) = (r4 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getOpacity():int A[MD:():int (c)]\l0x0022: INVOKE  (r2 I:int A[D('op' int)]) = (r2 I:int A[D('op' int)]), (r4 I:int) type: STATIC call: android.graphics.drawable.Drawable.resolveOpacity(int, int):int A[MD:(int, int):int (c)]\l0x0026: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:1098)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0029|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|0x0029: IPUT  (r2 I:int A[D('op' int)]), (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mOpacity int  (LINE:1101)\l0x002b: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1102)\l0x002c: IPUT  (r3 I:boolean), (r5 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mCheckedOpacity boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x002e|RETURN\l|0x002e: RETURN  (r2 I:int A[D('op' int)])  (LINE:1103)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: CONST  (r2 I:??[int, float, short, byte, char]) = (\-2 ??[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public final int androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getOpacity((r5 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:28:0x001c \-\> B:27:0x001a, CROSS_EDGE: B:30:0x002e \-\> B:17:?, CROSS_EDGE: B:25:0x0018 \-\> B:26:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0029: r3 'i' I\l  0x000c\-0x002e: r0 'count' I\l  0x000e\-0x002e: r1 'drawables' [Landroid\/graphics\/drawable\/Drawable;\l  0x0019\-0x002e: r2 'op' I\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_17;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_27;
Node_31 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_25 -> Node_26;
}

