digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getChild(I)Landroid\/graphics\/drawable\/Drawable;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable[]) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[]  (LINE:836)\l0x0002: AGET  (r0 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r7 I:??[int, short, byte, char] A[D('index' int)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007  (LINE:837)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:android.graphics.drawable.Drawable A[D('result' android.graphics.drawable.Drawable)])  (LINE:838)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: IGET  (r1 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray  (LINE:841)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0038 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: INVOKE  (r1 I:int) = (r1 I:android.util.SparseArray), (r7 I:int A[D('index' int)]) type: VIRTUAL call: android.util.SparseArray.indexOfKey(int):int A[MD:(int):int (c)] (LINE:842)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char] A[D('keyIndex' int)]) \< (0 ??[int, byte, short, char])  \-\> B:27:0x0038  (LINE:843)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|0x0012: IGET  (r3 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray  (LINE:844)\l0x0014: INVOKE  (r3 I:java.lang.Object) = (r3 I:android.util.SparseArray), (r1 I:int A[D('keyIndex' int)]) type: VIRTUAL call: android.util.SparseArray.valueAt(int):java.lang.Object A[MD:(int):E (c)]\l0x0018: CHECK_CAST (r3 I:android.graphics.drawable.Drawable$ConstantState) = (android.graphics.drawable.Drawable$ConstantState) (r3 I:??[OBJECT, ARRAY]) \l0x001a: IGET  (r4 I:android.content.res.Resources) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mSourceRes android.content.res.Resources  (LINE:845)\l0x001c: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r3 I:android.graphics.drawable.Drawable$ConstantState A[D('cs' android.graphics.drawable.Drawable$ConstantState)])\l  (r4 I:android.content.res.Resources)\l type: VIRTUAL call: android.graphics.drawable.Drawable.ConstantState.newDrawable(android.content.res.Resources):android.graphics.drawable.Drawable A[MD:(android.content.res.Resources):android.graphics.drawable.Drawable (c)]\l0x0020: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)\l  (r4 I:android.graphics.drawable.Drawable)\l type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.prepareDrawable(android.graphics.drawable.Drawable):android.graphics.drawable.Drawable A[MD:(android.graphics.drawable.Drawable):android.graphics.drawable.Drawable (m)]\l0x0024: IGET  (r5 I:android.graphics.drawable.Drawable[]) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawables android.graphics.drawable.Drawable[]  (LINE:846)\l0x0026: APUT  \l  (r5 I:??[OBJECT, ARRAY][])\l  (r7 I:??[int, short, byte, char] A[D('index' int)])\l  (r4 I:??[OBJECT, ARRAY] A[D('prepared' android.graphics.drawable.Drawable)])\l \l0x0028: IGET  (r5 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray  (LINE:847)\l0x002a: INVOKE  (r5 I:android.util.SparseArray), (r1 I:int A[D('keyIndex' int)]) type: VIRTUAL call: android.util.SparseArray.removeAt(int):void A[MD:(int):void (c)]\l0x002d: IGET  (r5 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>) = (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray  (LINE:848)\l0x002f: INVOKE  (r5 I:int) = (r5 I:android.util.SparseArray) type: VIRTUAL call: android.util.SparseArray.size():int A[MD:():int (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0033|0x0033: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0037 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|0x0035: IPUT  \l  (r2 I:android.util.SparseArray\<android.graphics.drawable.Drawable$ConstantState\>)\l  (r6 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)\l androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mDrawableFutures android.util.SparseArray  (LINE:849)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0037|RETURN\l|0x0037: RETURN  (r4 I:android.graphics.drawable.Drawable A[D('prepared' android.graphics.drawable.Drawable)])  (LINE:851)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0038|RETURN\l|0x0038: RETURN  (r2 I:android.graphics.drawable.Drawable)  (LINE:854)\l}"];
MethodNode[shape=record,label="{public final android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getChild((r6 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0037 \-\> B:15:?, CROSS_EDGE: B:24:0x0033 \-\> B:26:0x0037, CROSS_EDGE: B:27:0x0038 \-\> B:15:?, CROSS_EDGE: B:20:0x000a \-\> B:27:0x0038\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0038: r1 'keyIndex' I\l  0x001a\-0x0038: r3 'cs' Landroid\/graphics\/drawable\/Drawable$ConstantState;\l  0x0024\-0x0038: r4 'prepared' Landroid\/graphics\/drawable\/Drawable;\l  0x0004\-0x0038: r0 'result' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0038: r7 'index' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
}

