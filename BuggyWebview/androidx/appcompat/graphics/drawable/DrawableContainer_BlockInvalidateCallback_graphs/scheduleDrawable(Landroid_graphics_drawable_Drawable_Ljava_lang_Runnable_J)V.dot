digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.BlockInvalidateCallback.scheduleDrawable(Landroid\/graphics\/drawable\/Drawable;Ljava\/lang\/Runnable;J)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|android.graphics.drawable.Drawable$Callback r0 = r1.mCallback\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|if (r0 == null) goto L6\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|r0.scheduleDrawable(r2, r3, r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0007|RETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.BlockInvalidateCallback.scheduleDrawable((r1v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback A[IMMUTABLE_TYPE, THIS]), (r2v0 'who' android.graphics.drawable.Drawable A[D('who' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'what' java.lang.Runnable A[D('what' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'when' long A[D('when' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.Callback.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

