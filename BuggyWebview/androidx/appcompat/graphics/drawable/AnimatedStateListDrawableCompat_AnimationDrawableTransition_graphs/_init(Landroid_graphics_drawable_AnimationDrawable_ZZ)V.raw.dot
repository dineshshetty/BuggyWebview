digraph "CFG forandroidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.\<init\>(Landroid\/graphics\/drawable\/AnimationDrawable;ZZ)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:391)\l0x0001: INVOKE  \l  (r8 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition)\l  (r0 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)\l type: DIRECT call: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.Transition.\<init\>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1):void A[MD:(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1):void (m)]\l0x0004: INVOKE  (r0 I:int) = (r9 I:android.graphics.drawable.AnimationDrawable A[D('ad' android.graphics.drawable.AnimationDrawable)]) type: VIRTUAL call: android.graphics.drawable.AnimationDrawable.getNumberOfFrames():int A[MD:():int (c)] (LINE:392)\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:393)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reversed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: ARITH  (r2 I:int) = (r0 I:int A[D('frameCount' int)]) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reversed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013  (LINE:394)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: NEW_INSTANCE  (r4 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator) =  androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator  (LINE:395)\l0x0017: INVOKE  \l  (r4 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)\l  (r9 I:android.graphics.drawable.AnimationDrawable A[D('ad' android.graphics.drawable.AnimationDrawable)])\l  (r10 I:boolean A[D('reversed' boolean)])\l type: DIRECT call: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.\<init\>(android.graphics.drawable.AnimationDrawable, boolean):void A[MD:(android.graphics.drawable.AnimationDrawable, boolean):void (m)]\l0x001a: CONST  (r5 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:397)\l0x001b: NEW_ARRAY  (r5 I:int[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001d: APUT  \l  (r5 I:??[int, float][])\l  (r1 I:??[int, short, byte, char])\l  (r2 I:??[int, float, short, byte, char] A[D('fromFrame' int)])\l \l0x001f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0020: APUT  \l  (r5 I:??[int, float][])\l  (r1 I:??[int, short, byte, char])\l  (r3 I:??[int, float, short, byte, char] A[D('toFrame' int)])\l \l0x0022: CONST_STR  (r6 I:java.lang.String) =  \"currentIndex\"  (LINE:398)\l0x0024: INVOKE  (r5 I:android.animation.ObjectAnimator) = (r9 I:java.lang.Object A[D('ad' android.graphics.drawable.AnimationDrawable)]), (r6 I:java.lang.String), (r5 I:int[]) type: STATIC call: android.animation.ObjectAnimator.ofInt(java.lang.Object, java.lang.String, int[]):android.animation.ObjectAnimator A[MD:(java.lang.Object, java.lang.String, int[]):android.animation.ObjectAnimator VARARG (c)]\l0x0028: SGET  (r6 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:399)\l0x002a: CONST  (r7 I:??[int, float, short, byte, char]) = (18 ??[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r6 I:??[int, byte, short, char]) \< (r7 I:??[int, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r5 I:android.animation.ObjectAnimator A[D('anim' android.animation.ObjectAnimator)]), (r1 I:boolean) type: STATIC call: androidx.appcompat.resources.Compatibility.Api18Impl.setAutoCancel(android.animation.ObjectAnimator, boolean):void A[MD:(android.animation.ObjectAnimator, boolean):void (m)] (LINE:400)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: INVOKE  (r1 I:int) = \l  (r4 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator A[D('interp' androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)])\l type: VIRTUAL call: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.getTotalDuration():int A[MD:():int (m)] (LINE:402)\l0x0035: CAST (r6 I:long) = (long) (r1 I:int) \l0x0036: INVOKE  (r5 I:android.animation.ObjectAnimator A[D('anim' android.animation.ObjectAnimator)]), (r6 I:long) type: VIRTUAL call: android.animation.ObjectAnimator.setDuration(long):android.animation.ObjectAnimator A[MD:(long):android.animation.ObjectAnimator (c)]\l0x0039: INVOKE  \l  (r5 I:android.animation.ObjectAnimator A[D('anim' android.animation.ObjectAnimator)])\l  (r4 I:android.animation.TimeInterpolator A[D('interp' androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)])\l type: VIRTUAL call: android.animation.ObjectAnimator.setInterpolator(android.animation.TimeInterpolator):void A[MD:(android.animation.TimeInterpolator):void (c)] (LINE:403)\l0x003c: IPUT  \l  (r11 I:boolean A[D('hasReversibleFlag' boolean)])\l  (r8 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition)\l androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.mHasReversibleFlag boolean  (LINE:404)\l0x003e: IPUT  \l  (r5 I:android.animation.ObjectAnimator A[D('anim' android.animation.ObjectAnimator)])\l  (r8 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition)\l androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.mAnim android.animation.ObjectAnimator  (LINE:405)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|RETURN\l|0x0040: RETURN    (LINE:406)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: ARITH  (r3 I:int) = (r0 I:int A[D('frameCount' int)]) + (\-1 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.AnimationDrawableTransition.\<init\>((r8 'this' I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition A[IMMUTABLE_TYPE, THIS]), (r9 I:android.graphics.drawable.AnimationDrawable A[D('ad' android.graphics.drawable.AnimationDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('reversed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('hasReversibleFlag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x002c \-\> B:12:0x0031, CROSS_EDGE: B:8:0x0013 \-\> B:9:0x0015, CROSS_EDGE: B:5:0x000e \-\> B:6:0x000f\lDebug Info:\l  0x0008\-0x0040: r0 'frameCount' I\l  0x000f\-0x0040: r2 'fromFrame' I\l  0x0015\-0x0040: r3 'toFrame' I\l  0x001a\-0x0040: r4 'interp' Landroidx\/appcompat\/graphics\/drawable\/AnimatedStateListDrawableCompat$FrameInterpolator;\l  0x0028\-0x0040: r5 'anim' Landroid\/animation\/ObjectAnimator;\l  \-1 \-0x0040: r9 'ad' Landroid\/graphics\/drawable\/AnimationDrawable;\l  \-1 \-0x0040: r10 'reversed' Z\l  \-1 \-0x0040: r11 'hasReversibleFlag' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_8 -> Node_9;
Node_5 -> Node_6;
}

