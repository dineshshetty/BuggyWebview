digraph "CFG forandroidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements(Landroid\/content\/Context;Landroid\/content\/res\/Resources;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/content\/res\/Resources$Theme;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)] (LINE:482)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|LOOP_START\lLOOP:0: B:3:0x0006\-\>B:28:0x0006\l|0x0006: INVOKE  (r2 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:484)\l0x000a: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x003e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  (r2 I:int) = (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)] (LINE:485)\l0x0011: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('innerDepth' int)])  \-\> B:9:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x003e \l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|RETURN\lORIG_RETURN\l|0x003e: RETURN    (LINE:499)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:487)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001b \l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: IF  (r4 I:??[int, byte, short, char] A[D('depth' int)]) \<= (r0 I:??[int, byte, short, char] A[D('innerDepth' int)])  \-\> B:24:0x001e  (LINE:490)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: INVOKE  (r2 I:java.lang.String) = (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:493)\l0x0022: CONST_STR  (r5 I:java.lang.String) =  \"item\" \l0x0024: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|0x0028: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002e \l}"];
Node_25 [shape=record,label="{25\:\ 0x002e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|0x002e: INVOKE  (r2 I:java.lang.String) = (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:495)\l0x0032: CONST_STR  (r5 I:java.lang.String) =  \"transition\" \l0x0034: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0006 \l}"];
Node_27 [shape=record,label="{27\:\ 0x003a|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|0x003a: INVOKE  \l  (r6 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat)\l  (r7 I:android.content.Context A[D('context' android.content.Context)])\l  (r8 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r10 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r11 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: DIRECT call: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseTransition(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int A[MD:(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:496)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0006|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0006\-\>B:28:0x0006\l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: INVOKE  \l  (r6 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat)\l  (r7 I:android.content.Context A[D('context' android.content.Context)])\l  (r8 I:android.content.res.Resources A[D('resources' android.content.res.Resources)])\l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r10 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r11 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme)])\l type: DIRECT call: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.parseItem(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int A[MD:(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme):int throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:494)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0006|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x003e|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x003e: RETURN   A[SYNTHETIC] (LINE:499)\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.inflateChildElements((r6 'this' I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat A[IMMUTABLE_TYPE, THIS]), (r7 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.content.res.Resources A[D('resources' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.content.res.Resources$Theme A[D('theme' android.content.res.Resources$Theme), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:16:0x002a \-\> B:3:0x0006, BACK_EDGE: B:18:0x0038 \-\> B:3:0x0006, BACK_EDGE: B:19:0x003a \-\> B:3:0x0006, BACK_EDGE: B:12:0x001b \-\> B:3:0x0006, BACK_EDGE: B:10:0x0018 \-\> B:3:0x0006, CROSS_EDGE: B:6:0x0012 \-\> B:9:0x0017, CROSS_EDGE: B:4:0x000b \-\> B:20:0x003e\lDebug Info:\l  0x0012\-0x003e: r4 'depth' I\l  0x0006\-0x003e: r0 'innerDepth' I\l  0x000b\-0x003e: r3 'type' I\l  \-1 \-0x003e: r7 'context' Landroid\/content\/Context;\l  \-1 \-0x003e: r8 'resources' Landroid\/content\/res\/Resources;\l  \-1 \-0x003e: r9 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x003e: r10 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x003e: r11 'theme' Landroid\/content\/res\/Resources$Theme;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_23;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_21 -> Node_20;
Node_20 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_22;
Node_10 -> Node_29[style=dashed];
Node_22 -> Node_12;
Node_12 -> Node_24;
Node_12 -> Node_30[style=dashed];
Node_24 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_25;
Node_15 -> Node_26[style=dashed];
Node_25 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_27[style=dashed];
Node_18 -> Node_31;
Node_27 -> Node_19;
Node_19 -> Node_32;
Node_32 -> Node_28;
Node_28 -> Node_3;
Node_31 -> Node_28;
Node_26 -> Node_16;
Node_16 -> Node_33;
Node_33 -> Node_28;
Node_30 -> Node_28;
Node_29 -> Node_28;
Node_23 -> Node_34;
Node_34 -> Node_1;
}

