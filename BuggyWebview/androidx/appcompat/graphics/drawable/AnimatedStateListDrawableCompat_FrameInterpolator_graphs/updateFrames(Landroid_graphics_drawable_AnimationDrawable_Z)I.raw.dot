digraph "CFG forandroidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.updateFrames(Landroid\/graphics\/drawable\/AnimationDrawable;Z)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:android.graphics.drawable.AnimationDrawable A[D('d' android.graphics.drawable.AnimationDrawable)]) type: VIRTUAL call: android.graphics.drawable.AnimationDrawable.getNumberOfFrames():int A[MD:():int (c)] (LINE:739)\l0x0004: IPUT  \l  (r0 I:int A[D('frameCount' int)])\l  (r5 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)\l androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.mFrames int  (LINE:740)\l0x0006: IGET  (r1 I:int[]) = (r5 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator) androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.mFrameTimes int[]  (LINE:741)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('frameCount' int)])  \-\> B:7:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r1 I:int[]) = (r5 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator) androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.mFrameTimes int[]  (LINE:744)\l0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:745)\l0x0014: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:746)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|LOOP_START\lLOOP:0: B:8:0x0015\-\>B:12:0x001f\l|0x0015: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('frameCount' int)])  \-\> B:15:0x0029 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reversed' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e  (LINE:747)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: ARITH  (r4 I:int) = (r0 I:int A[D('frameCount' int)]) \- (r3 I:int A[D('i' int)]) \l0x001b: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|LOOP_END\lLOOP:0: B:8:0x0015\-\>B:12:0x001f\l|0x001f: INVOKE  (r4 I:int) = (r6 I:android.graphics.drawable.AnimationDrawable A[D('d' android.graphics.drawable.AnimationDrawable)]), (r4 I:int) type: VIRTUAL call: android.graphics.drawable.AnimationDrawable.getDuration(int):int A[MD:(int):int (c)]\l0x0023: APUT  \l  (r1 I:??[int, float][] A[D('frameTimes' int[])])\l  (r3 I:??[int, short, byte, char] A[D('i' int)])\l  (r4 I:??[int, float, short, byte, char] A[D('duration' int)])\l  (LINE:748)\l0x0025: ARITH  (r2 I:int) = (r2 I:int A[D('totalDuration' int)]) + (r4 I:int A[D('duration' int)])  (LINE:749)\l0x0026: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:746)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x001f|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IPUT  \l  (r2 I:int A[D('totalDuration' int)])\l  (r5 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator)\l androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.mTotalDuration int  (LINE:751)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|RETURN\l|0x002b: RETURN  (r2 I:int A[D('totalDuration' int)])  (LINE:752)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[D('frameCount' int), IMMUTABLE_TYPE]) type: int[]  (LINE:742)\l0x000f: IPUT  (r1 I:int[]), (r5 I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator) androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.mFrameTimes int[] \l}"];
MethodNode[shape=record,label="{int androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.FrameInterpolator.updateFrames((r5 'this' I:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator A[IMMUTABLE_TYPE, THIS]), (r6 I:android.graphics.drawable.AnimationDrawable A[D('d' android.graphics.drawable.AnimationDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('reversed' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x001f \-\> B:8:0x0015, CROSS_EDGE: B:11:0x001e \-\> B:12:0x001f, CROSS_EDGE: B:5:0x000b \-\> B:7:0x0011, CROSS_EDGE: B:3:0x0008 \-\> B:6:0x000d\lDebug Info:\l  0x0023\-0x0026: r4 'duration' I\l  0x0015\-0x0029: r3 'i' I\l  0x0004\-0x002b: r0 'frameCount' I\l  0x0013\-0x002b: r1 'frameTimes' [I\l  0x0014\-0x002b: r2 'totalDuration' I\l  \-1 \-0x002b: r6 'd' Landroid\/graphics\/drawable\/AnimationDrawable;\l  \-1 \-0x002b: r7 'reversed' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_17;
Node_17 -> Node_12;
Node_12 -> Node_8;
Node_11 -> Node_16;
Node_16 -> Node_12;
Node_15 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_6 -> Node_7;
}

