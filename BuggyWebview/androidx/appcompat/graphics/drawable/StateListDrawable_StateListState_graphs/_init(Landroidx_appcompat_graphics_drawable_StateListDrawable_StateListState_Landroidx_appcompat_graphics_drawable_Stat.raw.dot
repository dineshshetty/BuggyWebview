digraph "CFG forandroidx.appcompat.graphics.drawable.StateListDrawable.StateListState.\<init\>(Landroidx\/appcompat\/graphics\/drawable\/StateListDrawable$StateListState;Landroidx\/appcompat\/graphics\/drawable\/StateListDrawable;Landroid\/content\/res\/Resources;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  \l  (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)\l  (r2 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState A[D('orig' androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)])\l  (r3 I:androidx.appcompat.graphics.drawable.DrawableContainer A[D('owner' androidx.appcompat.graphics.drawable.StateListDrawable)])\l  (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources)])\l type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.\<init\>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState, androidx.appcompat.graphics.drawable.DrawableContainer, android.content.res.Resources):void A[MD:(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState, androidx.appcompat.graphics.drawable.DrawableContainer, android.content.res.Resources):void (m)] (LINE:333)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0003|0x0003: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('orig' androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000a  (LINE:334)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0005|0x0005: IGET  (r0 I:int[][]) = \l  (r2 I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState A[D('orig' androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)])\l androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.mStateSets int[][]  (LINE:336)\l0x0007: IPUT  (r0 I:int[][]), (r1 I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.mStateSets int[][] \l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|0x0012: RETURN   A[SYNTHETIC] (LINE:340)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: INVOKE  (r0 I:int) = (r1 I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) type: VIRTUAL call: androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.getCapacity():int A[MD:():int (m)] (LINE:338)\l0x000e: NEW_ARRAY  (r0 I:int[][]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[][] \l0x0010: IPUT  (r0 I:int[][]), (r1 I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.mStateSets int[][] \l}"];
Node_14 [shape=record,label="{14\:\ 0x0012|RETURN\lORIG_RETURN\l|0x0012: RETURN    (LINE:340)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.\<init\>((r1 'this' I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState A[D('orig' androidx.appcompat.graphics.drawable.StateListDrawable$StateListState), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.appcompat.graphics.drawable.StateListDrawable A[D('owner' androidx.appcompat.graphics.drawable.StateListDrawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.res.Resources A[D('res' android.content.res.Resources), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000a \-\> B:14:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r2 'orig' Landroidx\/appcompat\/graphics\/drawable\/StateListDrawable$StateListState;\l  \-1 \-0x0012: r3 'owner' Landroidx\/appcompat\/graphics\/drawable\/StateListDrawable;\l  \-1 \-0x0012: r4 'res' Landroid\/content\/res\/Resources;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_9;
}

