digraph "CFG forandroidx.appcompat.graphics.drawable.StateListDrawable.StateListState.mutate()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|int[][] r0 = r4.mStateSets\lint[][] r1 = new int[r0.length]\lint r0 = r0.length + (\-1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|LOOP_START\lLOOP:0: B:17:0x0008\-\>B:22:0x001a\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:16:0x0000, B:22:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|int[][] r2 = r4.mStateSets\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|if (r2[r0] == null) goto L8\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|int[] r2 = (int[]) r2[r0].clone()\l}"];
Node_27 [shape=record,label="{27\:\ 0x001a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|LOOP_END\lLOOP:0: B:17:0x0008\-\>B:22:0x001a\lPHI: r2 \l  PHI: (r2v2 int[]) = (r2v1 int[]), (r2v5 int[]) binds: [B:26:0x001a, B:27:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|r1[r0] = r2\lint r0 = r0 + (\-1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0019|r2 = null\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001f|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x001f|r4.mStateSets = r1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.graphics.drawable.StateListDrawable.StateListState.mutate((r4v0 'this' androidx.appcompat.graphics.drawable.StateListDrawable$StateListState A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x001a \-\> B:17:0x0008, CROSS_EDGE: B:21:0x0019 \-\> B:22:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mutate():void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_27;
Node_27 -> Node_22;
Node_22 -> Node_17;
Node_21 -> Node_26;
Node_26 -> Node_22;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_15;
}

