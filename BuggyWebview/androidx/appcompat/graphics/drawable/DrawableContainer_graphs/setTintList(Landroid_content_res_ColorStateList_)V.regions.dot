digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.setTintList(Landroid\/content\/res\/ColorStateList;)V" {
subgraph cluster_Region_1672050998 {
label = "R(2:1|(1:(1:3)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|r2.mDrawableContainerState.mHasTintList = androidx.appcompat.graphics.drawable.DrawableContainer.DEFAULT_DITHER\l}"];
subgraph cluster_Region_1655463132 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_676058811 {
label = "IF [B:10:0x0009] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0009|if (r2.mDrawableContainerState.mTintList != r3) goto L3\l}"];
subgraph cluster_Region_1124133947 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000b|r2.mDrawableContainerState.mTintList = r3\landroidx.core.graphics.drawable.DrawableCompat.setTintList(r2.mCurrDrawable, r3)\l}"];
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0014|ORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.setTintList((r2v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r3v0 'tint' android.content.res.ColorStateList A[D('tint' android.content.res.ColorStateList), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0009 \-\> B:12:0x0014\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setTintList(android.content.res.ColorStateList):void\}, androidx.core.graphics.drawable.TintAwareDrawable.setTintList(android.content.res.ColorStateList):void]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_7 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

