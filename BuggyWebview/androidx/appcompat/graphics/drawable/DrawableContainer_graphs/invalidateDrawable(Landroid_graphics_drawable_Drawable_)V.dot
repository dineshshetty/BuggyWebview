digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState r0 = r1.mDrawableContainerState\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|r0.invalidateCache()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007}"];
Node_19 [shape=record,label="{19\:\ 0x0009|if (r2 != r1.mCurrDrawable) goto L12\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b}"];
Node_21 [shape=record,label="{21\:\ 0x000f|if (getCallback() == null) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|getCallback().invalidateDrawable(r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable((r1v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2v0 'who' android.graphics.drawable.Drawable A[D('who' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x000f \-\> B:23:0x0018, CROSS_EDGE: B:19:0x0009 \-\> B:23:0x0018, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable(android.graphics.drawable.Drawable):void, ClspMth\{android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

