digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:374)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0007 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: INVOKE  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.invalidateCache():void A[MD:():void (m)] (LINE:375)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:377)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('who' android.graphics.drawable.Drawable)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:? \l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: INVOKE  (r0 I:android.graphics.drawable.Drawable$Callback) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.getCallback():android.graphics.drawable.Drawable$Callback A[MD:():android.graphics.drawable.Drawable$Callback (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|0x0011: INVOKE  (r0 I:android.graphics.drawable.Drawable$Callback) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.getCallback():android.graphics.drawable.Drawable$Callback A[MD:():android.graphics.drawable.Drawable$Callback (c)] (LINE:378)\l0x0015: INVOKE  (r0 I:android.graphics.drawable.Drawable$Callback), (r1 I:android.graphics.drawable.Drawable) type: INTERFACE call: android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable):void A[MD:(android.graphics.drawable.Drawable):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN    (LINE:380)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:380)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:380)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable((r1 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.drawable.Drawable A[D('who' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:21:0x000f \-\> B:23:0x0018, CROSS_EDGE: B:19:0x0009 \-\> B:23:0x0018, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 'who' Landroid\/graphics\/drawable\/Drawable;\lMETHOD_OVERRIDE: [androidx.appcompat.graphics.drawable.DrawableContainer.invalidateDrawable(android.graphics.drawable.Drawable):void, ClspMth\{android.graphics.drawable.Drawable.Callback.invalidateDrawable(android.graphics.drawable.Drawable):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

