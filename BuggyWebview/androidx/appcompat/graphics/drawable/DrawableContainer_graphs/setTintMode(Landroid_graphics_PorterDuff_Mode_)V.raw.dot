digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.setTintMode(Landroid\/graphics\/PorterDuff$Mode;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r2 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:195)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: IPUT  (r1 I:boolean), (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mHasTintMode boolean \l0x0005: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r2 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:196)\l0x0007: IGET  (r0 I:android.graphics.PorterDuff$Mode) = (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mTintMode android.graphics.PorterDuff$Mode \l}"];
Node_10 [shape=record,label="{10\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tintMode' android.graphics.PorterDuff$Mode)])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r2 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:197)\l0x000d: IPUT  \l  (r3 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode)])\l  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)\l androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.mTintMode android.graphics.PorterDuff$Mode \l0x000f: IGET  (r0 I:android.graphics.drawable.Drawable) = (r2 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:198)\l0x0011: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r3 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode):void A[MD:(android.graphics.drawable.Drawable, android.graphics.PorterDuff$Mode):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|RETURN\lORIG_RETURN\l|0x0014: RETURN    (LINE:200)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0014: RETURN   A[SYNTHETIC] (LINE:200)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.setTintMode((r2 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.PorterDuff$Mode A[D('tintMode' android.graphics.PorterDuff$Mode), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:10:0x0009 \-\> B:12:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0014: r3 'tintMode' Landroid\/graphics\/PorterDuff$Mode;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setTintMode(android.graphics.PorterDuff$Mode):void\}, androidx.core.graphics.drawable.TintAwareDrawable.setTintMode(android.graphics.PorterDuff$Mode):void]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

