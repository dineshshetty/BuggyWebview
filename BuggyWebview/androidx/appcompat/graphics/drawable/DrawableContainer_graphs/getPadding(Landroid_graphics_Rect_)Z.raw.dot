digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.getPadding(Landroid\/graphics\/Rect;)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r4 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:109)\l0x0002: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantPadding():android.graphics.Rect A[MD:():android.graphics.Rect (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('r' android.graphics.Rect)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001c  (LINE:111)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|0x0008: INVOKE  \l  (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)])\l  (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)])\l type: VIRTUAL call: android.graphics.Rect.set(android.graphics.Rect):void A[MD:(android.graphics.Rect):void (c)] (LINE:112)\l0x000b: IGET  (r1 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:113)\l0x000d: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.top int \l0x000f: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char]) \l0x0010: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.bottom int \l0x0012: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char]) \l0x0013: IGET  (r2 I:int) = (r0 I:android.graphics.Rect A[D('r' android.graphics.Rect)]) android.graphics.Rect.right int \l0x0015: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char]) \| (r2 I:??[int, boolean, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x001a \l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|0x0018: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|0x0029: INVOKE  (r2 I:boolean) = (r4 I:androidx.appcompat.graphics.drawable.DrawableContainer) type: DIRECT call: androidx.appcompat.graphics.drawable.DrawableContainer.needsMirroring():boolean A[MD:():boolean (m)] (LINE:121)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0037 \l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|0x002f: IGET  (r2 I:int) = (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int  (LINE:122)\l0x0031: IGET  (r3 I:int) = (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:123)\l0x0033: IPUT  (r3 I:int), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.left int \l0x0035: IPUT  (r2 I:int A[D('left' int)]), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) android.graphics.Rect.right int  (LINE:124)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0037|RETURN\l|0x0037: RETURN  (r1 I:boolean A[D('result' boolean)])  (LINE:126)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|0x001a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|0x001c: IGET  (r1 I:android.graphics.drawable.Drawable A[D('result' boolean)]) = (r4 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:115)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0025 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0020|0x0020: INVOKE  (r1 I:boolean) = (r1 I:android.graphics.drawable.Drawable), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:116)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: INVOKE  (r1 I:boolean) = (r4 I:android.graphics.drawable.Drawable), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect)]) type: SUPER call: android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean A[MD:(android.graphics.Rect):boolean (c)] (LINE:118)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.graphics.drawable.DrawableContainer.getPadding((r4 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Rect A[D('padding' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x002d \-\> B:33:0x0037, CROSS_EDGE: B:24:0x001a \-\> B:30:0x0029, CROSS_EDGE: B:28:0x0020 \-\> B:30:0x0029, CROSS_EDGE: B:29:0x0025 \-\> B:30:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x001c: r1 'result' Z\l  0x0024\-0x0025: r1 'result' Z\l  0x0031\-0x0037: r2 'left' I\l  0x0006\-0x0037: r0 'r' Landroid\/graphics\/Rect;\l  0x0029\-0x0037: r1 'result' Z\l  \-1 \-0x0037: r5 'padding' Landroid\/graphics\/Rect;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getPadding(android.graphics.Rect):boolean\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_24 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
}

