digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.getIntrinsicWidth()I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:339)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.isConstantSize():boolean A[MD:():boolean (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000f \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IGET  (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mDrawableContainerState androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState  (LINE:340)\l0x000a: INVOKE  (r0 I:int) = (r0 I:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.DrawableContainerState.getConstantWidth():int A[MD:():int (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|0x000e: RETURN  (r0 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:342)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0018 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: INVOKE  (r0 I:int) = (r0 I:android.graphics.drawable.Drawable) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0019: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0019: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.graphics.drawable.DrawableContainer.getIntrinsicWidth((r1 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x0019 \-\> B:13:?, CROSS_EDGE: B:21:0x0018 \-\> B:22:0x0019\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.getIntrinsicWidth():int\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_13;
}

