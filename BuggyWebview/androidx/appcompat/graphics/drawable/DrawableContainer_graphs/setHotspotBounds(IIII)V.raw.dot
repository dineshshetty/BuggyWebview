digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.setHotspotBounds(IIII)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.Rect) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mHotspotBounds android.graphics.Rect  (LINE:289)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x000c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:290)\l0x0006: INVOKE  \l  (r0 I:android.graphics.Rect)\l  (r2 I:int A[D('left' int)])\l  (r3 I:int A[D('top' int)])\l  (r4 I:int A[D('right' int)])\l  (r5 I:int A[D('bottom' int)])\l type: DIRECT call: android.graphics.Rect.\<init\>(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x0009: IPUT  (r0 I:android.graphics.Rect), (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mHotspotBounds android.graphics.Rect \l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|0x000f: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:294)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:? \l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|0x0013: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r2 I:int A[D('left' int)])\l  (r3 I:int A[D('top' int)])\l  (r4 I:int A[D('right' int)])\l  (r5 I:int A[D('bottom' int)])\l type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int):void A[MD:(android.graphics.drawable.Drawable, int, int, int, int):void (m)] (LINE:295)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|RETURN\lORIG_RETURN\l|0x0016: RETURN    (LINE:297)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x0016: RETURN   A[SYNTHETIC] (LINE:297)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: INVOKE  \l  (r0 I:android.graphics.Rect)\l  (r2 I:int A[D('left' int)])\l  (r3 I:int A[D('top' int)])\l  (r4 I:int A[D('right' int)])\l  (r5 I:int A[D('bottom' int)])\l type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:292)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.setHotspotBounds((r1 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0011 \-\> B:20:0x0016, CROSS_EDGE: B:16:0x000c \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0016: r2 'left' I\l  \-1 \-0x0016: r3 'top' I\l  \-1 \-0x0016: r4 'right' I\l  \-1 \-0x0016: r5 'bottom' I\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setHotspotBounds(int, int, int, int):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

