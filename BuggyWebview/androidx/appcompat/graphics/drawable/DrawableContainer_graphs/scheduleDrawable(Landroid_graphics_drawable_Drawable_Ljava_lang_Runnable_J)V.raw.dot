digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable(Landroid\/graphics\/drawable\/Drawable;Ljava\/lang\/Runnable;J)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) androidx.appcompat.graphics.drawable.DrawableContainer.mCurrDrawable android.graphics.drawable.Drawable  (LINE:384)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('who' android.graphics.drawable.Drawable)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:? \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: INVOKE  (r0 I:android.graphics.drawable.Drawable$Callback) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.getCallback():android.graphics.drawable.Drawable$Callback A[MD:():android.graphics.drawable.Drawable$Callback (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|0x000a: INVOKE  (r0 I:android.graphics.drawable.Drawable$Callback) = (r1 I:androidx.appcompat.graphics.drawable.DrawableContainer) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawableContainer.getCallback():android.graphics.drawable.Drawable$Callback A[MD:():android.graphics.drawable.Drawable$Callback (c)] (LINE:385)\l0x000e: INVOKE  \l  (r0 I:android.graphics.drawable.Drawable$Callback)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r3 I:java.lang.Runnable A[D('what' java.lang.Runnable)])\l  (r4 I:long A[D('when' long)])\l type: INTERFACE call: android.graphics.drawable.Drawable.Callback.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void A[MD:(android.graphics.drawable.Drawable, java.lang.Runnable, long):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN    (LINE:387)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:387)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:387)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable((r1 'this' I:androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.drawable.Drawable A[D('who' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Runnable A[D('what' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('when' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:17:0x0011, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0011: r2 'who' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0011: r3 'what' Ljava\/lang\/Runnable;\l  \-1 \-0x0011: r4 'when' J\lMETHOD_OVERRIDE: [androidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void, ClspMth\{android.graphics.drawable.Drawable.Callback.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

