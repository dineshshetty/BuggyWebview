digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.setHotspotBounds(IIII)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|android.graphics.Rect r0 = r1.mHotspotBounds\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r0 != null) goto L10\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|r1.mHotspotBounds = new android.graphics.Rect(r2, r3, r4, r5)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000f|android.graphics.drawable.Drawable r0 = r1.mCurrDrawable\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|if (r0 == null) goto L9\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(r0, r2, r3, r4, r5)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|RETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|r0.set(r2, r3, r4, r5)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.setHotspotBounds((r1v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'top' int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'bottom' int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0011 \-\> B:20:0x0016, CROSS_EDGE: B:16:0x000c \-\> B:17:0x000f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.setHotspotBounds(int, int, int, int):void\}]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

