digraph "CFG forandroidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable(Landroid\/graphics\/drawable\/Drawable;Ljava\/lang\/Runnable;J)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r2 != r1.mCurrDrawable) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004}"];
Node_15 [shape=record,label="{15\:\ 0x0008|if (getCallback() == null) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|getCallback().scheduleDrawable(r1, r3, r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable((r1v0 'this' androidx.appcompat.graphics.drawable.DrawableContainer A[IMMUTABLE_TYPE, THIS]), (r2v0 'who' android.graphics.drawable.Drawable A[D('who' android.graphics.drawable.Drawable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'what' java.lang.Runnable A[D('what' java.lang.Runnable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'when' long A[D('when' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:17:0x0011, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.graphics.drawable.DrawableContainer.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void, ClspMth\{android.graphics.drawable.Drawable.Callback.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long):void\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

