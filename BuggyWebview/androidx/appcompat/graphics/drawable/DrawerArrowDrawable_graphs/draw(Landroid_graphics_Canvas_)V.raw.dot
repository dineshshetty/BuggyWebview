digraph "CFG forandroidx.appcompat.graphics.drawable.DrawerArrowDrawable.draw(Landroid\/graphics\/Canvas;)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY])  (LINE:326)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)]) \l0x0004: INVOKE  (r2 I:android.graphics.Rect) = (r18 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) type: VIRTUAL call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.getBounds():android.graphics.Rect A[MD:():android.graphics.Rect (c)]\l0x0008: IGET  (r3 I:int) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mDirection int  (LINE:329)\l0x000a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000b: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x000c|0x000c: SWITCH  (r3 I:??)\l case 0: goto B:44:0x0022\l case 1: goto B:43:0x0020\l case 2: goto B:36:0x000f\l case 3: goto B:39:0x0017\l default: goto B:36:0x000f \l}"];
Node_36 [shape=record,label="{36\:\ 0x000f|0x000f: INVOKE  (r3 I:int) = (r18 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:342)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|0x0013: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0024 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|0x0015: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|0x0024: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('flipToPointRight' boolean)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:342)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0025|0x0025: IGET  (r4 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mArrowHeadLength float  (LINE:349)\l0x0027: ARITH  (r4 I:float) = (r4 I:float) * (r4 I:float) \l0x0029: CONST  (r6 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x002b: ARITH  (r4 I:float) = (r4 I:float) * (r6 I:float) \l0x002d: CAST (r7 I:double) = (double) (r4 I:float) \l0x002e: INVOKE  (r7 I:double) = (r7 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x0032: CAST (r4 I:float) = (float) (r7 I:double) \l0x0033: IGET  (r7 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mBarLength float  (LINE:350)\l0x0035: IGET  (r8 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x0037: INVOKE  (r4 I:float A[D('arrowHeadBarLength' float)]) = (r7 I:float), (r4 I:float A[D('arrowHeadBarLength' float)]), (r8 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l0x003b: IGET  (r7 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mBarLength float  (LINE:351)\l0x003d: IGET  (r8 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mArrowShaftLength float \l0x003f: IGET  (r9 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x0041: INVOKE  (r7 I:float) = (r7 I:float), (r8 I:float), (r9 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l0x0045: IGET  (r8 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mMaxCutForBarSize float  (LINE:353)\l0x0047: IGET  (r9 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x0049: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x004a: INVOKE  (r8 I:float) = (r10 I:float), (r8 I:float), (r9 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l0x004e: INVOKE  (r8 I:int) = (r8 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0052: CAST (r8 I:float) = (float) (r8 I:int) \l0x0053: SGET  (r9 I:float) =  androidx.appcompat.graphics.drawable.DrawerArrowDrawable.ARROW_HEAD_ANGLE float  (LINE:355)\l0x0055: IGET  (r11 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x0057: INVOKE  (r9 I:float) = (r10 I:float), (r9 I:float), (r11 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x005b|0x005b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flipToPointRight' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x005f  (LINE:358)\l}"];
Node_48 [shape=record,label="{48\:\ 0x005d|0x005d: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0061|0x0061: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flipToPointRight' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0066  (LINE:359)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0063|0x0063: CONST  (r13 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0067|0x0067: IGET  (r14 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x0069: INVOKE  (r11 I:float) = (r11 I:float), (r13 I:float), (r14 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)] (LINE:358)\l0x006d: CAST (r13 I:double) = (double) (r4 I:float A[D('arrowHeadBarLength' float)])  (LINE:361)\l0x006e: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('canvasRotate' float)]) \l0x0070: CAST (r10 I:double) = (double) (r9 I:float A[D('rotation' float)]) \l0x0071: INVOKE  (r10 I:double) = (r10 I:double) type: STATIC call: java.lang.Math.cos(double):double A[MD:(double):double (c)]\l0x0075: ARITH  (r13 I:double) = (r13 I:double) * (r10 I:double) \l0x0077: INVOKE  (r10 I:long) = (r13 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x007b: CAST (r10 I:float) = (float) (r10 I:long) \l0x007c: CAST (r13 I:double) = (double) (r4 I:float A[D('arrowHeadBarLength' float)])  (LINE:362)\l0x007d: CAST (r5 I:double) = (double) (r9 I:float A[D('rotation' float)]) \l0x007e: INVOKE  (r5 I:double) = (r5 I:double) type: STATIC call: java.lang.Math.sin(double):double A[MD:(double):double (c)]\l0x0082: ARITH  (r13 I:double) = (r13 I:double) * (r5 I:double) \l0x0084: INVOKE  (r5 I:long) = (r13 I:double) type: STATIC call: java.lang.Math.round(double):long A[MD:(double):long (c)]\l0x0088: CAST (r5 I:float) = (float) (r5 I:long) \l0x0089: IGET  (r6 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:364)\l0x008b: INVOKE  (r6 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Path.rewind():void A[MD:():void (c)]\l0x008e: IGET  (r6 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mBarGap float  (LINE:365)\l0x0090: IGET  (r13 I:android.graphics.Paint) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPaint android.graphics.Paint \l0x0092: INVOKE  (r13 I:float) = (r13 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Paint.getStrokeWidth():float A[MD:():float (c)]\l0x0096: ARITH  (r6 I:float) = (r6 I:float) + (r13 I:float) \l0x0097: IGET  (r13 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mMaxCutForBarSize float \l0x0099: NEG  (r13 I:float) = (r13 I:float) \l0x009a: IGET  (r14 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mProgress float \l0x009c: INVOKE  (r6 I:float) = (r6 I:float), (r13 I:float), (r14 I:float) type: STATIC call: androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(float, float, float):float A[MD:(float, float, float):float (m)]\l0x00a0: NEG  (r13 I:float) = (r7 I:float A[D('arrowShaftLength' float)])  (LINE:368)\l0x00a1: CONST  (r14 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x00a3: ARITH  (r13 I:float) = (r13 I:float) \/ (r14 I:float) \l0x00a4: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:370)\l0x00a6: ARITH  (r15 I:float) = (r13 I:float A[D('arrowEdge' float)]) + (r8 I:float A[D('arrowShaftCut' float)]) \l0x00a8: CONST  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00a9: INVOKE  (r11 I:android.graphics.Path), (r15 I:float), (r12 I:float) type: VIRTUAL call: android.graphics.Path.moveTo(float, float):void A[MD:(float, float):void (c)]\l0x00ac: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:371)\l0x00ae: ARITH  (r15 I:float) = (r8 I:float A[D('arrowShaftCut' float)]) * (r14 I:float) \l0x00b0: ARITH  (r14 I:float) = (r7 I:float A[D('arrowShaftLength' float)]) \- (r15 I:float) \l0x00b2: INVOKE  (r11 I:android.graphics.Path), (r14 I:float), (r12 I:float) type: VIRTUAL call: android.graphics.Path.rLineTo(float, float):void A[MD:(float, float):void (c)]\l0x00b5: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:374)\l0x00b7: INVOKE  (r11 I:android.graphics.Path), (r13 I:float A[D('arrowEdge' float)]), (r6 I:float A[D('topBottomBarOffset' float)]) type: VIRTUAL call: android.graphics.Path.moveTo(float, float):void A[MD:(float, float):void (c)]\l0x00ba: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:375)\l0x00bc: INVOKE  (r11 I:android.graphics.Path), (r10 I:float A[D('arrowWidth' float)]), (r5 I:float A[D('arrowHeight' float)]) type: VIRTUAL call: android.graphics.Path.rLineTo(float, float):void A[MD:(float, float):void (c)]\l0x00bf: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:378)\l0x00c1: NEG  (r12 I:float) = (r6 I:float A[D('topBottomBarOffset' float)]) \l0x00c2: INVOKE  (r11 I:android.graphics.Path), (r13 I:float A[D('arrowEdge' float)]), (r12 I:float) type: VIRTUAL call: android.graphics.Path.moveTo(float, float):void A[MD:(float, float):void (c)]\l0x00c5: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:379)\l0x00c7: NEG  (r12 I:float) = (r5 I:float A[D('arrowHeight' float)]) \l0x00c8: INVOKE  (r11 I:android.graphics.Path), (r10 I:float A[D('arrowWidth' float)]), (r12 I:float) type: VIRTUAL call: android.graphics.Path.rLineTo(float, float):void A[MD:(float, float):void (c)]\l0x00cb: IGET  (r11 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:381)\l0x00cd: INVOKE  (r11 I:android.graphics.Path) type: VIRTUAL call: android.graphics.Path.close():void A[MD:():void (c)]\l0x00d0: INVOKE  (r19 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.save():int A[MD:():int (c)] (LINE:383)\l0x00d3: IGET  (r11 I:android.graphics.Paint) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPaint android.graphics.Paint  (LINE:387)\l0x00d5: INVOKE  (r11 I:float) = (r11 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Paint.getStrokeWidth():float A[MD:():float (c)]\l0x00d9: INVOKE  (r12 I:int) = (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)] (LINE:388)\l0x00dd: CAST (r12 I:float) = (float) (r12 I:int) \l0x00de: CONST  (r14 I:??[int, float, short, byte, char]) = (1077936128(0x40400000, float:3.0) ??[int, float, short, byte, char]) \l0x00e0: ARITH  (r14 I:float) = (r14 I:float) * (r11 I:float A[D('barThickness' float)]) \l0x00e2: ARITH  (r12 I:float) = (r12 I:float) \- (r14 I:float) \l0x00e3: IGET  (r14 I:float) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mBarGap float \l0x00e5: CONST  (r15 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x00e7: ARITH  (r15 I:float) = (r15 I:float) * (r14 I:float) \l0x00e9: ARITH  (r12 I:float) = (r12 I:float) \- (r15 I:float) \l0x00ea: CAST (r12 I:int) = (int) (r12 I:float) \l0x00eb: ARITH  (r15 I:int) = (r12 I:int A[D('remainingSpace' int)]) \/ (4 int)  (LINE:389)\l0x00ed: ARITH  (r15 I:int) = (r15 I:int) * (2 int) \l0x00ef: CAST (r15 I:float) = (float) (r15 I:int) \l0x00f0: CONST  (r17 I:??[int, float, short, byte, char]) = (1069547520(0x3fc00000, float:1.5) ??[int, float, short, byte, char])  (LINE:390)\l0x00f2: ARITH  (r17 I:float) = (r17 I:float) * (r11 I:float A[D('barThickness' float)]) \l0x00f4: ARITH  (r17 I:float) = (r17 I:float) + (r14 I:float) \l0x00f6: ARITH  (r15 I:float) = (r15 I:float A[D('yOffset' float)]) + (r17 I:float) \l0x00f8: INVOKE  (r14 I:int) = (r2 I:android.graphics.Rect A[D('bounds' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.centerX():int A[MD:():int (c)] (LINE:392)\l0x00fc: CAST (r14 I:float) = (float) (r14 I:int) \l0x00fd: INVOKE  (r1 I:android.graphics.Canvas), (r14 I:float), (r15 I:float A[D('yOffset' float)]) type: VIRTUAL call: android.graphics.Canvas.translate(float, float):void A[MD:(float, float):void (c)]\l0x0100: IGET  (r14 I:boolean) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mSpin boolean  (LINE:393)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0102|0x0102: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0113 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0104|0x0104: IGET  (r14 I:boolean) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mVerticalMirror boolean  (LINE:394)\l0x0106: ARITH  (r14 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) ^ (r3 I:??[int, boolean, short, byte, char] A[D('flipToPointRight' boolean)]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0107|0x0107: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x010b \l}"];
Node_57 [shape=record,label="{57\:\ 0x0109|0x0109: CONST  (r14 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x010c|0x010c: CAST (r14 I:float) = (float) (r14 I:int) \l0x010d: ARITH  (r14 I:float) = (r14 I:float) * (r16 I:float A[D('canvasRotate' float)]) \l0x010f: INVOKE  (r1 I:android.graphics.Canvas), (r14 I:float) type: VIRTUAL call: android.graphics.Canvas.rotate(float):void A[MD:(float):void (c)]\l}"];
Node_62 [shape=record,label="{62\:\ 0x011a|0x011a: IGET  (r14 I:android.graphics.Path) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPath android.graphics.Path  (LINE:398)\l0x011c: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('bounds' android.graphics.Rect)]) \l0x011e: IGET  (r2 I:android.graphics.Paint A[D('bounds' android.graphics.Rect)]) = (r0 I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable) androidx.appcompat.graphics.drawable.DrawerArrowDrawable.mPaint android.graphics.Paint \l0x0120: INVOKE  (r1 I:android.graphics.Canvas), (r14 I:android.graphics.Path), (r2 I:android.graphics.Paint) type: VIRTUAL call: android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void A[MD:(android.graphics.Path, android.graphics.Paint):void (c)]\l0x0123: INVOKE  (r19 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.restore():void A[MD:():void (c)] (LINE:400)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0126|RETURN\l|0x0126: RETURN    (LINE:401)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_58 [shape=record,label="{58\:\ 0x010b|0x010b: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0113|0x0113: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flipToPointRight' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x011a  (LINE:395)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0115|0x0115: CONST  (r14 I:??[int, float, short, byte, char]) = (1127481344(0x43340000, float:180.0) ??[int, float, short, byte, char])  (LINE:396)\l0x0117: INVOKE  (r1 I:android.graphics.Canvas), (r14 I:float) type: VIRTUAL call: android.graphics.Canvas.rotate(float):void A[MD:(float):void (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0066|0x0066: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x005f|0x005f: CONST  (r11 I:??[int, float, short, byte, char]) = (\-1020002304(0xffffffffc3340000, float:\-180.0) ??[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0017|0x0017: INVOKE  (r3 I:int) = (r18 I:android.graphics.drawable.Drawable) type: STATIC call: androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(android.graphics.drawable.Drawable):int A[MD:(android.graphics.drawable.Drawable):int (m)] (LINE:337)\l}"];
Node_40 [shape=record,label="{40\:\ 0x001b|0x001b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x001e \l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|0x001d: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|0x001e: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|0x0020: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('flipToPointRight' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:334)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0022|0x0022: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('flipToPointRight' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:331)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.graphics.drawable.DrawerArrowDrawable.draw((r18 'this' I:androidx.appcompat.graphics.drawable.DrawerArrowDrawable A[IMMUTABLE_TYPE, THIS]), (r19 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:58:0x010b \-\> B:59:0x010c, CROSS_EDGE: B:61:0x0115 \-\> B:62:0x011a, CROSS_EDGE: B:60:0x0113 \-\> B:62:0x011a, CROSS_EDGE: B:52:0x0066 \-\> B:53:0x0067, CROSS_EDGE: B:49:0x005f \-\> B:50:0x0061, CROSS_EDGE: B:37:0x0013 \-\> B:45:0x0024, CROSS_EDGE: B:42:0x001e \-\> B:46:0x0025, CROSS_EDGE: B:40:0x001b \-\> B:42:0x001e, CROSS_EDGE: B:43:0x0020 \-\> B:46:0x0025, CROSS_EDGE: B:44:0x0022 \-\> B:46:0x0025\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0020: r3 'flipToPointRight' Z\l  0x0021\-0x0022: r3 'flipToPointRight' Z\l  0x0023\-0x0024: r3 'flipToPointRight' Z\l  0x006d\-0x0070: r11 'canvasRotate' F\l  0x0008\-0x011e: r2 'bounds' Landroid\/graphics\/Rect;\l  0x0025\-0x0133: r3 'flipToPointRight' Z\l  0x0033\-0x0133: r4 'arrowHeadBarLength' F\l  0x0089\-0x0133: r5 'arrowHeight' F\l  0x00a0\-0x0133: r6 'topBottomBarOffset' F\l  0x0045\-0x0133: r7 'arrowShaftLength' F\l  0x0053\-0x0133: r8 'arrowShaftCut' F\l  0x005b\-0x0133: r9 'rotation' F\l  0x007c\-0x0133: r10 'arrowWidth' F\l  0x00d9\-0x0133: r11 'barThickness' F\l  0x00eb\-0x0133: r12 'remainingSpace' I\l  0x00a4\-0x0133: r13 'arrowEdge' F\l  0x00f0\-0x0133: r15 'yOffset' F\l  0x0070\-0x0133: r16 'canvasRotate' F\l  0x011e\-0x0133: r17 'bounds' Landroid\/graphics\/Rect;\l  \-1 \-0x0133: r19 'canvas' Landroid\/graphics\/Canvas;\lMETHOD_OVERRIDE: [ClspMth\{android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_39;
Node_35 -> Node_43;
Node_35 -> Node_44;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_45;
Node_38 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_60;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_59;
Node_59 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_33;
Node_58 -> Node_59;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_52 -> Node_53;
Node_49 -> Node_50;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_46;
Node_43 -> Node_46;
Node_44 -> Node_46;
}

