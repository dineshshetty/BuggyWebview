digraph "CFG forandroidx.appcompat.view.menu.CascadingMenuPopup.dismiss()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = r5.mShowingMenus.size()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r0 \<= 0) goto L14\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo[] r1 = (androidx.appcompat.view.menu.CascadingMenuPopup.CascadingMenuInfo[]) r5.mShowingMenus.toArray(new androidx.appcompat.view.menu.CascadingMenuPopup.CascadingMenuInfo[r0])\lint r2 = r0 + (\-1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|LOOP_START\lLOOP:0: B:5:0x0014\-\>B:9:0x0025\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:4:0x0008, B:9:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L11\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|r3 = r1[r2]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r3.window.isShowing() == false) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|r3.window.dismiss()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|LOOP_END\lLOOP:0: B:5:0x0014\-\>B:9:0x0025\l|int r2 = r2 + (\-1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.CascadingMenuPopup.dismiss((r5v0 'this' androidx.appcompat.view.menu.CascadingMenuPopup A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0025 \-\> B:5:0x0014, CROSS_EDGE: B:7:0x001e \-\> B:9:0x0025, CROSS_EDGE: B:3:0x0006 \-\> B:10:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.view.menu.ShowableListMenu.dismiss():void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_12;
Node_12 -> Node_9;
Node_9 -> Node_5;
Node_13 -> Node_9;
Node_11 -> Node_14;
Node_14 -> Node_1;
Node_10 -> Node_1;
}

