digraph "CFG forandroidx.appcompat.view.menu.CascadingMenuPopup.\<init\>(Landroid\/content\/Context;Landroid\/view\/View;IIZ)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|r3.mPendingMenus = new java.util.ArrayList()\lr3.mShowingMenus = new java.util.ArrayList()\lr3.mGlobalLayoutListener = new androidx.appcompat.view.menu.CascadingMenuPopup.ViewTreeObserver$OnGlobalLayoutListenerC00571(r3)\lr3.mAttachStateChangeListener = new androidx.appcompat.view.menu.CascadingMenuPopup.View$OnAttachStateChangeListenerC00582(r3)\lr3.mMenuItemHoverListener = new androidx.appcompat.view.menu.CascadingMenuPopup.C00593(r3)\lr3.mRawDropDownGravity = 0\lr3.mDropDownGravity = 0\lr3.mContext = r4\lr3.mAnchorView = r5\lr3.mPopupStyleAttr = r6\lr3.mPopupStyleRes = r7\lr3.mOverflowOnly = r8\lr3.mForceShowIcon = false\lr3.mLastPosition = getInitialMenuPosition()\landroid.content.res.Resources r0 = r4.getResources()\lr3.mMenuMaxWidth = java.lang.Math.max(r0.getDisplayMetrics().widthPixels \/ 2, r0.getDimensionPixelSize(androidx.appcompat.C0019R.dimen.abc_config_prefDialogWidth))\lr3.mSubMenuHoverHandler = new android.os.Handler()\l}"];
Node_3 [shape=record,label="{3\:\ 0x005c|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.CascadingMenuPopup.\<init\>((r3v0 'this' androidx.appcompat.view.menu.CascadingMenuPopup A[IMMUTABLE_TYPE, THIS]), (r4v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'anchor' android.view.View A[D('anchor' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'popupStyleAttr' int A[D('popupStyleAttr' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'popupStyleRes' int A[D('popupStyleRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'overflowOnly' boolean A[D('overflowOnly' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

