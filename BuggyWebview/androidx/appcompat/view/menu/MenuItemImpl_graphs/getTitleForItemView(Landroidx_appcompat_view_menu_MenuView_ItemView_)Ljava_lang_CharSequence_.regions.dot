digraph "CFG forandroidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(Landroidx\/appcompat\/view\/menu\/MenuView$ItemView;)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_1444877766 {
label = "R(1:(2:(1:5)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1333576415 {
label = "R(2:(1:5)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1229754225 {
label = "IF [B:11:0x0000, B:13:0x0006] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|if (r2 != null) goto L2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|ADDED_TO_REGION\l|if (r2.prefersCondensedTitle() != false) goto L4\l}"];
subgraph cluster_Region_79080244 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return getTitleCondensed()\l}"];
}
}
subgraph cluster_Region_715730753 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0011|RETURN\lORIG_RETURN\l|return getTitle()\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0002}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0008}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000d}"];
MethodNode[shape=record,label="{public java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView((r1v0 'this' androidx.appcompat.view.menu.MenuItemImpl A[IMMUTABLE_TYPE, THIS]), (r2v0 'itemView' androidx.appcompat.view.menu.MenuView$ItemView A[D('itemView' androidx.appcompat.view.menu.MenuView$ItemView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:16:0x0011, CROSS_EDGE: B:11:0x0000 \-\> B:15:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_17 -> Node_10;
Node_16 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_17;
Node_15 -> Node_16;
}

