digraph "CFG forandroidx.appcompat.view.menu.MenuItemImpl.collapseActionView()Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000}"];
Node_20 [shape=record,label="{20\:\ 0x0005|if ((r2.mShowAsAction & 8) != 0) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x0007|RETURN\l|return false\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0008}"];
Node_23 [shape=record,label="{23\:\ 0x000a|if (r2.mActionView != null) goto L8\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|RETURN\l|return true\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|android.view.MenuItem$OnActionExpandListener r0 = r2.mOnActionExpandListener\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|if (r0 == null) goto L13\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012}"];
Node_29 [shape=record,label="{29\:\ 0x0016|if (r0.onMenuItemActionCollapse(r2) == false) goto L12\l}"];
Node_31 [shape=record,label="{31\:\ 0x0019|RETURN\l|return false\l}"];
Node_32 [shape=record,label="{32\:\ 0x001a}"];
Node_33 [shape=record,label="{33\:\ 0x0020|RETURN\l|return r2.mMenu.collapseItemActionView(r2)\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.view.menu.MenuItemImpl.collapseActionView((r2v0 'this' androidx.appcompat.view.menu.MenuItemImpl A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x000d \-\> B:18:?, CROSS_EDGE: B:31:0x0019 \-\> B:18:?, CROSS_EDGE: B:33:0x0020 \-\> B:18:?, CROSS_EDGE: B:27:0x0010 \-\> B:32:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.MenuItem.collapseActionView():boolean\}]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_18;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_32[style=dashed];
Node_31 -> Node_18;
Node_32 -> Node_33;
Node_33 -> Node_18;
}

