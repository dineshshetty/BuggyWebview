digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.hasVisibleItems()Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r5.mOverrideVisibleItems == false) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|RETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|int r0 = size()\lr2 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|LOOP_START\lLOOP:0: B:21:0x000b\-\>B:25:0x001c\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:20:0x0006, B:25:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|androidx.appcompat.view.menu.MenuItemImpl r3 = r5.mItems.get(r2)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|if (r3.isVisible() == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|LOOP_END\lLOOP:0: B:21:0x000b\-\>B:25:0x001c\l|int r2 = r2 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.appcompat.view.menu.MenuBuilder.hasVisibleItems((r5v0 'this' androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:24:0x001b \-\> B:16:?, BACK_EDGE: B:25:0x001c \-\> B:21:0x000b, CROSS_EDGE: B:27:0x0020 \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.Menu.hasVisibleItems():boolean\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_28[style=dashed];
Node_25 -> Node_21;
Node_28 -> Node_24;
Node_24 -> Node_16;
Node_29 -> Node_26;
Node_26 -> Node_16;
}

