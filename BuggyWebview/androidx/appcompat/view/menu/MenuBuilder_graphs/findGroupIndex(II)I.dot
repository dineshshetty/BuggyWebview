digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.findGroupIndex(II)I" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = size()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r6 \>= 0) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|r6 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|PHI: r6 \l  PHI: (r6v1 'start' int) = (r6v0 'start' int), (r6v2 'start' int) binds: [B:18:0x0004, B:19:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008|LOOP_START\lLOOP:0: B:21:0x0008\-\>B:25:0x0019\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v3 'i' int) binds: [B:20:0x0007, B:25:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x000a|androidx.appcompat.view.menu.MenuItemImpl r2 = r4.mItems.get(r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|if (r2.getGroupId() != r5) goto L8\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|LOOP_END\lLOOP:0: B:21:0x0008\-\>B:25:0x0019\l|int r1 = r1 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|RETURN\l|return r1\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|RETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{public int androidx.appcompat.view.menu.MenuBuilder.findGroupIndex((r4v0 'this' androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r5v0 'group' int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'start' int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0019 \-\> B:21:0x0008, CROSS_EDGE: B:27:0x001d \-\> B:16:?, CROSS_EDGE: B:18:0x0004 \-\> B:20:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_28[style=dashed];
Node_25 -> Node_21;
Node_28 -> Node_24;
Node_24 -> Node_16;
Node_29 -> Node_26;
Node_26 -> Node_16;
}

