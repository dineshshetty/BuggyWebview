digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.add(IIII)Landroid\/view\/MenuItem;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.content.res.Resources) = (r1 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mResources android.content.res.Resources  (LINE:483)\l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:android.content.res.Resources), (r5 I:int A[D('title' int)]) type: VIRTUAL call: android.content.res.Resources.getString(int):java.lang.String A[MD:(int):java.lang.String throws android.content.res.Resources$NotFoundException (c)]\l0x0006: INVOKE  (r0 I:android.view.MenuItem) = \l  (r1 I:androidx.appcompat.view.menu.MenuBuilder)\l  (r2 I:int A[D('group' int)])\l  (r3 I:int A[D('id' int)])\l  (r4 I:int A[D('categoryOrder' int)])\l  (r0 I:java.lang.CharSequence)\l type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.addInternal(int, int, int, java.lang.CharSequence):android.view.MenuItem A[MD:(int, int, int, java.lang.CharSequence):android.view.MenuItem (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:android.view.MenuItem) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public android.view.MenuItem androidx.appcompat.view.menu.MenuBuilder.add((r1 'this' I:androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('categoryOrder' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('title' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r2 'group' I\l  \-1 \-0x000a: r3 'id' I\l  \-1 \-0x000a: r4 'categoryOrder' I\l  \-1 \-0x000a: r5 'title' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.Menu.add(int, int, int, int):android.view.MenuItem\}]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

