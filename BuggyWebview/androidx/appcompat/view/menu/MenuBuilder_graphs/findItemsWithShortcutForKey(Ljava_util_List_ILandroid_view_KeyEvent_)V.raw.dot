digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.findItemsWithShortcutForKey(Ljava\/util\/List;ILandroid\/view\/KeyEvent;)V" {
Node_44 [shape=record,label="{44\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY])  (LINE:884)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('items' java.util.List\<androidx.appcompat.view.menu.MenuItemImpl\>)]) \l0x0004: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('keyCode' int)]) \l0x0006: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('event' android.view.KeyEvent)]) \l0x0008: INVOKE  (r4 I:boolean) = (r17 I:androidx.appcompat.view.menu.MenuBuilder) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.isQwertyMode():boolean A[MD:():boolean (m)]\l0x000c: INVOKE  (r5 I:int) = (r20 I:android.view.KeyEvent A[D('event' android.view.KeyEvent)]) type: VIRTUAL call: android.view.KeyEvent.getModifiers():int A[MD:():int (c)] (LINE:885)\l0x0010: NEW_INSTANCE  (r6 I:android.view.KeyCharacterMap$KeyData) =  android.view.KeyCharacterMap$KeyData  (LINE:886)\l0x0012: INVOKE  (r6 I:android.view.KeyCharacterMap$KeyData) type: DIRECT call: android.view.KeyCharacterMap.KeyData.\<init\>():void A[MD:():void (c)]\l0x0015: INVOKE  (r7 I:boolean) = \l  (r3 I:android.view.KeyEvent)\l  (r6 I:android.view.KeyCharacterMap$KeyData A[D('possibleChars' android.view.KeyCharacterMap$KeyData)])\l type: VIRTUAL call: android.view.KeyEvent.getKeyData(android.view.KeyCharacterMap$KeyData):boolean A[MD:(android.view.KeyCharacterMap$KeyData):boolean (c)] (LINE:888)\l0x0019: CONST  (r8 I:??[int, float, short, byte, char]) = (67 ??[int, float, short, byte, char])  (LINE:890)\l}"];
Node_47 [shape=record,label="{47\:\ 0x001b|0x001b: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isKeyCodeMapped' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0020 \l}"];
Node_48 [shape=record,label="{48\:\ 0x001d|0x001d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0020 \l}"];
Node_49 [shape=record,label="{49\:\ 0x001f|RETURN\l|0x001f: RETURN    (LINE:891)\l}"];
Node_45 [shape=record,label="{45\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0020|0x0020: IGET  (r9 I:java.util.ArrayList\<androidx.appcompat.view.menu.MenuItemImpl\>) = (r0 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItems java.util.ArrayList  (LINE:895)\l0x0022: INVOKE  (r9 I:int) = (r9 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0026: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:896)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0027|LOOP_START\lLOOP:0: B:51:0x0027\-\>B:78:0x0086\l|0x0027: IF  (r10 I:??[int, byte, short, char] A[D('i' int)]) \>= (r9 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:80:0x0089 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0029|0x0029: IGET  (r11 I:java.util.ArrayList\<androidx.appcompat.view.menu.MenuItemImpl\>) = (r0 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItems java.util.ArrayList  (LINE:897)\l0x002b: INVOKE  (r11 I:java.lang.Object) = (r11 I:java.util.ArrayList), (r10 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x002f: CHECK_CAST (r11 I:androidx.appcompat.view.menu.MenuItemImpl) = (androidx.appcompat.view.menu.MenuItemImpl) (r11 I:??[OBJECT, ARRAY]) \l0x0031: INVOKE  (r12 I:boolean) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.hasSubMenu():boolean A[MD:():boolean (m)] (LINE:898)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0035|0x0035: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0040 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0037|0x0037: INVOKE  (r12 I:android.view.SubMenu) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():android.view.SubMenu A[MD:():android.view.SubMenu (m)] (LINE:899)\l0x003b: CHECK_CAST (r12 I:androidx.appcompat.view.menu.MenuBuilder) = (androidx.appcompat.view.menu.MenuBuilder) (r12 I:??[OBJECT, ARRAY]) \l0x003d: INVOKE  (r12 I:androidx.appcompat.view.menu.MenuBuilder), (r1 I:java.util.List), (r2 I:int), (r3 I:android.view.KeyEvent) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.findItemsWithShortcutForKey(java.util.List, int, android.view.KeyEvent):void A[MD:(java.util.List\<androidx.appcompat.view.menu.MenuItemImpl\>, int, android.view.KeyEvent):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0040|0x0040: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('qwerty' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0047  (LINE:902)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0042|0x0042: INVOKE  (r12 I:char) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():char A[MD:():char (m)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x004b|0x004b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('qwerty' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0052  (LINE:904)\l}"];
Node_59 [shape=record,label="{59\:\ 0x004d|0x004d: INVOKE  (r13 I:int) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticModifiers():int A[MD:():int (m)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0056|0x0056: CONST  (r14 I:??[int, float, short, byte, char]) = (69647(0x1100f, float:9.7596E\-41) ??[int, float, short, byte, char])  (LINE:905)\l0x0059: ARITH  (r15 I:??[int, boolean]) = (r5 I:??[int, boolean, short, byte, char] A[D('modifierState' int)]) & (r14 I:??[int, boolean, short, byte, char]) \l0x005b: ARITH  (r14 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) & (r13 I:??[int, boolean, short, byte, char] A[D('shortcutModifiers' int)]) \l0x005c: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x005e|0x005e: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0062 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0060|0x0060: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0063|0x0063: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isModifiersExactMatch' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x0086  (LINE:907)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0065|0x0065: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shortcutChar' char)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x0086 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0067|0x0067: IGET  (r15 I:char[]) = (r6 I:android.view.KeyCharacterMap$KeyData A[D('possibleChars' android.view.KeyCharacterMap$KeyData)]) android.view.KeyCharacterMap.KeyData.meta char[] \l0x0069: AGET  (r15 I:char A[IMMUTABLE_TYPE]) = (r15 I:char[] A[IMMUTABLE_TYPE]), (r16 I:??[int, short, byte, char]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x006b|0x006b: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shortcutChar' char)]) == (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x007d \l}"];
Node_69 [shape=record,label="{69\:\ 0x006d|0x006d: IGET  (r15 I:char[]) = (r6 I:android.view.KeyCharacterMap$KeyData A[D('possibleChars' android.view.KeyCharacterMap$KeyData)]) android.view.KeyCharacterMap.KeyData.meta char[] \l0x006f: CONST  (r16 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0071: AGET  (r15 I:char A[IMMUTABLE_TYPE]) = (r15 I:char[] A[IMMUTABLE_TYPE]), (r16 I:??[int, short, byte, char]) \l}"];
Node_70 [shape=record,label="{70\:\ 0x0073|0x0073: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shortcutChar' char)]) == (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x007d \l}"];
Node_71 [shape=record,label="{71\:\ 0x0075|0x0075: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('qwerty' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0086 \l}"];
Node_72 [shape=record,label="{72\:\ 0x0077|0x0077: CONST  (r15 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x0079|0x0079: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shortcutChar' char)]) != (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x0086 \l}"];
Node_74 [shape=record,label="{74\:\ 0x007b|0x007b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0086 \l}"];
Node_86 [shape=record,label="{86\:\ 0x0086|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x0086|LOOP_END\lLOOP:0: B:51:0x0027\-\>B:78:0x0086\l|0x0086: ARITH  (r10 I:int) = (r10 I:int A[D('i' int)]) + (1 int)  (LINE:896)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0086|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x0086|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x007d|0x007d: INVOKE  (r15 I:boolean) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.isEnabled():boolean A[MD:():boolean (m)] (LINE:912)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0081|0x0081: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0086 \l}"];
Node_77 [shape=record,label="{77\:\ 0x0083|0x0083: INVOKE  (r1 I:java.util.List), (r11 I:java.lang.Object A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:913)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0086|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0086|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0086|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0086|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0062|0x0062: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0052|0x0052: INVOKE  (r13 I:int) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getNumericModifiers():int A[MD:():int (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0047|0x0047: INVOKE  (r12 I:char) = (r11 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():char A[MD:():char (m)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x0089|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x0089|RETURN\l|0x0089: RETURN    (LINE:916)\l}"];
MethodNode[shape=record,label="{void androidx.appcompat.view.menu.MenuBuilder.findItemsWithShortcutForKey((r17 'this' I:androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r18 I:java.util.List\<androidx.appcompat.view.menu.MenuItemImpl\> A[D('items' java.util.List\<androidx.appcompat.view.menu.MenuItemImpl\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('keyCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:android.view.KeyEvent A[D('event' android.view.KeyEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:78:0x0086 \-\> B:51:0x0027, CROSS_EDGE: B:76:0x0081 \-\> B:78:0x0086, CROSS_EDGE: B:74:0x007b \-\> B:78:0x0086, CROSS_EDGE: B:73:0x0079 \-\> B:78:0x0086, CROSS_EDGE: B:71:0x0075 \-\> B:78:0x0086, CROSS_EDGE: B:70:0x0073 \-\> B:75:0x007d, CROSS_EDGE: B:68:0x006b \-\> B:75:0x007d, CROSS_EDGE: B:66:0x0065 \-\> B:78:0x0086, CROSS_EDGE: B:65:0x0063 \-\> B:78:0x0086, CROSS_EDGE: B:64:0x0062 \-\> B:65:0x0063, CROSS_EDGE: B:60:0x0052 \-\> B:61:0x0056, CROSS_EDGE: B:57:0x0047 \-\> B:58:0x004b, CROSS_EDGE: B:53:0x0035 \-\> B:55:0x0040, CROSS_EDGE: B:79:0x0089 \-\> B:45:?, CROSS_EDGE: B:47:0x001b \-\> B:50:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0031\-0x0086: r11 'item' Landroidx\/appcompat\/view\/menu\/MenuItemImpl;\l  0x004b\-0x0086: r12 'shortcutChar' C\l  0x0056\-0x0086: r13 'shortcutModifiers' I\l  0x0063\-0x0086: r14 'isModifiersExactMatch' Z\l  0x0027\-0x0089: r10 'i' I\l  0x000c\-0x0089: r4 'qwerty' Z\l  0x0010\-0x0089: r5 'modifierState' I\l  0x0015\-0x0089: r6 'possibleChars' Landroid\/view\/KeyCharacterMap$KeyData;\l  0x0019\-0x0089: r7 'isKeyCodeMapped' Z\l  0x0026\-0x0089: r9 'N' I\l  0x0000\-0x0089: r18 'items' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/appcompat\/view\/menu\/MenuItemImpl;\>;\l  \-1 \-0x0089: r19 'keyCode' I\l  \-1 \-0x0089: r20 'event' Landroid\/view\/KeyEvent;\lSIGNATURE: (Ljava\/util\/List\<Landroidx\/appcompat\/view\/menu\/MenuItemImpl;\>;ILandroid\/view\/KeyEvent;)V\l}"];
MethodNode -> Node_44;Node_44 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_50;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_45;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_80;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_82;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_83;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_75;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_75;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_84;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_85;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_86;
Node_86 -> Node_78;
Node_78 -> Node_51;
Node_85 -> Node_78;
Node_84 -> Node_78;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_87;
Node_77 -> Node_81;
Node_81 -> Node_78;
Node_87 -> Node_78;
Node_83 -> Node_78;
Node_82 -> Node_78;
Node_64 -> Node_65;
Node_60 -> Node_61;
Node_57 -> Node_58;
Node_80 -> Node_79;
Node_79 -> Node_45;
}

