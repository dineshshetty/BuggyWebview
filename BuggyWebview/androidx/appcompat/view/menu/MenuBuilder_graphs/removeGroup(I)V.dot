digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.removeGroup(I)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = findGroupIndex(r5)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r0 \< 0) goto L14\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|int r1 = r4.mItems.size() \- r0\lr2 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|LOOP_START\lLOOP:0: B:20:0x000e\-\>B:24:0x0020\lPHI: r2 \l  PHI: (r2v1 'numRemoved' int) = (r2v0 'numRemoved' int), (r2v8 'numRemoved' int) binds: [B:19:0x0006, B:24:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = r2 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|if (r2 \>= r1) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012}"];
Node_23 [shape=record,label="{23\:\ 0x001e|if (r4.mItems.get(r0).getGroupId() != r5) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|LOOP_END\lLOOP:0: B:20:0x000e\-\>B:24:0x0020\l|removeItemAtInt(r0, false)\lr2 = r3\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0026|onItemsChanged(true)\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|RETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.MenuBuilder.removeGroup((r4v0 'this' androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r5v0 'group' int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:24:0x0020 \-\> B:20:0x000e, CROSS_EDGE: B:21:0x0010 \-\> B:25:0x0026, CROSS_EDGE: B:18:0x0004 \-\> B:26:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.Menu.removeGroup(int):void\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_20;
Node_28 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_27 -> Node_25;
Node_29 -> Node_16;
}

