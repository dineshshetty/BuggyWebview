digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.setGroupCheckable(IZZ)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.appcompat.view.menu.MenuItemImpl\>) = (r4 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItems java.util.ArrayList  (LINE:634)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:636)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|LOOP_START\lLOOP:0: B:15:0x0007\-\>B:19:0x001d\l|0x0007: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:21:0x0020 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: IGET  (r2 I:java.util.ArrayList\<androidx.appcompat.view.menu.MenuItemImpl\>) = (r4 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItems java.util.ArrayList  (LINE:637)\l0x000b: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r2 I:androidx.appcompat.view.menu.MenuItemImpl) = (androidx.appcompat.view.menu.MenuItemImpl) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r3 I:int) = (r2 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)]) type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.getGroupId():int A[MD:():int (m)] (LINE:638)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('group' int)])  \-\> B:23:0x001d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: INVOKE  \l  (r2 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)])\l  (r7 I:boolean A[D('exclusive' boolean)])\l type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):void A[MD:(boolean):void (m)] (LINE:639)\l0x001a: INVOKE  \l  (r2 I:androidx.appcompat.view.menu.MenuItemImpl A[D('item' androidx.appcompat.view.menu.MenuItemImpl)])\l  (r6 I:boolean A[D('checkable' boolean)])\l type: VIRTUAL call: androidx.appcompat.view.menu.MenuItemImpl.setCheckable(boolean):android.view.MenuItem A[MD:(boolean):android.view.MenuItem (m)] (LINE:640)\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|LOOP_END\lLOOP:0: B:15:0x0007\-\>B:19:0x001d\l|0x001d: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:636)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|RETURN\l|0x0020: RETURN    (LINE:643)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.MenuBuilder.setGroupCheckable((r4 'this' I:androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('group' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('checkable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('exclusive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x001d \-\> B:15:0x0007, CROSS_EDGE: B:17:0x0015 \-\> B:19:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001d: r2 'item' Landroidx\/appcompat\/view\/menu\/MenuItemImpl;\l  0x0007\-0x0020: r1 'i' I\l  0x0006\-0x0020: r0 'N' I\l  \-1 \-0x0020: r5 'group' I\l  \-1 \-0x0020: r6 'checkable' Z\l  \-1 \-0x0020: r7 'exclusive' Z\lMETHOD_OVERRIDE: [ClspMth\{android.view.Menu.setGroupCheckable(int, boolean, boolean):void\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

