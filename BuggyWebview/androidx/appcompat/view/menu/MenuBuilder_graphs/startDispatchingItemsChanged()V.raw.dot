digraph "CFG forandroidx.appcompat.view.menu.MenuBuilder.startDispatchingItemsChanged()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1088)\l0x0001: IPUT  (r0 I:boolean), (r2 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mPreventDispatchingItemsChanged boolean \l0x0003: IGET  (r1 I:boolean) = (r2 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItemsChangedWhileDispatchPrevented boolean  (LINE:1090)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|0x0007: IPUT  (r0 I:boolean), (r2 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mItemsChangedWhileDispatchPrevented boolean  (LINE:1091)\l0x0009: IGET  (r0 I:boolean) = (r2 I:androidx.appcompat.view.menu.MenuBuilder) androidx.appcompat.view.menu.MenuBuilder.mStructureChangedWhileDispatchPrevented boolean  (LINE:1092)\l0x000b: INVOKE  (r2 I:androidx.appcompat.view.menu.MenuBuilder), (r0 I:boolean) type: VIRTUAL call: androidx.appcompat.view.menu.MenuBuilder.onItemsChanged(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|RETURN\lORIG_RETURN\l|0x000e: RETURN    (LINE:1094)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000e: RETURN   A[SYNTHETIC] (LINE:1094)\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.MenuBuilder.startDispatchingItemsChanged((r2 'this' I:androidx.appcompat.view.menu.MenuBuilder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0005 \-\> B:12:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

