digraph "CFG forandroidx.appcompat.view.menu.MenuPopup.shouldPreserveIconSpacing(Landroidx\/appcompat\/view\/menu\/MenuBuilder;)Z" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|int r1 = r5.size()\lr2 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|LOOP_START\lLOOP:0: B:19:0x0006\-\>B:25:0x001a\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:18:0x0000, B:25:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L13\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|android.view.MenuItem r3 = r5.getItem(r2)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|if (r3.isVisible() == false) goto L12\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012}"];
Node_23 [shape=record,label="{23\:\ 0x0016|if (r3.getIcon() == null) goto L10\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|RETURN\lORIG_RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|LOOP_END\lLOOP:0: B:19:0x0006\-\>B:25:0x001a\l|int r2 = r2 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean androidx.appcompat.view.menu.MenuPopup.shouldPreserveIconSpacing((r5v0 'menu' androidx.appcompat.view.menu.MenuBuilder A[D('menu' androidx.appcompat.view.menu.MenuBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x001a \-\> B:19:0x0006, CROSS_EDGE: B:21:0x0010 \-\> B:25:0x001a, CROSS_EDGE: B:19:0x0006 \-\> B:26:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_28[style=dashed];
Node_23 -> Node_30;
Node_28 -> Node_24;
Node_24 -> Node_17;
Node_30 -> Node_25;
Node_25 -> Node_19;
Node_29 -> Node_25;
Node_27 -> Node_31;
Node_31 -> Node_17;
}

