digraph "CFG forandroidx.appcompat.view.menu.StandardMenuPopup.1.onGlobalLayout()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.this$0.isShowing() == false) goto L15\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r2.this$0.mPopup.isModal() != false) goto L14\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|android.view.View r0 = r2.this$0.mShownAnchorView\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r0 == null) goto L12\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r0.isShown() != false) goto L9\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|r2.this$0.mPopup.show()\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|r2.this$0.dismiss()\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.StandardMenuPopup.1.onGlobalLayout((r2v0 'this' androidx.appcompat.view.menu.StandardMenuPopup$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:12:0x0027 \-\> B:13:0x002c, CROSS_EDGE: B:7:0x0016 \-\> B:12:0x0027, CROSS_EDGE: B:5:0x0010 \-\> B:13:0x002c, CROSS_EDGE: B:3:0x0006 \-\> B:13:0x002c\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewTreeObserver.OnGlobalLayoutListener.onGlobalLayout():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_16 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_15 -> Node_1;
Node_14 -> Node_1;
}

