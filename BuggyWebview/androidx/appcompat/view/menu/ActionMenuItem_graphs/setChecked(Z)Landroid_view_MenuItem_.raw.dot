digraph "CFG forandroidx.appcompat.view.menu.ActionMenuItem.setChecked(Z)Landroid\/view\/MenuItem;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.appcompat.view.menu.ActionMenuItem) androidx.appcompat.view.menu.ActionMenuItem.mFlags int  (LINE:205)\l0x0002: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (\-3 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('checked' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|0x0009: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) \| (r1 I:??[int, boolean, short, byte, char]) \l0x000a: IPUT  (r0 I:int), (r2 I:androidx.appcompat.view.menu.ActionMenuItem) androidx.appcompat.view.menu.ActionMenuItem.mFlags int \l}"];
Node_15 [shape=record,label="{15\:\ 0x000c|RETURN\l|0x000c: RETURN  (r2 I:android.view.MenuItem)  (LINE:206)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public android.view.MenuItem androidx.appcompat.view.menu.ActionMenuItem.setChecked((r2 'this' I:androidx.appcompat.view.menu.ActionMenuItem A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[D('checked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0008 \-\> B:14:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000c: r3 'checked' Z\lMETHOD_OVERRIDE: [ClspMth\{android.view.MenuItem.setChecked(boolean):android.view.MenuItem\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

