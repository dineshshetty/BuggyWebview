digraph "CFG forandroidx.appcompat.view.menu.MenuAdapter.getView(ILandroid\/view\/View;Landroid\/view\/ViewGroup;)Landroid\/view\/View;" {
subgraph cluster_Region_634812518 {
label = "R(7:(1:3)|4|5|11|(1:13)|14|15)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1958685443 {
label = "IF [B:22:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0001|if (r8 == null) goto L3\l}"];
subgraph cluster_Region_379994172 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0003|android.view.View r8 = r6.mInflater.inflate(r6.mItemLayoutRes, r9, false)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x000b|PHI: r8 \l  PHI: (r8v1 'convertView' android.view.View) = (r8v0 'convertView' android.view.View), (r8v2 'convertView' android.view.View) binds: [B:22:0x0001, B:23:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|int int r1 = getItem(r7).getGroupId()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|int r2 = r7 + (\-1) \>= 0 ? getItem(r7 \- 1).getGroupId() : r1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0034|PHI: r4 \l  PHI: (r4v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|((androidx.appcompat.view.menu.ListMenuItemView) r8).setGroupDividerEnabled(r6.mAdapterMenu.isGroupDividerEnabled() && r1 != r2)\landroidx.appcompat.view.menu.MenuView$ItemView androidx.appcompat.view.menu.MenuView.ItemView r3 = (androidx.appcompat.view.menu.MenuView.ItemView) r8\l}"];
subgraph cluster_IfRegion_1763627896 {
label = "IF [B:34:0x003c] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x003c|if (r6.mForceShowIcon != false) goto L13\l}"];
subgraph cluster_Region_2075543940 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x003e|((androidx.appcompat.view.menu.ListMenuItemView) r8).setForceShowIcon(true)\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x0044|r3.initialize(getItem(r7), 0)\l}"];
Node_37 [shape=record,label="{37\:\ 0x004b|RETURN\l|return r8\l}"];
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0000}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0017}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0023|PHI: r2 \l  PHI: (r2v2 'prevGroupId' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x002d}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x002f|REMOVE\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0031}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0033}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0022}"];
MethodNode[shape=record,label="{public android.view.View androidx.appcompat.view.menu.MenuAdapter.getView((r6v0 'this' androidx.appcompat.view.menu.MenuAdapter A[IMMUTABLE_TYPE, THIS]), (r7v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'convertView' android.view.View A[D('convertView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'parent' android.view.ViewGroup A[D('parent' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:34:0x003c \-\> B:36:0x0044, CROSS_EDGE: B:32:0x0033 \-\> B:33:0x0034, CROSS_EDGE: B:29:0x002d \-\> B:32:0x0033, CROSS_EDGE: B:27:0x0022 \-\> B:28:0x0023, CROSS_EDGE: B:22:0x0001 \-\> B:24:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.widget.Adapter.getView(int, android.view.View, android.view.ViewGroup):android.view.View\}]\l}"];
MethodNode -> Node_19;Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_27;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_27 -> Node_28;
}

