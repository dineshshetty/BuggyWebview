digraph "CFG forandroidx.appcompat.view.menu.ListMenuItemView.setShortcut(ZC)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|if (r4 == false) goto L13\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r3.mItemData.shouldShowShortcut() == false) goto L13\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|r0 = 0\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 'newVisibility' int) = (r0v0 'newVisibility' int), (r0v4 'newVisibility' int) binds: [B:20:0x000c, B:19:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != 0) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|r3.mShortcutView.setText(r3.mItemData.getShortcutLabel())\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b}"];
Node_24 [shape=record,label="{24\:\ 0x0021|if (r3.mShortcutView.getVisibility() == r0) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|r3.mShortcutView.setVisibility(r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0028|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|r0 = 8\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.ListMenuItemView.setShortcut((r3v0 'this' androidx.appcompat.view.menu.ListMenuItemView A[IMMUTABLE_TYPE, THIS]), (r4v0 'showShortcut' boolean A[D('showShortcut' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'shortcutKey' char A[D('shortcutKey' char), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0021 \-\> B:26:0x0028, CROSS_EDGE: B:21:0x000e \-\> B:23:0x001b, CROSS_EDGE: B:20:0x000c \-\> B:21:0x000e, CROSS_EDGE: B:16:0x0000 \-\> B:20:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.view.menu.MenuView.ItemView.setShortcut(boolean, char):void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_20 -> Node_21;
}

