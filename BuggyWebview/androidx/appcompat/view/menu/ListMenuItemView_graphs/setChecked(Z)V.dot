digraph "CFG forandroidx.appcompat.view.menu.ListMenuItemView.setChecked(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0006|if (r1.mItemData.isExclusiveCheckable() == false) goto L10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r1.mRadioButton != null) goto L6\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|insertRadioButton()\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|android.widget.RadioButton r0 = r1.mRadioButton\l}"];
Node_26 [shape=record,label="{26\:\ 0x001b|PHI: r0 \l  PHI: (r0v4 'compoundButton' android.widget.CompoundButton) = (r0v3 'compoundButton' android.widget.CompoundButton), (r0v6 'compoundButton' android.widget.CompoundButton) binds: [B:25:0x0019, B:21:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|r0.setChecked(r2)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|android.widget.CheckBox r0 = r1.mCheckBox\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|if (r0 != null) goto L13\l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|insertCheckBox()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0019|android.widget.CheckBox r0 = r1.mCheckBox\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.menu.ListMenuItemView.setChecked((r1v0 'this' androidx.appcompat.view.menu.ListMenuItemView A[IMMUTABLE_TYPE, THIS]), (r2v0 'checked' boolean A[D('checked' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000a \-\> B:21:0x000f, CROSS_EDGE: B:25:0x0019 \-\> B:26:0x001b, CROSS_EDGE: B:23:0x0014 \-\> B:25:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.appcompat.view.menu.MenuView.ItemView.setChecked(boolean):void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

