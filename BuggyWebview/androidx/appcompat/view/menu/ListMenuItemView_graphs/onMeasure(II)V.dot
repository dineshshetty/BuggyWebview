digraph "CFG forandroidx.appcompat.view.menu.ListMenuItemView.onMeasure(II)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r3.mIconView == null) goto L10\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004}"];
Node_18 [shape=record,label="{18\:\ 0x0006|if (r3.mPreserveIconSpacing == false) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|android.view.ViewGroup$LayoutParams r0 = getLayoutParams()\landroid.widget.LinearLayout$LayoutParams r1 = (android.widget.LinearLayout.LayoutParams) r3.mIconView.getLayoutParams()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|if (r0.height \<= 0) goto L10\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018}"];
Node_22 [shape=record,label="{22\:\ 0x001a|if (r1.width \> 0) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|r1.width = r0.height\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020|super.onMeasure(r4, r5)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.appcompat.view.menu.ListMenuItemView.onMeasure((r3v0 'this' androidx.appcompat.view.menu.ListMenuItemView A[IMMUTABLE_TYPE, THIS]), (r4v0 'widthMeasureSpec' int A[D('widthMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'heightMeasureSpec' int A[D('heightMeasureSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:22:0x001a \-\> B:24:0x0020, CROSS_EDGE: B:20:0x0016 \-\> B:24:0x0020, CROSS_EDGE: B:18:0x0006 \-\> B:24:0x0020, CROSS_EDGE: B:16:0x0002 \-\> B:24:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onMeasure(int, int):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

