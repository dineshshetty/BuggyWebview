digraph "CFG forandroidx.appcompat.view.menu.MenuPopupHelper.showPopup(IIZZ)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.appcompat.view.menu.MenuPopup r0 = getPopup()\lr0.setShowTitle(r13)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|if (r12 == false) goto L7\l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|r1 = androidx.core.view.GravityCompat.getAbsoluteGravity(r9.mDropDownGravity, androidx.core.view.ViewCompat.getLayoutDirection(r9.mAnchorView)) & 7\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|if (r1 != 5) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|int r10 = r10 \- r9.mAnchorView.getWidth()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|PHI: r10 \l  PHI: (r10v1 'xOffset' int) = (r10v0 'xOffset' int), (r10v2 'xOffset' int) binds: [B:15:0x0018, B:16:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|r0.setHorizontalOffset(r10)\lr0.setVerticalOffset(r11)\lfloat r2 = r9.mContext.getResources().getDisplayMetrics().density\lint r3 = (int) ((48.0f * r2) \/ 2.0f)\landroid.graphics.Rect r4 = new android.graphics.Rect(r10 \- r3, r11 \- r3, r10 + r3, r11 + r3)\lr0.setEpicenterBounds(r4)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|r0.show()\l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.view.menu.MenuPopupHelper.showPopup((r9v0 'this' androidx.appcompat.view.menu.MenuPopupHelper A[IMMUTABLE_TYPE, THIS]), (r10v0 'xOffset' int A[D('xOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'yOffset' int A[D('yOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'useOffsets' boolean A[D('useOffsets' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'showTitle' boolean A[D('showTitle' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0018 \-\> B:17:0x0021, CROSS_EDGE: B:13:0x0007 \-\> B:18:0x004b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

