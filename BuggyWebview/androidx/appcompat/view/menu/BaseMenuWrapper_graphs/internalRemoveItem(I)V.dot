digraph "CFG forandroidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem(I)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000}"];
Node_19 [shape=record,label="{19\:\ 0x0002|if (r2.mMenuItems != null) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0005|r0 = 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|LOOP_START\lLOOP:0: B:22:0x0006\-\>B:27:0x0022\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v3 'i' int) binds: [B:21:0x0005, B:27:0x0022] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x000c|if (r0 \>= r2.mMenuItems.size()) goto L14\l}"];
Node_24 [shape=record,label="{24\:\ 0x000e}"];
Node_25 [shape=record,label="{25\:\ 0x001a|if (r2.mMenuItems.keyAt(r0).getItemId() != r3) goto L10\l}"];
Node_27 [shape=record,label="{27\:\ 0x0022|LOOP_END\lLOOP:0: B:22:0x0006\-\>B:27:0x0022\l|int r0 = r0 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c|r2.mMenuItems.removeAt(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|RETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ 0x0025|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public final void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem((r2v0 'this' androidx.appcompat.view.menu.BaseMenuWrapper A[IMMUTABLE_TYPE, THIS]), (r3v0 'id' int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0025 \-\> B:17:?, BACK_EDGE: B:27:0x0022 \-\> B:22:0x0006, CROSS_EDGE: B:23:0x000c \-\> B:28:0x0025\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_17;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_29[style=dashed];
Node_27 -> Node_22;
Node_29 -> Node_26;
Node_26 -> Node_28;
Node_28 -> Node_17;
Node_30 -> Node_31;
Node_31 -> Node_17;
}

