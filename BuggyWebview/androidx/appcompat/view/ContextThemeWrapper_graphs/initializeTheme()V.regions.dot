digraph "CFG forandroidx.appcompat.view.ContextThemeWrapper.initializeTheme()V" {
subgraph cluster_Region_904985128 {
label = "R(3:2|(2:5|(1:7))|8)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0002|boolean r0 = r3.mTheme == null\l}"];
subgraph cluster_IfRegion_1232025689 {
label = "IF [B:18:0x0007] THEN: R(2:5|(1:7)) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0007|PHI: r0 \l  PHI: (r0v2 'first' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L5\l}"];
subgraph cluster_Region_732618099 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0009|r3.mTheme = getResources().newTheme()\landroid.content.res.Resources$Theme android.content.res.Resources.Theme r1 = getBaseContext().getTheme()\l}"];
subgraph cluster_IfRegion_560059000 {
label = "IF [B:20:0x001b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x001b|if (r1 != null) goto L7\l}"];
subgraph cluster_Region_334650822 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x001d|r3.mTheme.setTo(r1)\l}"];
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x0022|onApplyThemeResource(r3.mTheme, r3.mThemeResource, r0)\l}"];
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0000}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0004}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0029}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0006}"];
MethodNode[shape=record,label="{private void androidx.appcompat.view.ContextThemeWrapper.initializeTheme((r3v0 'this' androidx.appcompat.view.ContextThemeWrapper A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x001b \-\> B:22:0x0022, CROSS_EDGE: B:18:0x0007 \-\> B:22:0x0022, CROSS_EDGE: B:17:0x0006 \-\> B:18:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_15 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_18;
Node_23 -> Node_13;
Node_17 -> Node_18;
}

