digraph "CFG forandroidx.appcompat.view.SupportMenuInflater.inflate(ILandroid\/view\/Menu;)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Error inflating menu XML\"  (LINE:119)\l0x0002: INSTANCE_OF  (r1 I:boolean) = (r6 I:??[OBJECT, ARRAY] A[D('menu' android.view.Menu)]) androidx.core.internal.view.SupportMenu \l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x000a \l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|0x0006: INVOKE  \l  (r4 I:android.view.MenuInflater)\l  (r5 I:int A[D('menuRes' int)])\l  (r6 I:android.view.Menu A[D('menu' android.view.Menu)])\l type: SUPER call: android.view.MenuInflater.inflate(int, android.view.Menu):void A[MD:(int, android.view.Menu):void (c)] (LINE:120)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:121)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x000a|0x000a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:124)\l}"];
Node_47 [shape=record,label="{47\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, blocks: (B:32:0x000b), top: B:47:0x000b, outer: #1 \}\lCatch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c\l|0x000b: IGET  (r2 I:android.content.Context) = (r4 I:androidx.appcompat.view.SupportMenuInflater) androidx.appcompat.view.SupportMenuInflater.mContext android.content.Context A[Catch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, TRY_ENTER] (LINE:126)\l0x000d: INVOKE  (r2 I:android.content.res.Resources) = (r2 I:android.content.Context) type: VIRTUAL call: android.content.Context.getResources():android.content.res.Resources A[Catch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, MD:():android.content.res.Resources (c)]\l0x0011: INVOKE  (r2 I:android.content.res.XmlResourceParser) = (r2 I:android.content.res.Resources), (r5 I:int A[D('menuRes' int)]) type: VIRTUAL call: android.content.res.Resources.getLayout(int):android.content.res.XmlResourceParser A[Catch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, MD:(int):android.content.res.XmlResourceParser throws android.content.res.Resources$NotFoundException (c)]\l0x0015: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('parser' android.content.res.XmlResourceParser)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:android.util.AttributeSet) = (r1 I:org.xmlpull.v1.XmlPullParser A[D('parser' android.content.res.XmlResourceParser)]) type: STATIC call: android.util.Xml.asAttributeSet(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet A[Catch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, MD:(org.xmlpull.v1.XmlPullParser):android.util.AttributeSet (c)] (LINE:127)\l0x001a: INVOKE  \l  (r4 I:androidx.appcompat.view.SupportMenuInflater)\l  (r1 I:org.xmlpull.v1.XmlPullParser A[D('parser' android.content.res.XmlResourceParser)])\l  (r2 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r6 I:android.view.Menu A[D('menu' android.view.Menu)])\l type: DIRECT call: androidx.appcompat.view.SupportMenuInflater.parseMenu(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu):void A[Catch: all \-\> 0x0023, IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, MD:(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m), TRY_LEAVE] (LINE:129)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parser' android.content.res.XmlResourceParser)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:?  (LINE:135)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001f|0x001f: INVOKE  (r1 I:android.content.res.XmlResourceParser A[D('parser' android.content.res.XmlResourceParser)]) type: INTERFACE call: android.content.res.XmlResourceParser.close():void A[MD:():void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|RETURN\lORIG_RETURN\l|0x0022: RETURN    (LINE:137)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0022: RETURN   A[SYNTHETIC] (LINE:137)\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|ExcHandler: all \-\> 0x0023\l|0x0023: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0023] (LINE:135)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0033|0x0033: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parser' android.content.res.XmlResourceParser)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0038  (LINE:135)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0035|0x0035: INVOKE  (r1 I:android.content.res.XmlResourceParser A[D('parser' android.content.res.XmlResourceParser)]) type: INTERFACE call: android.content.res.XmlResourceParser.close():void A[MD:():void (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable)  (LINE:136)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|ExcHandler: IOException \-\> 0x0025\l|0x0025: MOVE_EXCEPTION  (r2 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0025] (LINE:132)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0026|TRY_ENTER\lTryCatch #1 \{all \-\> 0x0023, blocks: (B:32:0x000b, B:39:0x0026, B:40:0x002b, B:42:0x002d, B:43:0x0032), top: B:47:0x000b, inners: #3 \}\lCatch: all \-\> 0x0023\l|0x0026: NEW_INSTANCE  (r3 I:android.view.InflateException) =  android.view.InflateException A[Catch: all \-\> 0x0023, TRY_ENTER] (LINE:133)\l0x0028: INVOKE  (r3 I:android.view.InflateException), (r0 I:java.lang.String), (r2 I:java.lang.Throwable A[D('e' java.io.IOException)]) type: DIRECT call: android.view.InflateException.\<init\>(java.lang.String, java.lang.Throwable):void A[Catch: all \-\> 0x0023, MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|TryCatch #1 \{all \-\> 0x0023, blocks: (B:32:0x000b, B:39:0x0026, B:40:0x002b, B:42:0x002d, B:43:0x0032), top: B:47:0x000b, inners: #3 \}\lCatch: all \-\> 0x0023\l|0x002b: THROW  (r3 I:java.lang.Throwable) A[Catch: all \-\> 0x0023]\l}"];
Node_41 [shape=record,label="{41\:\ 0x002c|ExcHandler: XmlPullParserException \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r2 I:org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: XmlPullParserException \-\> 0x002c] (LINE:130)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002d|TryCatch #1 \{all \-\> 0x0023, blocks: (B:32:0x000b, B:39:0x0026, B:40:0x002b, B:42:0x002d, B:43:0x0032), top: B:47:0x000b, inners: #3 \}\lCatch: all \-\> 0x0023\l|0x002d: NEW_INSTANCE  (r3 I:android.view.InflateException) =  android.view.InflateException A[Catch: all \-\> 0x0023] (LINE:131)\l0x002f: INVOKE  \l  (r3 I:android.view.InflateException)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable A[D('e' org.xmlpull.v1.XmlPullParserException)])\l type: DIRECT call: android.view.InflateException.\<init\>(java.lang.String, java.lang.Throwable):void A[Catch: all \-\> 0x0023, MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x0032|TRY_LEAVE\lTryCatch #1 \{all \-\> 0x0023, blocks: (B:32:0x000b, B:39:0x0026, B:40:0x002b, B:42:0x002d, B:43:0x0032), top: B:47:0x000b, inners: #3 \}\lCatch: all \-\> 0x0023\l|0x0032: THROW  (r3 I:java.lang.Throwable) A[Catch: all \-\> 0x0023, TRY_LEAVE]\l}"];
MethodNode[shape=record,label="{public void androidx.appcompat.view.SupportMenuInflater.inflate((r4 'this' I:androidx.appcompat.view.SupportMenuInflater A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('menuRes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:35:0x0022 \-\> B:26:?, CROSS_EDGE: B:33:0x001d \-\> B:35:0x0022, CROSS_EDGE: B:40:0x002b \-\> B:26:?, CROSS_EDGE: B:43:0x0032 \-\> B:26:?, CROSS_EDGE: B:46:0x0038 \-\> B:26:?, CROSS_EDGE: B:44:0x0033 \-\> B:46:0x0038, CROSS_EDGE: B:47:0x000b \-\> B:36:0x0023, CROSS_EDGE: B:47:0x000b \-\> B:38:0x0025, CROSS_EDGE: B:47:0x000b \-\> B:41:0x002c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x001d: r2 'attrs' Landroid\/util\/AttributeSet;\l  0x000b\-0x002b: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  \-1 \-0x002b: r5 'menuRes' I\l  \-1 \-0x002b: r6 'menu' Landroid\/view\/Menu;\l  0x0026\-0x002c: r2 'e' Ljava\/io\/IOException;\l  0x002c\-0x0032: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  0x002c\-0x0032: r5 'menuRes' I\l  0x002c\-0x0032: r6 'menu' Landroid\/view\/Menu;\l  0x002d\-0x0033: r2 'e' Lorg\/xmlpull\/v1\/XmlPullParserException;\l  0x0033\-0x0038: r1 'parser' Landroid\/content\/res\/XmlResourceParser;\l  0x0033\-0x0038: r5 'menuRes' I\l  0x0033\-0x0038: r6 'menu' Landroid\/view\/Menu;\lTryCatch #1 \{all \-\> 0x0023, blocks: (B:32:0x000b, B:39:0x0026, B:40:0x002b, B:42:0x002d, B:43:0x0032), top: B:47:0x000b, inners: #3 \}, TryCatch #3 \{IOException \-\> 0x0025, XmlPullParserException \-\> 0x002c, blocks: (B:32:0x000b), top: B:47:0x000b, outer: #1 \}\lMETHOD_OVERRIDE: [ClspMth\{android.view.MenuInflater.inflate(int, android.view.Menu):void\}]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_26;
Node_31 -> Node_47;
Node_47 -> Node_32;
Node_47 -> Node_36;
Node_47 -> Node_38;
Node_47 -> Node_41;
Node_32 -> Node_33;
Node_32 -> Node_48;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_49;
Node_34 -> Node_35;
Node_35 -> Node_26;
Node_49 -> Node_26;
Node_48 -> Node_38;
Node_48 -> Node_41;
Node_48 -> Node_36;
Node_36 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_26;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_26;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_26;
}

