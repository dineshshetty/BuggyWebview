digraph "CFG forandroidx.appcompat.view.SupportMenuInflater.parseMenu(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/view\/Menu;)V" {
Node_71 [shape=record,label="{71\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_73 [shape=record,label="{73\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState) =  androidx.appcompat.view.SupportMenuInflater$MenuState  (LINE:145)\l0x0002: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState)\l  (r10 I:androidx.appcompat.view.SupportMenuInflater)\l  (r13 I:android.view.Menu A[D('menu' android.view.Menu)])\l type: DIRECT call: androidx.appcompat.view.SupportMenuInflater.MenuState.\<init\>(androidx.appcompat.view.SupportMenuInflater, android.view.Menu):void A[MD:(androidx.appcompat.view.SupportMenuInflater, android.view.Menu):void (m)]\l0x0005: INVOKE  (r1 I:int) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getEventType():int A[MD:():int throws org.xmlpull.v1.XmlPullParserException (c)] (LINE:147)\l0x0009: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:149)\l0x000a: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:150)\l}"];
Node_74 [shape=record,label="{74\:\ 0x000b|LOOP_START\lLOOP:0: B:74:0x000b\-\>B:82:0x003b\l|0x000b: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:154)\l0x000c: CONST_STR  (r5 I:java.lang.String) =  \"menu\" \l}"];
Node_75 [shape=record,label="{75\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eventType' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0036 \l}"];
Node_81 [shape=record,label="{81\:\ 0x0036|0x0036: INVOKE  (r1 I:int A[D('eventType' int)]) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:164)\l0x003a: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:165)\l}"];
Node_82 [shape=record,label="{82\:\ 0x003b|LOOP_END\lLOOP:0: B:74:0x000b\-\>B:82:0x003b\l|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eventType' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x000b \l}"];
Node_125 [shape=record,label="{125\:\ 0x003d|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x003d|0x003d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:167)\l}"];
Node_84 [shape=record,label="{84\:\ 0x003e|LOOP_START\lLOOP:1: B:84:0x003e\-\>B:123:0x00bf\l|0x003e: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reachedEndOfMenu' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:128:0x00c5  (LINE:168)\l}"];
Node_85 [shape=record,label="{85\:\ 0x0040|0x0040: CONST_STR  (r6 I:java.lang.String) =  \"item\"  (LINE:169)\l0x0042: CONST_STR  (r7 I:java.lang.String) =  \"group\" \l}"];
Node_86 [shape=record,label="{86\:\ 0x0044|0x0044: SWITCH  (r1 I:?? A[D('eventType' int)])\l case 1: goto B:127:0x00b7\l case 2: goto B:109:0x008b\l case 3: goto B:88:0x0049\l default: goto B:140:0x00bf \l}"];
Node_88 [shape=record,label="{88\:\ 0x0049|0x0049: INVOKE  (r8 I:java.lang.String) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:193)\l}"];
Node_89 [shape=record,label="{89\:\ 0x004d|0x004d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lookingForEndOfUnknownTag' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0059  (LINE:194)\l}"];
Node_90 [shape=record,label="{90\:\ 0x004f|0x004f: INVOKE  (r9 I:boolean) = \l  (r8 I:java.lang.String A[D('tagName' java.lang.String)])\l  (r3 I:java.lang.Object A[D('unknownTagName' java.lang.String)])\l type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_91 [shape=record,label="{91\:\ 0x0053|0x0053: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0059 \l}"];
Node_92 [shape=record,label="{92\:\ 0x0055|0x0055: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lookingForEndOfUnknownTag' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:195)\l0x0056: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('unknownTagName' java.lang.String)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:196)\l}"];
Node_129 [shape=record,label="{129\:\ 0x00bf|SYNTHETIC\l}"];
Node_123 [shape=record,label="{123\:\ 0x00bf|LOOP_END\lLOOP:1: B:84:0x003e\-\>B:123:0x00bf\l|0x00bf: INVOKE  (r1 I:int A[D('eventType' int)]) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:219)\l}"];
Node_93 [shape=record,label="{93\:\ 0x0059|0x0059: INVOKE  (r7 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r7 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:197)\l}"];
Node_94 [shape=record,label="{94\:\ 0x005d|0x005d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x0063 \l}"];
Node_95 [shape=record,label="{95\:\ 0x005f|0x005f: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.resetGroup():void A[MD:():void (m)] (LINE:198)\l}"];
Node_130 [shape=record,label="{130\:\ 0x00bf|SYNTHETIC\l}"];
Node_96 [shape=record,label="{96\:\ 0x0063|0x0063: INVOKE  (r6 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:199)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0067|0x0067: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:106:0x0083 \l}"];
Node_98 [shape=record,label="{98\:\ 0x0069|0x0069: INVOKE  (r6 I:boolean) = \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.hasAddedItem():boolean A[MD:():boolean (m)] (LINE:202)\l}"];
Node_99 [shape=record,label="{99\:\ 0x006d|0x006d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:131:0x00bf \l}"];
Node_100 [shape=record,label="{100\:\ 0x006f|0x006f: IGET  (r6 I:androidx.core.view.ActionProvider) = \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l androidx.appcompat.view.SupportMenuInflater.MenuState.itemActionProvider androidx.core.view.ActionProvider  (LINE:203)\l}"];
Node_101 [shape=record,label="{101\:\ 0x0071|0x0071: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:105:0x007f \l}"];
Node_102 [shape=record,label="{102\:\ 0x0073|0x0073: IGET  (r6 I:androidx.core.view.ActionProvider) = \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l androidx.appcompat.view.SupportMenuInflater.MenuState.itemActionProvider androidx.core.view.ActionProvider \l0x0075: INVOKE  (r6 I:boolean) = (r6 I:androidx.core.view.ActionProvider) type: VIRTUAL call: androidx.core.view.ActionProvider.hasSubMenu():boolean A[MD:():boolean (m)] (LINE:204)\l}"];
Node_103 [shape=record,label="{103\:\ 0x0079|0x0079: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:105:0x007f \l}"];
Node_104 [shape=record,label="{104\:\ 0x007b|0x007b: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.addSubMenuItem():android.view.SubMenu A[MD:():android.view.SubMenu (m)] (LINE:205)\l}"];
Node_132 [shape=record,label="{132\:\ 0x00bf|SYNTHETIC\l}"];
Node_105 [shape=record,label="{105\:\ 0x007f|0x007f: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.addItem():void A[MD:():void (m)] (LINE:207)\l}"];
Node_133 [shape=record,label="{133\:\ 0x00bf|SYNTHETIC\l}"];
Node_131 [shape=record,label="{131\:\ 0x00bf|SYNTHETIC\l}"];
Node_106 [shape=record,label="{106\:\ 0x0083|0x0083: INVOKE  (r6 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:210)\l}"];
Node_107 [shape=record,label="{107\:\ 0x0087|0x0087: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:134:0x00bf \l}"];
Node_108 [shape=record,label="{108\:\ 0x0089|0x0089: CONST  (r4 I:??[boolean, int, float, short, byte, char] A[D('reachedEndOfMenu' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:211)\l}"];
Node_135 [shape=record,label="{135\:\ 0x00bf|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x00bf|SYNTHETIC\l}"];
Node_109 [shape=record,label="{109\:\ 0x008b|0x008b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lookingForEndOfUnknownTag' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x008e  (LINE:171)\l}"];
Node_111 [shape=record,label="{111\:\ 0x008e|0x008e: INVOKE  (r8 I:java.lang.String) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:175)\l0x0092: INVOKE  (r7 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r7 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:176)\l}"];
Node_112 [shape=record,label="{112\:\ 0x0096|0x0096: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:114:0x009c \l}"];
Node_113 [shape=record,label="{113\:\ 0x0098|0x0098: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l  (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.readGroup(android.util.AttributeSet):void A[MD:(android.util.AttributeSet):void (m)] (LINE:177)\l}"];
Node_136 [shape=record,label="{136\:\ 0x00bf|SYNTHETIC\l}"];
Node_114 [shape=record,label="{114\:\ 0x009c|0x009c: INVOKE  (r6 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:178)\l}"];
Node_115 [shape=record,label="{115\:\ 0x00a0|0x00a0: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:117:0x00a6 \l}"];
Node_116 [shape=record,label="{116\:\ 0x00a2|0x00a2: INVOKE  \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l  (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.readItem(android.util.AttributeSet):void A[MD:(android.util.AttributeSet):void (m)] (LINE:179)\l}"];
Node_137 [shape=record,label="{137\:\ 0x00bf|SYNTHETIC\l}"];
Node_117 [shape=record,label="{117\:\ 0x00a6|0x00a6: INVOKE  (r6 I:boolean) = (r8 I:java.lang.String A[D('tagName' java.lang.String)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:180)\l}"];
Node_118 [shape=record,label="{118\:\ 0x00aa|0x00aa: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x00b4 \l}"];
Node_119 [shape=record,label="{119\:\ 0x00ac|0x00ac: INVOKE  (r6 I:android.view.SubMenu) = \l  (r0 I:androidx.appcompat.view.SupportMenuInflater$MenuState A[D('menuState' androidx.appcompat.view.SupportMenuInflater$MenuState)])\l type: VIRTUAL call: androidx.appcompat.view.SupportMenuInflater.MenuState.addSubMenuItem():android.view.SubMenu A[MD:():android.view.SubMenu (m)] (LINE:182)\l0x00b0: INVOKE  \l  (r10 I:androidx.appcompat.view.SupportMenuInflater)\l  (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r6 I:android.view.Menu A[D('subMenu' android.view.SubMenu)])\l type: DIRECT call: androidx.appcompat.view.SupportMenuInflater.parseMenu(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu):void A[MD:(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu):void throws org.xmlpull.v1.XmlPullParserException, java.io.IOException (m)] (LINE:185)\l}"];
Node_138 [shape=record,label="{138\:\ 0x00bf|SYNTHETIC\l}"];
Node_120 [shape=record,label="{120\:\ 0x00b4|0x00b4: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('lookingForEndOfUnknownTag' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:187)\l0x00b5: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('unknownTagName' java.lang.String)]) = (r8 I:??[OBJECT, ARRAY] A[D('tagName' java.lang.String)])  (LINE:188)\l}"];
Node_139 [shape=record,label="{139\:\ 0x00bf|SYNTHETIC\l}"];
Node_141 [shape=record,label="{141\:\ 0x00bf|SYNTHETIC\l}"];
Node_127 [shape=record,label="{127\:\ 0x00b7|SYNTHETIC\l}"];
Node_121 [shape=record,label="{121\:\ 0x00b7|0x00b7: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:216)\l0x00b9: CONST_STR  (r6 I:java.lang.String) =  \"Unexpected end of document\" \l0x00bb: INVOKE  (r5 I:java.lang.RuntimeException), (r6 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_122 [shape=record,label="{122\:\ 0x00be|0x00be: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_72 [shape=record,label="{72\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_140 [shape=record,label="{140\:\ 0x00bf|SYNTHETIC\l}"];
Node_128 [shape=record,label="{128\:\ 0x00c5|SYNTHETIC\l}"];
Node_124 [shape=record,label="{124\:\ 0x00c5|RETURN\l|0x00c5: RETURN    (LINE:221)\l}"];
Node_126 [shape=record,label="{126\:\ 0x0010|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x0010|0x0010: INVOKE  (r4 I:java.lang.String) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:155)\l0x0014: INVOKE  (r6 I:boolean) = (r4 I:java.lang.String A[D('tagName' java.lang.String)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)] (LINE:156)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0018|0x0018: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x001f \l}"];
Node_78 [shape=record,label="{78\:\ 0x001a|0x001a: INVOKE  (r1 I:int A[D('eventType' int)]) = (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:158)\l}"];
Node_79 [shape=record,label="{79\:\ 0x001f|0x001f: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:162)\l0x0021: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r6 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0026: CONST_STR  (r7 I:java.lang.String) =  \"Expecting menu, got \" \l0x0028: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002b: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.String A[D('tagName' java.lang.String)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0032: INVOKE  (r5 I:java.lang.RuntimeException), (r6 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_80 [shape=record,label="{80\:\ 0x0035|0x0035: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.appcompat.view.SupportMenuInflater.parseMenu((r10 'this' I:androidx.appcompat.view.SupportMenuInflater A[IMMUTABLE_TYPE, THIS]), (r11 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:123:0x00bf \-\> B:84:0x003e, CROSS_EDGE: B:95:0x005f \-\> B:123:0x00bf, CROSS_EDGE: B:104:0x007b \-\> B:123:0x00bf, CROSS_EDGE: B:105:0x007f \-\> B:123:0x00bf, CROSS_EDGE: B:101:0x0071 \-\> B:105:0x007f, CROSS_EDGE: B:99:0x006d \-\> B:123:0x00bf, CROSS_EDGE: B:108:0x0089 \-\> B:123:0x00bf, CROSS_EDGE: B:107:0x0087 \-\> B:123:0x00bf, CROSS_EDGE: B:89:0x004d \-\> B:93:0x0059, CROSS_EDGE: B:113:0x0098 \-\> B:123:0x00bf, CROSS_EDGE: B:116:0x00a2 \-\> B:123:0x00bf, CROSS_EDGE: B:119:0x00ac \-\> B:123:0x00bf, CROSS_EDGE: B:120:0x00b4 \-\> B:123:0x00bf, CROSS_EDGE: B:109:0x008b \-\> B:123:0x00bf, CROSS_EDGE: B:86:0x0044 \-\> B:123:0x00bf, CROSS_EDGE: B:124:0x00c5 \-\> B:72:?, CROSS_EDGE: B:80:0x0035 \-\> B:72:?, BACK_EDGE: B:82:0x003b \-\> B:74:0x000b, CROSS_EDGE: B:82:0x003b \-\> B:83:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x0036: r4 'tagName' Ljava\/lang\/String;\l  0x004d\-0x008b: r8 'tagName' Ljava\/lang\/String;\l  0x00b0\-0x00b3: r6 'subMenu' Landroid\/view\/SubMenu;\l  0x0092\-0x00b7: r8 'tagName' Ljava\/lang\/String;\l  0x0005\-0x00cf: r0 'menuState' Landroidx\/appcompat\/view\/SupportMenuInflater$MenuState;\l  0x0009\-0x00cf: r1 'eventType' I\l  0x000a\-0x00cf: r2 'lookingForEndOfUnknownTag' Z\l  0x000b\-0x00cf: r3 'unknownTagName' Ljava\/lang\/String;\l  0x003e\-0x00cf: r4 'reachedEndOfMenu' Z\l  \-1 \-0x00cf: r11 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x00cf: r12 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x00cf: r13 'menu' Landroid\/view\/Menu;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_71;Node_71 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_81;
Node_75 -> Node_126[style=dashed];
Node_81 -> Node_82;
Node_82 -> Node_74;
Node_82 -> Node_125[style=dashed];
Node_125 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_128;
Node_85 -> Node_86;
Node_86 -> Node_88;
Node_86 -> Node_109;
Node_86 -> Node_127;
Node_86 -> Node_140;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_93;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_93;
Node_92 -> Node_129;
Node_129 -> Node_123;
Node_123 -> Node_84;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_95 -> Node_130;
Node_130 -> Node_123;
Node_96 -> Node_97;
Node_97 -> Node_98[style=dashed];
Node_97 -> Node_106;
Node_98 -> Node_99;
Node_99 -> Node_100[style=dashed];
Node_99 -> Node_131;
Node_100 -> Node_101;
Node_101 -> Node_102[style=dashed];
Node_101 -> Node_105;
Node_102 -> Node_103;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_105;
Node_104 -> Node_132;
Node_132 -> Node_123;
Node_105 -> Node_133;
Node_133 -> Node_123;
Node_131 -> Node_123;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_134;
Node_108 -> Node_135;
Node_135 -> Node_123;
Node_134 -> Node_123;
Node_109 -> Node_111;
Node_109 -> Node_141[style=dashed];
Node_111 -> Node_112;
Node_112 -> Node_113[style=dashed];
Node_112 -> Node_114;
Node_113 -> Node_136;
Node_136 -> Node_123;
Node_114 -> Node_115;
Node_115 -> Node_116[style=dashed];
Node_115 -> Node_117;
Node_116 -> Node_137;
Node_137 -> Node_123;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_138;
Node_138 -> Node_123;
Node_120 -> Node_139;
Node_139 -> Node_123;
Node_141 -> Node_123;
Node_127 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_72;
Node_140 -> Node_123;
Node_128 -> Node_124;
Node_124 -> Node_72;
Node_126 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_79;
Node_78 -> Node_83;
Node_79 -> Node_80;
Node_80 -> Node_72;
}

