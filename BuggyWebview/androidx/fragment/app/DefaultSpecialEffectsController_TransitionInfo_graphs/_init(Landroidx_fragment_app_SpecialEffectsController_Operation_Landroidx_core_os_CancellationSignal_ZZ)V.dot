digraph "CFG forandroidx.fragment.app.DefaultSpecialEffectsController.TransitionInfo.\<init\>(Landroidx\/fragment\/app\/SpecialEffectsController$Operation;Landroidx\/core\/os\/CancellationSignal;ZZ)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super(r3, r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r3.getFinalState() != androidx.fragment.app.SpecialEffectsController.Operation.State.VISIBLE) goto L20\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r5 == false) goto L19\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|java.lang.Object r0 = r3.getFragment().getReenterTransition()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|PHI: r0 \l  PHI: (r0v14 java.lang.Object) = (r0v13 java.lang.Object), (r0v21 java.lang.Object) binds: [B:6:0x0016, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r2.mTransition = r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r5 == false) goto L18\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|boolean r0 = r3.getFragment().getAllowReturnTransitionOverlap()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|PHI: r0 \l  PHI: (r0v17 boolean) = (r0v16 boolean), (r0v19 boolean) binds: [B:10:0x002b, B:9:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|r2.mOverlapAllowed = r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|if (r6 == false) goto L16\l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|if (r5 == false) goto L14\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|r2.mSharedElementTransition = r3.getFragment().getSharedElementReturnTransition()\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x005e|r2.mSharedElementTransition = r3.getFragment().getSharedElementEnterTransition()\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|r2.mSharedElementTransition = null\l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|RETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|boolean r0 = r3.getFragment().getAllowEnterTransitionOverlap()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|java.lang.Object r0 = r3.getFragment().getEnterTransition()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|if (r5 == false) goto L23\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|java.lang.Object r0 = r3.getFragment().getReturnTransition()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|PHI: r0 \l  PHI: (r0v3 java.lang.Object) = (r0v2 java.lang.Object), (r0v6 java.lang.Object) binds: [B:14:0x0041, B:13:0x0038] A[DONT_GENERATE, DONT_INLINE]\l|r2.mTransition = r0\lr2.mOverlapAllowed = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|java.lang.Object r0 = r3.getFragment().getExitTransition()\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.DefaultSpecialEffectsController.TransitionInfo.\<init\>((r2v0 'this' androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo A[IMMUTABLE_TYPE, THIS]), (r3v0 'operation' androidx.fragment.app.SpecialEffectsController$Operation A[D('operation' androidx.fragment.app.SpecialEffectsController$Operation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'signal' androidx.core.os.CancellationSignal A[D('signal' androidx.core.os.CancellationSignal), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'isPop' boolean A[D('isPop' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'providesSharedElementTransition' boolean A[D('providesSharedElementTransition' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x005e \-\> B:21:0x006d, CROSS_EDGE: B:20:0x006a \-\> B:21:0x006d, CROSS_EDGE: B:10:0x002b \-\> B:11:0x0033, CROSS_EDGE: B:6:0x0016 \-\> B:7:0x001e, CROSS_EDGE: B:15:0x0049 \-\> B:16:0x004e, CROSS_EDGE: B:14:0x0041 \-\> B:15:0x0049\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_22;
Node_22 -> Node_1;
Node_19 -> Node_23;
Node_23 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_10 -> Node_11;
Node_6 -> Node_7;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_14 -> Node_15;
}

