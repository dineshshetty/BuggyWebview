digraph "CFG forandroidx.fragment.app.FragmentController.retainNonConfig()Ljava\/util\/List;" {
subgraph cluster_Region_18939813 {
label = "R(2:1|(2:(1:6)|(1:8)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.fragment.app.FragmentManagerNonConfig androidx.fragment.app.FragmentManagerNonConfig r0 = r3.mHost.mFragmentManager.retainNonConfig()\l}"];
subgraph cluster_Region_1984390386 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1919272333 {
label = "IF [B:3:0x0008, B:5:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r0 != null) goto L3\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|ADDED_TO_REGION\l|if (r0.getFragments() != null) goto L5\l}"];
subgraph cluster_Region_1412294033 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return new java.util.ArrayList(r0.getFragments())\l}"];
}
}
subgraph cluster_Region_1370083107 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.List\<androidx.fragment.app.Fragment\> androidx.fragment.app.FragmentController.retainNonConfig((r3v0 'this' androidx.fragment.app.FragmentController A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lCROSS_EDGE: B:7:0x001a \-\> B:8:0x001b, CROSS_EDGE: B:3:0x0008 \-\> B:7:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: ()Ljava\/util\/List\<Landroidx\/fragment\/app\/Fragment;\>;\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_9 -> Node_1;
Node_7 -> Node_1;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_6 -> Node_9;
}

