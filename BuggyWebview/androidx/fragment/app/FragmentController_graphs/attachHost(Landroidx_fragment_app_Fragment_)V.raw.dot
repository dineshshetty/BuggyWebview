digraph "CFG forandroidx.fragment.app.FragmentController.attachHost(Landroidx\/fragment\/app\/Fragment;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentController) androidx.fragment.app.FragmentController.mHost androidx.fragment.app.FragmentHostCallback  (LINE:116)\l0x0002: IGET  (r0 I:androidx.fragment.app.FragmentManager) = (r0 I:androidx.fragment.app.FragmentHostCallback) androidx.fragment.app.FragmentHostCallback.mFragmentManager androidx.fragment.app.FragmentManager \l0x0004: IGET  (r1 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentController) androidx.fragment.app.FragmentController.mHost androidx.fragment.app.FragmentHostCallback \l0x0006: INVOKE  \l  (r0 I:androidx.fragment.app.FragmentManager)\l  (r1 I:androidx.fragment.app.FragmentHostCallback)\l  (r1 I:androidx.fragment.app.FragmentContainer)\l  (r3 I:androidx.fragment.app.Fragment A[D('parent' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.attachController(androidx.fragment.app.FragmentHostCallback, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment):void A[MD:(androidx.fragment.app.FragmentHostCallback\<?\>, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:118)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentController.attachHost((r2 'this' I:androidx.fragment.app.FragmentController A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.fragment.app.Fragment A[D('parent' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0009: r3 'parent' Landroidx\/fragment\/app\/Fragment;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

