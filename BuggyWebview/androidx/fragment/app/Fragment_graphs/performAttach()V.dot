digraph "CFG forandroidx.fragment.app.Fragment.performAttach()V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|java.util.Iterator r0 = r3.mOnPreAttachedListeners.iterator()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|LOOP_START\lLOOP:0: B:16:0x0006\-\>B:18:0x000c\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|if (r0.hasNext() == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x000c|LOOP_END\lLOOP:0: B:16:0x0006\-\>B:18:0x000c\l|androidx.fragment.app.Fragment$OnPreAttachedListener r1 = r0.next()\lr1.onPreAttached()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0016|r3.mOnPreAttachedListeners.clear()\lr3.mChildFragmentManager.attachController(r3.mHost, createFragmentContainer(), r3)\lr3.mState = 0\lr3.mCalled = false\lonAttach(r3.mHost.getContext())\l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|if (r3.mCalled == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0038|r3.mFragmentManager.dispatchOnAttachFragment(r3)\lr3.mChildFragmentManager.dispatchAttach()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0043|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Fragment \")\lr1.append(r3)\lr1.append(\" did not call through to super.onAttach()\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|throw new androidx.fragment.app.SuperNotCalledException(r1.toString())\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.Fragment.performAttach((r3v0 'this' androidx.fragment.app.Fragment A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x000c \-\> B:16:0x0006, CROSS_EDGE: B:24:0x005e \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_16;
Node_25 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

