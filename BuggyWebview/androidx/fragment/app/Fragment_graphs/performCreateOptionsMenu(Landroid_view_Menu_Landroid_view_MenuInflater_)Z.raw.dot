digraph "CFG forandroidx.fragment.app.Fragment.performCreateOptionsMenu(Landroid\/view\/Menu;Landroid\/view\/MenuInflater;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:3096)\l0x0001: IGET  (r1 I:boolean) = (r2 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mHidden boolean  (LINE:3097)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:? \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IGET  (r1 I:boolean) = (r2 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mHasMenu boolean  (LINE:3098)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0011 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: IGET  (r1 I:boolean) = (r2 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mMenuVisible boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0011 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('show' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3099)\l0x000e: INVOKE  \l  (r2 I:androidx.fragment.app.Fragment)\l  (r3 I:android.view.Menu A[D('menu' android.view.Menu)])\l  (r4 I:android.view.MenuInflater A[D('inflater' android.view.MenuInflater)])\l type: VIRTUAL call: androidx.fragment.app.Fragment.onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater):void A[MD:(android.view.Menu, android.view.MenuInflater):void (m)] (LINE:3100)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IGET  (r1 I:androidx.fragment.app.FragmentManager) = (r2 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mChildFragmentManager androidx.fragment.app.FragmentManager  (LINE:3102)\l0x0013: INVOKE  (r1 I:boolean) = \l  (r1 I:androidx.fragment.app.FragmentManager)\l  (r3 I:android.view.Menu A[D('menu' android.view.Menu)])\l  (r4 I:android.view.MenuInflater A[D('inflater' android.view.MenuInflater)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater):boolean A[MD:(android.view.Menu, android.view.MenuInflater):boolean (m)]\l0x0017: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('show' boolean)]) \| (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN  (r0 I:boolean A[D('show' boolean)])  (LINE:3104)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN  (r0 I:boolean A[D('show' boolean)]) A[SYNTHETIC] (LINE:3104)\l}"];
MethodNode[shape=record,label="{public boolean androidx.fragment.app.Fragment.performCreateOptionsMenu((r2 'this' I:androidx.fragment.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.view.MenuInflater A[D('inflater' android.view.MenuInflater), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000b \-\> B:21:0x0011, CROSS_EDGE: B:17:0x0007 \-\> B:21:0x0011, CROSS_EDGE: B:15:0x0003 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0018: r0 'show' Z\l  \-1 \-0x0018: r3 'menu' Landroid\/view\/Menu;\l  \-1 \-0x0018: r4 'inflater' Landroid\/view\/MenuInflater;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

