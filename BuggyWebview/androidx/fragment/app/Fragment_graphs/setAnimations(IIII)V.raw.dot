digraph "CFG forandroidx.fragment.app.Fragment.setAnimations(IIII)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.Fragment$AnimationInfo) = (r1 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mAnimationInfo androidx.fragment.app.Fragment$AnimationInfo  (LINE:3270)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enter' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exit' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('popEnter' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('popExit' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000d \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:3271)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|0x000d: INVOKE  (r0 I:androidx.fragment.app.Fragment$AnimationInfo) = (r1 I:androidx.fragment.app.Fragment) type: DIRECT call: androidx.fragment.app.Fragment.ensureAnimationInfo():androidx.fragment.app.Fragment$AnimationInfo A[MD:():androidx.fragment.app.Fragment$AnimationInfo (m)] (LINE:3273)\l0x0011: IPUT  (r2 I:int A[D('enter' int)]), (r0 I:androidx.fragment.app.Fragment$AnimationInfo) androidx.fragment.app.Fragment.AnimationInfo.mEnterAnim int \l0x0013: INVOKE  (r0 I:androidx.fragment.app.Fragment$AnimationInfo) = (r1 I:androidx.fragment.app.Fragment) type: DIRECT call: androidx.fragment.app.Fragment.ensureAnimationInfo():androidx.fragment.app.Fragment$AnimationInfo A[MD:():androidx.fragment.app.Fragment$AnimationInfo (m)] (LINE:3274)\l0x0017: IPUT  (r3 I:int A[D('exit' int)]), (r0 I:androidx.fragment.app.Fragment$AnimationInfo) androidx.fragment.app.Fragment.AnimationInfo.mExitAnim int \l0x0019: INVOKE  (r0 I:androidx.fragment.app.Fragment$AnimationInfo) = (r1 I:androidx.fragment.app.Fragment) type: DIRECT call: androidx.fragment.app.Fragment.ensureAnimationInfo():androidx.fragment.app.Fragment$AnimationInfo A[MD:():androidx.fragment.app.Fragment$AnimationInfo (m)] (LINE:3275)\l0x001d: IPUT  (r4 I:int A[D('popEnter' int)]), (r0 I:androidx.fragment.app.Fragment$AnimationInfo) androidx.fragment.app.Fragment.AnimationInfo.mPopEnterAnim int \l0x001f: INVOKE  (r0 I:androidx.fragment.app.Fragment$AnimationInfo) = (r1 I:androidx.fragment.app.Fragment) type: DIRECT call: androidx.fragment.app.Fragment.ensureAnimationInfo():androidx.fragment.app.Fragment$AnimationInfo A[MD:():androidx.fragment.app.Fragment$AnimationInfo (m)] (LINE:3276)\l0x0023: IPUT  (r5 I:int A[D('popExit' int)]), (r0 I:androidx.fragment.app.Fragment$AnimationInfo) androidx.fragment.app.Fragment.AnimationInfo.mPopExitAnim int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|RETURN\l|0x0025: RETURN    (LINE:3277)\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.Fragment.setAnimations((r1 'this' I:androidx.fragment.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('enter' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('exit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('popEnter' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('popExit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0025 \-\> B:12:?, CROSS_EDGE: B:17:0x0008 \-\> B:20:0x000d, CROSS_EDGE: B:16:0x0006 \-\> B:20:0x000d, CROSS_EDGE: B:15:0x0004 \-\> B:20:0x000d, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0025: r2 'enter' I\l  \-1 \-0x0025: r3 'exit' I\l  \-1 \-0x0025: r4 'popEnter' I\l  \-1 \-0x0025: r5 'popExit' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

