digraph "CFG forandroidx.fragment.app.Fragment.performCreateOptionsMenu(Landroid\/view\/Menu;Landroid\/view\/MenuInflater;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r0 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0003|if (r2.mHidden != false) goto L11\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005}"];
Node_17 [shape=record,label="{17\:\ 0x0007|if (r2.mHasMenu == false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0009}"];
Node_19 [shape=record,label="{19\:\ 0x000b|if (r2.mMenuVisible == false) goto L8\l}"];
Node_20 [shape=record,label="{20\:\ 0x000d|r0 = true\lonCreateOptionsMenu(r3, r4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|PHI: r0 \l  PHI: (r0v1 'show' boolean) = (r0v0 'show' boolean), (r0v0 'show' boolean), (r0v3 'show' boolean) binds: [B:17:0x0007, B:19:0x000b, B:20:0x000d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|RETURN\lORIG_RETURN\l|return r0 \| r2.mChildFragmentManager.dispatchCreateOptionsMenu(r3, r4)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.fragment.app.Fragment.performCreateOptionsMenu((r2v0 'this' androidx.fragment.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r3v0 'menu' android.view.Menu A[D('menu' android.view.Menu), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'inflater' android.view.MenuInflater A[D('inflater' android.view.MenuInflater), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x000b \-\> B:21:0x0011, CROSS_EDGE: B:17:0x0007 \-\> B:21:0x0011, CROSS_EDGE: B:15:0x0003 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

