digraph "CFG forandroidx.fragment.app.Fragment.setUserVisibleHint(Z)V" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mUserVisibleHint boolean  (LINE:1322)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|0x0005: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVisibleToUser' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|0x0007: IGET  (r0 I:int) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mState int \l}"];
Node_30 [shape=record,label="{30\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_31 [shape=record,label="{31\:\ 0x000b|0x000b: IGET  (r0 I:androidx.fragment.app.FragmentManager) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mFragmentManager androidx.fragment.app.FragmentManager \l}"];
Node_32 [shape=record,label="{32\:\ 0x000d|0x000d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r3 I:androidx.fragment.app.Fragment) type: VIRTUAL call: androidx.fragment.app.Fragment.isAdded():boolean A[MD:():boolean (m)] (LINE:1323)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|0x0015: IGET  (r0 I:boolean) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mIsCreated boolean \l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0022 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0019|0x0019: IGET  (r0 I:androidx.fragment.app.FragmentManager) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mFragmentManager androidx.fragment.app.FragmentManager  (LINE:1324)\l0x001b: INVOKE  (r2 I:androidx.fragment.app.FragmentStateManager) = (r0 I:androidx.fragment.app.FragmentManager), (r3 I:androidx.fragment.app.Fragment) type: VIRTUAL call: androidx.fragment.app.FragmentManager.createOrGetFragmentStateManager(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager A[MD:(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager (m)] (LINE:1325)\l0x001f: INVOKE  (r0 I:androidx.fragment.app.FragmentManager), (r2 I:androidx.fragment.app.FragmentStateManager) type: VIRTUAL call: androidx.fragment.app.FragmentManager.performPendingDeferredStart(androidx.fragment.app.FragmentStateManager):void A[MD:(androidx.fragment.app.FragmentStateManager):void (m)] (LINE:1324)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0022|0x0022: IPUT  (r4 I:boolean A[D('isVisibleToUser' boolean)]), (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mUserVisibleHint boolean  (LINE:1327)\l0x0024: IGET  (r0 I:int) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mState int  (LINE:1328)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0026|0x0026: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:42:0x002c \l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|0x0028: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVisibleToUser' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x002c \l}"];
Node_41 [shape=record,label="{41\:\ 0x002a|0x002a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|0x002d: IPUT  (r0 I:boolean), (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mDeferStart boolean \l0x002f: IGET  (r0 I:android.os.Bundle) = (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mSavedFragmentState android.os.Bundle  (LINE:1329)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|0x0031: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|0x0033: INVOKE  (r0 I:java.lang.Boolean) = (r4 I:boolean A[D('isVisibleToUser' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:1332)\l0x0037: IPUT  (r0 I:java.lang.Boolean), (r3 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mSavedUserVisibleHint java.lang.Boolean \l}"];
Node_46 [shape=record,label="{46\:\ 0x0039|RETURN\lORIG_RETURN\l|0x0039: RETURN    (LINE:1334)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0039: RETURN   A[SYNTHETIC] (LINE:1334)\l}"];
Node_42 [shape=record,label="{42\:\ 0x002c|0x002c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.Fragment.setUserVisibleHint((r3 'this' I:androidx.fragment.app.Fragment A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('isVisibleToUser' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0039: r4 'isVisibleToUser' Z\lCROSS_EDGE: B:44:0x0031 \-\> B:46:0x0039, CROSS_EDGE: B:42:0x002c \-\> B:43:0x002d, CROSS_EDGE: B:39:0x0026 \-\> B:42:0x002c, CROSS_EDGE: B:36:0x0017 \-\> B:38:0x0022, CROSS_EDGE: B:34:0x0013 \-\> B:38:0x0022, CROSS_EDGE: B:32:0x000d \-\> B:38:0x0022, CROSS_EDGE: B:30:0x0009 \-\> B:38:0x0022, CROSS_EDGE: B:28:0x0005 \-\> B:38:0x0022, CROSS_EDGE: B:27:0x0003 \-\> B:38:0x0022\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_38;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_46;
Node_46 -> Node_25;
Node_47 -> Node_25;
Node_42 -> Node_43;
}

