digraph "CFG forandroidx.fragment.app.FragmentManagerViewModel.getSnapshot()Landroidx\/fragment\/app\/FragmentManagerNonConfig;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments java.util.HashMap  (LINE:249)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x001a \l}"];
Node_34 [shape=record,label="{34\:\ 0x0009|0x0009: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mChildNonConfigs java.util.HashMap \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x001a \l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.lifecycle.ViewModelStore\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mViewModelStores java.util.HashMap \l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)] (LINE:250)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x001a \l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:androidx.fragment.app.FragmentManagerNonConfig)  (LINE:251)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap  (LINE:253)\l0x001c: INVOKE  (r0 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l0x001f: IGET  (r2 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mChildNonConfigs java.util.HashMap  (LINE:254)\l0x0021: INVOKE  (r2 I:java.util.Set) = (r2 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)]\l0x0025: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0029|LOOP_START\lLOOP:0: B:40:0x0029\-\>B:57:0x0029\l|0x0029: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|0x002d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0049 \l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|0x002f: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0033: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x0035: INVOKE  (r4 I:java.lang.Object) = \l  (r3 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:255)\l0x0039: CHECK_CAST (r4 I:androidx.fragment.app.FragmentManagerViewModel) = (androidx.fragment.app.FragmentManagerViewModel) (r4 I:??[OBJECT, ARRAY]) \l0x003b: INVOKE  (r4 I:androidx.fragment.app.FragmentManagerNonConfig) = (r4 I:androidx.fragment.app.FragmentManagerViewModel) type: VIRTUAL call: androidx.fragment.app.FragmentManagerViewModel.getSnapshot():androidx.fragment.app.FragmentManagerNonConfig A[MD:():androidx.fragment.app.FragmentManagerNonConfig (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x003f|0x003f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childNonConfig' androidx.fragment.app.FragmentManagerNonConfig)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0029  (LINE:256)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0041|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0041|0x0041: INVOKE  (r5 I:java.lang.Object) = \l  (r3 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:257)\l0x0045: INVOKE  \l  (r0 I:java.util.HashMap A[D('childNonConfigs' java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l  (r5 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('childNonConfig' androidx.fragment.app.FragmentManagerNonConfig)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0029|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0029|LOOP_END\lSYNTHETIC\lLOOP:0: B:40:0x0029\-\>B:57:0x0029\l}"];
Node_58 [shape=record,label="{58\:\ 0x0029|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0049|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0049|0x0049: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:261)\l0x004a: IPUT  (r2 I:boolean), (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mHasSavedSnapshot boolean \l0x004c: IGET  (r2 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments java.util.HashMap  (LINE:262)\l0x004e: INVOKE  (r2 I:boolean) = (r2 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0052|0x0052: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0063 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0054|0x0054: INVOKE  (r2 I:boolean) = \l  (r0 I:java.util.HashMap A[D('childNonConfigs' java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0058|0x0058: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0063 \l}"];
Node_50 [shape=record,label="{50\:\ 0x005a|0x005a: IGET  (r2 I:java.util.HashMap\<java.lang.String, androidx.lifecycle.ViewModelStore\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mViewModelStores java.util.HashMap \l0x005c: INVOKE  (r2 I:boolean) = (r2 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.isEmpty():boolean A[MD:():boolean (c)] (LINE:263)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0060|0x0060: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0063 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0062|RETURN\l|0x0062: RETURN  (r1 I:androidx.fragment.app.FragmentManagerNonConfig)  (LINE:264)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0063|0x0063: NEW_INSTANCE  (r1 I:androidx.fragment.app.FragmentManagerNonConfig) =  androidx.fragment.app.FragmentManagerNonConfig  (LINE:266)\l0x0065: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0067: IGET  (r3 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments java.util.HashMap \l0x0069: INVOKE  (r3 I:java.util.Collection) = (r3 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.values():java.util.Collection A[MD:():java.util.Collection\<V\> (c)] (LINE:267)\l0x006d: INVOKE  (r2 I:java.util.ArrayList), (r3 I:java.util.Collection) type: DIRECT call: java.util.ArrayList.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x0070: NEW_INSTANCE  (r3 I:java.util.HashMap) =  java.util.HashMap \l0x0072: IGET  (r4 I:java.util.HashMap\<java.lang.String, androidx.lifecycle.ViewModelStore\>) = (r6 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mViewModelStores java.util.HashMap \l0x0074: INVOKE  (r3 I:java.util.HashMap), (r4 I:java.util.Map) type: DIRECT call: java.util.HashMap.\<init\>(java.util.Map):void A[MD:(java.util.Map\<? extends K, ? extends V\>):void (c)]\l0x0077: INVOKE  \l  (r1 I:androidx.fragment.app.FragmentManagerNonConfig)\l  (r2 I:java.util.Collection)\l  (r0 I:java.util.Map A[D('childNonConfigs' java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l  (r3 I:java.util.Map)\l type: DIRECT call: androidx.fragment.app.FragmentManagerNonConfig.\<init\>(java.util.Collection, java.util.Map, java.util.Map):void A[MD:(java.util.Collection\<androidx.fragment.app.Fragment\>, java.util.Map\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>, java.util.Map\<java.lang.String, androidx.lifecycle.ViewModelStore\>):void (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x007a|RETURN\l|0x007a: RETURN  (r1 I:androidx.fragment.app.FragmentManagerNonConfig)  (LINE:266)\l}"];
MethodNode[shape=record,label="{public androidx.fragment.app.FragmentManagerNonConfig androidx.fragment.app.FragmentManagerViewModel.getSnapshot((r6 'this' I:androidx.fragment.app.FragmentManagerViewModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0035\-0x0048: r3 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/String;Landroidx\/fragment\/app\/FragmentManagerViewModel;\>;\l  0x003f\-0x0048: r4 'childNonConfig' Landroidx\/fragment\/app\/FragmentManagerNonConfig;\l  0x001f\-0x007a: r0 'childNonConfigs' Ljava\/util\/HashMap;, signature: Ljava\/util\/HashMap\<Ljava\/lang\/String;Landroidx\/fragment\/app\/FragmentManagerNonConfig;\>;\lBACK_EDGE: B:44:0x0041 \-\> B:40:0x0029, BACK_EDGE: B:43:0x003f \-\> B:40:0x0029, CROSS_EDGE: B:52:0x0062 \-\> B:31:?, CROSS_EDGE: B:54:0x007a \-\> B:31:?, CROSS_EDGE: B:49:0x0058 \-\> B:53:0x0063, CROSS_EDGE: B:47:0x0052 \-\> B:53:0x0063, CROSS_EDGE: B:35:0x000f \-\> B:39:0x001a, CROSS_EDGE: B:33:0x0007 \-\> B:39:0x001a\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_31;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_55;
Node_42 -> Node_43;
Node_43 -> Node_56[style=dashed];
Node_43 -> Node_58;
Node_56 -> Node_44;
Node_44 -> Node_59;
Node_59 -> Node_57;
Node_57 -> Node_40;
Node_58 -> Node_57;
Node_55 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_31;
Node_53 -> Node_54;
Node_54 -> Node_31;
}

