digraph "CFG forandroidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot(Landroidx\/fragment\/app\/FragmentManagerNonConfig;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|0x0000: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments java.util.HashMap  (LINE:212)\l0x0002: INVOKE  (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)]\l0x0005: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mChildNonConfigs java.util.HashMap  (LINE:213)\l0x0007: INVOKE  (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)]\l0x000a: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.lifecycle.ViewModelStore\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mViewModelStores java.util.HashMap  (LINE:214)\l0x000c: INVOKE  (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.clear():void A[MD:():void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|0x000f: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0070  (LINE:215)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|0x0011: INVOKE  (r0 I:java.util.Collection) = (r8 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig)]) type: VIRTUAL call: androidx.fragment.app.FragmentManagerNonConfig.getFragments():java.util.Collection A[MD:():java.util.Collection\<androidx.fragment.app.Fragment\> (m)] (LINE:216)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|0x0015: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragments' java.util.Collection\<androidx.fragment.app.Fragment\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0031  (LINE:217)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|0x0017: INVOKE  (r1 I:java.util.Iterator) = (r0 I:java.util.Collection A[D('fragments' java.util.Collection\<androidx.fragment.app.Fragment\>)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:218)\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|LOOP_START\lLOOP:0: B:37:0x001b\-\>B:56:0x001b\l|0x001b: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|0x001f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0031 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|0x0021: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0025: CHECK_CAST (r2 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x001b  (LINE:219)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0029|0x0029: IGET  (r3 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mRetainedFragments java.util.HashMap  (LINE:220)\l0x002b: IGET  (r4 I:java.lang.String) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mWho java.lang.String \l0x002d: INVOKE  \l  (r3 I:java.util.HashMap)\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('fragment' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x001b|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x001b|LOOP_END\lSYNTHETIC\lLOOP:0: B:37:0x001b\-\>B:56:0x001b\l}"];
Node_57 [shape=record,label="{57\:\ 0x001b|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0031|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0031|0x0031: INVOKE  (r1 I:java.util.Map) = (r8 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig)]) type: VIRTUAL call: androidx.fragment.app.FragmentManagerNonConfig.getChildNonConfigs():java.util.Map A[MD:():java.util.Map\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\> (m)] (LINE:224)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childNonConfigs' java.util.Map\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0065  (LINE:225)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|0x0037: INVOKE  (r2 I:java.util.Set) = \l  (r1 I:java.util.Map A[D('childNonConfigs' java.util.Map\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:227)\l0x003b: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f|LOOP_START\lLOOP:1: B:46:0x003f\-\>B:48:0x0045\l|0x003f: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0043|0x0043: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0065 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0045|LOOP_END\lLOOP:1: B:46:0x003f\-\>B:48:0x0045\l|0x0045: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0049: CHECK_CAST (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:??[OBJECT, ARRAY]) \l0x004b: NEW_INSTANCE  (r4 I:androidx.fragment.app.FragmentManagerViewModel) =  androidx.fragment.app.FragmentManagerViewModel  (LINE:228)\l0x004d: IGET  (r5 I:boolean) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mStateAutomaticallySaved boolean \l0x004f: INVOKE  (r4 I:androidx.fragment.app.FragmentManagerViewModel), (r5 I:boolean) type: DIRECT call: androidx.fragment.app.FragmentManagerViewModel.\<init\>(boolean):void A[MD:(boolean):void (m)]\l0x0052: INVOKE  (r5 I:java.lang.Object) = \l  (r3 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:230)\l0x0056: CHECK_CAST (r5 I:androidx.fragment.app.FragmentManagerNonConfig) = (androidx.fragment.app.FragmentManagerNonConfig) (r5 I:??[OBJECT, ARRAY]) \l0x0058: INVOKE  \l  (r4 I:androidx.fragment.app.FragmentManagerViewModel A[D('childViewModel' androidx.fragment.app.FragmentManagerViewModel)])\l  (r5 I:androidx.fragment.app.FragmentManagerNonConfig)\l type: VIRTUAL call: androidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig):void A[MD:(androidx.fragment.app.FragmentManagerNonConfig):void (m)]\l0x005b: IGET  (r5 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentManagerViewModel\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mChildNonConfigs java.util.HashMap  (LINE:231)\l0x005d: INVOKE  (r6 I:java.lang.Object) = \l  (r3 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, androidx.fragment.app.FragmentManagerNonConfig\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x0061: INVOKE  \l  (r5 I:java.util.HashMap)\l  (r6 I:java.lang.Object)\l  (r4 I:java.lang.Object A[D('childViewModel' androidx.fragment.app.FragmentManagerViewModel)])\l type: VIRTUAL call: java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x0065|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0065|0x0065: INVOKE  (r2 I:java.util.Map) = (r8 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig)]) type: VIRTUAL call: androidx.fragment.app.FragmentManagerNonConfig.getViewModelStores():java.util.Map A[MD:():java.util.Map\<java.lang.String, androidx.lifecycle.ViewModelStore\> (m)] (LINE:234)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0069|0x0069: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewModelStores' java.util.Map\<java.lang.String, androidx.lifecycle.ViewModelStore\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0070  (LINE:235)\l}"];
Node_51 [shape=record,label="{51\:\ 0x006b|0x006b: IGET  (r3 I:java.util.HashMap\<java.lang.String, androidx.lifecycle.ViewModelStore\>) = (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mViewModelStores java.util.HashMap  (LINE:236)\l0x006d: INVOKE  \l  (r3 I:java.util.HashMap)\l  (r2 I:java.util.Map A[D('viewModelStores' java.util.Map\<java.lang.String, androidx.lifecycle.ViewModelStore\>)])\l type: VIRTUAL call: java.util.HashMap.putAll(java.util.Map):void A[MD:(java.util.Map\<? extends K, ? extends V\>):void (c)]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0070|0x0070: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fragments' java.util.Collection\<androidx.fragment.app.Fragment\>)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:239)\l0x0071: IPUT  (r0 I:boolean), (r7 I:androidx.fragment.app.FragmentManagerViewModel) androidx.fragment.app.FragmentManagerViewModel.mHasSavedSnapshot boolean \l}"];
Node_53 [shape=record,label="{53\:\ 0x0073|RETURN\l|0x0073: RETURN    (LINE:240)\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot((r7 'this' I:androidx.fragment.app.FragmentManagerViewModel A[IMMUTABLE_TYPE, THIS]), (r8 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0030: r2 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x004b\-0x0064: r3 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Ljava\/lang\/String;Landroidx\/fragment\/app\/FragmentManagerNonConfig;\>;\l  0x0052\-0x0064: r4 'childViewModel' Landroidx\/fragment\/app\/FragmentManagerViewModel;\l  0x0015\-0x0070: r0 'fragments' Ljava\/util\/Collection;, signature: Ljava\/util\/Collection\<Landroidx\/fragment\/app\/Fragment;\>;\l  0x0035\-0x0070: r1 'childNonConfigs' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/String;Landroidx\/fragment\/app\/FragmentManagerNonConfig;\>;\l  0x0069\-0x0070: r2 'viewModelStores' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/String;Landroidx\/lifecycle\/ViewModelStore;\>;\l  \-1 \-0x0073: r8 'nonConfig' Landroidx\/fragment\/app\/FragmentManagerNonConfig;\lBACK_EDGE: B:41:0x0029 \-\> B:37:0x001b, BACK_EDGE: B:40:0x0027 \-\> B:37:0x001b, BACK_EDGE: B:48:0x0045 \-\> B:46:0x003f, CROSS_EDGE: B:50:0x0069 \-\> B:52:0x0070, CROSS_EDGE: B:44:0x0035 \-\> B:49:0x0065, CROSS_EDGE: B:35:0x0015 \-\> B:43:0x0031, CROSS_EDGE: B:33:0x000f \-\> B:52:0x0070\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_52;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_43;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_55;
Node_39 -> Node_40;
Node_40 -> Node_54[style=dashed];
Node_40 -> Node_57;
Node_54 -> Node_41;
Node_41 -> Node_58;
Node_58 -> Node_56;
Node_56 -> Node_37;
Node_57 -> Node_56;
Node_55 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_59;
Node_48 -> Node_46;
Node_59 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_31;
}

