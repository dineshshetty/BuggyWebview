digraph "CFG forandroidx.fragment.app.FragmentManagerViewModel.clearNonConfigState(Landroidx\/fragment\/app\/Fragment;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0005|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(3) == false) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Clearing non\-config state for \")\lr0.append(r5)\landroid.util.Log.d(androidx.fragment.app.FragmentManagerViewModel.TAG, r0.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|androidx.fragment.app.FragmentManagerViewModel r0 = r4.mChildNonConfigs.get(r5.mWho)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|if (r0 == null) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0029|r0.onCleared()\lr4.mChildNonConfigs.remove(r5.mWho)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|androidx.lifecycle.ViewModelStore r1 = r4.mViewModelStores.get(r5.mWho)\l}"];
Node_22 [shape=record,label="{22\:\ 0x003d|if (r1 == null) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|r1.clear()\lr4.mViewModelStores.remove(r5.mWho)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManagerViewModel.clearNonConfigState((r4v0 'this' androidx.fragment.app.FragmentManagerViewModel A[IMMUTABLE_TYPE, THIS]), (r5v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x003d \-\> B:24:0x0049, CROSS_EDGE: B:19:0x0027 \-\> B:21:0x0033, CROSS_EDGE: B:16:0x0005 \-\> B:18:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

