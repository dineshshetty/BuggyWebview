digraph "CFG forandroidx.fragment.app.FragmentManagerViewModel.getSnapshot()Landroidx\/fragment\/app\/FragmentManagerNonConfig;" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000}"];
Node_33 [shape=record,label="{33\:\ 0x0007|if (r6.mRetainedFragments.isEmpty() == false) goto L9\l}"];
Node_34 [shape=record,label="{34\:\ 0x0009}"];
Node_35 [shape=record,label="{35\:\ 0x000f|if (r6.mChildNonConfigs.isEmpty() == false) goto L9\l}"];
Node_36 [shape=record,label="{36\:\ 0x0011}"];
Node_37 [shape=record,label="{37\:\ 0x0017|if (r6.mViewModelStores.isEmpty() == false) goto L9\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|RETURN\l|return null\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|java.util.HashMap r0 = new java.util.HashMap\<\>()\ljava.util.Iterator r2 = r6.mChildNonConfigs.entrySet().iterator()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0029|LOOP_START\lLOOP:0: B:40:0x0029\-\>B:57:0x0029\l}"];
Node_41 [shape=record,label="{41\:\ 0x002d|if (r2.hasNext() == false) goto L19\l}"];
Node_42 [shape=record,label="{42\:\ 0x002f|java.util.Map$Entry r3 = r2.next()\landroidx.fragment.app.FragmentManagerNonConfig r4 = r3.getValue().getSnapshot()\l}"];
Node_43 [shape=record,label="{43\:\ 0x003f|if (r4 == null) goto L18\l}"];
Node_56 [shape=record,label="{56\:\ 0x0041|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0041|r0.put(r3.getKey(), r4)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0029|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0029|LOOP_END\lSYNTHETIC\lLOOP:0: B:40:0x0029\-\>B:57:0x0029\l}"];
Node_58 [shape=record,label="{58\:\ 0x0029|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0049|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0049|r6.mHasSavedSnapshot = true\l}"];
Node_47 [shape=record,label="{47\:\ 0x0052|if (r6.mRetainedFragments.isEmpty() == false) goto L27\l}"];
Node_48 [shape=record,label="{48\:\ 0x0054}"];
Node_49 [shape=record,label="{49\:\ 0x0058|if (r0.isEmpty() == false) goto L27\l}"];
Node_50 [shape=record,label="{50\:\ 0x005a}"];
Node_51 [shape=record,label="{51\:\ 0x0060|if (r6.mViewModelStores.isEmpty() == false) goto L27\l}"];
Node_52 [shape=record,label="{52\:\ 0x0062|RETURN\l|return null\l}"];
Node_53 [shape=record,label="{53\:\ 0x0063}"];
Node_54 [shape=record,label="{54\:\ 0x007a|RETURN\l|return new androidx.fragment.app.FragmentManagerNonConfig(new java.util.ArrayList(r6.mRetainedFragments.values()), r0, new java.util.HashMap(r6.mViewModelStores))\l}"];
MethodNode[shape=record,label="{public androidx.fragment.app.FragmentManagerNonConfig androidx.fragment.app.FragmentManagerViewModel.getSnapshot((r6v0 'this' androidx.fragment.app.FragmentManagerViewModel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lBACK_EDGE: B:44:0x0041 \-\> B:40:0x0029, BACK_EDGE: B:43:0x003f \-\> B:40:0x0029, CROSS_EDGE: B:52:0x0062 \-\> B:31:?, CROSS_EDGE: B:54:0x007a \-\> B:31:?, CROSS_EDGE: B:49:0x0058 \-\> B:53:0x0063, CROSS_EDGE: B:47:0x0052 \-\> B:53:0x0063, CROSS_EDGE: B:35:0x000f \-\> B:39:0x001a, CROSS_EDGE: B:33:0x0007 \-\> B:39:0x001a\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_31;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_55;
Node_42 -> Node_43;
Node_43 -> Node_56[style=dashed];
Node_43 -> Node_58;
Node_56 -> Node_44;
Node_44 -> Node_59;
Node_59 -> Node_57;
Node_57 -> Node_40;
Node_58 -> Node_57;
Node_55 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_53;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_31;
Node_53 -> Node_54;
Node_54 -> Node_31;
}

