digraph "CFG forandroidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot(Landroidx\/fragment\/app\/FragmentManagerNonConfig;)V" {
Node_30 [shape=record,label="{30\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0000|r7.mRetainedFragments.clear()\lr7.mChildNonConfigs.clear()\lr7.mViewModelStores.clear()\l}"];
Node_33 [shape=record,label="{33\:\ 0x000f|if (r8 == null) goto L26\l}"];
Node_34 [shape=record,label="{34\:\ 0x0011|java.util.Collection r0 = r8.getFragments()\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|if (r0 == null) goto L16\l}"];
Node_36 [shape=record,label="{36\:\ 0x0017|java.util.Iterator r1 = r0.iterator()\l}"];
Node_37 [shape=record,label="{37\:\ 0x001b|LOOP_START\lLOOP:0: B:37:0x001b\-\>B:56:0x001b\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|if (r1.hasNext() == false) goto L15\l}"];
Node_39 [shape=record,label="{39\:\ 0x0021|androidx.fragment.app.Fragment r2 = r1.next()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0027|if (r2 == null) goto L14\l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0029|r7.mRetainedFragments.put(r2.mWho, r2)\l}"];
Node_58 [shape=record,label="{58\:\ 0x001b|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x001b|LOOP_END\lSYNTHETIC\lLOOP:0: B:37:0x001b\-\>B:56:0x001b\l}"];
Node_57 [shape=record,label="{57\:\ 0x001b|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0031|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0031|java.util.Map r1 = r8.getChildNonConfigs()\l}"];
Node_44 [shape=record,label="{44\:\ 0x0035|if (r1 == null) goto L23\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|java.util.Iterator r2 = r1.entrySet().iterator()\l}"];
Node_46 [shape=record,label="{46\:\ 0x003f|LOOP_START\lLOOP:1: B:46:0x003f\-\>B:48:0x0045\l}"];
Node_47 [shape=record,label="{47\:\ 0x0043|if (r2.hasNext() == false) goto L22\l}"];
Node_48 [shape=record,label="{48\:\ 0x0045|LOOP_END\lLOOP:1: B:46:0x003f\-\>B:48:0x0045\l|java.util.Map$Entry r3 = r2.next()\landroidx.fragment.app.FragmentManagerViewModel r4 = new androidx.fragment.app.FragmentManagerViewModel(r7.mStateAutomaticallySaved)\lr4.restoreFromSnapshot(r3.getValue())\lr7.mChildNonConfigs.put(r3.getKey(), r4)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0065|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0065|java.util.Map r2 = r8.getViewModelStores()\l}"];
Node_50 [shape=record,label="{50\:\ 0x0069|if (r2 == null) goto L26\l}"];
Node_51 [shape=record,label="{51\:\ 0x006b|r7.mViewModelStores.putAll(r2)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0070|r7.mHasSavedSnapshot = false\l}"];
Node_53 [shape=record,label="{53\:\ 0x0073|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot((r7v0 'this' androidx.fragment.app.FragmentManagerViewModel A[IMMUTABLE_TYPE, THIS]), (r8v0 'nonConfig' androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lBACK_EDGE: B:41:0x0029 \-\> B:37:0x001b, BACK_EDGE: B:40:0x0027 \-\> B:37:0x001b, BACK_EDGE: B:48:0x0045 \-\> B:46:0x003f, CROSS_EDGE: B:50:0x0069 \-\> B:52:0x0070, CROSS_EDGE: B:44:0x0035 \-\> B:49:0x0065, CROSS_EDGE: B:35:0x0015 \-\> B:43:0x0031, CROSS_EDGE: B:33:0x000f \-\> B:52:0x0070\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_30;Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_52;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_43;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_55;
Node_39 -> Node_40;
Node_40 -> Node_54[style=dashed];
Node_40 -> Node_57;
Node_54 -> Node_41;
Node_41 -> Node_58;
Node_58 -> Node_56;
Node_56 -> Node_37;
Node_57 -> Node_56;
Node_55 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_59;
Node_48 -> Node_46;
Node_59 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_31;
}

