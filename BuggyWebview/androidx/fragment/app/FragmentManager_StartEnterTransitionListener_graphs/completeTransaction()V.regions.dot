digraph "CFG forandroidx.fragment.app.FragmentManager.StartEnterTransitionListener.completeTransaction()V" {
subgraph cluster_Region_2023885810 {
label = "R(4:2|4|(2:7|(1:13))|22)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0004|boolean r0 = r7.mNumPostponed \> 0\l}"];
Node_33 [shape=record,label="{33\:\ 0x0009|PHI: r0 \l  PHI: (r0v2 'canceled' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager r3 = r7.mRecord.mManager\ljava.util.Iterator r4 = r3.getFragments().iterator()\l\l}"];
subgraph cluster_LoopRegion_734057644 {
label = "LOOP:0: (2:7|(1:13))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0019|androidx.fragment.app.Fragment \lif (r4.hasNext() != false) goto L7\l}"];
subgraph cluster_Region_2636191 {
label = "R(2:7|(1:13))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x001b|androidx.fragment.app.Fragment r5 = r4.next()\lr5.setOnStartEnterTransitionListener(null)\l}"];
subgraph cluster_IfRegion_798954122 {
label = "IF [B:37:0x0025, B:39:0x002b] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0025|if (r0 != false) goto L9\l}"];
Node_39 [shape=record,label="{39\:\ 0x002b|ADDED_TO_REGION\l|if (r5.isPostponed() != false) goto L12\l}"];
subgraph cluster_Region_1102379952 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x002d|r5.startPostponedEnterTransition()\l}"];
}
}
}
}
Node_45 [shape=record,label="{45\:\ 0x003c|PHI: r1 \l  PHI: (r1v1 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|r7.mRecord.mManager.completeExecute(r7.mRecord, r7.mIsBack, r0 ? false : true, true)\l}"];
}
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0006}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0015|LOOP_START\lLOOP:0: B:34:0x0015\-\>B:50:0x0015\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0027|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0027}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x002d|SYNTHETIC\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0015|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0015|LOOP_END\lSYNTHETIC\lLOOP:0: B:34:0x0015\-\>B:50:0x0015\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0015|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0015|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0031|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0031}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0039}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x003b}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x003f}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0008}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.StartEnterTransitionListener.completeTransaction((r7v0 'this' androidx.fragment.app.FragmentManager$StartEnterTransitionListener A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:40:0x002d \-\> B:34:0x0015, BACK_EDGE: B:39:0x002b \-\> B:34:0x0015, BACK_EDGE: B:37:0x0025 \-\> B:34:0x0015, CROSS_EDGE: B:43:0x0039 \-\> B:45:0x003c, CROSS_EDGE: B:32:0x0008 \-\> B:33:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_27;Node_30 -> Node_31;
Node_30 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_35 -> Node_48[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_47;
Node_37 -> Node_51[style=dashed];
Node_39 -> Node_49;
Node_39 -> Node_52[style=dashed];
Node_40 -> Node_53;
Node_45 -> Node_46;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_33;
Node_34 -> Node_35;
Node_47 -> Node_38;
Node_38 -> Node_39;
Node_49 -> Node_40;
Node_53 -> Node_50;
Node_50 -> Node_34;
Node_52 -> Node_50;
Node_51 -> Node_50;
Node_48 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_46 -> Node_28;
Node_32 -> Node_33;
}

