digraph "CFG forandroidx.fragment.app.FragmentAnim.3.onAnimationEnd(Landroid\/animation\/Animator;)V" {
subgraph cluster_Region_1230259957 {
label = "R(2:1|(1:(1:5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|r1.endViewTransition(r2)\landroid.animation.Animator android.animation.Animator r0 = r3.getAnimator()\lr3.setAnimator(null)\l}"];
subgraph cluster_Region_506209272 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1426897284 {
label = "IF [B:13:0x0013, B:15:0x001d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0013|if (r0 != null) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|ADDED_TO_REGION\l|if (r1.indexOfChild(r2) \< 0) goto L5\l}"];
subgraph cluster_Region_801526592 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x001f|r4.onComplete(r3, r5)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0015}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0028|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentAnim.3.onAnimationEnd((r4v0 'this' androidx.fragment.app.FragmentAnim$3 A[IMMUTABLE_TYPE, THIS]), (r5v0 'anim' android.animation.Animator A[D('anim' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x001d \-\> B:17:0x0028, CROSS_EDGE: B:13:0x0013 \-\> B:17:0x0028\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.animation.Animator.AnimatorListener.onAnimationEnd(android.animation.Animator):void\}]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

