digraph "CFG forandroidx.fragment.app.DialogFragment.setStyle(II)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0005|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(2) == false) goto L4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Setting style and theme for DialogFragment \")\lr1.append(r3)\lr1.append(\" to \")\lr1.append(r4)\lr1.append(\", \")\lr1.append(r5)\landroid.util.Log.d(\"FragmentManager\", r1.toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|r3.mStyle = r4\l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|if (r4 == 2) goto L13\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031}"];
Node_22 [shape=record,label="{22\:\ 0x0032|if (r4 != 3) goto L8\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|if (r5 == 0) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|r3.mTheme = r5\l}"];
Node_26 [shape=record,label="{26\:\ 0x003d|RETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0034|r3.mTheme = 16973913\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.DialogFragment.setStyle((r3v0 'this' androidx.fragment.app.DialogFragment A[IMMUTABLE_TYPE, THIS]), (r4v0 'style' int A[D('style' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'theme' int A[D('theme' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x0039 \-\> B:26:0x003d, CROSS_EDGE: B:22:0x0032 \-\> B:24:0x0039, CROSS_EDGE: B:20:0x002f \-\> B:23:0x0034, CROSS_EDGE: B:17:0x0005 \-\> B:19:0x002d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_23 -> Node_24;
}

