digraph "CFG forandroidx.fragment.app.FragmentTransition.retainValues(Landroidx\/collection\/ArrayMap;Landroidx\/collection\/ArrayMap;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r3 I:androidx.collection.ArrayMap A[D('nameOverrides' androidx.collection.ArrayMap\<java.lang.String, java.lang.String\>)])\l type: VIRTUAL call: androidx.collection.ArrayMap.size():int A[MD:():int (m)] (LINE:1007)\l0x0004: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|LOOP_START\lLOOP:0: B:15:0x0006\-\>B:19:0x0017\l|0x0006: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:21:0x001a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:androidx.collection.ArrayMap A[D('nameOverrides' androidx.collection.ArrayMap\<java.lang.String, java.lang.String\>)])\l  (r0 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.ArrayMap.valueAt(int):java.lang.Object A[MD:(int):V (m)] (LINE:1008)\l0x000c: CHECK_CAST (r1 I:java.lang.String) = (java.lang.String) (r1 I:??[OBJECT, ARRAY]) \l0x000e: INVOKE  (r2 I:boolean) = \l  (r4 I:androidx.collection.ArrayMap A[D('namedViews' androidx.collection.ArrayMap\<java.lang.String, android.view.View\>)])\l  (r1 I:java.lang.Object A[D('targetName' java.lang.String)])\l type: VIRTUAL call: androidx.collection.ArrayMap.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)] (LINE:1009)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0012|0x0012: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0017 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|0x0014: INVOKE  \l  (r3 I:androidx.collection.ArrayMap A[D('nameOverrides' androidx.collection.ArrayMap\<java.lang.String, java.lang.String\>)])\l  (r0 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.ArrayMap.removeAt(int):java.lang.Object A[MD:(int):V (m)] (LINE:1010)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|LOOP_END\lLOOP:0: B:15:0x0006\-\>B:19:0x0017\l|0x0017: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (\-1 int)  (LINE:1007)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001a|RETURN\l|0x001a: RETURN    (LINE:1013)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static void androidx.fragment.app.FragmentTransition.retainValues((r3 I:androidx.collection.ArrayMap\<java.lang.String, java.lang.String\> A[D('nameOverrides' androidx.collection.ArrayMap\<java.lang.String, java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.collection.ArrayMap\<java.lang.String, android.view.View\> A[D('namedViews' androidx.collection.ArrayMap\<java.lang.String, android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0017 \-\> B:15:0x0006, CROSS_EDGE: B:17:0x0012 \-\> B:19:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x0017: r1 'targetName' Ljava\/lang\/String;\l  0x0006\-0x001a: r0 'i' I\l  0x0000\-0x001a: r3 'nameOverrides' Landroidx\/collection\/ArrayMap;, signature: Landroidx\/collection\/ArrayMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;\l  0x0000\-0x001a: r4 'namedViews' Landroidx\/collection\/ArrayMap;, signature: Landroidx\/collection\/ArrayMap\<Ljava\/lang\/String;Landroid\/view\/View;\>;\lSIGNATURE: (Landroidx\/collection\/ArrayMap\<Ljava\/lang\/String;Ljava\/lang\/String;\>;Landroidx\/collection\/ArrayMap\<Ljava\/lang\/String;Landroid\/view\/View;\>;)V\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

