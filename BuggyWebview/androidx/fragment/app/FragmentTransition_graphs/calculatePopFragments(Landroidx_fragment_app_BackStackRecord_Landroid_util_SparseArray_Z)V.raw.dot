digraph "CFG forandroidx.fragment.app.FragmentTransition.calculatePopFragments(Landroidx\/fragment\/app\/BackStackRecord;Landroid\/util\/SparseArray;Z)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.FragmentManager) = (r4 I:androidx.fragment.app.BackStackRecord A[D('transaction' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mManager androidx.fragment.app.FragmentManager  (LINE:1142)\l0x0002: INVOKE  (r0 I:androidx.fragment.app.FragmentContainer) = (r0 I:androidx.fragment.app.FragmentManager) type: VIRTUAL call: androidx.fragment.app.FragmentManager.getContainer():androidx.fragment.app.FragmentContainer A[MD:():androidx.fragment.app.FragmentContainer (m)]\l0x0006: INVOKE  (r0 I:boolean) = (r0 I:androidx.fragment.app.FragmentContainer) type: VIRTUAL call: androidx.fragment.app.FragmentContainer.onHasView():boolean A[MD:():boolean (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000d \l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:1143)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r4 I:androidx.fragment.app.BackStackRecord A[D('transaction' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:1145)\l0x000f: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0013: ARITH  (r1 I:int) = (r0 I:int A[D('numOps' int)]) + (\-1 int)  (LINE:1146)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0015|LOOP_START\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\l|0x0015: IF  (r1 I:??[int, byte, short, char] A[D('opNum' int)]) \< (0 ??[int, byte, short, char])  \-\> B:19:0x0026 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0017|LOOP_END\lLOOP:0: B:16:0x0015\-\>B:17:0x0017\l|0x0017: IGET  (r2 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r4 I:androidx.fragment.app.BackStackRecord A[D('transaction' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:1147)\l0x0019: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int A[D('opNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x001d: CHECK_CAST (r2 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r2 I:??[OBJECT, ARRAY]) \l0x001f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1148)\l0x0020: INVOKE  \l  (r4 I:androidx.fragment.app.BackStackRecord A[D('transaction' androidx.fragment.app.BackStackRecord)])\l  (r2 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)])\l  (r5 I:android.util.SparseArray A[D('transitioningFragments' android.util.SparseArray\<androidx.fragment.app.FragmentTransition$FragmentContainerTransition\>)])\l  (r3 I:boolean)\l  (r6 I:boolean A[D('isReordered' boolean)])\l type: STATIC call: androidx.fragment.app.FragmentTransition.addToFirstInLastOut(androidx.fragment.app.BackStackRecord, androidx.fragment.app.FragmentTransaction$Op, android.util.SparseArray, boolean, boolean):void A[MD:(androidx.fragment.app.BackStackRecord, androidx.fragment.app.FragmentTransaction$Op, android.util.SparseArray\<androidx.fragment.app.FragmentTransition$FragmentContainerTransition\>, boolean, boolean):void (m)]\l0x0023: ARITH  (r1 I:int) = (r1 I:int A[D('opNum' int)]) + (\-1 int)  (LINE:1146)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:1150)\l}"];
MethodNode[shape=record,label="{public static void androidx.fragment.app.FragmentTransition.calculatePopFragments((r4 I:androidx.fragment.app.BackStackRecord A[D('transaction' androidx.fragment.app.BackStackRecord), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.util.SparseArray\<androidx.fragment.app.FragmentTransition$FragmentContainerTransition\> A[D('transitioningFragments' android.util.SparseArray\<androidx.fragment.app.FragmentTransition$FragmentContainerTransition\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('isReordered' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x0017 \-\> B:16:0x0015, CROSS_EDGE: B:18:0x0026 \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0023: r2 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x0015\-0x0026: r1 'opNum' I\l  0x0013\-0x0026: r0 'numOps' I\l  \-1 \-0x0026: r4 'transaction' Landroidx\/fragment\/app\/BackStackRecord;\l  0x0000\-0x0026: r5 'transitioningFragments' Landroid\/util\/SparseArray;, signature: Landroid\/util\/SparseArray\<Landroidx\/fragment\/app\/FragmentTransition$FragmentContainerTransition;\>;\l  \-1 \-0x0026: r6 'isReordered' Z\lSIGNATURE: (Landroidx\/fragment\/app\/BackStackRecord;Landroid\/util\/SparseArray\<Landroidx\/fragment\/app\/FragmentTransition$FragmentContainerTransition;\>;Z)V\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_16;
Node_19 -> Node_18;
Node_18 -> Node_11;
}

