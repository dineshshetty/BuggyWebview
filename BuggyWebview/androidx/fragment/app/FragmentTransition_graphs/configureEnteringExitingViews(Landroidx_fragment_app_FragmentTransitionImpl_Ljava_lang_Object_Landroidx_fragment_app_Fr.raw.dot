digraph "CFG forandroidx.fragment.app.FragmentTransition.configureEnteringExitingViews(Landroidx\/fragment\/app\/FragmentTransitionImpl;Ljava\/lang\/Object;Landroidx\/fragment\/app\/Fragment;Ljava\/util\/ArrayList;Landroid\/view\/View;)Ljava\/util\/ArrayList;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1052)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|0x0001: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transition' java.lang.Object)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0023  (LINE:1053)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0003|0x0003: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1054)\l0x0005: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0008: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('viewList' java.util.ArrayList\<android.view.View\>)]) = (r1 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:android.view.View) = (r5 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) type: VIRTUAL call: androidx.fragment.app.Fragment.getView():android.view.View A[MD:():android.view.View (m)] (LINE:1055)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('root' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0012  (LINE:1056)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: INVOKE  \l  (r3 I:androidx.fragment.app.FragmentTransitionImpl A[D('impl' androidx.fragment.app.FragmentTransitionImpl)])\l  (r0 I:java.util.ArrayList A[D('viewList' java.util.ArrayList\<android.view.View\>)])\l  (r1 I:android.view.View A[D('root' android.view.View)])\l type: VIRTUAL call: androidx.fragment.app.FragmentTransitionImpl.captureTransitioningViews(java.util.ArrayList, android.view.View):void A[MD:(java.util.ArrayList\<android.view.View\>, android.view.View):void (m)] (LINE:1057)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sharedElements' java.util.ArrayList\<android.view.View\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0017  (LINE:1059)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: INVOKE  \l  (r0 I:java.util.ArrayList A[D('viewList' java.util.ArrayList\<android.view.View\>)])\l  (r6 I:java.util.Collection A[D('sharedElements' java.util.ArrayList\<android.view.View\>)])\l type: VIRTUAL call: java.util.ArrayList.removeAll(java.util.Collection):boolean A[MD:(java.util.Collection\<?\>):boolean (c)] (LINE:1060)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: INVOKE  (r2 I:boolean) = (r0 I:java.util.ArrayList A[D('viewList' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)] (LINE:1062)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0023 \l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|0x001d: INVOKE  \l  (r0 I:java.util.ArrayList A[D('viewList' java.util.ArrayList\<android.view.View\>)])\l  (r7 I:java.lang.Object A[D('nonExistentView' android.view.View)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:1063)\l0x0020: INVOKE  \l  (r3 I:androidx.fragment.app.FragmentTransitionImpl A[D('impl' androidx.fragment.app.FragmentTransitionImpl)])\l  (r4 I:java.lang.Object A[D('transition' java.lang.Object)])\l  (r0 I:java.util.ArrayList A[D('viewList' java.util.ArrayList\<android.view.View\>)])\l type: VIRTUAL call: androidx.fragment.app.FragmentTransitionImpl.addTargets(java.lang.Object, java.util.ArrayList):void A[MD:(java.lang.Object, java.util.ArrayList\<android.view.View\>):void (m)] (LINE:1064)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|RETURN\l|0x0023: RETURN  (r0 I:java.util.ArrayList\<android.view.View\> A[D('viewList' java.util.ArrayList\<android.view.View\>)])  (LINE:1067)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static java.util.ArrayList\<android.view.View\> androidx.fragment.app.FragmentTransition.configureEnteringExitingViews((r3 I:androidx.fragment.app.FragmentTransitionImpl A[D('impl' androidx.fragment.app.FragmentTransitionImpl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[D('transition' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.ArrayList\<android.view.View\> A[D('sharedElements' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('nonExistentView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x001b \-\> B:25:0x0023, CROSS_EDGE: B:20:0x0012 \-\> B:22:0x0017, CROSS_EDGE: B:18:0x000d \-\> B:20:0x0012, CROSS_EDGE: B:16:0x0001 \-\> B:25:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0023: r1 'root' Landroid\/view\/View;\l  0x0001\-0x0023: r0 'viewList' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\l  \-1 \-0x0023: r3 'impl' Landroidx\/fragment\/app\/FragmentTransitionImpl;\l  \-1 \-0x0023: r4 'transition' Ljava\/lang\/Object;\l  \-1 \-0x0023: r5 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x0000\-0x0023: r6 'sharedElements' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\l  \-1 \-0x0023: r7 'nonExistentView' Landroid\/view\/View;\lSIGNATURE: (Landroidx\/fragment\/app\/FragmentTransitionImpl;Ljava\/lang\/Object;Landroidx\/fragment\/app\/Fragment;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;Landroid\/view\/View;)Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

