digraph "CFG forandroidx.fragment.app.FragmentManager.7.onAnimationEnd(Landroid\/animation\/Animator;)V" {
subgraph cluster_Region_1307240328 {
label = "R(2:1|(1:(1:5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|r2.endViewTransition(r3)\lr3.removeListener(r2)\l}"];
subgraph cluster_Region_154202753 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_213556649 {
label = "IF [B:13:0x000e, B:15:0x0014] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000e|if (r4.mView != null) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0014|ADDED_TO_REGION\l|if (r4.mHidden != false) goto L5\l}"];
subgraph cluster_Region_1815498795 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0016|r4.mView.setVisibility(8)\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0010}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x001f|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.7.onAnimationEnd((r2v0 'this' androidx.fragment.app.FragmentManager$7 A[IMMUTABLE_TYPE, THIS]), (r3v0 'animation' android.animation.Animator A[D('animation' android.animation.Animator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0014 \-\> B:17:0x001f, CROSS_EDGE: B:13:0x000e \-\> B:17:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.animation.Animator.AnimatorListener.onAnimationEnd(android.animation.Animator):void\}]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

