digraph "CFG forandroidx.fragment.app.FragmentManager.executeOpsTogether(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;II)V" {
Node_115 [shape=record,label="{115\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_117 [shape=record,label="{117\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY])  (LINE:2120)\l0x0002: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)]) \l0x0004: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]) \l0x0006: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) \l0x0008: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('endIndex' int)]) \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r15 I:java.util.ArrayList), (r4 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000e: CHECK_CAST (r0 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r0 I:??[OBJECT, ARRAY]) \l0x0010: IGET  (r2 I:boolean) = (r0 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mReorderingAllowed boolean \l0x0012: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2121)\l0x0013: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList  (LINE:2122)\l}"];
Node_118 [shape=record,label="{118\:\ 0x0015|0x0015: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x001f \l}"];
Node_119 [shape=record,label="{119\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2123)\l0x0019: INVOKE  (r1 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x001c: IPUT  (r1 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>), (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList \l}"];
Node_121 [shape=record,label="{121\:\ 0x0022|0x0022: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList  (LINE:2127)\l0x0024: IGET  (r7 I:androidx.fragment.app.FragmentStore) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore \l0x0026: INVOKE  (r7 I:java.util.List) = (r7 I:androidx.fragment.app.FragmentStore) type: VIRTUAL call: androidx.fragment.app.FragmentStore.getFragments():java.util.List A[MD:():java.util.List\<androidx.fragment.app.Fragment\> (m)]\l0x002a: INVOKE  (r1 I:java.util.ArrayList), (r7 I:java.util.Collection) type: VIRTUAL call: java.util.ArrayList.addAll(java.util.Collection):boolean A[MD:(java.util.Collection\<? extends E\>):boolean (c)]\l0x002d: INVOKE  (r1 I:androidx.fragment.app.Fragment) = (r19 I:androidx.fragment.app.FragmentManager) type: VIRTUAL call: androidx.fragment.app.FragmentManager.getPrimaryNavigationFragment():androidx.fragment.app.Fragment A[MD:():androidx.fragment.app.Fragment (m)] (LINE:2128)\l0x0031: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:2129)\l0x0033: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('addToBackStack' boolean)]) \l}"];
Node_122 [shape=record,label="{122\:\ 0x0035|LOOP_START\lLOOP:0: B:122:0x0035\-\>B:133:0x005f\l|0x0035: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('addToBackStack' boolean)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_123 [shape=record,label="{123\:\ 0x0036|0x0036: IF  (r7 I:??[int, byte, short, char] A[D('recordNum' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:203:0x0064 \l}"];
Node_124 [shape=record,label="{124\:\ 0x0038|0x0038: INVOKE  (r8 I:java.lang.Object) = (r15 I:java.util.ArrayList), (r7 I:int A[D('recordNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2130)\l0x003c: CHECK_CAST (r8 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r8 I:??[OBJECT, ARRAY]) \l0x003e: INVOKE  (r9 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r7 I:int A[D('recordNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2131)\l0x0042: CHECK_CAST (r9 I:java.lang.Boolean) = (java.lang.Boolean) (r9 I:??[OBJECT, ARRAY]) \l0x0044: INVOKE  (r9 I:boolean) = (r9 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_125 [shape=record,label="{125\:\ 0x0048|0x0048: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPop' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:127:0x0051  (LINE:2132)\l}"];
Node_126 [shape=record,label="{126\:\ 0x004a|0x004a: IGET  (r10 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList  (LINE:2133)\l0x004c: INVOKE  (r1 I:androidx.fragment.app.Fragment A[D('oldPrimaryNav' androidx.fragment.app.Fragment)]) = \l  (r8 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)])\l  (r10 I:java.util.ArrayList)\l  (r1 I:androidx.fragment.app.Fragment A[D('oldPrimaryNav' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.BackStackRecord.expandOps(java.util.ArrayList, androidx.fragment.app.Fragment):androidx.fragment.app.Fragment A[MD:(java.util.ArrayList\<androidx.fragment.app.Fragment\>, androidx.fragment.app.Fragment):androidx.fragment.app.Fragment (m)]\l}"];
Node_128 [shape=record,label="{128\:\ 0x0057|0x0057: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('addToBackStack' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:205:0x005f  (LINE:2137)\l}"];
Node_129 [shape=record,label="{129\:\ 0x0059|0x0059: IGET  (r10 I:boolean) = (r8 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mAddToBackStack boolean \l}"];
Node_130 [shape=record,label="{130\:\ 0x005b|0x005b: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:132:0x005e \l}"];
Node_132 [shape=record,label="{132\:\ 0x005e|0x005e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_204 [shape=record,label="{204\:\ 0x005f|SYNTHETIC\l}"];
Node_133 [shape=record,label="{133\:\ 0x005f|LOOP_END\lLOOP:0: B:122:0x0035\-\>B:133:0x005f\l|0x005f: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('addToBackStack' boolean)]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0061: ARITH  (r7 I:int) = (r7 I:int A[D('recordNum' int)]) + (1 int)  (LINE:2129)\l}"];
Node_206 [shape=record,label="{206\:\ 0x005f|SYNTHETIC\l}"];
Node_205 [shape=record,label="{205\:\ 0x005f|SYNTHETIC\l}"];
Node_127 [shape=record,label="{127\:\ 0x0051|0x0051: IGET  (r10 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList  (LINE:2135)\l0x0053: INVOKE  (r1 I:androidx.fragment.app.Fragment A[D('oldPrimaryNav' androidx.fragment.app.Fragment)]) = \l  (r8 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)])\l  (r10 I:java.util.ArrayList)\l  (r1 I:androidx.fragment.app.Fragment A[D('oldPrimaryNav' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.BackStackRecord.trackAddedFragmentsInPop(java.util.ArrayList, androidx.fragment.app.Fragment):androidx.fragment.app.Fragment A[MD:(java.util.ArrayList\<androidx.fragment.app.Fragment\>, androidx.fragment.app.Fragment):androidx.fragment.app.Fragment (m)]\l}"];
Node_203 [shape=record,label="{203\:\ 0x0064|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x0064|0x0064: IGET  (r7 I:java.util.ArrayList\<androidx.fragment.app.Fragment\> A[D('recordNum' int)]) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpAddedFragments java.util.ArrayList  (LINE:2139)\l0x0066: INVOKE  (r7 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clear():void A[MD:():void (c)]\l}"];
Node_135 [shape=record,label="{135\:\ 0x0069|0x0069: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowReordering' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:154:0x00bc  (LINE:2141)\l}"];
Node_136 [shape=record,label="{136\:\ 0x006b|0x006b: IGET  (r7 I:int) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int \l}"];
Node_137 [shape=record,label="{137\:\ 0x006d|0x006d: IF  (r7 I:??[int, byte, short, char]) \< (r0 I:??[int, byte, short, char])  \-\> B:154:0x00bc \l}"];
Node_138 [shape=record,label="{138\:\ 0x006f|0x006f: SGET  (r7 I:boolean) =  androidx.fragment.app.FragmentManager.USE_STATE_MANAGER boolean  (LINE:2142)\l}"];
Node_139 [shape=record,label="{139\:\ 0x0071|0x0071: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:153:0x00a6 \l}"];
Node_140 [shape=record,label="{140\:\ 0x0073|0x0073: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:2145)\l}"];
Node_141 [shape=record,label="{141\:\ 0x0075|LOOP_START\lLOOP:1: B:141:0x0075\-\>B:151:0x00a2\l|0x0075: IF  (r7 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:207:0x00bc \l}"];
Node_142 [shape=record,label="{142\:\ 0x0077|0x0077: INVOKE  (r8 I:java.lang.Object) = (r15 I:java.util.ArrayList), (r7 I:int A[D('index' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2146)\l0x007b: CHECK_CAST (r8 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r8 I:??[OBJECT, ARRAY]) \l0x007d: IGET  (r9 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r8 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:2147)\l0x007f: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_143 [shape=record,label="{143\:\ 0x0083|LOOP_START\lLOOP:2: B:143:0x0083\-\>B:211:0x0083\l|0x0083: INVOKE  (r10 I:boolean) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_144 [shape=record,label="{144\:\ 0x0087|0x0087: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:209:0x00a2 \l}"];
Node_145 [shape=record,label="{145\:\ 0x0089|0x0089: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x008d: CHECK_CAST (r10 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r10 I:??[OBJECT, ARRAY]) \l0x008f: IGET  (r11 I:androidx.fragment.app.Fragment) = (r10 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:2148)\l}"];
Node_146 [shape=record,label="{146\:\ 0x0091|0x0091: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:212:0x0083  (LINE:2149)\l}"];
Node_208 [shape=record,label="{208\:\ 0x0093|SYNTHETIC\l}"];
Node_147 [shape=record,label="{147\:\ 0x0093|0x0093: IGET  (r12 I:androidx.fragment.app.FragmentManager) = (r11 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mFragmentManager androidx.fragment.app.FragmentManager \l}"];
Node_148 [shape=record,label="{148\:\ 0x0095|0x0095: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:213:0x0083 \l}"];
Node_210 [shape=record,label="{210\:\ 0x0098|SYNTHETIC\l}"];
Node_149 [shape=record,label="{149\:\ 0x0098|0x0098: INVOKE  (r12 I:androidx.fragment.app.FragmentStateManager) = \l  (r6 I:androidx.fragment.app.FragmentManager)\l  (r11 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.createOrGetFragmentStateManager(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager A[MD:(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager (m)] (LINE:2151)\l0x009c: IGET  (r13 I:androidx.fragment.app.FragmentStore) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore  (LINE:2152)\l0x009e: INVOKE  \l  (r13 I:androidx.fragment.app.FragmentStore)\l  (r12 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStore.makeActive(androidx.fragment.app.FragmentStateManager):void A[MD:(androidx.fragment.app.FragmentStateManager):void (m)]\l}"];
Node_214 [shape=record,label="{214\:\ 0x0083|SYNTHETIC\l}"];
Node_211 [shape=record,label="{211\:\ 0x0083|LOOP_END\lSYNTHETIC\lLOOP:2: B:143:0x0083\-\>B:211:0x0083\l}"];
Node_213 [shape=record,label="{213\:\ 0x0083|SYNTHETIC\l}"];
Node_212 [shape=record,label="{212\:\ 0x0083|SYNTHETIC\l}"];
Node_209 [shape=record,label="{209\:\ 0x00a2|SYNTHETIC\l}"];
Node_151 [shape=record,label="{151\:\ 0x00a2|LOOP_END\lLOOP:1: B:141:0x0075\-\>B:151:0x00a2\l|0x00a2: ARITH  (r7 I:int) = (r7 I:int A[D('index' int)]) + (1 int)  (LINE:2145)\l}"];
Node_207 [shape=record,label="{207\:\ 0x00bc|SYNTHETIC\l}"];
Node_153 [shape=record,label="{153\:\ 0x00a6|0x00a6: IGET  (r7 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:2157)\l0x00a8: INVOKE  (r7 I:android.content.Context) = (r7 I:androidx.fragment.app.FragmentHostCallback) type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.getContext():android.content.Context A[MD:():android.content.Context (m)]\l0x00ac: IGET  (r8 I:androidx.fragment.app.FragmentContainer) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mContainer androidx.fragment.app.FragmentContainer \l0x00ae: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x00af: IGET  (r14 I:androidx.fragment.app.FragmentTransition$Callback) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentTransitionCallback androidx.fragment.app.FragmentTransition$Callback \l0x00b1: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)]) \l0x00b3: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]) \l0x00b5: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) \l0x00b7: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('endIndex' int)]) \l0x00b9: INVOKE  \l  (r7 I:android.content.Context)\l  (r8 I:androidx.fragment.app.FragmentContainer)\l  (r9 I:java.util.ArrayList)\l  (r10 I:java.util.ArrayList)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:boolean)\l  (r14 I:androidx.fragment.app.FragmentTransition$Callback)\l type: STATIC call: androidx.fragment.app.FragmentTransition.startTransitions(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList, java.util.ArrayList, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void A[MD:(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void (m)]\l}"];
Node_154 [shape=record,label="{154\:\ 0x00bc|0x00bc: INVOKE  \l  (r20 I:java.util.ArrayList A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)])\l  (r21 I:java.util.ArrayList A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)])\l  (r22 I:int A[D('startIndex' int)])\l  (r23 I:int A[D('endIndex' int)])\l type: STATIC call: androidx.fragment.app.FragmentManager.executeOps(java.util.ArrayList, java.util.ArrayList, int, int):void A[MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, int, int):void (m)] (LINE:2162)\l0x00bf: SGET  (r7 I:boolean) =  androidx.fragment.app.FragmentManager.USE_STATE_MANAGER boolean  (LINE:2164)\l}"];
Node_155 [shape=record,label="{155\:\ 0x00c1|0x00c1: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:180:0x0149 \l}"];
Node_156 [shape=record,label="{156\:\ 0x00c3|0x00c3: ARITH  (r7 I:int) = (r3 I:int) + (\-1 int)  (LINE:2167)\l0x00c5: INVOKE  (r7 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r7 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x00c9: CHECK_CAST (r7 I:java.lang.Boolean) = (java.lang.Boolean) (r7 I:??[OBJECT, ARRAY]) \l0x00cb: INVOKE  (r7 I:boolean) = (r7 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l0x00cf: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:2170)\l}"];
Node_157 [shape=record,label="{157\:\ 0x00d1|LOOP_START\lLOOP:3: B:157:0x00d1\-\>B:174:0x011b\l|0x00d1: IF  (r8 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:215:0x011e \l}"];
Node_158 [shape=record,label="{158\:\ 0x00d3|0x00d3: INVOKE  (r9 I:java.lang.Object) = (r15 I:java.util.ArrayList), (r8 I:int A[D('index' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2171)\l0x00d7: CHECK_CAST (r9 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_159 [shape=record,label="{159\:\ 0x00d9|0x00d9: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:167:0x00fc  (LINE:2172)\l}"];
Node_160 [shape=record,label="{160\:\ 0x00db|0x00db: IGET  (r10 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r9 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:2174)\l0x00dd: INVOKE  (r10 I:int) = (r10 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x00e1: ARITH  (r10 I:int) = (r10 I:int) \- (r0 I:int) \l}"];
Node_161 [shape=record,label="{161\:\ 0x00e2|LOOP_START\lLOOP:4: B:161:0x00e2\-\>B:165:0x00f8\l|0x00e2: IF  (r10 I:??[int, byte, short, char] A[D('opIndex' int)]) \< (0 ??[int, byte, short, char])  \-\> B:217:0x011b \l}"];
Node_162 [shape=record,label="{162\:\ 0x00e4|0x00e4: IGET  (r11 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r9 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:2175)\l0x00e6: INVOKE  (r11 I:java.lang.Object) = (r11 I:java.util.ArrayList), (r10 I:int A[D('opIndex' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x00ea: CHECK_CAST (r11 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r11 I:??[OBJECT, ARRAY]) \l0x00ec: IGET  (r12 I:androidx.fragment.app.Fragment) = (r11 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:2176)\l}"];
Node_163 [shape=record,label="{163\:\ 0x00ee|0x00ee: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:219:0x00f8  (LINE:2177)\l}"];
Node_164 [shape=record,label="{164\:\ 0x00f1|0x00f1: INVOKE  (r13 I:androidx.fragment.app.FragmentStateManager) = \l  (r6 I:androidx.fragment.app.FragmentManager)\l  (r12 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.createOrGetFragmentStateManager(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager A[MD:(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager (m)] (LINE:2179)\l0x00f5: INVOKE  \l  (r13 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStateManager.moveToExpectedState():void A[MD:():void (m)] (LINE:2180)\l}"];
Node_218 [shape=record,label="{218\:\ 0x00f8|SYNTHETIC\l}"];
Node_165 [shape=record,label="{165\:\ 0x00f8|LOOP_END\lLOOP:4: B:161:0x00e2\-\>B:165:0x00f8\l|0x00f8: ARITH  (r10 I:int) = (r10 I:int A[D('opIndex' int)]) + (\-1 int)  (LINE:2174)\l}"];
Node_219 [shape=record,label="{219\:\ 0x00f8|SYNTHETIC\l}"];
Node_217 [shape=record,label="{217\:\ 0x011b|SYNTHETIC\l}"];
Node_174 [shape=record,label="{174\:\ 0x011b|LOOP_END\lLOOP:3: B:157:0x00d1\-\>B:174:0x011b\l|0x011b: ARITH  (r8 I:int) = (r8 I:int A[D('index' int)]) + (1 int)  (LINE:2170)\l}"];
Node_167 [shape=record,label="{167\:\ 0x00fc|0x00fc: IGET  (r10 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r9 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:2184)\l0x00fe: INVOKE  (r10 I:java.util.Iterator) = (r10 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_168 [shape=record,label="{168\:\ 0x0102|LOOP_START\lLOOP:5: B:168:0x0102\-\>B:221:0x0102\l|0x0102: INVOKE  (r11 I:boolean) = (r10 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_169 [shape=record,label="{169\:\ 0x0106|0x0106: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:216:0x011b \l}"];
Node_170 [shape=record,label="{170\:\ 0x0108|0x0108: INVOKE  (r11 I:java.lang.Object) = (r10 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x010c: CHECK_CAST (r11 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r11 I:??[OBJECT, ARRAY]) \l0x010e: IGET  (r12 I:androidx.fragment.app.Fragment) = (r11 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:2185)\l}"];
Node_171 [shape=record,label="{171\:\ 0x0110|0x0110: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:222:0x0102  (LINE:2186)\l}"];
Node_220 [shape=record,label="{220\:\ 0x0113|SYNTHETIC\l}"];
Node_172 [shape=record,label="{172\:\ 0x0113|0x0113: INVOKE  (r13 I:androidx.fragment.app.FragmentStateManager) = \l  (r6 I:androidx.fragment.app.FragmentManager)\l  (r12 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.createOrGetFragmentStateManager(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager A[MD:(androidx.fragment.app.Fragment):androidx.fragment.app.FragmentStateManager (m)] (LINE:2188)\l0x0117: INVOKE  \l  (r13 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStateManager.moveToExpectedState():void A[MD:():void (m)] (LINE:2189)\l}"];
Node_223 [shape=record,label="{223\:\ 0x0102|SYNTHETIC\l}"];
Node_221 [shape=record,label="{221\:\ 0x0102|LOOP_END\lSYNTHETIC\lLOOP:5: B:168:0x0102\-\>B:221:0x0102\l}"];
Node_222 [shape=record,label="{222\:\ 0x0102|SYNTHETIC\l}"];
Node_216 [shape=record,label="{216\:\ 0x011b|SYNTHETIC\l}"];
Node_215 [shape=record,label="{215\:\ 0x011e|SYNTHETIC\l}"];
Node_175 [shape=record,label="{175\:\ 0x011e|0x011e: IGET  (r8 I:int A[D('index' int)]) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int  (LINE:2196)\l0x0120: INVOKE  (r6 I:androidx.fragment.app.FragmentManager), (r8 I:int), (r0 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.moveToState(int, boolean):void A[MD:(int, boolean):void (m)]\l0x0123: INVOKE  (r0 I:java.util.Set) = (r6 I:androidx.fragment.app.FragmentManager), (r15 I:java.util.ArrayList), (r4 I:int), (r3 I:int) type: DIRECT call: androidx.fragment.app.FragmentManager.collectChangedControllers(java.util.ArrayList, int, int):java.util.Set A[MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, int, int):java.util.Set\<androidx.fragment.app.SpecialEffectsController\> (m)] (LINE:2197)\l0x0127: INVOKE  (r8 I:java.util.Iterator) = (r0 I:java.util.Set A[D('changedControllers' java.util.Set\<androidx.fragment.app.SpecialEffectsController\>)]) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:2199)\l}"];
Node_176 [shape=record,label="{176\:\ 0x012b|LOOP_START\lLOOP:6: B:176:0x012b\-\>B:178:0x0131\l|0x012b: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_177 [shape=record,label="{177\:\ 0x012f|0x012f: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:224:0x0141 \l}"];
Node_178 [shape=record,label="{178\:\ 0x0131|LOOP_END\lLOOP:6: B:176:0x012b\-\>B:178:0x0131\l|0x0131: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0135: CHECK_CAST (r9 I:androidx.fragment.app.SpecialEffectsController) = (androidx.fragment.app.SpecialEffectsController) (r9 I:??[OBJECT, ARRAY]) \l0x0137: INVOKE  \l  (r9 I:androidx.fragment.app.SpecialEffectsController A[D('controller' androidx.fragment.app.SpecialEffectsController)])\l  (r7 I:boolean A[D('isPop' boolean)])\l type: VIRTUAL call: androidx.fragment.app.SpecialEffectsController.updateOperationDirection(boolean):void A[MD:(boolean):void (m)] (LINE:2200)\l0x013a: INVOKE  (r9 I:androidx.fragment.app.SpecialEffectsController A[D('controller' androidx.fragment.app.SpecialEffectsController)]) type: VIRTUAL call: androidx.fragment.app.SpecialEffectsController.markPostponedState():void A[MD:():void (m)] (LINE:2201)\l0x013d: INVOKE  (r9 I:androidx.fragment.app.SpecialEffectsController A[D('controller' androidx.fragment.app.SpecialEffectsController)]) type: VIRTUAL call: androidx.fragment.app.SpecialEffectsController.executePendingOperations():void A[MD:():void (m)] (LINE:2202)\l}"];
Node_224 [shape=record,label="{224\:\ 0x0141|SYNTHETIC\l}"];
Node_179 [shape=record,label="{179\:\ 0x0141|0x0141: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('oldPrimaryNav' androidx.fragment.app.Fragment)])  (LINE:2204)\l0x0143: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('allowReordering' boolean)]) \l0x0145: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0146: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_192 [shape=record,label="{192\:\ 0x01a8|0x01a8: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('postponeIndex' int)]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:2225)\l}"];
Node_193 [shape=record,label="{193\:\ 0x01aa|LOOP_START\lLOOP:7: B:193:0x01aa\-\>B:199:0x01c5\l|0x01aa: IF  (r0 I:??[int, byte, short, char] A[D('recordNum' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:225:0x01cb \l}"];
Node_194 [shape=record,label="{194\:\ 0x01ac|0x01ac: INVOKE  (r1 I:java.lang.Object) = (r15 I:java.util.ArrayList), (r0 I:int A[D('recordNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2226)\l0x01b0: CHECK_CAST (r1 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r1 I:??[OBJECT, ARRAY]) \l0x01b2: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r0 I:int A[D('recordNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2227)\l0x01b6: CHECK_CAST (r2 I:java.lang.Boolean) = (java.lang.Boolean) (r2 I:??[OBJECT, ARRAY]) \l0x01b8: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l}"];
Node_195 [shape=record,label="{195\:\ 0x01bc|0x01bc: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:227:0x01c5  (LINE:2228)\l}"];
Node_196 [shape=record,label="{196\:\ 0x01be|0x01be: IGET  (r5 I:int) = (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mIndex int \l}"];
Node_197 [shape=record,label="{197\:\ 0x01c0|0x01c0: IF  (r5 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:228:0x01c5 \l}"];
Node_198 [shape=record,label="{198\:\ 0x01c2|0x01c2: CONST  (r5 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:2229)\l0x01c3: IPUT  (r5 I:int), (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) androidx.fragment.app.BackStackRecord.mIndex int \l}"];
Node_226 [shape=record,label="{226\:\ 0x01c5|SYNTHETIC\l}"];
Node_199 [shape=record,label="{199\:\ 0x01c5|LOOP_END\lLOOP:7: B:193:0x01aa\-\>B:199:0x01c5\l|0x01c5: INVOKE  (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.runOnCommitRunnables():void A[MD:():void (m)] (LINE:2231)\l0x01c8: ARITH  (r0 I:int) = (r0 I:int A[D('recordNum' int)]) + (1 int)  (LINE:2225)\l}"];
Node_228 [shape=record,label="{228\:\ 0x01c5|SYNTHETIC\l}"];
Node_227 [shape=record,label="{227\:\ 0x01c5|SYNTHETIC\l}"];
Node_225 [shape=record,label="{225\:\ 0x01cb|SYNTHETIC\l}"];
Node_200 [shape=record,label="{200\:\ 0x01cb|0x01cb: IF  (r16 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('addToBackStack' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:229:?  (LINE:2233)\l}"];
Node_201 [shape=record,label="{201\:\ 0x01cd|0x01cd: INVOKE  (r19 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.reportBackStackChanged():void A[MD:():void (m)] (LINE:2234)\l}"];
Node_202 [shape=record,label="{202\:\ 0x01d0|RETURN\lORIG_RETURN\l|0x01d0: RETURN    (LINE:2236)\l}"];
Node_116 [shape=record,label="{116\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_229 [shape=record,label="{229\:\ ?|SYNTHETIC\lRETURN\l|0x01d0: RETURN   A[SYNTHETIC] (LINE:2236)\l}"];
Node_180 [shape=record,label="{180\:\ 0x0149|0x0149: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('endIndex' int)])  (LINE:2205)\l}"];
Node_181 [shape=record,label="{181\:\ 0x014b|0x014b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowReordering' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:183:0x0171  (LINE:2206)\l}"];
Node_182 [shape=record,label="{182\:\ 0x014d|0x014d: NEW_INSTANCE  (r8 I:androidx.collection.ArraySet) =  androidx.collection.ArraySet  (LINE:2207)\l0x014f: INVOKE  (r8 I:androidx.collection.ArraySet) type: DIRECT call: androidx.collection.ArraySet.\<init\>():void A[MD:():void (m)]\l0x0152: INVOKE  \l  (r6 I:androidx.fragment.app.FragmentManager)\l  (r8 I:androidx.collection.ArraySet A[D('addedFragments' androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>)])\l type: DIRECT call: androidx.fragment.app.FragmentManager.addAddedFragments(androidx.collection.ArraySet):void A[MD:(androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>):void (m)] (LINE:2208)\l0x0155: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2209)\l0x0156: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY]) \l0x0158: MOVE  (r17 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('oldPrimaryNav' androidx.fragment.app.Fragment)]) \l0x015a: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('oldPrimaryNav' androidx.fragment.app.Fragment)]) = (r20 I:??[OBJECT, ARRAY] A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)]) \l0x015c: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('allowReordering' boolean)]) \l0x015e: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('allowReordering' boolean)]) = (r21 I:??[OBJECT, ARRAY] A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]) \l0x0160: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0161: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) \l0x0163: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0164: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r23 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('endIndex' int)]) \l0x0166: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0167: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('addedFragments' androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>)]) \l0x0168: INVOKE  (r7 I:int A[D('postponeIndex' int)]) = \l  (r0 I:androidx.fragment.app.FragmentManager)\l  (r1 I:java.util.ArrayList)\l  (r2 I:java.util.ArrayList)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:androidx.collection.ArraySet)\l type: DIRECT call: androidx.fragment.app.FragmentManager.postponePostponableTransactions(java.util.ArrayList, java.util.ArrayList, int, int, androidx.collection.ArraySet):int A[MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, int, int, androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>):int (m)]\l0x016c: INVOKE  \l  (r6 I:androidx.fragment.app.FragmentManager)\l  (r8 I:androidx.collection.ArraySet A[D('addedFragments' androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>)])\l type: DIRECT call: androidx.fragment.app.FragmentManager.makeRemovedFragmentsInvisible(androidx.collection.ArraySet):void A[MD:(androidx.collection.ArraySet\<androidx.fragment.app.Fragment\>):void (m)] (LINE:2211)\l0x016f: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('postponeIndex' int)]) \l}"];
Node_184 [shape=record,label="{184\:\ 0x017a|0x017a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('postponeIndex' int)]) == (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:191:0x01a6  (LINE:2214)\l}"];
Node_185 [shape=record,label="{185\:\ 0x017c|0x017c: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowReordering' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:191:0x01a6 \l}"];
Node_186 [shape=record,label="{186\:\ 0x017e|0x017e: IGET  (r1 I:int) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int  (LINE:2216)\l}"];
Node_187 [shape=record,label="{187\:\ 0x0180|0x0180: IF  (r1 I:??[int, byte, short, char]) \< (r14 I:??[int, byte, short, char])  \-\> B:189:0x019d \l}"];
Node_188 [shape=record,label="{188\:\ 0x0182|0x0182: IGET  (r1 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:2217)\l0x0184: INVOKE  (r7 I:android.content.Context) = (r1 I:androidx.fragment.app.FragmentHostCallback) type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.getContext():android.content.Context A[MD:():android.content.Context (m)]\l0x0188: IGET  (r8 I:androidx.fragment.app.FragmentContainer) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mContainer androidx.fragment.app.FragmentContainer \l0x018a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x018b: IGET  (r2 I:androidx.fragment.app.FragmentTransition$Callback) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentTransitionCallback androidx.fragment.app.FragmentTransition$Callback \l0x018d: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r20 I:??[OBJECT, ARRAY] A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)]) \l0x018f: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r21 I:??[OBJECT, ARRAY] A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]) \l0x0191: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY]) \l0x0192: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r22 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)]) \l0x0194: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('postponeIndex' int)]) \l0x0195: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0196: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0197: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0198: MOVE  (r14 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0199: INVOKE  \l  (r7 I:android.content.Context)\l  (r8 I:androidx.fragment.app.FragmentContainer)\l  (r9 I:java.util.ArrayList)\l  (r10 I:java.util.ArrayList)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:boolean)\l  (r14 I:androidx.fragment.app.FragmentTransition$Callback)\l type: STATIC call: androidx.fragment.app.FragmentTransition.startTransitions(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList, java.util.ArrayList, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void A[MD:(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void (m)]\l}"];
Node_190 [shape=record,label="{190\:\ 0x01a0|0x01a0: IGET  (r2 I:int) = (r6 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int  (LINE:2221)\l0x01a2: INVOKE  (r6 I:androidx.fragment.app.FragmentManager), (r2 I:int), (r1 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.moveToState(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_189 [shape=record,label="{189\:\ 0x019d|0x019d: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY])  (LINE:2216)\l0x019e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x019f: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_191 [shape=record,label="{191\:\ 0x01a6|0x01a6: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r11 I:??[OBJECT, ARRAY])  (LINE:2214)\l0x01a7: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_183 [shape=record,label="{183\:\ 0x0171|0x0171: MOVE  (r17 I:??[OBJECT, ARRAY] A[D('oldPrimaryNav' androidx.fragment.app.Fragment)]) = (r1 I:??[OBJECT, ARRAY] A[D('oldPrimaryNav' androidx.fragment.app.Fragment)])  (LINE:2206)\l0x0173: MOVE  (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('allowReordering' boolean)]) \l0x0175: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0176: MOVE  (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0177: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY]) \l0x0178: CONST  (r14 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0179: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('postponeIndex' int)]) \l}"];
Node_120 [shape=record,label="{120\:\ 0x001f|0x001f: INVOKE  (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clear():void A[MD:():void (c)] (LINE:2125)\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.executeOpsTogether((r19 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r20 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\> A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:java.util.ArrayList\<java.lang.Boolean\> A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:133:0x005f \-\> B:122:0x0035, CROSS_EDGE: B:130:0x005b \-\> B:133:0x005f, CROSS_EDGE: B:128:0x0057 \-\> B:133:0x005f, CROSS_EDGE: B:127:0x0051 \-\> B:128:0x0057, BACK_EDGE: B:149:0x0098 \-\> B:143:0x0083, BACK_EDGE: B:148:0x0095 \-\> B:143:0x0083, BACK_EDGE: B:146:0x0091 \-\> B:143:0x0083, BACK_EDGE: B:151:0x00a2 \-\> B:141:0x0075, BACK_EDGE: B:165:0x00f8 \-\> B:161:0x00e2, CROSS_EDGE: B:163:0x00ee \-\> B:165:0x00f8, BACK_EDGE: B:174:0x011b \-\> B:157:0x00d1, BACK_EDGE: B:172:0x0113 \-\> B:168:0x0102, BACK_EDGE: B:171:0x0110 \-\> B:168:0x0102, CROSS_EDGE: B:169:0x0106 \-\> B:174:0x011b, BACK_EDGE: B:178:0x0131 \-\> B:176:0x012b, BACK_EDGE: B:199:0x01c5 \-\> B:193:0x01aa, CROSS_EDGE: B:197:0x01c0 \-\> B:199:0x01c5, CROSS_EDGE: B:195:0x01bc \-\> B:199:0x01c5, CROSS_EDGE: B:200:0x01cb \-\> B:202:0x01d0, CROSS_EDGE: B:190:0x01a0 \-\> B:192:0x01a8, CROSS_EDGE: B:189:0x019d \-\> B:190:0x01a0, CROSS_EDGE: B:191:0x01a6 \-\> B:192:0x01a8, CROSS_EDGE: B:184:0x017a \-\> B:191:0x01a6, CROSS_EDGE: B:183:0x0171 \-\> B:184:0x017a, CROSS_EDGE: B:153:0x00a6 \-\> B:154:0x00bc, CROSS_EDGE: B:137:0x006d \-\> B:154:0x00bc, CROSS_EDGE: B:135:0x0069 \-\> B:154:0x00bc, CROSS_EDGE: B:120:0x001f \-\> B:121:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0035: r0 'addToBackStack' Z\l  0x003e\-0x0061: r8 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  0x0048\-0x0061: r9 'isPop' Z\l  0x0035\-0x0064: r7 'recordNum' I\l  0x008f\-0x00a1: r10 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x0091\-0x00a1: r11 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x009c\-0x00a1: r12 'fragmentStateManager' Landroidx\/fragment\/app\/FragmentStateManager;\l  0x007d\-0x00a2: r8 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  0x0075\-0x00a5: r7 'index' I\l  0x00ec\-0x00f8: r11 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x00ee\-0x00f8: r12 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x00f5\-0x00f8: r13 'fragmentStateManager' Landroidx\/fragment\/app\/FragmentStateManager;\l  0x00e2\-0x00fb: r10 'opIndex' I\l  0x010e\-0x011a: r11 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x0110\-0x011a: r12 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x0117\-0x011a: r13 'fragmentStateManager' Landroidx\/fragment\/app\/FragmentStateManager;\l  0x00d9\-0x011b: r9 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  0x00d1\-0x011e: r8 'index' I\l  0x0137\-0x0140: r9 'controller' Landroidx\/fragment\/app\/SpecialEffectsController;\l  0x0127\-0x0141: r0 'changedControllers' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Landroidx\/fragment\/app\/SpecialEffectsController;\>;\l  0x00cf\-0x0141: r7 'isPop' Z\l  0x0031\-0x015a: r1 'oldPrimaryNav' Landroidx\/fragment\/app\/Fragment;\l  0x0012\-0x015e: r2 'allowReordering' Z\l  0x0152\-0x0171: r8 'addedFragments' Landroidx\/collection\/ArraySet;, signature: Landroidx\/collection\/ArraySet\<Landroidx\/fragment\/app\/Fragment;\>;\l  0x015a\-0x0171: r17 'oldPrimaryNav' Landroidx\/fragment\/app\/Fragment;\l  0x015e\-0x0171: r18 'allowReordering' Z\l  0x0171\-0x0179: r1 'oldPrimaryNav' Landroidx\/fragment\/app\/Fragment;\l  0x0171\-0x0179: r2 'allowReordering' Z\l  0x014b\-0x017a: r7 'postponeIndex' I\l  0x017a\-0x01a8: r0 'postponeIndex' I\l  0x01b2\-0x01c8: r1 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  0x01bc\-0x01c8: r2 'isPop' Z\l  0x01aa\-0x01cb: r0 'recordNum' I\l  0x0035\-0x01d0: r16 'addToBackStack' Z\l  0x0179\-0x01d0: r17 'oldPrimaryNav' Landroidx\/fragment\/app\/Fragment;\l  0x0179\-0x01d0: r18 'allowReordering' Z\l  0x0000\-0x01d0: r20 'records' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;\l  0x0000\-0x01d0: r21 'isRecordPop' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;\l  \-1 \-0x01d0: r22 'startIndex' I\l  \-1 \-0x01d0: r23 'endIndex' I\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;II)V\l}"];
MethodNode -> Node_115;Node_115 -> Node_117;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_123;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_203;
Node_124 -> Node_125;
Node_125 -> Node_126[style=dashed];
Node_125 -> Node_127;
Node_126 -> Node_128;
Node_128 -> Node_129[style=dashed];
Node_128 -> Node_205;
Node_129 -> Node_130;
Node_130 -> Node_132;
Node_130 -> Node_206[style=dashed];
Node_132 -> Node_204;
Node_204 -> Node_133;
Node_133 -> Node_122;
Node_206 -> Node_133;
Node_205 -> Node_133;
Node_127 -> Node_128;
Node_203 -> Node_134;
Node_134 -> Node_135;
Node_135 -> Node_136[style=dashed];
Node_135 -> Node_154;
Node_136 -> Node_137;
Node_137 -> Node_138[style=dashed];
Node_137 -> Node_154;
Node_138 -> Node_139;
Node_139 -> Node_140[style=dashed];
Node_139 -> Node_153;
Node_140 -> Node_141;
Node_141 -> Node_142[style=dashed];
Node_141 -> Node_207;
Node_142 -> Node_143;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_209;
Node_145 -> Node_146;
Node_146 -> Node_208[style=dashed];
Node_146 -> Node_212;
Node_208 -> Node_147;
Node_147 -> Node_148;
Node_148 -> Node_210[style=dashed];
Node_148 -> Node_213;
Node_210 -> Node_149;
Node_149 -> Node_214;
Node_214 -> Node_211;
Node_211 -> Node_143;
Node_213 -> Node_211;
Node_212 -> Node_211;
Node_209 -> Node_151;
Node_151 -> Node_141;
Node_207 -> Node_154;
Node_153 -> Node_154;
Node_154 -> Node_155;
Node_155 -> Node_156[style=dashed];
Node_155 -> Node_180;
Node_156 -> Node_157;
Node_157 -> Node_158[style=dashed];
Node_157 -> Node_215;
Node_158 -> Node_159;
Node_159 -> Node_160[style=dashed];
Node_159 -> Node_167;
Node_160 -> Node_161;
Node_161 -> Node_162[style=dashed];
Node_161 -> Node_217;
Node_162 -> Node_163;
Node_163 -> Node_164[style=dashed];
Node_163 -> Node_219;
Node_164 -> Node_218;
Node_218 -> Node_165;
Node_165 -> Node_161;
Node_219 -> Node_165;
Node_217 -> Node_174;
Node_174 -> Node_157;
Node_167 -> Node_168;
Node_168 -> Node_169;
Node_169 -> Node_170[style=dashed];
Node_169 -> Node_216;
Node_170 -> Node_171;
Node_171 -> Node_220[style=dashed];
Node_171 -> Node_222;
Node_220 -> Node_172;
Node_172 -> Node_223;
Node_223 -> Node_221;
Node_221 -> Node_168;
Node_222 -> Node_221;
Node_216 -> Node_174;
Node_215 -> Node_175;
Node_175 -> Node_176;
Node_176 -> Node_177;
Node_177 -> Node_178[style=dashed];
Node_177 -> Node_224;
Node_178 -> Node_176;
Node_224 -> Node_179;
Node_179 -> Node_192;
Node_192 -> Node_193;
Node_193 -> Node_194[style=dashed];
Node_193 -> Node_225;
Node_194 -> Node_195;
Node_195 -> Node_196[style=dashed];
Node_195 -> Node_227;
Node_196 -> Node_197;
Node_197 -> Node_198[style=dashed];
Node_197 -> Node_228;
Node_198 -> Node_226;
Node_226 -> Node_199;
Node_199 -> Node_193;
Node_228 -> Node_199;
Node_227 -> Node_199;
Node_225 -> Node_200;
Node_200 -> Node_201[style=dashed];
Node_200 -> Node_229;
Node_201 -> Node_202;
Node_202 -> Node_116;
Node_229 -> Node_116;
Node_180 -> Node_181;
Node_181 -> Node_182[style=dashed];
Node_181 -> Node_183;
Node_182 -> Node_184;
Node_184 -> Node_185[style=dashed];
Node_184 -> Node_191;
Node_185 -> Node_186[style=dashed];
Node_185 -> Node_191;
Node_186 -> Node_187;
Node_187 -> Node_188[style=dashed];
Node_187 -> Node_189;
Node_188 -> Node_190;
Node_190 -> Node_192;
Node_189 -> Node_190;
Node_191 -> Node_192;
Node_183 -> Node_184;
Node_120 -> Node_121;
}

