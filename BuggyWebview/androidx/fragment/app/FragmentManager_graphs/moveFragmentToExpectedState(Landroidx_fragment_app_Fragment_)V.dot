digraph "CFG forandroidx.fragment.app.FragmentManager.moveFragmentToExpectedState(Landroidx\/fragment\/app\/Fragment;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000}"];
Node_32 [shape=record,label="{32\:\ 0x0008|if (r3.mFragmentStore.containsActiveFragment(r4.mWho) != false) goto L9\l}"];
Node_33 [shape=record,label="{33\:\ 0x000a}"];
Node_34 [shape=record,label="{34\:\ 0x000f|if (isLoggingEnabled(3) == false) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x0011|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Ignoring moving \")\lr0.append(r4)\lr0.append(\" to state \")\lr0.append(r3.mCurState)\lr0.append(\"since it is not added to \")\lr0.append(r3)\landroid.util.Log.d(androidx.fragment.app.FragmentManager.TAG, r0.toString())\l}"];
Node_36 [shape=record,label="{36\:\ 0x0039|RETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ 0x003a|moveToState(r4)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003f|if (r4.mView == null) goto L24\l}"];
Node_39 [shape=record,label="{39\:\ 0x0041}"];
Node_40 [shape=record,label="{40\:\ 0x0043|if (r4.mIsNewlyAdded == false) goto L24\l}"];
Node_41 [shape=record,label="{41\:\ 0x0045}"];
Node_42 [shape=record,label="{42\:\ 0x0047|if (r4.mContainer == null) goto L24\l}"];
Node_43 [shape=record,label="{43\:\ 0x0049}"];
Node_44 [shape=record,label="{44\:\ 0x004e|if ((r4.mPostponedAlpha \> 0.0f ? 1 : (r4.mPostponedAlpha == 0.0f ? 0 : \-1)) \<= 0) goto L18\l}"];
Node_45 [shape=record,label="{45\:\ 0x0050|r4.mView.setAlpha(r4.mPostponedAlpha)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0057|r4.mPostponedAlpha = 0.0f\lr4.mIsNewlyAdded = false\landroidx.fragment.app.FragmentAnim$AnimationOrAnimator r0 = androidx.fragment.app.FragmentAnim.loadAnimation(r3.mHost.getContext(), r4, true, r4.getPopDirection())\l}"];
Node_47 [shape=record,label="{47\:\ 0x006b|if (r0 == null) goto L24\l}"];
Node_48 [shape=record,label="{48\:\ 0x006d}"];
Node_49 [shape=record,label="{49\:\ 0x006f|if (r0.animation == null) goto L23\l}"];
Node_50 [shape=record,label="{50\:\ 0x0071|r4.mView.startAnimation(r0.animation)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0079|r0.animator.setTarget(r4.mView)\lr0.animator.start()\l}"];
Node_52 [shape=record,label="{52\:\ 0x0085}"];
Node_53 [shape=record,label="{53\:\ 0x0087|if (r4.mHiddenChanged == false) goto L28\l}"];
Node_54 [shape=record,label="{54\:\ 0x0089|completeShowHideFragment(r4)\l}"];
Node_55 [shape=record,label="{55\:\ 0x008c|RETURN\lORIG_RETURN\l|return\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.moveFragmentToExpectedState((r3v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x000f \-\> B:36:0x0039, CROSS_EDGE: B:55:0x008c \-\> B:30:?, CROSS_EDGE: B:53:0x0087 \-\> B:55:0x008c, CROSS_EDGE: B:51:0x0079 \-\> B:52:0x0085, CROSS_EDGE: B:47:0x006b \-\> B:52:0x0085, CROSS_EDGE: B:44:0x004e \-\> B:46:0x0057, CROSS_EDGE: B:42:0x0047 \-\> B:52:0x0085, CROSS_EDGE: B:40:0x0043 \-\> B:52:0x0085, CROSS_EDGE: B:38:0x003f \-\> B:52:0x0085\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_56;
Node_35 -> Node_36;
Node_36 -> Node_30;
Node_56 -> Node_30;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_52;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_52;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_52;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_57;
Node_54 -> Node_55;
Node_55 -> Node_30;
Node_57 -> Node_30;
}

