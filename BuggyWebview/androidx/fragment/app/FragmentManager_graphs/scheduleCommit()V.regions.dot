digraph "CFG forandroidx.fragment.app.FragmentManager.scheduleCommit()V" {
subgraph cluster_Region_111881380 {
label = "R(1:2)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_2124668733 {
label = "Synchronized:R(2:2|(4:4|5|10|(1:18)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0002}"];
subgraph cluster_Region_1118462608 {
label = "R(4:4|5|10|(1:18))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|java.util.ArrayList\<androidx.fragment.app.FragmentManager$StartEnterTransitionListener\> java.util.ArrayList\<androidx.fragment.app.FragmentManager.StartEnterTransitionListener\> r1 = r5.mPostponedTransactions     \/\/ Catch: java.lang.Throwable \-\> L3a\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|boolean r1 = (r1 == null \|\| r1.isEmpty()) ? false : true\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|boolean r2 = r5.mPendingActions.size() == 1\l}"];
subgraph cluster_IfRegion_221046940 {
label = "IF [B:36:0x001b, B:37:0x001d] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x001b|PHI: r2 \l  PHI: (r2v1 'pendingReady' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if (r1 != false) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|ADDED_TO_REGION\l|if (r2 != false) goto L18\l}"];
subgraph cluster_Region_211613134 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x001f|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|r5.mHost.getHandler().removeCallbacks(r5.mExecCommit)     \/\/ Catch: java.lang.Throwable \-\> L3a\lr5.mHost.getHandler().post(r5.mExecCommit)     \/\/ Catch: java.lang.Throwable \-\> L3a\lupdateOnBackPressedCallbackEnabled()     \/\/ Catch: java.lang.Throwable \-\> L3a\l}"];
}
}
}
}
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0009|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x000d|REMOVE\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000f}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0012|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\lPHI: r1 \l  PHI: (r1v3 'postponeReady' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x001a}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0038|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L3a\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0039}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0011}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x003a|REMOVE\lExcHandler: all \-\> 0x003a\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x003b|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x003a\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x003c|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.scheduleCommit((r5v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x003c \-\> B:24:?, CROSS_EDGE: B:37:0x001d \-\> B:39:0x0038, CROSS_EDGE: B:36:0x001b \-\> B:38:0x001f, CROSS_EDGE: B:34:0x0018 \-\> B:36:0x001b, CROSS_EDGE: B:32:0x0011 \-\> B:33:0x0012, CROSS_EDGE: B:28:0x0007 \-\> B:32:0x0011, CROSS_EDGE: B:44:0x0003 \-\> B:41:0x003a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_26 -> Node_44;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_32;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_39;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_44 -> Node_27;
Node_44 -> Node_41;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_39 -> Node_40;
Node_39 -> Node_45;
Node_40 -> Node_24;
Node_45 -> Node_41;
Node_32 -> Node_33;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
}

