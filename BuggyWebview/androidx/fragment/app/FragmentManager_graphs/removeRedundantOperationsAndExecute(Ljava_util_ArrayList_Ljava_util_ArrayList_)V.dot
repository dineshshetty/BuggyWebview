digraph "CFG forandroidx.fragment.app.FragmentManager.removeRedundantOperationsAndExecute(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)V" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000}"];
Node_38 [shape=record,label="{38\:\ 0x0004|if (r7.isEmpty() == false) goto L5\l}"];
Node_39 [shape=record,label="{39\:\ 0x0006|RETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0007}"];
Node_41 [shape=record,label="{41\:\ 0x000f|if (r7.size() != r8.size()) goto L33\l}"];
Node_42 [shape=record,label="{42\:\ 0x0011|executePostponedTransaction(r7, r8)\lint r0 = r7.size()\lr1 = 0\lr2 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x001a|LOOP_START\lLOOP:0: B:43:0x001a\-\>B:57:0x005a\lPHI: r1 r2 \l  PHI: (r1v3 'startIndex' int) = (r1v2 'startIndex' int), (r1v4 'startIndex' int) binds: [B:42:0x0011, B:57:0x005a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'recordNum' int) = (r2v0 'recordNum' int), (r2v3 'recordNum' int) binds: [B:42:0x0011, B:57:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L28\l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|boolean r3 = r7.get(r2).mReorderingAllowed\l}"];
Node_45 [shape=record,label="{45\:\ 0x0024|if (r3 != false) goto L27\l}"];
Node_46 [shape=record,label="{46\:\ 0x0026|if (r1 == r2) goto L13\l}"];
Node_47 [shape=record,label="{47\:\ 0x0028|executeOpsTogether(r7, r8, r1, r2)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002b|int r4 = r2 + 1\l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|if (r8.get(r2).booleanValue() == false) goto L24\l}"];
Node_50 [shape=record,label="{50\:\ 0x0039|LOOP_START\lLOOP:1: B:50:0x0039\-\>B:55:0x0051\lPHI: r4 \l  PHI: (r4v2 'reorderingEnd' int) = (r4v0 'reorderingEnd' int), (r4v3 'reorderingEnd' int) binds: [B:49:0x0037, B:55:0x0051] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r0) goto L23\l}"];
Node_51 [shape=record,label="{51\:\ 0x003b}"];
Node_52 [shape=record,label="{52\:\ 0x0045|if (r8.get(r4).booleanValue() == false) goto L22\l}"];
Node_53 [shape=record,label="{53\:\ 0x0047}"];
Node_54 [shape=record,label="{54\:\ 0x004f|if (r7.get(r4).mReorderingAllowed != false) goto L21\l}"];
Node_55 [shape=record,label="{55\:\ 0x0051|LOOP_END\lLOOP:1: B:50:0x0039\-\>B:55:0x0051\l|int r4 = r4 + 1\l}"];
Node_68 [shape=record,label="{68\:\ 0x0054|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x0054|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0054|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0054|PHI: r4 \l  PHI: (r4v1 'reorderingEnd' int) = (r4v0 'reorderingEnd' int), (r4v2 'reorderingEnd' int), (r4v2 'reorderingEnd' int), (r4v2 'reorderingEnd' int) binds: [B:49:0x0037, B:67:0x0054, B:66:0x0054, B:68:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|executeOpsTogether(r7, r8, r2, r4)\lr1 = r4\lint r2 = r4 + (\-1)\l}"];
Node_64 [shape=record,label="{64\:\ 0x005a|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x005a|LOOP_END\lLOOP:0: B:43:0x001a\-\>B:57:0x005a\lPHI: r1 r2 \l  PHI: (r1v4 'startIndex' int) = (r1v3 'startIndex' int), (r1v5 'startIndex' int) binds: [B:65:0x005a, B:64:0x005a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'recordNum' int) = (r2v1 'recordNum' int), (r2v4 'recordNum' int) binds: [B:65:0x005a, B:64:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r2 + 1\l}"];
Node_65 [shape=record,label="{65\:\ 0x005a|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x005d|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x005d|if (r1 == r0) goto L32\l}"];
Node_59 [shape=record,label="{59\:\ 0x005f|executeOpsTogether(r7, r8, r1, r0)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0062|RETURN\lORIG_RETURN\l|return\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_61 [shape=record,label="{61\:\ 0x0063}"];
Node_62 [shape=record,label="{62\:\ 0x006a|throw new java.lang.IllegalStateException(\"Internal error with the back stack records\")\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.removeRedundantOperationsAndExecute((r6v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r7v0 'records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\> A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'isRecordPop' java.util.ArrayList\<java.lang.Boolean\> A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:55:0x0051 \-\> B:50:0x0039, BACK_EDGE: B:57:0x005a \-\> B:43:0x001a, CROSS_EDGE: B:52:0x0045 \-\> B:56:0x0054, CROSS_EDGE: B:50:0x0039 \-\> B:56:0x0054, CROSS_EDGE: B:49:0x0037 \-\> B:56:0x0054, CROSS_EDGE: B:46:0x0026 \-\> B:48:0x002b, CROSS_EDGE: B:45:0x0024 \-\> B:57:0x005a, CROSS_EDGE: B:60:0x0062 \-\> B:36:?, CROSS_EDGE: B:58:0x005d \-\> B:60:0x0062, CROSS_EDGE: B:62:0x006a \-\> B:36:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;)V\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_36;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_61;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_63;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_65;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_56;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_67;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_66;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_68;
Node_55 -> Node_50;
Node_68 -> Node_56;
Node_66 -> Node_56;
Node_67 -> Node_56;
Node_56 -> Node_64;
Node_64 -> Node_57;
Node_57 -> Node_43;
Node_65 -> Node_57;
Node_63 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_69;
Node_59 -> Node_60;
Node_60 -> Node_36;
Node_69 -> Node_36;
Node_61 -> Node_62;
Node_62 -> Node_36;
}

