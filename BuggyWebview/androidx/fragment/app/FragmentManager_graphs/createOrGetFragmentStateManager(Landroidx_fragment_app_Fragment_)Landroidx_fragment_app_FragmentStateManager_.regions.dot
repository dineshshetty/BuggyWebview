digraph "CFG forandroidx.fragment.app.FragmentManager.createOrGetFragmentStateManager(Landroidx\/fragment\/app\/Fragment;)Landroidx\/fragment\/app\/FragmentStateManager;" {
subgraph cluster_Region_354524287 {
label = "R(2:1|(2:(1:3)|(2:5|6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|androidx.fragment.app.FragmentStateManager androidx.fragment.app.FragmentStateManager r0 = r4.mFragmentStore.getFragmentStateManager(r5.mWho)\l}"];
subgraph cluster_Region_2095601040 {
label = "R(2:(1:3)|(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_514537939 {
label = "IF [B:10:0x0008] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0008|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_1266748499 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_760884872 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000b|androidx.fragment.app.FragmentStateManager androidx.fragment.app.FragmentStateManager r1 = new androidx.fragment.app.FragmentStateManager(r4.mLifecycleCallbacksDispatcher, r4.mFragmentStore, r5)\lr1.restoreState(r4.mHost.getContext().getClassLoader())\lr1.setFragmentManagerState(r4.mCurState)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|RETURN\l|return r1\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.fragment.app.FragmentStateManager androidx.fragment.app.FragmentManager.createOrGetFragmentStateManager((r4v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0026 \-\> B:8:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

