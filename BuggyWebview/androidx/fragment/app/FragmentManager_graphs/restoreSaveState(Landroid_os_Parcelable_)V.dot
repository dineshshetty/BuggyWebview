digraph "CFG forandroidx.fragment.app.FragmentManager.restoreSaveState(Landroid\/os\/Parcelable;)V" {
Node_70 [shape=record,label="{70\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_72 [shape=record,label="{72\:\ 0x0000|if (r15 != null) goto L4\l}"];
Node_73 [shape=record,label="{73\:\ 0x0002|RETURN\l|return\l}"];
Node_71 [shape=record,label="{71\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_74 [shape=record,label="{74\:\ 0x0003|androidx.fragment.app.FragmentManagerState r0 = (androidx.fragment.app.FragmentManagerState) r15\l}"];
Node_75 [shape=record,label="{75\:\ 0x0008|if (r0.mActive != null) goto L7\l}"];
Node_76 [shape=record,label="{76\:\ 0x000a|RETURN\l|return\l}"];
Node_77 [shape=record,label="{77\:\ 0x000b|r14.mFragmentStore.resetActiveFragments()\ljava.util.Iterator r1 = r0.mActive.iterator()\l}"];
Node_78 [shape=record,label="{78\:\ 0x0016|LOOP_START\lLOOP:0: B:78:0x0016\-\>B:128:0x0016\l}"];
Node_79 [shape=record,label="{79\:\ 0x001f|if (r1.hasNext() == false) goto L27\l}"];
Node_80 [shape=record,label="{80\:\ 0x0021|androidx.fragment.app.FragmentState r2 = r1.next()\l}"];
Node_81 [shape=record,label="{81\:\ 0x0027|if (r2 == null) goto L26\l}"];
Node_126 [shape=record,label="{126\:\ 0x0029|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x0029|androidx.fragment.app.Fragment r12 = r14.mNonConfig.findRetainedFragmentByWho(r2.mWho)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0031|if (r12 == null) goto L25\l}"];
Node_84 [shape=record,label="{84\:\ 0x0033}"];
Node_85 [shape=record,label="{85\:\ 0x0037|if (isLoggingEnabled(2) == false) goto L18\l}"];
Node_86 [shape=record,label="{86\:\ 0x0039|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"restoreSaveState: re\-attaching retained \")\lr6.append(r12)\landroid.util.Log.v(androidx.fragment.app.FragmentManager.TAG, r6.toString())\l}"];
Node_87 [shape=record,label="{87\:\ 0x004d|androidx.fragment.app.FragmentStateManager r6 = new androidx.fragment.app.FragmentStateManager(r14.mLifecycleCallbacksDispatcher, r14.mFragmentStore, r12, r2)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0070|PHI: r6 \l  PHI: (r6v16 'fragmentStateManager' androidx.fragment.app.FragmentStateManager) = (r6v15 'fragmentStateManager' androidx.fragment.app.FragmentStateManager), (r6v18 'fragmentStateManager' androidx.fragment.app.FragmentStateManager) binds: [B:88:0x0057, B:87:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|androidx.fragment.app.Fragment r7 = r6.getFragment()\lr7.mFragmentManager = r14\l}"];
Node_90 [shape=record,label="{90\:\ 0x007a|if (isLoggingEnabled(2) == false) goto L22\l}"];
Node_91 [shape=record,label="{91\:\ 0x007c|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"restoreSaveState: active (\")\lr4.append(r7.mWho)\lr4.append(\"): \")\lr4.append(r7)\landroid.util.Log.v(androidx.fragment.app.FragmentManager.TAG, r4.toString())\l}"];
Node_92 [shape=record,label="{92\:\ 0x0098|r6.restoreState(r14.mHost.getContext().getClassLoader())\lr14.mFragmentStore.makeActive(r6)\lr6.setFragmentManagerState(r14.mCurState)\l}"];
Node_130 [shape=record,label="{130\:\ 0x0016|SYNTHETIC\l}"];
Node_128 [shape=record,label="{128\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:78:0x0016\-\>B:128:0x0016\l}"];
Node_88 [shape=record,label="{88\:\ 0x0057|androidx.fragment.app.FragmentStateManager r6 = new androidx.fragment.app.FragmentStateManager(r14.mLifecycleCallbacksDispatcher, r14.mFragmentStore, r14.mHost.getContext().getClassLoader(), getFragmentFactory(), r2)\l}"];
Node_129 [shape=record,label="{129\:\ 0x0016|SYNTHETIC\l}"];
Node_127 [shape=record,label="{127\:\ 0x00b1|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x00b1|java.util.Iterator r1 = r14.mNonConfig.getRetainedFragments().iterator()\l}"];
Node_95 [shape=record,label="{95\:\ 0x00bb|LOOP_START\lLOOP:1: B:95:0x00bb\-\>B:133:0x00bb\l}"];
Node_96 [shape=record,label="{96\:\ 0x00bf|if (r1.hasNext() == false) goto L41\l}"];
Node_97 [shape=record,label="{97\:\ 0x00c1|androidx.fragment.app.Fragment r2 = r1.next()\l}"];
Node_98 [shape=record,label="{98\:\ 0x00cf|if (r14.mFragmentStore.containsActiveFragment(r2.mWho) != false) goto L40\l}"];
Node_131 [shape=record,label="{131\:\ 0x00d1|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x00d1}"];
Node_100 [shape=record,label="{100\:\ 0x00d5|if (isLoggingEnabled(2) == false) goto L37\l}"];
Node_101 [shape=record,label="{101\:\ 0x00d7|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Discarding retained Fragment \")\lr6.append(r2)\lr6.append(\" that was not found in the set of active Fragments \")\lr6.append(r0.mActive)\landroid.util.Log.v(androidx.fragment.app.FragmentManager.TAG, r6.toString())\l}"];
Node_102 [shape=record,label="{102\:\ 0x00f5|r14.mNonConfig.removeRetainedFragment(r2)\lr2.mFragmentManager = r14\landroidx.fragment.app.FragmentStateManager r6 = new androidx.fragment.app.FragmentStateManager(r14.mLifecycleCallbacksDispatcher, r14.mFragmentStore, r2)\lr6.setFragmentManagerState(1)\lr6.moveToExpectedState()\lr2.mRemoving = true\lr6.moveToExpectedState()\l}"];
Node_135 [shape=record,label="{135\:\ 0x00bb|SYNTHETIC\l}"];
Node_133 [shape=record,label="{133\:\ 0x00bb|LOOP_END\lSYNTHETIC\lLOOP:1: B:95:0x00bb\-\>B:133:0x00bb\l}"];
Node_134 [shape=record,label="{134\:\ 0x00bb|SYNTHETIC\l}"];
Node_132 [shape=record,label="{132\:\ 0x0112|SYNTHETIC\l}"];
Node_104 [shape=record,label="{104\:\ 0x0112|r14.mFragmentStore.restoreAddedFragments(r0.mAdded)\l}"];
Node_105 [shape=record,label="{105\:\ 0x011b|if (r0.mBackStack == null) goto L66\l}"];
Node_106 [shape=record,label="{106\:\ 0x011d|r14.mBackStack = new java.util.ArrayList\<\>(r0.mBackStack.length)\lr1 = 0\l}"];
Node_107 [shape=record,label="{107\:\ 0x0128|LOOP_START\lLOOP:2: B:107:0x0128\-\>B:112:0x0172\lPHI: r1 \l  PHI: (r1v17 'i' int) = (r1v16 'i' int), (r1v18 'i' int) binds: [B:106:0x011d, B:112:0x0172] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_108 [shape=record,label="{108\:\ 0x012b|if (r1 \>= r0.mBackStack.length) goto L53\l}"];
Node_109 [shape=record,label="{109\:\ 0x012d|androidx.fragment.app.BackStackRecord r2 = r0.mBackStack[r1].instantiate(r14)\l}"];
Node_110 [shape=record,label="{110\:\ 0x0139|if (isLoggingEnabled(2) == false) goto L52\l}"];
Node_111 [shape=record,label="{111\:\ 0x013b|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"restoreAllState: back stack #\")\lr6.append(r1)\lr6.append(\" (index \")\lr6.append(r2.mIndex)\lr6.append(\"): \")\lr6.append(r2)\landroid.util.Log.v(androidx.fragment.app.FragmentManager.TAG, r6.toString())\landroidx.fragment.app.LogWriter r6 = new androidx.fragment.app.LogWriter(androidx.fragment.app.FragmentManager.TAG)\ljava.io.PrintWriter r7 = new java.io.PrintWriter(r6)\lr2.dump(\"  \", r7, false)\lr7.close()\l}"];
Node_137 [shape=record,label="{137\:\ 0x0172|SYNTHETIC\l}"];
Node_112 [shape=record,label="{112\:\ 0x0172|LOOP_END\lLOOP:2: B:107:0x0128\-\>B:112:0x0172\l|r14.mBackStack.add(r2)\lint r1 = r1 + 1\l}"];
Node_138 [shape=record,label="{138\:\ 0x0172|SYNTHETIC\l}"];
Node_136 [shape=record,label="{136\:\ 0x017e|SYNTHETIC\l}"];
Node_115 [shape=record,label="{115\:\ 0x017e|r14.mBackStackIndex.set(r0.mBackStackIndex)\l}"];
Node_116 [shape=record,label="{116\:\ 0x0187|if (r0.mPrimaryNavActiveWho == null) goto L57\l}"];
Node_117 [shape=record,label="{117\:\ 0x0189|androidx.fragment.app.Fragment r1 = findActiveFragment(r0.mPrimaryNavActiveWho)\lr14.mPrimaryNav = r1\ldispatchParentPrimaryNavigationFragmentChanged(r1)\l}"];
Node_118 [shape=record,label="{118\:\ 0x0194|java.util.ArrayList\<java.lang.String\> r1 = r0.mResultKeys\l}"];
Node_119 [shape=record,label="{119\:\ 0x0196|if (r1 == null) goto L64\l}"];
Node_120 [shape=record,label="{120\:\ 0x0198|r2 = 0\l}"];
Node_121 [shape=record,label="{121\:\ 0x0199|LOOP_START\lLOOP:3: B:121:0x0199\-\>B:123:0x019f\lPHI: r2 \l  PHI: (r2v6 'i' int) = (r2v5 'i' int), (r2v7 'i' int) binds: [B:120:0x0198, B:123:0x019f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_122 [shape=record,label="{122\:\ 0x019d|if (r2 \>= r1.size()) goto L63\l}"];
Node_123 [shape=record,label="{123\:\ 0x019f|LOOP_END\lLOOP:3: B:121:0x0199\-\>B:123:0x019f\l|android.os.Bundle r3 = r0.mResults.get(r2)\lr3.setClassLoader(r14.mHost.getContext().getClassLoader())\lr14.mResults.put(r1.get(r2), r3)\lint r2 = r2 + 1\l}"];
Node_139 [shape=record,label="{139\:\ 0x01c0|SYNTHETIC\l}"];
Node_124 [shape=record,label="{124\:\ 0x01c0|r14.mLaunchedFragments = new java.util.ArrayDeque\<\>(r0.mLaunchedFragments)\l}"];
Node_125 [shape=record,label="{125\:\ 0x01c9|RETURN\l|return\l}"];
Node_114 [shape=record,label="{114\:\ 0x017b|r14.mBackStack = null\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.restoreSaveState((r14v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r15v0 'state' android.os.Parcelable A[D('state' android.os.Parcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:76:0x000a \-\> B:71:?, BACK_EDGE: B:92:0x0098 \-\> B:78:0x0016, CROSS_EDGE: B:90:0x007a \-\> B:92:0x0098, CROSS_EDGE: B:85:0x0037 \-\> B:87:0x004d, CROSS_EDGE: B:88:0x0057 \-\> B:89:0x0070, BACK_EDGE: B:81:0x0027 \-\> B:78:0x0016, BACK_EDGE: B:102:0x00f5 \-\> B:95:0x00bb, CROSS_EDGE: B:100:0x00d5 \-\> B:102:0x00f5, BACK_EDGE: B:98:0x00cf \-\> B:95:0x00bb, BACK_EDGE: B:112:0x0172 \-\> B:107:0x0128, CROSS_EDGE: B:110:0x0139 \-\> B:112:0x0172, BACK_EDGE: B:123:0x019f \-\> B:121:0x0199, CROSS_EDGE: B:125:0x01c9 \-\> B:71:?, CROSS_EDGE: B:119:0x0196 \-\> B:124:0x01c0, CROSS_EDGE: B:116:0x0187 \-\> B:118:0x0194, CROSS_EDGE: B:114:0x017b \-\> B:115:0x017e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_70;Node_70 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_74;
Node_73 -> Node_71;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_71;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_127;
Node_80 -> Node_81;
Node_81 -> Node_126[style=dashed];
Node_81 -> Node_129;
Node_126 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_88;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_87;
Node_86 -> Node_87;
Node_87 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_92;
Node_92 -> Node_130;
Node_130 -> Node_128;
Node_128 -> Node_78;
Node_88 -> Node_89;
Node_129 -> Node_128;
Node_127 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_97[style=dashed];
Node_96 -> Node_132;
Node_97 -> Node_98;
Node_98 -> Node_131[style=dashed];
Node_98 -> Node_134;
Node_131 -> Node_99;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_102;
Node_101 -> Node_102;
Node_102 -> Node_135;
Node_135 -> Node_133;
Node_133 -> Node_95;
Node_134 -> Node_133;
Node_132 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_114;
Node_106 -> Node_107;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_136;
Node_109 -> Node_110;
Node_110 -> Node_111[style=dashed];
Node_110 -> Node_138;
Node_111 -> Node_137;
Node_137 -> Node_112;
Node_112 -> Node_107;
Node_138 -> Node_112;
Node_136 -> Node_115;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_118;
Node_117 -> Node_118;
Node_118 -> Node_119;
Node_119 -> Node_120[style=dashed];
Node_119 -> Node_124;
Node_120 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_139;
Node_123 -> Node_121;
Node_139 -> Node_124;
Node_124 -> Node_125;
Node_125 -> Node_71;
Node_114 -> Node_115;
}

