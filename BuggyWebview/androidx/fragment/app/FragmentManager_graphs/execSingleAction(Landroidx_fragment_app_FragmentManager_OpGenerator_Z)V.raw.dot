digraph "CFG forandroidx.fragment.app.FragmentManager.execSingleAction(Landroidx\/fragment\/app\/FragmentManager$OpGenerator;Z)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowStateLoss' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000b  (LINE:1963)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|0x0002: IGET  (r0 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x000a \l}"];
Node_26 [shape=record,label="{26\:\ 0x0006|0x0006: IGET  (r0 I:boolean) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mDestroyed boolean \l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000b \l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN   A[SYNTHETIC] (LINE:1965)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: RETURN    (LINE:1965)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000b|0x000b: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r4 I:boolean A[D('allowStateLoss' boolean)]) type: DIRECT call: androidx.fragment.app.FragmentManager.ensureExecReady(boolean):void A[MD:(boolean):void (m)] (LINE:1967)\l0x000e: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList  (LINE:1968)\l0x0010: IGET  (r1 I:java.util.ArrayList\<java.lang.Boolean\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpIsPop java.util.ArrayList \l0x0012: INVOKE  (r0 I:boolean) = \l  (r3 I:androidx.fragment.app.FragmentManager$OpGenerator A[D('action' androidx.fragment.app.FragmentManager$OpGenerator)])\l  (r0 I:java.util.ArrayList)\l  (r1 I:java.util.ArrayList)\l type: INTERFACE call: androidx.fragment.app.FragmentManager.OpGenerator.generateOps(java.util.ArrayList, java.util.ArrayList):boolean A[MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>):boolean (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x002b \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1969)\l0x0019: IPUT  (r0 I:boolean), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean \l}"];
Node_39 [shape=record,label="{39\:\ 0x001b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0026, blocks: (B:32:0x001b), top: B:39:0x001b \}\lCatch: all \-\> 0x0026\l|0x001b: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList A[Catch: all \-\> 0x0026, TRY_ENTER] (LINE:1971)\l0x001d: IGET  (r1 I:java.util.ArrayList\<java.lang.Boolean\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpIsPop java.util.ArrayList A[Catch: all \-\> 0x0026]\l0x001f: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r0 I:java.util.ArrayList), (r1 I:java.util.ArrayList) type: DIRECT call: androidx.fragment.app.FragmentManager.removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList):void A[Catch: all \-\> 0x0026, MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>):void (m), TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|0x0022: INVOKE  (r2 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.cleanupExec():void A[MD:():void (m)] (LINE:1973)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|ExcHandler: all \-\> 0x0026\l|0x0026: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0026] (LINE:1973)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|0x0027: INVOKE  (r2 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.cleanupExec():void A[MD:():void (m)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable)  (LINE:1974)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002b|0x002b: INVOKE  (r2 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.updateOnBackPressedCallbackEnabled():void A[MD:():void (m)] (LINE:1977)\l0x002e: INVOKE  (r2 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.doPendingDeferredStart():void A[MD:():void (m)] (LINE:1978)\l0x0031: IGET  (r0 I:androidx.fragment.app.FragmentStore) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore  (LINE:1979)\l0x0033: INVOKE  (r0 I:androidx.fragment.app.FragmentStore) type: VIRTUAL call: androidx.fragment.app.FragmentStore.burpActive():void A[MD:():void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0036|RETURN\l|0x0036: RETURN    (LINE:1980)\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.execSingleAction((r2 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.fragment.app.FragmentManager$OpGenerator A[D('action' androidx.fragment.app.FragmentManager$OpGenerator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('allowStateLoss' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0036 \-\> B:22:?, CROSS_EDGE: B:36:0x002a \-\> B:22:?, CROSS_EDGE: B:39:0x001b \-\> B:34:0x0026, CROSS_EDGE: B:30:0x0016 \-\> B:37:0x002b, CROSS_EDGE: B:25:0x0004 \-\> B:28:0x000a, CROSS_EDGE: B:23:0x0000 \-\> B:29:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0036: r3 'action' Landroidx\/fragment\/app\/FragmentManager$OpGenerator;\l  \-1 \-0x0036: r4 'allowStateLoss' Z\lTryCatch #0 \{all \-\> 0x0026, blocks: (B:32:0x001b), top: B:39:0x001b \}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_41[style=dashed];
Node_41 -> Node_22;
Node_28 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_37;
Node_31 -> Node_39;
Node_39 -> Node_32;
Node_39 -> Node_34;
Node_32 -> Node_33;
Node_32 -> Node_40;
Node_33 -> Node_37;
Node_40 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_22;
Node_37 -> Node_38;
Node_38 -> Node_22;
}

