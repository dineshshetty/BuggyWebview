digraph "CFG forandroidx.fragment.app.FragmentManager.scheduleCommit()V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\> r0 = r5.mPendingActions\l}"];
Node_26 [shape=record,label="{26\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|java.util.ArrayList\<androidx.fragment.app.FragmentManager$StartEnterTransitionListener\> r1 = r5.mPostponedTransactions     \/\/ Catch: java.lang.Throwable \-\> L3a\lr2 = false\l}"];
Node_28 [shape=record,label="{28\:\ 0x0007|if (r1 == null) goto L19\l}"];
Node_29 [shape=record,label="{29\:\ 0x0009|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l}"];
Node_30 [shape=record,label="{30\:\ 0x000d|if (r1.isEmpty() != false) goto L19\l}"];
Node_31 [shape=record,label="{31\:\ 0x000f|r1 = true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\lPHI: r1 \l  PHI: (r1v3 'postponeReady' boolean) = (r1v2 'postponeReady' boolean), (r1v5 'postponeReady' boolean) binds: [B:32:0x0011, B:31:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0018|if (r5.mPendingActions.size() != 1) goto L12\l}"];
Node_35 [shape=record,label="{35\:\ 0x001a|r2 = true\l}"];
Node_36 [shape=record,label="{36\:\ 0x001b|PHI: r2 \l  PHI: (r2v1 'pendingReady' boolean) = (r2v0 'pendingReady' boolean), (r2v2 'pendingReady' boolean) binds: [B:34:0x0018, B:35:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L18\l}"];
Node_37 [shape=record,label="{37\:\ 0x001d|if (r2 == false) goto L14\l}"];
Node_39 [shape=record,label="{39\:\ 0x0038|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|monitor\-exit(r0)     \/\/ Catch: java.lang.Throwable \-\> L3a\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x001f|TryCatch #0 \{, blocks: (B:27:0x0003, B:29:0x0009, B:33:0x0012, B:39:0x0038, B:38:0x001f), top: B:44:0x0003 \}\lCatch: all \-\> 0x003a\l|r5.mHost.getHandler().removeCallbacks(r5.mExecCommit)     \/\/ Catch: java.lang.Throwable \-\> L3a\lr5.mHost.getHandler().post(r5.mExecCommit)     \/\/ Catch: java.lang.Throwable \-\> L3a\lupdateOnBackPressedCallbackEnabled()     \/\/ Catch: java.lang.Throwable \-\> L3a\l}"];
Node_32 [shape=record,label="{32\:\ 0x0011|r1 = false\l}"];
Node_41 [shape=record,label="{41\:\ 0x003a|REMOVE\lExcHandler: all \-\> 0x003a\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x003b|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x003a\l}"];
Node_43 [shape=record,label="{43\:\ 0x003c|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.scheduleCommit((r5v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x003c \-\> B:24:?, CROSS_EDGE: B:37:0x001d \-\> B:39:0x0038, CROSS_EDGE: B:36:0x001b \-\> B:38:0x001f, CROSS_EDGE: B:34:0x0018 \-\> B:36:0x001b, CROSS_EDGE: B:32:0x0011 \-\> B:33:0x0012, CROSS_EDGE: B:28:0x0007 \-\> B:32:0x0011, CROSS_EDGE: B:44:0x0003 \-\> B:41:0x003a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_44;
Node_44 -> Node_27;
Node_44 -> Node_41;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_45;
Node_40 -> Node_24;
Node_45 -> Node_41;
Node_38 -> Node_39;
Node_32 -> Node_33;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_24;
}

