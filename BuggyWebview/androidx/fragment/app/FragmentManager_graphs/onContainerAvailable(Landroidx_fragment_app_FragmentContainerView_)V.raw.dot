digraph "CFG forandroidx.fragment.app.FragmentManager.onContainerAvailable(Landroidx\/fragment\/app\/FragmentContainerView;)V" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.FragmentStore) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore  (LINE:1022)\l0x0002: INVOKE  (r0 I:java.util.List) = (r0 I:androidx.fragment.app.FragmentStore) type: VIRTUAL call: androidx.fragment.app.FragmentStore.getActiveFragmentStateManagers():java.util.List A[MD:():java.util.List\<androidx.fragment.app.FragmentStateManager\> (m)]\l0x0006: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|LOOP_START\lLOOP:0: B:26:0x000a\-\>B:41:0x000a\l|0x000a: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0034 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0014: CHECK_CAST (r1 I:androidx.fragment.app.FragmentStateManager) = (androidx.fragment.app.FragmentStateManager) (r1 I:??[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:androidx.fragment.app.Fragment) = \l  (r1 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStateManager.getFragment():androidx.fragment.app.Fragment A[MD:():androidx.fragment.app.Fragment (m)] (LINE:1023)\l0x001a: IGET  (r3 I:int) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mContainerId int  (LINE:1024)\l0x001c: INVOKE  (r4 I:int) = (r6 I:androidx.fragment.app.FragmentContainerView A[D('container' androidx.fragment.app.FragmentContainerView)]) type: VIRTUAL call: androidx.fragment.app.FragmentContainerView.getId():int A[MD:():int (s)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x000a \l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0022|0x0022: IGET  (r3 I:android.view.View) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mView android.view.View \l}"];
Node_31 [shape=record,label="{31\:\ 0x0024|0x0024: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x000a \l}"];
Node_39 [shape=record,label="{39\:\ 0x0026|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0026|0x0026: IGET  (r3 I:android.view.View) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mView android.view.View \l0x0028: INVOKE  (r3 I:android.view.ViewParent) = (r3 I:android.view.View) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:1025)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x000a \l}"];
Node_40 [shape=record,label="{40\:\ 0x002e|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x002e|0x002e: IPUT  \l  (r6 I:android.view.ViewGroup A[D('container' androidx.fragment.app.FragmentContainerView)])\l  (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)])\l androidx.fragment.app.Fragment.mContainer android.view.ViewGroup  (LINE:1027)\l0x0030: INVOKE  \l  (r1 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStateManager.addViewToContainer():void A[MD:():void (m)] (LINE:1028)\l}"];
Node_45 [shape=record,label="{45\:\ 0x000a|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:26:0x000a\-\>B:41:0x000a\l}"];
Node_44 [shape=record,label="{44\:\ 0x000a|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x000a|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x000a|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0034|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0034|RETURN\l|0x0034: RETURN    (LINE:1031)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.onContainerAvailable((r5 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.fragment.app.FragmentContainerView A[D('container' androidx.fragment.app.FragmentContainerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x002e \-\> B:26:0x000a, BACK_EDGE: B:33:0x002c \-\> B:26:0x000a, BACK_EDGE: B:31:0x0024 \-\> B:26:0x000a, BACK_EDGE: B:29:0x0020 \-\> B:26:0x000a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0033: r1 'fragmentStateManager' Landroidx\/fragment\/app\/FragmentStateManager;\l  0x001a\-0x0033: r2 'fragment' Landroidx\/fragment\/app\/Fragment;\l  \-1 \-0x0034: r6 'container' Landroidx\/fragment\/app\/FragmentContainerView;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_37[style=dashed];
Node_29 -> Node_42;
Node_37 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_39[style=dashed];
Node_31 -> Node_43;
Node_39 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_40[style=dashed];
Node_33 -> Node_44;
Node_40 -> Node_34;
Node_34 -> Node_45;
Node_45 -> Node_41;
Node_41 -> Node_26;
Node_44 -> Node_41;
Node_43 -> Node_41;
Node_42 -> Node_41;
Node_38 -> Node_36;
Node_36 -> Node_24;
}

