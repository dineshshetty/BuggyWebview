digraph "CFG forandroidx.fragment.app.FragmentManager.ensureExecReady(Z)V" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean  (LINE:1930)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x005b \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|0x0004: IGET  (r0 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:1934)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001c \l}"];
Node_38 [shape=record,label="{38\:\ 0x0008|0x0008: IGET  (r0 I:boolean) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mDestroyed boolean  (LINE:1935)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0014 \l}"];
Node_40 [shape=record,label="{40\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1936)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager has been destroyed\" \l0x0010: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0013|0x0013: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1938)\l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager has not been attached to a host.\" \l0x0018: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_44 [shape=record,label="{44\:\ 0x001c|0x001c: INVOKE  (r0 I:android.os.Looper) =  type: STATIC call: android.os.Looper.myLooper():android.os.Looper A[MD:():android.os.Looper (c)] (LINE:1942)\l0x0020: IGET  (r1 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback \l0x0022: INVOKE  (r1 I:android.os.Handler) = (r1 I:androidx.fragment.app.FragmentHostCallback) type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.getHandler():android.os.Handler A[MD:():android.os.Handler (m)]\l0x0026: INVOKE  (r1 I:android.os.Looper) = (r1 I:android.os.Handler) type: VIRTUAL call: android.os.Handler.getLooper():android.os.Looper A[MD:():android.os.Looper (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0053 \l}"];
Node_46 [shape=record,label="{46\:\ 0x002c|0x002c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowStateLoss' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0031  (LINE:1946)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|0x002e: INVOKE  (r2 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.checkStateLoss():void A[MD:():void (m)] (LINE:1947)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0031|0x0031: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList  (LINE:1950)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0043 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0035|0x0035: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1951)\l0x0037: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x003a: IPUT  (r0 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList \l0x003c: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:1952)\l0x003e: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0041: IPUT  (r0 I:java.util.ArrayList\<java.lang.Boolean\>), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpIsPop java.util.ArrayList \l}"];
Node_51 [shape=record,label="{51\:\ 0x0043|0x0043: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1954)\l0x0044: IPUT  (r0 I:boolean), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean \l0x0046: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1956)\l0x0047: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0048|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_52 [shape=record,label="{52\:\ 0x0048|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x004f, blocks: (B:52:0x0048), top: B:62:0x0048 \}\lCatch: all \-\> 0x004f\l|0x0048: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r1 I:java.util.ArrayList), (r1 I:java.util.ArrayList) type: DIRECT call: androidx.fragment.app.FragmentManager.executePostponedTransaction(java.util.ArrayList, java.util.ArrayList):void A[Catch: all \-\> 0x004f, MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>):void (m), TRY_ENTER, TRY_LEAVE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x004b|0x004b: IPUT  (r0 I:boolean), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean  (LINE:1958)\l}"];
Node_54 [shape=record,label="{54\:\ 0x004e|RETURN\l|0x004e: RETURN    (LINE:1960)\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_55 [shape=record,label="{55\:\ 0x004f|ExcHandler: all \-\> 0x004f\l|0x004f: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x004f] (LINE:1958)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|0x0050: IPUT  (r0 I:boolean), (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean \l}"];
Node_57 [shape=record,label="{57\:\ 0x0052|0x0052: THROW  (r1 I:java.lang.Throwable)  (LINE:1959)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0053|0x0053: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1943)\l0x0055: CONST_STR  (r1 I:java.lang.String) =  \"Must be called from main thread of fragment host\" \l0x0057: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x005a|0x005a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_60 [shape=record,label="{60\:\ 0x005b|0x005b: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:1931)\l0x005d: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager is already executing transactions\" \l0x005f: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0062|0x0062: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.ensureExecReady((r2 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[D('allowStateLoss' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x001b \-\> B:33:?, CROSS_EDGE: B:54:0x004e \-\> B:33:?, CROSS_EDGE: B:57:0x0052 \-\> B:33:?, CROSS_EDGE: B:62:0x0048 \-\> B:55:0x004f, CROSS_EDGE: B:49:0x0033 \-\> B:51:0x0043, CROSS_EDGE: B:46:0x002c \-\> B:48:0x0031, CROSS_EDGE: B:59:0x005a \-\> B:33:?, CROSS_EDGE: B:61:0x0062 \-\> B:33:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0062: r3 'allowStateLoss' Z\lTryCatch #0 \{all \-\> 0x004f, blocks: (B:52:0x0048), top: B:62:0x0048 \}\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_60;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_33;
Node_42 -> Node_43;
Node_43 -> Node_33;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_58;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_62;
Node_62 -> Node_52;
Node_62 -> Node_55;
Node_52 -> Node_53;
Node_52 -> Node_63;
Node_53 -> Node_54;
Node_54 -> Node_33;
Node_63 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_33;
Node_58 -> Node_59;
Node_59 -> Node_33;
Node_60 -> Node_61;
Node_61 -> Node_33;
}

