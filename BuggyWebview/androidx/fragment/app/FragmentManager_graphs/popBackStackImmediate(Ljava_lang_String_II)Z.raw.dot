digraph "CFG forandroidx.fragment.app.FragmentManager.popBackStackImmediate(Ljava\/lang\/String;II)Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:764)\l0x0001: INVOKE  (r9 I:androidx.fragment.app.FragmentManager), (r0 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.execPendingActions(boolean):boolean A[MD:(boolean):boolean (m)]\l0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:765)\l0x0005: INVOKE  (r9 I:androidx.fragment.app.FragmentManager), (r0 I:boolean) type: DIRECT call: androidx.fragment.app.FragmentManager.ensureExecReady(boolean):void A[MD:(boolean):void (m)]\l0x0008: IGET  (r1 I:androidx.fragment.app.Fragment) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPrimaryNav androidx.fragment.app.Fragment  (LINE:767)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|0x000c: IF  (r11 I:??[int, byte, short, char] A[D('id' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('name' java.lang.String)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: INVOKE  (r1 I:androidx.fragment.app.FragmentManager) = (r1 I:androidx.fragment.app.Fragment) type: VIRTUAL call: androidx.fragment.app.Fragment.getChildFragmentManager():androidx.fragment.app.FragmentManager A[MD:():androidx.fragment.app.FragmentManager (m)] (LINE:770)\l0x0014: INVOKE  (r2 I:boolean) = (r1 I:androidx.fragment.app.FragmentManager A[D('childManager' androidx.fragment.app.FragmentManager)]) type: VIRTUAL call: androidx.fragment.app.FragmentManager.popBackStackImmediate():boolean A[MD:():boolean (m)] (LINE:771)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x001b \l}"];
Node_29 [shape=record,label="{29\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:boolean)  (LINE:773)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|0x001b: IGET  (r4 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList  (LINE:777)\l0x001d: IGET  (r5 I:java.util.ArrayList\<java.lang.Boolean\>) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpIsPop java.util.ArrayList \l0x001f: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY]) \l0x0020: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('name' java.lang.String)]) \l0x0021: MOVE  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)]) \l0x0022: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('flags' int)]) \l0x0023: INVOKE  (r1 I:boolean) = \l  (r3 I:androidx.fragment.app.FragmentManager)\l  (r4 I:java.util.ArrayList)\l  (r5 I:java.util.ArrayList)\l  (r6 I:java.lang.String)\l  (r7 I:int)\l  (r8 I:int)\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int):boolean A[MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, java.lang.String, int, int):boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0027|0x0027: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('executePop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x003b  (LINE:778)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|0x0029: IPUT  (r0 I:boolean), (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean  (LINE:779)\l}"];
Node_40 [shape=record,label="{40\:\ 0x002b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x002b|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0036, blocks: (B:33:0x002b), top: B:40:0x002b \}\lCatch: all \-\> 0x0036\l|0x002b: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpRecords java.util.ArrayList A[Catch: all \-\> 0x0036, TRY_ENTER] (LINE:781)\l0x002d: IGET  (r2 I:java.util.ArrayList\<java.lang.Boolean\>) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mTmpIsPop java.util.ArrayList A[Catch: all \-\> 0x0036]\l0x002f: INVOKE  (r9 I:androidx.fragment.app.FragmentManager), (r0 I:java.util.ArrayList), (r2 I:java.util.ArrayList) type: DIRECT call: androidx.fragment.app.FragmentManager.removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList):void A[Catch: all \-\> 0x0036, MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>):void (m), TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0032|0x0032: INVOKE  (r9 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.cleanupExec():void A[MD:():void (m)] (LINE:783)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_35 [shape=record,label="{35\:\ 0x0036|ExcHandler: all \-\> 0x0036\l|0x0036: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0036] (LINE:783)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0037|0x0037: INVOKE  (r9 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.cleanupExec():void A[MD:():void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x003a|0x003a: THROW  (r0 I:java.lang.Throwable)  (LINE:784)\l}"];
Node_38 [shape=record,label="{38\:\ 0x003b|0x003b: INVOKE  (r9 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.updateOnBackPressedCallbackEnabled():void A[MD:():void (m)] (LINE:787)\l0x003e: INVOKE  (r9 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.doPendingDeferredStart():void A[MD:():void (m)] (LINE:788)\l0x0041: IGET  (r0 I:androidx.fragment.app.FragmentStore) = (r9 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore  (LINE:789)\l0x0043: INVOKE  (r0 I:androidx.fragment.app.FragmentStore) type: VIRTUAL call: androidx.fragment.app.FragmentStore.burpActive():void A[MD:():void (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0046|RETURN\l|0x0046: RETURN  (r1 I:boolean A[D('executePop' boolean)])  (LINE:790)\l}"];
MethodNode[shape=record,label="{private boolean androidx.fragment.app.FragmentManager.popBackStackImmediate((r9 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:39:0x0046 \-\> B:22:?, CROSS_EDGE: B:37:0x003a \-\> B:22:?, CROSS_EDGE: B:40:0x002b \-\> B:35:0x0036, CROSS_EDGE: B:31:0x0027 \-\> B:38:0x003b, CROSS_EDGE: B:26:0x000e \-\> B:30:0x001b, CROSS_EDGE: B:25:0x000c \-\> B:30:0x001b, CROSS_EDGE: B:24:0x000a \-\> B:30:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x001b: r1 'childManager' Landroidx\/fragment\/app\/FragmentManager;\l  0x0027\-0x0046: r1 'executePop' Z\l  \-1 \-0x0046: r10 'name' Ljava\/lang\/String;\l  \-1 \-0x0046: r11 'id' I\l  \-1 \-0x0046: r12 'flags' I\lTryCatch #0 \{all \-\> 0x0036, blocks: (B:33:0x002b), top: B:40:0x002b \}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_22;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_40;
Node_40 -> Node_33;
Node_40 -> Node_35;
Node_33 -> Node_34;
Node_33 -> Node_41;
Node_34 -> Node_38;
Node_41 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_22;
Node_38 -> Node_39;
Node_39 -> Node_22;
}

