digraph "CFG forandroidx.fragment.app.FragmentManager.generateOpsForPendingActions(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)Z" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2536)\l0x0001: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\>) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPendingActions java.util.ArrayList  (LINE:2537)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|0x0003: MONITOR_ENTER  (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lCatch: all \-\> 0x003a\l|0x0004: IGET  (r2 I:java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\>) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPendingActions java.util.ArrayList A[Catch: all \-\> 0x003a, TRY_ENTER] (LINE:2538)\l0x0006: INVOKE  (r2 I:boolean) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[Catch: all \-\> 0x003a, MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x000f \l}"];
Node_26 [shape=record,label="{26\:\ 0x000c|0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2539)\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|TryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lCatch: all \-\> 0x003a\l|0x000d: MONITOR_EXIT  (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|RETURN\l|0x000e: RETURN  (r2 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|TryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lCatch: all \-\> 0x003a\l|0x000f: IGET  (r2 I:java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\>) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPendingActions java.util.ArrayList A[Catch: all \-\> 0x003a] (LINE:2542)\l0x0011: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[Catch: all \-\> 0x003a, MD:():int (c)]\l0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2543)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0016|LOOP_START\lLOOP:0: B:30:0x0016\-\>B:31:0x0018\l|0x0016: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('numActions' int)])  \-\> B:39:0x0028 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|LOOP_END\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lLOOP:0: B:30:0x0016\-\>B:31:0x0018\lCatch: all \-\> 0x003a\l|0x0018: IGET  (r4 I:java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\>) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPendingActions java.util.ArrayList A[Catch: all \-\> 0x003a] (LINE:2544)\l0x001a: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.ArrayList), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[Catch: all \-\> 0x003a, MD:(int):E (c)]\l0x001e: CHECK_CAST (r4 I:androidx.fragment.app.FragmentManager$OpGenerator) = (androidx.fragment.app.FragmentManager$OpGenerator) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a]\l0x0020: INVOKE  (r4 I:boolean) = \l  (r4 I:androidx.fragment.app.FragmentManager$OpGenerator)\l  (r6 I:java.util.ArrayList A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)])\l  (r7 I:java.util.ArrayList A[D('isPop' java.util.ArrayList\<java.lang.Boolean\>)])\l type: INTERFACE call: androidx.fragment.app.FragmentManager.OpGenerator.generateOps(java.util.ArrayList, java.util.ArrayList):boolean A[Catch: all \-\> 0x003a, MD:(java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>):boolean (m)]\l0x0024: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('didSomething' boolean)]) \| (r4 I:??[int, boolean, short, byte, char]) A[Catch: all \-\> 0x003a]\l0x0025: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int) A[Catch: all \-\> 0x003a] (LINE:2543)\l0x0027: GOTO  \-\> 0x0016 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0028|TryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lCatch: all \-\> 0x003a\l|0x0028: IGET  (r3 I:java.util.ArrayList\<androidx.fragment.app.FragmentManager$OpGenerator\> A[D('i' int)]) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mPendingActions java.util.ArrayList A[Catch: all \-\> 0x003a] (LINE:2546)\l0x002a: INVOKE  (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clear():void A[Catch: all \-\> 0x003a, MD:():void (c)]\l0x002d: IGET  (r3 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback A[Catch: all \-\> 0x003a] (LINE:2547)\l0x002f: INVOKE  (r3 I:android.os.Handler) = (r3 I:androidx.fragment.app.FragmentHostCallback) type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.getHandler():android.os.Handler A[Catch: all \-\> 0x003a, MD:():android.os.Handler (m)]\l0x0033: IGET  (r4 I:java.lang.Runnable) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecCommit java.lang.Runnable A[Catch: all \-\> 0x003a]\l0x0035: INVOKE  (r3 I:android.os.Handler), (r4 I:java.lang.Runnable) type: VIRTUAL call: android.os.Handler.removeCallbacks(java.lang.Runnable):void A[Catch: all \-\> 0x003a, MD:(java.lang.Runnable):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0038|TryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lCatch: all \-\> 0x003a\l|0x0038: MONITOR_EXIT  (r1 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x003a] (LINE:2548)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0039|RETURN\l|0x0039: RETURN  (r0 I:boolean A[D('didSomething' boolean)])  (LINE:2549)\l}"];
Node_35 [shape=record,label="{35\:\ 0x003a|ExcHandler: all \-\> 0x003a\l|0x003a: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x003a] (LINE:2548)\l}"];
Node_36 [shape=record,label="{36\:\ 0x003b|TRY_LEAVE\lCatch: all \-\> 0x003a\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|0x003c: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean androidx.fragment.app.FragmentManager.generateOpsForPendingActions((r5 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\> A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.ArrayList\<java.lang.Boolean\> A[D('isPop' java.util.ArrayList\<java.lang.Boolean\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:31:0x0018 \-\> B:30:0x0016, CROSS_EDGE: B:34:0x0039 \-\> B:21:?, CROSS_EDGE: B:37:0x003c \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0028: r3 'i' I\l  0x0015\-0x0038: r2 'numActions' I\l  0x0001\-0x003c: r0 'didSomething' Z\l  0x0000\-0x003c: r6 'records' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;\l  0x0000\-0x003c: r7 'isPop' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;\lTryCatch #0 \{all \-\> 0x003a, blocks: (B:24:0x0004, B:27:0x000d, B:29:0x000f, B:31:0x0018, B:32:0x0028, B:33:0x0038), top: B:38:0x0004 \}\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;)Z\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_38;
Node_38 -> Node_24;
Node_38 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_21;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_30;
Node_39 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

