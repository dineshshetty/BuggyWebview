digraph "CFG forandroidx.fragment.app.FragmentManager.moveToState(Landroidx\/fragment\/app\/Fragment;I)V" {
Node_101 [shape=record,label="{101\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_103 [shape=record,label="{103\:\ 0x0000|androidx.fragment.app.FragmentStateManager r0 = r10.mFragmentStore.getFragmentStateManager(r11.mWho)\l}"];
Node_104 [shape=record,label="{104\:\ 0x0009|if (r0 != null) goto L4\l}"];
Node_105 [shape=record,label="{105\:\ 0x000b|r0 = new androidx.fragment.app.FragmentStateManager(r10.mLifecycleCallbacksDispatcher, r10.mFragmentStore, r11)\lr0.setFragmentManagerState(1)\l}"];
Node_106 [shape=record,label="{106\:\ 0x0018|PHI: r0 \l  PHI: (r0v2 'fragmentStateManager' androidx.fragment.app.FragmentStateManager) = (r0v1 'fragmentStateManager' androidx.fragment.app.FragmentStateManager), (r0v3 'fragmentStateManager' androidx.fragment.app.FragmentStateManager) binds: [B:104:0x0009, B:105:0x000b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_107 [shape=record,label="{107\:\ 0x001b|if (r11.mFromLayout == false) goto L11\l}"];
Node_108 [shape=record,label="{108\:\ 0x001d}"];
Node_109 [shape=record,label="{109\:\ 0x001f|if (r11.mInLayout == false) goto L11\l}"];
Node_110 [shape=record,label="{110\:\ 0x0021}"];
Node_111 [shape=record,label="{111\:\ 0x0023|if (r11.mState != 2) goto L11\l}"];
Node_112 [shape=record,label="{112\:\ 0x0025|int r12 = java.lang.Math.max(r12, 2)\l}"];
Node_113 [shape=record,label="{113\:\ 0x0029|PHI: r12 \l  PHI: (r12v1 'newState' int) = (r12v0 'newState' int), (r12v0 'newState' int), (r12v0 'newState' int), (r12v6 'newState' int) binds: [B:107:0x001b, B:109:0x001f, B:111:0x0023, B:112:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|int r12 = java.lang.Math.min(r12, r0.computeExpectedState())\l}"];
Node_114 [shape=record,label="{114\:\ 0x0039|if (r11.mState \> r12) goto L43\l}"];
Node_115 [shape=record,label="{115\:\ 0x003b}"];
Node_116 [shape=record,label="{116\:\ 0x003d|if (r11.mState \>= r12) goto L18\l}"];
Node_117 [shape=record,label="{117\:\ 0x003f}"];
Node_118 [shape=record,label="{118\:\ 0x0045|if (r10.mExitAnimationCancellationSignals.isEmpty() != false) goto L18\l}"];
Node_119 [shape=record,label="{119\:\ 0x0047|cancelExitAnimation(r11)\l}"];
Node_120 [shape=record,label="{120\:\ 0x004a}"];
Node_121 [shape=record,label="{121\:\ 0x004c|switch(r11.mState) \{\l    case \-1: goto L20;\l    case 0: goto L22;\l    case 1: goto L24;\l    case 2: goto L28;\l    case 3: goto L34;\l    case 4: goto L30;\l    case 5: goto L32;\l    default: goto L34;\l\}\l}"];
Node_123 [shape=record,label="{123\:\ 0x0050|if (r12 \<= (\-1)) goto L22\l}"];
Node_124 [shape=record,label="{124\:\ 0x0052|r0.attach()\l}"];
Node_125 [shape=record,label="{125\:\ 0x0055|if (r12 \<= 0) goto L24\l}"];
Node_126 [shape=record,label="{126\:\ 0x0057|r0.create()\l}"];
Node_127 [shape=record,label="{127\:\ 0x005a|if (r12 \<= (\-1)) goto L26\l}"];
Node_128 [shape=record,label="{128\:\ 0x005c|r0.ensureInflatedView()\l}"];
Node_129 [shape=record,label="{129\:\ 0x005f|if (r12 \<= 1) goto L28\l}"];
Node_130 [shape=record,label="{130\:\ 0x0061|r0.createView()\l}"];
Node_131 [shape=record,label="{131\:\ 0x0064|if (r12 \<= 2) goto L30\l}"];
Node_132 [shape=record,label="{132\:\ 0x0066|r0.activityCreated()\l}"];
Node_133 [shape=record,label="{133\:\ 0x0069|if (r12 \<= 4) goto L32\l}"];
Node_134 [shape=record,label="{134\:\ 0x006b|r0.start()\l}"];
Node_135 [shape=record,label="{135\:\ 0x006e|if (r12 \<= 5) goto L34\l}"];
Node_136 [shape=record,label="{136\:\ 0x0070|r0.resume()\l}"];
Node_194 [shape=record,label="{194\:\ 0x015b|PHI: r12 \l  PHI: (r12v5 'newState' int) = (r12v2 'newState' int), (r12v2 'newState' int), (r12v3 'newState' int), (r12v3 'newState' int), (r12v2 'newState' int), (r12v2 'newState' int), (r12v2 'newState' int) binds: [B:139:0x0077, B:141:0x007b, B:192:0x0156, B:193:0x0158, B:121:0x004c, B:135:0x006e, B:136:0x0070] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_195 [shape=record,label="{195\:\ 0x015d|if (r11.mState == r12) goto L42\l}"];
Node_196 [shape=record,label="{196\:\ 0x015f}"];
Node_197 [shape=record,label="{197\:\ 0x0163|if (isLoggingEnabled(3) == false) goto L39\l}"];
Node_198 [shape=record,label="{198\:\ 0x0165|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"moveToState: Fragment state for \")\lr1.append(r11)\lr1.append(\" not updated inline; expected state \")\lr1.append(r12)\lr1.append(\" found \")\lr1.append(r11.mState)\landroid.util.Log.d(androidx.fragment.app.FragmentManager.TAG, r1.toString())\l}"];
Node_199 [shape=record,label="{199\:\ 0x018b|r11.mState = r12\l}"];
Node_200 [shape=record,label="{200\:\ 0x018d|RETURN\lORIG_RETURN\l|return\l}"];
Node_102 [shape=record,label="{102\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_201 [shape=record,label="{201\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_138 [shape=record,label="{138\:\ 0x0075}"];
Node_139 [shape=record,label="{139\:\ 0x0077|if (r11.mState \<= r12) goto L34\l}"];
Node_140 [shape=record,label="{140\:\ 0x0079}"];
Node_141 [shape=record,label="{141\:\ 0x007b|switch(r11.mState) \{\l    case 0: goto L96;\l    case 1: goto L91;\l    case 2: goto L63;\l    case 3: goto L34;\l    case 4: goto L52;\l    case 5: goto L50;\l    case 6: goto L34;\l    case 7: goto L47;\l    default: goto L34;\l\}\l}"];
Node_143 [shape=record,label="{143\:\ 0x0080}"];
Node_144 [shape=record,label="{144\:\ 0x0081|if (r12 \>= 7) goto L50\l}"];
Node_145 [shape=record,label="{145\:\ 0x0083|r0.pause()\l}"];
Node_146 [shape=record,label="{146\:\ 0x0086|if (r12 \>= 5) goto L52\l}"];
Node_147 [shape=record,label="{147\:\ 0x0088|r0.stop()\l}"];
Node_148 [shape=record,label="{148\:\ 0x008b|if (r12 \>= 4) goto L63\l}"];
Node_149 [shape=record,label="{149\:\ 0x008d}"];
Node_150 [shape=record,label="{150\:\ 0x0091|if (isLoggingEnabled(3) == false) goto L56\l}"];
Node_151 [shape=record,label="{151\:\ 0x0093|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"movefrom ACTIVITY_CREATED: \")\lr2.append(r11)\landroid.util.Log.d(androidx.fragment.app.FragmentManager.TAG, r2.toString())\l}"];
Node_152 [shape=record,label="{152\:\ 0x00a7}"];
Node_153 [shape=record,label="{153\:\ 0x00a9|if (r11.mView == null) goto L63\l}"];
Node_154 [shape=record,label="{154\:\ 0x00ab}"];
Node_155 [shape=record,label="{155\:\ 0x00b1|if (r10.mHost.onShouldSaveFragmentState(r11) == false) goto L63\l}"];
Node_156 [shape=record,label="{156\:\ 0x00b3}"];
Node_157 [shape=record,label="{157\:\ 0x00b5|if (r11.mSavedViewState != null) goto L63\l}"];
Node_158 [shape=record,label="{158\:\ 0x00b7|r0.saveViewState()\l}"];
Node_159 [shape=record,label="{159\:\ 0x00ba|if (r12 \>= 2) goto L91\l}"];
Node_160 [shape=record,label="{160\:\ 0x00bc|r2 = null\l}"];
Node_161 [shape=record,label="{161\:\ 0x00bf|if (r11.mView == null) goto L88\l}"];
Node_162 [shape=record,label="{162\:\ 0x00c1}"];
Node_163 [shape=record,label="{163\:\ 0x00c3|if (r11.mContainer == null) goto L88\l}"];
Node_164 [shape=record,label="{164\:\ 0x00c5|r11.mContainer.endViewTransition(r11.mView)\lr11.mView.clearAnimation()\l}"];
Node_165 [shape=record,label="{165\:\ 0x00d5|if (r11.isRemovingParent() != false) goto L88\l}"];
Node_166 [shape=record,label="{166\:\ 0x00d7}"];
Node_167 [shape=record,label="{167\:\ 0x00da|if (r10.mCurState \<= (\-1)) goto L79\l}"];
Node_168 [shape=record,label="{168\:\ 0x00dc}"];
Node_169 [shape=record,label="{169\:\ 0x00de|if (r10.mDestroyed != false) goto L79\l}"];
Node_170 [shape=record,label="{170\:\ 0x00e0}"];
Node_171 [shape=record,label="{171\:\ 0x00e6|if (r11.mView.getVisibility() != 0) goto L79\l}"];
Node_172 [shape=record,label="{172\:\ 0x00e8}"];
Node_173 [shape=record,label="{173\:\ 0x00ec|if ((r11.mPostponedAlpha \> 0.0f ? 1 : (r11.mPostponedAlpha == 0.0f ? 0 : \-1)) \< 0) goto L79\l}"];
Node_174 [shape=record,label="{174\:\ 0x00ee|androidx.fragment.app.FragmentAnim$AnimationOrAnimator r2 = androidx.fragment.app.FragmentAnim.loadAnimation(r10.mHost.getContext(), r11, false, r11.getPopDirection())\l}"];
Node_175 [shape=record,label="{175\:\ 0x00fd|PHI: r2 \l  PHI: (r2v6 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator) = (r2v5 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator), (r2v5 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator), (r2v5 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator), (r2v5 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator), (r2v7 'anim' androidx.fragment.app.FragmentAnim$AnimationOrAnimator) binds: [B:167:0x00da, B:169:0x00de, B:171:0x00e6, B:173:0x00ec, B:174:0x00ee] A[DONT_GENERATE, DONT_INLINE]\l|r11.mPostponedAlpha = 0.0f\landroid.view.ViewGroup r4 = r11.mContainer\landroid.view.View r5 = r11.mView\l}"];
Node_176 [shape=record,label="{176\:\ 0x0103|if (r2 == null) goto L82\l}"];
Node_177 [shape=record,label="{177\:\ 0x0105|androidx.fragment.app.FragmentAnim.animateRemoveFragment(r11, r2, r10.mFragmentTransitionCallback)\l}"];
Node_178 [shape=record,label="{178\:\ 0x010a|r4.removeView(r5)\l}"];
Node_179 [shape=record,label="{179\:\ 0x0111|if (isLoggingEnabled(2) == false) goto L85\l}"];
Node_180 [shape=record,label="{180\:\ 0x0113|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Removing view \")\lr3.append(r5)\lr3.append(\" for fragment \")\lr3.append(r11)\lr3.append(\" from container \")\lr3.append(r4)\landroid.util.Log.v(androidx.fragment.app.FragmentManager.TAG, r3.toString())\l}"];
Node_181 [shape=record,label="{181\:\ 0x0137}"];
Node_182 [shape=record,label="{182\:\ 0x0139|if (r4 == r11.mContainer) goto L88\l}"];
Node_183 [shape=record,label="{183\:\ 0x013b|RETURN\l|return\l}"];
Node_184 [shape=record,label="{184\:\ 0x013c}"];
Node_185 [shape=record,label="{185\:\ 0x0142|if (r10.mExitAnimationCancellationSignals.get(r11) != null) goto L91\l}"];
Node_186 [shape=record,label="{186\:\ 0x0144|r0.destroyFragmentView()\l}"];
Node_187 [shape=record,label="{187\:\ 0x0147|if (r12 \>= 1) goto L96\l}"];
Node_188 [shape=record,label="{188\:\ 0x0149}"];
Node_189 [shape=record,label="{189\:\ 0x014f|if (r10.mExitAnimationCancellationSignals.get(r11) == null) goto L95\l}"];
Node_190 [shape=record,label="{190\:\ 0x0151|r12 = 1\l}"];
Node_191 [shape=record,label="{191\:\ 0x0153|r0.destroy()\l}"];
Node_192 [shape=record,label="{192\:\ 0x0156|PHI: r12 \l  PHI: (r12v3 'newState' int) = (r12v2 'newState' int), (r12v2 'newState' int), (r12v2 'newState' int), (r12v4 'newState' int) binds: [B:141:0x007b, B:187:0x0147, B:191:0x0153, B:190:0x0151] A[DONT_GENERATE, DONT_INLINE]\l|if (r12 \>= 0) goto L34\l}"];
Node_193 [shape=record,label="{193\:\ 0x0158|r0.detach()\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.moveToState((r10v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r11v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'newState' int A[D('newState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lCROSS_EDGE: B:197:0x0163 \-\> B:199:0x018b, CROSS_EDGE: B:195:0x015d \-\> B:200:0x018d, CROSS_EDGE: B:135:0x006e \-\> B:194:0x015b, CROSS_EDGE: B:133:0x0069 \-\> B:135:0x006e, CROSS_EDGE: B:131:0x0064 \-\> B:133:0x0069, CROSS_EDGE: B:129:0x005f \-\> B:131:0x0064, CROSS_EDGE: B:127:0x005a \-\> B:129:0x005f, CROSS_EDGE: B:125:0x0055 \-\> B:127:0x005a, CROSS_EDGE: B:123:0x0050 \-\> B:125:0x0055, CROSS_EDGE: B:121:0x004c \-\> B:125:0x0055, CROSS_EDGE: B:121:0x004c \-\> B:127:0x005a, CROSS_EDGE: B:121:0x004c \-\> B:131:0x0064, CROSS_EDGE: B:121:0x004c \-\> B:133:0x0069, CROSS_EDGE: B:121:0x004c \-\> B:135:0x006e, CROSS_EDGE: B:121:0x004c \-\> B:194:0x015b, CROSS_EDGE: B:118:0x0045 \-\> B:120:0x004a, CROSS_EDGE: B:116:0x003d \-\> B:120:0x004a, CROSS_EDGE: B:183:0x013b \-\> B:102:?, CROSS_EDGE: B:193:0x0158 \-\> B:194:0x015b, CROSS_EDGE: B:192:0x0156 \-\> B:194:0x015b, CROSS_EDGE: B:191:0x0153 \-\> B:192:0x0156, CROSS_EDGE: B:187:0x0147 \-\> B:192:0x0156, CROSS_EDGE: B:185:0x0142 \-\> B:187:0x0147, CROSS_EDGE: B:179:0x0111 \-\> B:181:0x0137, CROSS_EDGE: B:176:0x0103 \-\> B:178:0x010a, CROSS_EDGE: B:173:0x00ec \-\> B:175:0x00fd, CROSS_EDGE: B:171:0x00e6 \-\> B:175:0x00fd, CROSS_EDGE: B:169:0x00de \-\> B:175:0x00fd, CROSS_EDGE: B:167:0x00da \-\> B:175:0x00fd, CROSS_EDGE: B:165:0x00d5 \-\> B:184:0x013c, CROSS_EDGE: B:163:0x00c3 \-\> B:184:0x013c, CROSS_EDGE: B:161:0x00bf \-\> B:184:0x013c, CROSS_EDGE: B:159:0x00ba \-\> B:187:0x0147, CROSS_EDGE: B:157:0x00b5 \-\> B:159:0x00ba, CROSS_EDGE: B:155:0x00b1 \-\> B:159:0x00ba, CROSS_EDGE: B:153:0x00a9 \-\> B:159:0x00ba, CROSS_EDGE: B:150:0x0091 \-\> B:152:0x00a7, CROSS_EDGE: B:148:0x008b \-\> B:159:0x00ba, CROSS_EDGE: B:146:0x0086 \-\> B:148:0x008b, CROSS_EDGE: B:144:0x0081 \-\> B:146:0x0086, CROSS_EDGE: B:141:0x007b \-\> B:146:0x0086, CROSS_EDGE: B:141:0x007b \-\> B:148:0x008b, CROSS_EDGE: B:141:0x007b \-\> B:159:0x00ba, CROSS_EDGE: B:141:0x007b \-\> B:187:0x0147, CROSS_EDGE: B:141:0x007b \-\> B:192:0x0156, CROSS_EDGE: B:141:0x007b \-\> B:194:0x015b, CROSS_EDGE: B:139:0x0077 \-\> B:194:0x015b, CROSS_EDGE: B:111:0x0023 \-\> B:113:0x0029, CROSS_EDGE: B:109:0x001f \-\> B:113:0x0029, CROSS_EDGE: B:107:0x001b \-\> B:113:0x0029, CROSS_EDGE: B:104:0x0009 \-\> B:106:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_101;Node_101 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_105[style=dashed];
Node_104 -> Node_106;
Node_105 -> Node_106;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_113;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_113;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_113;
Node_112 -> Node_113;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_138;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_120;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_120;
Node_120 -> Node_121;
Node_121 -> Node_123;
Node_121 -> Node_125;
Node_121 -> Node_127;
Node_121 -> Node_131;
Node_121 -> Node_133;
Node_121 -> Node_135;
Node_121 -> Node_194;
Node_123 -> Node_124[style=dashed];
Node_123 -> Node_125;
Node_124 -> Node_125;
Node_125 -> Node_126[style=dashed];
Node_125 -> Node_127;
Node_126 -> Node_127;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_129;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_131;
Node_130 -> Node_131;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_133;
Node_132 -> Node_133;
Node_133 -> Node_134[style=dashed];
Node_133 -> Node_135;
Node_134 -> Node_135;
Node_135 -> Node_136[style=dashed];
Node_135 -> Node_194;
Node_136 -> Node_194;
Node_194 -> Node_195;
Node_195 -> Node_196[style=dashed];
Node_195 -> Node_201;
Node_196 -> Node_197;
Node_197 -> Node_198[style=dashed];
Node_197 -> Node_199;
Node_198 -> Node_199;
Node_199 -> Node_200;
Node_200 -> Node_102;
Node_201 -> Node_102;
Node_138 -> Node_139;
Node_139 -> Node_140[style=dashed];
Node_139 -> Node_194;
Node_140 -> Node_141;
Node_141 -> Node_143;
Node_141 -> Node_146;
Node_141 -> Node_148;
Node_141 -> Node_159;
Node_141 -> Node_187;
Node_141 -> Node_192;
Node_141 -> Node_194;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_146;
Node_145 -> Node_146;
Node_146 -> Node_147[style=dashed];
Node_146 -> Node_148;
Node_147 -> Node_148;
Node_148 -> Node_149[style=dashed];
Node_148 -> Node_159;
Node_149 -> Node_150;
Node_150 -> Node_151[style=dashed];
Node_150 -> Node_152;
Node_151 -> Node_152;
Node_152 -> Node_153;
Node_153 -> Node_154[style=dashed];
Node_153 -> Node_159;
Node_154 -> Node_155;
Node_155 -> Node_156[style=dashed];
Node_155 -> Node_159;
Node_156 -> Node_157;
Node_157 -> Node_158[style=dashed];
Node_157 -> Node_159;
Node_158 -> Node_159;
Node_159 -> Node_160[style=dashed];
Node_159 -> Node_187;
Node_160 -> Node_161;
Node_161 -> Node_162[style=dashed];
Node_161 -> Node_184;
Node_162 -> Node_163;
Node_163 -> Node_164[style=dashed];
Node_163 -> Node_184;
Node_164 -> Node_165;
Node_165 -> Node_166[style=dashed];
Node_165 -> Node_184;
Node_166 -> Node_167;
Node_167 -> Node_168[style=dashed];
Node_167 -> Node_175;
Node_168 -> Node_169;
Node_169 -> Node_170[style=dashed];
Node_169 -> Node_175;
Node_170 -> Node_171;
Node_171 -> Node_172[style=dashed];
Node_171 -> Node_175;
Node_172 -> Node_173;
Node_173 -> Node_174[style=dashed];
Node_173 -> Node_175;
Node_174 -> Node_175;
Node_175 -> Node_176;
Node_176 -> Node_177[style=dashed];
Node_176 -> Node_178;
Node_177 -> Node_178;
Node_178 -> Node_179;
Node_179 -> Node_180[style=dashed];
Node_179 -> Node_181;
Node_180 -> Node_181;
Node_181 -> Node_182;
Node_182 -> Node_183[style=dashed];
Node_182 -> Node_184;
Node_183 -> Node_102;
Node_184 -> Node_185;
Node_185 -> Node_186[style=dashed];
Node_185 -> Node_187;
Node_186 -> Node_187;
Node_187 -> Node_188[style=dashed];
Node_187 -> Node_192;
Node_188 -> Node_189;
Node_189 -> Node_190[style=dashed];
Node_189 -> Node_191;
Node_190 -> Node_192;
Node_191 -> Node_192;
Node_192 -> Node_193[style=dashed];
Node_192 -> Node_194;
Node_193 -> Node_194;
}

