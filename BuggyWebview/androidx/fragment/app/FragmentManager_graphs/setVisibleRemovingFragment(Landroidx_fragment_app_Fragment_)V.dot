digraph "CFG forandroidx.fragment.app.FragmentManager.setVisibleRemovingFragment(Landroidx\/fragment\/app\/Fragment;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.view.ViewGroup r0 = getFragmentContainer(r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (r0 == null) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006}"];
Node_18 [shape=record,label="{18\:\ 0x0019|if ((((r4.getEnterAnim() + r4.getExitAnim()) + r4.getPopEnterAnim()) + r4.getPopExitAnim()) \<= 0) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x001b}"];
Node_20 [shape=record,label="{20\:\ 0x0021|if (r0.getTag(androidx.fragment.C0296R.C0299id.visible_removing_fragment_view_tag) != null) goto L8\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|r0.setTag(androidx.fragment.C0296R.C0299id.visible_removing_fragment_view_tag, r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|((androidx.fragment.app.Fragment) r0.getTag(androidx.fragment.C0296R.C0299id.visible_removing_fragment_view_tag)).setPopDirection(r4.getPopDirection())\l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.setVisibleRemovingFragment((r3v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0021 \-\> B:22:0x0028, CROSS_EDGE: B:18:0x0019 \-\> B:23:0x0037, CROSS_EDGE: B:16:0x0004 \-\> B:23:0x0037\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

