digraph "CFG forandroidx.fragment.app.FragmentManager.popBackStack(II)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IF  (r4 I:??[int, byte, short, char] A[D('id' int)]) \< (0 ??[int, byte, short, char])  \-\> B:12:0x000d  (LINE:737)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) =  androidx.fragment.app.FragmentManager$PopBackStackState  (LINE:740)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  \l  (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState)\l  (r3 I:androidx.fragment.app.FragmentManager)\l  (r1 I:java.lang.String)\l  (r4 I:int A[D('id' int)])\l  (r5 I:int A[D('flags' int)])\l type: DIRECT call: androidx.fragment.app.FragmentManager.PopBackStackState.\<init\>(androidx.fragment.app.FragmentManager, java.lang.String, int, int):void A[MD:(androidx.fragment.app.FragmentManager, java.lang.String, int, int):void (m)]\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r3 I:androidx.fragment.app.FragmentManager), (r0 I:androidx.fragment.app.FragmentManager$OpGenerator), (r1 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator, boolean):void A[MD:(androidx.fragment.app.FragmentManager$OpGenerator, boolean):void (m)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:741)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:738)\l0x000f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"Bad id: \" \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int A[D('id' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0020: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.popBackStack((r3 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0023 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0023: r4 'id' I\l  \-1 \-0x0023: r5 'flags' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

