digraph "CFG forandroidx.fragment.app.FragmentManager.retainNonConfig()Landroidx\/fragment\/app\/FragmentManagerNonConfig;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:2637)\l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.lifecycle.ViewModelStoreOwner \l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0010 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:2638)\l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"You cannot use retainNonConfig when your FragmentHostCallback implements ViewModelStoreOwner.\" \l0x000a: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x000d: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r0 I:java.lang.RuntimeException) type: DIRECT call: androidx.fragment.app.FragmentManager.throwException(java.lang.RuntimeException):void A[MD:(java.lang.RuntimeException):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: IGET  (r0 I:androidx.fragment.app.FragmentManagerViewModel) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mNonConfig androidx.fragment.app.FragmentManagerViewModel  (LINE:2641)\l0x0012: INVOKE  (r0 I:androidx.fragment.app.FragmentManagerNonConfig) = (r0 I:androidx.fragment.app.FragmentManagerViewModel) type: VIRTUAL call: androidx.fragment.app.FragmentManagerViewModel.getSnapshot():androidx.fragment.app.FragmentManagerNonConfig A[MD:():androidx.fragment.app.FragmentManagerNonConfig (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|RETURN\l|0x0016: RETURN  (r0 I:androidx.fragment.app.FragmentManagerNonConfig) \l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.fragment.app.FragmentManagerNonConfig androidx.fragment.app.FragmentManager.retainNonConfig((r2 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x0010\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

