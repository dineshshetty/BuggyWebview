digraph "CFG forandroidx.fragment.app.FragmentManager.executeOps(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;II)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:2393)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|LOOP_START\lLOOP:0: B:20:0x0001\-\>B:29:0x002a\l|0x0001: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r8 I:??[int, byte, short, char] A[D('endIndex' int)])  \-\> B:31:0x002d \l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|0x0003: INVOKE  (r1 I:java.lang.Object) = \l  (r5 I:java.util.ArrayList A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)])\l  (r0 I:int A[D('i' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2394)\l0x0007: CHECK_CAST (r1 I:androidx.fragment.app.BackStackRecord) = (androidx.fragment.app.BackStackRecord) (r1 I:??[OBJECT, ARRAY]) \l0x0009: INVOKE  (r2 I:java.lang.Object) = (r6 I:java.util.ArrayList A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]), (r0 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2395)\l0x000d: CHECK_CAST (r2 I:java.lang.Boolean) = (java.lang.Boolean) (r2 I:??[OBJECT, ARRAY]) \l0x000f: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) type: VIRTUAL call: java.lang.Boolean.booleanValue():boolean A[MD:():boolean (c)]\l0x0013: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2396)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0024 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|0x0016: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:2397)\l0x0017: INVOKE  (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]), (r4 I:int) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.bumpBackStackNesting(int):void A[MD:(int):void (m)]\l0x001a: ARITH  (r4 I:int) = (r8 I:int A[D('endIndex' int)]) + (\-1 int)  (LINE:2400)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x001f \l}"];
Node_26 [shape=record,label="{26\:\ 0x001f|0x001f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: INVOKE  \l  (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)])\l  (r3 I:boolean A[D('moveToState' boolean)])\l type: VIRTUAL call: androidx.fragment.app.BackStackRecord.executePopOps(boolean):void A[MD:(boolean):void (m)] (LINE:2401)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|LOOP_END\lLOOP:0: B:20:0x0001\-\>B:29:0x002a\l|0x002a: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:2393)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0024|0x0024: INVOKE  (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]), (r3 I:int) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.bumpBackStackNesting(int):void A[MD:(int):void (m)] (LINE:2403)\l0x0027: INVOKE  (r1 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.executeOps():void A[MD:():void (m)] (LINE:2404)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|RETURN\l|0x002d: RETURN    (LINE:2407)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static void androidx.fragment.app.FragmentManager.executeOps((r5 I:java.util.ArrayList\<androidx.fragment.app.BackStackRecord\> A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.ArrayList\<java.lang.Boolean\> A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('startIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('endIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x002a \-\> B:20:0x0001, CROSS_EDGE: B:24:0x001c \-\> B:27:0x0020, CROSS_EDGE: B:28:0x0024 \-\> B:29:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0020\-0x0023: r3 'moveToState' Z\l  0x0009\-0x002a: r1 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  0x0013\-0x002a: r2 'isPop' Z\l  0x0001\-0x002d: r0 'i' I\l  0x0000\-0x002d: r5 'records' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;\l  0x0000\-0x002d: r6 'isRecordPop' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;\l  \-1 \-0x002d: r7 'startIndex' I\l  \-1 \-0x002d: r8 'endIndex' I\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;II)V\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_33;
Node_33 -> Node_29;
Node_29 -> Node_20;
Node_28 -> Node_32;
Node_32 -> Node_29;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

