digraph "CFG forandroidx.fragment.app.FragmentManager.startPendingDeferredFragments()V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|java.util.Iterator r0 = r2.mFragmentStore.getActiveFragmentStateManagers().iterator()\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|LOOP_START\lLOOP:0: B:11:0x000a\-\>B:13:0x0010\l}"];
Node_12 [shape=record,label="{12\:\ 0x000e|if (r0.hasNext() == false) goto L5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|LOOP_END\lLOOP:0: B:11:0x000a\-\>B:13:0x0010\l|androidx.fragment.app.FragmentStateManager r1 = r0.next()\lperformPendingDeferredStart(r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.startPendingDeferredFragments((r2v0 'this' androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:13:0x0010 \-\> B:11:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_11;
Node_15 -> Node_14;
Node_14 -> Node_9;
}

