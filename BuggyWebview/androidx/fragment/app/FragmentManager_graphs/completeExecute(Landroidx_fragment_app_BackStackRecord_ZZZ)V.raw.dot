digraph "CFG forandroidx.fragment.app.FragmentManager.completeExecute(Landroidx\/fragment\/app\/BackStackRecord;ZZZ)V" {
Node_45 [shape=record,label="{45\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ 0x0000|0x0000: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPop' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0006  (LINE:2345)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0002|0x0002: INVOKE  \l  (r12 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)])\l  (r15 I:boolean A[D('moveToState' boolean)])\l type: VIRTUAL call: androidx.fragment.app.BackStackRecord.executePopOps(boolean):void A[MD:(boolean):void (m)] (LINE:2346)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2350)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x000f: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:2351)\l0x0011: INVOKE  (r2 I:java.util.ArrayList), (r1 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x0014: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r0 I:java.util.ArrayList A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)])\l  (r12 I:java.lang.Object A[D('record' androidx.fragment.app.BackStackRecord)])\l type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:2352)\l0x0018: INVOKE  (r2 I:java.lang.Boolean) = (r13 I:boolean A[D('isPop' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:2353)\l0x001c: INVOKE  (r10 I:java.util.ArrayList A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]), (r2 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x001f|0x001f: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('runTransitions' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0037  (LINE:2354)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0021|0x0021: IGET  (r2 I:int) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int \l}"];
Node_53 [shape=record,label="{53\:\ 0x0023|0x0023: IF  (r2 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:55:0x0037 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0025|0x0025: IGET  (r2 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:2355)\l0x0027: INVOKE  (r2 I:android.content.Context) = (r2 I:androidx.fragment.app.FragmentHostCallback) type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.getContext():android.content.Context A[MD:():android.content.Context (m)]\l0x002b: IGET  (r3 I:androidx.fragment.app.FragmentContainer) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mContainer androidx.fragment.app.FragmentContainer \l0x002d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002e: CONST  (r7 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002f: CONST  (r8 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0030: IGET  (r9 I:androidx.fragment.app.FragmentTransition$Callback) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentTransitionCallback androidx.fragment.app.FragmentTransition$Callback \l0x0032: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('records' java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>)]) \l0x0033: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY] A[D('isRecordPop' java.util.ArrayList\<java.lang.Boolean\>)]) \l0x0034: INVOKE  \l  (r2 I:android.content.Context)\l  (r3 I:androidx.fragment.app.FragmentContainer)\l  (r4 I:java.util.ArrayList)\l  (r5 I:java.util.ArrayList)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:boolean)\l  (r9 I:androidx.fragment.app.FragmentTransition$Callback)\l type: STATIC call: androidx.fragment.app.FragmentTransition.startTransitions(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList, java.util.ArrayList, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void A[MD:(android.content.Context, androidx.fragment.app.FragmentContainer, java.util.ArrayList\<androidx.fragment.app.BackStackRecord\>, java.util.ArrayList\<java.lang.Boolean\>, int, int, boolean, androidx.fragment.app.FragmentTransition$Callback):void (m)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0037|0x0037: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('moveToState' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x003e  (LINE:2359)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0039|0x0039: IGET  (r2 I:int) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mCurState int  (LINE:2360)\l0x003b: INVOKE  (r11 I:androidx.fragment.app.FragmentManager), (r2 I:int), (r1 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.moveToState(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x003e|0x003e: IGET  (r1 I:androidx.fragment.app.FragmentStore) = (r11 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore  (LINE:2363)\l0x0040: INVOKE  (r1 I:java.util.List) = (r1 I:androidx.fragment.app.FragmentStore) type: VIRTUAL call: androidx.fragment.app.FragmentStore.getActiveFragments():java.util.List A[MD:():java.util.List\<androidx.fragment.app.Fragment\> (m)]\l0x0044: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) type: INTERFACE call: java.util.List.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0048|LOOP_START\lLOOP:0: B:58:0x0048\-\>B:83:0x0048\l|0x0048: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_59 [shape=record,label="{59\:\ 0x004c|0x004c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0081 \l}"];
Node_60 [shape=record,label="{60\:\ 0x004e|0x004e: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0052: CHECK_CAST (r2 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0054|0x0054: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0048  (LINE:2366)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0056|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0056|0x0056: IGET  (r3 I:android.view.View) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mView android.view.View  (LINE:2367)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0058|0x0058: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x0048 \l}"];
Node_78 [shape=record,label="{78\:\ 0x005a|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x005a|0x005a: IGET  (r3 I:boolean) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mIsNewlyAdded boolean \l}"];
Node_65 [shape=record,label="{65\:\ 0x005c|0x005c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x0048 \l}"];
Node_79 [shape=record,label="{79\:\ 0x005e|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x005e|0x005e: IGET  (r3 I:int) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mContainerId int \l0x0060: INVOKE  (r3 I:boolean) = (r12 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]), (r3 I:int) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.interactsWith(int):boolean A[MD:(int):boolean (m)] (LINE:2368)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0064|0x0064: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:87:0x0048 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0066|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0066|0x0066: IGET  (r3 I:float) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mPostponedAlpha float  (LINE:2369)\l0x0068: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0069: CMP_L  (r3 I:int) = (r3 I:float), (r4 I:float) \l}"];
Node_69 [shape=record,label="{69\:\ 0x006b|0x006b: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:71:0x0074 \l}"];
Node_70 [shape=record,label="{70\:\ 0x006d|0x006d: IGET  (r3 I:android.view.View) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mView android.view.View  (LINE:2370)\l0x006f: IGET  (r5 I:float) = (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mPostponedAlpha float \l0x0071: INVOKE  (r3 I:android.view.View), (r5 I:float) type: VIRTUAL call: android.view.View.setAlpha(float):void A[MD:(float):void (c)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x0074|0x0074: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('moveToState' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x0079  (LINE:2372)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0079|SYNTHETIC\l}"];
Node_73 [shape=record,label="{73\:\ 0x0079|0x0079: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1082130432(0xffffffffbf800000, float:\-1.0) ??[int, float, short, byte, char])  (LINE:2375)\l0x007b: IPUT  (r3 I:float), (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mPostponedAlpha float \l0x007d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2376)\l0x007e: IPUT  (r3 I:boolean), (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mIsNewlyAdded boolean \l}"];
Node_88 [shape=record,label="{88\:\ 0x0048|SYNTHETIC\l}"];
Node_83 [shape=record,label="{83\:\ 0x0048|LOOP_END\lSYNTHETIC\lLOOP:0: B:58:0x0048\-\>B:83:0x0048\l}"];
Node_82 [shape=record,label="{82\:\ 0x0076|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x0076|0x0076: IPUT  (r4 I:float), (r2 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mPostponedAlpha float  (LINE:2373)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0048|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0048|SYNTHETIC\l}"];
Node_86 [shape=record,label="{86\:\ 0x0048|SYNTHETIC\l}"];
Node_85 [shape=record,label="{85\:\ 0x0048|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x0048|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x0081|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0081|RETURN\l|0x0081: RETURN    (LINE:2381)\l}"];
Node_46 [shape=record,label="{46\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0006|0x0006: INVOKE  (r12 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord)]) type: VIRTUAL call: androidx.fragment.app.BackStackRecord.executeOps():void A[MD:():void (m)] (LINE:2348)\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.completeExecute((r11 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r12 I:androidx.fragment.app.BackStackRecord A[D('record' androidx.fragment.app.BackStackRecord), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[D('isPop' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[D('runTransitions' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean A[D('moveToState' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:72:0x0076 \-\> B:58:0x0048, BACK_EDGE: B:73:0x0079 \-\> B:58:0x0048, CROSS_EDGE: B:69:0x006b \-\> B:71:0x0074, BACK_EDGE: B:67:0x0064 \-\> B:58:0x0048, BACK_EDGE: B:65:0x005c \-\> B:58:0x0048, BACK_EDGE: B:63:0x0058 \-\> B:58:0x0048, BACK_EDGE: B:61:0x0054 \-\> B:58:0x0048, CROSS_EDGE: B:55:0x0037 \-\> B:57:0x003e, CROSS_EDGE: B:53:0x0023 \-\> B:55:0x0037, CROSS_EDGE: B:51:0x001f \-\> B:55:0x0037, CROSS_EDGE: B:49:0x0006 \-\> B:50:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0054\-0x0080: r2 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x000f\-0x0081: r0 'records' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/fragment\/app\/BackStackRecord;\>;\l  0x0015\-0x0081: r10 'isRecordPop' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/Boolean;\>;\l  \-1 \-0x0081: r12 'record' Landroidx\/fragment\/app\/BackStackRecord;\l  \-1 \-0x0081: r13 'isPop' Z\l  \-1 \-0x0081: r14 'runTransitions' Z\l  \-1 \-0x0081: r15 'moveToState' Z\l}"];
MethodNode -> Node_45;Node_45 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_55;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_77;
Node_60 -> Node_61;
Node_61 -> Node_76[style=dashed];
Node_61 -> Node_84;
Node_76 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_78[style=dashed];
Node_63 -> Node_85;
Node_78 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_79[style=dashed];
Node_65 -> Node_86;
Node_79 -> Node_66;
Node_66 -> Node_67;
Node_67 -> Node_80[style=dashed];
Node_67 -> Node_87;
Node_80 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_71;
Node_70 -> Node_71;
Node_71 -> Node_81;
Node_71 -> Node_82[style=dashed];
Node_81 -> Node_73;
Node_73 -> Node_88;
Node_88 -> Node_83;
Node_83 -> Node_58;
Node_82 -> Node_72;
Node_72 -> Node_89;
Node_89 -> Node_83;
Node_87 -> Node_83;
Node_86 -> Node_83;
Node_85 -> Node_83;
Node_84 -> Node_83;
Node_77 -> Node_75;
Node_75 -> Node_46;
Node_49 -> Node_50;
}

