digraph "CFG forandroidx.fragment.app.FragmentManager.dispatchStateChange(I)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:3126)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|TRY_ENTER\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:21:0x0002, B:23:0x0010, B:24:0x0018, B:26:0x001e), top: B:33:0x0002 \}\lCatch: all \-\> 0x002f\l|0x0002: IPUT  (r0 I:boolean), (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean A[Catch: all \-\> 0x002f, TRY_ENTER]\l0x0004: IGET  (r2 I:androidx.fragment.app.FragmentStore) = (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mFragmentStore androidx.fragment.app.FragmentStore A[Catch: all \-\> 0x002f] (LINE:3127)\l0x0006: INVOKE  (r2 I:androidx.fragment.app.FragmentStore), (r6 I:int A[D('nextState' int)]) type: VIRTUAL call: androidx.fragment.app.FragmentStore.dispatchStateChange(int):void A[Catch: all \-\> 0x002f, MD:(int):void (m)]\l0x0009: INVOKE  (r5 I:androidx.fragment.app.FragmentManager), (r6 I:int A[D('nextState' int)]), (r1 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.moveToState(int, boolean):void A[Catch: all \-\> 0x002f, MD:(int, boolean):void (m)] (LINE:3128)\l0x000c: SGET  (r2 I:boolean) =  androidx.fragment.app.FragmentManager.USE_STATE_MANAGER boolean A[Catch: all \-\> 0x002f] (LINE:3129)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0028 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|TryCatch #0 \{all \-\> 0x002f, blocks: (B:21:0x0002, B:23:0x0010, B:24:0x0018, B:26:0x001e), top: B:33:0x0002 \}\lCatch: all \-\> 0x002f\l|0x0010: INVOKE  (r2 I:java.util.Set) = (r5 I:androidx.fragment.app.FragmentManager) type: DIRECT call: androidx.fragment.app.FragmentManager.collectAllSpecialEffectsController():java.util.Set A[Catch: all \-\> 0x002f, MD:():java.util.Set\<androidx.fragment.app.SpecialEffectsController\> (m)] (LINE:3130)\l0x0014: INVOKE  (r3 I:java.util.Iterator) = (r2 I:java.util.Set A[D('controllers' java.util.Set\<androidx.fragment.app.SpecialEffectsController\>)]) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[Catch: all \-\> 0x002f, MD:():java.util.Iterator\<E\> (c)] (LINE:3131)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|LOOP_START\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:21:0x0002, B:23:0x0010, B:24:0x0018, B:26:0x001e), top: B:33:0x0002 \}\lLOOP:0: B:24:0x0018\-\>B:26:0x001e\lCatch: all \-\> 0x002f\l|0x0018: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: all \-\> 0x002f, MD:():boolean (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0028 \l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|TRY_LEAVE\lLOOP_END\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:21:0x0002, B:23:0x0010, B:24:0x0018, B:26:0x001e), top: B:33:0x0002 \}\lLOOP:0: B:24:0x0018\-\>B:26:0x001e\lCatch: all \-\> 0x002f\l|0x001e: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x002f, MD:():E (c)]\l0x0022: CHECK_CAST (r4 I:androidx.fragment.app.SpecialEffectsController) = (androidx.fragment.app.SpecialEffectsController) (r4 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x002f]\l0x0024: INVOKE  (r4 I:androidx.fragment.app.SpecialEffectsController A[D('controller' androidx.fragment.app.SpecialEffectsController)]) type: VIRTUAL call: androidx.fragment.app.SpecialEffectsController.forceCompleteAllOperations():void A[Catch: all \-\> 0x002f, MD:():void (m), TRY_LEAVE] (LINE:3132)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x0028|0x0028: IPUT  (r1 I:boolean), (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean  (LINE:3136)\l0x002b: INVOKE  (r5 I:androidx.fragment.app.FragmentManager), (r0 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.execPendingActions(boolean):boolean A[MD:(boolean):boolean (m)] (LINE:3138)\l}"];
Node_29 [shape=record,label="{29\:\ 0x002e|RETURN\l|0x002e: RETURN    (LINE:3139)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x002f|ExcHandler: all \-\> 0x002f\l|0x002f: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x002f] (LINE:3136)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|0x0030: IPUT  (r1 I:boolean), (r5 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mExecutingActions boolean \l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable)  (LINE:3137)\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.dispatchStateChange((r5 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('nextState' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x001e \-\> B:24:0x0018, CROSS_EDGE: B:32:0x0032 \-\> B:19:?, CROSS_EDGE: B:22:0x000e \-\> B:28:0x0028, CROSS_EDGE: B:33:0x0002 \-\> B:30:0x002f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0027: r4 'controller' Landroidx\/fragment\/app\/SpecialEffectsController;\l  0x0014\-0x0028: r2 'controllers' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Landroidx\/fragment\/app\/SpecialEffectsController;\>;\l  \-1 \-0x0032: r6 'nextState' I\lTryCatch #0 \{all \-\> 0x002f, blocks: (B:21:0x0002, B:23:0x0010, B:24:0x0018, B:26:0x001e), top: B:33:0x0002 \}\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_33;
Node_33 -> Node_21;
Node_33 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_34;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_26 -> Node_24;
Node_35 -> Node_28;
Node_34 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_19;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_19;
}

