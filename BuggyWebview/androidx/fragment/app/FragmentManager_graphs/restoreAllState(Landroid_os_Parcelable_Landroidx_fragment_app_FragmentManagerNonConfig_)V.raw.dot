digraph "CFG forandroidx.fragment.app.FragmentManager.restoreAllState(Landroid\/os\/Parcelable;Landroidx\/fragment\/app\/FragmentManagerNonConfig;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:2697)\l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.lifecycle.ViewModelStoreOwner \l}"];
Node_10 [shape=record,label="{10\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0010 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:2698)\l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"You must use restoreSaveState when your FragmentHostCallback implements ViewModelStoreOwner\" \l0x000a: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l0x000d: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r0 I:java.lang.RuntimeException) type: DIRECT call: androidx.fragment.app.FragmentManager.throwException(java.lang.RuntimeException):void A[MD:(java.lang.RuntimeException):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|0x0010: IGET  (r0 I:androidx.fragment.app.FragmentManagerViewModel) = (r2 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mNonConfig androidx.fragment.app.FragmentManagerViewModel  (LINE:2701)\l0x0012: INVOKE  \l  (r0 I:androidx.fragment.app.FragmentManagerViewModel)\l  (r4 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig)])\l type: VIRTUAL call: androidx.fragment.app.FragmentManagerViewModel.restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig):void A[MD:(androidx.fragment.app.FragmentManagerNonConfig):void (m)]\l0x0015: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r3 I:android.os.Parcelable A[D('state' android.os.Parcelable)]) type: VIRTUAL call: androidx.fragment.app.FragmentManager.restoreSaveState(android.os.Parcelable):void A[MD:(android.os.Parcelable):void (m)] (LINE:2702)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|RETURN\l|0x0018: RETURN    (LINE:2703)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.restoreAllState((r2 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r3 I:android.os.Parcelable A[D('state' android.os.Parcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.fragment.app.FragmentManagerNonConfig A[D('nonConfig' androidx.fragment.app.FragmentManagerNonConfig), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0004 \-\> B:12:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r3 'state' Landroid\/os\/Parcelable;\l  \-1 \-0x0018: r4 'nonConfig' Landroidx\/fragment\/app\/FragmentManagerNonConfig;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

