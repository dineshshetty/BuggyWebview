digraph "CFG forandroidx.fragment.app.FragmentManager.popBackStack(Ljava\/lang\/String;I)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) =  androidx.fragment.app.FragmentManager$PopBackStackState  (LINE:709)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0003: INVOKE  \l  (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState)\l  (r2 I:androidx.fragment.app.FragmentManager)\l  (r3 I:java.lang.String A[D('name' java.lang.String)])\l  (r1 I:int)\l  (r4 I:int A[D('flags' int)])\l type: DIRECT call: androidx.fragment.app.FragmentManager.PopBackStackState.\<init\>(androidx.fragment.app.FragmentManager, java.lang.String, int, int):void A[MD:(androidx.fragment.app.FragmentManager, java.lang.String, int, int):void (m)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0007: INVOKE  (r2 I:androidx.fragment.app.FragmentManager), (r0 I:androidx.fragment.app.FragmentManager$OpGenerator), (r1 I:boolean) type: VIRTUAL call: androidx.fragment.app.FragmentManager.enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator, boolean):void A[MD:(androidx.fragment.app.FragmentManager$OpGenerator, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:710)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentManager.popBackStack((r2 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000a: r3 'name' Ljava\/lang\/String;\l  \-1 \-0x000a: r4 'flags' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

