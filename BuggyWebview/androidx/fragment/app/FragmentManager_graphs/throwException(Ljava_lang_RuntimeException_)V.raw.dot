digraph "CFG forandroidx.fragment.app.FragmentManager.throwException(Ljava\/lang\/RuntimeException;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r9 I:java.lang.RuntimeException A[D('ex' java.lang.RuntimeException)]) type: VIRTUAL call: java.lang.RuntimeException.getMessage():java.lang.String A[MD:():java.lang.String (s)] (LINE:529)\l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"FragmentManager\" \l0x0006: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"Activity state:\"  (LINE:530)\l0x000b: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l0x000e: NEW_INSTANCE  (r0 I:androidx.fragment.app.LogWriter) =  androidx.fragment.app.LogWriter  (LINE:531)\l0x0010: INVOKE  (r0 I:androidx.fragment.app.LogWriter), (r1 I:java.lang.String) type: DIRECT call: androidx.fragment.app.LogWriter.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (m)]\l0x0013: NEW_INSTANCE  (r2 I:java.io.PrintWriter) =  java.io.PrintWriter  (LINE:532)\l0x0015: INVOKE  (r2 I:java.io.PrintWriter), (r0 I:java.io.Writer A[D('logw' androidx.fragment.app.LogWriter)]) type: DIRECT call: java.io.PrintWriter.\<init\>(java.io.Writer):void A[MD:(java.io.Writer):void (c)]\l0x0018: IGET  (r3 I:androidx.fragment.app.FragmentHostCallback\<?\>) = (r8 I:androidx.fragment.app.FragmentManager) androidx.fragment.app.FragmentManager.mHost androidx.fragment.app.FragmentHostCallback  (LINE:533)\l0x001a: CONST_STR  (r4 I:java.lang.String) =  \"Failed dumping state\" \l0x001c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: CONST_STR  (r7 I:java.lang.String) =  \"  \" \l}"];
Node_21 [shape=record,label="{21\:\ 0x0020|0x0020: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x002d \l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0022|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{Exception \-\> 0x0028, blocks: (B:22:0x0022), top: B:32:0x0022 \}\lCatch: Exception \-\> 0x0028\l|0x0022: NEW_ARRAY  (r5 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch: Exception \-\> 0x0028, TRY_ENTER] (LINE:535)\l0x0024: INVOKE  \l  (r3 I:androidx.fragment.app.FragmentHostCallback)\l  (r7 I:java.lang.String)\l  (r6 I:java.io.FileDescriptor)\l  (r2 I:java.io.PrintWriter A[D('pw' java.io.PrintWriter)])\l  (r5 I:java.lang.String[])\l type: VIRTUAL call: androidx.fragment.app.FragmentHostCallback.onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void A[Catch: Exception \-\> 0x0028, MD:(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void (m), TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0037|0x0037: THROW  (r9 I:java.lang.Throwable A[D('ex' java.lang.RuntimeException)])  (LINE:546)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|ExcHandler: Exception \-\> 0x0028\l|0x0028: MOVE_EXCEPTION  (r3 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0028] (LINE:536)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|0x0029: INVOKE  (r1 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:537)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{Exception \-\> 0x0033, blocks: (B:27:0x002d), top: B:34:0x002d \}\lCatch: Exception \-\> 0x0033\l|0x002d: NEW_ARRAY  (r3 I:java.lang.String[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch: Exception \-\> 0x0033, TRY_ENTER] (LINE:541)\l0x002f: INVOKE  \l  (r8 I:androidx.fragment.app.FragmentManager)\l  (r7 I:java.lang.String)\l  (r6 I:java.io.FileDescriptor)\l  (r2 I:java.io.PrintWriter A[D('pw' java.io.PrintWriter)])\l  (r3 I:java.lang.String[])\l type: VIRTUAL call: androidx.fragment.app.FragmentManager.dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void A[Catch: Exception \-\> 0x0033, MD:(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void (m), TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0033|ExcHandler: Exception \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r3 I:java.lang.Exception A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: Exception \-\> 0x0033] (LINE:542)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0034|0x0034: INVOKE  (r1 I:java.lang.String), (r4 I:java.lang.String), (r3 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int A[MD:(java.lang.String, java.lang.String, java.lang.Throwable):int (c)] (LINE:543)\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.FragmentManager.throwException((r8 'this' I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.RuntimeException A[D('ex' java.lang.RuntimeException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0029 \-\> B:31:0x0037, CROSS_EDGE: B:32:0x0022 \-\> B:24:0x0028, CROSS_EDGE: B:27:0x002d \-\> B:31:0x0037, CROSS_EDGE: B:30:0x0034 \-\> B:31:0x0037, CROSS_EDGE: B:34:0x002d \-\> B:29:0x0033\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x002c: r3 'e' Ljava\/lang\/Exception;\l  0x0034\-0x0037: r3 'e' Ljava\/lang\/Exception;\l  0x0013\-0x0037: r0 'logw' Landroidx\/fragment\/app\/LogWriter;\l  0x0018\-0x0037: r2 'pw' Ljava\/io\/PrintWriter;\l  \-1 \-0x0037: r9 'ex' Ljava\/lang\/RuntimeException;\lTryCatch #0 \{Exception \-\> 0x0028, blocks: (B:22:0x0022), top: B:32:0x0022 \}, TryCatch #1 \{Exception \-\> 0x0033, blocks: (B:27:0x002d), top: B:34:0x002d \}\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_32[style=dashed];
Node_21 -> Node_34;
Node_32 -> Node_22;
Node_32 -> Node_24;
Node_22 -> Node_31;
Node_22 -> Node_33;
Node_31 -> Node_19;
Node_33 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_31;
Node_34 -> Node_27;
Node_34 -> Node_29;
Node_27 -> Node_31;
Node_27 -> Node_35;
Node_35 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
}

