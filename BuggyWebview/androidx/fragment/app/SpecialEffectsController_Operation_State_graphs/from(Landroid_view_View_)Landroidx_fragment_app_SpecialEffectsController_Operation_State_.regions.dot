digraph "CFG forandroidx.fragment.app.SpecialEffectsController.Operation.State.from(Landroid\/view\/View;)Landroidx\/fragment\/app\/SpecialEffectsController$Operation$State;" {
subgraph cluster_Region_1633034190 {
label = "R(1:(2:(1:6)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1569705377 {
label = "R(2:(1:6)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1997825360 {
label = "IF [B:13:0x0007, B:15:0x000d] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0007|if (r2.getAlpha() == 0.0f) goto L3\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|ADDED_TO_REGION\l|if (r2.getVisibility() == 0) goto L5\l}"];
subgraph cluster_Region_1500308183 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0011|RETURN\l|return androidx.fragment.app.SpecialEffectsController.Operation.State.INVISIBLE\l}"];
}
}
subgraph cluster_Region_143998555 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001a|RETURN\l|return from(r2.getVisibility())\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0009}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000f}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0012}"];
MethodNode[shape=record,label="{public static androidx.fragment.app.SpecialEffectsController$Operation$State androidx.fragment.app.SpecialEffectsController.Operation.State.from((r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001a \-\> B:11:?, CROSS_EDGE: B:13:0x0007 \-\> B:18:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

