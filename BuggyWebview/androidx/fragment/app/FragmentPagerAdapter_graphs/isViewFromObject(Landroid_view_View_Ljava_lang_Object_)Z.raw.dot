digraph "CFG forandroidx.fragment.app.FragmentPagerAdapter.isViewFromObject(Landroid\/view\/View;Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('object' java.lang.Object)])  (LINE:260)\l0x0001: CHECK_CAST (r0 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r0 I:??[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:android.view.View) = (r0 I:androidx.fragment.app.Fragment) type: VIRTUAL call: androidx.fragment.app.Fragment.getView():android.view.View A[MD:():android.view.View (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)])  \-\> B:5:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|SYNTHETIC\lRETURN\l|0x0009: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000c: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\lORIG_RETURN\l|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000c: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.fragment.app.FragmentPagerAdapter.isViewFromObject((r1 'this' I:androidx.fragment.app.FragmentPagerAdapter A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000b \-\> B:6:0x000c\lDebug Info:\l  \-1 \-0x000c: r2 'view' Landroid\/view\/View;\l  \-1 \-0x000c: r3 'object' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [androidx.viewpager.widget.PagerAdapter.isViewFromObject(android.view.View, java.lang.Object):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

