digraph "CFG forandroidx.fragment.app.FragmentActivity.markState(Landroidx\/fragment\/app\/FragmentManager;Landroidx\/lifecycle\/Lifecycle$State;)Z" {
subgraph cluster_Region_1997072903 {
label = "R(3:1|(2:4|(3:(1:9)|(1:14)|(1:18)(0))(0))|24)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|boolean r0 = false\ljava.util.List java.util.Collection\<androidx.fragment.app.Fragment\> r1 = r6.getFragments()\ljava.util.Iterator r2 = r1.iterator()\l\l}"];
subgraph cluster_LoopRegion_1494931783 {
label = "LOOP:0: (2:4|(3:(1:9)|(1:14)|(1:18)(0))(0))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|androidx.fragment.app.Fragment \lif (r2.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_1610830876 {
label = "R(2:4|(3:(1:9)|(1:14)|(1:18)(0))(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|androidx.fragment.app.Fragment r3 = r2.next()\l}"];
subgraph cluster_IfRegion_588649853 {
label = "IF [B:6:0x0015] THEN: R(3:(1:9)|(1:14)|(1:18)(0)) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r3 != null) goto L6\l}"];
subgraph cluster_Region_833440855 {
label = "R(3:(1:9)|(1:14)|(1:18)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1056074692 {
label = "IF [B:9:0x001c] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r3.getHost() != null) goto L9\l}"];
subgraph cluster_Region_144296579 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentManager r4 = r3.getChildFragmentManager()\lr0 \|= markState(r4, r7)\l}"];
}
}
subgraph cluster_IfRegion_1143700402 {
label = "IF [B:12:0x0029, B:14:0x003b] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|if (r3.mViewLifecycleOwner != null) goto L12\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|ADDED_TO_REGION\l|if (r3.mViewLifecycleOwner.getLifecycle().getCurrentState().isAtLeast(androidx.lifecycle.Lifecycle.State.STARTED) != false) goto L14\l}"];
subgraph cluster_Region_1491429015 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003d|r3.mViewLifecycleOwner.setCurrentState(r7)\lr0 = true\l}"];
}
}
subgraph cluster_IfRegion_1468347319 {
label = "IF [B:17:0x004f] THEN: R(1:18) ELSE: R(0)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004f|if (r3.mLifecycleRegistry.getCurrentState().isAtLeast(androidx.lifecycle.Lifecycle.State.STARTED) != false) goto L17\l}"];
subgraph cluster_Region_152580419 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0051|r3.mLifecycleRegistry.setCurrentState(r7)\lr0 = true\l}"];
}
subgraph cluster_Region_210830052 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_563148025 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0058|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009|LOOP_START\lLOOP:0: B:3:0x0009\-\>B:24:0x0009\lPHI: r0 \l  PHI: (r0v1 'hadNotMarked' boolean) = (r0v0 'hadNotMarked' boolean), (r0v2 'hadNotMarked' boolean) binds: [B:2:0x0000, B:24:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0027|PHI: r0 \l  PHI: (r0v3 'hadNotMarked' boolean) = (r0v1 'hadNotMarked' boolean), (r0v7 'hadNotMarked' boolean) binds: [B:9:0x001c, B:10:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002b}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0043|PHI: r0 \l  PHI: (r0v4 'hadNotMarked' boolean) = (r0v3 'hadNotMarked' boolean), (r0v3 'hadNotMarked' boolean), (r0v6 'hadNotMarked' boolean) binds: [B:12:0x0029, B:14:0x003b, B:15:0x003d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0051|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0009|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0009\-\>B:24:0x0009\lPHI: r0 \l  PHI: (r0v2 'hadNotMarked' boolean) = (r0v1 'hadNotMarked' boolean), (r0v4 'hadNotMarked' boolean), (r0v5 'hadNotMarked' boolean) binds: [B:25:0x0009, B:26:0x0009, B:27:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0009|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0009|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0058|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static boolean androidx.fragment.app.FragmentActivity.markState((r6v0 'manager' androidx.fragment.app.FragmentManager A[D('manager' androidx.fragment.app.FragmentManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'state' androidx.lifecycle.Lifecycle$State A[D('state' androidx.lifecycle.Lifecycle$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0051 \-\> B:3:0x0009, BACK_EDGE: B:17:0x004f \-\> B:3:0x0009, CROSS_EDGE: B:14:0x003b \-\> B:16:0x0043, CROSS_EDGE: B:12:0x0029 \-\> B:16:0x0043, CROSS_EDGE: B:9:0x001c \-\> B:11:0x0027, BACK_EDGE: B:6:0x0015 \-\> B:3:0x0009\lTYPE_VARS: EMPTY\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_22[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_21;
Node_6 -> Node_25[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_23;
Node_17 -> Node_26[style=dashed];
Node_18 -> Node_27;
Node_20 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_21 -> Node_8;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_23 -> Node_18;
Node_27 -> Node_24;
Node_24 -> Node_3;
Node_26 -> Node_24;
Node_25 -> Node_24;
Node_22 -> Node_20;
}

