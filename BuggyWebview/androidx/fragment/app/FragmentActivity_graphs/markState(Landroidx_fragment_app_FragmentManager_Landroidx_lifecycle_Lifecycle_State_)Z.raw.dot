digraph "CFG forandroidx.fragment.app.FragmentActivity.markState(Landroidx\/fragment\/app\/FragmentManager;Landroidx\/lifecycle\/Lifecycle$State;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:828)\l0x0001: INVOKE  (r1 I:java.util.List) = (r6 I:androidx.fragment.app.FragmentManager A[D('manager' androidx.fragment.app.FragmentManager)]) type: VIRTUAL call: androidx.fragment.app.FragmentManager.getFragments():java.util.List A[MD:():java.util.List\<androidx.fragment.app.Fragment\> (m)] (LINE:829)\l0x0005: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.Collection A[D('fragments' java.util.Collection\<androidx.fragment.app.Fragment\>)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:830)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_START\lLOOP:0: B:3:0x0009\-\>B:24:0x0009\l|0x0009: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0058 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0013: CHECK_CAST (r3 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0018  (LINE:831)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r4 I:java.lang.Object) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) type: VIRTUAL call: androidx.fragment.app.Fragment.getHost():java.lang.Object A[MD:():java.lang.Object (m)] (LINE:834)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  (r4 I:androidx.fragment.app.FragmentManager) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) type: VIRTUAL call: androidx.fragment.app.Fragment.getChildFragmentManager():androidx.fragment.app.FragmentManager A[MD:():androidx.fragment.app.FragmentManager (m)] (LINE:835)\l0x0022: INVOKE  (r5 I:boolean) = \l  (r4 I:androidx.fragment.app.FragmentManager A[D('childFragmentManager' androidx.fragment.app.FragmentManager)])\l  (r7 I:androidx.lifecycle.Lifecycle$State A[D('state' androidx.lifecycle.Lifecycle$State)])\l type: STATIC call: androidx.fragment.app.FragmentActivity.markState(androidx.fragment.app.FragmentManager, androidx.lifecycle.Lifecycle$State):boolean A[MD:(androidx.fragment.app.FragmentManager, androidx.lifecycle.Lifecycle$State):boolean (m)] (LINE:836)\l0x0026: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('hadNotMarked' boolean)]) \| (r5 I:??[int, boolean, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IGET  (r4 I:androidx.fragment.app.FragmentViewLifecycleOwner A[D('childFragmentManager' androidx.fragment.app.FragmentManager)]) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mViewLifecycleOwner androidx.fragment.app.FragmentViewLifecycleOwner  (LINE:838)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0043 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IGET  (r4 I:androidx.fragment.app.FragmentViewLifecycleOwner) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mViewLifecycleOwner androidx.fragment.app.FragmentViewLifecycleOwner \l0x002d: INVOKE  (r4 I:androidx.lifecycle.Lifecycle) = (r4 I:androidx.fragment.app.FragmentViewLifecycleOwner) type: VIRTUAL call: androidx.fragment.app.FragmentViewLifecycleOwner.getLifecycle():androidx.lifecycle.Lifecycle A[MD:():androidx.lifecycle.Lifecycle (m)] (LINE:839)\l0x0031: INVOKE  (r4 I:androidx.lifecycle.Lifecycle$State) = (r4 I:androidx.lifecycle.Lifecycle) type: VIRTUAL call: androidx.lifecycle.Lifecycle.getCurrentState():androidx.lifecycle.Lifecycle$State A[MD:():androidx.lifecycle.Lifecycle$State (m)]\l0x0035: SGET  (r5 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.STARTED androidx.lifecycle.Lifecycle$State \l0x0037: INVOKE  (r4 I:boolean) = (r4 I:androidx.lifecycle.Lifecycle$State), (r5 I:androidx.lifecycle.Lifecycle$State) type: VIRTUAL call: androidx.lifecycle.Lifecycle.State.isAtLeast(androidx.lifecycle.Lifecycle$State):boolean A[MD:(androidx.lifecycle.Lifecycle$State):boolean (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0043 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IGET  (r4 I:androidx.fragment.app.FragmentViewLifecycleOwner) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mViewLifecycleOwner androidx.fragment.app.FragmentViewLifecycleOwner  (LINE:840)\l0x003f: INVOKE  \l  (r4 I:androidx.fragment.app.FragmentViewLifecycleOwner)\l  (r7 I:androidx.lifecycle.Lifecycle$State A[D('state' androidx.lifecycle.Lifecycle$State)])\l type: VIRTUAL call: androidx.fragment.app.FragmentViewLifecycleOwner.setCurrentState(androidx.lifecycle.Lifecycle$State):void A[MD:(androidx.lifecycle.Lifecycle$State):void (m)]\l0x0042: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hadNotMarked' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:841)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: IGET  (r4 I:androidx.lifecycle.LifecycleRegistry) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mLifecycleRegistry androidx.lifecycle.LifecycleRegistry  (LINE:843)\l0x0045: INVOKE  (r4 I:androidx.lifecycle.Lifecycle$State) = (r4 I:androidx.lifecycle.LifecycleRegistry) type: VIRTUAL call: androidx.lifecycle.LifecycleRegistry.getCurrentState():androidx.lifecycle.Lifecycle$State A[MD:():androidx.lifecycle.Lifecycle$State (m)]\l0x0049: SGET  (r5 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.STARTED androidx.lifecycle.Lifecycle$State \l0x004b: INVOKE  (r4 I:boolean) = (r4 I:androidx.lifecycle.Lifecycle$State), (r5 I:androidx.lifecycle.Lifecycle$State) type: VIRTUAL call: androidx.lifecycle.Lifecycle.State.isAtLeast(androidx.lifecycle.Lifecycle$State):boolean A[MD:(androidx.lifecycle.Lifecycle$State):boolean (m)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|0x004f: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0009 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: IGET  (r4 I:androidx.lifecycle.LifecycleRegistry) = (r3 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mLifecycleRegistry androidx.lifecycle.LifecycleRegistry  (LINE:844)\l0x0053: INVOKE  \l  (r4 I:androidx.lifecycle.LifecycleRegistry)\l  (r7 I:androidx.lifecycle.Lifecycle$State A[D('state' androidx.lifecycle.Lifecycle$State)])\l type: VIRTUAL call: androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):void A[MD:(androidx.lifecycle.Lifecycle$State):void (m)]\l0x0056: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('hadNotMarked' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:845)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0009\-\>B:24:0x0009\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|RETURN\l|0x0058: RETURN  (r0 I:boolean A[D('hadNotMarked' boolean)])  (LINE:848)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static boolean androidx.fragment.app.FragmentActivity.markState((r6 I:androidx.fragment.app.FragmentManager A[D('manager' androidx.fragment.app.FragmentManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.lifecycle.Lifecycle$State A[D('state' androidx.lifecycle.Lifecycle$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:18:0x0051 \-\> B:3:0x0009, BACK_EDGE: B:17:0x004f \-\> B:3:0x0009, CROSS_EDGE: B:14:0x003b \-\> B:16:0x0043, CROSS_EDGE: B:12:0x0029 \-\> B:16:0x0043, CROSS_EDGE: B:9:0x001c \-\> B:11:0x0027, BACK_EDGE: B:6:0x0015 \-\> B:3:0x0009\lDebug Info:\l  0x0022\-0x0027: r4 'childFragmentManager' Landroidx\/fragment\/app\/FragmentManager;\l  0x0015\-0x0057: r3 'fragment' Landroidx\/fragment\/app\/Fragment;\l  0x0001\-0x0058: r0 'hadNotMarked' Z\l  0x0005\-0x0058: r1 'fragments' Ljava\/util\/Collection;, signature: Ljava\/util\/Collection\<Landroidx\/fragment\/app\/Fragment;\>;\l  \-1 \-0x0058: r6 'manager' Landroidx\/fragment\/app\/FragmentManager;\l  \-1 \-0x0058: r7 'state' Landroidx\/lifecycle\/Lifecycle$State;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_22;
Node_5 -> Node_6;
Node_6 -> Node_21;
Node_6 -> Node_25[style=dashed];
Node_21 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_23[style=dashed];
Node_17 -> Node_26;
Node_23 -> Node_18;
Node_18 -> Node_27;
Node_27 -> Node_24;
Node_24 -> Node_3;
Node_26 -> Node_24;
Node_25 -> Node_24;
Node_22 -> Node_20;
Node_20 -> Node_1;
}

