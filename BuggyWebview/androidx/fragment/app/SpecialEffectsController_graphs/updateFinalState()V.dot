digraph "CFG forandroidx.fragment.app.SpecialEffectsController.updateFinalState()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|java.util.Iterator r0 = r6.mPendingOperations.iterator()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|LOOP_START\lLOOP:0: B:18:0x0006\-\>B:27:0x0006\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r0.hasNext() == false) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|androidx.fragment.app.SpecialEffectsController$Operation r1 = r0.next()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|if (r1.getLifecycleImpact() != androidx.fragment.app.SpecialEffectsController.Operation.LifecycleImpact.ADDING) goto L10\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|androidx.fragment.app.Fragment r2 = r1.getFragment()\landroid.view.View r3 = r2.requireView()\landroidx.fragment.app.SpecialEffectsController$Operation$State r4 = androidx.fragment.app.SpecialEffectsController.Operation.State.from(r3.getVisibility())\lr1.mergeWith(r4, androidx.fragment.app.SpecialEffectsController.Operation.LifecycleImpact.NONE)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:18:0x0006\-\>B:27:0x0006\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.fragment.app.SpecialEffectsController.updateFinalState((r6v0 'this' androidx.fragment.app.SpecialEffectsController A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:22:0x001a \-\> B:18:0x0006, BACK_EDGE: B:21:0x0018 \-\> B:18:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_25[style=dashed];
Node_21 -> Node_28;
Node_25 -> Node_22;
Node_22 -> Node_29;
Node_29 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_27;
Node_26 -> Node_24;
Node_24 -> Node_16;
}

