digraph "CFG forandroidx.fragment.app.SpecialEffectsController.findRunningOperation(Landroidx\/fragment\/app\/Fragment;)Landroidx\/fragment\/app\/SpecialEffectsController$Operation;" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|java.util.Iterator r0 = r3.mRunningOperations.iterator()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|LOOP_START\lLOOP:0: B:22:0x0006\-\>B:35:0x0006\l}"];
Node_23 [shape=record,label="{23\:\ 0x000a|if (r0.hasNext() == false) goto L15\l}"];
Node_24 [shape=record,label="{24\:\ 0x000c|androidx.fragment.app.SpecialEffectsController$Operation r1 = r0.next()\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|if (r1.getFragment().equals(r4) == false) goto L14\l}"];
Node_32 [shape=record,label="{32\:\ 0x001c|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001c}"];
Node_27 [shape=record,label="{27\:\ 0x0020|if (r1.isCanceled() != false) goto L12\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|RETURN\l|return r1\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0006|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:22:0x0006\-\>B:35:0x0006\l}"];
Node_36 [shape=record,label="{36\:\ 0x0006|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0024|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private androidx.fragment.app.SpecialEffectsController$Operation androidx.fragment.app.SpecialEffectsController.findRunningOperation((r3v0 'this' androidx.fragment.app.SpecialEffectsController A[IMMUTABLE_TYPE, THIS]), (r4v0 'fragment' androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x0020 \-\> B:22:0x0006, BACK_EDGE: B:25:0x001a \-\> B:22:0x0006, CROSS_EDGE: B:31:0x0025 \-\> B:20:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_33;
Node_24 -> Node_25;
Node_25 -> Node_32[style=dashed];
Node_25 -> Node_36;
Node_32 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_34[style=dashed];
Node_27 -> Node_37;
Node_34 -> Node_28;
Node_28 -> Node_20;
Node_37 -> Node_35;
Node_35 -> Node_22;
Node_36 -> Node_35;
Node_33 -> Node_30;
Node_30 -> Node_20;
}

