digraph "CFG forandroidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment(Landroidx\/fragment\/app\/Fragment;Landroid\/content\/Intent;ILandroid\/os\/Bundle;)V" {
subgraph cluster_Region_2146276433 {
label = "R(1:(2:(1:7)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_2010693820 {
label = "R(2:(1:7)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1338991218 {
label = "IF [B:11:0x0001] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0001|if (r5 != (\-1)) goto L6\l}"];
subgraph cluster_Region_1160902212 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0010|throw new java.lang.IllegalStateException(\"Starting activity with a requestCode requires a FragmentActivity host\")\l}"];
}
}
subgraph cluster_Region_1458417071 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0003|androidx.core.content.ContextCompat.startActivity(r2.mContext, r4, r6)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0008}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0009}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentHostCallback.onStartActivityFromFragment((r2v0 'this' androidx.fragment.app.FragmentHostCallback\<E\> A[D('this' androidx.fragment.app.FragmentHostCallback\<E\>), IMMUTABLE_TYPE, THIS]), (r3v0 'fragment' androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'intent' android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'requestCode' int A[D('requestCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'options' android.os.Bundle A[D('options' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_15 -> Node_9;
Node_12 -> Node_13;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_13 -> Node_9;
Node_14 -> Node_15;
}

