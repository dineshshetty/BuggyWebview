digraph "CFG forandroidx.fragment.app.FragmentManager.PopBackStackState.\<init\>(Landroidx\/fragment\/app\/FragmentManager;Ljava\/lang\/String;II)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IPUT  (r1 I:androidx.fragment.app.FragmentManager), (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) androidx.fragment.app.FragmentManager.PopBackStackState.this$0 androidx.fragment.app.FragmentManager  (LINE:3519)\l0x0002: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)]\l0x0005: IPUT  (r2 I:java.lang.String A[D('name' java.lang.String)]), (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) androidx.fragment.app.FragmentManager.PopBackStackState.mName java.lang.String  (LINE:3520)\l0x0007: IPUT  (r3 I:int A[D('id' int)]), (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) androidx.fragment.app.FragmentManager.PopBackStackState.mId int  (LINE:3521)\l0x0009: IPUT  (r4 I:int A[D('flags' int)]), (r0 I:androidx.fragment.app.FragmentManager$PopBackStackState) androidx.fragment.app.FragmentManager.PopBackStackState.mFlags int  (LINE:3522)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:3523)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentManager.PopBackStackState.\<init\>((r0 'this' I:androidx.fragment.app.FragmentManager$PopBackStackState A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.fragment.app.FragmentManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'name' Ljava\/lang\/String;\l  \-1 \-0x000b: r3 'id' I\l  \-1 \-0x000b: r4 'flags' I\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

