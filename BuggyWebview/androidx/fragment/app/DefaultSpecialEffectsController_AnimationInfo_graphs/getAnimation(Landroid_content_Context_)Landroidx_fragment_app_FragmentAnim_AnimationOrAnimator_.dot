digraph "CFG forandroidx.fragment.app.DefaultSpecialEffectsController.AnimationInfo.getAnimation(Landroid\/content\/Context;)Landroidx\/fragment\/app\/FragmentAnim$AnimationOrAnimator;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r4.mLoadedAnim == false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004}"];
Node_5 [shape=record,label="{5\:\ 0x0006|RETURN\l|return r4.mAnimation\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|androidx.fragment.app.Fragment r0 = getOperation().getFragment()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (getOperation().getFinalState() != androidx.fragment.app.SpecialEffectsController.Operation.State.VISIBLE) goto L11\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|r1 = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|PHI: r1 \l  PHI: (r1v3 boolean) = (r1v2 boolean), (r1v4 boolean) binds: [B:9:0x001f, B:8:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|androidx.fragment.app.FragmentAnim$AnimationOrAnimator r0 = androidx.fragment.app.FragmentAnim.loadAnimation(r5, r0, r1, r4.mIsPop)\lr4.mAnimation = r0\lr4.mLoadedAnim = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|r1 = false\l}"];
MethodNode[shape=record,label="{androidx.fragment.app.FragmentAnim$AnimationOrAnimator androidx.fragment.app.DefaultSpecialEffectsController.AnimationInfo.getAnimation((r4v0 'this' androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo A[IMMUTABLE_TYPE, THIS]), (r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x002a \-\> B:1:?, CROSS_EDGE: B:9:0x001f \-\> B:10:0x0020\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_9 -> Node_10;
}

