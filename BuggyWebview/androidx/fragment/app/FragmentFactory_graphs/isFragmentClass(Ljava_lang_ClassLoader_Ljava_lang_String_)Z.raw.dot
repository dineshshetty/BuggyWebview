digraph "CFG forandroidx.fragment.app.FragmentFactory.isFragmentClass(Ljava\/lang\/ClassLoader;Ljava\/lang\/String;)Z" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{ClassNotFoundException \-\> 0x000b, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lCatch: ClassNotFoundException \-\> 0x000b\l|0x0000: INVOKE  (r0 I:java.lang.Class) = \l  (r2 I:java.lang.ClassLoader A[D('classLoader' java.lang.ClassLoader)])\l  (r3 I:java.lang.String A[D('className' java.lang.String)])\l type: STATIC call: androidx.fragment.app.FragmentFactory.loadClass(java.lang.ClassLoader, java.lang.String):java.lang.Class A[Catch: ClassNotFoundException \-\> 0x000b, MD:(java.lang.ClassLoader, java.lang.String):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (m), TRY_ENTER] (LINE:70)\l0x0004: CONST_CLASS  (r1 I:java.lang.Class\<androidx.fragment.app.Fragment\>) =  androidx.fragment.app.Fragment.class  (LINE:71)\l0x0006: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Class), (r0 I:java.lang.Class A[D('clazz' java.lang.Class\<?\>)]) type: VIRTUAL call: java.lang.Class.isAssignableFrom(java.lang.Class):boolean A[Catch: ClassNotFoundException \-\> 0x000b, MD:(java.lang.Class\<?\>):boolean (c), TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|RETURN\l|0x000a: RETURN  (r1 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|ExcHandler: ClassNotFoundException \-\> 0x000b\l|0x000b: MOVE_EXCEPTION  (r0 I:java.lang.ClassNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassNotFoundException \-\> 0x000b] (LINE:72)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|RETURN\l|0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:73)\l0x000d: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean androidx.fragment.app.FragmentFactory.isFragmentClass((r2 I:java.lang.ClassLoader A[D('classLoader' java.lang.ClassLoader), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('className' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:10:?, CROSS_EDGE: B:16:0x0000 \-\> B:13:0x000b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x000b: r0 'clazz' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x000c\-0x000d: r0 'e' Ljava\/lang\/ClassNotFoundException;\l  \-1 \-0x000d: r2 'classLoader' Ljava\/lang\/ClassLoader;\l  \-1 \-0x000d: r3 'className' Ljava\/lang\/String;\lTryCatch #0 \{ClassNotFoundException \-\> 0x000b, blocks: (B:11:0x0000), top: B:16:0x0000 \}\l}"];
MethodNode -> Node_9;Node_9 -> Node_16;
Node_16 -> Node_11;
Node_16 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_17;
Node_12 -> Node_10;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_10;
}

