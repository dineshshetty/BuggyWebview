digraph "CFG forandroidx.fragment.app.FragmentStateManager.destroyFragmentView()V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0005|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(3) == false) goto L4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"movefrom CREATE_VIEW: \")\lr0.append(r3.mFragment)\landroid.util.Log.d(androidx.fragment.app.FragmentStateManager.TAG, r0.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x001f}"];
Node_18 [shape=record,label="{18\:\ 0x0023|if (r3.mFragment.mContainer == null) goto L9\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025}"];
Node_20 [shape=record,label="{20\:\ 0x0029|if (r3.mFragment.mView == null) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|r3.mFragment.mContainer.removeView(r3.mFragment.mView)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|r3.mFragment.performDestroyView()\lr3.mDispatcher.dispatchOnFragmentViewDestroyed(r3.mFragment, false)\lr3.mFragment.mContainer = null\lr3.mFragment.mView = null\lr3.mFragment.mViewLifecycleOwner = null\lr3.mFragment.mViewLifecycleOwnerLiveData.setValue(null)\lr3.mFragment.mInLayout = false\l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentStateManager.destroyFragmentView((r3v0 'this' androidx.fragment.app.FragmentStateManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0029 \-\> B:22:0x0036, CROSS_EDGE: B:18:0x0023 \-\> B:22:0x0036, CROSS_EDGE: B:15:0x0005 \-\> B:17:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

