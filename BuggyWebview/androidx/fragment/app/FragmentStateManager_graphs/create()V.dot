digraph "CFG forandroidx.fragment.app.FragmentStateManager.create()V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000}"];
Node_14 [shape=record,label="{14\:\ 0x0005|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(3) == false) goto L4\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"moveto CREATED: \")\lr0.append(r4.mFragment)\landroid.util.Log.d(androidx.fragment.app.FragmentStateManager.TAG, r0.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x001f}"];
Node_17 [shape=record,label="{17\:\ 0x0023|if (r4.mFragment.mIsCreated != false) goto L9\l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|androidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0 = r4.mDispatcher\landroidx.fragment.app.Fragment r1 = r4.mFragment\lr0.dispatchOnFragmentPreCreated(r1, r1.mSavedFragmentState, false)\landroidx.fragment.app.Fragment r0 = r4.mFragment\lr0.performCreate(r0.mSavedFragmentState)\landroidx.fragment.app.FragmentLifecycleCallbacksDispatcher r0 = r4.mDispatcher\landroidx.fragment.app.Fragment r1 = r4.mFragment\lr0.dispatchOnFragmentCreated(r1, r1.mSavedFragmentState, false)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|androidx.fragment.app.Fragment r0 = r4.mFragment\lr0.restoreChildFragmentState(r0.mSavedFragmentState)\lr4.mFragment.mState = 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentStateManager.create((r4v0 'this' androidx.fragment.app.FragmentStateManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0040 \-\> B:20:0x004c, CROSS_EDGE: B:14:0x0005 \-\> B:16:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

