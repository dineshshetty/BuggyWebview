digraph "CFG forandroidx.fragment.app.FragmentStore.findFragmentIndexInContainer(Landroidx\/fragment\/app\/Fragment;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|android.view.ViewGroup r0 = r7.mContainer\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r0 != null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\l|return \-1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|int r2 = r6.mAdded.indexOf(r7)\lint r3 = r2 + (\-1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|LOOP_START\lLOOP:0: B:6:0x000e\-\>B:13:0x0029\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v5 'i' int) binds: [B:5:0x0006, B:13:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< 0) goto L17\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|androidx.fragment.app.Fragment r4 = r6.mAdded.get(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|if (r4.mContainer != r0) goto L16\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c}"];
Node_10 [shape=record,label="{10\:\ 0x001e|if (r4.mView == null) goto L14\l}"];
Node_26 [shape=record,label="{26\:\ 0x0020|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|int r1 = r0.indexOfChild(r4.mView)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|RETURN\l|return r1 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0029|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|LOOP_END\lLOOP:0: B:6:0x000e\-\>B:13:0x0029\l|int r3 = r3 + (\-1)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|int r3 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|LOOP_START\lLOOP:1: B:15:0x002e\-\>B:23:0x004d\lPHI: r3 \l  PHI: (r3v3 'i' int) = (r3v2 'i' int), (r3v4 'i' int) binds: [B:14:0x002c, B:23:0x004d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|if (r3 \>= r6.mAdded.size()) goto L31\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|androidx.fragment.app.Fragment r4 = r6.mAdded.get(r3)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|if (r4.mContainer != r0) goto L30\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042}"];
Node_20 [shape=record,label="{20\:\ 0x0044|if (r4.mView == null) goto L28\l}"];
Node_30 [shape=record,label="{30\:\ 0x0046|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046}"];
Node_22 [shape=record,label="{22\:\ 0x004c|RETURN\l|return r0.indexOfChild(r4.mView)\l}"];
Node_32 [shape=record,label="{32\:\ 0x004d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|LOOP_END\lLOOP:1: B:15:0x002e\-\>B:23:0x004d\l|int r3 = r3 + 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0050|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|RETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{int androidx.fragment.app.FragmentStore.findFragmentIndexInContainer((r6v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]), (r7v0 'f' androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0028 \-\> B:1:?, BACK_EDGE: B:13:0x0029 \-\> B:6:0x000e, CROSS_EDGE: B:8:0x001a \-\> B:13:0x0029, CROSS_EDGE: B:22:0x004c \-\> B:1:?, BACK_EDGE: B:23:0x004d \-\> B:15:0x002e, CROSS_EDGE: B:18:0x0040 \-\> B:23:0x004d, CROSS_EDGE: B:24:0x0050 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_27;
Node_9 -> Node_10;
Node_10 -> Node_26[style=dashed];
Node_10 -> Node_28;
Node_26 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_28 -> Node_13;
Node_13 -> Node_6;
Node_27 -> Node_13;
Node_25 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_29;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_20 -> Node_30[style=dashed];
Node_20 -> Node_32;
Node_30 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_32 -> Node_23;
Node_23 -> Node_15;
Node_31 -> Node_23;
Node_29 -> Node_24;
Node_24 -> Node_1;
}

