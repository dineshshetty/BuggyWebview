digraph "CFG forandroidx.fragment.app.FragmentStore.makeActive(Landroidx\/fragment\/app\/FragmentStateManager;)V" {
subgraph cluster_Region_281187865 {
label = "R(2:1|(2:(1:3)|(3:5|(2:(1:9)(1:11)|10)|(1:(1:14)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.fragment.app.Fragment androidx.fragment.app.Fragment r0 = r4.getFragment()\l}"];
subgraph cluster_Region_1417288223 {
label = "R(2:(1:3)|(3:5|(2:(1:9)(1:11)|10)|(1:(1:14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_457548201 {
label = "IF [B:3:0x000a] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|if (containsActiveFragment(r0.mWho) != false) goto L3\l}"];
subgraph cluster_Region_938567130 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1361658859 {
label = "R(3:5|(2:(1:9)(1:11)|10)|(1:(1:14)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|r3.mActive.put(r0.mWho, r4)\l}"];
subgraph cluster_IfRegion_1742778540 {
label = "IF [B:6:0x0016] THEN: R(2:(1:9)(1:11)|10) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r0.mRetainInstanceChangedWhileDetached != false) goto L7\l}"];
subgraph cluster_Region_750954188 {
label = "R(2:(1:9)(1:11)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1662418967 {
label = "IF [B:8:0x001a] THEN: R(1:9) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001a|if (r0.mRetainInstance != false) goto L9\l}"];
subgraph cluster_Region_1441279285 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|r3.mNonConfig.addRetainedFragment(r0)\l}"];
}
subgraph cluster_Region_1313151608 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0022|r3.mNonConfig.removeRetainedFragment(r0)\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0027|r0.mRetainInstanceChangedWhileDetached = false\l}"];
}
}
subgraph cluster_Region_519598070 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_541908533 {
label = "IF [B:13:0x002f] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002f|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(2) != false) goto L14\l}"];
subgraph cluster_Region_2063834491 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0031|android.util.Log.v(androidx.fragment.app.FragmentStore.TAG, \"Added fragment to active set \" + r0)\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0018}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0047|ORIG_RETURN\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentStore.makeActive((r3v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]), (r4v0 'newlyActive' androidx.fragment.app.FragmentStateManager A[D('newlyActive' androidx.fragment.app.FragmentStateManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0047 \-\> B:1:?, CROSS_EDGE: B:13:0x002f \-\> B:15:0x0047, CROSS_EDGE: B:10:0x0022 \-\> B:11:0x0027, CROSS_EDGE: B:6:0x0016 \-\> B:12:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_0 -> Node_2;
Node_7 -> Node_8;
Node_12 -> Node_13;
Node_15 -> Node_1;
Node_16 -> Node_1;
}

