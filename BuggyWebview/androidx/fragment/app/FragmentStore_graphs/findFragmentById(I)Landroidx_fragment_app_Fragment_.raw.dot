digraph "CFG forandroidx.fragment.app.FragmentStore.findFragmentById(I)Landroidx\/fragment\/app\/Fragment;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r4 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList  (LINE:247)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lLOOP:0: B:3:0x0008\-\>B:9:0x0019\l|0x0008: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:22:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r4 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList  (LINE:248)\l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r0 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0010: CHECK_CAST (r1 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('f' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0019  (LINE:249)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r2 I:int) = (r1 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mFragmentId int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)])  \-\> B:24:0x0019 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|0x0018: RETURN  (r1 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)])  (LINE:250)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:9:0x0019\l|0x0019: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (\-1 int)  (LINE:247)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IGET  (r0 I:java.util.HashMap\<java.lang.String, androidx.fragment.app.FragmentStateManager\> A[D('i' int)]) = (r4 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mActive java.util.HashMap  (LINE:254)\l0x001e: INVOKE  (r0 I:java.util.Collection) = (r0 I:java.util.HashMap) type: VIRTUAL call: java.util.HashMap.values():java.util.Collection A[MD:():java.util.Collection\<V\> (c)]\l0x0022: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Collection) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|LOOP_START\lLOOP:1: B:11:0x0026\-\>B:28:0x0026\l|0x0026: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x003e \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0030: CHECK_CAST (r1 I:androidx.fragment.app.FragmentStateManager) = (androidx.fragment.app.FragmentStateManager) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0026  (LINE:255)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r2 I:androidx.fragment.app.Fragment) = \l  (r1 I:androidx.fragment.app.FragmentStateManager A[D('fragmentStateManager' androidx.fragment.app.FragmentStateManager)])\l type: VIRTUAL call: androidx.fragment.app.FragmentStateManager.getFragment():androidx.fragment.app.Fragment A[MD:():androidx.fragment.app.Fragment (m)] (LINE:256)\l0x0038: IGET  (r3 I:int) = (r2 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mFragmentId int  (LINE:257)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)])  \-\> B:30:0x0026 \l}"];
Node_27 [shape=record,label="{27\:\ 0x003c|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|RETURN\l|0x003c: RETURN  (r2 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)])  (LINE:258)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0026|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|LOOP_END\lSYNTHETIC\lLOOP:1: B:11:0x0026\-\>B:28:0x0026\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x003e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|RETURN\l|0x003e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:262)\l0x003f: RETURN  (r0 I:androidx.fragment.app.Fragment) \l}"];
MethodNode[shape=record,label="{androidx.fragment.app.Fragment androidx.fragment.app.FragmentStore.findFragmentById((r4 'this' I:androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0019 \-\> B:3:0x0008, CROSS_EDGE: B:5:0x0012 \-\> B:9:0x0019, CROSS_EDGE: B:17:0x003c \-\> B:1:?, BACK_EDGE: B:16:0x003a \-\> B:11:0x0026, BACK_EDGE: B:14:0x0032 \-\> B:11:0x0026, CROSS_EDGE: B:20:0x003f \-\> B:1:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0019: r1 'f' Landroidx\/fragment\/app\/Fragment;\l  0x0008\-0x001c: r0 'i' I\l  0x0032\-0x003d: r1 'fragmentStateManager' Landroidx\/fragment\/app\/FragmentStateManager;\l  0x0038\-0x003d: r2 'f' Landroidx\/fragment\/app\/Fragment;\l  \-1 \-0x003f: r5 'id' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_21[style=dashed];
Node_7 -> Node_24;
Node_21 -> Node_8;
Node_8 -> Node_1;
Node_24 -> Node_9;
Node_9 -> Node_3;
Node_23 -> Node_9;
Node_22 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_25[style=dashed];
Node_14 -> Node_29;
Node_25 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_27[style=dashed];
Node_16 -> Node_30;
Node_27 -> Node_17;
Node_17 -> Node_1;
Node_30 -> Node_28;
Node_28 -> Node_11;
Node_29 -> Node_28;
Node_26 -> Node_19;
Node_19 -> Node_1;
}

