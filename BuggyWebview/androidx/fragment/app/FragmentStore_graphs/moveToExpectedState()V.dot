digraph "CFG forandroidx.fragment.app.FragmentStore.moveToExpectedState()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.Iterator r0 = r4.mAdded.iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|LOOP_START\lLOOP:0: B:3:0x0006\-\>B:26:0x0006\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r0.hasNext() == false) goto L11\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|androidx.fragment.app.FragmentStateManager r2 = r4.mActive.get(r0.next().mWho)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r2 == null) goto L10\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|r2.moveToExpectedState()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0006\-\>B:26:0x0006\l}"];
Node_27 [shape=record,label="{27\:\ 0x0006|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|java.util.Iterator r0 = r4.mActive.values().iterator()\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|LOOP_START\lLOOP:1: B:10:0x002c\-\>B:32:0x002c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r0.hasNext() == false) goto L31\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|androidx.fragment.app.FragmentStateManager r1 = r0.next()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|if (r1 == null) goto L30\l}"];
Node_30 [shape=record,label="{30\:\ 0x003a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|r1.moveToExpectedState()\landroidx.fragment.app.Fragment r2 = r1.getFragment()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|if (r2.mRemoving == false) goto L29\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045}"];
Node_17 [shape=record,label="{17\:\ 0x0049|if (r2.isInBackStack() != false) goto L29\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|r3 = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|PHI: r3 \l  PHI: (r3v2 'beingRemoved' boolean) = (r3v1 'beingRemoved' boolean), (r3v4 'beingRemoved' boolean) binds: [B:19:0x004d, B:18:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L28\l}"];
Node_31 [shape=record,label="{31\:\ 0x0050|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|makeInactive(r1)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002c|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002c|LOOP_END\lSYNTHETIC\lLOOP:1: B:10:0x002c\-\>B:32:0x002c\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|r3 = false\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0054|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0054|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentStore.moveToExpectedState((r4v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:7:0x001e \-\> B:3:0x0006, BACK_EDGE: B:6:0x001c \-\> B:3:0x0006, BACK_EDGE: B:21:0x0050 \-\> B:10:0x002c, BACK_EDGE: B:20:0x004e \-\> B:10:0x002c, CROSS_EDGE: B:19:0x004d \-\> B:20:0x004e, CROSS_EDGE: B:15:0x0043 \-\> B:19:0x004d, BACK_EDGE: B:13:0x0038 \-\> B:10:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_25[style=dashed];
Node_6 -> Node_27;
Node_25 -> Node_7;
Node_7 -> Node_28;
Node_28 -> Node_26;
Node_26 -> Node_3;
Node_27 -> Node_26;
Node_24 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_29;
Node_12 -> Node_13;
Node_13 -> Node_30[style=dashed];
Node_13 -> Node_33;
Node_30 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_31[style=dashed];
Node_20 -> Node_34;
Node_31 -> Node_21;
Node_21 -> Node_35;
Node_35 -> Node_32;
Node_32 -> Node_10;
Node_34 -> Node_32;
Node_19 -> Node_20;
Node_33 -> Node_32;
Node_29 -> Node_23;
Node_23 -> Node_1;
}

