digraph "CFG forandroidx.fragment.app.FragmentStore.dump(Ljava\/lang\/String;Ljava\/io\/FileDescriptor;Ljava\/io\/PrintWriter;[Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(r6)\lr0.append(\"    \")\ljava.lang.String r0 = r0.toString()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r5.mActive.isEmpty() != false) goto L16\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|r8.print(r6)\lr8.println(\"Active Fragments:\")\ljava.util.Iterator r1 = r5.mActive.values().iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|LOOP_START\lLOOP:0: B:5:0x002b\-\>B:21:0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|if (r1.hasNext() == false) goto L15\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|androidx.fragment.app.FragmentStateManager r2 = r1.next()\lr8.print(r6)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|if (r2 == null) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|r8.println(\"null\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|LOOP_END\lSYNTHETIC\lLOOP:0: B:5:0x002b\-\>B:21:0x002b\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|androidx.fragment.app.Fragment r3 = r2.getFragment()\lr8.println(r3)\lr3.dump(r0, r7, r8, r9)\l}"];
Node_23 [shape=record,label="{23\:\ 0x002b|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|int r1 = r5.mAdded.size()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|if (r1 \<= 0) goto L24\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|r8.print(r6)\lr8.println(\"Added Fragments:\")\lr2 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|LOOP_START\lLOOP:1: B:15:0x005e\-\>B:16:0x0060\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:14:0x0055, B:16:0x0060] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L21\l}"];
Node_16 [shape=record,label="{16\:\ 0x0060|LOOP_END\lLOOP:1: B:15:0x005e\-\>B:16:0x0060\l|r8.print(r6)\lr8.print(\"  #\")\lr8.print(r2)\lr8.print(\": \")\lr8.println(r5.mAdded.get(r2).toString())\lint r2 = r2 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0082|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentStore.dump((r5v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]), (r6v0 'prefix' java.lang.String A[D('prefix' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'fd' java.io.FileDescriptor A[D('fd' java.io.FileDescriptor), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'writer' java.io.PrintWriter A[D('writer' java.io.PrintWriter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'args' java.lang.String[] A[D('args' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x003c \-\> B:5:0x002b, BACK_EDGE: B:10:0x0047 \-\> B:5:0x002b, BACK_EDGE: B:16:0x0060 \-\> B:15:0x005e, CROSS_EDGE: B:13:0x0053 \-\> B:17:0x0082, CROSS_EDGE: B:3:0x0017 \-\> B:12:0x004d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_18;
Node_8 -> Node_20[style=dashed];
Node_18 -> Node_10;
Node_10 -> Node_22;
Node_22 -> Node_21;
Node_21 -> Node_5;
Node_20 -> Node_9;
Node_9 -> Node_23;
Node_23 -> Node_21;
Node_19 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_17 -> Node_1;
}

