digraph "CFG forandroidx.fragment.app.FragmentStore.saveAddedFragments()Ljava\/util\/ArrayList;" {
subgraph cluster_Region_1974258865 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
subgraph cluster_SynchronizedRegion_1664871411 {
label = "Synchronized:R(2:2|(1:(2:(1:8)|(3:10|(2:13|(1:15)(0))|21))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
subgraph cluster_Region_1417230394 {
label = "R(1:(2:(1:8)|(3:10|(2:13|(1:15)(0))|21)))";
node [shape=record,color=blue];
subgraph cluster_Region_852449130 {
label = "R(2:(1:8)|(3:10|(2:13|(1:15)(0))|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_555076806 {
label = "IF [B:5:0x0009] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r7.mAdded.isEmpty() != false) goto L6\l}"];
subgraph cluster_Region_491638628 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x000d|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_103870616 {
label = "R(3:10|(2:13|(1:15)(0))|21)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x000e|TryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|java.util.ArrayList java.util.ArrayList\<java.lang.String\> r1 = new java.util.ArrayList\<\>(r7.mAdded.size())     \/\/ Catch: java.lang.Throwable \-\> L5a\ljava.util.Iterator java.util.Iterator\<androidx.fragment.app.Fragment\> r2 = r7.mAdded.iterator()     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
subgraph cluster_LoopRegion_1021151338 {
label = "LOOP:0: (2:13|(1:15)(0))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0023|if (r2.hasNext() != false) goto L13\l}"];
subgraph cluster_Region_1515471348 {
label = "R(2:13|(1:15)(0))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0025|TryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|androidx.fragment.app.Fragment androidx.fragment.app.Fragment r3 = r2.next()     \/\/ Catch: java.lang.Throwable \-\> L5a\lr1.add(r3.mWho)     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
subgraph cluster_IfRegion_6851615 {
label = "IF [B:13:0x0035] THEN: R(1:15) ELSE: R(0)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0035|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(2) != false) goto L15\l}"];
subgraph cluster_Region_1456015728 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0037|TryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|android.util.Log.v(androidx.fragment.app.FragmentStore.TAG, \"saveAllState: adding fragment (\" + r3.mWho + \"): \" + r3)     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
}
subgraph cluster_Region_1221918591 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0059|RETURN\l|return r1\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000c|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001f|LOOP_START\lTryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lLOOP:0: B:10:0x001f\-\>B:15:0x0057\lCatch: all \-\> 0x005a\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0057|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0057|LOOP_END\lLOOP:0: B:10:0x001f\-\>B:15:0x0057\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0057|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0058|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0058|DONT_GENERATE\lTryCatch #0 \{, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L5a\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x005a|REMOVE\lExcHandler: all \-\> 0x005a\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x005b|TRY_LEAVE\lREMOVE\lCatch: all \-\> 0x005a\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005c|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public java.util.ArrayList\<java.lang.String\> androidx.fragment.app.FragmentStore.saveAddedFragments((r7v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x0057 \-\> B:10:0x001f, CROSS_EDGE: B:13:0x0035 \-\> B:15:0x0057, CROSS_EDGE: B:17:0x0059 \-\> B:1:?, CROSS_EDGE: B:20:0x005c \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l INFO: \l \-\> Access modifiers changed from: package\-private\}\lSIGNATURE: ()Ljava\/util\/ArrayList\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_21;
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_22[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_24[style=dashed];
Node_14 -> Node_23;
Node_17 -> Node_1;
Node_0 -> Node_2;
Node_21 -> Node_4;
Node_21 -> Node_18;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_23 -> Node_15;
Node_15 -> Node_10;
Node_24 -> Node_15;
Node_22 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

