digraph "CFG forandroidx.fragment.app.FragmentStore.makeInactive(Landroidx\/fragment\/app\/FragmentStateManager;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.fragment.app.Fragment r0 = r5.getFragment()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r0.mRetainInstance == false) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r4.mNonConfig.removeRetainedFragment(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|androidx.fragment.app.FragmentStateManager r1 = r4.mActive.put(r0.mWho, null)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (r1 != null) goto L8\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b}"];
Node_9 [shape=record,label="{9\:\ 0x0020|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(2) == false) goto L12\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Removed fragment from active set \")\lr2.append(r0)\landroid.util.Log.v(androidx.fragment.app.FragmentStore.TAG, r2.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|RETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentStore.makeInactive((r4v0 'this' androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]), (r5v0 'newlyInactive' androidx.fragment.app.FragmentStateManager A[D('newlyInactive' androidx.fragment.app.FragmentStateManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0038 \-\> B:1:?, CROSS_EDGE: B:9:0x0020 \-\> B:11:0x0038, CROSS_EDGE: B:3:0x0006 \-\> B:5:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_1;
}

