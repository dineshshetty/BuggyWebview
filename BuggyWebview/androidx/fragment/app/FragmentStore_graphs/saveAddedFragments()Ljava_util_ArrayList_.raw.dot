digraph "CFG forandroidx.fragment.app.FragmentStore.saveAddedFragments()Ljava\/util\/ArrayList;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList  (LINE:190)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x0003: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList A[Catch: all \-\> 0x005a, TRY_ENTER] (LINE:191)\l0x0005: INVOKE  (r1 I:boolean) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[Catch: all \-\> 0x005a, MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x000e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:192)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|TryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x000c: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x005a]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|RETURN\l|0x000d: RETURN  (r1 I:java.util.ArrayList\<java.lang.String\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|TryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x000e: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch: all \-\> 0x005a] (LINE:194)\l0x0010: IGET  (r2 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList A[Catch: all \-\> 0x005a]\l0x0012: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[Catch: all \-\> 0x005a, MD:():int (c)]\l0x0016: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[Catch: all \-\> 0x005a, MD:(int):void (c)]\l0x0019: IGET  (r2 I:java.util.ArrayList\<androidx.fragment.app.Fragment\>) = (r7 I:androidx.fragment.app.FragmentStore) androidx.fragment.app.FragmentStore.mAdded java.util.ArrayList A[Catch: all \-\> 0x005a] (LINE:195)\l0x001b: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[Catch: all \-\> 0x005a, MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|LOOP_START\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lLOOP:0: B:10:0x001f\-\>B:15:0x0057\lCatch: all \-\> 0x005a\l|0x001f: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: all \-\> 0x005a, MD:():boolean (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0058 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|TryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x0025: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x005a, MD:():E (c)]\l0x0029: CHECK_CAST (r3 I:androidx.fragment.app.Fragment) = (androidx.fragment.app.Fragment) (r3 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x005a]\l0x002b: IGET  (r4 I:java.lang.String) = (r3 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mWho java.lang.String A[Catch: all \-\> 0x005a] (LINE:196)\l0x002d: INVOKE  (r1 I:java.util.ArrayList A[D('added' java.util.ArrayList\<java.lang.String\>)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[Catch: all \-\> 0x005a, MD:(E):boolean (c)]\l0x0030: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:197)\l0x0031: INVOKE  (r4 I:boolean) = (r4 I:int) type: STATIC call: androidx.fragment.app.FragmentManager.isLoggingEnabled(int):boolean A[Catch: all \-\> 0x005a, MD:(int):boolean (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0057 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|TryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x0037: CONST_STR  (r4 I:java.lang.String) =  \"FragmentManager\"  (LINE:198)\l0x0039: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x005a]\l0x003b: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x005a, MD:():void (c)]\l0x003e: CONST_STR  (r6 I:java.lang.String) =  \"saveAllState: adding fragment (\" \l0x0040: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x005a, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0043: IGET  (r6 I:java.lang.String) = (r3 I:androidx.fragment.app.Fragment A[D('f' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mWho java.lang.String A[Catch: all \-\> 0x005a]\l0x0045: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x005a, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0048: CONST_STR  (r6 I:java.lang.String) =  \"): \" \l0x004a: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x005a, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004d: INVOKE  (r5 I:java.lang.StringBuilder), (r3 I:java.lang.Object A[D('f' androidx.fragment.app.Fragment)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[Catch: all \-\> 0x005a, MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0050: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x005a, MD:():java.lang.String (c)]\l0x0054: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.String) type: STATIC call: android.util.Log.v(java.lang.String, java.lang.String):int A[Catch: all \-\> 0x005a, MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|LOOP_END\lLOOP:0: B:10:0x001f\-\>B:15:0x0057\l|0x0057: GOTO  \-\> 0x001f  (LINE:201)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|TryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lCatch: all \-\> 0x005a\l|0x0058: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x005a] (LINE:202)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0059|RETURN\l|0x0059: RETURN  (r1 I:java.util.ArrayList\<java.lang.String\> A[D('added' java.util.ArrayList\<java.lang.String\>)]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|ExcHandler: all \-\> 0x005a\l|0x005a: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x005a] (LINE:203)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005b|TRY_LEAVE\lCatch: all \-\> 0x005a\l}"];
Node_20 [shape=record,label="{20\:\ 0x005c|0x005c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{java.util.ArrayList\<java.lang.String\> androidx.fragment.app.FragmentStore.saveAddedFragments((r7 'this' I:androidx.fragment.app.FragmentStore A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x0057 \-\> B:10:0x001f, CROSS_EDGE: B:13:0x0035 \-\> B:15:0x0057, CROSS_EDGE: B:17:0x0059 \-\> B:1:?, CROSS_EDGE: B:20:0x005c \-\> B:1:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002b\-0x0057: r3 'f' Landroidx\/fragment\/app\/Fragment;\l  0x0019\-0x005a: r1 'added' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Ljava\/lang\/String;\>;\lTryCatch #0 \{all \-\> 0x005a, blocks: (B:4:0x0003, B:7:0x000c, B:9:0x000e, B:10:0x001f, B:12:0x0025, B:14:0x0037, B:16:0x0058), top: B:21:0x0003 \}\lSIGNATURE: ()Ljava\/util\/ArrayList\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_21;
Node_21 -> Node_4;
Node_21 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_22;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_23;
Node_23 -> Node_15;
Node_15 -> Node_10;
Node_24 -> Node_15;
Node_22 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_1;
}

