digraph "CFG forandroidx.fragment.app.FragmentTransitionCompat21.addTargets(Ljava\/lang\/Object;Ljava\/util\/ArrayList;)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('transitionObj' java.lang.Object)])  (LINE:94)\l0x0001: CHECK_CAST (r0 I:android.transition.Transition) = (android.transition.Transition) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transition' android.transition.Transition)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0006  (LINE:95)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:96)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0006|0x0006: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('transition' android.transition.Transition)]) android.transition.TransitionSet  (LINE:98)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x001f \l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|0x000a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('transition' android.transition.Transition)])  (LINE:99)\l0x000b: CHECK_CAST (r1 I:android.transition.TransitionSet) = (android.transition.TransitionSet) (r1 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r2 I:int) = (r1 I:android.transition.TransitionSet A[D('set' android.transition.TransitionSet)]) type: VIRTUAL call: android.transition.TransitionSet.getTransitionCount():int A[MD:():int (c)] (LINE:100)\l0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:101)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0012|LOOP_START\lLOOP:0: B:33:0x0012\-\>B:34:0x0014\l|0x0012: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('numTransitions' int)])  \-\> B:45:0x0043 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|LOOP_END\lLOOP:0: B:33:0x0012\-\>B:34:0x0014\l|0x0014: INVOKE  (r4 I:android.transition.Transition) = (r1 I:android.transition.TransitionSet A[D('set' android.transition.TransitionSet)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: android.transition.TransitionSet.getTransitionAt(int):android.transition.Transition A[MD:(int):android.transition.Transition (c)] (LINE:102)\l0x0018: INVOKE  \l  (r5 I:androidx.fragment.app.FragmentTransitionCompat21)\l  (r4 I:java.lang.Object A[D('child' android.transition.Transition)])\l  (r7 I:java.util.ArrayList A[D('views' java.util.ArrayList\<android.view.View\>)])\l type: VIRTUAL call: androidx.fragment.app.FragmentTransitionCompat21.addTargets(java.lang.Object, java.util.ArrayList):void A[MD:(java.lang.Object, java.util.ArrayList\<android.view.View\>):void (m)] (LINE:103)\l0x001b: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:101)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0043|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:115)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001f|0x001f: INVOKE  (r1 I:boolean) = (r0 I:android.transition.Transition A[D('transition' android.transition.Transition)]) type: STATIC call: androidx.fragment.app.FragmentTransitionCompat21.hasSimpleTarget(android.transition.Transition):boolean A[MD:(android.transition.Transition):boolean (m)] (LINE:105)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:? \l}"];
Node_38 [shape=record,label="{38\:\ 0x0025|0x0025: INVOKE  (r1 I:java.util.List) = (r0 I:android.transition.Transition A[D('transition' android.transition.Transition)]) type: VIRTUAL call: android.transition.Transition.getTargets():java.util.List A[MD:():java.util.List\<android.view.View\> (c)] (LINE:106)\l0x0029: INVOKE  (r2 I:boolean) = (r1 I:java.util.List A[D('targets' java.util.List\<android.view.View\>)]) type: STATIC call: androidx.fragment.app.FragmentTransitionCompat21.isNullOrEmpty(java.util.List):boolean A[MD:(java.util.List):boolean (m)] (LINE:107)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|0x002d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0043 \l}"];
Node_40 [shape=record,label="{40\:\ 0x002f|0x002f: INVOKE  (r2 I:int) = (r7 I:java.util.ArrayList A[D('views' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:109)\l0x0033: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:110)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0034|LOOP_START\lLOOP:1: B:41:0x0034\-\>B:42:0x0036\l|0x0034: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('numViews' int)])  \-\> B:46:0x0043 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|LOOP_END\lLOOP:1: B:41:0x0034\-\>B:42:0x0036\l|0x0036: INVOKE  (r4 I:java.lang.Object) = (r7 I:java.util.ArrayList A[D('views' java.util.ArrayList\<android.view.View\>)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:111)\l0x003a: CHECK_CAST (r4 I:android.view.View) = (android.view.View) (r4 I:??[OBJECT, ARRAY]) \l0x003c: INVOKE  (r0 I:android.transition.Transition A[D('transition' android.transition.Transition)]), (r4 I:android.view.View) type: VIRTUAL call: android.transition.Transition.addTarget(android.view.View):android.transition.Transition A[MD:(android.view.View):android.transition.Transition (c)]\l0x003f: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:110)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0043|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:115)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0043|RETURN\lORIG_RETURN\l|0x0043: RETURN    (LINE:115)\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN   A[SYNTHETIC] (LINE:115)\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentTransitionCompat21.addTargets((r5 'this' I:androidx.fragment.app.FragmentTransitionCompat21 A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[D('transitionObj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.ArrayList\<android.view.View\> A[D('views' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0014 \-\> B:33:0x0012, CROSS_EDGE: B:44:0x0043 \-\> B:26:?, BACK_EDGE: B:42:0x0036 \-\> B:41:0x0034, CROSS_EDGE: B:41:0x0034 \-\> B:44:0x0043, CROSS_EDGE: B:39:0x002d \-\> B:44:0x0043, CROSS_EDGE: B:37:0x0023 \-\> B:44:0x0043\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x001b: r4 'child' Landroid\/transition\/Transition;\l  0x000d\-0x001e: r1 'set' Landroid\/transition\/TransitionSet;\l  0x0011\-0x001e: r2 'numTransitions' I\l  0x0012\-0x001e: r3 'i' I\l  0x0029\-0x0042: r1 'targets' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/view\/View;\>;\l  0x0033\-0x0042: r2 'numViews' I\l  0x0034\-0x0042: r3 'i' I\l  0x0003\-0x0043: r0 'transition' Landroid\/transition\/Transition;\l  \-1 \-0x0043: r6 'transitionObj' Ljava\/lang\/Object;\l  0x0000\-0x0043: r7 'views' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\lSIGNATURE: (Ljava\/lang\/Object;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;)V\lMETHOD_OVERRIDE: [androidx.fragment.app.FragmentTransitionImpl.addTargets(java.lang.Object, java.util.ArrayList\<android.view.View\>):void]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_26;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_45;
Node_34 -> Node_33;
Node_45 -> Node_48;
Node_48 -> Node_26;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_47;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_44;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_41;
Node_46 -> Node_49;
Node_49 -> Node_26;
Node_44 -> Node_26;
Node_47 -> Node_26;
}

