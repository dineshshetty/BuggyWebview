digraph "CFG forandroidx.fragment.app.FragmentActivity.HostCallbacks.onHasWindowAnimations()Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r1.this$0.getWindow() == null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|SYNTHETIC\lRETURN\l|return true\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.fragment.app.FragmentActivity.HostCallbacks.onHasWindowAnimations((r1v0 'this' androidx.fragment.app.FragmentActivity$HostCallbacks A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lMETHOD_OVERRIDE: [androidx.fragment.app.FragmentHostCallback.onHasWindowAnimations():boolean]\lCROSS_EDGE: B:5:0x000a \-\> B:6:0x000b\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_1;
}

