digraph "CFG forandroidx.fragment.app.BackStackState.\<init\>(Landroid\/os\/Parcel;)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r1 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:83)\l0x0003: INVOKE  (r0 I:int[]) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createIntArray():int[] A[MD:():int[] (c)] (LINE:84)\l0x0007: IPUT  (r0 I:int[]), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mOps int[] \l0x0009: INVOKE  (r0 I:java.util.ArrayList) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createStringArrayList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.String\> (c)] (LINE:85)\l0x000d: IPUT  (r0 I:java.util.ArrayList\<java.lang.String\>), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mFragmentWhos java.util.ArrayList \l0x000f: INVOKE  (r0 I:int[]) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createIntArray():int[] A[MD:():int[] (c)] (LINE:86)\l0x0013: IPUT  (r0 I:int[]), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mOldMaxLifecycleStates int[] \l0x0015: INVOKE  (r0 I:int[]) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createIntArray():int[] A[MD:():int[] (c)] (LINE:87)\l0x0019: IPUT  (r0 I:int[]), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mCurrentMaxLifecycleStates int[] \l0x001b: INVOKE  (r0 I:int) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readInt():int A[MD:():int (c)] (LINE:88)\l0x001f: IPUT  (r0 I:int), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mTransition int \l0x0021: INVOKE  (r0 I:java.lang.String) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readString():java.lang.String A[MD:():java.lang.String (c)] (LINE:89)\l0x0025: IPUT  (r0 I:java.lang.String), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mName java.lang.String \l0x0027: INVOKE  (r0 I:int) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readInt():int A[MD:():int (c)] (LINE:90)\l0x002b: IPUT  (r0 I:int), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mIndex int \l0x002d: INVOKE  (r0 I:int) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readInt():int A[MD:():int (c)] (LINE:91)\l0x0031: IPUT  (r0 I:int), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mBreadCrumbTitleRes int \l0x0033: SGET  (r0 I:android.os.Parcelable$Creator) =  android.text.TextUtils.CHAR_SEQUENCE_CREATOR android.os.Parcelable$Creator  (LINE:92)\l0x0035: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.os.Parcelable$Creator), (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: INTERFACE call: android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object A[MD:(android.os.Parcel):T (c)]\l0x0039: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x003b: IPUT  (r0 I:java.lang.CharSequence), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mBreadCrumbTitleText java.lang.CharSequence \l0x003d: INVOKE  (r0 I:int) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readInt():int A[MD:():int (c)] (LINE:93)\l0x0041: IPUT  (r0 I:int), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mBreadCrumbShortTitleRes int \l0x0043: SGET  (r0 I:android.os.Parcelable$Creator) =  android.text.TextUtils.CHAR_SEQUENCE_CREATOR android.os.Parcelable$Creator  (LINE:94)\l0x0045: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.os.Parcelable$Creator), (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: INTERFACE call: android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):java.lang.Object A[MD:(android.os.Parcel):T (c)]\l0x0049: CHECK_CAST (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:??[OBJECT, ARRAY]) \l0x004b: IPUT  (r0 I:java.lang.CharSequence), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mBreadCrumbShortTitleText java.lang.CharSequence \l0x004d: INVOKE  (r0 I:java.util.ArrayList) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createStringArrayList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.String\> (c)] (LINE:95)\l0x0051: IPUT  (r0 I:java.util.ArrayList\<java.lang.String\>), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mSharedElementSourceNames java.util.ArrayList \l0x0053: INVOKE  (r0 I:java.util.ArrayList) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.createStringArrayList():java.util.ArrayList A[MD:():java.util.ArrayList\<java.lang.String\> (c)] (LINE:96)\l0x0057: IPUT  (r0 I:java.util.ArrayList\<java.lang.String\>), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mSharedElementTargetNames java.util.ArrayList \l0x0059: INVOKE  (r0 I:int) = (r2 I:android.os.Parcel A[D('in' android.os.Parcel)]) type: VIRTUAL call: android.os.Parcel.readInt():int A[MD:():int (c)] (LINE:97)\l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|0x005d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0061 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|0x005f: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0062|0x0062: IPUT  (r0 I:boolean), (r1 I:androidx.fragment.app.BackStackState) androidx.fragment.app.BackStackState.mReorderingAllowed boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0064|RETURN\l|0x0064: RETURN    (LINE:98)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0061|0x0061: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.BackStackState.\<init\>((r1 'this' I:androidx.fragment.app.BackStackState A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Parcel A[D('in' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0061 \-\> B:14:0x0062\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0064: r2 'in' Landroid\/os\/Parcel;\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

