digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.2.run()V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList) = (r5 I:androidx.fragment.app.FragmentTransitionImpl$2) androidx.fragment.app.FragmentTransitionImpl.2.val$sharedElementsIn java.util.ArrayList  (LINE:266)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:267)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|LOOP_START\lLOOP:0: B:15:0x0007\-\>B:19:0x0020\l|0x0007: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('numSharedElements' int)])  \-\> B:21:0x0023 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: IGET  (r2 I:java.util.ArrayList) = (r5 I:androidx.fragment.app.FragmentTransitionImpl$2) androidx.fragment.app.FragmentTransitionImpl.2.val$sharedElementsIn java.util.ArrayList  (LINE:268)\l0x000b: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x000f: CHECK_CAST (r2 I:android.view.View) = (android.view.View) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r3 I:java.lang.String) = (r2 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getTransitionName(android.view.View):java.lang.String A[MD:(android.view.View):java.lang.String (m)] (LINE:269)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('name' java.lang.String)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0020  (LINE:270)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0017|0x0017: IGET  (r4 I:java.util.Map) = (r5 I:androidx.fragment.app.FragmentTransitionImpl$2) androidx.fragment.app.FragmentTransitionImpl.2.val$nameOverrides java.util.Map  (LINE:271)\l0x0019: INVOKE  (r4 I:java.lang.String) = (r4 I:java.util.Map), (r3 I:java.lang.String A[D('name' java.lang.String)]) type: STATIC call: androidx.fragment.app.FragmentTransitionImpl.findKeyForValue(java.util.Map, java.lang.String):java.lang.String A[MD:(java.util.Map\<java.lang.String, java.lang.String\>, java.lang.String):java.lang.String (m)]\l0x001d: INVOKE  (r2 I:android.view.View A[D('view' android.view.View)]), (r4 I:java.lang.String A[D('inName' java.lang.String)]) type: STATIC call: androidx.core.view.ViewCompat.setTransitionName(android.view.View, java.lang.String):void A[MD:(android.view.View, java.lang.String):void (m)] (LINE:272)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0020|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|LOOP_END\lLOOP:0: B:15:0x0007\-\>B:19:0x0020\l|0x0020: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:267)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|RETURN\l|0x0023: RETURN    (LINE:275)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentTransitionImpl.2.run((r5 'this' I:androidx.fragment.app.FragmentTransitionImpl$2 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x0020 \-\> B:15:0x0007, CROSS_EDGE: B:17:0x0015 \-\> B:19:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0020: r2 'view' Landroid\/view\/View;\l  0x0015\-0x0020: r3 'name' Ljava\/lang\/String;\l  0x001d\-0x0020: r4 'inName' Ljava\/lang\/String;\l  0x0007\-0x0023: r1 'i' I\l  0x0006\-0x0023: r0 'numSharedElements' I\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

