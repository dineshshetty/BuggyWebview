digraph "CFG forandroidx.fragment.app.FragmentTabHost.onRestoreInstanceState(Landroid\/os\/Parcelable;)V" {
subgraph cluster_Region_1473124547 {
label = "R(1:(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1274305572 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1883171820 {
label = "IF [B:3:0x0002] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if ((r3 instanceof androidx.fragment.app.FragmentTabHost.SavedState) == false) goto L3\l}"];
subgraph cluster_Region_301731036 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|super.onRestoreInstanceState(r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_324757285 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|androidx.fragment.app.FragmentTabHost$SavedState androidx.fragment.app.FragmentTabHost.SavedState r0 = (androidx.fragment.app.FragmentTabHost.SavedState) r3\lsuper.onRestoreInstanceState(r0.getSuperState())\lsetCurrentTabByTag(r0.curTab)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0000}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
MethodNode[shape=record,label="{protected void androidx.fragment.app.FragmentTabHost.onRestoreInstanceState((r2v0 'this' androidx.fragment.app.FragmentTabHost A[IMMUTABLE_TYPE, THIS]), (r3v0 'state' android.os.Parcelable A[D('state' android.os.Parcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lCROSS_EDGE: B:7:0x0017 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onRestoreInstanceState(android.os.Parcelable):void\}]\l}"];
MethodNode -> Node_0;Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_7 -> Node_1;
}

