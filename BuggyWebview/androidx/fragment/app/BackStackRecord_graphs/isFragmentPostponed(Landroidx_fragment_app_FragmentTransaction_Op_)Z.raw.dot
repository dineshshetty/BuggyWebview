digraph "CFG forandroidx.fragment.app.BackStackRecord.isFragmentPostponed(Landroidx\/fragment\/app\/FragmentTransaction$Op;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.fragment.app.Fragment) = (r2 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:679)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragment' androidx.fragment.app.Fragment)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c  (LINE:680)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: IGET  (r1 I:boolean) = (r0 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mAdded boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IGET  (r1 I:android.view.View) = (r0 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mView android.view.View \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|0x000c: IGET  (r1 I:boolean) = (r0 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mDetached boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0010|0x0010: IGET  (r1 I:boolean) = (r0 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) androidx.fragment.app.Fragment.mHidden boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: INVOKE  (r1 I:boolean) = (r0 I:androidx.fragment.app.Fragment A[D('fragment' androidx.fragment.app.Fragment)]) type: VIRTUAL call: androidx.fragment.app.Fragment.isPostponed():boolean A[MD:():boolean (m)] (LINE:681)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001c \l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\lRETURN\l|0x001a: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:680)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001d: RETURN  (r1 I:boolean)  (LINE:680)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.fragment.app.BackStackRecord.isFragmentPostponed((r2 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x001c \-\> B:16:0x001d, CROSS_EDGE: B:11:0x0012 \-\> B:15:0x001c, CROSS_EDGE: B:9:0x000e \-\> B:15:0x001c, CROSS_EDGE: B:7:0x000a \-\> B:15:0x001c, CROSS_EDGE: B:5:0x0006 \-\> B:15:0x001c, CROSS_EDGE: B:3:0x0002 \-\> B:15:0x001c\lDebug Info:\l  0x0002\-0x001d: r0 'fragment' Landroidx\/fragment\/app\/Fragment;\l  \-1 \-0x001d: r2 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_1;
Node_15 -> Node_1;
}

