digraph "CFG forandroidx.fragment.app.BackStackRecord.interactsWith(I)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r5 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:358)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:359)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|LOOP_START\lLOOP:0: B:3:0x0007\-\>B:12:0x0020\l|0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('opNum' int)]) \>= (r0 I:??[int, byte, short, char] A[D('numOps' int)])  \-\> B:14:0x0023 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r3 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r5 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:360)\l0x000c: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r1 I:int A[D('opNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0010: CHECK_CAST (r3 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r3 I:??[OBJECT, ARRAY]) \l0x0012: IGET  (r4 I:androidx.fragment.app.Fragment) = (r3 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:361)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IGET  (r2 I:androidx.fragment.app.Fragment) = (r3 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment \l0x0018: IGET  (r2 I:int) = (r2 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mContainerId int \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragContainer' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0020  (LINE:362)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fragContainer' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('containerId' int)])  \-\> B:17:0x0020 \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|RETURN\l|0x001e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:363)\l0x001f: RETURN  (r4 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|LOOP_END\lLOOP:0: B:3:0x0007\-\>B:12:0x0020\l|0x0020: ARITH  (r1 I:int) = (r1 I:int A[D('opNum' int)]) + (1 int)  (LINE:359)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|RETURN\l|0x0023: RETURN  (r2 I:boolean)  (LINE:366)\l}"];
MethodNode[shape=record,label="{boolean androidx.fragment.app.BackStackRecord.interactsWith((r5 'this' I:androidx.fragment.app.BackStackRecord A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('containerId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:12:0x0020 \-\> B:3:0x0007, CROSS_EDGE: B:8:0x001a \-\> B:12:0x0020, CROSS_EDGE: B:6:0x0014 \-\> B:8:0x001a, CROSS_EDGE: B:13:0x0023 \-\> B:1:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x0020: r2 'fragContainer' I\l  0x0012\-0x0020: r3 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x0007\-0x0023: r1 'opNum' I\l  0x0006\-0x0023: r0 'numOps' I\l  \-1 \-0x0023: r6 'containerId' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_15[style=dashed];
Node_9 -> Node_17;
Node_15 -> Node_10;
Node_10 -> Node_1;
Node_17 -> Node_12;
Node_12 -> Node_3;
Node_16 -> Node_12;
Node_14 -> Node_13;
Node_13 -> Node_1;
}

