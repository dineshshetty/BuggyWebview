digraph "CFG forandroidx.fragment.app.BackStackRecord.bumpBackStackNesting(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r7 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mAddToBackStack boolean  (LINE:264)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0005 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:265)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:267)\l0x0006: INVOKE  (r1 I:boolean) = (r0 I:int) type: STATIC call: androidx.fragment.app.FragmentManager.isLoggingEnabled(int):boolean A[MD:(int):boolean (m)]\l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"FragmentManager\" \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:268)\l0x0010: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0013: CONST_STR  (r3 I:java.lang.String) =  \"Bump nesting in \" \l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0018: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001b: CONST_STR  (r3 I:java.lang.String) =  \" by \" \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:int A[D('amt' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0023: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0027: INVOKE  (r2 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.v(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IGET  (r1 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r7 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:270)\l0x002c: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0030: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:271)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|LOOP_START\lLOOP:0: B:9:0x0031\-\>B:15:0x006e\l|0x0031: IF  (r3 I:??[int, byte, short, char] A[D('opNum' int)]) \>= (r1 I:??[int, byte, short, char] A[D('numOps' int)])  \-\> B:17:0x0071 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IGET  (r4 I:java.util.ArrayList\<androidx.fragment.app.FragmentTransaction$Op\>) = (r7 I:androidx.fragment.app.BackStackRecord) androidx.fragment.app.BackStackRecord.mOps java.util.ArrayList  (LINE:272)\l0x0035: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.ArrayList), (r3 I:int A[D('opNum' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0039: CHECK_CAST (r4 I:androidx.fragment.app.FragmentTransaction$Op) = (androidx.fragment.app.FragmentTransaction$Op) (r4 I:??[OBJECT, ARRAY]) \l0x003b: IGET  (r5 I:androidx.fragment.app.Fragment) = (r4 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:273)\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006e \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: IGET  (r5 I:androidx.fragment.app.Fragment) = (r4 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment  (LINE:274)\l0x0041: IGET  (r6 I:int) = (r5 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mBackStackNesting int \l0x0043: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int A[D('amt' int)]) \l0x0044: IPUT  (r6 I:int), (r5 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mBackStackNesting int \l0x0046: INVOKE  (r5 I:boolean) = (r0 I:int) type: STATIC call: androidx.fragment.app.FragmentManager.isLoggingEnabled(int):boolean A[MD:(int):boolean (m)] (LINE:275)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006e \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:276)\l0x004e: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0051: CONST_STR  (r6 I:java.lang.String) =  \"Bump nesting of \" \l0x0053: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0056: IGET  (r6 I:androidx.fragment.app.Fragment) = (r4 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment \l0x0058: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x005b: CONST_STR  (r6 I:java.lang.String) =  \" to \" \l0x005d: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0060: IGET  (r6 I:androidx.fragment.app.Fragment) = (r4 I:androidx.fragment.app.FragmentTransaction$Op A[D('op' androidx.fragment.app.FragmentTransaction$Op)]) androidx.fragment.app.FragmentTransaction.Op.mFragment androidx.fragment.app.Fragment \l0x0062: IGET  (r6 I:int) = (r6 I:androidx.fragment.app.Fragment) androidx.fragment.app.Fragment.mBackStackNesting int \l0x0064: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:int) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x0067: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006b: INVOKE  (r2 I:java.lang.String), (r5 I:java.lang.String) type: STATIC call: android.util.Log.v(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006e|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|LOOP_END\lLOOP:0: B:9:0x0031\-\>B:15:0x006e\l|0x006e: ARITH  (r3 I:int) = (r3 I:int A[D('opNum' int)]) + (1 int)  (LINE:271)\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0071|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0071|RETURN\l|0x0071: RETURN    (LINE:281)\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.BackStackRecord.bumpBackStackNesting((r7 'this' I:androidx.fragment.app.BackStackRecord A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('amt' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x006e \-\> B:9:0x0031, CROSS_EDGE: B:13:0x004a \-\> B:15:0x006e, CROSS_EDGE: B:11:0x003d \-\> B:15:0x006e, CROSS_EDGE: B:16:0x0071 \-\> B:1:?, CROSS_EDGE: B:6:0x000c \-\> B:8:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003b\-0x006e: r4 'op' Landroidx\/fragment\/app\/FragmentTransaction$Op;\l  0x0031\-0x0071: r3 'opNum' I\l  0x0030\-0x0071: r1 'numOps' I\l  \-1 \-0x0071: r8 'amt' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_18;
Node_18 -> Node_15;
Node_15 -> Node_9;
Node_20 -> Node_15;
Node_19 -> Node_15;
Node_17 -> Node_16;
Node_16 -> Node_1;
}

