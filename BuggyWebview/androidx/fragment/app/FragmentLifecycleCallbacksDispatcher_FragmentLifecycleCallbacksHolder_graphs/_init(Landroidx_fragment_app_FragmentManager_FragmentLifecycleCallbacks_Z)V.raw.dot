digraph "CFG forandroidx.fragment.app.FragmentLifecycleCallbacksDispatcher.FragmentLifecycleCallbacksHolder.\<init\>(Landroidx\/fragment\/app\/FragmentManager$FragmentLifecycleCallbacks;Z)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:40)\l0x0003: IPUT  \l  (r1 I:androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks A[D('callback' androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)])\l  (r0 I:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder)\l androidx.fragment.app.FragmentLifecycleCallbacksDispatcher.FragmentLifecycleCallbacksHolder.mCallback androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks  (LINE:41)\l0x0005: IPUT  \l  (r2 I:boolean A[D('recursive' boolean)])\l  (r0 I:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder)\l androidx.fragment.app.FragmentLifecycleCallbacksDispatcher.FragmentLifecycleCallbacksHolder.mRecursive boolean  (LINE:42)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:43)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.fragment.app.FragmentLifecycleCallbacksDispatcher.FragmentLifecycleCallbacksHolder.\<init\>((r0 'this' I:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks A[D('callback' androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:boolean A[D('recursive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0007: r1 'callback' Landroidx\/fragment\/app\/FragmentManager$FragmentLifecycleCallbacks;\l  \-1 \-0x0007: r2 'recursive' Z\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

