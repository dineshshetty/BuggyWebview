digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.findNamedViews(Ljava\/util\/Map;Landroid\/view\/View;)V" {
subgraph cluster_Region_2088280763 {
label = "R(1:(1:(3:3|(1:5)|(1:(2:8|(1:10))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1519576824 {
label = "R(1:(3:3|(1:5)|(1:(2:8|(1:10)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1289880204 {
label = "IF [B:19:0x0004] THEN: R(3:3|(1:5)|(1:(2:8|(1:10)))) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0004|if (r7.getVisibility() == 0) goto L3\l}"];
subgraph cluster_Region_1763523509 {
label = "R(3:3|(1:5)|(1:(2:8|(1:10))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0006|java.lang.String java.lang.String r0 = androidx.core.view.ViewCompat.getTransitionName(r7)\l}"];
subgraph cluster_IfRegion_355335278 {
label = "IF [B:21:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000a|if (r0 != null) goto L5\l}"];
subgraph cluster_Region_1118904002 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000c|r6.put(r0, r7)\l}"];
}
}
subgraph cluster_Region_1809941635 {
label = "R(1:(2:8|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1379245630 {
label = "IF [B:24:0x0011] THEN: R(2:8|(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0011|if ((r7 instanceof android.view.ViewGroup) != false) goto L8\l}"];
subgraph cluster_Region_1988467310 {
label = "R(2:8|(1:10))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0013|android.view.ViewGroup android.view.ViewGroup r1 = (android.view.ViewGroup) r7\lint int r2 = r1.getChildCount()\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_208767922 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001b|LOOP_START\lLOOP:0: B:26:0x001b\-\>B:27:0x001d\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:25:0x0013, B:27:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L10\l}"];
subgraph cluster_Region_1984284568 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001d|LOOP_END\lLOOP:0: B:26:0x001b\-\>B:27:0x001d\l|android.view.View android.view.View r4 = r1.getChildAt(r3)\lfindNamedViews(r6, r4)\lr3++\l}"];
}
}
}
}
}
}
}
}
}
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0000}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x000f}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0027|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0027|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentTransitionImpl.findNamedViews((r5v0 'this' androidx.fragment.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 'namedViews' java.util.Map\<java.lang.String, android.view.View\> A[D('namedViews' java.util.Map\<java.lang.String, android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x001d \-\> B:26:0x001b, CROSS_EDGE: B:24:0x0011 \-\> B:28:0x0027, CROSS_EDGE: B:21:0x000a \-\> B:23:0x000f, CROSS_EDGE: B:19:0x0004 \-\> B:28:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/Map\<Ljava\/lang\/String;Landroid\/view\/View;\>;Landroid\/view\/View;)V\l}"];
MethodNode -> Node_16;Node_19 -> Node_20;
Node_19 -> Node_28[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_30[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_26;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_23 -> Node_24;
Node_29 -> Node_31;
Node_31 -> Node_17;
Node_30 -> Node_17;
Node_28 -> Node_17;
}

