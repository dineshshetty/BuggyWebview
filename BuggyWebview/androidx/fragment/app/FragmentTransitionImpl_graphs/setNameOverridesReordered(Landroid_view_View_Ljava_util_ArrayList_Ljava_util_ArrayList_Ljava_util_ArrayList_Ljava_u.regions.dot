digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(Landroid\/view\/View;Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;Ljava\/util\/Map;)V" {
subgraph cluster_Region_904018913 {
label = "R(3:1|(3:3|(2:5|(1:(1:(1:9)(2:11|12))(1:1)))(0)|13)|17)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0000|int final int r7 = r13.size()\ljava.util.ArrayList final java.util.ArrayList\<java.lang.String\> r0 = new java.util.ArrayList\<\>()\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_319497603 {
label = "LOOP:0: (3:3|(2:5|(1:(1:(1:9)(2:11|12))(1:1)))(0)|13)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000b|LOOP_START\lLOOP:0: B:24:0x000b\-\>B:34:0x0041\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v4 'i' int) binds: [B:23:0x0000, B:34:0x0041] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< r7) goto L3\l}"];
subgraph cluster_Region_382919493 {
label = "R(3:3|(2:5|(1:(1:(1:9)(2:11|12))(1:1)))(0)|13)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000d|android.view.View android.view.View r1 = r12.get(r0)\ljava.lang.String java.lang.String r2 = androidx.core.view.ViewCompat.getTransitionName(r1)\lr0.add(r2)\l}"];
subgraph cluster_IfRegion_2015818666 {
label = "IF [B:26:0x001a] THEN: R(2:5|(1:(1:(1:9)(2:11|12))(1:1))) ELSE: R(0)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x001a|if (r2 != null) goto L5\l}"];
subgraph cluster_Region_852229965 {
label = "R(2:5|(1:(1:(1:9)(2:11|12))(1:1)))";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001d|androidx.core.view.ViewCompat.setTransitionName(r1, null)\ljava.lang.String java.lang.String r3 = r15.get(r2)\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_2031284014 {
label = "LOOP:1: (1:(1:(1:9)(2:11|12))(1:1))";
node [shape=record,color=blue];
subgraph cluster_Region_295437643 {
label = "R(1:(1:(1:9)(2:11|12))(1:1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_446676867 {
label = "IF [B:29:0x0028] THEN: R(1:(1:9)(2:11|12)) ELSE: R(1:1)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0028|LOOP_START\lEDGE_INSN: B:29:0x0028\-\>B:38:0x0041 ?: BREAK  \lLOOP:1: B:29:0x0028\-\>B:33:0x003e\lPHI: r4 \l  PHI: (r4v2 'j' int) = (r4v1 'j' int), (r4v3 'j' int) binds: [B:28:0x001d, B:33:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r7) goto L7\l}"];
subgraph cluster_Region_1777813748 {
label = "R(1:(1:9)(2:11|12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_518732000 {
label = "IF [B:31:0x0032] THEN: R(1:9) ELSE: R(2:11|12) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0032|if (r3.equals(r14.get(r4)) == false) goto L9\l}"];
subgraph cluster_Region_1933024743 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x003e|LOOP_END\lLOOP:1: B:29:0x0028\-\>B:33:0x003e\l|r4++\l}"];
}
subgraph cluster_Region_522336394 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0034|androidx.core.view.ViewCompat.setTransitionName(r13.get(r4), r2)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0041|SYNTHETIC\lEDGE_INSN: B:39:0x0041\-\>B:34:0x0041 ?: BREAK  \l|break\l}"];
}
}
}
subgraph cluster_Region_399324659 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_2034815931 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_143603588 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_34 [shape=record,label="{34\:\ 0x0041|LOOP_END\lEDGE_INSN: B:39:0x0041\-\>B:34:0x0041 ?: BREAK  \lLOOP:0: B:24:0x000b\-\>B:34:0x0041\l|r0++\l}"];
}
}
Node_35 [shape=record,label="{35\:\ 0x0044|androidx.core.view.OneShotPreDrawListener.add(r11, new androidx.fragment.app.FragmentTransitionImpl.RunnableC03641())\l}"];
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x002a}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0034|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0041|SYNTHETIC\lEDGE_INSN: B:29:0x0028\-\>B:38:0x0041 ?: BREAK  \l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0041|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0044|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0053}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered((r10v0 'this' androidx.fragment.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, THIS]), (r11v0 'sceneRoot' android.view.View A[D('sceneRoot' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'sharedElementsOut' java.util.ArrayList\<android.view.View\> A[D('sharedElementsOut' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'sharedElementsIn' java.util.ArrayList\<android.view.View\> A[D('sharedElementsIn' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'inNames' java.util.ArrayList\<java.lang.String\> A[D('inNames' java.util.ArrayList\<java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'nameOverrides' java.util.Map\<java.lang.String, java.lang.String\> A[D('nameOverrides' java.util.Map\<java.lang.String, java.lang.String\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0041 \-\> B:24:0x000b, BACK_EDGE: B:33:0x003e \-\> B:29:0x0028, CROSS_EDGE: B:29:0x0028 \-\> B:34:0x0041, CROSS_EDGE: B:26:0x001a \-\> B:34:0x0041\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Landroid\/view\/View;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;Ljava\/util\/ArrayList\<Ljava\/lang\/String;\>;Ljava\/util\/Map\<Ljava\/lang\/String;Ljava\/lang\/String;\>;)V\l}"];
MethodNode -> Node_21;Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_37[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_40[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_38[style=dashed];
Node_31 -> Node_33;
Node_31 -> Node_41[style=dashed];
Node_33 -> Node_29;
Node_32 -> Node_39;
Node_39 -> Node_34;
Node_34 -> Node_24;
Node_35 -> Node_36;
Node_21 -> Node_23;
Node_30 -> Node_31;
Node_41 -> Node_32;
Node_38 -> Node_34;
Node_40 -> Node_34;
Node_37 -> Node_35;
Node_36 -> Node_22;
}

