digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.getBoundsOnScreen(Landroid\/view\/View;Landroid\/graphics\/Rect;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r8 I:android.view.View A[D('view' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.isAttachedToWindow(android.view.View):boolean A[MD:(android.view.View):boolean (m)] (LINE:82)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0007 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:83)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:86)\l0x0009: INVOKE  (r0 I:android.graphics.RectF) type: DIRECT call: android.graphics.RectF.\<init\>():void A[MD:():void (c)]\l0x000c: INVOKE  (r1 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)] (LINE:87)\l0x0010: CAST (r1 I:float) = (float) (r1 I:int) \l0x0011: INVOKE  (r2 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x0015: CAST (r2 I:float) = (float) (r2 I:int) \l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0017: INVOKE  \l  (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)])\l  (r3 I:float)\l  (r3 I:float)\l  (r1 I:float)\l  (r2 I:float)\l type: VIRTUAL call: android.graphics.RectF.set(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x001a: INVOKE  (r1 I:android.graphics.Matrix) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getMatrix():android.graphics.Matrix A[MD:():android.graphics.Matrix (c)] (LINE:89)\l0x001e: INVOKE  (r1 I:android.graphics.Matrix), (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.Matrix.mapRect(android.graphics.RectF):boolean A[MD:(android.graphics.RectF):boolean (c)]\l0x0021: INVOKE  (r1 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:90)\l0x0025: CAST (r1 I:float) = (float) (r1 I:int) \l0x0026: INVOKE  (r2 I:int) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x002a: CAST (r2 I:float) = (float) (r2 I:int) \l0x002b: INVOKE  (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)]\l0x002e: INVOKE  (r1 I:android.view.ViewParent) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:92)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0032|LOOP_START\lLOOP:0: B:18:0x0032\-\>B:20:0x0036\l|0x0032: INSTANCE_OF  (r2 I:boolean) = (r1 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)]) android.view.View  (LINE:93)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|0x0034: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0061 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|LOOP_END\lLOOP:0: B:18:0x0032\-\>B:20:0x0036\l|0x0036: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)])  (LINE:94)\l0x0037: CHECK_CAST (r2 I:android.view.View) = (android.view.View) (r2 I:??[OBJECT, ARRAY]) \l0x0039: INVOKE  (r3 I:int) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollX():int A[MD:():int (c)] (LINE:96)\l0x003d: NEG  (r3 I:int) = (r3 I:int) \l0x003e: CAST (r3 I:float) = (float) (r3 I:int) \l0x003f: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollY():int A[MD:():int (c)]\l0x0043: NEG  (r4 I:int) = (r4 I:int) \l0x0044: CAST (r4 I:float) = (float) (r4 I:int) \l0x0045: INVOKE  (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]), (r3 I:float), (r4 I:float) type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)]\l0x0048: INVOKE  (r3 I:android.graphics.Matrix) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getMatrix():android.graphics.Matrix A[MD:():android.graphics.Matrix (c)] (LINE:97)\l0x004c: INVOKE  (r3 I:android.graphics.Matrix), (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.Matrix.mapRect(android.graphics.RectF):boolean A[MD:(android.graphics.RectF):boolean (c)]\l0x004f: INVOKE  (r3 I:int) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:98)\l0x0053: CAST (r3 I:float) = (float) (r3 I:int) \l0x0054: INVOKE  (r4 I:int) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0058: CAST (r4 I:float) = (float) (r4 I:int) \l0x0059: INVOKE  (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]), (r3 I:float), (r4 I:float) type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)]\l0x005c: INVOKE  (r1 I:android.view.ViewParent A[D('parent' android.view.ViewParent)]) = (r2 I:android.view.View A[D('parentView' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:100)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|0x0061: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:103)\l0x0062: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0064: INVOKE  (r3 I:android.view.View) = (r8 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRootView():android.view.View A[MD:():android.view.View (c)] (LINE:104)\l0x0068: INVOKE  (r3 I:android.view.View), (r2 I:int[] A[D('loc' int[])]) type: VIRTUAL call: android.view.View.getLocationOnScreen(int[]):void A[MD:(int[]):void (c)]\l0x006b: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:105)\l0x006c: AGET  (r3 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('loc' int[])]), (r3 I:??[int, short, byte, char]) \l0x006e: CAST (r3 I:float) = (float) (r3 I:int) \l0x006f: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0070: AGET  (r4 I:??[int, float, short, byte, char]) = (r2 I:??[int, float][] A[D('loc' int[])]), (r4 I:??[int, short, byte, char]) \l0x0072: CAST (r4 I:float) = (float) (r4 I:int) \l0x0073: INVOKE  (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]), (r3 I:float), (r4 I:float) type: VIRTUAL call: android.graphics.RectF.offset(float, float):void A[MD:(float, float):void (c)]\l0x0076: IGET  (r3 I:float) = (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:106)\l0x0078: INVOKE  (r3 I:int) = (r3 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x007c: IGET  (r4 I:float) = (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) android.graphics.RectF.top float \l0x007e: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0082: IGET  (r5 I:float) = (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) android.graphics.RectF.right float \l0x0084: INVOKE  (r5 I:int) = (r5 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0088: IGET  (r6 I:float) = (r0 I:android.graphics.RectF A[D('rect' android.graphics.RectF)]) android.graphics.RectF.bottom float \l0x008a: INVOKE  (r6 I:int) = (r6 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:107)\l0x008e: INVOKE  (r9 I:android.graphics.Rect A[D('epicenter' android.graphics.Rect)]), (r3 I:int), (r4 I:int), (r5 I:int), (r6 I:int) type: VIRTUAL call: android.graphics.Rect.set(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:106)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0091|RETURN\l|0x0091: RETURN    (LINE:108)\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentTransitionImpl.getBoundsOnScreen((r7 'this' I:androidx.fragment.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, THIS]), (r8 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.graphics.Rect A[D('epicenter' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x0036 \-\> B:18:0x0032, CROSS_EDGE: B:22:0x0091 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0039\-0x0060: r2 'parentView' Landroid\/view\/View;\l  0x000c\-0x0091: r0 'rect' Landroid\/graphics\/RectF;\l  0x0032\-0x0091: r1 'parent' Landroid\/view\/ViewParent;\l  0x0064\-0x0091: r2 'loc' [I\l  \-1 \-0x0091: r8 'view' Landroid\/view\/View;\l  \-1 \-0x0091: r9 'epicenter' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_18;
Node_23 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

