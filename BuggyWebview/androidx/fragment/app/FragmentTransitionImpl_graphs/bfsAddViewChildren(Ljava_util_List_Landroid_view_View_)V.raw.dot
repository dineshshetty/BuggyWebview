digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(Ljava\/util\/List;Landroid\/view\/View;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:358)\l0x0004: INVOKE  (r1 I:boolean) = \l  (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)])\l  (r9 I:android.view.View A[D('startView' android.view.View)])\l  (r0 I:int A[D('startIndex' int)])\l type: STATIC call: androidx.fragment.app.FragmentTransitionImpl.containedBeforeIndex(java.util.List, android.view.View, int):boolean A[MD:(java.util.List\<android.view.View\>, android.view.View, int):boolean (m)] (LINE:359)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x000b \l}"];
Node_33 [shape=record,label="{33\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:360)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|0x000b: INVOKE  (r1 I:java.lang.String) = (r9 I:android.view.View A[D('startView' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getTransitionName(android.view.View):java.lang.String A[MD:(android.view.View):java.lang.String (m)] (LINE:362)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0014 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: INVOKE  \l  (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)])\l  (r9 I:java.lang.Object A[D('startView' android.view.View)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:363)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0014|0x0014: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])  (LINE:365)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|LOOP_START\lLOOP:0: B:38:0x0015\-\>B:50:0x0045\l|0x0015: INVOKE  (r2 I:int) = (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x0019: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:52:0x0048 \l}"];
Node_40 [shape=record,label="{40\:\ 0x001b|0x001b: INVOKE  (r2 I:java.lang.Object) = (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)]), (r1 I:int A[D('index' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:366)\l0x001f: CHECK_CAST (r2 I:android.view.View) = (android.view.View) (r2 I:??[OBJECT, ARRAY]) \l0x0021: INSTANCE_OF  (r3 I:boolean) = (r2 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) android.view.ViewGroup  (LINE:367)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0023|0x0023: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0045 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0025|0x0025: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:368)\l0x0026: CHECK_CAST (r3 I:android.view.ViewGroup) = (android.view.ViewGroup) (r3 I:??[OBJECT, ARRAY]) \l0x0028: INVOKE  (r4 I:int) = (r3 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)] (LINE:369)\l0x002c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:370)\l}"];
Node_43 [shape=record,label="{43\:\ 0x002d|LOOP_START\lLOOP:1: B:43:0x002d\-\>B:49:0x0042\l|0x002d: IF  (r5 I:??[int, byte, short, char] A[D('childIndex' int)]) \>= (r4 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:54:0x0045 \l}"];
Node_44 [shape=record,label="{44\:\ 0x002f|0x002f: INVOKE  (r6 I:android.view.View) = (r3 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]), (r5 I:int A[D('childIndex' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:371)\l0x0033: INVOKE  (r7 I:boolean) = \l  (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)])\l  (r6 I:android.view.View A[D('child' android.view.View)])\l  (r0 I:int A[D('startIndex' int)])\l type: STATIC call: androidx.fragment.app.FragmentTransitionImpl.containedBeforeIndex(java.util.List, android.view.View, int):boolean A[MD:(java.util.List\<android.view.View\>, android.view.View, int):boolean (m)] (LINE:372)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|0x0037: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0042 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0039|0x0039: INVOKE  (r7 I:java.lang.String) = (r6 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getTransitionName(android.view.View):java.lang.String A[MD:(android.view.View):java.lang.String (m)] (LINE:373)\l}"];
Node_47 [shape=record,label="{47\:\ 0x003d|0x003d: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0042 \l}"];
Node_48 [shape=record,label="{48\:\ 0x003f|0x003f: INVOKE  \l  (r8 I:java.util.List A[D('views' java.util.List\<android.view.View\>)])\l  (r6 I:java.lang.Object A[D('child' android.view.View)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:374)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0042|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0042|LOOP_END\lLOOP:1: B:43:0x002d\-\>B:49:0x0042\l|0x0042: ARITH  (r5 I:int) = (r5 I:int A[D('childIndex' int)]) + (1 int)  (LINE:370)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0042|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x0042|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0045|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0045|LOOP_END\lLOOP:0: B:38:0x0015\-\>B:50:0x0045\l|0x0045: ARITH  (r1 I:int) = (r1 I:int A[D('index' int)]) + (1 int)  (LINE:365)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0045|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0048|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x0048|RETURN\l|0x0048: RETURN    (LINE:379)\l}"];
MethodNode[shape=record,label="{public static void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren((r8 I:java.util.List\<android.view.View\> A[D('views' java.util.List\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.view.View A[D('startView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:49:0x0042 \-\> B:43:0x002d, CROSS_EDGE: B:47:0x003d \-\> B:49:0x0042, CROSS_EDGE: B:45:0x0037 \-\> B:49:0x0042, BACK_EDGE: B:50:0x0045 \-\> B:38:0x0015, CROSS_EDGE: B:41:0x0023 \-\> B:50:0x0045, CROSS_EDGE: B:51:0x0048 \-\> B:30:?, CROSS_EDGE: B:35:0x000f \-\> B:37:0x0014\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0033\-0x0042: r6 'child' Landroid\/view\/View;\l  0x0021\-0x0045: r2 'view' Landroid\/view\/View;\l  0x0028\-0x0045: r3 'viewGroup' Landroid\/view\/ViewGroup;\l  0x002c\-0x0045: r4 'childCount' I\l  0x002d\-0x0045: r5 'childIndex' I\l  0x0015\-0x0048: r1 'index' I\l  0x0004\-0x0048: r0 'startIndex' I\l  0x0000\-0x0048: r8 'views' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroid\/view\/View;\>;\l  \-1 \-0x0048: r9 'startView' Landroid\/view\/View;\lSIGNATURE: (Ljava\/util\/List\<Landroid\/view\/View;\>;Landroid\/view\/View;)V\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_30;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_52;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_53;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_54;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_56;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_57;
Node_48 -> Node_55;
Node_55 -> Node_49;
Node_49 -> Node_43;
Node_57 -> Node_49;
Node_56 -> Node_49;
Node_54 -> Node_50;
Node_50 -> Node_38;
Node_53 -> Node_50;
Node_52 -> Node_51;
Node_51 -> Node_30;
}

