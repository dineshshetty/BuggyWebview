digraph "CFG forandroidx.fragment.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(Ljava\/util\/ArrayList;)Ljava\/util\/ArrayList;" {
subgraph cluster_Region_594575965 {
label = "R(3:1|(1:3)|5)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|java.util.ArrayList java.util.ArrayList\<java.lang.String\> r0 = new java.util.ArrayList\<\>()\lint int r1 = r6.size()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1513805433 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000a|LOOP_START\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:9:0x0000, B:11:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L3\l}"];
subgraph cluster_Region_1333522197 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000c|LOOP_END\lLOOP:0: B:10:0x000a\-\>B:11:0x000c\l|android.view.View android.view.View r3 = r6.get(r2)\lr0.add(androidx.core.view.ViewCompat.getTransitionName(r3))\landroidx.core.view.ViewCompat.setTransitionName(r3, null)\lr2++\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0020|RETURN\l|return r0\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0020|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public java.util.ArrayList\<java.lang.String\> androidx.fragment.app.FragmentTransitionImpl.prepareSetNameOverridesReordered((r5v0 'this' androidx.fragment.app.FragmentTransitionImpl A[IMMUTABLE_TYPE, THIS]), (r6v0 'sharedElementsIn' java.util.ArrayList\<android.view.View\> A[D('sharedElementsIn' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x000c \-\> B:10:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;)Ljava\/util\/ArrayList\<Ljava\/lang\/String;\>;\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_7 -> Node_9;
Node_13 -> Node_12;
}

