digraph "CFG forandroidx.fragment.app.SpecialEffectsController.Operation.cancel()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (isCanceled() == false) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007|r3.mIsCanceled = true\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010|if (r3.mSpecialEffectsSignals.isEmpty() == false) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0012|complete()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0031|RETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|java.util.ArrayList r0 = new java.util.ArrayList\<\>(r3.mSpecialEffectsSignals)\ljava.util.Iterator r1 = r0.iterator()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0021|LOOP_START\lLOOP:0: B:24:0x0021\-\>B:26:0x0027\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|if (r1.hasNext() == false) goto L13\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|LOOP_END\lLOOP:0: B:24:0x0021\-\>B:26:0x0027\l|androidx.core.os.CancellationSignal r2 = r1.next()\lr2.cancel()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{final void androidx.fragment.app.SpecialEffectsController.Operation.cancel((r3v0 'this' androidx.fragment.app.SpecialEffectsController$Operation A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0031 \-\> B:16:?, BACK_EDGE: B:26:0x0027 \-\> B:24:0x0021, CROSS_EDGE: B:25:0x0025 \-\> B:27:0x0031\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_27;
Node_27 -> Node_16;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

