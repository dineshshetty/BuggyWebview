digraph "CFG forandroidx.fragment.app.SpecialEffectsController.Operation.complete()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r2.mIsComplete == false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005}"];
Node_20 [shape=record,label="{20\:\ 0x000a|if (androidx.fragment.app.FragmentManager.isLoggingEnabled(2) == false) goto L8\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"SpecialEffectsController: \")\lr0.append(r2)\lr0.append(\" has called complete.\")\landroid.util.Log.v(\"FragmentManager\", r0.toString())\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|r2.mIsComplete = true\ljava.util.Iterator r0 = r2.mCompletionListeners.iterator()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|LOOP_START\lLOOP:0: B:23:0x0030\-\>B:25:0x0036\l}"];
Node_24 [shape=record,label="{24\:\ 0x0034|if (r0.hasNext() == false) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|LOOP_END\lLOOP:0: B:23:0x0030\-\>B:25:0x0036\l|java.lang.Runnable r1 = r0.next()\lr1.run()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0040|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.SpecialEffectsController.Operation.complete((r2v0 'this' androidx.fragment.app.SpecialEffectsController$Operation A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x0036 \-\> B:23:0x0030, CROSS_EDGE: B:26:0x0040 \-\> B:15:?, CROSS_EDGE: B:20:0x000a \-\> B:22:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.fragment.app.SpecialEffectsController.Operation.complete():void]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_23;
Node_27 -> Node_26;
Node_26 -> Node_15;
}

