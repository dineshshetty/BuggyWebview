digraph "CFG forandroidx.fragment.app.FragmentContainerView.drawChild(Landroid\/graphics\/Canvas;Landroid\/view\/View;J)Z" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r1 I:androidx.fragment.app.FragmentContainerView) androidx.fragment.app.FragmentContainerView.mDrawDisappearingViewsFirst boolean  (LINE:261)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|0x0004: IGET  (r0 I:java.util.ArrayList\<android.view.View\>) = (r1 I:androidx.fragment.app.FragmentContainerView) androidx.fragment.app.FragmentContainerView.mDisappearingFragmentChildren java.util.ArrayList \l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:262)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|0x000e: IGET  (r0 I:java.util.ArrayList\<android.view.View\>) = (r1 I:androidx.fragment.app.FragmentContainerView) androidx.fragment.app.FragmentContainerView.mDisappearingFragmentChildren java.util.ArrayList  (LINE:264)\l0x0010: INVOKE  (r0 I:boolean) = (r0 I:java.util.ArrayList), (r3 I:java.lang.Object A[D('child' android.view.View)]) type: VIRTUAL call: java.util.ArrayList.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0018 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0016|RETURN\l|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l0x0017: RETURN  (r0 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = \l  (r1 I:android.widget.FrameLayout)\l  (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r3 I:android.view.View A[D('child' android.view.View)])\l  (r4 I:long A[D('drawingTime' long)])\l type: SUPER call: android.widget.FrameLayout.drawChild(android.graphics.Canvas, android.view.View, long):boolean A[MD:(android.graphics.Canvas, android.view.View, long):boolean (c)] (LINE:268)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|RETURN\l|0x001c: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean androidx.fragment.app.FragmentContainerView.drawChild((r1 'this' I:androidx.fragment.app.FragmentContainerView A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('drawingTime' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:27:0x001c \-\> B:15:?, CROSS_EDGE: B:21:0x000c \-\> B:26:0x0018, CROSS_EDGE: B:19:0x0006 \-\> B:26:0x0018, CROSS_EDGE: B:17:0x0002 \-\> B:26:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001c: r2 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x001c: r3 'child' Landroid\/view\/View;\l  \-1 \-0x001c: r4 'drawingTime' J\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.drawChild(android.graphics.Canvas, android.view.View, long):boolean\}]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

