digraph "CFG forandroidx.fragment.app.FragmentContainerView.dispatchDraw(Landroid\/graphics\/Canvas;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (r4.mDrawDisappearingViewsFirst == false) goto L10\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004}"];
Node_18 [shape=record,label="{18\:\ 0x0006|if (r4.mDisappearingFragmentChildren == null) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|r0 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|LOOP_START\lLOOP:0: B:20:0x0009\-\>B:22:0x0011\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:19:0x0008, B:22:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x000f|if (r0 \>= r4.mDisappearingFragmentChildren.size()) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0011|LOOP_END\lLOOP:0: B:20:0x0009\-\>B:22:0x0011\l|super.drawChild(r5, r4.mDisappearingFragmentChildren.get(r0), getDrawingTime())\lint r0 = r0 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|super.dispatchDraw(r5)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.fragment.app.FragmentContainerView.dispatchDraw((r4v0 'this' androidx.fragment.app.FragmentContainerView A[IMMUTABLE_TYPE, THIS]), (r5v0 'canvas' android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:22:0x0011 \-\> B:20:0x0009, CROSS_EDGE: B:18:0x0006 \-\> B:23:0x0023, CROSS_EDGE: B:16:0x0002 \-\> B:23:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.dispatchDraw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_20;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

