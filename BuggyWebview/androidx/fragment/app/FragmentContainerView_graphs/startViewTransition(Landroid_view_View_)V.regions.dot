digraph "CFG forandroidx.fragment.app.FragmentContainerView.startViewTransition(Landroid\/view\/View;)V" {
subgraph cluster_Region_572740437 {
label = "R(2:(2:(1:5)|6)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_540731283 {
label = "IF [B:13:0x0004] THEN: R(2:(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0004|if (r2.getParent() == r1) goto L3\l}"];
subgraph cluster_Region_1969683960 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2145607183 {
label = "IF [B:15:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0008|if (r1.mTransitioningFragmentViews == null) goto L5\l}"];
subgraph cluster_Region_1197605725 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000a|r1.mTransitioningFragmentViews = new java.util.ArrayList\<\>()\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0011|r1.mTransitioningFragmentViews.add(r2)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0016|super.startViewTransition(r2)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0019}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.fragment.app.FragmentContainerView.startViewTransition((r1v0 'this' androidx.fragment.app.FragmentContainerView A[IMMUTABLE_TYPE, THIS]), (r2v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0008 \-\> B:17:0x0011, CROSS_EDGE: B:13:0x0004 \-\> B:18:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.startViewTransition(android.view.View):void\}]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_19 -> Node_11;
}

