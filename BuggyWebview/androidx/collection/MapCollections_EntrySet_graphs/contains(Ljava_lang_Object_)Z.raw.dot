digraph "CFG forandroidx.collection.MapCollections.EntrySet.contains(Ljava\/lang\/Object;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r5 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)]) java.util.Map$Entry  (LINE:189)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0006 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|RETURN\l|0x0005: RETURN  (r1 I:boolean)  (LINE:190)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)])  (LINE:191)\l0x0007: CHECK_CAST (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:??[OBJECT, ARRAY]) \l0x0009: IGET  (r2 I:androidx.collection.MapCollections) = (r4 I:androidx.collection.MapCollections$EntrySet A[D('this' androidx.collection.MapCollections\<K, V\>$EntrySet)]) androidx.collection.MapCollections.EntrySet.this$0 androidx.collection.MapCollections  (LINE:192)\l0x000b: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('e' java.util.Map$Entry\<?, ?\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)]\l0x000f: INVOKE  (r2 I:int) = (r2 I:androidx.collection.MapCollections), (r3 I:java.lang.Object) type: VIRTUAL call: androidx.collection.MapCollections.colIndexOfKey(java.lang.Object):int A[MD:(java.lang.Object):int (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:18:0x0016  (LINE:193)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|RETURN\l|0x0015: RETURN  (r1 I:boolean)  (LINE:194)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0016|0x0016: IGET  (r1 I:androidx.collection.MapCollections) = (r4 I:androidx.collection.MapCollections$EntrySet A[D('this' androidx.collection.MapCollections\<K, V\>$EntrySet)]) androidx.collection.MapCollections.EntrySet.this$0 androidx.collection.MapCollections  (LINE:196)\l0x0018: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0019: INVOKE  (r1 I:java.lang.Object) = (r1 I:androidx.collection.MapCollections), (r2 I:int A[D('index' int)]), (r3 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l0x001d: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('e' java.util.Map$Entry\<?, ?\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:197)\l0x0021: INVOKE  (r3 I:boolean) = (r1 I:java.lang.Object A[D('foundVal' java.lang.Object)]), (r3 I:java.lang.Object) type: STATIC call: androidx.collection.ContainerHelpers.equal(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|RETURN\l|0x0025: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.MapCollections.EntrySet.contains((r4 'this' I:androidx.collection.MapCollections$EntrySet A[D('this' androidx.collection.MapCollections\<K, V\>$EntrySet), IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0015 \-\> B:11:?, CROSS_EDGE: B:19:0x0025 \-\> B:11:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0025: r0 'e' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<**\>;\l  0x001d\-0x0025: r1 'foundVal' Ljava\/lang\/Object;\l  0x0013\-0x0025: r2 'index' I\l  0x0000\-0x0025: r4 'this' Landroidx\/collection\/MapCollections$EntrySet;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>.EntrySet;\l  \-1 \-0x0025: r5 'o' Ljava\/lang\/Object;\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.contains(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

