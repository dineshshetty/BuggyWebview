digraph "CFG forandroidx.collection.MapCollections.EntrySet.containsAll(Ljava\/util\/Collection;)Z" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:java.util.Iterator) = (r3 I:java.util.Collection A[D('collection' java.util.Collection\<?\>)]) type: INTERFACE call: java.util.Collection.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:202)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|LOOP_START\lLOOP:0: B:16:0x0004\-\>B:19:0x0012\l|0x0004: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('it' java.util.Iterator\<?\>)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:203)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0016 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('it' java.util.Iterator\<?\>)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:204)\l0x000e: INVOKE  (r1 I:boolean) = \l  (r2 I:androidx.collection.MapCollections$EntrySet A[D('this' androidx.collection.MapCollections\<K, V\>$EntrySet)])\l  (r1 I:java.lang.Object)\l type: VIRTUAL call: androidx.collection.MapCollections.EntrySet.contains(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|LOOP_END\lLOOP:0: B:16:0x0004\-\>B:19:0x0012\l|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0004 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|RETURN\l|0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:205)\l0x0015: RETURN  (r1 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|RETURN\l|0x0016: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:208)\l0x0017: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.MapCollections.EntrySet.containsAll((r2 'this' I:androidx.collection.MapCollections$EntrySet A[D('this' androidx.collection.MapCollections\<K, V\>$EntrySet), IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Collection\<?\> A[D('collection' java.util.Collection\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x0012 \-\> B:16:0x0004, CROSS_EDGE: B:23:0x0017 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Ljava\/util\/Collection\<*\>;)Z\lDebug Info:\l  0x0004\-0x0017: r0 'it' Ljava\/util\/Iterator;, signature: Ljava\/util\/Iterator\<*\>;\l  0x0000\-0x0017: r2 'this' Landroidx\/collection\/MapCollections$EntrySet;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>.EntrySet;\l  0x0000\-0x0017: r3 'collection' Ljava\/util\/Collection;, signature: Ljava\/util\/Collection\<*\>;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.containsAll(java.util.Collection\<?\>):boolean\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_16;
Node_19 -> Node_24[style=dashed];
Node_24 -> Node_20;
Node_20 -> Node_14;
Node_25 -> Node_22;
Node_22 -> Node_14;
}

