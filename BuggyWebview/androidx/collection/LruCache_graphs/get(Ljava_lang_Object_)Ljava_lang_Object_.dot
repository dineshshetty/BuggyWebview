digraph "CFG forandroidx.collection.LruCache.get(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_37 [shape=record,label="{37\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x0000|if (r5 == null) goto L34\l}"];
Node_40 [shape=record,label="{40\:\ 0x0002|monitor\-enter(r4)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:41:0x0003, B:43:0x000b, B:44:0x0011, B:46:0x0013, B:47:0x0019), top: B:71:0x0003 \}\lCatch: all \-\> 0x0052\l|java.lang.Object r0 = r4.map.get(r5)     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_42 [shape=record,label="{42\:\ 0x0009|if (r0 == null) goto L10\l}"];
Node_43 [shape=record,label="{43\:\ 0x000b|TryCatch #0 \{, blocks: (B:41:0x0003, B:43:0x000b, B:44:0x0011, B:46:0x0013, B:47:0x0019), top: B:71:0x0003 \}\lCatch: all \-\> 0x0052\l|r4.hitCount = r4.hitCount + 1     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_44 [shape=record,label="{44\:\ 0x0011|TryCatch #0 \{, blocks: (B:41:0x0003, B:43:0x000b, B:44:0x0011, B:46:0x0013, B:47:0x0019), top: B:71:0x0003 \}\lCatch: all \-\> 0x0052\l|monitor\-exit(r4)     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_45 [shape=record,label="{45\:\ 0x0012|RETURN\l|return r0\l}"];
Node_38 [shape=record,label="{38\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,label="{46\:\ 0x0013|TryCatch #0 \{, blocks: (B:41:0x0003, B:43:0x000b, B:44:0x0011, B:46:0x0013, B:47:0x0019), top: B:71:0x0003 \}\lCatch: all \-\> 0x0052\l|r4.missCount = r4.missCount + 1     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_47 [shape=record,label="{47\:\ 0x0019|TRY_LEAVE\lTryCatch #0 \{, blocks: (B:41:0x0003, B:43:0x000b, B:44:0x0011, B:46:0x0013, B:47:0x0019), top: B:71:0x0003 \}\lCatch: all \-\> 0x0052\l|monitor\-exit(r4)     \/\/ Catch: java.lang.Throwable \-\> L52\l}"];
Node_48 [shape=record,label="{48\:\ 0x001a|java.lang.Object r1 = create(r5)\l}"];
Node_49 [shape=record,label="{49\:\ 0x001e|if (r1 != null) goto L15\l}"];
Node_50 [shape=record,label="{50\:\ 0x0020|RETURN\l|return null\l}"];
Node_52 [shape=record,label="{52\:\ 0x0022|monitor\-enter(r4)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0023|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_53 [shape=record,label="{53\:\ 0x0023|TRY_ENTER\lTryCatch #1 \{, blocks: (B:53:0x0023, B:55:0x0032, B:57:0x0041, B:56:0x0038), top: B:72:0x0023 \}\lCatch: all \-\> 0x004f\l|r4.createCount = r4.createCount + 1     \/\/ Catch: java.lang.Throwable \-\> L4f\ljava.lang.Object r2 = r4.map.put(r5, r1)     \/\/ Catch: java.lang.Throwable \-\> L4f\l}"];
Node_54 [shape=record,label="{54\:\ 0x0030|if (r2 == null) goto L27\l}"];
Node_55 [shape=record,label="{55\:\ 0x0032|TryCatch #1 \{, blocks: (B:53:0x0023, B:55:0x0032, B:57:0x0041, B:56:0x0038), top: B:72:0x0023 \}\lCatch: all \-\> 0x004f\l|r4.map.put(r5, r2)     \/\/ Catch: java.lang.Throwable \-\> L4f\l}"];
Node_57 [shape=record,label="{57\:\ 0x0041|TRY_LEAVE\lTryCatch #1 \{, blocks: (B:53:0x0023, B:55:0x0032, B:57:0x0041, B:56:0x0038), top: B:72:0x0023 \}\lCatch: all \-\> 0x004f\l|monitor\-exit(r4)     \/\/ Catch: java.lang.Throwable \-\> L4f\l}"];
Node_58 [shape=record,label="{58\:\ 0x0042|if (r2 == null) goto L24\l}"];
Node_59 [shape=record,label="{59\:\ 0x0044|entryRemoved(false, r5, r1, r2)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0048|RETURN\l|return r2\l}"];
Node_61 [shape=record,label="{61\:\ 0x0049|trimToSize(r4.maxSize)\l}"];
Node_62 [shape=record,label="{62\:\ 0x004e|RETURN\l|return r1\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x0038|TryCatch #1 \{, blocks: (B:53:0x0023, B:55:0x0032, B:57:0x0041, B:56:0x0038), top: B:72:0x0023 \}\lCatch: all \-\> 0x004f\l|r4.size = r4.size + safeSizeOf(r5, r1)     \/\/ Catch: java.lang.Throwable \-\> L4f\l}"];
Node_63 [shape=record,label="{63\:\ 0x004f|REMOVE\lExcHandler: all \-\> 0x004f\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_64 [shape=record,label="{64\:\ 0x0050|TRY_ENTER\lTRY_LEAVE\lREMOVE\lCatch: all \-\> 0x004f\l}"];
Node_65 [shape=record,label="{65\:\ 0x0051|REMOVE\l|throw r2\l}"];
Node_66 [shape=record,label="{66\:\ 0x0052|REMOVE\lExcHandler: all \-\> 0x0052\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_67 [shape=record,label="{67\:\ 0x0053|TRY_ENTER\lTRY_LEAVE\lREMOVE\lCatch: all \-\> 0x0052\l}"];
Node_68 [shape=record,label="{68\:\ 0x0054|REMOVE\l|throw r0\l}"];
Node_69 [shape=record,label="{69\:\ 0x0055}"];
Node_70 [shape=record,label="{70\:\ 0x005c|throw new java.lang.NullPointerException(\"key == null\")\l}"];
MethodNode[shape=record,label="{public final V androidx.collection.LruCache.get((r4v0 'this' androidx.collection.LruCache\<K, V\> A[D('this' androidx.collection.LruCache\<K, V\>), IMMUTABLE_TYPE, THIS]), (r5v0 'key' K A[D('key' K), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:51:0x0021 \-\> B:38:?, CROSS_EDGE: B:60:0x0048 \-\> B:38:?, CROSS_EDGE: B:62:0x004e \-\> B:38:?, CROSS_EDGE: B:65:0x0051 \-\> B:38:?, CROSS_EDGE: B:56:0x0038 \-\> B:57:0x0041, CROSS_EDGE: B:72:0x0023 \-\> B:63:0x004f, CROSS_EDGE: B:68:0x0054 \-\> B:38:?, CROSS_EDGE: B:70:0x005c \-\> B:38:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)TV;\l}"];
MethodNode -> Node_37;Node_37 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_69;
Node_40 -> Node_71;
Node_71 -> Node_41;
Node_71 -> Node_66;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_38;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_38;
Node_52 -> Node_72;
Node_72 -> Node_53;
Node_72 -> Node_63;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_73;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_38;
Node_61 -> Node_62;
Node_62 -> Node_38;
Node_73 -> Node_63;
Node_56 -> Node_57;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_38;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_38;
Node_69 -> Node_70;
Node_70 -> Node_38;
}

