digraph "CFG forandroidx.collection.LruCache.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' K)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0035  (LINE:138)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|0x0002: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' V)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0035 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: MONITOR_ENTER  (r3 I:??[OBJECT, ARRAY] A[D('this' androidx.collection.LruCache\<K, V\>)])  (LINE:143)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0032, blocks: (B:25:0x0005, B:27:0x001c, B:28:0x0025), top: B:38:0x0005 \}\lCatch: all \-\> 0x0032\l|0x0005: IGET  (r0 I:int) = (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.putCount int A[Catch: all \-\> 0x0032, TRY_ENTER] (LINE:144)\l0x0007: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch: all \-\> 0x0032]\l0x0009: IPUT  (r0 I:int), (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.putCount int A[Catch: all \-\> 0x0032]\l0x000b: IGET  (r0 I:int) = (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0032] (LINE:145)\l0x000d: INVOKE  (r1 I:int) = \l  (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)])\l  (r4 I:java.lang.Object A[D('key' K)])\l  (r5 I:java.lang.Object A[D('value' V)])\l type: DIRECT call: androidx.collection.LruCache.safeSizeOf(java.lang.Object, java.lang.Object):int A[Catch: all \-\> 0x0032, MD:(K, V):int (m)]\l0x0011: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) A[Catch: all \-\> 0x0032]\l0x0012: IPUT  (r0 I:int), (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0032]\l0x0014: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.map java.util.LinkedHashMap A[Catch: all \-\> 0x0032] (LINE:146)\l0x0016: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedHashMap), (r4 I:java.lang.Object A[D('key' K)]), (r5 I:java.lang.Object A[D('value' V)]) type: VIRTUAL call: java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0032, MD:(K, V):V (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previous' V)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0025  (LINE:147)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|TryCatch #0 \{all \-\> 0x0032, blocks: (B:25:0x0005, B:27:0x001c, B:28:0x0025), top: B:38:0x0005 \}\lCatch: all \-\> 0x0032\l|0x001c: IGET  (r1 I:int) = (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0032] (LINE:148)\l0x001e: INVOKE  (r2 I:int) = \l  (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)])\l  (r4 I:java.lang.Object A[D('key' K)])\l  (r0 I:java.lang.Object A[D('previous' V)])\l type: DIRECT call: androidx.collection.LruCache.safeSizeOf(java.lang.Object, java.lang.Object):int A[Catch: all \-\> 0x0032, MD:(K, V):int (m)]\l0x0022: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) A[Catch: all \-\> 0x0032]\l0x0023: IPUT  (r1 I:int), (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0032]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0032, blocks: (B:25:0x0005, B:27:0x001c, B:28:0x0025), top: B:38:0x0005 \}\lCatch: all \-\> 0x0032\l|0x0025: MONITOR_EXIT  (r3 I:??[OBJECT, ARRAY] A[D('this' androidx.collection.LruCache\<K, V\>)]) A[Catch: all \-\> 0x0032, TRY_LEAVE] (LINE:150)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previous' V)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x002c  (LINE:152)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|0x0028: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:153)\l0x0029: INVOKE  \l  (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)])\l  (r1 I:boolean)\l  (r4 I:java.lang.Object A[D('key' K)])\l  (r0 I:java.lang.Object A[D('previous' V)])\l  (r5 I:java.lang.Object A[D('value' V)])\l type: VIRTUAL call: androidx.collection.LruCache.entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object):void A[MD:(boolean, K, V, V):void (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x002c|0x002c: IGET  (r1 I:int) = (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.maxSize int  (LINE:156)\l0x002e: INVOKE  (r3 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]), (r1 I:int) type: VIRTUAL call: androidx.collection.LruCache.trimToSize(int):void A[MD:(int):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|RETURN\l|0x0031: RETURN  (r0 I:V A[D('previous' V)])  (LINE:157)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,label="{33\:\ 0x0032|ExcHandler: all \-\> 0x0032\l|0x0032: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0032] (LINE:150)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0033|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x0032\l}"];
Node_35 [shape=record,label="{35\:\ 0x0034|0x0034: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0035|0x0035: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException  (LINE:139)\l0x0037: CONST_STR  (r1 I:java.lang.String) =  \"key == null \|\| value == null\" \l0x0039: INVOKE  (r0 I:java.lang.NullPointerException), (r1 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|0x003c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final V androidx.collection.LruCache.put((r3 'this' I:androidx.collection.LruCache\<K, V\> A[D('this' androidx.collection.LruCache\<K, V\>), IMMUTABLE_TYPE, THIS]), (r4 I:K A[D('key' K), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:V A[D('value' V), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:29:0x0026 \-\> B:31:0x002c, CROSS_EDGE: B:35:0x0034 \-\> B:21:?, CROSS_EDGE: B:26:0x001a \-\> B:28:0x0025, CROSS_EDGE: B:38:0x0005 \-\> B:33:0x0032, CROSS_EDGE: B:37:0x003c \-\> B:21:?, CROSS_EDGE: B:22:0x0000 \-\> B:36:0x0035\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0032, blocks: (B:25:0x0005, B:27:0x001c, B:28:0x0025), top: B:38:0x0005 \}\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\lDebug Info:\l  0x001a\-0x0032: r0 'previous' Ljava\/lang\/Object;, signature: TV;\l  0x0000\-0x003c: r3 'this' Landroidx\/collection\/LruCache;, signature: Landroidx\/collection\/LruCache\<TK;TV;\>;\l  0x0000\-0x003c: r4 'key' Ljava\/lang\/Object;, signature: TK;\l  0x0000\-0x003c: r5 'value' Ljava\/lang\/Object;, signature: TV;\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_36;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_36;
Node_24 -> Node_38;
Node_38 -> Node_25;
Node_38 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_39;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_21;
Node_39 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
}

