digraph "CFG forandroidx.collection.LruCache.remove(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
subgraph cluster_Region_567061419 {
label = "R(1:(2:(1:17)|(3:2|(1:9)|10))) | DECL_VAR: V previous\l";
node [shape=record,color=blue];
subgraph cluster_Region_1209947564 {
label = "R(2:(1:17)|(3:2|(1:9)|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_144806611 {
label = "IF [B:20:0x0000] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0000|if (r4 == null) goto L16\l}"];
subgraph cluster_Region_712621303 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0027|throw new java.lang.NullPointerException(\"key == null\")\l}"];
}
}
subgraph cluster_Region_704547509 {
label = "R(3:2|(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1848429536 {
label = "Synchronized:R(2:2|(2:4|(1:6)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0002}"];
subgraph cluster_Region_2130707339 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x000b, B:25:0x0014), top: B:34:0x0003 \}\lCatch: all \-\> 0x001d\l|java.lang.Object r0 = r3.map.remove(r4)     \/\/ Catch: java.lang.Throwable \-\> L1d\l}"];
subgraph cluster_IfRegion_1308746725 {
label = "IF [B:23:0x0009] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0009|if (r0 != null) goto L6\l}"];
subgraph cluster_Region_825833947 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000b|TryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x000b, B:25:0x0014), top: B:34:0x0003 \}\lCatch: all \-\> 0x001d\l|r3.size \-= safeSizeOf(r4, r0)\l}"];
}
}
}
}
subgraph cluster_IfRegion_398596007 {
label = "IF [B:26:0x0015] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0015|if (r0 != null) goto L9\l}"];
subgraph cluster_Region_1755402895 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0017|entryRemoved(false, r4, r0, null)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x001c|RETURN\l|return r0\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0014|TRY_LEAVE\lDONT_GENERATE\lTryCatch #0 \{, blocks: (B:22:0x0003, B:24:0x000b, B:25:0x0014), top: B:34:0x0003 \}\lCatch: all \-\> 0x001d\l|monitor\-exit()     \/\/ Catch: java.lang.Throwable \-\> L1d\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001d|REMOVE\lExcHandler: all \-\> 0x001d\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x001e|TRY_ENTER\lTRY_LEAVE\lREMOVE\lCatch: all \-\> 0x001d\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x001f|REMOVE\l|throw r0\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0020}"];
MethodNode[shape=record,label="{public final V androidx.collection.LruCache.remove((r3v0 'this' androidx.collection.LruCache\<K, V\> A[D('this' androidx.collection.LruCache\<K, V\>), IMMUTABLE_TYPE, THIS]), (r4v0 'key' K A[D('key' K), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0015 \-\> B:28:0x001c, CROSS_EDGE: B:31:0x001f \-\> B:19:?, CROSS_EDGE: B:23:0x0009 \-\> B:25:0x0014, CROSS_EDGE: B:34:0x0003 \-\> B:29:0x001d, CROSS_EDGE: B:33:0x0027 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;)TV;\l}"];
MethodNode -> Node_18;Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_33 -> Node_19;
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_19;
Node_18 -> Node_20;
Node_34 -> Node_22;
Node_34 -> Node_29;
Node_25 -> Node_26;
Node_25 -> Node_35;
Node_35 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_19;
Node_32 -> Node_33;
}

