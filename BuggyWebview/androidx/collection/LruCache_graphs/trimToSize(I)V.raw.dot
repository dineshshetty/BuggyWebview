digraph "CFG forandroidx.collection.LruCache.trimToSize(I)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|LOOP_START\lLOOP:0: B:31:0x0000\-\>B:45:0x004b\l|0x0000: MONITOR_ENTER  (r5 I:??[OBJECT, ARRAY] A[D('this' androidx.collection.LruCache\<K, V\>)])  (LINE:171)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0001: IGET  (r0 I:int) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0071, TRY_ENTER] (LINE:172)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:54:0x0052 \l}"];
Node_34 [shape=record,label="{34\:\ 0x0005|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0005: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.map java.util.LinkedHashMap A[Catch: all \-\> 0x0071]\l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedHashMap) type: VIRTUAL call: java.util.LinkedHashMap.isEmpty():boolean A[Catch: all \-\> 0x0071, MD:():boolean (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0011 \l}"];
Node_36 [shape=record,label="{36\:\ 0x000d|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x000d: IGET  (r0 I:int) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0071]\l}"];
Node_37 [shape=record,label="{37\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0052 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0052|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0052|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0052: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch: all \-\> 0x0071] (LINE:173)\l0x0054: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch: all \-\> 0x0071]\l0x0056: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[Catch: all \-\> 0x0071, MD:():void (c)]\l0x0059: INVOKE  (r2 I:java.lang.Class) = (r5 I:java.lang.Object A[D('this' androidx.collection.LruCache\<K, V\>)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: all \-\> 0x0071, MD:():java.lang.Class\<?\> (c)]\l0x005d: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[Catch: all \-\> 0x0071, MD:():java.lang.String (c)]\l0x0061: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0071, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0064: CONST_STR  (r2 I:java.lang.String) =  \".sizeOf() is reporting inconsistent results!\" \l0x0066: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[Catch: all \-\> 0x0071, MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0069: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[Catch: all \-\> 0x0071, MD:():java.lang.String (c)]\l0x006d: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[Catch: all \-\> 0x0071, MD:(java.lang.String):void (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x0070|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0070: THROW  (r0 I:java.lang.Throwable) A[Catch: all \-\> 0x0071]\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0011|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0011: IGET  (r0 I:int) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0071] (LINE:177)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0013|0x0013: IF  (r0 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char] A[D('maxSize' int)])  \-\> B:56:0x0050 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0015|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0015: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.map java.util.LinkedHashMap A[Catch: all \-\> 0x0071]\l0x0017: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedHashMap) type: VIRTUAL call: java.util.LinkedHashMap.isEmpty():boolean A[Catch: all \-\> 0x0071, MD:():boolean (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x001e \l}"];
Node_43 [shape=record,label="{43\:\ 0x001e|TryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x001e: IGET  (r0 I:java.util.LinkedHashMap\<K, V\>) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.map java.util.LinkedHashMap A[Catch: all \-\> 0x0071] (LINE:181)\l0x0020: INVOKE  (r0 I:java.util.Set) = (r0 I:java.util.LinkedHashMap) type: VIRTUAL call: java.util.LinkedHashMap.entrySet():java.util.Set A[Catch: all \-\> 0x0071, MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)]\l0x0024: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[Catch: all \-\> 0x0071, MD:():java.util.Iterator\<E\> (c)]\l0x0028: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: all \-\> 0x0071, MD:():E (c)]\l0x002c: CHECK_CAST (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0071]\l0x002e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('toEvict' java.util.Map$Entry\<K, V\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[Catch: all \-\> 0x0071, MD:():K (c)] (LINE:182)\l0x0032: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('toEvict' java.util.Map$Entry\<K, V\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[Catch: all \-\> 0x0071, MD:():V (c)] (LINE:183)\l0x0036: IGET  (r3 I:java.util.LinkedHashMap\<K, V\>) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.map java.util.LinkedHashMap A[Catch: all \-\> 0x0071] (LINE:184)\l0x0038: INVOKE  (r3 I:java.util.LinkedHashMap), (r1 I:java.lang.Object A[D('key' K)]) type: VIRTUAL call: java.util.LinkedHashMap.remove(java.lang.Object):java.lang.Object A[Catch: all \-\> 0x0071, MD:(java.lang.Object):V (c)]\l0x003b: IGET  (r3 I:int) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0071] (LINE:185)\l0x003d: INVOKE  (r4 I:int) = \l  (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)])\l  (r1 I:java.lang.Object A[D('key' K)])\l  (r2 I:java.lang.Object A[D('value' V)])\l type: DIRECT call: androidx.collection.LruCache.safeSizeOf(java.lang.Object, java.lang.Object):int A[Catch: all \-\> 0x0071, MD:(K, V):int (m)]\l0x0041: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) A[Catch: all \-\> 0x0071]\l0x0042: IPUT  (r3 I:int), (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.size int A[Catch: all \-\> 0x0071]\l0x0044: IGET  (r3 I:int) = (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.evictionCount int A[Catch: all \-\> 0x0071] (LINE:186)\l0x0046: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0047: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) A[Catch: all \-\> 0x0071]\l0x0048: IPUT  (r3 I:int), (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)]) androidx.collection.LruCache.evictionCount int A[Catch: all \-\> 0x0071]\l}"];
Node_44 [shape=record,label="{44\:\ 0x004a|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x004a: MONITOR_EXIT  (r5 I:??[OBJECT, ARRAY] A[D('this' androidx.collection.LruCache\<K, V\>)]) A[Catch: all \-\> 0x0071, TRY_LEAVE] (LINE:187)\l}"];
Node_45 [shape=record,label="{45\:\ 0x004b|LOOP_END\lLOOP:0: B:31:0x0000\-\>B:45:0x004b\l|0x004b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:189)\l0x004c: INVOKE  \l  (r5 I:androidx.collection.LruCache A[D('this' androidx.collection.LruCache\<K, V\>)])\l  (r4 I:boolean)\l  (r1 I:java.lang.Object A[D('key' K)])\l  (r2 I:java.lang.Object A[D('value' V)])\l  (r0 I:java.lang.Object)\l type: VIRTUAL call: androidx.collection.LruCache.entryRemoved(boolean, java.lang.Object, java.lang.Object, java.lang.Object):void A[MD:(boolean, K, V, V):void (m)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x001d|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x001d|0x001d: GOTO  \-\> 0x0050 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0050|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\lCatch: all \-\> 0x0071\l|0x0050: MONITOR_EXIT  (r5 I:??[OBJECT, ARRAY] A[D('this' androidx.collection.LruCache\<K, V\>)]) A[Catch: all \-\> 0x0071, TRY_ENTER] (LINE:178)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0051|RETURN\l|0x0051: RETURN    (LINE:191)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0050|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0052|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0071|ExcHandler: all \-\> 0x0071\l|0x0071: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0071] (LINE:187)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0072|TRY_LEAVE\lCatch: all \-\> 0x0071\l}"];
Node_52 [shape=record,label="{52\:\ 0x0073|0x0073: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.collection.LruCache.trimToSize((r5 'this' I:androidx.collection.LruCache\<K, V\> A[D('this' androidx.collection.LruCache\<K, V\>), IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('maxSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lUSE_LINES_HINTS\lBACK_EDGE: B:45:0x004b \-\> B:31:0x0000, CROSS_EDGE: B:39:0x0013 \-\> B:46:0x0050, CROSS_EDGE: B:49:0x0070 \-\> B:30:?, CROSS_EDGE: B:35:0x000b \-\> B:38:0x0011, CROSS_EDGE: B:33:0x0003 \-\> B:48:0x0052, CROSS_EDGE: B:52:0x0073 \-\> B:30:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002e\-0x004a: r0 'toEvict' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<TK;TV;\>;\l  0x0032\-0x004f: r1 'key' Ljava\/lang\/Object;, signature: TK;\l  0x0036\-0x004f: r2 'value' Ljava\/lang\/Object;, signature: TV;\l  \-1 \-0x0070: r6 'maxSize' I\l  0x0000\-0x0073: r5 'this' Landroidx\/collection\/LruCache;, signature: Landroidx\/collection\/LruCache\<TK;TV;\>;\l  0x0071\-0x0073: r6 'maxSize' I\lTYPE_VARS: [V, K]\lTryCatch #0 \{all \-\> 0x0071, blocks: (B:32:0x0001, B:34:0x0005, B:36:0x000d, B:38:0x0011, B:40:0x0015, B:43:0x001e, B:44:0x004a, B:46:0x0050, B:48:0x0052, B:49:0x0070), top: B:53:0x0001 \}\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_53;
Node_53 -> Node_32;
Node_53 -> Node_50;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_54;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_55;
Node_55 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_30;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_56;
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_57[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_31;
Node_57 -> Node_42;
Node_42 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_30;
Node_56 -> Node_46;
Node_54 -> Node_48;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_30;
}

