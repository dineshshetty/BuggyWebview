digraph "CFG forandroidx.collection.SimpleArrayMap.putAll(Landroidx\/collection\/SimpleArrayMap;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|int r0 = r6.mSize\lensureCapacity(r5.mSize + r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|if (r5.mSize != 0) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|if (r0 \<= 0) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|java.lang.System.arraycopy(r6.mHashes, 0, r5.mHashes, 0, r0)\ljava.lang.System.arraycopy(r6.mArray, 0, r5.mArray, 0, r0 \<\< 1)\lr5.mSize = r0\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0033|RETURN\lORIG_RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|r1 = 0\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|LOOP_START\lLOOP:0: B:20:0x0023\-\>B:21:0x0025\lPHI: r1 \l  PHI: (r1v4 'i' int) = (r1v3 'i' int), (r1v5 'i' int) binds: [B:19:0x0022, B:21:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|LOOP_END\lLOOP:0: B:20:0x0023\-\>B:21:0x0025\l|put(r6.keyAt(r1), r6.valueAt(r1))\lint r1 = r1 + 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x0033|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.collection.SimpleArrayMap.putAll((r5v0 'this' androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r6v0 'array' androidx.collection.SimpleArrayMap\<? extends K, ? extends V\> A[D('array' androidx.collection.SimpleArrayMap\<? extends K, ? extends V\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x000c \-\> B:22:0x0033, BACK_EDGE: B:21:0x0025 \-\> B:20:0x0023, CROSS_EDGE: B:20:0x0023 \-\> B:22:0x0033\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (Landroidx\/collection\/SimpleArrayMap\<+TK;+TV;\>;)V\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_24;
Node_24 -> Node_14;
Node_22 -> Node_14;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_20;
Node_23 -> Node_25;
Node_25 -> Node_14;
}

