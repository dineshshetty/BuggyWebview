digraph "CFG forandroidx.collection.SimpleArrayMap.indexOfNull()I" {
Node_36 [shape=record,label="{36\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0000|int r0 = r6.mSize\l}"];
Node_39 [shape=record,label="{39\:\ 0x0002|if (r0 != 0) goto L5\l}"];
Node_40 [shape=record,label="{40\:\ 0x0004|RETURN\l|return \-1\l}"];
Node_37 [shape=record,label="{37\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0006|int r1 = binarySearchHashes(r6.mHashes, r0, 0)\l}"];
Node_43 [shape=record,label="{43\:\ 0x000d|if (r1 \>= 0) goto L8\l}"];
Node_44 [shape=record,label="{44\:\ 0x000f|RETURN\l|return r1\l}"];
Node_45 [shape=record,label="{45\:\ 0x0010}"];
Node_46 [shape=record,label="{46\:\ 0x0016|if (r6.mArray[r1 \<\< 1] != null) goto L11\l}"];
Node_47 [shape=record,label="{47\:\ 0x0018|RETURN\l|return r1\l}"];
Node_48 [shape=record,label="{48\:\ 0x0019|int r2 = r1 + 1\l}"];
Node_49 [shape=record,label="{49\:\ 0x001b|LOOP_START\lLOOP:0: B:49:0x001b\-\>B:55:0x002c\lPHI: r2 \l  PHI: (r2v4 'end' int) = (r2v3 'end' int), (r2v5 'end' int) binds: [B:48:0x0019, B:55:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L34\l}"];
Node_50 [shape=record,label="{50\:\ 0x001d}"];
Node_51 [shape=record,label="{51\:\ 0x0021|if (r6.mHashes[r2] != 0) goto L20\l}"];
Node_52 [shape=record,label="{52\:\ 0x0023}"];
Node_53 [shape=record,label="{53\:\ 0x0029|if (r6.mArray[r2 \<\< 1] != null) goto L17\l}"];
Node_55 [shape=record,label="{55\:\ 0x002c|LOOP_END\lLOOP:0: B:49:0x001b\-\>B:55:0x002c\l|int r2 = r2 + 1\l}"];
Node_67 [shape=record,label="{67\:\ 0x002b|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x002b|RETURN\l|return r2\l}"];
Node_66 [shape=record,label="{66\:\ 0x002f|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|int r3 = r1 + (\-1)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0031|LOOP_START\lLOOP:1: B:57:0x0031\-\>B:63:0x0042\lPHI: r3 \l  PHI: (r3v2 'i' int) = (r3v1 'i' int), (r3v4 'i' int) binds: [B:56:0x002f, B:63:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< 0) goto L33\l}"];
Node_58 [shape=record,label="{58\:\ 0x0033}"];
Node_59 [shape=record,label="{59\:\ 0x0037|if (r6.mHashes[r3] != 0) goto L30\l}"];
Node_60 [shape=record,label="{60\:\ 0x0039}"];
Node_61 [shape=record,label="{61\:\ 0x003f|if (r6.mArray[r3 \<\< 1] != null) goto L27\l}"];
Node_63 [shape=record,label="{63\:\ 0x0042|LOOP_END\lLOOP:1: B:57:0x0031\-\>B:63:0x0042\l|int r3 = r3 + (\-1)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0041|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x0041|RETURN\l|return r3\l}"];
Node_70 [shape=record,label="{70\:\ 0x0045|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0045|int r3 = ~r2\l}"];
Node_65 [shape=record,label="{65\:\ 0x0046|RETURN\l|return r3\l}"];
Node_69 [shape=record,label="{69\:\ 0x0045|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{int androidx.collection.SimpleArrayMap.indexOfNull((r6v0 'this' androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:44:0x000f \-\> B:37:?, CROSS_EDGE: B:47:0x0018 \-\> B:37:?, CROSS_EDGE: B:54:0x002b \-\> B:37:?, BACK_EDGE: B:55:0x002c \-\> B:49:0x001b, CROSS_EDGE: B:62:0x0041 \-\> B:37:?, BACK_EDGE: B:63:0x0042 \-\> B:57:0x0031, CROSS_EDGE: B:65:0x0046 \-\> B:37:?, CROSS_EDGE: B:57:0x0031 \-\> B:64:0x0045, CROSS_EDGE: B:49:0x001b \-\> B:56:0x002f\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_36;Node_36 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_37;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_37;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_37;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_68;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_66;
Node_52 -> Node_53;
Node_53 -> Node_55;
Node_53 -> Node_67[style=dashed];
Node_55 -> Node_49;
Node_67 -> Node_54;
Node_54 -> Node_37;
Node_66 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_69;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_70;
Node_60 -> Node_61;
Node_61 -> Node_63;
Node_61 -> Node_71[style=dashed];
Node_63 -> Node_57;
Node_71 -> Node_62;
Node_62 -> Node_37;
Node_70 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_37;
Node_69 -> Node_64;
Node_68 -> Node_56;
}

