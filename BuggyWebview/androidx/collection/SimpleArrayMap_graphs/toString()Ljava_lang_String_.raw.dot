digraph "CFG forandroidx.collection.SimpleArrayMap.toString()Ljava\/lang\/String;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) type: VIRTUAL call: androidx.collection.SimpleArrayMap.isEmpty():boolean A[MD:():boolean (m)] (LINE:762)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0009 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0006|RETURN\l|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"\{\}\"  (LINE:763)\l0x0008: RETURN  (r0 I:java.lang.String) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:766)\l0x000b: IGET  (r1 I:int) = (r5 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l0x000d: ARITH  (r1 I:int) = (r1 I:int) * (28 int) \l0x000f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:int) type: DIRECT call: java.lang.StringBuilder.\<init\>(int):void A[MD:(int):void (c)]\l0x0012: CONST  (r1 I:??[int, float, short, byte, char]) = (123(0x7b, float:1.72E\-43) ??[int, float, short, byte, char])  (LINE:767)\l0x0014: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r1 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0017: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:768)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0018|LOOP_START\lLOOP:0: B:32:0x0018\-\>B:44:0x0044\l|0x0018: IGET  (r2 I:int) = (r5 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:47:0x0047 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|0x001c: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:36:0x0023  (LINE:769)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|0x001e: CONST_STR  (r2 I:java.lang.String) =  \", \"  (LINE:770)\l0x0020: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|0x0023: INVOKE  (r2 I:java.lang.Object) = \l  (r5 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r1 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.keyAt(int):java.lang.Object A[MD:(int):K (m)] (LINE:772)\l0x0027: CONST_STR  (r3 I:java.lang.String) =  \"(this Map)\"  (LINE:773)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0029|0x0029: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' java.lang.Object)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])  \-\> B:39:0x002f \l}"];
Node_38 [shape=record,label="{38\:\ 0x002b|0x002b: INVOKE  \l  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)])\l  (r2 I:java.lang.Object A[D('key' java.lang.Object)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:774)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|0x0032: CONST  (r4 I:??[int, float, short, byte, char]) = (61 ??[int, float, short, byte, char])  (LINE:778)\l0x0034: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r4 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x0037: INVOKE  (r4 I:java.lang.Object) = \l  (r5 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r1 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.valueAt(int):java.lang.Object A[MD:(int):V (m)] (LINE:779)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|0x003b: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])  \-\> B:43:0x0041  (LINE:780)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003d|0x003d: INVOKE  \l  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)])\l  (r4 I:java.lang.Object A[D('value' java.lang.Object)])\l type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:781)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0044|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0044|LOOP_END\lLOOP:0: B:32:0x0018\-\>B:44:0x0044\l|0x0044: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:768)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|0x0041: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:783)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0044|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002f|0x002f: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)] (LINE:776)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0047|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0047|0x0047: CONST  (r1 I:??[int, float, short, byte, char] A[D('i' int)]) = (125(0x7d, float:1.75E\-43) ??[int, float, short, byte, char])  (LINE:786)\l0x0049: INVOKE  (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]), (r1 I:char) type: VIRTUAL call: java.lang.StringBuilder.append(char):java.lang.StringBuilder A[MD:(char):java.lang.StringBuilder (c)]\l0x004c: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.StringBuilder A[D('buffer' java.lang.StringBuilder)]) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)] (LINE:787)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0050|RETURN\l|0x0050: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.collection.SimpleArrayMap.toString((r5 'this' I:androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:44:0x0044 \-\> B:32:0x0018, CROSS_EDGE: B:43:0x0041 \-\> B:44:0x0044, CROSS_EDGE: B:39:0x002f \-\> B:40:0x0032, CROSS_EDGE: B:34:0x001c \-\> B:36:0x0023, CROSS_EDGE: B:46:0x0050 \-\> B:26:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0027\-0x0044: r2 'key' Ljava\/lang\/Object;\l  0x003b\-0x0044: r4 'value' Ljava\/lang\/Object;\l  0x0018\-0x0047: r1 'i' I\l  0x0012\-0x0050: r0 'buffer' Ljava\/lang\/StringBuilder;\l  0x0000\-0x0050: r5 'this' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<TK;TV;\>;\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_26;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_49;
Node_49 -> Node_44;
Node_44 -> Node_32;
Node_43 -> Node_48;
Node_48 -> Node_44;
Node_39 -> Node_40;
Node_47 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_26;
}

