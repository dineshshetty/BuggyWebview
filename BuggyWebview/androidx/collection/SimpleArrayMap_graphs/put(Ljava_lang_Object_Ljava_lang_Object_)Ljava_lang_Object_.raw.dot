digraph "CFG forandroidx.collection.SimpleArrayMap.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:432)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0002|0x0002: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' K)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x000a  (LINE:435)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:436)\l0x0005: INVOKE  (r2 I:int) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) type: VIRTUAL call: androidx.collection.SimpleArrayMap.indexOfNull():int A[MD:():int (m)] (LINE:437)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0012|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:43:0x001f  (LINE:442)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0014|0x0014: ARITH  (r3 I:int) = (r2 I:int A[D('index' int)]) \<\< (1 int)  (LINE:443)\l0x0016: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0018: IGET  (r2 I:java.lang.Object[] A[D('index' int)]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:444)\l0x001a: AGET  (r4 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char] A[D('index' int)]) \l0x001c: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char] A[D('index' int)])\l  (r11 I:??[OBJECT, ARRAY] A[D('value' V)])\l  (LINE:445)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|RETURN\l|0x001e: RETURN  (r4 I:V A[D('old' V)])  (LINE:446)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x001f|0x001f: NOT  (r2 I:int) = (r2 I:int A[D('index' int)])  (LINE:449)\l0x0020: IGET  (r3 I:int[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:450)\l0x0022: ARRAY_LENGTH  (r3 I:int) = (r3 I:??[]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0023|0x0023: IF  (r0 I:??[int, byte, short, char] A[D('osize' int)]) \< (r3 I:??[int, byte, short, char])  \-\> B:58:0x0057 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|0x0025: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:451)\l0x0026: CONST  (r4 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0028|0x0028: IF  (r0 I:??[int, byte, short, char] A[D('osize' int)]) \< (r4 I:??[int, byte, short, char])  \-\> B:48:0x002e \l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|0x002a: ARITH  (r3 I:int) = (r0 I:int A[D('osize' int)]) \>\> (1 int) \l0x002c: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int A[D('osize' int)]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0032|0x0032: IGET  (r4 I:int[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:456)\l0x0034: IGET  (r5 I:java.lang.Object[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:457)\l0x0036: INVOKE  \l  (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r3 I:int A[D('n' int)])\l type: DIRECT call: androidx.collection.SimpleArrayMap.allocArrays(int):void A[MD:(int):void (m)] (LINE:458)\l0x0039: IGET  (r6 I:int) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:460)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003b|0x003b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('osize' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0051 \l}"];
Node_52 [shape=record,label="{52\:\ 0x003d|0x003d: IGET  (r6 I:int[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:464)\l0x003f: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0040|0x0040: IF  (r7 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:55:0x004d \l}"];
Node_54 [shape=record,label="{54\:\ 0x0042|0x0042: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[] A[D('ohashes' int[])])  (LINE:466)\l0x0043: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0044: INVOKE  (r4 I:java.lang.Object A[D('ohashes' int[])]), (r8 I:int), (r6 I:java.lang.Object), (r8 I:int), (r7 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0047: IGET  (r6 I:java.lang.Object[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:467)\l0x0049: ARRAY_LENGTH  (r7 I:int) = (r5 I:??[] A[D('oarray' java.lang.Object[])]) \l0x004a: INVOKE  (r5 I:java.lang.Object A[D('oarray' java.lang.Object[])]), (r8 I:int), (r6 I:java.lang.Object), (r8 I:int), (r7 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x004d|0x004d: INVOKE  \l  (r4 I:int[] A[D('ohashes' int[])])\l  (r5 I:java.lang.Object[] A[D('oarray' java.lang.Object[])])\l  (r0 I:int A[D('osize' int)])\l type: STATIC call: androidx.collection.SimpleArrayMap.freeArrays(int[], java.lang.Object[], int):void A[MD:(int[], java.lang.Object[], int):void (m)] (LINE:470)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0051|0x0051: NEW_INSTANCE  (r6 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:461)\l0x0053: INVOKE  (r6 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0056|0x0056: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|0x002e: IF  (r0 I:??[int, byte, short, char] A[D('osize' int)]) \< (r3 I:??[int, byte, short, char])  \-\> B:50:0x0032 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0030|0x0030: CONST  (r3 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0057|0x0057: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r0 I:??[int, byte, short, char] A[D('osize' int)])  \-\> B:60:0x0072  (LINE:473)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0059|0x0059: IGET  (r3 I:int[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:476)\l0x005b: ARITH  (r4 I:int) = (r2 I:int A[D('index' int)]) + (1 int) \l0x005d: ARITH  (r5 I:int) = (r0 I:int A[D('osize' int)]) \- (r2 I:int A[D('index' int)]) \l0x005f: INVOKE  (r3 I:java.lang.Object), (r2 I:int A[D('index' int)]), (r3 I:java.lang.Object), (r4 I:int), (r5 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0062: IGET  (r3 I:java.lang.Object[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:477)\l0x0064: ARITH  (r4 I:int) = (r2 I:int A[D('index' int)]) \<\< (1 int) \l0x0066: ARITH  (r5 I:int) = (r2 I:int A[D('index' int)]) + (1 int) \l0x0068: ARITH  (r5 I:int) = (r5 I:int) \<\< (1 int) \l0x006a: IGET  (r6 I:int) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l0x006c: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int A[D('index' int)]) \l0x006d: ARITH  (r6 I:int) = (r6 I:int) \<\< (1 int) \l0x006f: INVOKE  (r3 I:java.lang.Object), (r4 I:int), (r3 I:java.lang.Object), (r5 I:int), (r6 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x0072|0x0072: IGET  (r3 I:int) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:481)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0074|0x0074: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('osize' int)]) != (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x008f \l}"];
Node_62 [shape=record,label="{62\:\ 0x0076|0x0076: IGET  (r4 I:int[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[] \l0x0078: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l}"];
Node_63 [shape=record,label="{63\:\ 0x0079|0x0079: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r5 I:??[int, byte, short, char])  \-\> B:66:0x008f \l}"];
Node_64 [shape=record,label="{64\:\ 0x007b|0x007b: APUT  \l  (r4 I:??[int, float][])\l  (r2 I:??[int, short, byte, char] A[D('index' int)])\l  (r1 I:??[int, float, short, byte, char] A[D('hash' int)])\l  (LINE:486)\l0x007d: IGET  (r4 I:java.lang.Object[]) = (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:487)\l0x007f: ARITH  (r5 I:int) = (r2 I:int A[D('index' int)]) \<\< (1 int) \l0x0081: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r10 I:??[OBJECT, ARRAY] A[D('key' K)]) \l0x0083: ARITH  (r5 I:int) = (r2 I:int A[D('index' int)]) \<\< (1 int)  (LINE:488)\l0x0085: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0087: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r11 I:??[OBJECT, ARRAY] A[D('value' V)]) \l0x0089: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:489)\l0x008b: IPUT  (r3 I:int), (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l0x008d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:490)\l}"];
Node_65 [shape=record,label="{65\:\ 0x008e|RETURN\l|0x008e: RETURN  (r3 I:V) \l}"];
Node_66 [shape=record,label="{66\:\ 0x008f|0x008f: NEW_INSTANCE  (r3 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:482)\l0x0091: INVOKE  (r3 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_67 [shape=record,label="{67\:\ 0x0094|0x0094: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r10 I:java.lang.Object A[D('key' K)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)] (LINE:439)\l0x000e: INVOKE  (r2 I:int) = \l  (r9 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r10 I:java.lang.Object A[D('key' K)])\l  (r1 I:int A[D('hash' int)])\l type: VIRTUAL call: androidx.collection.SimpleArrayMap.indexOf(java.lang.Object, int):int A[MD:(java.lang.Object, int):int (m)] (LINE:440)\l}"];
MethodNode[shape=record,label="{public V androidx.collection.SimpleArrayMap.put((r9 'this' I:androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r10 I:K A[D('key' K), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:V A[D('value' V), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:65:0x008e \-\> B:35:?, CROSS_EDGE: B:67:0x0094 \-\> B:35:?, CROSS_EDGE: B:61:0x0074 \-\> B:66:0x008f, CROSS_EDGE: B:58:0x0057 \-\> B:60:0x0072, CROSS_EDGE: B:53:0x0040 \-\> B:55:0x004d, CROSS_EDGE: B:57:0x0056 \-\> B:35:?, CROSS_EDGE: B:49:0x0030 \-\> B:50:0x0032, CROSS_EDGE: B:48:0x002e \-\> B:50:0x0032, CROSS_EDGE: B:44:0x0023 \-\> B:58:0x0057, CROSS_EDGE: B:39:0x000a \-\> B:40:0x0012\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x000a: r1 'hash' I\l  0x0009\-0x000a: r2 'index' I\l  0x0012\-0x0018: r2 'index' I\l  0x0018\-0x001f: r3 'index' I\l  0x001c\-0x001f: r4 'old' Ljava\/lang\/Object;, signature: TV;\l  0x0032\-0x0057: r3 'n' I\l  0x0034\-0x0057: r4 'ohashes' [I\l  0x0036\-0x0057: r5 'oarray' [Ljava\/lang\/Object;\l  0x0002\-0x0094: r0 'osize' I\l  0x000e\-0x0094: r1 'hash' I\l  0x001f\-0x0094: r2 'index' I\l  0x0000\-0x0094: r9 'this' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<TK;TV;\>;\l  0x0000\-0x0094: r10 'key' Ljava\/lang\/Object;, signature: TK;\l  0x0000\-0x0094: r11 'value' Ljava\/lang\/Object;, signature: TV;\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_35;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_58;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_56;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_58;
Node_56 -> Node_57;
Node_57 -> Node_35;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_66;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_35;
Node_66 -> Node_67;
Node_67 -> Node_35;
Node_39 -> Node_40;
}

