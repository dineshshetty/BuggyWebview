digraph "CFG forandroidx.collection.SimpleArrayMap.equals(Ljava\/lang\/Object;)Z" {
Node_70 [shape=record,label="{70\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_72 [shape=record,label="{72\:\ 0x0000}"];
Node_73 [shape=record,label="{73\:\ 0x0001|if (r8 != r9) goto L5\l}"];
Node_74 [shape=record,label="{74\:\ 0x0003|RETURN\l|return androidx.collection.SimpleArrayMap.CONCURRENT_MODIFICATION_EXCEPTIONS\l}"];
Node_71 [shape=record,label="{71\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_75 [shape=record,label="{75\:\ 0x0004}"];
Node_76 [shape=record,label="{76\:\ 0x0007|if ((r9 instanceof androidx.collection.SimpleArrayMap) == false) goto L36\l}"];
Node_77 [shape=record,label="{77\:\ 0x0009|androidx.collection.SimpleArrayMap r1 = (androidx.collection.SimpleArrayMap) r9\l}"];
Node_78 [shape=record,label="{78\:\ 0x0014|if (size() == r1.size()) goto L10\l}"];
Node_79 [shape=record,label="{79\:\ 0x0016|RETURN\l|return false\l}"];
Node_80 [shape=record,label="{80\:\ 0x0017|r3 = 0\l}"];
Node_124 [shape=record,label="{124\:\ 0x0018|LOOP_START\lSYNTHETIC\lEXC_TOP_SPLITTER\lLOOP:0: B:124:0x0018\-\>B:92:0x003a\lPHI: r3 \l  PHI: (r3v6 'i' int) = (r3v5 'i' int), (r3v7 'i' int) binds: [B:80:0x0017, B:92:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_81 [shape=record,label="{81\:\ 0x0018|TRY_ENTER\lTryCatch #4 \{ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041, blocks: (B:81:0x0018, B:83:0x001c, B:86:0x002c, B:89:0x0033), top: B:124:0x0018 \}\lCatch: ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041\l}"];
Node_82 [shape=record,label="{82\:\ 0x001a|if (r3 \>= r8.mSize) goto L29\l}"];
Node_83 [shape=record,label="{83\:\ 0x001c|TryCatch #4 \{ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041, blocks: (B:81:0x0018, B:83:0x001c, B:86:0x002c, B:89:0x0033), top: B:124:0x0018 \}\lCatch: ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041\l|java.lang.Object r4 = keyAt(r3)     \/\/ Catch: java.lang.ClassCastException \-\> L3f java.lang.NullPointerException \-\> L41\ljava.lang.Object r5 = valueAt(r3)     \/\/ Catch: java.lang.ClassCastException \-\> L3f java.lang.NullPointerException \-\> L41\ljava.lang.Object r6 = r1.get(r4)     \/\/ Catch: java.lang.ClassCastException \-\> L3f java.lang.NullPointerException \-\> L41\l}"];
Node_84 [shape=record,label="{84\:\ 0x0028|if (r5 != null) goto L24\l}"];
Node_85 [shape=record,label="{85\:\ 0x002a|if (r6 != null) goto L23\l}"];
Node_86 [shape=record,label="{86\:\ 0x002c|TryCatch #4 \{ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041, blocks: (B:81:0x0018, B:83:0x001c, B:86:0x002c, B:89:0x0033), top: B:124:0x0018 \}\lCatch: ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041\l}"];
Node_87 [shape=record,label="{87\:\ 0x0030|if (r1.containsKey(r4) != false) goto L21\l}"];
Node_128 [shape=record,label="{128\:\ 0x0032|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x0032|RETURN\l|return false\l}"];
Node_132 [shape=record,label="{132\:\ 0x003a|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x003a|LOOP_END\lLOOP:0: B:124:0x0018\-\>B:92:0x003a\l|int r3 = r3 + 1\l}"];
Node_130 [shape=record,label="{130\:\ 0x0032|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x0033|TRY_LEAVE\lTryCatch #4 \{ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041, blocks: (B:81:0x0018, B:83:0x001c, B:86:0x002c, B:89:0x0033), top: B:124:0x0018 \}\lCatch: ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041\l}"];
Node_90 [shape=record,label="{90\:\ 0x0037|if (r5.equals(r6) != false) goto L28\l}"];
Node_129 [shape=record,label="{129\:\ 0x0039|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x0039|RETURN\l|return false\l}"];
Node_133 [shape=record,label="{133\:\ 0x003a|SYNTHETIC\l}"];
Node_131 [shape=record,label="{131\:\ 0x003e|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x003e|RETURN\l|return androidx.collection.SimpleArrayMap.CONCURRENT_MODIFICATION_EXCEPTIONS\l}"];
Node_125 [shape=record,label="{125\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_95 [shape=record,label="{95\:\ 0x003f|ExcHandler: ClassCastException \-\> 0x003f\l}"];
Node_96 [shape=record,label="{96\:\ 0x0040|RETURN\l|return false\l}"];
Node_97 [shape=record,label="{97\:\ 0x0041|ExcHandler: NullPointerException \-\> 0x0041\l}"];
Node_98 [shape=record,label="{98\:\ 0x0042|RETURN\l|return false\l}"];
Node_99 [shape=record,label="{99\:\ 0x0043}"];
Node_100 [shape=record,label="{100\:\ 0x0045|if ((r9 instanceof java.util.Map) == false) goto L67\l}"];
Node_101 [shape=record,label="{101\:\ 0x0047|java.util.Map r1 = (java.util.Map) r9\l}"];
Node_102 [shape=record,label="{102\:\ 0x0052|if (size() == r1.size()) goto L41\l}"];
Node_103 [shape=record,label="{103\:\ 0x0054|RETURN\l|return false\l}"];
Node_104 [shape=record,label="{104\:\ 0x0055|r3 = 0\l}"];
Node_126 [shape=record,label="{126\:\ 0x0056|LOOP_START\lSYNTHETIC\lEXC_TOP_SPLITTER\lLOOP:1: B:126:0x0056\-\>B:116:0x0078\lPHI: r3 \l  PHI: (r3v2 'i' int) = (r3v1 'i' int), (r3v3 'i' int) binds: [B:104:0x0055, B:116:0x0078] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_105 [shape=record,label="{105\:\ 0x0056|TRY_ENTER\lTryCatch #3 \{ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f, blocks: (B:105:0x0056, B:107:0x005a, B:110:0x006a, B:113:0x0071), top: B:126:0x0056 \}\lCatch: ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f\l}"];
Node_106 [shape=record,label="{106\:\ 0x0058|if (r3 \>= r8.mSize) goto L60\l}"];
Node_107 [shape=record,label="{107\:\ 0x005a|TryCatch #3 \{ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f, blocks: (B:105:0x0056, B:107:0x005a, B:110:0x006a, B:113:0x0071), top: B:126:0x0056 \}\lCatch: ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f\l|java.lang.Object r4 = keyAt(r3)     \/\/ Catch: java.lang.ClassCastException \-\> L7d java.lang.NullPointerException \-\> L7f\ljava.lang.Object r5 = valueAt(r3)     \/\/ Catch: java.lang.ClassCastException \-\> L7d java.lang.NullPointerException \-\> L7f\ljava.lang.Object r6 = r1.get(r4)     \/\/ Catch: java.lang.ClassCastException \-\> L7d java.lang.NullPointerException \-\> L7f\l}"];
Node_108 [shape=record,label="{108\:\ 0x0066|if (r5 != null) goto L55\l}"];
Node_109 [shape=record,label="{109\:\ 0x0068|if (r6 != null) goto L54\l}"];
Node_110 [shape=record,label="{110\:\ 0x006a|TryCatch #3 \{ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f, blocks: (B:105:0x0056, B:107:0x005a, B:110:0x006a, B:113:0x0071), top: B:126:0x0056 \}\lCatch: ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f\l}"];
Node_111 [shape=record,label="{111\:\ 0x006e|if (r1.containsKey(r4) != false) goto L52\l}"];
Node_137 [shape=record,label="{137\:\ 0x0070|SYNTHETIC\l}"];
Node_112 [shape=record,label="{112\:\ 0x0070|RETURN\l|return false\l}"];
Node_138 [shape=record,label="{138\:\ 0x0078|SYNTHETIC\l}"];
Node_116 [shape=record,label="{116\:\ 0x0078|LOOP_END\lLOOP:1: B:126:0x0056\-\>B:116:0x0078\l|int r3 = r3 + 1\l}"];
Node_135 [shape=record,label="{135\:\ 0x0070|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ 0x0071|TRY_LEAVE\lTryCatch #3 \{ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f, blocks: (B:105:0x0056, B:107:0x005a, B:110:0x006a, B:113:0x0071), top: B:126:0x0056 \}\lCatch: ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f\l}"];
Node_114 [shape=record,label="{114\:\ 0x0075|if (r5.equals(r6) != false) goto L59\l}"];
Node_134 [shape=record,label="{134\:\ 0x0077|SYNTHETIC\l}"];
Node_115 [shape=record,label="{115\:\ 0x0077|RETURN\l|return false\l}"];
Node_139 [shape=record,label="{139\:\ 0x0078|SYNTHETIC\l}"];
Node_136 [shape=record,label="{136\:\ 0x007c|SYNTHETIC\l}"];
Node_118 [shape=record,label="{118\:\ 0x007c|RETURN\l|return androidx.collection.SimpleArrayMap.CONCURRENT_MODIFICATION_EXCEPTIONS\l}"];
Node_127 [shape=record,label="{127\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_119 [shape=record,label="{119\:\ 0x007d|ExcHandler: ClassCastException \-\> 0x007d\l}"];
Node_120 [shape=record,label="{120\:\ 0x007e|RETURN\l|return false\l}"];
Node_121 [shape=record,label="{121\:\ 0x007f|ExcHandler: NullPointerException \-\> 0x007f\l}"];
Node_122 [shape=record,label="{122\:\ 0x0080|RETURN\l|return false\l}"];
Node_123 [shape=record,label="{123\:\ 0x0081|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.SimpleArrayMap.equals((r8v0 'this' androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r9v0 'object' java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:79:0x0016 \-\> B:71:?, CROSS_EDGE: B:88:0x0032 \-\> B:71:?, BACK_EDGE: B:92:0x003a \-\> B:124:0x0018, CROSS_EDGE: B:85:0x002a \-\> B:88:0x0032, CROSS_EDGE: B:91:0x0039 \-\> B:71:?, CROSS_EDGE: B:90:0x0037 \-\> B:92:0x003a, CROSS_EDGE: B:94:0x003e \-\> B:71:?, CROSS_EDGE: B:96:0x0040 \-\> B:71:?, CROSS_EDGE: B:98:0x0042 \-\> B:71:?, CROSS_EDGE: B:124:0x0018 \-\> B:95:0x003f, CROSS_EDGE: B:124:0x0018 \-\> B:97:0x0041, CROSS_EDGE: B:103:0x0054 \-\> B:71:?, CROSS_EDGE: B:112:0x0070 \-\> B:71:?, BACK_EDGE: B:116:0x0078 \-\> B:126:0x0056, CROSS_EDGE: B:109:0x0068 \-\> B:112:0x0070, CROSS_EDGE: B:115:0x0077 \-\> B:71:?, CROSS_EDGE: B:114:0x0075 \-\> B:116:0x0078, CROSS_EDGE: B:118:0x007c \-\> B:71:?, CROSS_EDGE: B:120:0x007e \-\> B:71:?, CROSS_EDGE: B:122:0x0080 \-\> B:71:?, CROSS_EDGE: B:126:0x0056 \-\> B:119:0x007d, CROSS_EDGE: B:126:0x0056 \-\> B:121:0x007f, CROSS_EDGE: B:123:0x0081 \-\> B:71:?\lINLINE_NOT_NEEDED\lTryCatch #4 \{ClassCastException \-\> 0x003f, NullPointerException \-\> 0x0041, blocks: (B:81:0x0018, B:83:0x001c, B:86:0x002c, B:89:0x0033), top: B:124:0x0018 \}, TryCatch #3 \{ClassCastException \-\> 0x007d, NullPointerException \-\> 0x007f, blocks: (B:105:0x0056, B:107:0x005a, B:110:0x006a, B:113:0x0071), top: B:126:0x0056 \}\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_70;Node_70 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_71;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_99;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_71;
Node_80 -> Node_124;
Node_124 -> Node_81;
Node_124 -> Node_95;
Node_124 -> Node_97;
Node_81 -> Node_82;
Node_81 -> Node_125;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_131;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_89;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_130;
Node_86 -> Node_87;
Node_87 -> Node_128[style=dashed];
Node_87 -> Node_132;
Node_128 -> Node_88;
Node_88 -> Node_71;
Node_132 -> Node_92;
Node_92 -> Node_124;
Node_130 -> Node_88;
Node_89 -> Node_90;
Node_90 -> Node_129[style=dashed];
Node_90 -> Node_133;
Node_129 -> Node_91;
Node_91 -> Node_71;
Node_133 -> Node_92;
Node_131 -> Node_94;
Node_94 -> Node_71;
Node_125 -> Node_95;
Node_125 -> Node_97;
Node_95 -> Node_96;
Node_96 -> Node_71;
Node_97 -> Node_98;
Node_98 -> Node_71;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_123;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_71;
Node_104 -> Node_126;
Node_126 -> Node_105;
Node_126 -> Node_119;
Node_126 -> Node_121;
Node_105 -> Node_106;
Node_105 -> Node_127;
Node_106 -> Node_107[style=dashed];
Node_106 -> Node_136;
Node_107 -> Node_108;
Node_108 -> Node_109[style=dashed];
Node_108 -> Node_113;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_135;
Node_110 -> Node_111;
Node_111 -> Node_137[style=dashed];
Node_111 -> Node_138;
Node_137 -> Node_112;
Node_112 -> Node_71;
Node_138 -> Node_116;
Node_116 -> Node_126;
Node_135 -> Node_112;
Node_113 -> Node_114;
Node_114 -> Node_134[style=dashed];
Node_114 -> Node_139;
Node_134 -> Node_115;
Node_115 -> Node_71;
Node_139 -> Node_116;
Node_136 -> Node_118;
Node_118 -> Node_71;
Node_127 -> Node_119;
Node_127 -> Node_121;
Node_119 -> Node_120;
Node_120 -> Node_71;
Node_121 -> Node_122;
Node_122 -> Node_71;
Node_123 -> Node_71;
}

