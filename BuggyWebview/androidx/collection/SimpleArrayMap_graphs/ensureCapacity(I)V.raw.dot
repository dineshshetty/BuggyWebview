digraph "CFG forandroidx.collection.SimpleArrayMap.ensureCapacity(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:289)\l0x0002: IGET  (r1 I:int[]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:290)\l0x0004: ARRAY_LENGTH  (r1 I:int) = (r1 I:??[]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char] A[D('minimumCapacity' int)])  \-\> B:21:0x0022 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IGET  (r1 I:int[]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:291)\l0x0009: IGET  (r2 I:java.lang.Object[]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:292)\l0x000b: INVOKE  \l  (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r7 I:int A[D('minimumCapacity' int)])\l type: DIRECT call: androidx.collection.SimpleArrayMap.allocArrays(int):void A[MD:(int):void (m)] (LINE:293)\l0x000e: IGET  (r3 I:int) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:294)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0010|0x0010: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:20:0x001f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0012|0x0012: IGET  (r3 I:int[]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:295)\l0x0014: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r1 I:java.lang.Object A[D('ohashes' int[])])\l  (r4 I:int)\l  (r3 I:java.lang.Object)\l  (r4 I:int)\l  (r0 I:int A[D('osize' int)])\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0018: IGET  (r3 I:java.lang.Object[]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:296)\l0x001a: ARITH  (r5 I:int) = (r0 I:int A[D('osize' int)]) \<\< (1 int) \l0x001c: INVOKE  (r2 I:java.lang.Object A[D('oarray' java.lang.Object[])]), (r4 I:int), (r3 I:java.lang.Object), (r4 I:int), (r5 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|0x001f: INVOKE  \l  (r1 I:int[] A[D('ohashes' int[])])\l  (r2 I:java.lang.Object[] A[D('oarray' java.lang.Object[])])\l  (r0 I:int A[D('osize' int)])\l type: STATIC call: androidx.collection.SimpleArrayMap.freeArrays(int[], java.lang.Object[], int):void A[MD:(int[], java.lang.Object[], int):void (m)] (LINE:298)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|0x0022: IGET  (r1 I:int A[D('ohashes' int[])]) = (r6 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:300)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|0x0024: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('osize' int)])  \-\> B:24:0x0027 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\l|0x0026: RETURN    (LINE:303)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|0x0027: NEW_INSTANCE  (r1 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:301)\l0x0029: INVOKE  (r1 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x002c|0x002c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.collection.SimpleArrayMap.ensureCapacity((r6 'this' I:androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('minimumCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x002c \-\> B:14:?, CROSS_EDGE: B:18:0x0010 \-\> B:20:0x001f, CROSS_EDGE: B:16:0x0005 \-\> B:21:0x0022\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0022: r1 'ohashes' [I\l  0x000b\-0x0022: r2 'oarray' [Ljava\/lang\/Object;\l  0x0002\-0x002c: r0 'osize' I\l  0x0000\-0x002c: r6 'this' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<TK;TV;\>;\l  \-1 \-0x002c: r7 'minimumCapacity' I\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

