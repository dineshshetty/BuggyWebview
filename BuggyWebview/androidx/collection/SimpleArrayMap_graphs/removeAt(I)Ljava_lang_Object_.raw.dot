digraph "CFG forandroidx.collection.SimpleArrayMap.removeAt(I)Ljava\/lang\/Object;" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:570)\l0x0002: ARITH  (r1 I:int) = (r12 I:int A[D('index' int)]) \<\< (1 int) \l0x0004: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0005: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0006: AGET  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]) \l0x0008: IGET  (r3 I:int) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:571)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000a|0x000a: IF  (r3 I:??[int, byte, short, char] A[D('osize' int)]) \> (r2 I:??[int, byte, short, char])  \-\> B:34:0x001c  (LINE:573)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|0x000c: IGET  (r2 I:int[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:576)\l0x000e: INVOKE  (r2 I:int[]), (r0 I:java.lang.Object[]), (r3 I:int A[D('osize' int)]) type: STATIC call: androidx.collection.SimpleArrayMap.freeArrays(int[], java.lang.Object[], int):void A[MD:(int[], java.lang.Object[], int):void (m)]\l0x0011: SGET  (r0 I:int[]) =  androidx.collection.ContainerHelpers.EMPTY_INTS int[]  (LINE:577)\l0x0013: IPUT  (r0 I:int[]), (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[] \l0x0015: SGET  (r0 I:java.lang.Object[]) =  androidx.collection.ContainerHelpers.EMPTY_OBJECTS java.lang.Object[]  (LINE:578)\l0x0017: IPUT  \l  (r0 I:java.lang.Object[])\l  (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l androidx.collection.SimpleArrayMap.mArray java.lang.Object[] \l0x0019: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:579)\l}"];
Node_52 [shape=record,label="{52\:\ 0x008f|0x008f: IGET  (r2 I:int) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:622)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0091|0x0091: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('osize' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0096 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0093|0x0093: IPUT  \l  (r0 I:int A[D('nsize' int)])\l  (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l androidx.collection.SimpleArrayMap.mSize int  (LINE:625)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0095|RETURN\l|0x0095: RETURN  (r1 I:V A[D('old' java.lang.Object)])  (LINE:626)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_56 [shape=record,label="{56\:\ 0x0096|0x0096: NEW_INSTANCE  (r2 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:623)\l0x0098: INVOKE  (r2 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x009b|0x009b: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|0x001c: ARITH  (r0 I:int A[D('nsize' int)]) = (r3 I:int A[D('osize' int)]) + (\-1 int)  (LINE:581)\l0x001e: IGET  (r4 I:int[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:582)\l0x0020: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[]) \l0x0021: CONST  (r6 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|0x0023: IF  (r5 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:49:0x006d \l}"];
Node_36 [shape=record,label="{36\:\ 0x0025|0x0025: IGET  (r5 I:int) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l0x0027: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[]) \l0x0028: ARITH  (r7 I:int) = (r7 I:int) \/ (3 int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x002a|0x002a: IF  (r5 I:??[int, byte, short, char]) \>= (r7 I:??[int, byte, short, char])  \-\> B:49:0x006d \l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|0x002c: IF  (r3 I:??[int, byte, short, char] A[D('osize' int)]) \<= (r6 I:??[int, byte, short, char])  \-\> B:40:0x0032  (LINE:586)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|0x002e: ARITH  (r4 I:int) = (r3 I:int A[D('osize' int)]) \>\> (1 int) \l0x0030: ARITH  (r6 I:int) = (r3 I:int A[D('osize' int)]) + (r4 I:int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0032|0x0032: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0033: IGET  (r5 I:int[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:590)\l0x0035: IGET  (r6 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:591)\l0x0037: INVOKE  \l  (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l  (r4 I:int A[D('n' int)])\l type: DIRECT call: androidx.collection.SimpleArrayMap.allocArrays(int):void A[MD:(int):void (m)] (LINE:592)\l0x003a: IGET  (r7 I:int) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:594)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003c|0x003c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('osize' int)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0067 \l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|0x003e: IF  (r12 I:??[int, byte, short, char] A[D('index' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:44:0x004d  (LINE:598)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0040|0x0040: IGET  (r7 I:int[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:600)\l0x0042: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0043: INVOKE  \l  (r5 I:java.lang.Object A[D('ohashes' int[])])\l  (r8 I:int)\l  (r7 I:java.lang.Object)\l  (r8 I:int)\l  (r12 I:int A[D('index' int)])\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0046: IGET  (r7 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:601)\l0x0048: ARITH  (r9 I:int) = (r12 I:int A[D('index' int)]) \<\< (1 int) \l0x004a: INVOKE  (r6 I:java.lang.Object A[D('oarray' java.lang.Object[])]), (r8 I:int), (r7 I:java.lang.Object), (r8 I:int), (r9 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|0x004d: IF  (r12 I:??[int, byte, short, char] A[D('index' int)]) \>= (r0 I:??[int, byte, short, char] A[D('nsize' int)])  \-\> B:52:0x008f  (LINE:603)\l}"];
Node_45 [shape=record,label="{45\:\ 0x004f|0x004f: ARITH  (r7 I:int) = (r12 I:int A[D('index' int)]) + (1 int)  (LINE:606)\l0x0051: IGET  (r8 I:int[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[] \l0x0053: ARITH  (r9 I:int) = (r0 I:int A[D('nsize' int)]) \- (r12 I:int A[D('index' int)]) \l0x0055: INVOKE  \l  (r5 I:java.lang.Object A[D('ohashes' int[])])\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l  (r12 I:int A[D('index' int)])\l  (r9 I:int)\l type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0058: ARITH  (r7 I:int) = (r12 I:int A[D('index' int)]) + (1 int)  (LINE:607)\l0x005a: ARITH  (r7 I:int) = (r7 I:int) \<\< (r2 I:int) \l0x005b: IGET  (r8 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[] \l0x005d: ARITH  (r9 I:int) = (r12 I:int A[D('index' int)]) \<\< (1 int) \l0x005f: ARITH  (r10 I:int) = (r0 I:int A[D('nsize' int)]) \- (r12 I:int A[D('index' int)]) \l0x0061: ARITH  (r2 I:int) = (r10 I:int) \<\< (1 int) \l0x0063: INVOKE  (r6 I:java.lang.Object A[D('oarray' java.lang.Object[])]), (r7 I:int), (r8 I:java.lang.Object), (r9 I:int), (r2 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0067|0x0067: NEW_INSTANCE  (r2 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:595)\l0x0069: INVOKE  (r2 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x006c|0x006c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_49 [shape=record,label="{49\:\ 0x006d|0x006d: IF  (r12 I:??[int, byte, short, char] A[D('index' int)]) \>= (r0 I:??[int, byte, short, char] A[D('nsize' int)])  \-\> B:51:0x0083  (LINE:611)\l}"];
Node_50 [shape=record,label="{50\:\ 0x006f|0x006f: ARITH  (r5 I:int) = (r12 I:int A[D('index' int)]) + (1 int)  (LINE:614)\l0x0071: ARITH  (r6 I:int) = (r0 I:int A[D('nsize' int)]) \- (r12 I:int A[D('index' int)]) \l0x0073: INVOKE  (r4 I:java.lang.Object), (r5 I:int), (r4 I:java.lang.Object), (r12 I:int A[D('index' int)]), (r6 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0076: IGET  (r4 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:615)\l0x0078: ARITH  (r5 I:int) = (r12 I:int A[D('index' int)]) + (1 int) \l0x007a: ARITH  (r5 I:int) = (r5 I:int) \<\< (r2 I:int) \l0x007b: ARITH  (r6 I:int) = (r12 I:int A[D('index' int)]) \<\< (1 int) \l0x007d: ARITH  (r7 I:int) = (r0 I:int A[D('nsize' int)]) \- (r12 I:int A[D('index' int)]) \l0x007f: ARITH  (r7 I:int) = (r7 I:int) \<\< (r2 I:int) \l0x0080: INVOKE  (r4 I:java.lang.Object), (r5 I:int), (r4 I:java.lang.Object), (r6 I:int), (r7 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_51 [shape=record,label="{51\:\ 0x0083|0x0083: IGET  (r4 I:java.lang.Object[]) = (r11 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:618)\l0x0085: ARITH  (r5 I:int) = (r0 I:int A[D('nsize' int)]) \<\< (1 int) \l0x0087: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0088: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) \l0x008a: ARITH  (r5 I:int) = (r0 I:int A[D('nsize' int)]) \<\< (1 int)  (LINE:619)\l0x008c: ARITH  (r5 I:int) = (r5 I:int) + (r2 I:int) \l0x008d: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public V androidx.collection.SimpleArrayMap.removeAt((r11 'this' I:androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x009b \-\> B:30:?, CROSS_EDGE: B:45:0x004f \-\> B:52:0x008f, CROSS_EDGE: B:44:0x004d \-\> B:52:0x008f, CROSS_EDGE: B:42:0x003e \-\> B:44:0x004d, CROSS_EDGE: B:48:0x006c \-\> B:30:?, CROSS_EDGE: B:38:0x002c \-\> B:40:0x0032, CROSS_EDGE: B:51:0x0083 \-\> B:52:0x008f, CROSS_EDGE: B:49:0x006d \-\> B:51:0x0083, CROSS_EDGE: B:35:0x0023 \-\> B:49:0x006d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001a\-0x001c: r0 'nsize' I\l  0x0033\-0x0066: r4 'n' I\l  0x0035\-0x0066: r5 'ohashes' [I\l  0x0037\-0x0066: r6 'oarray' [Ljava\/lang\/Object;\l  0x0067\-0x006d: r4 'n' I\l  0x0067\-0x006d: r5 'ohashes' [I\l  0x0067\-0x006d: r6 'oarray' [Ljava\/lang\/Object;\l  0x001e\-0x009b: r0 'nsize' I\l  0x0008\-0x009b: r1 'old' Ljava\/lang\/Object;\l  0x000a\-0x009b: r3 'osize' I\l  0x0000\-0x009b: r11 'this' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<TK;TV;\>;\l  \-1 \-0x009b: r12 'index' I\lTYPE_VARS: [V, K]\lSIGNATURE: (I)TV;\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_30;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_49;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_52;
Node_45 -> Node_52;
Node_47 -> Node_48;
Node_48 -> Node_30;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
}

