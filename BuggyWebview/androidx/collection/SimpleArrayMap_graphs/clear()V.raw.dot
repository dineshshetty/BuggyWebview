digraph "CFG forandroidx.collection.SimpleArrayMap.clear()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:270)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:15:0x0018 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IGET  (r0 I:int[]) = (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[]  (LINE:271)\l0x0006: IGET  (r1 I:java.lang.Object[]) = (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mArray java.lang.Object[]  (LINE:272)\l0x0008: IGET  (r2 I:int) = (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:273)\l0x000a: SGET  (r3 I:int[]) =  androidx.collection.ContainerHelpers.EMPTY_INTS int[]  (LINE:274)\l0x000c: IPUT  (r3 I:int[]), (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mHashes int[] \l0x000e: SGET  (r3 I:java.lang.Object[]) =  androidx.collection.ContainerHelpers.EMPTY_OBJECTS java.lang.Object[]  (LINE:275)\l0x0010: IPUT  \l  (r3 I:java.lang.Object[])\l  (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)])\l androidx.collection.SimpleArrayMap.mArray java.lang.Object[] \l0x0012: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:276)\l0x0013: IPUT  (r3 I:int), (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int \l0x0015: INVOKE  \l  (r0 I:int[] A[D('ohashes' int[])])\l  (r1 I:java.lang.Object[] A[D('oarray' java.lang.Object[])])\l  (r2 I:int A[D('osize' int)])\l type: STATIC call: androidx.collection.SimpleArrayMap.freeArrays(int[], java.lang.Object[], int):void A[MD:(int[], java.lang.Object[], int):void (m)] (LINE:277)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0018|0x0018: IGET  (r0 I:int A[D('ohashes' int[])]) = (r4 I:androidx.collection.SimpleArrayMap A[D('this' androidx.collection.SimpleArrayMap\<K, V\>)]) androidx.collection.SimpleArrayMap.mSize int  (LINE:279)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:18:0x001d \l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\l|0x001c: RETURN    (LINE:282)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:java.util.ConcurrentModificationException) =  java.util.ConcurrentModificationException  (LINE:280)\l0x001f: INVOKE  (r0 I:java.util.ConcurrentModificationException) type: DIRECT call: java.util.ConcurrentModificationException.\<init\>():void A[MD:():void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|0x0022: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.collection.SimpleArrayMap.clear((r4 'this' I:androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0022 \-\> B:11:?, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0018: r0 'ohashes' [I\l  0x0008\-0x0018: r1 'oarray' [Ljava\/lang\/Object;\l  0x000a\-0x0018: r2 'osize' I\l  0x0000\-0x0022: r4 'this' Landroidx\/collection\/SimpleArrayMap;, signature: Landroidx\/collection\/SimpleArrayMap\<TK;TV;\>;\lTYPE_VARS: [V, K]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

