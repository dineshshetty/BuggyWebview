digraph "CFG forandroidx.collection.SimpleArrayMap.put(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|int r0 = r9.mSize\l}"];
Node_37 [shape=record,label="{37\:\ 0x0002|if (r10 != null) goto L33\l}"];
Node_38 [shape=record,label="{38\:\ 0x0004|r1 = 0\lint r2 = indexOfNull()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0012|PHI: r1 r2 \l  PHI: (r1v1 'hash' int) = (r1v0 'hash' int), (r1v2 'hash' int) binds: [B:39:0x000a, B:38:0x0004] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'index' int) = (r2v0 'index' int), (r2v4 'index' int) binds: [B:39:0x000a, B:38:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L8\l}"];
Node_41 [shape=record,label="{41\:\ 0x0014|int r3 = (r2 \<\< 1) + 1\ljava.lang.Object[] r2 = r9.mArray\lr4 = (V) r2[r3]\lr2[r3] = r11\l}"];
Node_42 [shape=record,label="{42\:\ 0x001e|RETURN\l|return r4\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x001f|int r2 = ~r2\l}"];
Node_44 [shape=record,label="{44\:\ 0x0023|if (r0 \< r9.mHashes.length) goto L23\l}"];
Node_45 [shape=record,label="{45\:\ 0x0025|r3 = 4\l}"];
Node_46 [shape=record,label="{46\:\ 0x0028|if (r0 \< 8) goto L21\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|int r3 = (r0 \>\> 1) + r0\l}"];
Node_50 [shape=record,label="{50\:\ 0x0032|PHI: r3 \l  PHI: (r3v10 'n' int) = (r3v8 'n' int), (r3v9 'n' int), (r3v12 'n' int) binds: [B:48:0x002e, B:49:0x0030, B:47:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|int[] r4 = r9.mHashes\ljava.lang.Object[] r5 = r9.mArray\lallocArrays(r3)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003b|if (r0 != r9.mSize) goto L19\l}"];
Node_52 [shape=record,label="{52\:\ 0x003d|int[] r6 = r9.mHashes\l}"];
Node_53 [shape=record,label="{53\:\ 0x0040|if (r6.length \<= 0) goto L18\l}"];
Node_54 [shape=record,label="{54\:\ 0x0042|java.lang.System.arraycopy(r4, 0, r6, 0, r4.length)\ljava.lang.System.arraycopy(r5, 0, r9.mArray, 0, r5.length)\l}"];
Node_55 [shape=record,label="{55\:\ 0x004d|freeArrays(r4, r5, r0)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0051}"];
Node_57 [shape=record,label="{57\:\ 0x0056|throw new java.util.ConcurrentModificationException()\l}"];
Node_48 [shape=record,label="{48\:\ 0x002e|if (r0 \< 4) goto L13\l}"];
Node_49 [shape=record,label="{49\:\ 0x0030|r3 = 8\l}"];
Node_58 [shape=record,label="{58\:\ 0x0057|if (r2 \>= r0) goto L25\l}"];
Node_59 [shape=record,label="{59\:\ 0x0059|int[] r3 = r9.mHashes\ljava.lang.System.arraycopy(r3, r2, r3, r2 + 1, r0 \- r2)\ljava.lang.Object[] r3 = r9.mArray\ljava.lang.System.arraycopy(r3, r2 \<\< 1, r3, (r2 + 1) \<\< 1, (r9.mSize \- r2) \<\< 1)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0072|int r3 = r9.mSize\l}"];
Node_61 [shape=record,label="{61\:\ 0x0074|if (r0 != r3) goto L31\l}"];
Node_62 [shape=record,label="{62\:\ 0x0076|int[] r4 = r9.mHashes\l}"];
Node_63 [shape=record,label="{63\:\ 0x0079|if (r2 \>= r4.length) goto L31\l}"];
Node_64 [shape=record,label="{64\:\ 0x007b|r4[r2] = r1\ljava.lang.Object[] r4 = r9.mArray\lr4[r2 \<\< 1] = r10\lr4[(r2 \<\< 1) + 1] = r11\lr9.mSize = r3 + 1\l}"];
Node_65 [shape=record,label="{65\:\ 0x008e|RETURN\l|return null\l}"];
Node_66 [shape=record,label="{66\:\ 0x008f}"];
Node_67 [shape=record,label="{67\:\ 0x0094|throw new java.util.ConcurrentModificationException()\l}"];
Node_39 [shape=record,label="{39\:\ 0x000a|int r1 = r10.hashCode()\lint r2 = indexOf(r10, r1)\l}"];
MethodNode[shape=record,label="{public V androidx.collection.SimpleArrayMap.put((r9v0 'this' androidx.collection.SimpleArrayMap\<K, V\> A[D('this' androidx.collection.SimpleArrayMap\<K, V\>), IMMUTABLE_TYPE, THIS]), (r10v0 'key' K A[D('key' K), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'value' V A[D('value' V), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:65:0x008e \-\> B:35:?, CROSS_EDGE: B:67:0x0094 \-\> B:35:?, CROSS_EDGE: B:61:0x0074 \-\> B:66:0x008f, CROSS_EDGE: B:58:0x0057 \-\> B:60:0x0072, CROSS_EDGE: B:53:0x0040 \-\> B:55:0x004d, CROSS_EDGE: B:57:0x0056 \-\> B:35:?, CROSS_EDGE: B:49:0x0030 \-\> B:50:0x0032, CROSS_EDGE: B:48:0x002e \-\> B:50:0x0032, CROSS_EDGE: B:44:0x0023 \-\> B:58:0x0057, CROSS_EDGE: B:39:0x000a \-\> B:40:0x0012\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lSIGNATURE: (TK;TV;)TV;\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_35;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_58;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_56;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_58;
Node_56 -> Node_57;
Node_57 -> Node_35;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_66;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_66;
Node_64 -> Node_65;
Node_65 -> Node_35;
Node_66 -> Node_67;
Node_67 -> Node_35;
Node_39 -> Node_40;
}

