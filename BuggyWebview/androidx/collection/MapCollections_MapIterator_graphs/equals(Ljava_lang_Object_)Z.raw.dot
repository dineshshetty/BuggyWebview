digraph "CFG forandroidx.collection.MapCollections.MapIterator.equals(Ljava\/lang\/Object;)Z" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r6 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mEntryValid boolean  (LINE:137)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0036 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)]) java.util.Map$Entry  (LINE:141)\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x000a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0009|RETURN\l|0x0009: RETURN  (r1 I:boolean)  (LINE:142)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|0x000a: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('o' java.lang.Object)])  (LINE:144)\l0x000b: CHECK_CAST (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:??[OBJECT, ARRAY]) \l0x000d: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('e' java.util.Map$Entry\<?, ?\>)]) type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:145)\l0x0011: IGET  (r3 I:androidx.collection.MapCollections) = (r6 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.this$0 androidx.collection.MapCollections \l0x0013: IGET  (r4 I:int) = (r6 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mIndex int \l0x0015: INVOKE  (r3 I:java.lang.Object) = (r3 I:androidx.collection.MapCollections), (r4 I:int), (r1 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l0x0019: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Object), (r3 I:java.lang.Object) type: STATIC call: androidx.collection.ContainerHelpers.equal(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l0x001d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map$Entry A[D('e' java.util.Map$Entry\<?, ?\>)]) type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)] (LINE:146)\l0x0024: IGET  (r4 I:androidx.collection.MapCollections) = (r6 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.this$0 androidx.collection.MapCollections \l0x0026: IGET  (r5 I:int) = (r6 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mIndex int \l0x0028: INVOKE  (r4 I:java.lang.Object) = (r4 I:androidx.collection.MapCollections), (r5 I:int), (r3 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l0x002c: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Object), (r4 I:java.lang.Object) type: STATIC call: androidx.collection.ContainerHelpers.equal(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|0x0030: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0035: RETURN  (r1 I:boolean)  (LINE:145)\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:145)\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN  (r1 I:boolean) A[SYNTHETIC] (LINE:145)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|0x0036: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('e' java.util.Map$Entry\<?, ?\>)]) =  java.lang.IllegalStateException  (LINE:138)\l0x0038: CONST_STR  (r1 I:java.lang.String) =  \"This container does not support retaining Map.Entry objects\" \l0x003a: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x003d|0x003d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.MapCollections.MapIterator.equals((r6 'this' I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator), IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x0035 \-\> B:19:?, CROSS_EDGE: B:28:0x0030 \-\> B:31:0x0035, CROSS_EDGE: B:26:0x001e \-\> B:31:0x0035, CROSS_EDGE: B:33:0x003d \-\> B:19:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0036: r0 'e' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<**\>;\l  0x0000\-0x003d: r6 'this' Landroidx\/collection\/MapCollections$MapIterator;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>.MapIterator;\l  \-1 \-0x003d: r7 'o' Ljava\/lang\/Object;\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.Entry.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_19;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_19;
Node_35 -> Node_19;
Node_34 -> Node_19;
Node_32 -> Node_33;
Node_33 -> Node_19;
}

