digraph "CFG forandroidx.collection.MapCollections.MapIterator.hashCode()I" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r5 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mEntryValid boolean  (LINE:151)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0027 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|0x0004: IGET  (r0 I:androidx.collection.MapCollections) = (r5 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.this$0 androidx.collection.MapCollections  (LINE:155)\l0x0006: IGET  (r1 I:int) = (r5 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mIndex int \l0x0008: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0009: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.collection.MapCollections), (r1 I:int), (r2 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l0x000d: IGET  (r1 I:androidx.collection.MapCollections) = (r5 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.this$0 androidx.collection.MapCollections  (LINE:156)\l0x000f: IGET  (r3 I:int) = (r5 I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator)]) androidx.collection.MapCollections.MapIterator.mIndex int \l0x0011: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0012: INVOKE  (r1 I:java.lang.Object) = (r1 I:androidx.collection.MapCollections), (r3 I:int), (r4 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|0x0016: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x001a  (LINE:157)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|0x0018: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001e|0x001e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0021 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0021|0x0021: INVOKE  (r2 I:int) = (r1 I:java.lang.Object A[D('value' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)] (LINE:158)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|0x0025: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) ^ (r3 I:??[int, boolean, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:int)  (LINE:157)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x001a|0x001a: INVOKE  (r3 I:int) = (r0 I:java.lang.Object A[D('key' java.lang.Object)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException A[D('key' java.lang.Object)]) =  java.lang.IllegalStateException  (LINE:152)\l0x0029: CONST_STR  (r1 I:java.lang.String) =  \"This container does not support retaining Map.Entry objects\" \l0x002b: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x002e|0x002e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int androidx.collection.MapCollections.MapIterator.hashCode((r5 'this' I:androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:26:0x0025, CROSS_EDGE: B:22:0x001a \-\> B:23:0x001e, CROSS_EDGE: B:29:0x002e \-\> B:16:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0027: r0 'key' Ljava\/lang\/Object;\l  0x0016\-0x0027: r1 'value' Ljava\/lang\/Object;\l  0x0000\-0x002e: r5 'this' Landroidx\/collection\/MapCollections$MapIterator;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>.MapIterator;\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.Entry.hashCode():int\}]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_22 -> Node_23;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

