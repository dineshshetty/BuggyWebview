digraph "CFG forandroidx.collection.MapCollections.MapIterator.hashCode()I" {
subgraph cluster_Region_1091662409 {
label = "R(1:(2:(1:13)|(3:3|4|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1685709561 {
label = "R(2:(1:13)|(3:3|4|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_153800183 {
label = "IF [B:18:0x0002] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r5.mEntryValid == false) goto L12\l}"];
subgraph cluster_Region_320212511 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x002e|throw new java.lang.IllegalStateException(\"This container does not support retaining Map.Entry objects\")\l}"];
}
}
subgraph cluster_Region_315280812 {
label = "R(3:3|4|9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0004|java.lang.Object java.lang.Object r0 = androidx.collection.MapCollections.this.colGetEntry(r5.mIndex, 0)\ljava.lang.Object java.lang.Object r1 = androidx.collection.MapCollections.this.colGetEntry(r5.mIndex, 1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016}"];
Node_27 [shape=record,label="{27\:\ 0x0026|RETURN\l|return (r1 != null ? r1.hashCode() : 0) ^ (r0 == null ? 0 : r0.hashCode())\l}"];
}
}
}
Node_15 [shape=record,color=red,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0000}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0018}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x001e|PHI: r3 \l  PHI: (r3v2 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0021}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0025|PHI: r2 \l  PHI: (r2v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x001a}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0027}"];
MethodNode[shape=record,label="{public int androidx.collection.MapCollections.MapIterator.hashCode((r5v0 'this' androidx.collection.MapCollections$MapIterator A[D('this' androidx.collection.MapCollections\<K, V\>$MapIterator), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:23:0x001e \-\> B:26:0x0025, CROSS_EDGE: B:22:0x001a \-\> B:23:0x001e, CROSS_EDGE: B:29:0x002e \-\> B:16:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [V, K]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Map.Entry.hashCode():int\}]\l}"];
MethodNode -> Node_15;Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_29 -> Node_16;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_27 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_21 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_22 -> Node_23;
Node_28 -> Node_29;
}

