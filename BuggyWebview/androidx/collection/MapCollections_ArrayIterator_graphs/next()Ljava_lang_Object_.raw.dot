digraph "CFG forandroidx.collection.MapCollections.ArrayIterator.next()Ljava\/lang\/Object;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l type: VIRTUAL call: androidx.collection.MapCollections.ArrayIterator.hasNext():boolean A[MD:():boolean (m)] (LINE:55)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0019 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: IGET  (r0 I:androidx.collection.MapCollections) = \l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.this$0 androidx.collection.MapCollections  (LINE:56)\l0x0008: IGET  (r1 I:int) = \l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.mIndex int \l0x000a: IGET  (r2 I:int) = \l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.mOffset int \l0x000c: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.collection.MapCollections), (r1 I:int), (r2 I:int) type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)]\l0x0010: IGET  (r1 I:int) = \l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.mIndex int  (LINE:57)\l0x0012: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0013: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0014: IPUT  \l  (r1 I:int)\l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.mIndex int \l0x0016: IPUT  \l  (r2 I:boolean)\l  (r3 I:androidx.collection.MapCollections$ArrayIterator A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>)])\l androidx.collection.MapCollections.ArrayIterator.mCanRemove boolean  (LINE:58)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|RETURN\l|0x0018: RETURN  (r0 I:T A[D('res' java.lang.Object)])  (LINE:59)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|0x0019: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException A[D('res' java.lang.Object)]) =  java.util.NoSuchElementException  (LINE:55)\l0x001b: INVOKE  (r0 I:java.util.NoSuchElementException) type: DIRECT call: java.util.NoSuchElementException.\<init\>():void A[MD:():void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T androidx.collection.MapCollections.ArrayIterator.next((r3 'this' I:androidx.collection.MapCollections$ArrayIterator\<T\> A[D('this' androidx.collection.MapCollections\<K, V\>$ArrayIterator\<T\>), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x001e \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, V, K]\lSIGNATURE: ()TT;\lDebug Info:\l  0x0010\-0x0019: r0 'res' Ljava\/lang\/Object;\l  0x0000\-0x001e: r3 'this' Landroidx\/collection\/MapCollections$ArrayIterator;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>.ArrayIterator\<TT;\>;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Iterator.next():E\}]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

