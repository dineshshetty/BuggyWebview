digraph "CFG forandroidx.collection.MapCollections.toArrayHelper([Ljava\/lang\/Object;I)[Ljava\/lang\/Object;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:androidx.collection.MapCollections A[D('this' androidx.collection.MapCollections\<K, V\>)]) type: VIRTUAL call: androidx.collection.MapCollections.colGetSize():int A[MD:():int (m)] (LINE:499)\l0x0004: ARRAY_LENGTH  (r1 I:int) = (r4 I:??[] A[D('array' T[])])  (LINE:500)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IF  (r1 I:??[int, byte, short, char]) \>= (r0 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:18:0x0019 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: INVOKE  (r1 I:java.lang.Class) = (r4 I:java.lang.Object A[D('array' T[])]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:502)\l0x000c: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getComponentType():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x0010: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Class), (r0 I:int A[D('N' int)]) type: STATIC call: java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object A[MD:(java.lang.Class\<?\>, int):java.lang.Object throws java.lang.NegativeArraySizeException (c)]\l0x0014: CHECK_CAST (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:??[OBJECT, ARRAY]) \l0x0016: CHECK_CAST (r1 I:java.lang.Object[]) = (java.lang.Object[]) (r1 I:??[OBJECT, ARRAY]) \l0x0018: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('array' T[])]) = (r1 I:??[OBJECT, ARRAY] A[D('newArray' T[])])  (LINE:503)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newArray' T[])]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:505)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|LOOP_START\lLOOP:0: B:19:0x001a\-\>B:20:0x001c\l|0x001a: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:25:0x0025 \l}"];
Node_20 [shape=record,label="{20\:\ 0x001c|LOOP_END\lLOOP:0: B:19:0x001a\-\>B:20:0x001c\l|0x001c: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:androidx.collection.MapCollections A[D('this' androidx.collection.MapCollections\<K, V\>)])\l  (r1 I:int A[D('i' int)])\l  (r5 I:int A[D('offset' int)])\l type: VIRTUAL call: androidx.collection.MapCollections.colGetEntry(int, int):java.lang.Object A[MD:(int, int):java.lang.Object (m)] (LINE:506)\l0x0020: APUT  (r4 I:??[OBJECT, ARRAY][] A[D('array' T[])]), (r1 I:??[int, short, byte, char] A[D('i' int)]), (r2 I:??[OBJECT, ARRAY]) \l0x0022: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:505)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0025|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0025|0x0025: ARRAY_LENGTH  (r1 I:int A[D('i' int)]) = (r4 I:??[] A[D('array' T[])])  (LINE:508)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|0x0026: IF  (r1 I:??[int, byte, short, char]) \<= (r0 I:??[int, byte, short, char] A[D('N' int)])  \-\> B:24:0x002b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0028|0x0028: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:509)\l0x0029: APUT  (r4 I:??[OBJECT, ARRAY][] A[D('array' T[])]), (r0 I:??[int, short, byte, char] A[D('N' int)]), (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x002b|RETURN\l|0x002b: RETURN  (r4 I:T[] A[D('array' T[])])  (LINE:511)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T[] androidx.collection.MapCollections.toArrayHelper((r3 'this' I:androidx.collection.MapCollections\<K, V\> A[D('this' androidx.collection.MapCollections\<K, V\>), IMMUTABLE_TYPE, THIS]), (r4 I:T[] A[D('array' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:20:0x001c \-\> B:19:0x001a, CROSS_EDGE: B:22:0x0026 \-\> B:24:0x002b, CROSS_EDGE: B:16:0x0005 \-\> B:18:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x0019: r1 'newArray' [Ljava\/lang\/Object;, signature: [TT;\l  0x001a\-0x0025: r1 'i' I\l  0x0004\-0x002b: r0 'N' I\l  0x0000\-0x002b: r3 'this' Landroidx\/collection\/MapCollections;, signature: Landroidx\/collection\/MapCollections\<TK;TV;\>;\l  0x0000\-0x002b: r4 'array' [Ljava\/lang\/Object;, signature: [TT;\l  \-1 \-0x002b: r5 'offset' I\lTYPE_VARS: [T, V, K]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;I)[TT;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_19;
Node_25 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

