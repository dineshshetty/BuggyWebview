digraph "CFG forandroidx.collection.MapCollections.equalsSetHelper(Ljava\/util\/Set;Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_845320997 {
label = "R(1:(2:(1:3)|(1:(2:(2:7|(2:(1:(1:13))|15))|(1:20)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1098622456 {
label = "R(2:(1:3)|(1:(2:(2:7|(2:(1:(1:13))|15))|(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1778848593 {
label = "IF [B:26:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0001|if (r5 == r6) goto L3\l}"];
subgraph cluster_Region_1331218467 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1761972566 {
label = "R(1:(2:(2:7|(2:(1:(1:13))|15))|(1:20)))";
node [shape=record,color=blue];
subgraph cluster_Region_1968025067 {
label = "R(2:(2:7|(2:(1:(1:13))|15))|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_654484872 {
label = "IF [B:29:0x0007] THEN: R(2:7|(2:(1:(1:13))|15)) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0007|if ((r6 instanceof java.util.Set) == true) goto L7\l}"];
subgraph cluster_Region_337310125 {
label = "R(2:7|(2:(1:(1:13))|15))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0009|java.util.Set java.util.Set\<?\> r1 = (java.util.Set) r6\l}"];
subgraph cluster_TryCatchRegion_772962459 {
label = "Try: R(2:(1:(1:13))|15) catches: R(1:17), R(1:19)";
node [shape=record,color=blue];
subgraph cluster_Region_1809367854 {
label = "R(2:(1:(1:13))|15)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1587432351 {
label = "IF [B:32:0x0014] THEN: R(1:(1:13)) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0014|if (r5.size() == r1.size()) goto L11\l}"];
subgraph cluster_Region_1944193355 {
label = "R(1:(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_827694747 {
label = "IF [B:34:0x001a] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x001a|if (r5.containsAll(r1) != false) goto L13\l}"];
subgraph cluster_Region_1098832986 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
Node_36 [shape=record,label="{36\:\ 0x001d|RETURN\lORIG_RETURN\l|return false\l}"];
}
subgraph cluster_Region_2090181198 {
label = "R(1:17) | ExcHandler: ClassCastException \-\> 0x001f\l";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0020|RETURN\l|return false\l}"];
}
subgraph cluster_Region_1366941505 {
label = "R(1:19) | ExcHandler: NullPointerException \-\> 0x0021\l";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0022|RETURN\l|return false\l}"];
}
}
}
}
subgraph cluster_Region_842148980 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0023|RETURN\l|return false\l}"];
}
}
}
}
}
subgraph cluster_Region_1366941505 {
label = "R(1:19) | ExcHandler: NullPointerException \-\> 0x0021\l";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0022|RETURN\l|return false\l}"];
}
subgraph cluster_Region_2090181198 {
label = "R(1:17) | ExcHandler: ClassCastException \-\> 0x001f\l";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0020|RETURN\l|return false\l}"];
}
Node_23 [shape=record,color=red,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0000}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0004}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x000c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000c|TRY_ENTER\lTryCatch #2 \{ClassCastException \-\> 0x001f, NullPointerException \-\> 0x0021, blocks: (B:31:0x000c, B:33:0x0016), top: B:43:0x000c \}\lCatch: ClassCastException \-\> 0x001f, NullPointerException \-\> 0x0021\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0016|TRY_LEAVE\lTryCatch #2 \{ClassCastException \-\> 0x001f, NullPointerException \-\> 0x0021, blocks: (B:31:0x000c, B:33:0x0016), top: B:43:0x000c \}\lCatch: ClassCastException \-\> 0x001f, NullPointerException \-\> 0x0021\l}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x001f|ExcHandler: ClassCastException \-\> 0x001f\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0021|ExcHandler: NullPointerException \-\> 0x0021\l}"];
MethodNode[shape=record,label="{public static boolean androidx.collection.MapCollections.equalsSetHelper((r5v0 'set' java.util.Set\<T\> A[D('set' java.util.Set\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'object' java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x001e \-\> B:24:?, CROSS_EDGE: B:34:0x001a \-\> B:37:0x001e, CROSS_EDGE: B:39:0x0020 \-\> B:24:?, CROSS_EDGE: B:41:0x0022 \-\> B:24:?, CROSS_EDGE: B:32:0x0014 \-\> B:36:0x001d, CROSS_EDGE: B:43:0x000c \-\> B:38:0x001f, CROSS_EDGE: B:43:0x000c \-\> B:40:0x0021, CROSS_EDGE: B:42:0x0023 \-\> B:24:?\lINLINE_NOT_NEEDED\lTryCatch #2 \{ClassCastException \-\> 0x001f, NullPointerException \-\> 0x0021, blocks: (B:31:0x000c, B:33:0x0016), top: B:43:0x000c \}\lTYPE_VARS: [T, V, K]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/util\/Set\<TT;\>;Ljava\/lang\/Object;)Z\l}"];
MethodNode -> Node_23;Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_24;
Node_29 -> Node_30;
Node_29 -> Node_42[style=dashed];
Node_30 -> Node_43;
Node_32 -> Node_33;
Node_32 -> Node_36[style=dashed];
Node_34 -> Node_36[style=dashed];
Node_34 -> Node_45;
Node_45 -> Node_24;
Node_36 -> Node_24;
Node_39 -> Node_24;
Node_41 -> Node_24;
Node_42 -> Node_24;
Node_41 -> Node_24;
Node_39 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_43 -> Node_31;
Node_43 -> Node_38;
Node_43 -> Node_40;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_44;
Node_44 -> Node_38;
Node_44 -> Node_40;
Node_38 -> Node_39;
Node_40 -> Node_41;
}

