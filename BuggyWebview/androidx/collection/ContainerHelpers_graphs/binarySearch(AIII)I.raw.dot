digraph "CFG forandroidx.collection.ContainerHelpers.binarySearch([III)I" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:46)\l0x0001: ARITH  (r1 I:int) = (r5 I:int A[D('size' int)]) + (\-1 int)  (LINE:47)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|LOOP_START\lLOOP:0: B:23:0x0003\-\>B:37:0x0003\l|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('lo' int)]) \> (r1 I:??[int, byte, short, char] A[D('hi' int)])  \-\> B:33:0x0016  (LINE:49)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|0x0005: ARITH  (r2 I:int) = (r0 I:int A[D('lo' int)]) + (r1 I:int A[D('hi' int)])  (LINE:50)\l0x0007: ARITH  (r2 I:int) = (r2 I:int) \>\>\> (1 int) \l0x0009: AGET  (r3 I:??[int, float, short, byte, char]) = (r4 I:??[int, float][] A[D('array' int[])]), (r2 I:??[int, short, byte, char] A[D('mid' int)])  (LINE:51)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000b|0x000b: IF  (r3 I:??[int, byte, short, char] A[D('midVal' int)]) \>= (r6 I:??[int, byte, short, char] A[D('value' int)])  \-\> B:34:0x0010  (LINE:53)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0010|0x0010: IF  (r3 I:??[int, byte, short, char] A[D('midVal' int)]) \<= (r6 I:??[int, byte, short, char] A[D('value' int)])  \-\> B:35:0x0015  (LINE:55)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0012|0x0012: ARITH  (r1 I:int A[D('hi' int)]) = (r2 I:int A[D('mid' int)]) + (\-1 int)  (LINE:56)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0003|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0003|LOOP_END\lSYNTHETIC\lLOOP:0: B:23:0x0003\-\>B:37:0x0003\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0015|RETURN\l|0x0015: RETURN  (r2 I:int A[D('mid' int)])  (LINE:58)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x000d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x000d|0x000d: ARITH  (r0 I:int A[D('lo' int)]) = (r2 I:int A[D('mid' int)]) + (1 int)  (LINE:54)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0003|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0016|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: NOT  (r2 I:int A[D('mid' int)]) = (r0 I:int A[D('lo' int)])  (LINE:61)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|RETURN\l|0x0017: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static int androidx.collection.ContainerHelpers.binarySearch((r4 I:int[] A[D('array' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('value' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x000d \-\> B:23:0x0003, BACK_EDGE: B:28:0x0012 \-\> B:23:0x0003, CROSS_EDGE: B:32:0x0017 \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x0014: r2 'mid' I\l  0x000b\-0x0014: r3 'midVal' I\l  0x0015\-0x0016: r2 'mid' I\l  0x0015\-0x0016: r3 'midVal' I\l  0x0001\-0x0017: r0 'lo' I\l  0x0003\-0x0017: r1 'hi' I\l  \-1 \-0x0017: r4 'array' [I\l  \-1 \-0x0017: r5 'size' I\l  \-1 \-0x0017: r6 'value' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_33;
Node_24 -> Node_25;
Node_25 -> Node_34;
Node_25 -> Node_36[style=dashed];
Node_34 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_38;
Node_38 -> Node_37;
Node_37 -> Node_23;
Node_35 -> Node_30;
Node_30 -> Node_21;
Node_36 -> Node_26;
Node_26 -> Node_39;
Node_39 -> Node_37;
Node_33 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_21;
}

