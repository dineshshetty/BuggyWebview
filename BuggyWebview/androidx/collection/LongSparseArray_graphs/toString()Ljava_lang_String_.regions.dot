digraph "CFG forandroidx.collection.LongSparseArray.toString()Ljava\/lang\/String;" {
subgraph cluster_Region_382576481 {
label = "R(1:(2:(1:3)|(4:5|(4:(1:9)|10|(1:12)(1:15)|14)|18|19)))";
node [shape=record,color=blue];
subgraph cluster_Region_330306296 {
label = "R(2:(1:3)|(4:5|(4:(1:9)|10|(1:12)(1:15)|14)|18|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_300798876 {
label = "IF [B:24:0x0004] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0004|if (size() \<= 0) goto L3\l}"];
subgraph cluster_Region_1857858600 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0006|RETURN\l|return \"\{\}\"\l}"];
}
}
subgraph cluster_Region_2000358596 {
label = "R(4:5|(4:(1:9)|10|(1:12)(1:15)|14)|18|19)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0009|java.lang.StringBuilder java.lang.StringBuilder r0 = new java.lang.StringBuilder(r6.mSize * 28)\lr0.append('\{')\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_897863497 {
label = "LOOP:0: (4:(1:9)|10|(1:12)(1:15)|14)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x001a|if (r1 \< r6.mSize) goto L8\l}"];
subgraph cluster_Region_1161302614 {
label = "R(4:(1:9)|10|(1:12)(1:15)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_808145165 {
label = "IF [B:30:0x001c] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001c|if (r1 \> 0) goto L9\l}"];
subgraph cluster_Region_167230760 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x001e|r0.append(\", \")\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x0023|long long r2 = keyAt(r1)\lr0.append(r2)\lr0.append('=')\ljava.lang.Object java.lang.Object r4 = valueAt(r1)\l}"];
subgraph cluster_IfRegion_2021382042 {
label = "IF [B:33:0x0033] THEN: R(1:12) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0033|if (r4 != r6) goto L12\l}"];
subgraph cluster_Region_777836698 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0035|r0.append(r4)\l}"];
}
subgraph cluster_Region_19836089 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0039|r0.append(\"(this Map)\")\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x003e|LOOP_END\lLOOP:0: B:28:0x0018\-\>B:36:0x003e\l|r1++\l}"];
}
}
Node_37 [shape=record,label="{37\:\ 0x0041|r0.append('\}')\l}"];
Node_38 [shape=record,label="{38\:\ 0x004a|RETURN\l|return r0.toString()\l}"];
}
}
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0000}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0018|LOOP_START\lLOOP:0: B:28:0x0018\-\>B:36:0x003e\lPHI: r1 \l  PHI: (r1v4 'i' int) = (r1v3 'i' int), (r1v7 'i' int) binds: [B:27:0x0009, B:36:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x003e|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x003e|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0041|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.lang.String androidx.collection.LongSparseArray.toString((r6v0 'this' androidx.collection.LongSparseArray\<E\> A[D('this' androidx.collection.LongSparseArray\<E\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x003e \-\> B:28:0x0018, CROSS_EDGE: B:35:0x0039 \-\> B:36:0x003e, CROSS_EDGE: B:30:0x001c \-\> B:32:0x0023, CROSS_EDGE: B:38:0x004a \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_21;Node_24 -> Node_25;
Node_24 -> Node_27[style=dashed];
Node_25 -> Node_22;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_29 -> Node_39[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_40;
Node_36 -> Node_28;
Node_37 -> Node_38;
Node_38 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_28 -> Node_29;
Node_41 -> Node_36;
Node_40 -> Node_36;
Node_39 -> Node_37;
}

