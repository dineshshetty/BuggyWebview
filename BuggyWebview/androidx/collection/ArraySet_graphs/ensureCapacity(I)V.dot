digraph "CFG forandroidx.collection.ArraySet.ensureCapacity(I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0003|if (r5.mHashes.length \>= r6) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|int[] r0 = r5.mHashes\ljava.lang.Object[] r1 = r5.mArray\lallocArrays(r6)\lint r2 = r5.mSize\l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|if (r2 \<= 0) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|java.lang.System.arraycopy(r0, 0, r5.mHashes, 0, r2)\ljava.lang.System.arraycopy(r1, 0, r5.mArray, 0, r5.mSize)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|freeArrays(r0, r1, r5.mSize)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.collection.ArraySet.ensureCapacity((r5v0 'this' androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r6v0 'minimumCapacity' int A[D('minimumCapacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000e \-\> B:17:0x001d, CROSS_EDGE: B:13:0x0003 \-\> B:18:0x0022\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

