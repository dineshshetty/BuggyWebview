digraph "CFG forandroidx.collection.ArraySet.add(Ljava\/lang\/Object;)Z" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' E)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0008  (LINE:359)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0002|0x0002: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:360)\l0x0003: INVOKE  (r1 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) type: DIRECT call: androidx.collection.ArraySet.indexOfNull():int A[MD:():int (m)] (LINE:361)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:366)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:32:0x0014 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:boolean)  (LINE:367)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|0x0014: NOT  (r1 I:int) = (r1 I:int A[D('index' int)])  (LINE:370)\l0x0015: IGET  (r3 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int  (LINE:371)\l0x0017: IGET  (r4 I:int[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mHashes int[] \l0x0019: ARRAY_LENGTH  (r4 I:int) = (r4 I:??[]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x001a|0x001a: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:43:0x0045 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001c|0x001c: CONST  (r4 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:372)\l0x001d: CONST  (r5 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x001f|0x001f: IF  (r3 I:??[int, byte, short, char]) \< (r5 I:??[int, byte, short, char])  \-\> B:37:0x0025 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0021|0x0021: ARITH  (r4 I:int) = (r3 I:int) \>\> (1 int) \l0x0023: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0029|0x0029: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002a: IGET  (r4 I:int[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mHashes int[]  (LINE:377)\l0x002c: IGET  (r5 I:java.lang.Object[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mArray java.lang.Object[]  (LINE:378)\l0x002e: INVOKE  (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]), (r3 I:int A[D('n' int)]) type: DIRECT call: androidx.collection.ArraySet.allocArrays(int):void A[MD:(int):void (m)] (LINE:379)\l0x0031: IGET  (r6 I:int[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mHashes int[]  (LINE:381)\l0x0033: ARRAY_LENGTH  (r7 I:int) = (r6 I:??[]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0034|0x0034: IF  (r7 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:42:0x0040 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0036|0x0036: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[] A[D('ohashes' int[])])  (LINE:383)\l0x0037: INVOKE  (r4 I:java.lang.Object A[D('ohashes' int[])]), (r2 I:int), (r6 I:java.lang.Object), (r2 I:int), (r7 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x003a: IGET  (r6 I:java.lang.Object[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mArray java.lang.Object[]  (LINE:384)\l0x003c: ARRAY_LENGTH  (r7 I:int) = (r5 I:??[] A[D('oarray' java.lang.Object[])]) \l0x003d: INVOKE  (r5 I:java.lang.Object A[D('oarray' java.lang.Object[])]), (r2 I:int), (r6 I:java.lang.Object), (r2 I:int), (r7 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0040|0x0040: IGET  (r2 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int  (LINE:387)\l0x0042: INVOKE  (r4 I:int[] A[D('ohashes' int[])]), (r5 I:java.lang.Object[] A[D('oarray' java.lang.Object[])]), (r2 I:int) type: STATIC call: androidx.collection.ArraySet.freeArrays(int[], java.lang.Object[], int):void A[MD:(int[], java.lang.Object[], int):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0025|0x0025: IF  (r3 I:??[int, byte, short, char]) \< (r4 I:??[int, byte, short, char])  \-\> B:39:0x0029 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|0x0027: CONST  (r4 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0045|0x0045: IGET  (r2 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int  (LINE:390)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0047|0x0047: IF  (r1 I:??[int, byte, short, char] A[D('index' int)]) \>= (r2 I:??[int, byte, short, char])  \-\> B:46:0x005b \l}"];
Node_45 [shape=record,label="{45\:\ 0x0049|0x0049: IGET  (r3 I:int[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mHashes int[]  (LINE:395)\l0x004b: ARITH  (r4 I:int) = (r1 I:int A[D('index' int)]) + (1 int) \l0x004d: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int A[D('index' int)]) \l0x004e: INVOKE  (r3 I:java.lang.Object), (r1 I:int A[D('index' int)]), (r3 I:java.lang.Object), (r4 I:int), (r2 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0051: IGET  (r2 I:java.lang.Object[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mArray java.lang.Object[]  (LINE:396)\l0x0053: ARITH  (r3 I:int) = (r1 I:int A[D('index' int)]) + (1 int) \l0x0055: IGET  (r4 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int \l0x0057: ARITH  (r4 I:int) = (r4 I:int) \- (r1 I:int A[D('index' int)]) \l0x0058: INVOKE  (r2 I:java.lang.Object), (r1 I:int A[D('index' int)]), (r2 I:java.lang.Object), (r3 I:int), (r4 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x005b|0x005b: IGET  (r2 I:int[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mHashes int[]  (LINE:399)\l0x005d: APUT  \l  (r2 I:??[int, float][])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l  (r0 I:??[int, float, short, byte, char] A[D('hash' int)])\l \l0x005f: IGET  (r2 I:java.lang.Object[]) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mArray java.lang.Object[]  (LINE:400)\l0x0061: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r1 I:??[int, short, byte, char] A[D('index' int)])\l  (r9 I:??[OBJECT, ARRAY] A[D('value' E)])\l \l0x0063: IGET  (r2 I:int) = (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int  (LINE:401)\l0x0065: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0066: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0067: IPUT  (r2 I:int), (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int \l}"];
Node_47 [shape=record,label="{47\:\ 0x0069|RETURN\l|0x0069: RETURN  (r3 I:boolean)  (LINE:402)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = (r9 I:java.lang.Object A[D('value' E)]) type: VIRTUAL call: java.lang.Object.hashCode():int A[MD:():int (c)] (LINE:363)\l0x000c: INVOKE  (r1 I:int) = \l  (r8 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)])\l  (r9 I:java.lang.Object A[D('value' E)])\l  (r0 I:int A[D('hash' int)])\l type: DIRECT call: androidx.collection.ArraySet.indexOf(java.lang.Object, int):int A[MD:(java.lang.Object, int):int (m)] (LINE:364)\l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.ArraySet.add((r8 'this' I:androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r9 I:E A[D('value' E), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:47:0x0069 \-\> B:25:?, CROSS_EDGE: B:44:0x0047 \-\> B:46:0x005b, CROSS_EDGE: B:40:0x0034 \-\> B:42:0x0040, CROSS_EDGE: B:38:0x0027 \-\> B:39:0x0029, CROSS_EDGE: B:37:0x0025 \-\> B:39:0x0029, CROSS_EDGE: B:33:0x001a \-\> B:43:0x0045, CROSS_EDGE: B:28:0x0008 \-\> B:29:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (TE;)Z\lDebug Info:\l  0x0003\-0x0008: r0 'hash' I\l  0x0007\-0x0008: r1 'index' I\l  0x002a\-0x0045: r3 'n' I\l  0x002c\-0x0045: r4 'ohashes' [I\l  0x002e\-0x0045: r5 'oarray' [Ljava\/lang\/Object;\l  0x000c\-0x0069: r0 'hash' I\l  0x0010\-0x0069: r1 'index' I\l  0x0000\-0x0069: r8 'this' Landroidx\/collection\/ArraySet;, signature: Landroidx\/collection\/ArraySet\<TE;\>;\l  0x0000\-0x0069: r9 'value' Ljava\/lang\/Object;, signature: TE;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.add(E):boolean\}]\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_43;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_25;
Node_28 -> Node_29;
}

