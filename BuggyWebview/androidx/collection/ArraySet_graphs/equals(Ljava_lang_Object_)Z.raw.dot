digraph "CFG forandroidx.collection.ArraySet.equals(Ljava\/lang\/Object;)Z" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:559)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0001|0x0001: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('this' androidx.collection.ArraySet\<E\>)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('object' java.lang.Object)])  \-\> B:33:0x0004 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|RETURN\l|0x0003: RETURN  (r0 I:boolean)  (LINE:560)\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r7 I:??[OBJECT, ARRAY] A[D('object' java.lang.Object)]) java.util.Set  (LINE:562)\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0030 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|0x0009: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('object' java.lang.Object)])  (LINE:563)\l0x000a: CHECK_CAST (r1 I:java.util.Set) = (java.util.Set) (r1 I:??[OBJECT, ARRAY]) \l0x000c: INVOKE  (r3 I:int) = (r6 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) type: VIRTUAL call: androidx.collection.ArraySet.size():int A[MD:():int (m)] (LINE:564)\l0x0010: INVOKE  (r4 I:int) = (r1 I:java.util.Set A[D('set' java.util.Set\<?\>)]) type: INTERFACE call: java.util.Set.size():int A[MD:():int (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0017 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|RETURN\l|0x0016: RETURN  (r2 I:boolean)  (LINE:565)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|0x0017: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:569)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0018|LOOP_START\lSYNTHETIC\lEXC_TOP_SPLITTER\lLOOP:0: B:52:0x0018\-\>B:44:0x0027\l}"];
Node_39 [shape=record,label="{39\:\ 0x0018|TRY_ENTER\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lCatch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e\l|0x0018: IGET  (r4 I:int) = (r6 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]) androidx.collection.ArraySet.mSize int A[Catch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, TRY_ENTER]\l}"];
Node_40 [shape=record,label="{40\:\ 0x001a|0x001a: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char])  \-\> B:55:0x002b \l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|TRY_LEAVE\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lCatch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e\l|0x001c: INVOKE  (r4 I:java.lang.Object) = (r6 I:androidx.collection.ArraySet A[D('this' androidx.collection.ArraySet\<E\>)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: androidx.collection.ArraySet.valueAt(int):java.lang.Object A[Catch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, MD:(int):E (m)] (LINE:570)\l0x0020: INVOKE  (r5 I:boolean) = (r1 I:java.util.Set A[D('set' java.util.Set\<?\>)]), (r4 I:java.lang.Object A[D('mine' E)]) type: INTERFACE call: java.util.Set.contains(java.lang.Object):boolean A[Catch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, MD:(java.lang.Object):boolean (c), TRY_LEAVE] (LINE:571)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0024|0x0024: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0027 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|LOOP_END\lLOOP:0: B:52:0x0018\-\>B:44:0x0027\l|0x0027: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:569)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0026|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|RETURN\l|0x0026: RETURN  (r2 I:boolean)  (LINE:572)\l}"];
Node_55 [shape=record,label="{55\:\ 0x002b|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|RETURN\l|0x002b: RETURN  (r0 I:boolean)  (LINE:580)\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|ExcHandler: ClassCastException \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r0 I:java.lang.ClassCastException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassCastException \-\> 0x002c] (LINE:577)\l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|RETURN\l|0x002d: RETURN  (r2 I:boolean)  (LINE:578)\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|ExcHandler: NullPointerException \-\> 0x002e\l|0x002e: MOVE_EXCEPTION  (r0 I:java.lang.NullPointerException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NullPointerException \-\> 0x002e] (LINE:575)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002f|RETURN\l|0x002f: RETURN  (r2 I:boolean)  (LINE:576)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0030|RETURN\l|0x0030: RETURN  (r2 I:boolean)  (LINE:582)\l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.ArraySet.equals((r6 'this' I:androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:37:0x0016 \-\> B:29:?, CROSS_EDGE: B:43:0x0026 \-\> B:29:?, BACK_EDGE: B:44:0x0027 \-\> B:52:0x0018, CROSS_EDGE: B:46:0x002b \-\> B:29:?, CROSS_EDGE: B:48:0x002d \-\> B:29:?, CROSS_EDGE: B:50:0x002f \-\> B:29:?, CROSS_EDGE: B:52:0x0018 \-\> B:47:0x002c, CROSS_EDGE: B:52:0x0018 \-\> B:49:0x002e, CROSS_EDGE: B:51:0x0030 \-\> B:29:?\lINLINE_NOT_NEEDED\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lTYPE_VARS: [E]\lDebug Info:\l  0x0020\-0x0027: r4 'mine' Ljava\/lang\/Object;, signature: TE;\l  0x0018\-0x002a: r3 'i' I\l  0x002d\-0x002e: r0 'ignored' Ljava\/lang\/ClassCastException;\l  0x002f\-0x0030: r0 'ignored' Ljava\/lang\/NullPointerException;\l  0x000c\-0x0030: r1 'set' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<*\>;\l  0x0000\-0x0030: r6 'this' Landroidx\/collection\/ArraySet;, signature: Landroidx\/collection\/ArraySet\<TE;\>;\l  \-1 \-0x0030: r7 'object' Ljava\/lang\/Object;\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_51;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_29;
Node_38 -> Node_52;
Node_52 -> Node_39;
Node_52 -> Node_47;
Node_52 -> Node_49;
Node_39 -> Node_40;
Node_39 -> Node_53;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_55;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_54[style=dashed];
Node_44 -> Node_52;
Node_54 -> Node_43;
Node_43 -> Node_29;
Node_55 -> Node_46;
Node_46 -> Node_29;
Node_53 -> Node_47;
Node_53 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_29;
Node_49 -> Node_50;
Node_50 -> Node_29;
Node_51 -> Node_29;
}

