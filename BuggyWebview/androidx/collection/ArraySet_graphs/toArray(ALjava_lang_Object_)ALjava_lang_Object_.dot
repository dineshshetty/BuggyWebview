digraph "CFG forandroidx.collection.ArraySet.toArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000}"];
Node_12 [shape=record,label="{12\:\ 0x0003|if (r4.length \>= r3.mSize) goto L4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|r4 = (java.lang.Object[]) java.lang.reflect.Array.newInstance(r4.getClass().getComponentType(), r3.mSize)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0019|PHI: r4 \l  PHI: (r4v1 'array' T[]) = (r4v0 'array' T[]), (r4v2 'array' T[]) binds: [B:12:0x0003, B:13:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.System.arraycopy(r3.mArray, 0, r4, 0, r3.mSize)\lint r0 = r4.length\lint r1 = r3.mSize\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|if (r0 \<= r1) goto L7\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|r4[r1] = null\l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|RETURN\l|return r4\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T[] androidx.collection.ArraySet.toArray((r3v0 'this' androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r4v0 'array' T[] A[D('array' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0024 \-\> B:17:0x0029, CROSS_EDGE: B:12:0x0003 \-\> B:14:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: [T, E]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)[TT;\lJadxCommentsAttr\{\l WARN: \l \-\> Multi\-variable type inference failed\l \-\> Type inference failed for: r0v8, types: [java.lang.Object[]]\}\lMETHOD_OVERRIDE: [ClspMth\{\<T\> java.util.Collection.toArray(T[]):T[]\}]\l}"];
MethodNode -> Node_9;Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_10;
}

