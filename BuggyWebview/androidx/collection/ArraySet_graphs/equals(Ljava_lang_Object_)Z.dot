digraph "CFG forandroidx.collection.ArraySet.equals(Ljava\/lang\/Object;)Z" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0001|if (r6 != r7) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004}"];
Node_34 [shape=record,label="{34\:\ 0x0007|if ((r7 instanceof java.util.Set) == false) goto L26\l}"];
Node_35 [shape=record,label="{35\:\ 0x0009|java.util.Set r1 = (java.util.Set) r7\l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|if (size() == r1.size()) goto L10\l}"];
Node_37 [shape=record,label="{37\:\ 0x0016|RETURN\l|return false\l}"];
Node_38 [shape=record,label="{38\:\ 0x0017|r3 = 0\l}"];
Node_52 [shape=record,label="{52\:\ 0x0018|LOOP_START\lSYNTHETIC\lEXC_TOP_SPLITTER\lLOOP:0: B:52:0x0018\-\>B:44:0x0027\lPHI: r3 \l  PHI: (r3v2 'i' int) = (r3v1 'i' int), (r3v3 'i' int) binds: [B:38:0x0017, B:44:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0018|TRY_ENTER\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lCatch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e\l}"];
Node_40 [shape=record,label="{40\:\ 0x001a|if (r3 \>= r6.mSize) goto L19\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|TRY_LEAVE\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lCatch: ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e\l|java.lang.Object r4 = valueAt(r3)     \/\/ Catch: java.lang.ClassCastException \-\> L2c java.lang.NullPointerException \-\> L2e\l}"];
Node_42 [shape=record,label="{42\:\ 0x0024|if (r1.contains(r4) != false) goto L16\l}"];
Node_44 [shape=record,label="{44\:\ 0x0027|LOOP_END\lLOOP:0: B:52:0x0018\-\>B:44:0x0027\l|int r3 = r3 + 1\l}"];
Node_54 [shape=record,label="{54\:\ 0x0026|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0026|RETURN\l|return false\l}"];
Node_55 [shape=record,label="{55\:\ 0x002b|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x002b|RETURN\l|return true\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|ExcHandler: ClassCastException \-\> 0x002c\l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|RETURN\l|return false\l}"];
Node_49 [shape=record,label="{49\:\ 0x002e|ExcHandler: NullPointerException \-\> 0x002e\l}"];
Node_50 [shape=record,label="{50\:\ 0x002f|RETURN\l|return false\l}"];
Node_51 [shape=record,label="{51\:\ 0x0030|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.ArraySet.equals((r6v0 'this' androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r7v0 'object' java.lang.Object A[D('object' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:37:0x0016 \-\> B:29:?, CROSS_EDGE: B:43:0x0026 \-\> B:29:?, BACK_EDGE: B:44:0x0027 \-\> B:52:0x0018, CROSS_EDGE: B:46:0x002b \-\> B:29:?, CROSS_EDGE: B:48:0x002d \-\> B:29:?, CROSS_EDGE: B:50:0x002f \-\> B:29:?, CROSS_EDGE: B:52:0x0018 \-\> B:47:0x002c, CROSS_EDGE: B:52:0x0018 \-\> B:49:0x002e, CROSS_EDGE: B:51:0x0030 \-\> B:29:?\lINLINE_NOT_NEEDED\lTryCatch #2 \{ClassCastException \-\> 0x002c, NullPointerException \-\> 0x002e, blocks: (B:39:0x0018, B:41:0x001c), top: B:52:0x0018 \}\lTYPE_VARS: [E]\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.equals(java.lang.Object):boolean\}]\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_51;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_29;
Node_38 -> Node_52;
Node_52 -> Node_39;
Node_52 -> Node_47;
Node_52 -> Node_49;
Node_39 -> Node_40;
Node_39 -> Node_53;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_55;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_54[style=dashed];
Node_44 -> Node_52;
Node_54 -> Node_43;
Node_43 -> Node_29;
Node_55 -> Node_46;
Node_46 -> Node_29;
Node_53 -> Node_47;
Node_53 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_29;
Node_49 -> Node_50;
Node_50 -> Node_29;
Node_51 -> Node_29;
}

