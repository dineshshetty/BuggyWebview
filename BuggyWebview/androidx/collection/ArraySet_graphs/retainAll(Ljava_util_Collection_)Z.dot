digraph "CFG forandroidx.collection.ArraySet.retainAll(Ljava\/util\/Collection;)Z" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|r0 = false\lint r1 = r3.mSize + (\-1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|LOOP_START\lLOOP:0: B:15:0x0005\-\>B:19:0x0015\lPHI: r0 r1 \l  PHI: (r0v1 'removed' boolean) = (r0v0 'removed' boolean), (r0v2 'removed' boolean) binds: [B:14:0x0000, B:19:0x0015] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'i' int) = (r1v1 'i' int), (r1v3 'i' int) binds: [B:14:0x0000, B:19:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \< 0) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007}"];
Node_17 [shape=record,label="{17\:\ 0x000f|if (r4.contains(r3.mArray[r1]) != false) goto L8\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|removeAt(r1)\lr0 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0015|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|LOOP_END\lLOOP:0: B:15:0x0005\-\>B:19:0x0015\lPHI: r0 \l  PHI: (r0v2 'removed' boolean) = (r0v1 'removed' boolean), (r0v3 'removed' boolean) binds: [B:23:0x0015, B:22:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|int r1 = r1 + (\-1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0018|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0018|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean androidx.collection.ArraySet.retainAll((r3v0 'this' androidx.collection.ArraySet\<E\> A[D('this' androidx.collection.ArraySet\<E\>), IMMUTABLE_TYPE, THIS]), (r4v0 'collection' java.util.Collection\<?\> A[D('collection' java.util.Collection\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:19:0x0015 \-\> B:15:0x0005, CROSS_EDGE: B:17:0x000f \-\> B:19:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: [E]\lSIGNATURE: (Ljava\/util\/Collection\<*\>;)Z\lMETHOD_OVERRIDE: [ClspMth\{java.util.Collection.retainAll(java.util.Collection\<?\>):boolean\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_22;
Node_22 -> Node_19;
Node_19 -> Node_15;
Node_23 -> Node_19;
Node_21 -> Node_20;
Node_20 -> Node_13;
}

