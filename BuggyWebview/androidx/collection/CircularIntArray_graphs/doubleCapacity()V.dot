digraph "CFG forandroidx.collection.CircularIntArray.doubleCapacity()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int[] r0 = r7.mElements\lint r1 = r0.length\lint r2 = r7.mHead\lint r3 = r1 \- r2\lint r4 = r1 \<\< 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r4 \< 0) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|int[] r5 = new int[r4]\ljava.lang.System.arraycopy(r0, r2, r5, 0, r3)\ljava.lang.System.arraycopy(r7.mElements, 0, r5, r3, r7.mHead)\lr7.mElements = r5\lr7.mHead = 0\lr7.mTail = r1\lr7.mCapacityBitmask = r4 + (\-1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023}"];
Node_7 [shape=record,label="{7\:\ 0x002a|throw new java.lang.RuntimeException(\"Max array capacity exceeded\")\l}"];
MethodNode[shape=record,label="{private void androidx.collection.CircularIntArray.doubleCapacity((r7v0 'this' androidx.collection.CircularIntArray A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x002a \-\> B:1:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

