digraph "CFG forandroidx.lifecycle.LiveData.considerNotify(Landroidx\/lifecycle\/LiveData$ObserverWrapper;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r3.mActive != false) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005}"];
Node_20 [shape=record,label="{20\:\ 0x0009|if (r3.shouldBeActive() != false) goto L9\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|r3.activeStateChanged(false)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|int r0 = r3.mLastVersion\lint r1 = r2.mVersion\l}"];
Node_24 [shape=record,label="{24\:\ 0x0014|if (r0 \< r1) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|r3.mLastVersion = r1\lr3.mObserver.onChanged((java.lang.Object) r2.mData)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.lifecycle.LiveData.considerNotify((r2v0 'this' androidx.lifecycle.LiveData\<T\> A[D('this' androidx.lifecycle.LiveData\<T\>), IMMUTABLE_TYPE, THIS]), (r3v0 'observer' androidx.lifecycle.LiveData\<T\>$ObserverWrapper A[D('observer' androidx.lifecycle.LiveData\<T\>$ObserverWrapper), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000f \-\> B:15:?, CROSS_EDGE: B:25:0x0016 \-\> B:15:?, CROSS_EDGE: B:27:0x0020 \-\> B:15:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (Landroidx\/lifecycle\/LiveData\<TT;\>.ObserverWrapper;)V\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

