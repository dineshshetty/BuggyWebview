digraph "CFG forandroidx.lifecycle.LiveData.postValue(Ljava\/lang\/Object;)V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mDataLock java.lang.Object  (LINE:286)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0003|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|TRY_ENTER\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:23:0x0003, B:27:0x000c, B:28:0x000e), top: B:36:0x0003 \}\lCatch: all \-\> 0x001c\l|0x0003: IGET  (r1 I:java.lang.Object) = (r3 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mPendingData java.lang.Object A[Catch: all \-\> 0x001c, TRY_ENTER] (LINE:287)\l0x0005: SGET  (r2 I:java.lang.Object) =  androidx.lifecycle.LiveData.NOT_SET java.lang.Object A[Catch: all \-\> 0x001c]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x000b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|0x0009: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000a: GOTO  \-\> 0x000c \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|TryCatch #0 \{all \-\> 0x001c, blocks: (B:23:0x0003, B:27:0x000c, B:28:0x000e), top: B:36:0x0003 \}\lCatch: all \-\> 0x001c\l|0x000c: IPUT  (r4 I:java.lang.Object A[D('value' T)]), (r3 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mPendingData java.lang.Object A[Catch: all \-\> 0x001c] (LINE:288)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:23:0x0003, B:27:0x000c, B:28:0x000e), top: B:36:0x0003 \}\lCatch: all \-\> 0x001c\l|0x000e: MONITOR_EXIT  (r0 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x001c, TRY_LEAVE] (LINE:289)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('postTask' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0012  (LINE:290)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|RETURN\l|0x0011: RETURN    (LINE:291)\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0012|0x0012: INVOKE  (r0 I:androidx.arch.core.executor.ArchTaskExecutor) =  type: STATIC call: androidx.arch.core.executor.ArchTaskExecutor.getInstance():androidx.arch.core.executor.ArchTaskExecutor A[MD:():androidx.arch.core.executor.ArchTaskExecutor (m)] (LINE:293)\l0x0016: IGET  (r2 I:java.lang.Runnable) = (r3 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mPostValueRunnable java.lang.Runnable \l0x0018: INVOKE  (r0 I:androidx.arch.core.executor.ArchTaskExecutor), (r2 I:java.lang.Runnable) type: VIRTUAL call: androidx.arch.core.executor.ArchTaskExecutor.postToMainThread(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:294)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x001c|ExcHandler: all \-\> 0x001c\l|0x001c: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x001c] (LINE:289)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001d|TRY_ENTER\lTRY_LEAVE\lCatch: all \-\> 0x001c\l}"];
Node_35 [shape=record,label="{35\:\ 0x001e|0x001e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.lifecycle.LiveData.postValue((r3 'this' I:androidx.lifecycle.LiveData\<T\> A[D('this' androidx.lifecycle.LiveData\<T\>), IMMUTABLE_TYPE, THIS]), (r4 I:T A[D('value' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x001b \-\> B:20:?, CROSS_EDGE: B:35:0x001e \-\> B:20:?, CROSS_EDGE: B:26:0x000b \-\> B:27:0x000c, CROSS_EDGE: B:36:0x0003 \-\> B:33:0x001c\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x001c, blocks: (B:23:0x0003, B:27:0x000c, B:28:0x000e), top: B:36:0x0003 \}\lTYPE_VARS: [T]\lSIGNATURE: (TT;)V\lDebug Info:\l  0x000c\-0x001c: r1 'postTask' Z\l  0x0000\-0x001e: r3 'this' Landroidx\/lifecycle\/LiveData;, signature: Landroidx\/lifecycle\/LiveData\<TT;\>;\l  0x0000\-0x001e: r4 'value' Ljava\/lang\/Object;, signature: TT;\lMETHOD_OVERRIDE: [androidx.lifecycle.LiveData.postValue(T):void]\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_36;
Node_36 -> Node_23;
Node_36 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_37;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_20;
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_37 -> Node_33;
Node_26 -> Node_27;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_20;
}

