digraph "CFG forandroidx.lifecycle.LiveData.changeActiveCounter(I)V" {
Node_38 [shape=record,label="{38\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mActiveCount int  (LINE:378)\l0x0002: IGET  (r1 I:int) = (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mActiveCount int  (LINE:379)\l0x0004: ARITH  (r1 I:int) = (r1 I:int) + (r7 I:int A[D('change' int)]) \l0x0005: IPUT  (r1 I:int), (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mActiveCount int \l0x0007: IGET  (r1 I:boolean) = (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mChangingActiveState boolean  (LINE:380)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x000c \l}"];
Node_42 [shape=record,label="{42\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:381)\l}"];
Node_39 [shape=record,label="{39\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x000c|0x000c: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:383)\l0x000d: IPUT  (r1 I:boolean), (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mChangingActiveState boolean \l}"];
Node_44 [shape=record,label="{44\:\ 0x000f|LOOP_START\lLOOP:0: B:44:0x000f\-\>B:72:0x000f\l|0x000f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:385)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0010|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_45 [shape=record,label="{45\:\ 0x0010|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:45:0x0010, B:57:0x0025, B:59:0x002b), top: B:66:0x0010 \}\lCatch: all \-\> 0x0033\l|0x0010: IGET  (r3 I:int) = (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mActiveCount int A[Catch: all \-\> 0x0033, TRY_ENTER]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0012|0x0012: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousActiveCount' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x002f \l}"];
Node_47 [shape=record,label="{47\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousActiveCount' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x001a  (LINE:386)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0016|0x0016: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:50:0x001a \l}"];
Node_49 [shape=record,label="{49\:\ 0x0018|0x0018: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0019: GOTO  \-\> 0x001b \l}"];
Node_51 [shape=record,label="{51\:\ 0x001b|0x001b: IF  (r0 I:??[int, byte, short, char] A[D('previousActiveCount' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:54:0x0021  (LINE:387)\l}"];
Node_52 [shape=record,label="{52\:\ 0x001d|0x001d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0021 \l}"];
Node_53 [shape=record,label="{53\:\ 0x001f|0x001f: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0020: GOTO  \-\> 0x0022 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0022|0x0022: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('previousActiveCount' int)]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:388)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0023|0x0023: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needToCallActive' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0029  (LINE:389)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0029|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x0029|0x0029: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('needToCallInactive' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x000f  (LINE:391)\l}"];
Node_71 [shape=record,label="{71\:\ 0x002b|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x002b|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:45:0x0010, B:57:0x0025, B:59:0x002b), top: B:66:0x0010 \}\lCatch: all \-\> 0x0033\l|0x002b: INVOKE  (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) type: VIRTUAL call: androidx.lifecycle.LiveData.onInactive():void A[Catch: all \-\> 0x0033, MD:():void (m), TRY_LEAVE] (LINE:392)\l}"];
Node_74 [shape=record,label="{74\:\ 0x000f|SYNTHETIC\l}"];
Node_72 [shape=record,label="{72\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:44:0x000f\-\>B:72:0x000f\l}"];
Node_73 [shape=record,label="{73\:\ 0x000f|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x0025|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0025|TryCatch #0 \{all \-\> 0x0033, blocks: (B:45:0x0010, B:57:0x0025, B:59:0x002b), top: B:66:0x0010 \}\lCatch: all \-\> 0x0033\l|0x0025: INVOKE  (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) type: VIRTUAL call: androidx.lifecycle.LiveData.onActive():void A[Catch: all \-\> 0x0033, MD:():void (m)] (LINE:390)\l0x0028: GOTO  \-\> 0x002e \l}"];
Node_75 [shape=record,label="{75\:\ 0x000f|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0021|0x0021: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x001a|0x001a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x002f|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ 0x002f|0x002f: IPUT  (r2 I:boolean), (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mChangingActiveState boolean  (LINE:396)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0032|RETURN\l|0x0032: RETURN    (LINE:398)\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_63 [shape=record,label="{63\:\ 0x0033|ExcHandler: all \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r1 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0033] (LINE:396)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0034|0x0034: IPUT  (r2 I:boolean), (r6 I:androidx.lifecycle.LiveData A[D('this' androidx.lifecycle.LiveData\<T\>)]) androidx.lifecycle.LiveData.mChangingActiveState boolean \l}"];
Node_65 [shape=record,label="{65\:\ 0x0036|0x0036: THROW  (r1 I:java.lang.Throwable)  (LINE:397)\l}"];
MethodNode[shape=record,label="{void androidx.lifecycle.LiveData.changeActiveCounter((r6 'this' I:androidx.lifecycle.LiveData\<T\> A[D('this' androidx.lifecycle.LiveData\<T\>), IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('change' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:57:0x0025 \-\> B:44:0x000f, BACK_EDGE: B:59:0x002b \-\> B:44:0x000f, BACK_EDGE: B:58:0x0029 \-\> B:44:0x000f, CROSS_EDGE: B:54:0x0021 \-\> B:55:0x0022, CROSS_EDGE: B:51:0x001b \-\> B:54:0x0021, CROSS_EDGE: B:50:0x001a \-\> B:51:0x001b, CROSS_EDGE: B:47:0x0014 \-\> B:50:0x001a, CROSS_EDGE: B:62:0x0032 \-\> B:39:?, CROSS_EDGE: B:65:0x0036 \-\> B:39:?, CROSS_EDGE: B:66:0x0010 \-\> B:63:0x0033\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x002e: r4 'needToCallActive' Z\l  0x0022\-0x002e: r5 'needToCallInactive' Z\l  0x0002\-0x0036: r0 'previousActiveCount' I\l  0x0000\-0x0036: r6 'this' Landroidx\/lifecycle\/LiveData;, signature: Landroidx\/lifecycle\/LiveData\<TT;\>;\l  \-1 \-0x0036: r7 'change' I\lTYPE_VARS: [T]\lTryCatch #0 \{all \-\> 0x0033, blocks: (B:45:0x0010, B:57:0x0025, B:59:0x002b), top: B:66:0x0010 \}\l}"];
MethodNode -> Node_38;Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_39;
Node_43 -> Node_44;
Node_44 -> Node_66;
Node_66 -> Node_45;
Node_66 -> Node_63;
Node_45 -> Node_46;
Node_45 -> Node_67;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_69;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_50;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_68;
Node_56 -> Node_70[style=dashed];
Node_68 -> Node_58;
Node_58 -> Node_71[style=dashed];
Node_58 -> Node_73;
Node_71 -> Node_59;
Node_59 -> Node_74;
Node_74 -> Node_72;
Node_72 -> Node_44;
Node_73 -> Node_72;
Node_70 -> Node_57;
Node_57 -> Node_75;
Node_75 -> Node_72;
Node_54 -> Node_55;
Node_50 -> Node_51;
Node_69 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_39;
Node_67 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_39;
}

