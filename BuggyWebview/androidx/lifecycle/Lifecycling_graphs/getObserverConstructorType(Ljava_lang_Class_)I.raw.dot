digraph "CFG forandroidx.lifecycle.Lifecycling.getObserverConstructorType(Ljava\/lang\/Class;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: SGET  (r0 I:java.util.Map\<java.lang.Class\<?\>, java.lang.Integer\>) =  androidx.lifecycle.Lifecycling.sCallbackCache java.util.Map  (LINE:144)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r4 I:java.lang.Object A[D('klass' java.lang.Class\<?\>)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0006: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('callbackCache' java.lang.Integer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f  (LINE:145)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r0 I:java.lang.Integer A[D('callbackCache' java.lang.Integer)]) type: VIRTUAL call: java.lang.Integer.intValue():int A[MD:():int (c)] (LINE:146)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|0x000e: RETURN  (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r1 I:int) = (r4 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)]) type: STATIC call: androidx.lifecycle.Lifecycling.resolveObserverCallbackType(java.lang.Class):int A[MD:(java.lang.Class\<?\>):int (m)] (LINE:148)\l0x0013: SGET  (r2 I:java.util.Map\<java.lang.Class\<?\>, java.lang.Integer\>) =  androidx.lifecycle.Lifecycling.sCallbackCache java.util.Map  (LINE:149)\l0x0015: INVOKE  (r3 I:java.lang.Integer) = (r1 I:int A[D('type' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0019: INVOKE  (r2 I:java.util.Map), (r4 I:java.lang.Object A[D('klass' java.lang.Class\<?\>)]), (r3 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|RETURN\l|0x001c: RETURN  (r1 I:int A[D('type' int)])  (LINE:150)\l}"];
MethodNode[shape=record,label="{private static int androidx.lifecycle.Lifecycling.getObserverConstructorType((r4 I:java.lang.Class\<?\> A[D('klass' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x001c \-\> B:1:?\lDebug Info:\l  0x0008\-0x001c: r0 'callbackCache' Ljava\/lang\/Integer;\l  0x0013\-0x001c: r1 'type' I\l  0x0000\-0x001c: r4 'klass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

