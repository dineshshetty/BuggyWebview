digraph "CFG forandroidx.lifecycle.MediatorLiveData.addSource(Landroidx\/lifecycle\/LiveData;Landroidx\/lifecycle\/Observer;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.lifecycle.MediatorLiveData$Source) =  androidx.lifecycle.MediatorLiveData$Source  (LINE:86)\l0x0002: INVOKE  \l  (r0 I:androidx.lifecycle.MediatorLiveData$Source)\l  (r5 I:androidx.lifecycle.LiveData A[D('source' androidx.lifecycle.LiveData\<S\>)])\l  (r6 I:androidx.lifecycle.Observer A[D('onChanged' androidx.lifecycle.Observer\<? super S\>)])\l type: DIRECT call: androidx.lifecycle.MediatorLiveData.Source.\<init\>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer):void A[MD:(androidx.lifecycle.LiveData\<V\>, androidx.lifecycle.Observer\<? super V\>):void (m)]\l0x0005: IGET  (r1 I:androidx.arch.core.internal.SafeIterableMap\<androidx.lifecycle.LiveData\<?\>, androidx.lifecycle.MediatorLiveData$Source\<?\>\>) = (r4 I:androidx.lifecycle.MediatorLiveData A[D('this' androidx.lifecycle.MediatorLiveData\<T\>)]) androidx.lifecycle.MediatorLiveData.mSources androidx.arch.core.internal.SafeIterableMap  (LINE:87)\l0x0007: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:androidx.arch.core.internal.SafeIterableMap)\l  (r5 I:java.lang.Object A[D('source' androidx.lifecycle.LiveData\<S\>)])\l  (r0 I:java.lang.Object A[D('e' androidx.lifecycle.MediatorLiveData$Source\<S\>)])\l type: VIRTUAL call: androidx.arch.core.internal.SafeIterableMap.putIfAbsent(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)]\l0x000b: CHECK_CAST (r1 I:androidx.lifecycle.MediatorLiveData$Source) = (androidx.lifecycle.MediatorLiveData$Source) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existing' androidx.lifecycle.MediatorLiveData$Source\<?\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001c  (LINE:88)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f|0x000f: IGET  (r2 I:androidx.lifecycle.Observer\<? super V\>) = (r1 I:androidx.lifecycle.MediatorLiveData$Source A[D('existing' androidx.lifecycle.MediatorLiveData$Source\<?\>)]) androidx.lifecycle.MediatorLiveData.Source.mObserver androidx.lifecycle.Observer \l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('onChanged' androidx.lifecycle.Observer\<? super S\>)])  \-\> B:23:0x0014 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0014|0x0014: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:89)\l0x0016: CONST_STR  (r3 I:java.lang.String) =  \"This source was already added with the different observer\" \l0x0018: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existing' androidx.lifecycle.MediatorLiveData$Source\<?\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001f  (LINE:92)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|RETURN\l|0x001e: RETURN    (LINE:93)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|0x001f: INVOKE  (r2 I:boolean) = (r4 I:androidx.lifecycle.MediatorLiveData A[D('this' androidx.lifecycle.MediatorLiveData\<T\>)]) type: VIRTUAL call: androidx.lifecycle.MediatorLiveData.hasActiveObservers():boolean A[MD:():boolean (m)] (LINE:95)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0023|0x0023: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0025|0x0025: INVOKE  (r0 I:androidx.lifecycle.MediatorLiveData$Source A[D('e' androidx.lifecycle.MediatorLiveData$Source\<S\>)]) type: VIRTUAL call: androidx.lifecycle.MediatorLiveData.Source.plug():void A[MD:():void (m)] (LINE:96)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:98)\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:98)\l}"];
MethodNode[shape=record,label="{public void androidx.lifecycle.MediatorLiveData.addSource((r4 'this' I:androidx.lifecycle.MediatorLiveData\<T\> A[D('this' androidx.lifecycle.MediatorLiveData\<T\>), IMMUTABLE_TYPE, THIS]), (r5 I:androidx.lifecycle.LiveData\<S\> A[D('source' androidx.lifecycle.LiveData\<S\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.lifecycle.Observer\<? super S\> A[D('onChanged' androidx.lifecycle.Observer\<? super S\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001e \-\> B:17:?, CROSS_EDGE: B:30:0x0028 \-\> B:17:?, CROSS_EDGE: B:28:0x0023 \-\> B:30:0x0028, CROSS_EDGE: B:19:0x000d \-\> B:25:0x001c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0028: r0 'e' Landroidx\/lifecycle\/MediatorLiveData$Source;, signature: Landroidx\/lifecycle\/MediatorLiveData$Source\<TS;\>;\l  0x000d\-0x0028: r1 'existing' Landroidx\/lifecycle\/MediatorLiveData$Source;, signature: Landroidx\/lifecycle\/MediatorLiveData$Source\<*\>;\l  0x0000\-0x0028: r4 'this' Landroidx\/lifecycle\/MediatorLiveData;, signature: Landroidx\/lifecycle\/MediatorLiveData\<TT;\>;\l  0x0000\-0x0028: r5 'source' Landroidx\/lifecycle\/LiveData;, signature: Landroidx\/lifecycle\/LiveData\<TS;\>;\l  0x0000\-0x0028: r6 'onChanged' Landroidx\/lifecycle\/Observer;, signature: Landroidx\/lifecycle\/Observer\<\-TS;\>;\lTYPE_VARS: [S, T]\lSIGNATURE: \<S:Ljava\/lang\/Object;\>(Landroidx\/lifecycle\/LiveData\<TS;\>;Landroidx\/lifecycle\/Observer\<\-TS;\>;)V\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_17;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_17;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_17;
Node_31 -> Node_17;
}

