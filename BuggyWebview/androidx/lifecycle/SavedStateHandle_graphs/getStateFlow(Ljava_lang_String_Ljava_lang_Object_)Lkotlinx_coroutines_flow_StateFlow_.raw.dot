digraph "CFG forandroidx.lifecycle.SavedStateHandle.getStateFlow(Ljava\/lang\/String;Ljava\/lang\/Object;)Lkotlinx\/coroutines\/flow\/StateFlow;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"key\" \l0x0002: INVOKE  (r9 I:java.lang.Object A[D('key' java.lang.String)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: IGET  (r0 I:java.util.Map\<java.lang.String, kotlinx.coroutines.flow.MutableStateFlow\<java.lang.Object\>\>) = (r8 I:androidx.lifecycle.SavedStateHandle) androidx.lifecycle.SavedStateHandle.flows java.util.Map  (LINE:197)\l0x0007: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0008: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)]), (r9 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:443)\l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|0x000c: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value$iv' java.lang.Object)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0033  (LINE:444)\l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:445)\l0x000f: IGET  (r4 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r8 I:androidx.lifecycle.SavedStateHandle) androidx.lifecycle.SavedStateHandle.regular java.util.Map  (LINE:200)\l0x0011: INVOKE  (r4 I:boolean) = (r4 I:java.util.Map), (r9 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.containsKey(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x001c \l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|0x0017: IGET  (r4 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r8 I:androidx.lifecycle.SavedStateHandle) androidx.lifecycle.SavedStateHandle.regular java.util.Map  (LINE:201)\l0x0019: INVOKE  \l  (r4 I:java.util.Map)\l  (r9 I:java.lang.Object A[D('key' java.lang.String)])\l  (r10 I:java.lang.Object A[D('initialValue' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x001c|0x001c: IGET  (r4 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r8 I:androidx.lifecycle.SavedStateHandle) androidx.lifecycle.SavedStateHandle.regular java.util.Map  (LINE:203)\l0x001e: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map), (r9 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0022: INVOKE  (r4 I:kotlinx.coroutines.flow.MutableStateFlow) = (r4 I:java.lang.Object) type: STATIC call: kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(java.lang.Object):kotlinx.coroutines.flow.MutableStateFlow A[MD:\<T\>:(T):kotlinx.coroutines.flow.MutableStateFlow\<T\> (m)]\l0x0026: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY]) \l0x0027: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:446)\l0x0028: IGET  (r7 I:java.util.Map\<java.lang.String, kotlinx.coroutines.flow.MutableStateFlow\<java.lang.Object\>\>) = (r8 I:androidx.lifecycle.SavedStateHandle) androidx.lifecycle.SavedStateHandle.flows java.util.Map  (LINE:203)\l0x002a: INVOKE  \l  (r7 I:java.util.Map)\l  (r9 I:java.lang.Object A[D('key' java.lang.String)])\l  (r5 I:java.lang.Object A[D('$this$getStateFlow_u24lambda_u2d2_u24lambda_u2d1' kotlinx.coroutines.flow.MutableStateFlow)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x002d: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('$i$a$\-getOrPut\-SavedStateHandle$getStateFlow$1' int)]) = (r4 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  \l  (r0 I:java.util.Map A[D('$this$getOrPut$iv' java.util.Map)])\l  (r9 I:java.lang.Object A[D('key' java.lang.String)])\l  (r3 I:java.lang.Object A[D('answer$iv' java.lang.Object)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:447)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0034|0x0035: CHECK_CAST (r3 I:kotlinx.coroutines.flow.MutableStateFlow) = (kotlinx.coroutines.flow.MutableStateFlow) (r3 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r0 I:kotlinx.coroutines.flow.StateFlow) = (r3 I:kotlinx.coroutines.flow.MutableStateFlow) type: STATIC call: kotlinx.coroutines.flow.FlowKt.asStateFlow(kotlinx.coroutines.flow.MutableStateFlow):kotlinx.coroutines.flow.StateFlow A[MD:\<T\>:(kotlinx.coroutines.flow.MutableStateFlow\<T\>):kotlinx.coroutines.flow.StateFlow\<T\> (m)] (LINE:204)\l}"];
Node_32 [shape=record,label="{32\:\ 0x003b|RETURN\l|0x003b: RETURN  (r0 I:kotlinx.coroutines.flow.StateFlow\<T\>)  (LINE:197)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0033|0x0033: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('value$iv' java.lang.Object)])  (LINE:450)\l}"];
MethodNode[shape=record,label="{public final kotlinx.coroutines.flow.StateFlow\<T\> androidx.lifecycle.SavedStateHandle.getStateFlow((r8 'this' I:androidx.lifecycle.SavedStateHandle A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:T A[D('initialValue' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0015 \-\> B:29:0x001c, CROSS_EDGE: B:30:0x0033 \-\> B:31:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000f\-0x002d: r3 '$i$a$\-getOrPut\-SavedStateHandle$getStateFlow$1' I\l  0x0027\-0x002d: r5 '$this$getStateFlow_u24lambda_u2d2_u24lambda_u2d1' Lkotlinx\/coroutines\/flow\/MutableStateFlow;\l  0x0028\-0x002d: r6 '$i$a$\-apply\-SavedStateHandle$getStateFlow$1$1' I\l  0x002e\-0x0032: r3 'answer$iv' Ljava\/lang\/Object;\l  0x0007\-0x0035: r0 '$this$getOrPut$iv' Ljava\/util\/Map;\l  0x0008\-0x0035: r1 '$i$f$getOrPut' I\l  0x000c\-0x0035: r2 'value$iv' Ljava\/lang\/Object;\l  \-1 \-0x003b: r9 'key' Ljava\/lang\/String;\l  \-1 \-0x003b: r10 'initialValue' Ljava\/lang\/Object;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/String;TT;)Lkotlinx\/coroutines\/flow\/StateFlow\<TT;\>;\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_23;
Node_30 -> Node_31;
}

