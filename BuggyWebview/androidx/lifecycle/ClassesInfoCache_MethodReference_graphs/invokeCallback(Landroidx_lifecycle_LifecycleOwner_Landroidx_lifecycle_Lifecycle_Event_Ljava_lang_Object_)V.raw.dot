digraph "CFG forandroidx.lifecycle.ClassesInfoCache.MethodReference.invokeCallback(Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/lifecycle\/Lifecycle$Event;Ljava\/lang\/Object;)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|TRY_ENTER\lTryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\lCatch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030\l|0x0000: IGET  (r0 I:int) = (r4 I:androidx.lifecycle.ClassesInfoCache$MethodReference) androidx.lifecycle.ClassesInfoCache.MethodReference.mCallType int A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, TRY_ENTER] (LINE:220)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|TryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\lCatch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030\l|0x0004: SWITCH  (r0 I:??)\l case 0: goto B:27:0x001f\l case 1: goto B:26:0x0015\l case 2: goto B:25:0x0008\l default: goto B:24:0x0007 A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|0x0007: GOTO  \-\> 0x0027 \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:236)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|TryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\lCatch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030\l|0x0008: IGET  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.lifecycle.ClassesInfoCache$MethodReference) androidx.lifecycle.ClassesInfoCache.MethodReference.mMethod java.lang.reflect.Method A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030] (LINE:228)\l0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000b: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x000d: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('source' androidx.lifecycle.LifecycleOwner)])\l A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x000f: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r1 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('event' androidx.lifecycle.Lifecycle$Event)])\l A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x0011: INVOKE  (r0 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('target' java.lang.Object)]), (r3 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0014: GOTO  \-\> 0x0027 \l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:236)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0015|TryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\lCatch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030\l|0x0015: IGET  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.lifecycle.ClassesInfoCache$MethodReference) androidx.lifecycle.ClassesInfoCache.MethodReference.mMethod java.lang.reflect.Method A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030] (LINE:225)\l0x0017: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x0019: APUT  \l  (r1 I:??[OBJECT, ARRAY][])\l  (r2 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('source' androidx.lifecycle.LifecycleOwner)])\l A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x001b: INVOKE  (r0 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('target' java.lang.Object)]), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x001e: GOTO  \-\> 0x0027  (LINE:226)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0028: RETURN   A[SYNTHETIC] (LINE:236)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001f|TRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\lCatch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030\l|0x001f: IGET  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.lifecycle.ClassesInfoCache$MethodReference) androidx.lifecycle.ClassesInfoCache.MethodReference.mMethod java.lang.reflect.Method A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030] (LINE:222)\l0x0021: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030]\l0x0023: INVOKE  (r0 I:java.lang.reflect.Method), (r7 I:java.lang.Object A[D('target' java.lang.Object)]), (r1 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: RETURN    (LINE:236)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0029|ExcHandler: IllegalAccessException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0029] (LINE:233)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|0x002a: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:234)\l0x002c: INVOKE  (r1 I:java.lang.RuntimeException), (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)]) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|0x002f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|ExcHandler: InvocationTargetException \-\> 0x0030\l|0x0030: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0030] (LINE:231)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0031|0x0031: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:232)\l0x0033: INVOKE  (r2 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)]\l0x0037: CONST_STR  (r3 I:java.lang.String) =  \"Failed to call observer method\" \l0x0039: INVOKE  (r1 I:java.lang.RuntimeException), (r3 I:java.lang.String), (r2 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003c|0x003c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{void androidx.lifecycle.ClassesInfoCache.MethodReference.invokeCallback((r4 'this' I:androidx.lifecycle.ClassesInfoCache$MethodReference A[IMMUTABLE_TYPE, THIS]), (r5 I:androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[D('target' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0008 \-\> B:29:0x0028, CROSS_EDGE: B:26:0x0015 \-\> B:29:0x0028, CROSS_EDGE: B:27:0x001f \-\> B:29:0x0028, CROSS_EDGE: B:32:0x002f \-\> B:21:?, CROSS_EDGE: B:35:0x003c \-\> B:21:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x0030: r0 'e' Ljava\/lang\/IllegalAccessException;\l  0x0031\-0x0047: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  \-1 \-0x0047: r5 'source' Landroidx\/lifecycle\/LifecycleOwner;\l  \-1 \-0x0047: r6 'event' Landroidx\/lifecycle\/Lifecycle$Event;\l  \-1 \-0x0047: r7 'target' Ljava\/lang\/Object;\lTryCatch #2 \{IllegalAccessException \-\> 0x0029, InvocationTargetException \-\> 0x0030, blocks: (B:22:0x0000, B:23:0x0004, B:25:0x0008, B:26:0x0015, B:27:0x001f), top: B:36:0x0000 \}\l}"];
MethodNode -> Node_20;Node_20 -> Node_36;
Node_36 -> Node_22;
Node_36 -> Node_30;
Node_36 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_23 -> Node_26;
Node_23 -> Node_27;
Node_24 -> Node_37;
Node_37 -> Node_21;
Node_25 -> Node_38;
Node_38 -> Node_21;
Node_26 -> Node_39;
Node_39 -> Node_21;
Node_27 -> Node_29;
Node_29 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_21;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_21;
}

