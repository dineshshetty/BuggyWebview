digraph "CFG forandroidx.lifecycle.Lifecycle.Event.getTargetState()Landroidx\/lifecycle\/Lifecycle$State;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0008|switch(androidx.lifecycle.Lifecycle.C03831.$SwitchMap$androidx$lifecycle$Lifecycle$Event[ordinal()]) \{\l    case 1: goto L12;\l    case 2: goto L12;\l    case 3: goto L10;\l    case 4: goto L10;\l    case 5: goto L8;\l    case 6: goto L6;\l    default: goto L3;\l\}\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r3)\lr1.append(\" has no target state\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022}"];
Node_21 [shape=record,label="{21\:\ 0x0024|RETURN\l|return androidx.lifecycle.Lifecycle.State.DESTROYED\l}"];
Node_22 [shape=record,label="{22\:\ 0x0025}"];
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\l|return androidx.lifecycle.Lifecycle.State.RESUMED\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028}"];
Node_25 [shape=record,label="{25\:\ 0x002a|RETURN\l|return androidx.lifecycle.Lifecycle.State.STARTED\l}"];
Node_26 [shape=record,label="{26\:\ 0x002b}"];
Node_27 [shape=record,label="{27\:\ 0x002d|RETURN\l|return androidx.lifecycle.Lifecycle.State.CREATED\l}"];
MethodNode[shape=record,label="{public androidx.lifecycle.Lifecycle$State androidx.lifecycle.Lifecycle.Event.getTargetState((r3v0 'this' androidx.lifecycle.Lifecycle$Event A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0024 \-\> B:15:?, CROSS_EDGE: B:23:0x0027 \-\> B:15:?, CROSS_EDGE: B:25:0x002a \-\> B:15:?, CROSS_EDGE: B:27:0x002d \-\> B:15:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_17 -> Node_22;
Node_17 -> Node_24;
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

