digraph "CFG forandroidx.lifecycle.Lifecycle.Event.getTargetState()Landroidx\/lifecycle\/Lifecycle$State;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: SGET  (r0 I:int[]) =  androidx.lifecycle.Lifecycle.1.$SwitchMap$androidx$lifecycle$Lifecycle$Event int[]  (LINE:224)\l0x0002: INVOKE  (r1 I:int) = (r3 I:androidx.lifecycle.Lifecycle$Event) type: VIRTUAL call: androidx.lifecycle.Lifecycle.Event.ordinal():int A[MD:():int (c)]\l0x0006: AGET  (r0 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][]), (r1 I:??[int, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: SWITCH  (r0 I:??)\l case 1: goto B:26:0x002b\l case 2: goto B:26:0x002b\l case 3: goto B:24:0x0028\l case 4: goto B:24:0x0028\l case 5: goto B:22:0x0025\l case 6: goto B:20:0x0022\l default: goto B:18:0x000b \l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:238)\l0x000d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0012: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0015: CONST_STR  (r2 I:java.lang.String) =  \" has no target state\" \l0x0017: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001a: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x001e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|0x0022: SGET  (r0 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.DESTROYED androidx.lifecycle.Lifecycle$State  (LINE:234)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|RETURN\l|0x0024: RETURN  (r0 I:androidx.lifecycle.Lifecycle$State) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|0x0025: SGET  (r0 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.RESUMED androidx.lifecycle.Lifecycle$State  (LINE:232)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0027|RETURN\l|0x0027: RETURN  (r0 I:androidx.lifecycle.Lifecycle$State) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: SGET  (r0 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.STARTED androidx.lifecycle.Lifecycle$State  (LINE:230)\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|RETURN\l|0x002a: RETURN  (r0 I:androidx.lifecycle.Lifecycle$State) \l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|0x002b: SGET  (r0 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.CREATED androidx.lifecycle.Lifecycle$State  (LINE:227)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|RETURN\l|0x002d: RETURN  (r0 I:androidx.lifecycle.Lifecycle$State) \l}"];
MethodNode[shape=record,label="{public androidx.lifecycle.Lifecycle$State androidx.lifecycle.Lifecycle.Event.getTargetState((r3 'this' I:androidx.lifecycle.Lifecycle$Event A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0024 \-\> B:15:?, CROSS_EDGE: B:23:0x0027 \-\> B:15:?, CROSS_EDGE: B:25:0x002a \-\> B:15:?, CROSS_EDGE: B:27:0x002d \-\> B:15:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_17 -> Node_22;
Node_17 -> Node_24;
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_22 -> Node_23;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

