digraph "CFG forandroidx.lifecycle.ViewModelProvider.NewInstanceFactory.create(Ljava\/lang\/Class;)Landroidx\/lifecycle\/ViewModel;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"Cannot create an instance of \" \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"modelClass\" \l0x0004: INVOKE  (r5 I:java.lang.Object A[D('modelClass' java.lang.Class)]), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d, blocks: (B:16:0x0008), top: B:24:0x0008 \}\lCatch: IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d\l|0x0008: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.lang.Class A[D('modelClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.newInstance():java.lang.Object A[Catch: IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d, MD:():T throws java.lang.IllegalAccessException, java.lang.InstantiationException (c), TRY_ENTER] (LINE:202)\l0x000c: CONST_STR  (r2 I:java.lang.String) =  \"\{n                modelCâ€¦wInstance()n            \}\"  (LINE:201)\l0x000e: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[Catch: IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d, MD:(java.lang.Object, java.lang.String):void (m)]\l0x0011: CHECK_CAST (r1 I:androidx.lifecycle.ViewModel) = (androidx.lifecycle.ViewModel) (r1 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0013|RETURN\l|0x0013: RETURN  (r1 I:T extends androidx.lifecycle.ViewModel) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_18 [shape=record,label="{18\:\ 0x0014|ExcHandler: IllegalAccessException \-\> 0x0014\l|0x0014: MOVE_EXCEPTION  (r1 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0014] (LINE:205)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0015|0x0015: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:206)\l0x0017: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0019: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x001c: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001f: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('modelClass' java.lang.Class)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0022: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0026: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) \l0x0027: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0029: INVOKE  (r2 I:java.lang.RuntimeException), (r0 I:java.lang.String), (r3 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|0x002c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|ExcHandler: InstantiationException \-\> 0x002d\l|0x002d: MOVE_EXCEPTION  (r1 I:java.lang.InstantiationException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InstantiationException \-\> 0x002d] (LINE:203)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e|0x002e: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:204)\l0x0030: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0035: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0038: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('modelClass' java.lang.Class)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x003b: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003f: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('e' java.lang.InstantiationException)]) \l0x0040: CHECK_CAST (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:??[OBJECT, ARRAY]) \l0x0042: INVOKE  (r2 I:java.lang.RuntimeException), (r0 I:java.lang.String), (r3 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|0x0045: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T extends androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.NewInstanceFactory.create((r4 'this' I:androidx.lifecycle.ViewModelProvider$NewInstanceFactory A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Class\<T extends androidx.lifecycle.ViewModel\> A[D('modelClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x002c \-\> B:14:?, CROSS_EDGE: B:23:0x0045 \-\> B:14:?, CROSS_EDGE: B:24:0x0008 \-\> B:18:0x0014, CROSS_EDGE: B:24:0x0008 \-\> B:21:0x002d\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x0014, InstantiationException \-\> 0x002d, blocks: (B:16:0x0008), top: B:24:0x0008 \}\lTYPE_VARS: [T extends androidx.lifecycle.ViewModel]\lSIGNATURE: \<T:Landroidx\/lifecycle\/ViewModel;\>(Ljava\/lang\/Class\<TT;\>;)TT;\lDebug Info:\l  0x0015\-0x002d: r1 'e' Ljava\/lang\/IllegalAccessException;\l  0x002e\-0x0045: r1 'e' Ljava\/lang\/InstantiationException;\l  \-1 \-0x0045: r5 'modelClass' Ljava\/lang\/Class;\lMETHOD_OVERRIDE: [androidx.lifecycle.ViewModelProvider.Factory.create(java.lang.Class\<T extends androidx.lifecycle.ViewModel\>):T extends androidx.lifecycle.ViewModel]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_24;
Node_24 -> Node_16;
Node_24 -> Node_18;
Node_24 -> Node_21;
Node_16 -> Node_17;
Node_16 -> Node_25;
Node_17 -> Node_14;
Node_25 -> Node_18;
Node_25 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_14;
}

