digraph "CFG forandroidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor(Ljava\/lang\/Class;Ljava\/util\/List;)Ljava\/lang\/reflect\/Constructor;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|kotlin.jvm.internal.Intrinsics.checkNotNullParameter(r7, \"modelClass\")\lkotlin.jvm.internal.Intrinsics.checkNotNullParameter(r8, \"signature\")\ljava.lang.reflect.Constructor[] r0 = r7.getConstructors()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r0, \"modelClass.constructors\")\lint r1 = r0.length\lr2 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|LOOP_START\lLOOP:0: B:28:0x0015\-\>B:42:0x0071\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:27:0x0000, B:42:0x0071] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L21\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|r3 = (java.lang.reflect.Constructor\<T\>) r0[r2]\ljava.lang.Class[] r4 = r3.getParameterTypes()\lkotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(r4, \"constructor.parameterTypes\")\ljava.util.List r4 = kotlin.collections.ArraysKt.toList(r4)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|if (kotlin.jvm.internal.Intrinsics.areEqual(r8, r4) == false) goto L5\l}"];
Node_35 [shape=record,label="{35\:\ 0x0039}"];
Node_36 [shape=record,label="{36\:\ 0x0041|if (r8.size() != r4.size()) goto L15\l}"];
Node_37 [shape=record,label="{37\:\ 0x0043}"];
Node_38 [shape=record,label="{38\:\ 0x004a|if (r4.containsAll(r8) != false) goto L9\l}"];
Node_46 [shape=record,label="{46\:\ 0x004d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x004d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Class \")\lr1.append(r7.getSimpleName())\lr1.append(\" must have parameters in the proper order: \")\lr1.append(r8)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0070|throw new java.lang.UnsupportedOperationException(r1.toString())\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0071|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0071|LOOP_END\lLOOP:0: B:28:0x0015\-\>B:42:0x0071\l|int r2 = r2 + 1\l}"];
Node_48 [shape=record,label="{48\:\ 0x0071|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x002e|if (r3 == null) goto L19\l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|RETURN\l|return r3\l}"];
Node_33 [shape=record,label="{33\:\ 0x0031}"];
Node_34 [shape=record,label="{34\:\ 0x0038|throw new java.lang.NullPointerException(\"null cannot be cast to non\-null type java.lang.reflect.Constructor\<T of androidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor\>\")\l}"];
Node_45 [shape=record,label="{45\:\ 0x0074|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0074|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final java.lang.reflect.Constructor\<T\> androidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor((r7v0 'modelClass' java.lang.Class\<T\> A[D('modelClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'signature' java.util.List\<? extends java.lang.Class\<?\>\> A[D('signature' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0038 \-\> B:26:?, CROSS_EDGE: B:41:0x0070 \-\> B:26:?, BACK_EDGE: B:42:0x0071 \-\> B:28:0x0015, CROSS_EDGE: B:36:0x0041 \-\> B:42:0x0071, CROSS_EDGE: B:44:0x0075 \-\> B:26:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Class\<TT;\>;Ljava\/util\/List\<+Ljava\/lang\/Class\<*\>;\>;)Ljava\/lang\/reflect\/Constructor\<TT;\>;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_45;
Node_29 -> Node_30;
Node_30 -> Node_35;
Node_30 -> Node_47[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_46;
Node_38 -> Node_49[style=dashed];
Node_46 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_49 -> Node_42;
Node_42 -> Node_28;
Node_48 -> Node_42;
Node_47 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_26;
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_45 -> Node_43;
Node_43 -> Node_26;
}

