digraph "CFG forandroidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor(Ljava\/lang\/Class;Ljava\/util\/List;)Ljava\/lang\/reflect\/Constructor;" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"modelClass\" \l0x0002: INVOKE  (r7 I:java.lang.Object A[D('modelClass' java.lang.Class)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"signature\" \l0x0007: INVOKE  (r8 I:java.lang.Object A[D('signature' java.util.List)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: INVOKE  (r0 I:java.lang.reflect.Constructor[]) = (r7 I:java.lang.Class A[D('modelClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getConstructors():java.lang.reflect.Constructor[] A[MD:():java.lang.reflect.Constructor\<?\>[] throws java.lang.SecurityException (c)] (LINE:252)\l0x000e: CONST_STR  (r1 I:java.lang.String) =  \"modelClass.constructors\" \l0x0010: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0013: ARRAY_LENGTH  (r1 I:int) = (r0 I:??[]) \l0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|LOOP_START\lLOOP:0: B:28:0x0015\-\>B:42:0x0071\l|0x0015: IF  (r2 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:45:0x0074 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|0x0017: AGET  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]) \l0x0019: INVOKE  (r4 I:java.lang.Class[]) = (r3 I:java.lang.reflect.Constructor A[D('constructor' java.lang.reflect.Constructor)]) type: VIRTUAL call: java.lang.reflect.Constructor.getParameterTypes():java.lang.Class[] A[MD:():java.lang.Class\<?\>[] (c)] (LINE:253)\l0x001d: CONST_STR  (r5 I:java.lang.String) =  \"constructor.parameterTypes\" \l0x001f: INVOKE  (r4 I:java.lang.Object), (r5 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0022: CHECK_CAST (r4 I:java.lang.Object[]) = (java.lang.Object[]) (r4 I:??[OBJECT, ARRAY]) \l0x0024: INVOKE  (r4 I:java.util.List) = (r4 I:java.lang.Object[]) type: STATIC call: kotlin.collections.ArraysKt.toList(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> (m)]\l0x0028: INVOKE  (r5 I:boolean) = (r8 I:java.lang.Object A[D('signature' java.util.List)]), (r4 I:java.lang.Object A[D('parameterTypes' java.util.List)]) type: STATIC call: kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean A[MD:(java.lang.Object, java.lang.Object):boolean (m)] (LINE:254)\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0039 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0039|0x0039: INVOKE  (r5 I:int) = (r8 I:java.util.List A[D('signature' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:258)\l0x003d: INVOKE  (r6 I:int) = (r4 I:java.util.List A[D('parameterTypes' java.util.List)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0041|0x0041: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0071 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0043|0x0043: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('signature' java.util.List)]) \l0x0044: CHECK_CAST (r5 I:java.util.Collection) = (java.util.Collection) (r5 I:??[OBJECT, ARRAY]) \l0x0046: INVOKE  (r5 I:boolean) = (r4 I:java.util.List A[D('parameterTypes' java.util.List)]), (r5 I:java.util.Collection) type: INTERFACE call: java.util.List.containsAll(java.util.Collection):boolean A[MD:(java.util.Collection\<?\>):boolean (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x004a|0x004a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x004d \l}"];
Node_46 [shape=record,label="{46\:\ 0x004d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x004d|0x004d: NEW_INSTANCE  (r0 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException  (LINE:259)\l0x004f: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:260)\l0x0051: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0054: CONST_STR  (r2 I:java.lang.String) =  \"Class \" \l0x0056: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0059: INVOKE  (r2 I:java.lang.String) = (r7 I:java.lang.Class A[D('modelClass' java.lang.Class)]) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l0x005d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0060: CONST_STR  (r2 I:java.lang.String) =  \" must have parameters in the proper order: \" \l0x0062: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0066: INVOKE  (r1 I:java.lang.StringBuilder), (r8 I:java.lang.Object A[D('signature' java.util.List)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)] (LINE:260)\l0x0069: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x006d: INVOKE  (r0 I:java.lang.UnsupportedOperationException), (r1 I:java.lang.String) type: DIRECT call: java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)] (LINE:259)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0070|0x0070: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x0071|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0071|LOOP_END\lLOOP:0: B:28:0x0015\-\>B:42:0x0071\l|0x0071: ARITH  (r2 I:int) = (r2 I:int) + (1 int)  (LINE:252)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0071|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x002e|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x002e|0x002e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('constructor' java.lang.reflect.Constructor)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0031  (LINE:256)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0030|RETURN\l|0x0030: RETURN  (r3 I:java.lang.reflect.Constructor\<T\> A[D('constructor' java.lang.reflect.Constructor)]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0031|0x0031: NEW_INSTANCE  (r0 I:java.lang.NullPointerException) =  java.lang.NullPointerException \l0x0033: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.reflect.Constructor\<T of androidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor\>\" \l0x0035: INVOKE  (r0 I:java.lang.NullPointerException), (r1 I:java.lang.String) type: DIRECT call: java.lang.NullPointerException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0074|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0074|RETURN\l|0x0074: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l0x0075: RETURN  (r0 I:java.lang.reflect.Constructor\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.lang.reflect.Constructor\<T\> androidx.lifecycle.SavedStateViewModelFactoryKt.findMatchingConstructor((r7 I:java.lang.Class\<T\> A[D('modelClass' java.lang.Class), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.List\<? extends java.lang.Class\<?\>\> A[D('signature' java.util.List), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0038 \-\> B:26:?, CROSS_EDGE: B:41:0x0070 \-\> B:26:?, BACK_EDGE: B:42:0x0071 \-\> B:28:0x0015, CROSS_EDGE: B:36:0x0041 \-\> B:42:0x0071, CROSS_EDGE: B:44:0x0075 \-\> B:26:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0028\-0x0071: r4 'parameterTypes' Ljava\/util\/List;\l  0x0019\-0x0074: r3 'constructor' Ljava\/lang\/reflect\/Constructor;\l  \-1 \-0x0075: r7 'modelClass' Ljava\/lang\/Class;\l  \-1 \-0x0075: r8 'signature' Ljava\/util\/List;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Ljava\/lang\/Class\<TT;\>;Ljava\/util\/List\<+Ljava\/lang\/Class\<*\>;\>;)Ljava\/lang\/reflect\/Constructor\<TT;\>;\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_45;
Node_29 -> Node_30;
Node_30 -> Node_35;
Node_30 -> Node_47[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_46;
Node_38 -> Node_49[style=dashed];
Node_46 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_26;
Node_49 -> Node_42;
Node_42 -> Node_28;
Node_48 -> Node_42;
Node_47 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_26;
Node_33 -> Node_34;
Node_34 -> Node_26;
Node_45 -> Node_43;
Node_43 -> Node_26;
}

