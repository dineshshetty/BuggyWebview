digraph "CFG forandroidx.lifecycle.ReportFragment.dispatch(Landroid\/app\/Activity;Landroidx\/lifecycle\/Lifecycle$Event;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if ((r2 instanceof androidx.lifecycle.LifecycleRegistryOwner) == false) goto L6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|((androidx.lifecycle.LifecycleRegistryOwner) r2).getLifecycle().handleLifecycleEvent(r3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000e|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x000f}"];
Node_21 [shape=record,label="{21\:\ 0x0011|if ((r2 instanceof androidx.lifecycle.LifecycleOwner) == false) goto L13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|androidx.lifecycle.Lifecycle r0 = ((androidx.lifecycle.LifecycleOwner) r2).getLifecycle()\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|if ((r0 instanceof androidx.lifecycle.LifecycleRegistry) == false) goto L12\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|((androidx.lifecycle.LifecycleRegistry) r0).handleLifecycleEvent(r3)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0024|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void androidx.lifecycle.ReportFragment.dispatch((r2v0 'activity' android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'event' androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0024 \-\> B:15:?, CROSS_EDGE: B:23:0x001c \-\> B:25:0x0024, CROSS_EDGE: B:21:0x0011 \-\> B:25:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

