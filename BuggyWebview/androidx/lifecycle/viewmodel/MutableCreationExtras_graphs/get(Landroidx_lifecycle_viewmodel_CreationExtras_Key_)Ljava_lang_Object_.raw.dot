digraph "CFG forandroidx.lifecycle.viewmodel.MutableCreationExtras.get(Landroidx\/lifecycle\/viewmodel\/CreationExtras$Key;)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"key\" \l0x0002: INVOKE  (r2 I:java.lang.Object A[D('key' androidx.lifecycle.viewmodel.CreationExtras$Key)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:java.util.Map) = (r1 I:androidx.lifecycle.viewmodel.MutableCreationExtras) type: VIRTUAL call: androidx.lifecycle.viewmodel.MutableCreationExtras.getMap$lifecycle_viewmodel_release():java.util.Map A[MD:():java.util.Map\<androidx.lifecycle.viewmodel.CreationExtras$Key\<?\>, java.lang.Object\> (m)] (LINE:66)\l0x0009: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r2 I:java.lang.Object A[D('key' androidx.lifecycle.viewmodel.CreationExtras$Key)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|0x000d: RETURN  (r0 I:T) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T androidx.lifecycle.viewmodel.MutableCreationExtras.get((r1 'this' I:androidx.lifecycle.viewmodel.MutableCreationExtras A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.lifecycle.viewmodel.CreationExtras$Key\<T\> A[D('key' androidx.lifecycle.viewmodel.CreationExtras$Key), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000d: r2 'key' Landroidx\/lifecycle\/viewmodel\/CreationExtras$Key;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(Landroidx\/lifecycle\/viewmodel\/CreationExtras$Key\<TT;\>;)TT;\lMETHOD_OVERRIDE: [androidx.lifecycle.viewmodel.CreationExtras.get(androidx.lifecycle.viewmodel.CreationExtras$Key\<T\>):T]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

