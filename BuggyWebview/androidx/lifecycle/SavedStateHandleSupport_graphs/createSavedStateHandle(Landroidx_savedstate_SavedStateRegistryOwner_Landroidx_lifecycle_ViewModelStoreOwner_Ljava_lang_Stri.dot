digraph "CFG forandroidx.lifecycle.SavedStateHandleSupport.createSavedStateHandle(Landroidx\/savedstate\/SavedStateRegistryOwner;Landroidx\/lifecycle\/ViewModelStoreOwner;Ljava\/lang\/String;Landroid\/os\/Bundle;)Landroidx\/lifecycle\/SavedStateHandle;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|androidx.lifecycle.SavedStateHandlesProvider r0 = getSavedStateHandlesProvider(r6)\landroidx.lifecycle.SavedStateHandlesVM r1 = getSavedStateHandlesVM(r7)\landroidx.lifecycle.SavedStateHandle r2 = r1.getHandles().get(r8)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|if (r2 != null) goto L6\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|androidx.lifecycle.SavedStateHandle r2 = androidx.lifecycle.SavedStateHandle.Companion.createHandle(r0.consumeRestoredStateForKey(r8), r9)\lr1.getHandles().put(r8, r2)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|RETURN\lORIG_RETURN\l|return r2\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{private static final androidx.lifecycle.SavedStateHandle androidx.lifecycle.SavedStateHandleSupport.createSavedStateHandle((r6v0 'savedStateRegistryOwner' androidx.savedstate.SavedStateRegistryOwner A[D('savedStateRegistryOwner' androidx.savedstate.SavedStateRegistryOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'viewModelStoreOwner' androidx.lifecycle.ViewModelStoreOwner A[D('viewModelStoreOwner' androidx.lifecycle.ViewModelStoreOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'key' java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'defaultArgs' android.os.Bundle A[D('defaultArgs' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0012 \-\> B:12:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

