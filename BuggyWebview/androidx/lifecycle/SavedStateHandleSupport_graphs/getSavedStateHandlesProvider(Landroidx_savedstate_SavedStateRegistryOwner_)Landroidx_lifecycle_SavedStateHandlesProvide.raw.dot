digraph "CFG forandroidx.lifecycle.SavedStateHandleSupport.getSavedStateHandlesProvider(Landroidx\/savedstate\/SavedStateRegistryOwner;)Landroidx\/lifecycle\/SavedStateHandlesProvider;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  \l  (r2 I:java.lang.Object A[D('$this$savedStateHandlesProvider' androidx.savedstate.SavedStateRegistryOwner)])\l  (r0 I:java.lang.String)\l type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: INVOKE  (r0 I:androidx.savedstate.SavedStateRegistry) = \l  (r2 I:androidx.savedstate.SavedStateRegistryOwner A[D('$this$savedStateHandlesProvider' androidx.savedstate.SavedStateRegistryOwner)])\l type: INTERFACE call: androidx.savedstate.SavedStateRegistryOwner.getSavedStateRegistry():androidx.savedstate.SavedStateRegistry A[MD:():androidx.savedstate.SavedStateRegistry (m)] (LINE:114)\l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"androidx.lifecycle.internal.SavedStateHandlesProvider\" \l0x000b: INVOKE  (r0 I:androidx.savedstate.SavedStateRegistry$SavedStateProvider) = (r0 I:androidx.savedstate.SavedStateRegistry), (r1 I:java.lang.String) type: VIRTUAL call: androidx.savedstate.SavedStateRegistry.getSavedStateProvider(java.lang.String):androidx.savedstate.SavedStateRegistry$SavedStateProvider A[MD:(java.lang.String):androidx.savedstate.SavedStateRegistry$SavedStateProvider (m)]\l0x000f: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.lifecycle.SavedStateHandlesProvider \l}"];
Node_13 [shape=record,label="{13\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0016 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0013|0x0013: CHECK_CAST (r0 I:androidx.lifecycle.SavedStateHandlesProvider) = (androidx.lifecycle.SavedStateHandlesProvider) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0017|0x0017: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:androidx.lifecycle.SavedStateHandlesProvider)  (LINE:116)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:115)\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"enableSavedStateHandles() wasn't called prior to createSavedStateHandle() call\" \l0x001e: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static final androidx.lifecycle.SavedStateHandlesProvider androidx.lifecycle.SavedStateHandleSupport.getSavedStateHandlesProvider((r2 I:androidx.savedstate.SavedStateRegistryOwner A[D('$this$savedStateHandlesProvider' androidx.savedstate.SavedStateRegistryOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0021 \-\> B:11:?, CROSS_EDGE: B:15:0x0016 \-\> B:16:0x0017\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r2 '$this$savedStateHandlesProvider' Landroidx\/savedstate\/SavedStateRegistryOwner;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_15 -> Node_16;
}

