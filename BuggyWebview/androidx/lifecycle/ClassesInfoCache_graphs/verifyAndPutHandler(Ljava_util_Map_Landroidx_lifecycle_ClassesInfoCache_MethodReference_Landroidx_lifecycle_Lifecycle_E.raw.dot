digraph "CFG forandroidx.lifecycle.ClassesInfoCache.verifyAndPutHandler(Ljava\/util\/Map;Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;Ljava\/lang\/Class;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) = \l  (r6 I:java.util.Map A[D('handlers' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l  (r7 I:java.lang.Object A[D('newHandler' androidx.lifecycle.ClassesInfoCache$MethodReference)])\l type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)] (LINE:95)\l0x0004: CHECK_CAST (r0 I:androidx.lifecycle.Lifecycle$Event) = (androidx.lifecycle.Lifecycle$Event) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0044  (LINE:96)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newEvent' androidx.lifecycle.Lifecycle$Event)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)])  \-\> B:18:0x000b \l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IGET  (r1 I:java.lang.reflect.Method) = \l  (r7 I:androidx.lifecycle.ClassesInfoCache$MethodReference A[D('newHandler' androidx.lifecycle.ClassesInfoCache$MethodReference)])\l androidx.lifecycle.ClassesInfoCache.MethodReference.mMethod java.lang.reflect.Method  (LINE:97)\l0x000d: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:98)\l0x000f: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r3 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"Method \" \l0x0016: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]) type: VIRTUAL call: java.lang.reflect.Method.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:99)\l0x001d: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0020: CONST_STR  (r4 I:java.lang.String) =  \" in \" \l0x0022: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0025: INVOKE  (r4 I:java.lang.String) = (r9 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0029: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002c: CONST_STR  (r4 I:java.lang.String) =  \" already declared with different @OnLifecycleEvent value: previous value \" \l0x002e: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0031: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.Object A[D('event' androidx.lifecycle.Lifecycle$Event)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0034: CONST_STR  (r4 I:java.lang.String) =  \", new value \" \l0x0036: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0039: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.Object A[D('newEvent' androidx.lifecycle.Lifecycle$Event)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x003c: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0040: INVOKE  (r2 I:java.lang.IllegalArgumentException), (r3 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:?  (LINE:103)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: INVOKE  \l  (r6 I:java.util.Map A[D('handlers' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l  (r7 I:java.lang.Object A[D('newHandler' androidx.lifecycle.ClassesInfoCache$MethodReference)])\l  (r8 I:java.lang.Object A[D('newEvent' androidx.lifecycle.Lifecycle$Event)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)] (LINE:104)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0049|RETURN\lORIG_RETURN\l|0x0049: RETURN    (LINE:106)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0049: RETURN   A[SYNTHETIC] (LINE:106)\l}"];
MethodNode[shape=record,label="{private void androidx.lifecycle.ClassesInfoCache.verifyAndPutHandler((r5 'this' I:androidx.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\> A[D('handlers' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.lifecycle.ClassesInfoCache$MethodReference A[D('newHandler' androidx.lifecycle.ClassesInfoCache$MethodReference), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.lifecycle.Lifecycle$Event A[D('newEvent' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Class\<?\> A[D('klass' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0049 \-\> B:13:?, CROSS_EDGE: B:20:0x0044 \-\> B:22:0x0049, CROSS_EDGE: B:15:0x0006 \-\> B:20:0x0044\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0044: r1 'method' Ljava\/lang\/reflect\/Method;\l  0x0006\-0x0049: r0 'event' Landroidx\/lifecycle\/Lifecycle$Event;\l  0x0000\-0x0049: r6 'handlers' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;\>;\l  \-1 \-0x0049: r7 'newHandler' Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;\l  \-1 \-0x0049: r8 'newEvent' Landroidx\/lifecycle\/Lifecycle$Event;\l  0x0000\-0x0049: r9 'klass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\lSIGNATURE: (Ljava\/util\/Map\<Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;\>;Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;Ljava\/lang\/Class\<*\>;)V\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_18;
Node_16 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

