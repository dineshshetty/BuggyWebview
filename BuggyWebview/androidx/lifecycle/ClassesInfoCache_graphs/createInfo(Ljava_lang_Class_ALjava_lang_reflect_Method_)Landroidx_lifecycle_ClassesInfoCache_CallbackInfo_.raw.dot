digraph "CFG forandroidx.lifecycle.ClassesInfoCache.createInfo(Ljava\/lang\/Class;[Ljava\/lang\/reflect\/Method;)Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;" {
Node_57 [shape=record,label="{57\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY])  (LINE:109)\l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('klass' java.lang.Class\<?\>)]) \l0x0004: INVOKE  (r2 I:java.lang.Class) = (r17 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)]) type: VIRTUAL call: java.lang.Class.getSuperclass():java.lang.Class A[MD:():java.lang.Class\<? super T\> (c)]\l0x0008: NEW_INSTANCE  (r3 I:java.util.HashMap) =  java.util.HashMap  (LINE:110)\l0x000a: INVOKE  (r3 I:java.util.HashMap) type: DIRECT call: java.util.HashMap.\<init\>():void A[MD:():void (c)]\l}"];
Node_60 [shape=record,label="{60\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('superclass' java.lang.Class\<?\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x001a  (LINE:111)\l}"];
Node_61 [shape=record,label="{61\:\ 0x000f|0x000f: INVOKE  (r4 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo) = (r0 I:androidx.lifecycle.ClassesInfoCache), (r2 I:java.lang.Class A[D('superclass' java.lang.Class\<?\>)]) type: VIRTUAL call: androidx.lifecycle.ClassesInfoCache.getInfo(java.lang.Class):androidx.lifecycle.ClassesInfoCache$CallbackInfo A[MD:(java.lang.Class\<?\>):androidx.lifecycle.ClassesInfoCache$CallbackInfo (m)] (LINE:112)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0013|0x0013: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('superInfo' androidx.lifecycle.ClassesInfoCache$CallbackInfo)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x001a  (LINE:113)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0015|0x0015: IGET  (r5 I:java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>) = \l  (r4 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo A[D('superInfo' androidx.lifecycle.ClassesInfoCache$CallbackInfo)])\l androidx.lifecycle.ClassesInfoCache.CallbackInfo.mHandlerToEvent java.util.Map  (LINE:114)\l0x0017: INVOKE  \l  (r3 I:java.util.Map A[D('handlerToEvent' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l  (r5 I:java.util.Map)\l type: INTERFACE call: java.util.Map.putAll(java.util.Map):void A[MD:(java.util.Map\<? extends K, ? extends V\>):void (c)]\l}"];
Node_64 [shape=record,label="{64\:\ 0x001a|0x001a: INVOKE  (r4 I:java.lang.Class[]) = (r17 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)]) type: VIRTUAL call: java.lang.Class.getInterfaces():java.lang.Class[] A[MD:():java.lang.Class\<?\>[] (c)] (LINE:118)\l0x001e: ARRAY_LENGTH  (r5 I:int) = (r4 I:??[] A[D('interfaces' java.lang.Class\<?\>[])])  (LINE:119)\l0x001f: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0020: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_65 [shape=record,label="{65\:\ 0x0021|LOOP_START\lLOOP:0: B:65:0x0021\-\>B:70:0x004f\l|0x0021: IF  (r7 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:105:0x0052 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0023|0x0023: AGET  (r8 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY][] A[D('interfaces' java.lang.Class\<?\>[])]), (r7 I:??[int, short, byte, char]) \l0x0025: INVOKE  (r9 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo) = (r0 I:androidx.lifecycle.ClassesInfoCache), (r8 I:java.lang.Class A[D('intrfc' java.lang.Class\<?\>)]) type: VIRTUAL call: androidx.lifecycle.ClassesInfoCache.getInfo(java.lang.Class):androidx.lifecycle.ClassesInfoCache$CallbackInfo A[MD:(java.lang.Class\<?\>):androidx.lifecycle.ClassesInfoCache$CallbackInfo (m)] (LINE:120)\l0x0029: IGET  (r9 I:java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>) = (r9 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo) androidx.lifecycle.ClassesInfoCache.CallbackInfo.mHandlerToEvent java.util.Map \l0x002b: INVOKE  (r9 I:java.util.Set) = (r9 I:java.util.Map) type: INTERFACE call: java.util.Map.entrySet():java.util.Set A[MD:():java.util.Set\<java.util.Map$Entry\<K, V\>\> (c)] (LINE:121)\l0x002f: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:120)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0033|LOOP_START\lLOOP:1: B:67:0x0033\-\>B:69:0x0039\l|0x0033: INVOKE  (r10 I:boolean) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0037|0x0037: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:106:0x004f \l}"];
Node_69 [shape=record,label="{69\:\ 0x0039|LOOP_END\lLOOP:1: B:67:0x0033\-\>B:69:0x0039\l|0x0039: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x003d: CHECK_CAST (r10 I:java.util.Map$Entry) = (java.util.Map$Entry) (r10 I:??[OBJECT, ARRAY]) \l0x003f: INVOKE  (r11 I:java.lang.Object) = \l  (r10 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l type: INTERFACE call: java.util.Map.Entry.getKey():java.lang.Object A[MD:():K (c)] (LINE:122)\l0x0043: CHECK_CAST (r11 I:androidx.lifecycle.ClassesInfoCache$MethodReference) = (androidx.lifecycle.ClassesInfoCache$MethodReference) (r11 I:??[OBJECT, ARRAY]) \l0x0045: INVOKE  (r12 I:java.lang.Object) = \l  (r10 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l type: INTERFACE call: java.util.Map.Entry.getValue():java.lang.Object A[MD:():V (c)]\l0x0049: CHECK_CAST (r12 I:androidx.lifecycle.Lifecycle$Event) = (androidx.lifecycle.Lifecycle$Event) (r12 I:??[OBJECT, ARRAY]) \l0x004b: INVOKE  \l  (r0 I:androidx.lifecycle.ClassesInfoCache)\l  (r3 I:java.util.Map A[D('handlerToEvent' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l  (r11 I:androidx.lifecycle.ClassesInfoCache$MethodReference)\l  (r12 I:androidx.lifecycle.Lifecycle$Event)\l  (r1 I:java.lang.Class)\l type: DIRECT call: androidx.lifecycle.ClassesInfoCache.verifyAndPutHandler(java.util.Map, androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event, java.lang.Class):void A[MD:(java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>, androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event, java.lang.Class\<?\>):void (m)]\l}"];
Node_106 [shape=record,label="{106\:\ 0x004f|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x004f|LOOP_END\lLOOP:0: B:65:0x0021\-\>B:70:0x004f\l|0x004f: ARITH  (r7 I:int) = (r7 I:int) + (1 int)  (LINE:119)\l}"];
Node_105 [shape=record,label="{105\:\ 0x0052|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x0052|0x0052: IF  (r18 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('declaredMethods' java.lang.reflect.Method[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0057  (LINE:126)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0054|0x0054: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('declaredMethods' java.lang.reflect.Method[])]) \l}"];
Node_74 [shape=record,label="{74\:\ 0x005b|0x005b: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:127)\l0x005c: ARRAY_LENGTH  (r8 I:int) = (r5 I:??[] A[D('methods' java.lang.reflect.Method[])])  (LINE:128)\l0x005d: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_75 [shape=record,label="{75\:\ 0x005e|LOOP_START\lLOOP:2: B:75:0x005e\-\>B:100:0x00be\l|0x005e: IF  (r9 I:??[int, byte, short, char]) \>= (r8 I:??[int, byte, short, char])  \-\> B:109:0x00ca \l}"];
Node_76 [shape=record,label="{76\:\ 0x0060|0x0060: AGET  (r10 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY][] A[D('methods' java.lang.reflect.Method[])]), (r9 I:??[int, short, byte, char]) \l0x0062: CONST_CLASS  (r11 I:java.lang.Class\<androidx.lifecycle.OnLifecycleEvent\>) =  androidx.lifecycle.OnLifecycleEvent.class  (LINE:129)\l0x0064: INVOKE  (r11 I:java.lang.annotation.Annotation) = (r10 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]), (r11 I:java.lang.Class) type: VIRTUAL call: java.lang.reflect.Method.getAnnotation(java.lang.Class):java.lang.annotation.Annotation A[MD:\<T extends java.lang.annotation.Annotation\>:(java.lang.Class\<T extends java.lang.annotation.Annotation\>):T extends java.lang.annotation.Annotation (c)]\l0x0068: CHECK_CAST (r11 I:androidx.lifecycle.OnLifecycleEvent) = (androidx.lifecycle.OnLifecycleEvent) (r11 I:??[OBJECT, ARRAY]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x006a|0x006a: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('annotation' androidx.lifecycle.OnLifecycleEvent)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x006d  (LINE:130)\l}"];
Node_79 [shape=record,label="{79\:\ 0x006d|0x006d: CONST  (r7 I:??[boolean, int, float, short, byte, char] A[D('hasLifecycleMethods' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:133)\l0x006e: INVOKE  (r12 I:java.lang.Class[]) = (r10 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)]) type: VIRTUAL call: java.lang.reflect.Method.getParameterTypes():java.lang.Class[] A[MD:():java.lang.Class\<?\>[] (c)] (LINE:134)\l0x0072: CONST  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:135)\l0x0073: ARRAY_LENGTH  (r14 I:int) = (r12 I:??[] A[D('params' java.lang.Class\<?\>[])])  (LINE:136)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0074|0x0074: IF  (r14 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:86:0x008a \l}"];
Node_81 [shape=record,label="{81\:\ 0x0076|0x0076: CONST  (r13 I:??[boolean, int, float, short, byte, char] A[D('callType' int)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:137)\l0x0077: AGET  (r14 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY][] A[D('params' java.lang.Class\<?\>[])]), (r6 I:??[int, short, byte, char])  (LINE:138)\l0x0079: CONST_CLASS  (r15 I:java.lang.Class\<androidx.lifecycle.LifecycleOwner\>) =  androidx.lifecycle.LifecycleOwner.class \l0x007b: INVOKE  (r14 I:boolean) = (r14 I:java.lang.Class), (r15 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.isAssignableFrom(java.lang.Class):boolean A[MD:(java.lang.Class\<?\>):boolean (c)]\l}"];
Node_82 [shape=record,label="{82\:\ 0x007f|0x007f: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:110:0x0082 \l}"];
Node_110 [shape=record,label="{110\:\ 0x0082|SYNTHETIC\l}"];
Node_84 [shape=record,label="{84\:\ 0x0082|0x0082: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:139)\l0x0084: CONST_STR  (r8 I:java.lang.String) =  \"invalid parameter type. Must be one and instanceof LifecycleOwner\" \l0x0086: INVOKE  (r6 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_85 [shape=record,label="{85\:\ 0x0089|0x0089: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_58 [shape=record,label="{58\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_86 [shape=record,label="{86\:\ 0x008a|0x008a: INVOKE  (r14 I:androidx.lifecycle.Lifecycle$Event) = (r11 I:androidx.lifecycle.OnLifecycleEvent A[D('annotation' androidx.lifecycle.OnLifecycleEvent)]) type: INTERFACE call: androidx.lifecycle.OnLifecycleEvent.value():androidx.lifecycle.Lifecycle$Event A[MD:():androidx.lifecycle.Lifecycle$Event (m)] (LINE:143)\l0x008e: ARRAY_LENGTH  (r15 I:int) = (r12 I:??[] A[D('params' java.lang.Class\<?\>[])])  (LINE:145)\l0x008f: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_87 [shape=record,label="{87\:\ 0x0090|0x0090: IF  (r15 I:??[int, byte, short, char]) \<= (r6 I:??[int, byte, short, char])  \-\> B:97:0x00b2 \l}"];
Node_88 [shape=record,label="{88\:\ 0x0092|0x0092: CONST  (r13 I:??[int, float, short, byte, char] A[D('callType' int)]) = (2 ??[int, float, short, byte, char])  (LINE:146)\l0x0093: AGET  (r6 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY][] A[D('params' java.lang.Class\<?\>[])]), (r6 I:??[int, short, byte, char])  (LINE:147)\l0x0095: CONST_CLASS  (r15 I:java.lang.Class\<androidx.lifecycle.Lifecycle$Event\>) =  androidx.lifecycle.Lifecycle$Event.class \l0x0097: INVOKE  (r6 I:boolean) = (r6 I:java.lang.Class), (r15 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.isAssignableFrom(java.lang.Class):boolean A[MD:(java.lang.Class\<?\>):boolean (c)]\l}"];
Node_89 [shape=record,label="{89\:\ 0x009b|0x009b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:108:0x00aa \l}"];
Node_90 [shape=record,label="{90\:\ 0x009d|0x009d: SGET  (r6 I:androidx.lifecycle.Lifecycle$Event) =  androidx.lifecycle.Lifecycle.Event.ON_ANY androidx.lifecycle.Lifecycle$Event  (LINE:151)\l}"];
Node_91 [shape=record,label="{91\:\ 0x009f|0x009f: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:111:0x00a2 \l}"];
Node_111 [shape=record,label="{111\:\ 0x00a2|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x00a2|0x00a2: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:152)\l0x00a4: CONST_STR  (r8 I:java.lang.String) =  \"Second arg is supported only for ON_ANY value\" \l0x00a6: INVOKE  (r6 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_94 [shape=record,label="{94\:\ 0x00a9|0x00a9: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_108 [shape=record,label="{108\:\ 0x00aa|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x00aa|0x00aa: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:148)\l0x00ac: CONST_STR  (r8 I:java.lang.String) =  \"invalid parameter type. second arg must be an event\" \l0x00ae: INVOKE  (r6 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_96 [shape=record,label="{96\:\ 0x00b1|0x00b1: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_97 [shape=record,label="{97\:\ 0x00b2|0x00b2: ARRAY_LENGTH  (r6 I:int) = (r12 I:??[] A[D('params' java.lang.Class\<?\>[])])  (LINE:156)\l0x00b3: CONST  (r15 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_98 [shape=record,label="{98\:\ 0x00b4|0x00b4: IF  (r6 I:??[int, byte, short, char]) \> (r15 I:??[int, byte, short, char])  \-\> B:107:0x00c2 \l}"];
Node_99 [shape=record,label="{99\:\ 0x00b6|0x00b6: NEW_INSTANCE  (r6 I:androidx.lifecycle.ClassesInfoCache$MethodReference) =  androidx.lifecycle.ClassesInfoCache$MethodReference  (LINE:159)\l0x00b8: INVOKE  \l  (r6 I:androidx.lifecycle.ClassesInfoCache$MethodReference)\l  (r13 I:int A[D('callType' int)])\l  (r10 I:java.lang.reflect.Method A[D('method' java.lang.reflect.Method)])\l type: DIRECT call: androidx.lifecycle.ClassesInfoCache.MethodReference.\<init\>(int, java.lang.reflect.Method):void A[MD:(int, java.lang.reflect.Method):void (m)]\l0x00bb: INVOKE  \l  (r0 I:androidx.lifecycle.ClassesInfoCache)\l  (r3 I:java.util.Map A[D('handlerToEvent' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l  (r6 I:androidx.lifecycle.ClassesInfoCache$MethodReference A[D('methodReference' androidx.lifecycle.ClassesInfoCache$MethodReference)])\l  (r14 I:androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event)])\l  (r1 I:java.lang.Class)\l type: DIRECT call: androidx.lifecycle.ClassesInfoCache.verifyAndPutHandler(java.util.Map, androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event, java.lang.Class):void A[MD:(java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>, androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event, java.lang.Class\<?\>):void (m)] (LINE:160)\l}"];
Node_112 [shape=record,label="{112\:\ 0x00be|SYNTHETIC\l}"];
Node_100 [shape=record,label="{100\:\ 0x00be|LOOP_END\lLOOP:2: B:75:0x005e\-\>B:100:0x00be\l|0x00be: ARITH  (r9 I:int) = (r9 I:int) + (1 int)  (LINE:128)\l0x00c0: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_107 [shape=record,label="{107\:\ 0x00c2|SYNTHETIC\l}"];
Node_101 [shape=record,label="{101\:\ 0x00c2|0x00c2: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:157)\l0x00c4: CONST_STR  (r8 I:java.lang.String) =  \"cannot have more than 2 params\" \l0x00c6: INVOKE  (r6 I:java.lang.IllegalArgumentException), (r8 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_102 [shape=record,label="{102\:\ 0x00c9|0x00c9: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_113 [shape=record,label="{113\:\ 0x00be|SYNTHETIC\l}"];
Node_109 [shape=record,label="{109\:\ 0x00ca|SYNTHETIC\l}"];
Node_103 [shape=record,label="{103\:\ 0x00ca|0x00ca: NEW_INSTANCE  (r6 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo) =  androidx.lifecycle.ClassesInfoCache$CallbackInfo  (LINE:162)\l0x00cc: INVOKE  \l  (r6 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo)\l  (r3 I:java.util.Map A[D('handlerToEvent' java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>)])\l type: DIRECT call: androidx.lifecycle.ClassesInfoCache.CallbackInfo.\<init\>(java.util.Map):void A[MD:(java.util.Map\<androidx.lifecycle.ClassesInfoCache$MethodReference, androidx.lifecycle.Lifecycle$Event\>):void (m)]\l0x00cf: IGET  (r8 I:java.util.Map\<java.lang.Class\<?\>, androidx.lifecycle.ClassesInfoCache$CallbackInfo\>) = (r0 I:androidx.lifecycle.ClassesInfoCache) androidx.lifecycle.ClassesInfoCache.mCallbackMap java.util.Map  (LINE:163)\l0x00d1: INVOKE  \l  (r8 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r6 I:java.lang.Object A[D('info' androidx.lifecycle.ClassesInfoCache$CallbackInfo)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x00d4: IGET  (r8 I:java.util.Map\<java.lang.Class\<?\>, java.lang.Boolean\>) = (r0 I:androidx.lifecycle.ClassesInfoCache) androidx.lifecycle.ClassesInfoCache.mHasLifecycleMethods java.util.Map  (LINE:164)\l0x00d6: INVOKE  (r9 I:java.lang.Boolean) = (r7 I:boolean A[D('hasLifecycleMethods' boolean)]) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x00da: INVOKE  (r8 I:java.util.Map), (r1 I:java.lang.Object), (r9 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_104 [shape=record,label="{104\:\ 0x00dd|RETURN\l|0x00dd: RETURN  (r6 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo A[D('info' androidx.lifecycle.ClassesInfoCache$CallbackInfo)])  (LINE:165)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0057|0x0057: INVOKE  (r5 I:java.lang.reflect.Method[]) = (r16 I:androidx.lifecycle.ClassesInfoCache), (r17 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)]) type: DIRECT call: androidx.lifecycle.ClassesInfoCache.getDeclaredMethods(java.lang.Class):java.lang.reflect.Method[] A[MD:(java.lang.Class\<?\>):java.lang.reflect.Method[] (m)]\l}"];
MethodNode[shape=record,label="{private androidx.lifecycle.ClassesInfoCache$CallbackInfo androidx.lifecycle.ClassesInfoCache.createInfo((r16 'this' I:androidx.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r17 I:java.lang.Class\<?\> A[D('klass' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.reflect.Method[] A[D('declaredMethods' java.lang.reflect.Method[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:69:0x0039 \-\> B:67:0x0033, BACK_EDGE: B:70:0x004f \-\> B:65:0x0021, CROSS_EDGE: B:94:0x00a9 \-\> B:58:?, BACK_EDGE: B:100:0x00be \-\> B:75:0x005e, CROSS_EDGE: B:102:0x00c9 \-\> B:58:?, CROSS_EDGE: B:96:0x00b1 \-\> B:58:?, CROSS_EDGE: B:87:0x0090 \-\> B:97:0x00b2, CROSS_EDGE: B:80:0x0074 \-\> B:86:0x008a, CROSS_EDGE: B:77:0x006a \-\> B:100:0x00be, CROSS_EDGE: B:104:0x00dd \-\> B:58:?, CROSS_EDGE: B:73:0x0057 \-\> B:74:0x005b, CROSS_EDGE: B:62:0x0013 \-\> B:64:0x001a, CROSS_EDGE: B:60:0x000d \-\> B:64:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x001a: r4 'superInfo' Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;\l  0x003f\-0x004e: r10 'entry' Ljava\/util\/Map$Entry;, signature: Ljava\/util\/Map$Entry\<Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;\>;\l  0x0025\-0x004f: r8 'intrfc' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x00bb\-0x00be: r6 'methodReference' Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;\l  0x0062\-0x00be: r10 'method' Ljava\/lang\/reflect\/Method;\l  0x006a\-0x00be: r11 'annotation' Landroidx\/lifecycle\/OnLifecycleEvent;\l  0x0072\-0x00be: r12 'params' [Ljava\/lang\/Class;, signature: [Ljava\/lang\/Class\<*\>;\l  0x0073\-0x00be: r13 'callType' I\l  0x008e\-0x00be: r14 'event' Landroidx\/lifecycle\/Lifecycle$Event;\l  0x00c2\-0x00ca: r10 'method' Ljava\/lang\/reflect\/Method;\l  0x00c2\-0x00ca: r11 'annotation' Landroidx\/lifecycle\/OnLifecycleEvent;\l  0x00c2\-0x00ca: r12 'params' [Ljava\/lang\/Class;, signature: [Ljava\/lang\/Class\<*\>;\l  0x00c2\-0x00ca: r13 'callType' I\l  0x00c2\-0x00ca: r14 'event' Landroidx\/lifecycle\/Lifecycle$Event;\l  0x0008\-0x00dd: r2 'superclass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  0x000d\-0x00dd: r3 'handlerToEvent' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Landroidx\/lifecycle\/ClassesInfoCache$MethodReference;Landroidx\/lifecycle\/Lifecycle$Event;\>;\l  0x001e\-0x00dd: r4 'interfaces' [Ljava\/lang\/Class;, signature: [Ljava\/lang\/Class\<*\>;\l  0x005b\-0x00dd: r5 'methods' [Ljava\/lang\/reflect\/Method;\l  0x00cf\-0x00dd: r6 'info' Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;\l  0x005c\-0x00dd: r7 'hasLifecycleMethods' Z\l  0x0000\-0x00dd: r17 'klass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  \-1 \-0x00dd: r18 'declaredMethods' [Ljava\/lang\/reflect\/Method;\lSIGNATURE: (Ljava\/lang\/Class\<*\>;[Ljava\/lang\/reflect\/Method;)Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;\l}"];
MethodNode -> Node_57;Node_57 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_64;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_105;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_106;
Node_69 -> Node_67;
Node_106 -> Node_70;
Node_70 -> Node_65;
Node_105 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_74;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_109;
Node_76 -> Node_77;
Node_77 -> Node_79;
Node_77 -> Node_113[style=dashed];
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_86;
Node_81 -> Node_82;
Node_82 -> Node_86[style=dashed];
Node_82 -> Node_110;
Node_110 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_58;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_97;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_108;
Node_90 -> Node_91;
Node_91 -> Node_97[style=dashed];
Node_91 -> Node_111;
Node_111 -> Node_93;
Node_93 -> Node_94;
Node_94 -> Node_58;
Node_108 -> Node_95;
Node_95 -> Node_96;
Node_96 -> Node_58;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_107;
Node_99 -> Node_112;
Node_112 -> Node_100;
Node_100 -> Node_75;
Node_107 -> Node_101;
Node_101 -> Node_102;
Node_102 -> Node_58;
Node_113 -> Node_100;
Node_109 -> Node_103;
Node_103 -> Node_104;
Node_104 -> Node_58;
Node_73 -> Node_74;
}

