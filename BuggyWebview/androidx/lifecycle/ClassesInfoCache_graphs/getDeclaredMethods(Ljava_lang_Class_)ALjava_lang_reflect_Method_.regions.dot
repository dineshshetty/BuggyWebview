digraph "CFG forandroidx.lifecycle.ClassesInfoCache.getDeclaredMethods(Ljava\/lang\/Class;)[Ljava\/lang\/reflect\/Method;" {
subgraph cluster_Region_695398696 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1521982739 {
label = "Try: R(1:3) catches: R(2:6|8)";
node [shape=record,color=blue];
subgraph cluster_Region_525998290 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|RETURN\l|return r4.getDeclaredMethods()\l}"];
}
subgraph cluster_Region_415115711 {
label = "R(2:6|8) | ExcHandler: NoClassDefFoundError \-\> 0x0005\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|ExcHandler: NoClassDefFoundError \-\> 0x0005\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|throw new java.lang.IllegalArgumentException(\"The observer class has some methods that use newer APIs which are not available in the current OS version. Lifecycles cannot access even other methods so you should make sure that your observer classes only access framework classes that are available in your min API level OR use lifecycle:compiler annotation processor.\", r0)\l}"];
}
}
}
subgraph cluster_Region_415115711 {
label = "R(2:6|8) | ExcHandler: NoClassDefFoundError \-\> 0x0005\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0005|ExcHandler: NoClassDefFoundError \-\> 0x0005\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|throw new java.lang.IllegalArgumentException(\"The observer class has some methods that use newer APIs which are not available in the current OS version. Lifecycles cannot access even other methods so you should make sure that your observer classes only access framework classes that are available in your min API level OR use lifecycle:compiler annotation processor.\", r0)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoClassDefFoundError \-\> 0x0005, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lCatch: NoClassDefFoundError \-\> 0x0005\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
MethodNode[shape=record,label="{private java.lang.reflect.Method[] androidx.lifecycle.ClassesInfoCache.getDeclaredMethods((r3v0 'this' androidx.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r4v0 'klass' java.lang.Class\<?\> A[D('klass' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:10:?, CROSS_EDGE: B:16:0x0000 \-\> B:13:0x0005\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoClassDefFoundError \-\> 0x0005, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)[Ljava\/lang\/reflect\/Method;\l}"];
MethodNode -> Node_9;Node_12 -> Node_10;
Node_13 -> Node_14;
Node_15 -> Node_10;
Node_13 -> Node_14;
Node_15 -> Node_10;
Node_9 -> Node_16;
Node_16 -> Node_11;
Node_16 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_17;
Node_17 -> Node_13;
Node_14 -> Node_15;
}

