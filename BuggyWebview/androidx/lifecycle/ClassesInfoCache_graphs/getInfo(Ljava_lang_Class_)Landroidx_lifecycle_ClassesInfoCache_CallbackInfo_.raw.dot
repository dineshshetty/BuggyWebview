digraph "CFG forandroidx.lifecycle.ClassesInfoCache.getInfo(Ljava\/lang\/Class;)Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:java.util.Map\<java.lang.Class\<?\>, androidx.lifecycle.ClassesInfoCache$CallbackInfo\>) = (r2 I:androidx.lifecycle.ClassesInfoCache) androidx.lifecycle.ClassesInfoCache.mCallbackMap java.util.Map  (LINE:85)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object A[D('klass' java.lang.Class\<?\>)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0006: CHECK_CAST (r0 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo) = (androidx.lifecycle.ClassesInfoCache$CallbackInfo) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existing' androidx.lifecycle.ClassesInfoCache$CallbackInfo)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000b  (LINE:86)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|0x000a: RETURN  \l  (r0 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo A[D('existing' androidx.lifecycle.ClassesInfoCache$CallbackInfo)])\l  (LINE:87)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|0x000b: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:89)\l0x000c: INVOKE  (r0 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo A[D('existing' androidx.lifecycle.ClassesInfoCache$CallbackInfo)]) = \l  (r2 I:androidx.lifecycle.ClassesInfoCache)\l  (r3 I:java.lang.Class A[D('klass' java.lang.Class\<?\>)])\l  (r1 I:java.lang.reflect.Method[])\l type: DIRECT call: androidx.lifecycle.ClassesInfoCache.createInfo(java.lang.Class, java.lang.reflect.Method[]):androidx.lifecycle.ClassesInfoCache$CallbackInfo A[MD:(java.lang.Class\<?\>, java.lang.reflect.Method[]):androidx.lifecycle.ClassesInfoCache$CallbackInfo (m)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|RETURN\l|0x0010: RETURN  \l  (r0 I:androidx.lifecycle.ClassesInfoCache$CallbackInfo A[D('existing' androidx.lifecycle.ClassesInfoCache$CallbackInfo)])\l  (LINE:90)\l}"];
MethodNode[shape=record,label="{public androidx.lifecycle.ClassesInfoCache$CallbackInfo androidx.lifecycle.ClassesInfoCache.getInfo((r2 'this' I:androidx.lifecycle.ClassesInfoCache A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Class\<?\> A[D('klass' java.lang.Class\<?\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0010 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0010: r0 'existing' Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;\l  0x0000\-0x0010: r3 'klass' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\lSIGNATURE: (Ljava\/lang\/Class\<*\>;)Landroidx\/lifecycle\/ClassesInfoCache$CallbackInfo;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

