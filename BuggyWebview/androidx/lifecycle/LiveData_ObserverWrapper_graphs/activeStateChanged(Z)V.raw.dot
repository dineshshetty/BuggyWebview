digraph "CFG forandroidx.lifecycle.LiveData.ObserverWrapper.activeStateChanged(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)]) androidx.lifecycle.LiveData.ObserverWrapper.mActive boolean  (LINE:460)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|0x0002: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newActive' boolean)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0005 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:461)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|0x0005: IPUT  \l  (r3 I:boolean A[D('newActive' boolean)])\l  (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)])\l androidx.lifecycle.LiveData.ObserverWrapper.mActive boolean  (LINE:465)\l0x0007: IGET  (r0 I:androidx.lifecycle.LiveData) = (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)]) androidx.lifecycle.LiveData.ObserverWrapper.this$0 androidx.lifecycle.LiveData  (LINE:466)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|0x0009: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newActive' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x000d \l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|0x000e: INVOKE  (r0 I:androidx.lifecycle.LiveData), (r1 I:int) type: VIRTUAL call: androidx.lifecycle.LiveData.changeActiveCounter(int):void A[MD:(int):void (m)]\l0x0011: IGET  (r0 I:boolean) = (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)]) androidx.lifecycle.LiveData.ObserverWrapper.mActive boolean  (LINE:467)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|0x0015: IGET  (r0 I:androidx.lifecycle.LiveData) = (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)]) androidx.lifecycle.LiveData.ObserverWrapper.this$0 androidx.lifecycle.LiveData  (LINE:468)\l0x0017: INVOKE  \l  (r0 I:androidx.lifecycle.LiveData)\l  (r2 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper)])\l type: VIRTUAL call: androidx.lifecycle.LiveData.dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper):void A[MD:(androidx.lifecycle.LiveData\<T\>$ObserverWrapper):void (m)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|RETURN\lORIG_RETURN\l|0x001a: RETURN    (LINE:470)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x001a: RETURN   A[SYNTHETIC] (LINE:470)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|0x000d: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{void androidx.lifecycle.LiveData.ObserverWrapper.activeStateChanged((r2 'this' I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper), IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[D('newActive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001a \-\> B:15:?, CROSS_EDGE: B:24:0x0013 \-\> B:26:0x001a, CROSS_EDGE: B:22:0x000d \-\> B:23:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x001a: r2 'this' Landroidx\/lifecycle\/LiveData$ObserverWrapper;, signature: Landroidx\/lifecycle\/LiveData\<TT;\>.ObserverWrapper;\l  \-1 \-0x001a: r3 'newActive' Z\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_22 -> Node_23;
}

