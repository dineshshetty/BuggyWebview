digraph "CFG forandroidx.lifecycle.LiveData.ObserverWrapper.activeStateChanged(Z)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r3 != r2.mActive) goto L5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|r2.mActive = r3\landroidx.lifecycle.LiveData r0 = androidx.lifecycle.LiveData.this\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|if (r3 == false) goto L13\l}"];
Node_21 [shape=record,label="{21\:\ 0x000b|r1 = 1\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:22:0x000d, B:21:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r0.changeActiveCounter(r1)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|if (r2.mActive == false) goto L12\l}"];
Node_25 [shape=record,label="{25\:\ 0x0015|androidx.lifecycle.LiveData.this.dispatchingValue(r2)\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|r1 = \-1\l}"];
MethodNode[shape=record,label="{void androidx.lifecycle.LiveData.ObserverWrapper.activeStateChanged((r2v0 'this' androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$ObserverWrapper), IMMUTABLE_TYPE, THIS]), (r3v0 'newActive' boolean A[D('newActive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001a \-\> B:15:?, CROSS_EDGE: B:24:0x0013 \-\> B:26:0x001a, CROSS_EDGE: B:22:0x000d \-\> B:23:0x000e\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_15;
Node_22 -> Node_23;
}

