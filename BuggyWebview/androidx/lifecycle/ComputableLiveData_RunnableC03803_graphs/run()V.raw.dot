digraph "CFG forandroidx.lifecycle.ComputableLiveData.3.run()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.lifecycle.ComputableLiveData) = (r4 I:androidx.lifecycle.ComputableLiveData$3 A[D('this' androidx.lifecycle.ComputableLiveData$3)]) androidx.lifecycle.ComputableLiveData.3.this$0 androidx.lifecycle.ComputableLiveData  (LINE:128)\l0x0002: IGET  (r0 I:androidx.lifecycle.LiveData\<T\>) = (r0 I:androidx.lifecycle.ComputableLiveData) androidx.lifecycle.ComputableLiveData.mLiveData androidx.lifecycle.LiveData \l0x0004: INVOKE  (r0 I:boolean) = (r0 I:androidx.lifecycle.LiveData) type: VIRTUAL call: androidx.lifecycle.LiveData.hasActiveObservers():boolean A[MD:():boolean (m)]\l0x0008: IGET  (r1 I:androidx.lifecycle.ComputableLiveData) = (r4 I:androidx.lifecycle.ComputableLiveData$3 A[D('this' androidx.lifecycle.ComputableLiveData$3)]) androidx.lifecycle.ComputableLiveData.3.this$0 androidx.lifecycle.ComputableLiveData  (LINE:129)\l0x000a: IGET  (r1 I:java.util.concurrent.atomic.AtomicBoolean) = (r1 I:androidx.lifecycle.ComputableLiveData) androidx.lifecycle.ComputableLiveData.mInvalid java.util.concurrent.atomic.AtomicBoolean \l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000e: INVOKE  (r1 I:boolean) = (r1 I:java.util.concurrent.atomic.AtomicBoolean), (r2 I:boolean), (r3 I:boolean) type: VIRTUAL call: java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean, boolean):boolean A[MD:(boolean, boolean):boolean (c)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:? \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isActive' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:?  (LINE:130)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r1 I:androidx.lifecycle.ComputableLiveData) = (r4 I:androidx.lifecycle.ComputableLiveData$3 A[D('this' androidx.lifecycle.ComputableLiveData$3)]) androidx.lifecycle.ComputableLiveData.3.this$0 androidx.lifecycle.ComputableLiveData  (LINE:131)\l0x0018: IGET  (r1 I:java.util.concurrent.Executor) = (r1 I:androidx.lifecycle.ComputableLiveData) androidx.lifecycle.ComputableLiveData.mExecutor java.util.concurrent.Executor \l0x001a: IGET  (r2 I:androidx.lifecycle.ComputableLiveData) = (r4 I:androidx.lifecycle.ComputableLiveData$3 A[D('this' androidx.lifecycle.ComputableLiveData$3)]) androidx.lifecycle.ComputableLiveData.3.this$0 androidx.lifecycle.ComputableLiveData \l0x001c: IGET  (r2 I:java.lang.Runnable) = (r2 I:androidx.lifecycle.ComputableLiveData) androidx.lifecycle.ComputableLiveData.mRefreshRunnable java.lang.Runnable \l0x001e: INVOKE  (r1 I:java.util.concurrent.Executor), (r2 I:java.lang.Runnable) type: INTERFACE call: java.util.concurrent.Executor.execute(java.lang.Runnable):void A[MD:(java.lang.Runnable):void (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN    (LINE:134)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:134)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN   A[SYNTHETIC] (LINE:134)\l}"];
MethodNode[shape=record,label="{public void androidx.lifecycle.ComputableLiveData.3.run((r4 'this' I:androidx.lifecycle.ComputableLiveData$3 A[D('this' androidx.lifecycle.ComputableLiveData$3), IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:4:0x0014 \-\> B:6:0x0021, CROSS_EDGE: B:3:0x0012 \-\> B:6:0x0021\lDebug Info:\l  0x0008\-0x0021: r0 'isActive' Z\l  0x0000\-0x0021: r4 'this' Landroidx\/lifecycle\/ComputableLiveData$3;, signature: Landroidx\/lifecycle\/ComputableLiveData$3;\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_8 -> Node_1;
Node_7 -> Node_1;
}

