digraph "CFG forandroidx.lifecycle.LiveData.AlwaysActiveObserver.\<init\>(Landroidx\/lifecycle\/LiveData;Landroidx\/lifecycle\/Observer;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IPUT  \l  (r1 I:androidx.lifecycle.LiveData)\l  (r0 I:androidx.lifecycle.LiveData$AlwaysActiveObserver A[D('this' androidx.lifecycle.LiveData\<T\>$AlwaysActiveObserver)])\l androidx.lifecycle.LiveData.AlwaysActiveObserver.this$0 androidx.lifecycle.LiveData  (LINE:475)\l0x0002: INVOKE  \l  (r0 I:androidx.lifecycle.LiveData$ObserverWrapper A[D('this' androidx.lifecycle.LiveData\<T\>$AlwaysActiveObserver)])\l  (r1 I:androidx.lifecycle.LiveData)\l  (r2 I:androidx.lifecycle.Observer A[D('observer' androidx.lifecycle.Observer\<? super T\>)])\l type: DIRECT call: androidx.lifecycle.LiveData.ObserverWrapper.\<init\>(androidx.lifecycle.LiveData, androidx.lifecycle.Observer):void A[MD:(androidx.lifecycle.LiveData, androidx.lifecycle.Observer\<? super T\>):void (m)] (LINE:476)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:477)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.lifecycle.LiveData.AlwaysActiveObserver.\<init\>((r0 'this' I:androidx.lifecycle.LiveData$AlwaysActiveObserver A[D('this' androidx.lifecycle.LiveData\<T\>$AlwaysActiveObserver), IMMUTABLE_TYPE, THIS]), (r1 I:androidx.lifecycle.LiveData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:androidx.lifecycle.Observer\<? super T\> A[D('observer' androidx.lifecycle.Observer\<? super T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lUSE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0005: r0 'this' Landroidx\/lifecycle\/LiveData$AlwaysActiveObserver;, signature: Landroidx\/lifecycle\/LiveData\<TT;\>.AlwaysActiveObserver;\l  0x0000\-0x0005: r2 'observer' Landroidx\/lifecycle\/Observer;, signature: Landroidx\/lifecycle\/Observer\<\-TT;\>;\lTYPE_VARS: [T]\lSIGNATURE: (Landroidx\/lifecycle\/Observer\<\-TT;\>;)V\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

