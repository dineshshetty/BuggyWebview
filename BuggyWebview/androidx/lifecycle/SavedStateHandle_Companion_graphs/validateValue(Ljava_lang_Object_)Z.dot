digraph "CFG forandroidx.lifecycle.SavedStateHandle.Companion.validateValue(Ljava\/lang\/Object;)Z" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000}"];
Node_31 [shape=record,label="{31\:\ 0x0001|if (r8 != null) goto L5\l}"];
Node_32 [shape=record,label="{32\:\ 0x0003|RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|java.lang.Class[] r1 = androidx.lifecycle.SavedStateHandle.ACCEPTABLE_CLASSES\lint r2 = r1.length\lr4 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x000b|LOOP_START\lLOOP:0: B:34:0x000b\-\>B:38:0x0019\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:33:0x0004, B:38:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \>= r2) goto L12\l}"];
Node_35 [shape=record,label="{35\:\ 0x000d|r5 = r1[r4]\lkotlin.jvm.internal.Intrinsics.checkNotNull(r5)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|if (r5.isInstance(r8) == false) goto L9\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|LOOP_END\lLOOP:0: B:34:0x000b\-\>B:38:0x0019\l|int r4 = r4 + 1\l}"];
Node_40 [shape=record,label="{40\:\ 0x0018|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|RETURN\l|return true\l}"];
Node_41 [shape=record,label="{41\:\ 0x001c|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x001c|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public final boolean androidx.lifecycle.SavedStateHandle.Companion.validateValue((r7v0 'this' androidx.lifecycle.SavedStateHandle$Companion A[IMMUTABLE_TYPE, THIS]), (r8v0 'value' java.lang.Object A[D('value' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:37:0x0018 \-\> B:29:?, BACK_EDGE: B:38:0x0019 \-\> B:34:0x000b, CROSS_EDGE: B:39:0x001c \-\> B:29:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_29;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_40[style=dashed];
Node_38 -> Node_34;
Node_40 -> Node_37;
Node_37 -> Node_29;
Node_41 -> Node_39;
Node_39 -> Node_29;
}

