digraph "CFG forandroidx.lifecycle.SavedStateHandleAttacher.onStateChanged(Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/lifecycle\/Lifecycle$Event;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"source\" \l0x0002: INVOKE  (r4 I:java.lang.Object A[D('source' androidx.lifecycle.LifecycleOwner)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"event\" \l0x0007: INVOKE  (r5 I:java.lang.Object A[D('event' androidx.lifecycle.Lifecycle$Event)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000a: SGET  (r0 I:androidx.lifecycle.Lifecycle$Event) =  androidx.lifecycle.Lifecycle.Event.ON_CREATE androidx.lifecycle.Lifecycle$Event  (LINE:192)\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|0x000c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('event' androidx.lifecycle.Lifecycle$Event)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0010 \l}"];
Node_15 [shape=record,label="{15\:\ 0x000e|0x000e: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0023 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0013|0x0013: INVOKE  (r0 I:androidx.lifecycle.Lifecycle) = (r4 I:androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner)]) type: INTERFACE call: androidx.lifecycle.LifecycleOwner.getLifecycle():androidx.lifecycle.Lifecycle A[MD:():androidx.lifecycle.Lifecycle (m)] (LINE:195)\l0x0017: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0018: CHECK_CAST (r1 I:androidx.lifecycle.LifecycleObserver) = (androidx.lifecycle.LifecycleObserver) (r1 I:??[OBJECT, ARRAY]) \l0x001a: INVOKE  (r0 I:androidx.lifecycle.Lifecycle), (r1 I:androidx.lifecycle.LifecycleObserver) type: VIRTUAL call: androidx.lifecycle.Lifecycle.removeObserver(androidx.lifecycle.LifecycleObserver):void A[MD:(androidx.lifecycle.LifecycleObserver):void (m)]\l0x001d: IGET  (r0 I:androidx.lifecycle.SavedStateHandlesProvider) = (r3 I:androidx.lifecycle.SavedStateHandleAttacher) androidx.lifecycle.SavedStateHandleAttacher.provider androidx.lifecycle.SavedStateHandlesProvider  (LINE:199)\l0x001f: INVOKE  (r0 I:androidx.lifecycle.SavedStateHandlesProvider) type: VIRTUAL call: androidx.lifecycle.SavedStateHandlesProvider.performRestore():void A[MD:():void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|RETURN\l|0x0022: RETURN    (LINE:200)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0023|0x0023: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:192)\l0x0024: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:193)\l0x0026: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0029: CONST_STR  (r2 I:java.lang.String) =  \"Next event must be ON_CREATE, it was \" \l0x002b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('event' androidx.lifecycle.Lifecycle$Event)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0031: INVOKE  (r0 I:java.lang.String A[D('$i$a$\-check\-SavedStateHandleAttacher$onStateChanged$1' int)]) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0035: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:192)\l0x0037: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x003b: INVOKE  (r1 I:java.lang.IllegalStateException), (r0 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|0x003e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0010|0x0010: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.lifecycle.SavedStateHandleAttacher.onStateChanged((r3 'this' I:androidx.lifecycle.SavedStateHandleAttacher A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x003e \-\> B:12:?, CROSS_EDGE: B:16:0x0010 \-\> B:17:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x0035: r0 '$i$a$\-check\-SavedStateHandleAttacher$onStateChanged$1' I\l  \-1 \-0x003e: r4 'source' Landroidx\/lifecycle\/LifecycleOwner;\l  \-1 \-0x003e: r5 'event' Landroidx\/lifecycle\/Lifecycle$Event;\lMETHOD_OVERRIDE: [androidx.lifecycle.LifecycleEventObserver.onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event):void]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

