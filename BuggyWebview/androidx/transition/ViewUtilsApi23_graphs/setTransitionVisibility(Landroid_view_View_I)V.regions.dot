digraph "CFG forandroidx.transition.ViewUtilsApi23.setTransitionVisibility(Landroid\/view\/View;I)V" {
subgraph cluster_Region_140934550 {
label = "R(1:(1:3)(1:(1:(1:9))(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1179130456 {
label = "IF [B:20:0x0004] THEN: R(1:3) ELSE: R(1:(1:(1:9))(0))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT == 28) goto L3\l}"];
subgraph cluster_Region_1395820850 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0006|super.setTransitionVisibility(r3, r4)\l}"];
}
subgraph cluster_Region_741799949 {
label = "R(1:(1:(1:9))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_394771152 {
label = "IF [B:23:0x000c] THEN: R(1:(1:9)) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000c|if (androidx.transition.ViewUtilsApi23.sTryHiddenSetTransitionVisibility != false) goto L8\l}"];
subgraph cluster_Region_295434402 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1445431482 {
label = "Try: R(1:9) catches: R(1:13)";
node [shape=record,color=blue];
subgraph cluster_Region_1296753891 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000e|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodError \-\> 0x0012, blocks: (B:24:0x000e), top: B:29:0x000e \}\lCatch: NoSuchMethodError \-\> 0x0012\l|r3.setTransitionVisibility(r4)     \/\/ Catch: java.lang.NoSuchMethodError \-\> L12\l}"];
}
subgraph cluster_Region_1731303072 {
label = "R(1:13) | ExcHandler: NoSuchMethodError \-\> 0x0012\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0013|androidx.transition.ViewUtilsApi23.sTryHiddenSetTransitionVisibility = false\l}"];
}
}
}
subgraph cluster_Region_690043916 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_1731303072 {
label = "R(1:13) | ExcHandler: NoSuchMethodError \-\> 0x0012\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0013|androidx.transition.ViewUtilsApi23.sTryHiddenSetTransitionVisibility = false\l}"];
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0000}"];
Node_31 [shape=record,color=red,label="{31\:\ ?|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000a}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x000e|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0012|ExcHandler: NoSuchMethodError \-\> 0x0012\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0016|ORIG_RETURN\l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.transition.ViewUtilsApi23.setTransitionVisibility((r2v0 'this' androidx.transition.ViewUtilsApi23 A[IMMUTABLE_TYPE, THIS]), (r3v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x000c \-\> B:28:0x0016, CROSS_EDGE: B:24:0x000e \-\> B:28:0x0016, CROSS_EDGE: B:27:0x0013 \-\> B:28:0x0016, CROSS_EDGE: B:29:0x000e \-\> B:26:0x0012\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoSuchMethodError \-\> 0x0012, blocks: (B:24:0x000e), top: B:29:0x000e \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.transition.ViewUtilsBase.setTransitionVisibility(android.view.View, int):void]\l}"];
MethodNode -> Node_17;Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_23 -> Node_29;
Node_23 -> Node_32[style=dashed];
Node_24 -> Node_30;
Node_24 -> Node_33;
Node_27 -> Node_28;
Node_27 -> Node_28;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_31 -> Node_18;
Node_22 -> Node_23;
Node_29 -> Node_24;
Node_29 -> Node_26;
Node_30 -> Node_26;
Node_33 -> Node_18;
Node_26 -> Node_27;
Node_28 -> Node_18;
Node_32 -> Node_18;
}

