digraph "CFG forandroidx.transition.PatternPathMotion.distance(FF)F" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: ARITH  (r0 I:float) = (r2 I:float A[D('x' float)]) * (r2 I:float A[D('x' float)])  (LINE:149)\l0x0002: ARITH  (r1 I:float) = (r3 I:float A[D('y' float)]) * (r3 I:float A[D('y' float)]) \l0x0004: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x0005: CAST (r0 I:double) = (double) (r0 I:float) \l0x0006: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.sqrt(double):double A[MD:(double):double (c)]\l0x000a: CAST (r0 I:float) = (float) (r0 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static float androidx.transition.PatternPathMotion.distance((r2 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000b: r2 'x' F\l  \-1 \-0x000b: r3 'y' F\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

