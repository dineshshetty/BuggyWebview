digraph "CFG forandroidx.transition.ChangeImageTransform.captureValues(Landroidx\/transition\/TransitionValues;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r12 I:androidx.transition.TransitionValues A[D('transitionValues' androidx.transition.TransitionValues)]) androidx.transition.TransitionValues.view android.view.View  (LINE:82)\l0x0002: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) android.widget.ImageView  (LINE:83)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x003d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|0x0006: INVOKE  (r1 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getVisibility():int A[MD:():int (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x000d \l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|0x000d: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:86)\l0x000e: CHECK_CAST (r1 I:android.widget.ImageView) = (android.widget.ImageView) (r1 I:??[OBJECT, ARRAY]) \l0x0010: INVOKE  (r2 I:android.graphics.drawable.Drawable) = (r1 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:87)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|0x0014: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0017  (LINE:88)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:89)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|0x0017: IGET  (r3 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r12 I:androidx.transition.TransitionValues A[D('transitionValues' androidx.transition.TransitionValues)]) androidx.transition.TransitionValues.values java.util.Map  (LINE:91)\l0x0019: INVOKE  (r4 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:93)\l0x001d: INVOKE  (r5 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:94)\l0x0021: INVOKE  (r6 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:95)\l0x0025: INVOKE  (r7 I:int) = (r0 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:96)\l0x0029: NEW_INSTANCE  (r8 I:android.graphics.Rect) =  android.graphics.Rect  (LINE:98)\l0x002b: INVOKE  \l  (r8 I:android.graphics.Rect)\l  (r4 I:int A[D('left' int)])\l  (r5 I:int A[D('top' int)])\l  (r6 I:int A[D('right' int)])\l  (r7 I:int A[D('bottom' int)])\l type: DIRECT call: android.graphics.Rect.\<init\>(int, int, int, int):void A[MD:(int, int, int, int):void (c)]\l0x002e: CONST_STR  (r9 I:java.lang.String) =  \"android:changeImageTransform:bounds\"  (LINE:99)\l0x0030: INVOKE  \l  (r3 I:java.util.Map A[D('values' java.util.Map\<java.lang.String, java.lang.Object\>)])\l  (r9 I:java.lang.Object)\l  (r8 I:java.lang.Object A[D('bounds' android.graphics.Rect)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0033: INVOKE  (r9 I:android.graphics.Matrix) = (r1 I:android.widget.ImageView A[D('imageView' android.widget.ImageView)]) type: STATIC call: androidx.transition.ChangeImageTransform.copyImageMatrix(android.widget.ImageView):android.graphics.Matrix A[MD:(android.widget.ImageView):android.graphics.Matrix (m)] (LINE:100)\l0x0037: CONST_STR  (r10 I:java.lang.String) =  \"android:changeImageTransform:matrix\" \l0x0039: INVOKE  \l  (r3 I:java.util.Map A[D('values' java.util.Map\<java.lang.String, java.lang.Object\>)])\l  (r10 I:java.lang.Object)\l  (r9 I:java.lang.Object)\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|RETURN\l|0x003c: RETURN    (LINE:101)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:84)\l}"];
Node_26 [shape=record,label="{26\:\ 0x003d|RETURN\lORIG_RETURN\l|0x003d: RETURN    (LINE:84)\l}"];
MethodNode[shape=record,label="{private void androidx.transition.ChangeImageTransform.captureValues((r11 'this' I:androidx.transition.ChangeImageTransform A[IMMUTABLE_TYPE, THIS]), (r12 I:androidx.transition.TransitionValues A[D('transitionValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x003c \-\> B:15:?, CROSS_EDGE: B:26:0x003d \-\> B:15:?, CROSS_EDGE: B:17:0x0004 \-\> B:26:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x003d: r1 'imageView' Landroid\/widget\/ImageView;\l  0x0014\-0x003d: r2 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  0x0019\-0x003d: r3 'values' Ljava\/util\/Map;, signature: Ljava\/util\/Map\<Ljava\/lang\/String;Ljava\/lang\/Object;\>;\l  0x001d\-0x003d: r4 'left' I\l  0x0021\-0x003d: r5 'top' I\l  0x0025\-0x003d: r6 'right' I\l  0x0029\-0x003d: r7 'bottom' I\l  0x002e\-0x003d: r8 'bounds' Landroid\/graphics\/Rect;\l  0x0002\-0x003d: r0 'view' Landroid\/view\/View;\l  \-1 \-0x003d: r12 'transitionValues' Landroidx\/transition\/TransitionValues;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

