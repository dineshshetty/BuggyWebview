digraph "CFG forandroidx.transition.ChangeImageTransform.captureValues(Landroidx\/transition\/TransitionValues;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|android.view.View r0 = r12.view\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|if ((r0 instanceof android.widget.ImageView) == false) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x0006}"];
Node_19 [shape=record,label="{19\:\ 0x000a|if (r0.getVisibility() == 0) goto L5\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|android.widget.ImageView r1 = (android.widget.ImageView) r0\landroid.graphics.drawable.Drawable r2 = r1.getDrawable()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0014|if (r2 != null) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0017|java.util.Map\<java.lang.String, java.lang.Object\> r3 = r12.values\lint r4 = r0.getLeft()\lint r5 = r0.getTop()\lint r6 = r0.getRight()\lint r7 = r0.getBottom()\landroid.graphics.Rect r8 = new android.graphics.Rect(r4, r5, r6, r7)\lr3.put(androidx.transition.ChangeImageTransform.PROPNAME_BOUNDS, r8)\lr3.put(androidx.transition.ChangeImageTransform.PROPNAME_MATRIX, copyImageMatrix(r1))\l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x003d|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.transition.ChangeImageTransform.captureValues((r11v0 'this' androidx.transition.ChangeImageTransform A[IMMUTABLE_TYPE, THIS]), (r12v0 'transitionValues' androidx.transition.TransitionValues A[D('transitionValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x003c \-\> B:15:?, CROSS_EDGE: B:26:0x003d \-\> B:15:?, CROSS_EDGE: B:17:0x0004 \-\> B:26:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_27 -> Node_15;
Node_26 -> Node_15;
}

