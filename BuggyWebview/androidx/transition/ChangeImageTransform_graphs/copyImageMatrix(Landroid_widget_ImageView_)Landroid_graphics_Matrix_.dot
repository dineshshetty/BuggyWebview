digraph "CFG forandroidx.transition.ChangeImageTransform.copyImageMatrix(Landroid\/widget\/ImageView;)Landroid\/graphics\/Matrix;" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|android.graphics.drawable.Drawable r0 = r3.getDrawable()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|if (r0.getIntrinsicWidth() \<= 0) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a}"];
Node_20 [shape=record,label="{20\:\ 0x000e|if (r0.getIntrinsicHeight() \<= 0) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0010}"];
Node_22 [shape=record,label="{22\:\ 0x001c|switch(androidx.transition.ChangeImageTransform.C04883.$SwitchMap$android$widget$ImageView$ScaleType[r3.getScaleType().ordinal()]) \{\l    case 1: goto L10;\l    case 2: goto L7;\l    default: goto L12;\l\}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0020}"];
Node_25 [shape=record,label="{25\:\ 0x0024|RETURN\l|return centerCropMatrix(r3)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025}"];
Node_27 [shape=record,label="{27\:\ 0x0029|RETURN\l|return fitXYMatrix(r3)\l}"];
Node_28 [shape=record,label="{28\:\ 0x002a}"];
Node_29 [shape=record,label="{29\:\ 0x0033|RETURN\l|return new android.graphics.Matrix(r3.getImageMatrix())\l}"];
MethodNode[shape=record,label="{private static android.graphics.Matrix androidx.transition.ChangeImageTransform.copyImageMatrix((r3v0 'view' android.widget.ImageView A[D('view' android.widget.ImageView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0029 \-\> B:16:?, CROSS_EDGE: B:29:0x0033 \-\> B:16:?, CROSS_EDGE: B:20:0x000e \-\> B:28:0x002a, CROSS_EDGE: B:18:0x0008 \-\> B:28:0x002a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_26;
Node_22 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_16;
Node_28 -> Node_29;
Node_29 -> Node_16;
}

