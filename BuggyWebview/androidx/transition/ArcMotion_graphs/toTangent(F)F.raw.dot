digraph "CFG forandroidx.transition.ArcMotion.toTangent(F)F" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:177)\l0x0001: CMP_G  (r0 I:int) = (r2 I:float A[D('arcInDegrees' float)]), (r0 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:18:0x001a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (1119092736(0x42b40000, float:90.0) ??[int, float, short, byte, char]) \l0x0007: CMP_L  (r0 I:int) = (r2 I:float A[D('arcInDegrees' float)]), (r0 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0009|0x0009: IF  (r0 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:18:0x001a \l}"];
Node_16 [shape=record,label="{16\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char])  (LINE:180)\l0x000d: ARITH  (r0 I:float) = (r2 I:float A[D('arcInDegrees' float)]) \/ (r0 I:float) \l0x000f: CAST (r0 I:double) = (double) (r0 I:float) \l0x0010: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.toRadians(double):double A[MD:(double):double (c)]\l0x0014: INVOKE  (r0 I:double) = (r0 I:double) type: STATIC call: java.lang.Math.tan(double):double A[MD:(double):double (c)]\l0x0018: CAST (r0 I:float) = (float) (r0 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:float) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:178)\l0x001c: CONST_STR  (r1 I:java.lang.String) =  \"Arc must be between 0 and 90 degrees\" \l0x001e: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0021|0x0021: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static float androidx.transition.ArcMotion.toTangent((r2 I:float A[D('arcInDegrees' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0021 \-\> B:11:?, CROSS_EDGE: B:13:0x0003 \-\> B:18:0x001a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0021: r2 'arcInDegrees' F\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

