digraph "CFG forandroidx.transition.ArcMotion.getPath(FFFF)Landroid\/graphics\/Path;" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|android.graphics.Path r3 = new android.graphics.Path()\lr3.moveTo(r32, r33)\lfloat r11 = r34 \- r32\lfloat r12 = r35 \- r33\lfloat r13 = (r11 * r11) + (r12 * r12)\lfloat r14 = (r32 + r34) \/ 2.0f\lfloat r15 = (r33 + r35) \/ 2.0f\lfloat r16 = r13 * 0.25f\l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|if ((r33 \> r35 ? 1 : (r33 == r35 ? 0 : \-1)) \<= 0) goto L30\l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|r3 = true\l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|PHI: r3 \l  PHI: (r3v7 boolean) = (r3v6 boolean), (r3v28 boolean) binds: [B:36:0x002d, B:35:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r17 = r3\l}"];
Node_38 [shape=record,label="{38\:\ 0x003a|if ((java.lang.Math.abs(r11) \> java.lang.Math.abs(r12) ? 1 : (java.lang.Math.abs(r11) == java.lang.Math.abs(r12) ? 0 : \-1)) \>= 0) goto L25\l}"];
Node_39 [shape=record,label="{39\:\ 0x003c|float r3 = java.lang.Math.abs(r13 \/ (r12 * 2.0f))\l}"];
Node_40 [shape=record,label="{40\:\ 0x0044|if (r17 == false) goto L24\l}"];
Node_41 [shape=record,label="{41\:\ 0x0046|float r5 = r35 + r3\lr6 = r34\l}"];
Node_43 [shape=record,label="{43\:\ 0x004f|PHI: r5 r6 \l  PHI: (r5v10 'ey' float) = (r5v9 'ey' float), (r5v11 'ey' float) binds: [B:42:0x004b, B:41:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v9 'ex' float) = (r6v8 'ex' float), (r6v10 'ex' float) binds: [B:42:0x004b, B:41:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|float r7 = r31.mMinimumVerticalTangent\lfloat r8 = (r16 * r7) * r7\lr18 = r8\l}"];
Node_49 [shape=record,label="{49\:\ 0x0079|PHI: r5 r6 r18 \l  PHI: (r5v6 'ey' float) = (r5v3 'ey' float), (r5v10 'ey' float) binds: [B:48:0x0071, B:43:0x004f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v5 'ex' float) = (r6v2 'ex' float), (r6v9 'ex' float) binds: [B:48:0x0071, B:43:0x004f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 'minimumArcDist2' float) = (r18v0 'minimumArcDist2' float), (r18v2 'minimumArcDist2' float) binds: [B:48:0x0071, B:43:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|float r19 = r14 \- r6\lfloat r20 = r15 \- r5\lfloat r21 = (r19 * r19) + (r20 * r20)\lfloat r3 = r31.mMaximumTangent\lfloat r22 = (r16 * r3) * r3\l}"];
Node_50 [shape=record,label="{50\:\ 0x008c|if ((r21 \> r18 ? 1 : (r21 == r18 ? 0 : \-1)) \>= 0) goto L20\l}"];
Node_51 [shape=record,label="{51\:\ 0x008e|r3 = r18\lr23 = r3\l}"];
Node_56 [shape=record,label="{56\:\ 0x009e|PHI: r23 \l  PHI: (r23v2 'newArcDistance2' float) = (r23v0 'newArcDistance2' float), (r23v1 'newArcDistance2' float), (r23v3 'newArcDistance2' float) binds: [B:55:0x009c, B:54:0x0097, B:51:0x008e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00a1|if ((r23 \> 0.0f ? 1 : (r23 == 0.0f ? 0 : \-1)) == 0) goto L19\l}"];
Node_58 [shape=record,label="{58\:\ 0x00a3|float r3 = r23 \/ r21\lfloat r7 = (float) java.lang.Math.sqrt((double) r3)\lfloat r6 = r14 + ((r6 \- r14) * r7)\lfloat r5 = r15 + ((r5 \- r15) * r7)\lr24 = r5\lr25 = r6\l}"];
Node_60 [shape=record,label="{60\:\ 0x00c0|PHI: r24 r25 \l  PHI: (r24v1 'ey' float) = (r24v0 'ey' float), (r24v2 'ey' float) binds: [B:59:0x00bc, B:58:0x00a3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r25v1 'ex' float) = (r25v0 'ex' float), (r25v2 'ex' float) binds: [B:59:0x00bc, B:58:0x00a3] A[DONT_GENERATE, DONT_INLINE]\l|float r26 = (r32 + r25) \/ 2.0f\lfloat r27 = (r33 + r24) \/ 2.0f\lfloat r28 = (r25 + r34) \/ 2.0f\lfloat r29 = (r24 + r35) \/ 2.0f\lr3.cubicTo(r26, r27, r28, r29, r34, r35)\l}"];
Node_61 [shape=record,label="{61\:\ 0x00e0|RETURN\l|return r3\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_59 [shape=record,label="{59\:\ 0x00bc|r24 = r5\lr25 = r6\l}"];
Node_52 [shape=record,label="{52\:\ 0x0093}"];
Node_53 [shape=record,label="{53\:\ 0x0095|if ((r21 \> r22 ? 1 : (r21 == r22 ? 0 : \-1)) \<= 0) goto L23\l}"];
Node_54 [shape=record,label="{54\:\ 0x0097|r23 = r22\l}"];
Node_55 [shape=record,label="{55\:\ 0x009c|r23 = 0.0f\l}"];
Node_42 [shape=record,label="{42\:\ 0x004b|float r5 = r33 + r3\lr6 = r32\l}"];
Node_44 [shape=record,label="{44\:\ 0x0058|float r3 = r13 \/ (r11 * 2.0f)\l}"];
Node_45 [shape=record,label="{45\:\ 0x005c|if (r17 == false) goto L29\l}"];
Node_46 [shape=record,label="{46\:\ 0x005e|float r5 = r32 + r3\lr6 = r5\lr5 = r33\l}"];
Node_48 [shape=record,label="{48\:\ 0x0071|PHI: r5 r6 \l  PHI: (r5v3 'ey' float) = (r5v2 'ey' float), (r5v5 'ey' float) binds: [B:47:0x0068, B:46:0x005e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'ex' float) = (r6v1 'ex' float), (r6v4 'ex' float) binds: [B:47:0x0068, B:46:0x005e] A[DONT_GENERATE, DONT_INLINE]\l|float r7 = r31.mMinimumHorizontalTangent\lr18 = (r16 * r7) * r7\l}"];
Node_47 [shape=record,label="{47\:\ 0x0068|float r5 = r34 \- r3\lr6 = r5\lr5 = r35\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|r3 = false\l}"];
MethodNode[shape=record,label="{public android.graphics.Path androidx.transition.ArcMotion.getPath((r31v0 'this' androidx.transition.ArcMotion A[IMMUTABLE_TYPE, THIS]), (r32v0 'startX' float A[D('startX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 'startY' float A[D('startY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'endX' float A[D('endX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 'endY' float A[D('endY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:59:0x00bc \-\> B:60:0x00c0, CROSS_EDGE: B:54:0x0097 \-\> B:56:0x009e, CROSS_EDGE: B:55:0x009c \-\> B:56:0x009e, CROSS_EDGE: B:42:0x004b \-\> B:43:0x004f, CROSS_EDGE: B:48:0x0071 \-\> B:49:0x0079, CROSS_EDGE: B:47:0x0068 \-\> B:48:0x0071, CROSS_EDGE: B:36:0x002d \-\> B:37:0x002e\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.transition.PathMotion.getPath(float, float, float, float):android.graphics.Path]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_44;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_43;
Node_43 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_32;
Node_59 -> Node_60;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_48;
Node_48 -> Node_49;
Node_47 -> Node_48;
Node_36 -> Node_37;
}

