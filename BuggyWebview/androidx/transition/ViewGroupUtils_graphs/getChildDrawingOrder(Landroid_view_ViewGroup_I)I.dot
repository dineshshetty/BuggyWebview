digraph "CFG forandroidx.transition.ViewGroupUtils.getChildDrawingOrder(Landroid\/view\/ViewGroup;I)I" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000}"];
Node_27 [shape=record,label="{27\:\ 0x0004|if (android.os.Build.VERSION.SDK_INT \< 29) goto L6\l}"];
Node_28 [shape=record,label="{28\:\ 0x0006}"];
Node_29 [shape=record,label="{29\:\ 0x000a|RETURN\l|return r7.getChildDrawingOrder(r8)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b}"];
Node_31 [shape=record,label="{31\:\ 0x0010|if (androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethodFetched != false) goto L8\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|java.lang.reflect.Method r0 = androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethod\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|if (r0 == null) goto L10\l}"];
Node_43 [shape=record,label="{43\:\ 0x0051|RETURN\l|return r8\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x0050, InvocationTargetException \-\> 0x004e, blocks: (B:38:0x0031), top: B:46:0x0031 \}\lCatch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050\l}"];
Node_39 [shape=record,label="{39\:\ 0x004d|RETURN\l|return ((java.lang.Integer) r0.invoke(r7, new java.lang.Object[]\{java.lang.Integer.valueOf(r7.getChildCount()), java.lang.Integer.valueOf(r8)\})).intValue()\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_42 [shape=record,label="{42\:\ 0x0050|ExcHandler: IllegalAccessException \-\> 0x0050\l}"];
Node_40 [shape=record,label="{40\:\ 0x004e|ExcHandler: InvocationTargetException \-\> 0x004e\l}"];
Node_44 [shape=record,label="{44\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodException \-\> 0x002a, blocks: (B:32:0x0012), top: B:44:0x0012 \}\lCatch: NoSuchMethodException \-\> 0x002a\l|java.lang.reflect.Method r0 = android.view.ViewGroup.class.getDeclaredMethod(\"getChildDrawingOrder\", new java.lang.Class[]\{java.lang.Integer.TYPE, java.lang.Integer.TYPE\})     \/\/ Catch: java.lang.NoSuchMethodException \-\> L2a\landroidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethod = r0     \/\/ Catch: java.lang.NoSuchMethodException \-\> L2a\lr0.setAccessible(true)     \/\/ Catch: java.lang.NoSuchMethodException \-\> L2a\l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethodFetched = true\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|ExcHandler: NoSuchMethodException \-\> 0x002a\l}"];
MethodNode[shape=record,label="{public static int androidx.transition.ViewGroupUtils.getChildDrawingOrder((r7v0 'viewGroup' android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'i' int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0051 \-\> B:25:?, CROSS_EDGE: B:39:0x004d \-\> B:25:?, CROSS_EDGE: B:42:0x0050 \-\> B:43:0x0051, CROSS_EDGE: B:40:0x004e \-\> B:43:0x0051, CROSS_EDGE: B:46:0x0031 \-\> B:42:0x0050, CROSS_EDGE: B:46:0x0031 \-\> B:40:0x004e, CROSS_EDGE: B:35:0x002b \-\> B:36:0x002d, CROSS_EDGE: B:34:0x002a \-\> B:35:0x002b, CROSS_EDGE: B:44:0x0012 \-\> B:34:0x002a\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoSuchMethodException \-\> 0x002a, blocks: (B:32:0x0012), top: B:44:0x0012 \}, TryCatch #3 \{IllegalAccessException \-\> 0x0050, InvocationTargetException \-\> 0x004e, blocks: (B:38:0x0031), top: B:46:0x0031 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_36;
Node_31 -> Node_44[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_43;
Node_37 -> Node_46[style=dashed];
Node_43 -> Node_25;
Node_46 -> Node_38;
Node_46 -> Node_42;
Node_46 -> Node_40;
Node_38 -> Node_39;
Node_38 -> Node_47;
Node_39 -> Node_25;
Node_47 -> Node_42;
Node_47 -> Node_40;
Node_42 -> Node_43;
Node_40 -> Node_43;
Node_44 -> Node_32;
Node_44 -> Node_34;
Node_32 -> Node_35;
Node_32 -> Node_45;
Node_35 -> Node_36;
Node_45 -> Node_34;
Node_34 -> Node_35;
}

