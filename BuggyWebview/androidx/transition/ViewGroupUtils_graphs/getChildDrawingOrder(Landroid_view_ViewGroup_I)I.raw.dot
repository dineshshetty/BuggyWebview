digraph "CFG forandroidx.transition.ViewGroupUtils.getChildDrawingOrder(Landroid\/view\/ViewGroup;I)I" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:83)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:30:0x000b \l}"];
Node_28 [shape=record,label="{28\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r7 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]), (r8 I:int A[D('i' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildDrawingOrder(int):int A[MD:(int):int (c)] (LINE:84)\l}"];
Node_29 [shape=record,label="{29\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x000b|0x000b: SGET  (r0 I:boolean) =  androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethodFetched boolean  (LINE:86)\l0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0010|0x0010: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x002d \l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|0x002d: SGET  (r0 I:java.lang.reflect.Method) =  androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethod java.lang.reflect.Method  (LINE:96)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|0x002f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0051 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0051|RETURN\l|0x0051: RETURN  (r8 I:int A[D('i' int)])  (LINE:105)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0031|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_38 [shape=record,label="{38\:\ 0x0031|TRY_ENTER\lTRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x0050, InvocationTargetException \-\> 0x004e, blocks: (B:38:0x0031), top: B:46:0x0031 \}\lCatch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050\l|0x0031: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, TRY_ENTER] (LINE:98)\l0x0033: INVOKE  (r4 I:int) = (r7 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, MD:():int (c)] (LINE:99)\l0x0037: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, MD:(int):java.lang.Integer (c)]\l0x003b: APUT  (r2 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r4 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050]\l0x003d: INVOKE  (r1 I:java.lang.Integer) = (r8 I:int A[D('i' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, MD:(int):java.lang.Integer (c)]\l0x0041: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050]\l0x0043: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:java.lang.reflect.Method)\l  (r7 I:java.lang.Object A[D('viewGroup' android.view.ViewGroup)])\l  (r2 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)] (LINE:98)\l0x0047: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050]\l0x0049: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) type: VIRTUAL call: java.lang.Integer.intValue():int A[Catch: InvocationTargetException \-\> 0x004e, IllegalAccessException \-\> 0x0050, MD:():int (c), TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ 0x004d|RETURN\l|0x004d: RETURN  (r0 I:int) \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_42 [shape=record,label="{42\:\ 0x0050|ExcHandler: IllegalAccessException \-\> 0x0050\l|0x0050: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0050] (LINE:100)\l}"];
Node_40 [shape=record,label="{40\:\ 0x004e|ExcHandler: InvocationTargetException \-\> 0x004e\l|0x004e: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x004e] (LINE:101)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0012|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_32 [shape=record,label="{32\:\ 0x0012|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodException \-\> 0x002a, blocks: (B:32:0x0012), top: B:44:0x0012 \}\lCatch: NoSuchMethodException \-\> 0x002a\l|0x0012: CONST_CLASS  (r0 I:java.lang.Class\<android.view.ViewGroup\>) =  android.view.ViewGroup.class A[TRY_ENTER] (LINE:88)\l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"getChildDrawingOrder\" \l0x0016: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x002a]\l0x0018: SGET  (r6 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: NoSuchMethodException \-\> 0x002a]\l0x001a: APUT  (r5 I:??[OBJECT, ARRAY][]), (r1 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x002a]\l0x001c: SGET  (r6 I:java.lang.Class) =  java.lang.Integer.TYPE java.lang.Class A[Catch: NoSuchMethodException \-\> 0x002a]\l0x001e: APUT  (r5 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: NoSuchMethodException \-\> 0x002a]\l0x0020: INVOKE  (r0 I:java.lang.reflect.Method) = (r0 I:java.lang.Class), (r4 I:java.lang.String), (r5 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x002a, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x0024: SPUT  (r0 I:java.lang.reflect.Method) androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x002a]\l0x0026: INVOKE  (r0 I:java.lang.reflect.Method), (r3 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x002a, MD:(boolean):void (s), TRY_LEAVE] (LINE:90)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002b|0x002b: SPUT  (r3 I:boolean) androidx.transition.ViewGroupUtils.sGetChildDrawingOrderMethodFetched boolean  (LINE:94)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x002a|ExcHandler: NoSuchMethodException \-\> 0x002a\l|0x002a: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x002a] (LINE:91)\l}"];
MethodNode[shape=record,label="{public static int androidx.transition.ViewGroupUtils.getChildDrawingOrder((r7 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('i' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0051 \-\> B:25:?, CROSS_EDGE: B:39:0x004d \-\> B:25:?, CROSS_EDGE: B:42:0x0050 \-\> B:43:0x0051, CROSS_EDGE: B:40:0x004e \-\> B:43:0x0051, CROSS_EDGE: B:46:0x0031 \-\> B:42:0x0050, CROSS_EDGE: B:46:0x0031 \-\> B:40:0x004e, CROSS_EDGE: B:35:0x002b \-\> B:36:0x002d, CROSS_EDGE: B:34:0x002a \-\> B:35:0x002b, CROSS_EDGE: B:44:0x0012 \-\> B:34:0x002a\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0051: r7 'viewGroup' Landroid\/view\/ViewGroup;\l  \-1 \-0x0051: r8 'i' I\lTryCatch #0 \{NoSuchMethodException \-\> 0x002a, blocks: (B:32:0x0012), top: B:44:0x0012 \}, TryCatch #3 \{IllegalAccessException \-\> 0x0050, InvocationTargetException \-\> 0x004e, blocks: (B:38:0x0031), top: B:46:0x0031 \}\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_36;
Node_31 -> Node_44[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_43;
Node_37 -> Node_46[style=dashed];
Node_43 -> Node_25;
Node_46 -> Node_38;
Node_46 -> Node_42;
Node_46 -> Node_40;
Node_38 -> Node_39;
Node_38 -> Node_47;
Node_39 -> Node_25;
Node_47 -> Node_42;
Node_47 -> Node_40;
Node_42 -> Node_43;
Node_40 -> Node_43;
Node_44 -> Node_32;
Node_44 -> Node_34;
Node_32 -> Node_35;
Node_32 -> Node_45;
Node_35 -> Node_36;
Node_45 -> Node_34;
Node_34 -> Node_35;
}

