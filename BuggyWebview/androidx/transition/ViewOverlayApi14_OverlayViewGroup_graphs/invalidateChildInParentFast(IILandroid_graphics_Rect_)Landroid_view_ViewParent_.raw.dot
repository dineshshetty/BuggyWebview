digraph "CFG forandroidx.transition.ViewOverlayApi14.OverlayViewGroup.invalidateChildInParentFast(IILandroid\/graphics\/Rect;)Landroid\/view\/ViewParent;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:android.view.ViewGroup) = (r7 I:androidx.transition.ViewOverlayApi14$OverlayViewGroup) androidx.transition.ViewOverlayApi14.OverlayViewGroup.mHostView android.view.ViewGroup  (LINE:282)\l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:??[OBJECT, ARRAY]) android.view.ViewGroup \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x0006|0x0006: SGET  (r0 I:java.lang.reflect.Method) =  androidx.transition.ViewOverlayApi14.OverlayViewGroup.sInvalidateChildInParentFastMethod java.lang.reflect.Method \l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:? \l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:284)\l}"];
Node_36 [shape=record,label="{36\:\ 0x000b|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x0031, InvocationTargetException \-\> 0x002c, blocks: (B:28:0x000b), top: B:36:0x000b \}\lCatch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031\l|0x000b: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031, TRY_ENTER]\l0x000d: INVOKE  (r7 I:androidx.transition.ViewOverlayApi14$OverlayViewGroup), (r1 I:int[] A[D('offset' int[])]) type: DIRECT call: androidx.transition.ViewOverlayApi14.OverlayViewGroup.getOffset(int[]):void A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031, MD:(int[]):void (m)] (LINE:285)\l0x0010: SGET  (r2 I:java.lang.reflect.Method) =  androidx.transition.ViewOverlayApi14.OverlayViewGroup.sInvalidateChildInParentFastMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031] (LINE:286)\l0x0012: IGET  (r3 I:android.view.ViewGroup) = (r7 I:androidx.transition.ViewOverlayApi14$OverlayViewGroup) androidx.transition.ViewOverlayApi14.OverlayViewGroup.mHostView android.view.ViewGroup A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031]\l0x0014: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0015: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031]\l0x0017: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: INVOKE  (r6 I:java.lang.Integer) = (r8 I:int A[D('left' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031, MD:(int):java.lang.Integer (c)]\l0x001c: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031]\l0x001e: CONST  (r5 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001f: INVOKE  (r6 I:java.lang.Integer) = (r9 I:int A[D('top' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031, MD:(int):java.lang.Integer (c)]\l0x0023: APUT  (r4 I:??[OBJECT, ARRAY][]), (r5 I:??[int, short, byte, char]), (r6 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031]\l0x0025: APUT  \l  (r4 I:??[OBJECT, ARRAY][])\l  (r0 I:??[int, short, byte, char])\l  (r10 I:??[OBJECT, ARRAY] A[D('dirty' android.graphics.Rect)])\l A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031]\l0x0027: INVOKE  (r2 I:java.lang.reflect.Method), (r3 I:java.lang.Object), (r4 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x002c, IllegalAccessException \-\> 0x0031, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:293)\l0x0036: RETURN  (r0 I:android.view.ViewParent) A[SYNTHETIC]\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|ExcHandler: IllegalAccessException \-\> 0x0031\l|0x0031: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0031] (LINE:287)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0032|0x0032: INVOKE  (r0 I:java.lang.IllegalAccessException A[D('e' java.lang.IllegalAccessException)]) type: VIRTUAL call: java.lang.IllegalAccessException.printStackTrace():void A[MD:():void (s)] (LINE:288)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0035|RETURN\lORIG_RETURN\l|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:293)\l0x0036: RETURN  (r0 I:android.view.ViewParent) \l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|ExcHandler: InvocationTargetException \-\> 0x002c\l|0x002c: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x002c] (LINE:289)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002d|0x002d: INVOKE  (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.printStackTrace():void A[MD:():void (s)] (LINE:290)\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:293)\l0x0036: RETURN  (r0 I:android.view.ViewParent) A[SYNTHETIC]\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:293)\l0x0036: RETURN  (r0 I:android.view.ViewParent) A[SYNTHETIC]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('e' java.lang.IllegalAccessException)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:293)\l0x0036: RETURN  (r0 I:android.view.ViewParent) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{protected android.view.ViewParent androidx.transition.ViewOverlayApi14.OverlayViewGroup.invalidateChildInParentFast((r7 'this' I:androidx.transition.ViewOverlayApi14$OverlayViewGroup A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.graphics.Rect A[D('dirty' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0032 \-\> B:34:0x0035, CROSS_EDGE: B:31:0x002d \-\> B:34:0x0035, CROSS_EDGE: B:36:0x000b \-\> B:32:0x0031, CROSS_EDGE: B:36:0x000b \-\> B:30:0x002c, CROSS_EDGE: B:26:0x0008 \-\> B:34:0x0035, CROSS_EDGE: B:24:0x0004 \-\> B:34:0x0035\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x002b: r1 'offset' [I\l  0x002d\-0x0031: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0032\-0x0035: r0 'e' Ljava\/lang\/IllegalAccessException;\l  \-1 \-0x0036: r8 'left' I\l  \-1 \-0x0036: r9 'top' I\l  \-1 \-0x0036: r10 'dirty' Landroid\/graphics\/Rect;\lTryCatch #2 \{IllegalAccessException \-\> 0x0031, InvocationTargetException \-\> 0x002c, blocks: (B:28:0x000b), top: B:36:0x000b \}\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_38;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_39;
Node_27 -> Node_36;
Node_36 -> Node_28;
Node_36 -> Node_32;
Node_36 -> Node_30;
Node_28 -> Node_37;
Node_28 -> Node_41;
Node_37 -> Node_32;
Node_37 -> Node_30;
Node_41 -> Node_22;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_22;
Node_30 -> Node_31;
Node_31 -> Node_40;
Node_40 -> Node_22;
Node_39 -> Node_22;
Node_38 -> Node_22;
}

