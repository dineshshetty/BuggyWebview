digraph "CFG forandroidx.transition.TranslationAnimationCreator.createAnimation(Landroid\/view\/View;Landroidx\/transition\/TransitionValues;IIFFFFLandroid\/animation\/TimeInterpolator;Landroidx\/transition\/Transition;)Landroid\/animation\/Animator;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|float r9 = r17.getTranslationX()\lfloat r10 = r17.getTranslationY()\lint[] r11 = (int[]) r18.view.getTag(androidx.transition.C0499R.C0502id.transition_position)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|if (r11 == null) goto L12\l}"];
Node_18 [shape=record,label="{18\:\ 0x001d|float r2 = ((float) (r11[0] \- r19)) + r9\lr12 = r2\lr13 = ((float) (r11[1] \- r20)) + r10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|PHI: r12 r13 \l  PHI: (r12v1 'startX' float) = (r12v0 'startX' float), (r12v2 'startX' float) binds: [B:19:0x002c, B:18:0x001d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'startY' float) = (r13v0 'startY' float), (r13v2 'startY' float) binds: [B:19:0x002c, B:18:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r19 + java.lang.Math.round(r12 \- r9)\lint r15 = r20 + java.lang.Math.round(r13 \- r10)\lr17.setTranslationX(r12)\lr17.setTranslationY(r13)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|if ((r12 \> r23 ? 1 : (r12 == r23 ? 0 : \-1)) != 0) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a}"];
Node_23 [shape=record,label="{23\:\ 0x004c|if ((r13 \> r24 ? 1 : (r13 == r24 ? 0 : \-1)) != 0) goto L10\l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|RETURN\l|return null\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0050|android.animation.ObjectAnimator r6 = android.animation.ObjectAnimator.ofPropertyValuesHolder(r17, new android.animation.PropertyValuesHolder[]\{android.animation.PropertyValuesHolder.ofFloat(android.view.View.TRANSLATION_X, new float[]\{r12, r23\}), android.animation.PropertyValuesHolder.ofFloat(android.view.View.TRANSLATION_Y, new float[]\{r13, r24\})\})\landroidx.transition.TranslationAnimationCreator$TransitionPositionListener r16 = new androidx.transition.TranslationAnimationCreator.TransitionPositionListener(r17, r18.view, r14, r15, r9, r10)\lr26.addListener(r16)\lr6.addListener(r16)\landroidx.transition.AnimatorUtils.addPauseListener(r6, r16)\lr6.setInterpolator(r25)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0093|RETURN\l|return r6\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|r12 = r21\lr13 = r22\l}"];
MethodNode[shape=record,label="{public static android.animation.Animator androidx.transition.TranslationAnimationCreator.createAnimation((r17v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'values' androidx.transition.TransitionValues A[D('values' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'viewPosX' int A[D('viewPosX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'viewPosY' int A[D('viewPosY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'startX' float A[D('startX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'startY' float A[D('startY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'endX' float A[D('endX' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'endY' float A[D('endY' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'interpolator' android.animation.TimeInterpolator A[D('interpolator' android.animation.TimeInterpolator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'transition' androidx.transition.Transition A[D('transition' androidx.transition.Transition), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0093 \-\> B:15:?, CROSS_EDGE: B:21:0x0048 \-\> B:26:0x0050, CROSS_EDGE: B:19:0x002c \-\> B:20:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
Node_19 -> Node_20;
}

