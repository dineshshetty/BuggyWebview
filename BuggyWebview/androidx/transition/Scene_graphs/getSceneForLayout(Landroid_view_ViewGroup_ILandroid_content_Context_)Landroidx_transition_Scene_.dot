digraph "CFG forandroidx.transition.Scene.getSceneForLayout(Landroid\/view\/ViewGroup;ILandroid\/content\/Context;)Landroidx\/transition\/Scene;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|android.util.SparseArray r0 = (android.util.SparseArray) r3.getTag(androidx.transition.C0499R.C0502id.transition_scene_layoutid_cache)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0008|if (r0 != null) goto L4\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|r0 = new android.util.SparseArray\<\>()\lr3.setTag(androidx.transition.C0499R.C0502id.transition_scene_layoutid_cache, r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 'scenes' android.util.SparseArray\<androidx.transition.Scene\>) = (r0v2 'scenes' android.util.SparseArray\<androidx.transition.Scene\>), (r0v4 'scenes' android.util.SparseArray\<androidx.transition.Scene\>) binds: [B:13:0x0008, B:14:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|androidx.transition.Scene r1 = r0.get(r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|if (r1 == null) goto L8\l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|RETURN\l|return r1\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x001e|androidx.transition.Scene r2 = new androidx.transition.Scene(r3, r4, r5)\lr0.put(r4, r2)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0027|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static androidx.transition.Scene androidx.transition.Scene.getSceneForLayout((r3v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'layoutId' int A[D('layoutId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'context' android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0027 \-\> B:11:?, CROSS_EDGE: B:13:0x0008 \-\> B:15:0x0015\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

