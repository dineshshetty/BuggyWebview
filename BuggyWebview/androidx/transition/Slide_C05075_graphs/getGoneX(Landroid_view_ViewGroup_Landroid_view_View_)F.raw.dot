digraph "CFG forandroidx.transition.Slide.5.getGoneX(Landroid\/view\/ViewGroup;Landroid\/view\/View;)F" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:android.view.View A[D('sceneRoot' android.view.ViewGroup)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:132)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0008 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0017  (LINE:135)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|0x000c: INVOKE  (r1 I:float) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationX():float A[MD:():float (c)] (LINE:136)\l0x0010: INVOKE  (r2 I:int) = (r4 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getWidth():int A[MD:():int (c)]\l0x0014: CAST (r2 I:float) = (float) (r2 I:int) \l0x0015: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0021: RETURN  (r1 I:float A[D('x' float)]) A[SYNTHETIC] (LINE:140)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: INVOKE  (r1 I:float) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationX():float A[MD:():float (c)] (LINE:138)\l0x001b: INVOKE  (r2 I:int) = (r4 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getWidth():int A[MD:():int (c)]\l0x001f: CAST (r2 I:float) = (float) (r2 I:int) \l0x0020: ARITH  (r1 I:float) = (r1 I:float) + (r2 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|RETURN\lORIG_RETURN\l|0x0021: RETURN  (r1 I:float A[D('x' float)])  (LINE:140)\l}"];
MethodNode[shape=record,label="{public float androidx.transition.Slide.5.getGoneX((r3 'this' I:androidx.transition.Slide$5 A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0017 \-\> B:22:0x0021, CROSS_EDGE: B:15:0x0005 \-\> B:18:0x0009\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x0017: r1 'x' F\l  0x000a\-0x0021: r0 'isRtl' Z\l  0x0021\-0x0021: r1 'x' F\l  \-1 \-0x0021: r4 'sceneRoot' Landroid\/view\/ViewGroup;\l  \-1 \-0x0021: r5 'view' Landroid\/view\/View;\lMETHOD_OVERRIDE: [androidx.transition.Slide.CalculateSlide.getGoneX(android.view.ViewGroup, android.view.View):float]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_23;
Node_23 -> Node_13;
Node_21 -> Node_22;
Node_22 -> Node_13;
}

