digraph "CFG forandroidx.transition.Transition.resume(Landroid\/view\/View;)V" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: IGET  (r0 I:boolean) = (r7 I:androidx.transition.Transition) androidx.transition.Transition.mPaused boolean  (LINE:1751)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:? \l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: IGET  (r0 I:boolean) = (r7 I:androidx.transition.Transition) androidx.transition.Transition.mEnded boolean  (LINE:1752)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x005b \l}"];
Node_35 [shape=record,label="{35\:\ 0x0008|0x0008: INVOKE  (r0 I:androidx.collection.ArrayMap) =  type: STATIC call: androidx.transition.Transition.getRunningAnimators():androidx.collection.ArrayMap A[MD:():androidx.collection.ArrayMap\<android.animation.Animator, androidx.transition.Transition$AnimationInfo\> (m)] (LINE:1753)\l0x000c: INVOKE  (r1 I:int) = \l  (r0 I:androidx.collection.ArrayMap A[D('runningAnimators' androidx.collection.ArrayMap\<android.animation.Animator, androidx.transition.Transition$AnimationInfo\>)])\l type: VIRTUAL call: androidx.collection.ArrayMap.size():int A[MD:():int (m)] (LINE:1754)\l0x0010: INVOKE  (r2 I:androidx.transition.WindowIdImpl) = (r8 I:android.view.View A[D('sceneRoot' android.view.View)]) type: STATIC call: androidx.transition.ViewUtils.getWindowId(android.view.View):androidx.transition.WindowIdImpl A[MD:(android.view.View):androidx.transition.WindowIdImpl (m)] (LINE:1755)\l0x0014: ARITH  (r3 I:int) = (r1 I:int A[D('numOldAnims' int)]) + (\-1 int)  (LINE:1756)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|LOOP_START\lLOOP:0: B:36:0x0016\-\>B:42:0x0033\l|0x0016: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:52:0x0036 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0018|0x0018: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:androidx.collection.ArrayMap A[D('runningAnimators' androidx.collection.ArrayMap\<android.animation.Animator, androidx.transition.Transition$AnimationInfo\>)])\l  (r3 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.ArrayMap.valueAt(int):java.lang.Object A[MD:(int):V (m)] (LINE:1757)\l0x001c: CHECK_CAST (r4 I:androidx.transition.Transition$AnimationInfo) = (androidx.transition.Transition$AnimationInfo) (r4 I:??[OBJECT, ARRAY]) \l0x001e: IGET  (r5 I:android.view.View) = (r4 I:androidx.transition.Transition$AnimationInfo A[D('info' androidx.transition.Transition$AnimationInfo)]) androidx.transition.Transition.AnimationInfo.mView android.view.View  (LINE:1758)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0020|0x0020: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0033 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0022|0x0022: IGET  (r5 I:androidx.transition.WindowIdImpl) = (r4 I:androidx.transition.Transition$AnimationInfo A[D('info' androidx.transition.Transition$AnimationInfo)]) androidx.transition.Transition.AnimationInfo.mWindowId androidx.transition.WindowIdImpl \l0x0024: INVOKE  (r5 I:boolean) = (r2 I:java.lang.Object A[D('windowId' androidx.transition.WindowIdImpl)]), (r5 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0028|0x0028: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0033 \l}"];
Node_41 [shape=record,label="{41\:\ 0x002a|0x002a: INVOKE  (r5 I:java.lang.Object) = \l  (r0 I:androidx.collection.ArrayMap A[D('runningAnimators' androidx.collection.ArrayMap\<android.animation.Animator, androidx.transition.Transition$AnimationInfo\>)])\l  (r3 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.collection.ArrayMap.keyAt(int):java.lang.Object A[MD:(int):K (m)] (LINE:1759)\l0x002e: CHECK_CAST (r5 I:android.animation.Animator) = (android.animation.Animator) (r5 I:??[OBJECT, ARRAY]) \l0x0030: INVOKE  (r5 I:android.animation.Animator A[D('anim' android.animation.Animator)]) type: STATIC call: androidx.transition.AnimatorUtils.resume(android.animation.Animator):void A[MD:(android.animation.Animator):void (m)] (LINE:1760)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0033|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0033|LOOP_END\lLOOP:0: B:36:0x0016\-\>B:42:0x0033\l|0x0033: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (\-1 int)  (LINE:1756)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0033|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0033|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0036|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0036|0x0036: IGET  (r3 I:java.util.ArrayList\<androidx.transition.Transition$TransitionListener\> A[D('i' int)]) = (r7 I:androidx.transition.Transition) androidx.transition.Transition.mListeners java.util.ArrayList  (LINE:1763)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0038|0x0038: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x005b \l}"];
Node_45 [shape=record,label="{45\:\ 0x003a|0x003a: INVOKE  (r3 I:int) = (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x003e|0x003e: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:50:0x005b \l}"];
Node_47 [shape=record,label="{47\:\ 0x0040|0x0040: IGET  (r3 I:java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>) = (r7 I:androidx.transition.Transition) androidx.transition.Transition.mListeners java.util.ArrayList  (LINE:1764)\l0x0042: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clone():java.lang.Object A[MD:():java.lang.Object (c)] (LINE:1765)\l0x0046: CHECK_CAST (r3 I:java.util.ArrayList) = (java.util.ArrayList) (r3 I:??[OBJECT, ARRAY]) \l0x0048: INVOKE  (r4 I:int) = (r3 I:java.util.ArrayList A[D('tmpListeners' java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:1766)\l0x004c: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1767)\l}"];
Node_48 [shape=record,label="{48\:\ 0x004d|LOOP_START\lLOOP:1: B:48:0x004d\-\>B:49:0x004f\l|0x004d: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('numListeners' int)])  \-\> B:56:0x005b \l}"];
Node_49 [shape=record,label="{49\:\ 0x004f|LOOP_END\lLOOP:1: B:48:0x004d\-\>B:49:0x004f\l|0x004f: INVOKE  (r6 I:java.lang.Object) = \l  (r3 I:java.util.ArrayList A[D('tmpListeners' java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>)])\l  (r5 I:int A[D('i' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:1768)\l0x0053: CHECK_CAST (r6 I:androidx.transition.Transition$TransitionListener) = (androidx.transition.Transition$TransitionListener) (r6 I:??[OBJECT, ARRAY]) \l0x0055: INVOKE  (r6 I:androidx.transition.Transition$TransitionListener), (r7 I:androidx.transition.Transition) type: INTERFACE call: androidx.transition.Transition.TransitionListener.onTransitionResume(androidx.transition.Transition):void A[MD:(androidx.transition.Transition):void (m)]\l0x0058: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:1767)\l}"];
Node_56 [shape=record,label="{56\:\ 0x005b|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x005b|0x005b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('runningAnimators' androidx.collection.ArrayMap\<android.animation.Animator, androidx.transition.Transition$AnimationInfo\>)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1772)\l0x005c: IPUT  (r0 I:boolean), (r7 I:androidx.transition.Transition) androidx.transition.Transition.mPaused boolean \l}"];
Node_51 [shape=record,label="{51\:\ 0x005e|RETURN\lORIG_RETURN\l|0x005e: RETURN    (LINE:1774)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN   A[SYNTHETIC] (LINE:1774)\l}"];
MethodNode[shape=record,label="{public void androidx.transition.Transition.resume((r7 'this' I:androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r8 I:android.view.View A[D('sceneRoot' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:42:0x0033 \-\> B:36:0x0016, CROSS_EDGE: B:40:0x0028 \-\> B:42:0x0033, CROSS_EDGE: B:38:0x0020 \-\> B:42:0x0033, BACK_EDGE: B:49:0x004f \-\> B:48:0x004d, CROSS_EDGE: B:46:0x003e \-\> B:50:0x005b, CROSS_EDGE: B:44:0x0038 \-\> B:50:0x005b, CROSS_EDGE: B:34:0x0006 \-\> B:50:0x005b, CROSS_EDGE: B:32:0x0002 \-\> B:51:0x005e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001e\-0x0033: r4 'info' Landroidx\/transition\/Transition$AnimationInfo;\l  0x0030\-0x0033: r5 'anim' Landroid\/animation\/Animator;\l  0x0016\-0x0036: r3 'i' I\l  0x000c\-0x005b: r0 'runningAnimators' Landroidx\/collection\/ArrayMap;, signature: Landroidx\/collection\/ArrayMap\<Landroid\/animation\/Animator;Landroidx\/transition\/Transition$AnimationInfo;\>;\l  0x0010\-0x005b: r1 'numOldAnims' I\l  0x0014\-0x005b: r2 'windowId' Landroidx\/transition\/WindowIdImpl;\l  0x0048\-0x005b: r3 'tmpListeners' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/transition\/Transition$TransitionListener;\>;\l  0x004c\-0x005b: r4 'numListeners' I\l  0x004d\-0x005b: r5 'i' I\l  \-1 \-0x005e: r8 'sceneRoot' Landroid\/view\/View;\lMETHOD_OVERRIDE: [androidx.transition.Transition.resume(android.view.View):void]\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_57;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_50;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_52;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_54;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_55;
Node_41 -> Node_53;
Node_53 -> Node_42;
Node_42 -> Node_36;
Node_55 -> Node_42;
Node_54 -> Node_42;
Node_52 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_50;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_50;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_56;
Node_49 -> Node_48;
Node_56 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_30;
Node_57 -> Node_30;
}

