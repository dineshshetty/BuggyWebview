digraph "CFG forandroidx.transition.Transition.cancel()V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<android.animation.Animator\>) = (r5 I:androidx.transition.Transition) androidx.transition.Transition.mCurrentAnimators java.util.ArrayList  (LINE:2017)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: ARITH  (r1 I:int) = (r0 I:int A[D('numAnimators' int)]) + (\-1 int)  (LINE:2018)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|LOOP_START\lLOOP:0: B:20:0x0008\-\>B:21:0x000a\l|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:30:0x0018 \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|LOOP_END\lLOOP:0: B:20:0x0008\-\>B:21:0x000a\l|0x000a: IGET  (r2 I:java.util.ArrayList\<android.animation.Animator\>) = (r5 I:androidx.transition.Transition) androidx.transition.Transition.mCurrentAnimators java.util.ArrayList  (LINE:2019)\l0x000c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r1 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0010: CHECK_CAST (r2 I:android.animation.Animator) = (android.animation.Animator) (r2 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:android.animation.Animator A[D('animator' android.animation.Animator)]) type: VIRTUAL call: android.animation.Animator.cancel():void A[MD:():void (c)] (LINE:2020)\l0x0015: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (\-1 int)  (LINE:2018)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: IGET  (r1 I:java.util.ArrayList\<androidx.transition.Transition$TransitionListener\> A[D('i' int)]) = (r5 I:androidx.transition.Transition) androidx.transition.Transition.mListeners java.util.ArrayList  (LINE:2022)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003d \l}"];
Node_24 [shape=record,label="{24\:\ 0x001c|0x001c: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:32:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: IGET  (r1 I:java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>) = (r5 I:androidx.transition.Transition) androidx.transition.Transition.mListeners java.util.ArrayList  (LINE:2023)\l0x0024: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.clone():java.lang.Object A[MD:():java.lang.Object (c)] (LINE:2024)\l0x0028: CHECK_CAST (r1 I:java.util.ArrayList) = (java.util.ArrayList) (r1 I:??[OBJECT, ARRAY]) \l0x002a: INVOKE  (r2 I:int) = (r1 I:java.util.ArrayList A[D('tmpListeners' java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:2025)\l0x002e: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2026)\l}"];
Node_27 [shape=record,label="{27\:\ 0x002f|LOOP_START\lLOOP:1: B:27:0x002f\-\>B:28:0x0031\l|0x002f: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('numListeners' int)])  \-\> B:31:0x003d \l}"];
Node_28 [shape=record,label="{28\:\ 0x0031|LOOP_END\lLOOP:1: B:27:0x002f\-\>B:28:0x0031\l|0x0031: INVOKE  (r4 I:java.lang.Object) = \l  (r1 I:java.util.ArrayList A[D('tmpListeners' java.util.ArrayList\<androidx.transition.Transition$TransitionListener\>)])\l  (r3 I:int A[D('i' int)])\l type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:2027)\l0x0035: CHECK_CAST (r4 I:androidx.transition.Transition$TransitionListener) = (androidx.transition.Transition$TransitionListener) (r4 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r4 I:androidx.transition.Transition$TransitionListener), (r5 I:androidx.transition.Transition) type: INTERFACE call: androidx.transition.Transition.TransitionListener.onTransitionCancel(androidx.transition.Transition):void A[MD:(androidx.transition.Transition):void (m)]\l0x003a: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:2026)\l}"];
Node_31 [shape=record,label="{31\:\ 0x003d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:2030)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|0x003d: RETURN   A[SYNTHETIC] (LINE:2030)\l}"];
Node_29 [shape=record,label="{29\:\ 0x003d|RETURN\lORIG_RETURN\l|0x003d: RETURN    (LINE:2030)\l}"];
MethodNode[shape=record,label="{public void androidx.transition.Transition.cancel((r5 'this' I:androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x000a \-\> B:20:0x0008, BACK_EDGE: B:28:0x0031 \-\> B:27:0x002f, CROSS_EDGE: B:25:0x0020 \-\> B:29:0x003d, CROSS_EDGE: B:23:0x001a \-\> B:29:0x003d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0015: r2 'animator' Landroid\/animation\/Animator;\l  0x0008\-0x0018: r1 'i' I\l  0x002a\-0x003d: r1 'tmpListeners' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/transition\/Transition$TransitionListener;\>;\l  0x002e\-0x003d: r2 'numListeners' I\l  0x002f\-0x003d: r3 'i' I\l  0x0006\-0x003d: r0 'numAnimators' I\lMETHOD_OVERRIDE: [androidx.transition.Transition.cancel():void]\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_20;
Node_30 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_27;
Node_31 -> Node_33;
Node_33 -> Node_18;
Node_32 -> Node_18;
Node_29 -> Node_18;
}

