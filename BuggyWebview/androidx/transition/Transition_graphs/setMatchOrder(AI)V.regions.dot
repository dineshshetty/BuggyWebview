digraph "CFG forandroidx.transition.Transition.setMatchOrder([I)V" {
subgraph cluster_Region_504087192 {
label = "R(1:(2:(2:22|23)|(3:4|(2:7|(2:(1:18)|(1:(2:(1:14)|(1:11)))))|20)))";
node [shape=record,color=blue];
subgraph cluster_Region_1109872478 {
label = "R(2:(2:22|23)|(3:4|(2:7|(2:(1:18)|(1:(2:(1:14)|(1:11)))))|20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1083391759 {
label = "IF [B:27:0x0000, B:29:0x0003] THEN: R(2:22|23) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0000|if (r5 == null) goto L22\l}"];
Node_29 [shape=record,label="{29\:\ 0x0003|ADDED_TO_REGION\l|if (r5.length == 0) goto L22\l}"];
subgraph cluster_Region_1964070010 {
label = "R(2:22|23)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0034|r4.mMatchOrder = androidx.transition.Transition.DEFAULT_MATCH_ORDER\l}"];
Node_45 [shape=record,label="{45\:\ 0x0038|RETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_580150487 {
label = "R(3:4|(2:7|(2:(1:18)|(1:(2:(1:14)|(1:11)))))|20)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0006|int r0 = 0\l}"];
subgraph cluster_LoopRegion_713989891 {
label = "LOOP:0: (2:7|(2:(1:18)|(1:(2:(1:14)|(1:11)))))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0008|if (r0 \< r5.length) goto L7\l}"];
subgraph cluster_Region_1203474448 {
label = "R(2:7|(2:(1:18)|(1:(2:(1:14)|(1:11)))))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x000a|int r1 = r5[r0]\l}"];
subgraph cluster_Region_902711106 {
label = "R(2:(1:18)|(1:(2:(1:14)|(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_413142953 {
label = "IF [B:35:0x0010] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0010|if (isValidMatch(r1) == false) goto L16\l}"];
subgraph cluster_Region_1307292442 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x002a|throw new java.lang.IllegalArgumentException(\"matches contains invalid value\")\l}"];
}
}
subgraph cluster_Region_341411567 {
label = "R(1:(2:(1:14)|(1:11)))";
node [shape=record,color=blue];
subgraph cluster_Region_1796518554 {
label = "R(2:(1:14)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1174988524 {
label = "IF [B:37:0x0016] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0016|if (alreadyContains(r5, r0) != false) goto L12\l}"];
subgraph cluster_Region_740756717 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0022|throw new java.lang.IllegalArgumentException(\"matches contains a duplicate value\")\l}"];
}
}
subgraph cluster_Region_2039986833 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0018|LOOP_END\lLOOP:0: B:32:0x0007\-\>B:38:0x0018\l|r0++\l}"];
}
}
}
}
}
}
Node_43 [shape=record,label="{43\:\ 0x002b|r4.mMatchOrder = (int[]) r5.clone()\l}"];
}
}
}
Node_25 [shape=record,color=red,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0002}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0007|LOOP_START\lLOOP:0: B:32:0x0007\-\>B:38:0x0018\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v6 'i' int) binds: [B:31:0x0006, B:38:0x0018] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0012}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x001b|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x001b}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0023|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0023}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x002b|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.transition.Transition.setMatchOrder((r4v0 'this' androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r5v0 'matches' int[] A[D('matches' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x0018 \-\> B:32:0x0007, CROSS_EDGE: B:42:0x002a \-\> B:26:?, CROSS_EDGE: B:45:0x0038 \-\> B:26:?, CROSS_EDGE: B:44:0x0034 \-\> B:45:0x0038, CROSS_EDGE: B:27:0x0000 \-\> B:44:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_25;Node_27 -> Node_28[style=dashed];
Node_27 -> Node_44;
Node_29 -> Node_31[style=dashed];
Node_29 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_26;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_48[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_46;
Node_42 -> Node_26;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_47;
Node_40 -> Node_26;
Node_38 -> Node_32;
Node_43 -> Node_49;
Node_25 -> Node_27;
Node_28 -> Node_29;
Node_32 -> Node_33;
Node_36 -> Node_37;
Node_47 -> Node_39;
Node_39 -> Node_40;
Node_46 -> Node_41;
Node_41 -> Node_42;
Node_48 -> Node_43;
Node_49 -> Node_26;
}

