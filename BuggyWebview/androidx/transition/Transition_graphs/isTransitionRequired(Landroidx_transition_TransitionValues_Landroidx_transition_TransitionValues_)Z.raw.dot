digraph "CFG forandroidx.transition.Transition.isTransitionRequired(Landroidx\/transition\/TransitionValues;Landroidx\/transition\/TransitionValues;)Z" {
Node_31 [shape=record,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,label="{33\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1840)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0001|0x0001: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startValues' androidx.transition.TransitionValues)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x003c  (LINE:1843)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0003|0x0003: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('endValues' androidx.transition.TransitionValues)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:? \l}"];
Node_36 [shape=record,label="{36\:\ 0x0005|0x0005: INVOKE  (r1 I:java.lang.String[]) = (r6 I:androidx.transition.Transition) type: VIRTUAL call: androidx.transition.Transition.getTransitionProperties():java.lang.String[] A[MD:():java.lang.String[] (m)] (LINE:1844)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0009|0x0009: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('properties' java.lang.String[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x001d  (LINE:1845)\l}"];
Node_38 [shape=record,label="{38\:\ 0x000b|0x000b: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[] A[D('properties' java.lang.String[])])  (LINE:1846)\l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x000d|LOOP_START\lLOOP:0: B:39:0x000d\-\>B:43:0x0019\l|0x000d: IF  (r3 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:54:0x003c \l}"];
Node_40 [shape=record,label="{40\:\ 0x000f|0x000f: AGET  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][] A[D('properties' java.lang.String[])]), (r3 I:??[int, short, byte, char]) \l0x0011: INVOKE  (r5 I:boolean) = \l  (r7 I:androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues)])\l  (r8 I:androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues)])\l  (r4 I:java.lang.String A[D('property' java.lang.String)])\l type: STATIC call: androidx.transition.Transition.isValueChanged(androidx.transition.TransitionValues, androidx.transition.TransitionValues, java.lang.String):boolean A[MD:(androidx.transition.TransitionValues, androidx.transition.TransitionValues, java.lang.String):boolean (m)] (LINE:1847)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0015|0x0015: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0019 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0019|LOOP_END\lLOOP:0: B:39:0x000d\-\>B:43:0x0019\l|0x0019: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:1846)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0017|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0017|SYNTHETIC\lRETURN\l|0x0017: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('valuesChanged' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1848)\l0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)]) A[SYNTHETIC] (LINE:1861)\l}"];
Node_32 [shape=record,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,label="{54\:\ 0x003c|SYNTHETIC\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\l|0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)]) A[SYNTHETIC] (LINE:1861)\l}"];
Node_45 [shape=record,label="{45\:\ 0x001d|0x001d: IGET  (r2 I:java.util.Map\<java.lang.String, java.lang.Object\>) = (r7 I:androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues)]) androidx.transition.TransitionValues.values java.util.Map  (LINE:1853)\l0x001f: INVOKE  (r2 I:java.util.Set) = (r2 I:java.util.Map) type: INTERFACE call: java.util.Map.keySet():java.util.Set A[MD:():java.util.Set\<K\> (c)]\l0x0023: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0027|LOOP_START\lLOOP:1: B:46:0x0027\-\>B:49:0x0037\l|0x0027: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_47 [shape=record,label="{47\:\ 0x002b|0x002b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x003c \l}"];
Node_48 [shape=record,label="{48\:\ 0x002d|0x002d: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0031: CHECK_CAST (r3 I:java.lang.String) = (java.lang.String) (r3 I:??[OBJECT, ARRAY]) \l0x0033: INVOKE  (r4 I:boolean) = \l  (r7 I:androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues)])\l  (r8 I:androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues)])\l  (r3 I:java.lang.String A[D('key' java.lang.String)])\l type: STATIC call: androidx.transition.Transition.isValueChanged(androidx.transition.TransitionValues, androidx.transition.TransitionValues, java.lang.String):boolean A[MD:(androidx.transition.TransitionValues, androidx.transition.TransitionValues, java.lang.String):boolean (m)] (LINE:1854)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0037|LOOP_END\lLOOP:1: B:46:0x0027\-\>B:49:0x0037\l|0x0037: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0027 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0039|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0039|SYNTHETIC\lRETURN\l|0x0039: CONST  (r0 I:??[boolean, int, float, short, byte, char] A[D('valuesChanged' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1855)\l0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)]) A[SYNTHETIC] (LINE:1861)\l}"];
Node_56 [shape=record,label="{56\:\ 0x003c|SYNTHETIC\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)]) A[SYNTHETIC] (LINE:1861)\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)]) A[SYNTHETIC] (LINE:1861)\l}"];
Node_52 [shape=record,label="{52\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: RETURN  (r0 I:boolean A[D('valuesChanged' boolean)])  (LINE:1861)\l}"];
MethodNode[shape=record,label="{public boolean androidx.transition.Transition.isTransitionRequired((r6 'this' I:androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r7 I:androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x0019 \-\> B:39:0x000d, CROSS_EDGE: B:39:0x000d \-\> B:52:0x003c, CROSS_EDGE: B:50:0x0039 \-\> B:52:0x003c, BACK_EDGE: B:49:0x0037 \-\> B:46:0x0027, CROSS_EDGE: B:47:0x002b \-\> B:52:0x003c, CROSS_EDGE: B:35:0x0003 \-\> B:52:0x003c, CROSS_EDGE: B:34:0x0001 \-\> B:52:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0019: r4 'property' Ljava\/lang\/String;\l  0x0033\-0x003b: r3 'key' Ljava\/lang\/String;\l  0x0009\-0x003c: r1 'properties' [Ljava\/lang\/String;\l  0x0001\-0x003c: r0 'valuesChanged' Z\l  \-1 \-0x003c: r7 'startValues' Landroidx\/transition\/TransitionValues;\l  \-1 \-0x003c: r8 'endValues' Landroidx\/transition\/TransitionValues;\lMETHOD_OVERRIDE: [androidx.transition.Transition.isTransitionRequired(androidx.transition.TransitionValues, androidx.transition.TransitionValues):boolean]\l}"];
MethodNode -> Node_31;Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_52;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_57;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_45;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_54;
Node_40 -> Node_41;
Node_41 -> Node_43;
Node_41 -> Node_53[style=dashed];
Node_43 -> Node_39;
Node_53 -> Node_42;
Node_42 -> Node_32;
Node_54 -> Node_60;
Node_60 -> Node_32;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_56;
Node_48 -> Node_49;
Node_49 -> Node_46;
Node_49 -> Node_55[style=dashed];
Node_55 -> Node_50;
Node_50 -> Node_32;
Node_56 -> Node_61;
Node_61 -> Node_32;
Node_57 -> Node_32;
Node_52 -> Node_32;
}

