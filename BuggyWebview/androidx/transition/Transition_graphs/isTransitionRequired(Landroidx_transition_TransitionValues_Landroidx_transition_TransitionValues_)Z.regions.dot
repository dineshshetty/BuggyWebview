digraph "CFG forandroidx.transition.Transition.isTransitionRequired(Landroidx\/transition\/TransitionValues;Landroidx\/transition\/TransitionValues;)Z" {
subgraph cluster_Region_1358387182 {
label = "R(1:(2:(1:25)|(2:4|(2:(3:6|(2:8|(2:(1:12)|(1:10)))|15)|(3:16|(2:19|(1:22))|24)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1624534049 {
label = "R(2:(1:25)|(2:4|(2:(3:6|(2:8|(2:(1:12)|(1:10)))|15)|(3:16|(2:19|(1:22))|24))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1537702725 {
label = "IF [B:34:0x0001, B:35:0x0003] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0001|if (r7 == null) goto L26\l}"];
Node_35 [shape=record,label="{35\:\ 0x0003|ADDED_TO_REGION\l|if (r8 == null) goto L25\l}"];
subgraph cluster_Region_803305676 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1662402244 {
label = "R(2:4|(2:(3:6|(2:8|(2:(1:12)|(1:10)))|15)|(3:16|(2:19|(1:22))|24)))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0005|java.lang.String[] java.lang.String[] r1 = getTransitionProperties()\l}"];
subgraph cluster_Region_1170408185 {
label = "R(2:(3:6|(2:8|(2:(1:12)|(1:10)))|15)|(3:16|(2:19|(1:22))|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_262304568 {
label = "IF [B:37:0x0009] THEN: R(3:6|(2:8|(2:(1:12)|(1:10)))|15) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0009|if (r1 != null) goto L6\l}"];
subgraph cluster_Region_1130480128 {
label = "R(3:6|(2:8|(2:(1:12)|(1:10)))|15)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x000b|int r3 = 0\l\l}"];
subgraph cluster_LoopRegion_104188676 {
label = "LOOP:0: (2:8|(2:(1:12)|(1:10)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x000d|LOOP_START\lLOOP:0: B:39:0x000d\-\>B:43:0x0019\lPHI: r3 \l  PHI: (r3v4 int) = (r3v3 int), (r3v5 int) binds: [B:38:0x000b, B:43:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L8\l}"];
subgraph cluster_Region_1563587137 {
label = "R(2:8|(2:(1:12)|(1:10)))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x000f|r4 = r1[r3]\l}"];
subgraph cluster_Region_1713960404 {
label = "R(2:(1:12)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1118557893 {
label = "IF [B:41:0x0015] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0015|if (isValueChanged(r7, r8, r4) != false) goto L11\l}"];
subgraph cluster_Region_530759843 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0017|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_260081469 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0019|LOOP_END\lLOOP:0: B:39:0x000d\-\>B:43:0x0019\l|r3++\l}"];
}
}
}
}
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_937907640 {
label = "R(3:16|(2:19|(1:22))|24)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x001d|java.util.Iterator r2 = r7.values.keySet().iterator()\l\l}"];
subgraph cluster_LoopRegion_381718725 {
label = "LOOP:1: (2:19|(1:22))";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x002b|java.lang.String \lif (r2.hasNext() != false) goto L19\l}"];
subgraph cluster_Region_180449574 {
label = "R(2:19|(1:22))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x002d|java.lang.String r3 = r2.next()\l}"];
subgraph cluster_IfRegion_65998597 {
label = "IF [B:49:0x0037] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0037|LOOP_END\lLOOP:1: B:46:0x0027\-\>B:49:0x0037\l|if (isValueChanged(r7, r8, r3) != false) goto L21\l}"];
subgraph cluster_Region_237551701 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0039|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
Node_31 [shape=record,color=red,label="{31\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0000}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0017|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x003c|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0027|LOOP_START\lLOOP:1: B:46:0x0027\-\>B:49:0x0037\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0039|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x003c|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x003c|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.transition.Transition.isTransitionRequired((r6v0 'this' androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]), (r7v0 'startValues' androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'endValues' androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x0019 \-\> B:39:0x000d, CROSS_EDGE: B:39:0x000d \-\> B:52:0x003c, CROSS_EDGE: B:50:0x0039 \-\> B:52:0x003c, BACK_EDGE: B:49:0x0037 \-\> B:46:0x0027, CROSS_EDGE: B:47:0x002b \-\> B:52:0x003c, CROSS_EDGE: B:35:0x0003 \-\> B:52:0x003c, CROSS_EDGE: B:34:0x0001 \-\> B:52:0x003c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.transition.Transition.isTransitionRequired(androidx.transition.TransitionValues, androidx.transition.TransitionValues):boolean]\l}"];
MethodNode -> Node_31;Node_34 -> Node_35[style=dashed];
Node_34 -> Node_52;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_57;
Node_57 -> Node_32;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_45[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_54[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_43[style=dashed];
Node_41 -> Node_53;
Node_42 -> Node_32;
Node_43 -> Node_39;
Node_60 -> Node_32;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_47 -> Node_56[style=dashed];
Node_48 -> Node_49;
Node_49 -> Node_46[style=dashed];
Node_49 -> Node_55;
Node_50 -> Node_32;
Node_61 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_53 -> Node_42;
Node_54 -> Node_60;
Node_46 -> Node_47;
Node_55 -> Node_50;
Node_56 -> Node_61;
Node_52 -> Node_32;
}

