digraph "CFG forandroidx.transition.Transition.start()V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0002|if (r4.mNumInstances != 0) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|java.util.ArrayList\<androidx.transition.Transition$TransitionListener\> r0 = r4.mListeners\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|if (r0 == null) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008}"];
Node_22 [shape=record,label="{22\:\ 0x000c|if (r0.size() \<= 0) goto L11\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e|java.util.ArrayList r0 = (java.util.ArrayList) r4.mListeners.clone()\lint r1 = r0.size()\lr2 = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|LOOP_START\lLOOP:0: B:24:0x001b\-\>B:25:0x001d\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:23:0x000e, B:25:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r1) goto L10\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|LOOP_END\lLOOP:0: B:24:0x001b\-\>B:25:0x001d\l|r0.get(r2).onTransitionStart(r4)\lint r2 = r2 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x0029|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|r4.mEnded = false\l}"];
Node_27 [shape=record,label="{27\:\ 0x002c|r4.mNumInstances = r4.mNumInstances + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.transition.Transition.start((r4v0 'this' androidx.transition.Transition A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:25:0x001d \-\> B:24:0x001b, CROSS_EDGE: B:22:0x000c \-\> B:26:0x0029, CROSS_EDGE: B:20:0x0006 \-\> B:26:0x0029, CROSS_EDGE: B:18:0x0002 \-\> B:27:0x002c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_24;
Node_29 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_16;
}

