digraph "CFG forandroidx.transition.TransitionManager.MultiListener.onViewDetachedFromWindow(Landroid\/view\/View;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|removeListeners()\landroidx.transition.TransitionManager.sPendingTransitions.remove(r4.mSceneRoot)\ljava.util.ArrayList r0 = androidx.transition.TransitionManager.getRunningTransitions().get(r4.mSceneRoot)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|if (r0 == null) goto L10\l}"];
Node_17 [shape=record,label="{17\:\ 0x0018}"];
Node_18 [shape=record,label="{18\:\ 0x001c|if (r0.size() \<= 0) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x001e|java.util.Iterator r1 = r0.iterator()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|LOOP_START\lLOOP:0: B:20:0x0022\-\>B:22:0x0028\l}"];
Node_21 [shape=record,label="{21\:\ 0x0026|if (r1.hasNext() == false) goto L9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|LOOP_END\lLOOP:0: B:20:0x0022\-\>B:22:0x0028\l|androidx.transition.Transition r2 = r1.next()\lr2.resume(r4.mSceneRoot)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0034|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0034|r4.mTransition.clearValues(true)\l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.transition.TransitionManager.MultiListener.onViewDetachedFromWindow((r4v0 'this' androidx.transition.TransitionManager$MultiListener A[IMMUTABLE_TYPE, THIS]), (r5v0 'v' android.view.View A[D('v' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:22:0x0028 \-\> B:20:0x0022, CROSS_EDGE: B:18:0x001c \-\> B:23:0x0034, CROSS_EDGE: B:16:0x0016 \-\> B:23:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.OnAttachStateChangeListener.onViewDetachedFromWindow(android.view.View):void\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_20;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_14;
}

