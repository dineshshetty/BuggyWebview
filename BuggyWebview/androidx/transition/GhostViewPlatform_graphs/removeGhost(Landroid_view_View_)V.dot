digraph "CFG forandroidx.transition.GhostViewPlatform.removeGhost(Landroid\/view\/View;)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|fetchRemoveGhostMethod()\ljava.lang.reflect.Method r0 = androidx.transition.GhostViewPlatform.sRemoveGhostMethod\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|if (r0 == null) goto L14\l}"];
Node_20 [shape=record,label="{20\:\ 0x0007}"];
Node_28 [shape=record,label="{28\:\ 0x0009|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x001d, InvocationTargetException \-\> 0x0012, blocks: (B:21:0x0009), top: B:28:0x0009 \}\lCatch: InvocationTargetException \-\> 0x0012, IllegalAccessException \-\> 0x001d\l|r0.invoke(null, new java.lang.Object[]\{r4\})     \/\/ Catch: java.lang.reflect.InvocationTargetException \-\> L12 java.lang.IllegalAccessException \-\> L1d\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x001d|ExcHandler: IllegalAccessException \-\> 0x001d\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|RETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0012|ExcHandler: InvocationTargetException \-\> 0x0012\l|java.lang.reflect.InvocationTargetException r0 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013}"];
Node_25 [shape=record,label="{25\:\ 0x001c|throw new java.lang.RuntimeException(r0.getCause())\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.transition.GhostViewPlatform.removeGhost((r4v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x001d \-\> B:27:0x001e, CROSS_EDGE: B:25:0x001c \-\> B:17:?, CROSS_EDGE: B:28:0x0009 \-\> B:26:0x001d, CROSS_EDGE: B:28:0x0009 \-\> B:23:0x0012, CROSS_EDGE: B:19:0x0005 \-\> B:27:0x001e\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x001d, InvocationTargetException \-\> 0x0012, blocks: (B:21:0x0009), top: B:28:0x0009 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_28;
Node_28 -> Node_21;
Node_28 -> Node_26;
Node_28 -> Node_23;
Node_21 -> Node_29;
Node_21 -> Node_31;
Node_29 -> Node_26;
Node_29 -> Node_23;
Node_31 -> Node_17;
Node_26 -> Node_27;
Node_27 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_17;
Node_30 -> Node_17;
}

