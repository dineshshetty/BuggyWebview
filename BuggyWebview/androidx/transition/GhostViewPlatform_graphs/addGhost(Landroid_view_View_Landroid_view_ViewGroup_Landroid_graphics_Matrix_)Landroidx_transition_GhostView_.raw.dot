digraph "CFG forandroidx.transition.GhostViewPlatform.addGhost(Landroid\/view\/View;Landroid\/view\/ViewGroup;Landroid\/graphics\/Matrix;)Landroidx\/transition\/GhostView;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: INVOKE   type: STATIC call: androidx.transition.GhostViewPlatform.fetchAddGhostMethod():void A[MD:():void (m)] (LINE:43)\l0x0003: SGET  (r0 I:java.lang.reflect.Method) =  androidx.transition.GhostViewPlatform.sAddGhostMethod java.lang.reflect.Method  (LINE:44)\l0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x002c \l}"];
Node_23 [shape=record,label="{23\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:androidx.transition.GhostView)  (LINE:54)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x002b, InvocationTargetException \-\> 0x0020, blocks: (B:17:0x0008), top: B:24:0x0008 \}\lCatch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b\l|0x0008: NEW_INSTANCE  (r2 I:androidx.transition.GhostViewPlatform) =  androidx.transition.GhostViewPlatform A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b, TRY_ENTER] (LINE:46)\l0x000a: CONST  (r3 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x000b: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b]\l0x000d: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000e: APUT  (r3 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b]\l0x0010: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0011: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('viewGroup' android.view.ViewGroup)])\l A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b]\l0x0013: CONST  (r4 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0014: APUT  \l  (r3 I:??[OBJECT, ARRAY][])\l  (r4 I:??[int, short, byte, char])\l  (r7 I:??[OBJECT, ARRAY] A[D('matrix' android.graphics.Matrix)])\l A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b]\l0x0016: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.reflect.Method), (r1 I:java.lang.Object), (r3 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)] (LINE:47)\l0x001a: CHECK_CAST (r0 I:android.view.View) = (android.view.View) (r0 I:??[OBJECT, ARRAY]) A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b]\l0x001c: INVOKE  (r2 I:androidx.transition.GhostViewPlatform), (r0 I:android.view.View) type: DIRECT call: androidx.transition.GhostViewPlatform.\<init\>(android.view.View):void A[Catch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b, MD:(android.view.View):void (m), TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:androidx.transition.GhostView)  (LINE:46)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|ExcHandler: IllegalAccessException \-\> 0x002b\l|0x002b: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x002b] (LINE:48)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|ExcHandler: InvocationTargetException \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0020] (LINE:50)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:51)\l0x0023: INVOKE  (r2 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)]\l0x0027: INVOKE  (r1 I:java.lang.RuntimeException), (r2 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static androidx.transition.GhostView androidx.transition.GhostViewPlatform.addGhost((r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001f \-\> B:14:?, CROSS_EDGE: B:22:0x002b \-\> B:23:0x002c, CROSS_EDGE: B:21:0x002a \-\> B:14:?, CROSS_EDGE: B:24:0x0008 \-\> B:22:0x002b, CROSS_EDGE: B:24:0x0008 \-\> B:19:0x0020\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x002b: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  \-1 \-0x002c: r5 'view' Landroid\/view\/View;\l  \-1 \-0x002c: r6 'viewGroup' Landroid\/view\/ViewGroup;\l  \-1 \-0x002c: r7 'matrix' Landroid\/graphics\/Matrix;\lTryCatch #2 \{IllegalAccessException \-\> 0x002b, InvocationTargetException \-\> 0x0020, blocks: (B:17:0x0008), top: B:24:0x0008 \}\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_23;
Node_16 -> Node_24[style=dashed];
Node_23 -> Node_14;
Node_24 -> Node_17;
Node_24 -> Node_22;
Node_24 -> Node_19;
Node_17 -> Node_18;
Node_17 -> Node_25;
Node_18 -> Node_14;
Node_25 -> Node_22;
Node_25 -> Node_19;
Node_22 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_14;
}

