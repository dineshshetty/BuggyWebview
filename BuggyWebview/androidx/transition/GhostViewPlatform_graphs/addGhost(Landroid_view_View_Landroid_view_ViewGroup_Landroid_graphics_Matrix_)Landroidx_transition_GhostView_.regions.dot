digraph "CFG forandroidx.transition.GhostViewPlatform.addGhost(Landroid\/view\/View;Landroid\/view\/ViewGroup;Landroid\/graphics\/Matrix;)Landroidx\/transition\/GhostView;" {
subgraph cluster_Region_15305271 {
label = "R(3:1|(1:(1:7))|3)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|fetchAddGhostMethod()\ljava.lang.reflect.Method java.lang.reflect.Method r0 = androidx.transition.GhostViewPlatform.sAddGhostMethod\l}"];
subgraph cluster_IfRegion_1834876658 {
label = "IF [B:16:0x0006] THEN: R(1:(1:7)) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0006|if (r0 != null) goto L5\l}"];
subgraph cluster_Region_1777890591 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_212578032 {
label = "Try: R(1:7) catches: R(0), R(2:10|12)";
node [shape=record,color=blue];
subgraph cluster_Region_1749654123 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x001f|RETURN\l|return new androidx.transition.GhostViewPlatform((android.view.View) r0.invoke(null, r5, r6, r7))\l}"];
}
subgraph cluster_Region_634311351 {
label = "R(0) | ExcHandler: IllegalAccessException \-\> 0x002b\l";
node [shape=record,color=blue];
}
subgraph cluster_Region_1990475147 {
label = "R(2:10|12) | ExcHandler: InvocationTargetException \-\> 0x0020\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0020|ExcHandler: InvocationTargetException \-\> 0x0020\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|throw new java.lang.RuntimeException(r0.getCause())\l}"];
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x002c|RETURN\l|return null\l}"];
}
subgraph cluster_Region_634311351 {
label = "R(0) | ExcHandler: IllegalAccessException \-\> 0x002b\l";
node [shape=record,color=blue];
}
subgraph cluster_Region_1990475147 {
label = "R(2:10|12) | ExcHandler: InvocationTargetException \-\> 0x0020\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0020|ExcHandler: InvocationTargetException \-\> 0x0020\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|throw new java.lang.RuntimeException(r0.getCause())\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0008|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0008|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{IllegalAccessException \-\> 0x002b, InvocationTargetException \-\> 0x0020, blocks: (B:17:0x0008), top: B:24:0x0008 \}\lCatch: InvocationTargetException \-\> 0x0020, IllegalAccessException \-\> 0x002b\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002b|ExcHandler: IllegalAccessException \-\> 0x002b\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0021}"];
MethodNode[shape=record,label="{public static androidx.transition.GhostView androidx.transition.GhostViewPlatform.addGhost((r5v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'viewGroup' android.view.ViewGroup A[D('viewGroup' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'matrix' android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001f \-\> B:14:?, CROSS_EDGE: B:22:0x002b \-\> B:23:0x002c, CROSS_EDGE: B:21:0x002a \-\> B:14:?, CROSS_EDGE: B:24:0x0008 \-\> B:22:0x002b, CROSS_EDGE: B:24:0x0008 \-\> B:19:0x0020\lINLINE_NOT_NEEDED\lTryCatch #2 \{IllegalAccessException \-\> 0x002b, InvocationTargetException \-\> 0x0020, blocks: (B:17:0x0008), top: B:24:0x0008 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_16 -> Node_23[style=dashed];
Node_16 -> Node_24;
Node_18 -> Node_14;
Node_19 -> Node_20;
Node_21 -> Node_14;
Node_23 -> Node_14;
Node_19 -> Node_20;
Node_21 -> Node_14;
Node_13 -> Node_15;
Node_24 -> Node_17;
Node_24 -> Node_22;
Node_24 -> Node_19;
Node_17 -> Node_18;
Node_17 -> Node_25;
Node_25 -> Node_22;
Node_25 -> Node_19;
Node_22 -> Node_23;
Node_20 -> Node_21;
}

