digraph "CFG forandroidx.transition.TransitionUtils.createViewBitmap(Landroid\/view\/View;Landroid\/graphics\/Matrix;Landroid\/graphics\/RectF;Landroid\/view\/ViewGroup;)Landroid\/graphics\/Bitmap;" {
Node_28 [shape=record,label="{28\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,label="{30\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.transition.TransitionUtils.HAS_IS_ATTACHED_TO_WINDOW boolean  (LINE:93)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0013 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.isAttachedToWindow():boolean A[MD:():boolean (c)] (LINE:94)\l0x0008: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) ^ (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x000a|0x000a: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sceneRoot' android.view.ViewGroup)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x000e  (LINE:95)\l}"];
Node_34 [shape=record,label="{34\:\ 0x000c|0x000c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0015|0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:100)\l0x0016: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:101)\l0x0017: SGET  (r4 I:boolean) =  androidx.transition.TransitionUtils.HAS_OVERLAY boolean  (LINE:102)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0019|0x0019: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0033 \l}"];
Node_40 [shape=record,label="{40\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('addToOverlay' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0033 \l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sceneRootIsAttached' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0021  (LINE:103)\l}"];
Node_42 [shape=record,label="{42\:\ 0x001f|RETURN\l|0x001f: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:104)\l0x0020: RETURN  (r4 I:android.graphics.Bitmap) \l}"];
Node_29 [shape=record,label="{29\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_44 [shape=record,label="{44\:\ 0x0021|0x0021: INVOKE  (r5 I:android.view.ViewParent) = (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:106)\l0x0025: MOVE  (r2 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewGroup)]) = (r5 I:??[OBJECT, ARRAY]) \l0x0026: CHECK_CAST (r2 I:android.view.ViewGroup) = (android.view.ViewGroup) (r2 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewGroup)]) \l0x0028: INVOKE  (r3 I:int A[D('indexInParent' int)]) = \l  (r2 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)])\l  (r11 I:android.view.View A[D('view' android.view.View)])\l type: VIRTUAL call: android.view.ViewGroup.indexOfChild(android.view.View):int A[MD:(android.view.View):int (c)] (LINE:107)\l0x002c: INVOKE  (r5 I:android.view.ViewGroupOverlay) = (r14 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getOverlay():android.view.ViewGroupOverlay A[MD:():android.view.ViewGroupOverlay (c)] (LINE:108)\l0x0030: INVOKE  (r5 I:android.view.ViewGroupOverlay), (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.ViewGroupOverlay.add(android.view.View):void A[MD:(android.view.View):void (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0033|0x0033: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:110)\l0x0034: INVOKE  (r6 I:float) = (r13 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.width():float A[MD:():float (c)] (LINE:111)\l0x0038: INVOKE  (r6 I:int) = (r6 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x003c: INVOKE  (r7 I:float) = (r13 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) type: VIRTUAL call: android.graphics.RectF.height():float A[MD:():float (c)] (LINE:112)\l0x0040: INVOKE  (r7 I:int) = (r7 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0044|0x0044: IF  (r6 I:??[int, byte, short, char] A[D('bitmapWidth' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:52:0x009a  (LINE:113)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0046|0x0046: IF  (r7 I:??[int, byte, short, char] A[D('bitmapHeight' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:52:0x009a \l}"];
Node_48 [shape=record,label="{48\:\ 0x0048|0x0048: CONST  (r8 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:114)\l0x004a: CONST  (r9 I:??[int, float, short, byte, char]) = (1233125376(0x49800000, float:1048576.0) ??[int, float, short, byte, char]) \l0x004c: ARITH  (r10 I:int) = (r6 I:int A[D('bitmapWidth' int)]) * (r7 I:int A[D('bitmapHeight' int)]) \l0x004e: CAST (r10 I:float) = (float) (r10 I:int) \l0x004f: ARITH  (r9 I:float) = (r9 I:float) \/ (r10 I:float) \l0x0050: INVOKE  (r8 I:float) = (r8 I:float), (r9 I:float) type: STATIC call: java.lang.Math.min(float, float):float A[MD:(float, float):float (c)]\l0x0054: CAST (r9 I:float) = (float) (r6 I:int A[D('bitmapWidth' int)])  (LINE:115)\l0x0055: ARITH  (r9 I:float) = (r9 I:float) * (r8 I:float A[D('scale' float)]) \l0x0057: INVOKE  (r6 I:int A[D('bitmapWidth' int)]) = (r9 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x005b: CAST (r9 I:float) = (float) (r7 I:int A[D('bitmapHeight' int)])  (LINE:116)\l0x005c: ARITH  (r9 I:float) = (r9 I:float) * (r8 I:float A[D('scale' float)]) \l0x005e: INVOKE  (r7 I:int A[D('bitmapHeight' int)]) = (r9 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0062: IGET  (r9 I:float) = (r13 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:117)\l0x0064: NEG  (r9 I:float) = (r9 I:float) \l0x0065: IGET  (r10 I:float) = (r13 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.top float \l0x0067: NEG  (r10 I:float) = (r10 I:float) \l0x0068: INVOKE  (r12 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r9 I:float), (r10 I:float) type: VIRTUAL call: android.graphics.Matrix.postTranslate(float, float):boolean A[MD:(float, float):boolean (c)]\l0x006b: INVOKE  \l  (r12 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l  (r8 I:float A[D('scale' float)])\l  (r8 I:float A[D('scale' float)])\l type: VIRTUAL call: android.graphics.Matrix.postScale(float, float):boolean A[MD:(float, float):boolean (c)] (LINE:118)\l0x006e: SGET  (r9 I:boolean) =  androidx.transition.TransitionUtils.HAS_PICTURE_BITMAP boolean  (LINE:120)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0070|0x0070: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0089 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0072|0x0072: NEW_INSTANCE  (r9 I:android.graphics.Picture) =  android.graphics.Picture  (LINE:122)\l0x0074: INVOKE  (r9 I:android.graphics.Picture) type: DIRECT call: android.graphics.Picture.\<init\>():void A[MD:():void (c)]\l0x0077: INVOKE  (r10 I:android.graphics.Canvas) = \l  (r9 I:android.graphics.Picture A[D('picture' android.graphics.Picture)])\l  (r6 I:int A[D('bitmapWidth' int)])\l  (r7 I:int A[D('bitmapHeight' int)])\l type: VIRTUAL call: android.graphics.Picture.beginRecording(int, int):android.graphics.Canvas A[MD:(int, int):android.graphics.Canvas (c)] (LINE:123)\l0x007b: INVOKE  \l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r12 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Canvas.concat(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:124)\l0x007e: INVOKE  \l  (r11 I:android.view.View A[D('view' android.view.View)])\l  (r10 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: android.view.View.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:125)\l0x0081: INVOKE  (r9 I:android.graphics.Picture A[D('picture' android.graphics.Picture)]) type: VIRTUAL call: android.graphics.Picture.endRecording():void A[MD:():void (c)] (LINE:126)\l0x0084: INVOKE  (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) = (r9 I:android.graphics.Picture A[D('picture' android.graphics.Picture)]) type: STATIC call: android.graphics.Bitmap.createBitmap(android.graphics.Picture):android.graphics.Bitmap A[MD:(android.graphics.Picture):android.graphics.Bitmap (c)] (LINE:127)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0089|0x0089: SGET  (r9 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config  (LINE:130)\l0x008b: INVOKE  (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) = (r6 I:int A[D('bitmapWidth' int)]), (r7 I:int A[D('bitmapHeight' int)]), (r9 I:android.graphics.Bitmap$Config) type: STATIC call: android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap A[MD:(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap (c)]\l0x008f: NEW_INSTANCE  (r9 I:android.graphics.Canvas) =  android.graphics.Canvas  (LINE:131)\l0x0091: INVOKE  (r9 I:android.graphics.Canvas), (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)]) type: DIRECT call: android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)]\l0x0094: INVOKE  \l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l  (r12 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Canvas.concat(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:132)\l0x0097: INVOKE  \l  (r11 I:android.view.View A[D('view' android.view.View)])\l  (r9 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)])\l type: VIRTUAL call: android.view.View.draw(android.graphics.Canvas):void A[MD:(android.graphics.Canvas):void (c)] (LINE:133)\l}"];
Node_52 [shape=record,label="{52\:\ 0x009a|0x009a: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00a8  (LINE:136)\l}"];
Node_53 [shape=record,label="{53\:\ 0x009c|0x009c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('addToOverlay' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00a8 \l}"];
Node_54 [shape=record,label="{54\:\ 0x009e|0x009e: INVOKE  (r4 I:android.view.ViewGroupOverlay) = (r14 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getOverlay():android.view.ViewGroupOverlay A[MD:():android.view.ViewGroupOverlay (c)] (LINE:137)\l0x00a2: INVOKE  (r4 I:android.view.ViewGroupOverlay), (r11 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.ViewGroupOverlay.remove(android.view.View):void A[MD:(android.view.View):void (c)]\l0x00a5: INVOKE  \l  (r2 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)])\l  (r11 I:android.view.View A[D('view' android.view.View)])\l  (r3 I:int A[D('indexInParent' int)])\l type: VIRTUAL call: android.view.ViewGroup.addView(android.view.View, int):void A[MD:(android.view.View, int):void (c)] (LINE:138)\l}"];
Node_55 [shape=record,label="{55\:\ 0x00a8|RETURN\l|0x00a8: RETURN  (r5 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])  (LINE:140)\l}"];
Node_35 [shape=record,label="{35\:\ 0x000e|0x000e: INVOKE  (r1 I:boolean) = (r14 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.isAttachedToWindow():boolean A[MD:():boolean (c)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0013|0x0013: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('addToOverlay' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:97)\l0x0014: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:98)\l}"];
MethodNode[shape=record,label="{private static android.graphics.Bitmap androidx.transition.TransitionUtils.createViewBitmap((r11 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.graphics.RectF A[D('bounds' android.graphics.RectF), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:55:0x00a8 \-\> B:29:?, CROSS_EDGE: B:53:0x009c \-\> B:55:0x00a8, CROSS_EDGE: B:52:0x009a \-\> B:55:0x00a8, CROSS_EDGE: B:51:0x0089 \-\> B:52:0x009a, CROSS_EDGE: B:47:0x0046 \-\> B:52:0x009a, CROSS_EDGE: B:46:0x0044 \-\> B:52:0x009a, CROSS_EDGE: B:40:0x001b \-\> B:45:0x0033, CROSS_EDGE: B:39:0x0019 \-\> B:45:0x0033, CROSS_EDGE: B:35:0x000e \-\> B:38:0x0015, CROSS_EDGE: B:37:0x0013 \-\> B:38:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0013: r0 'addToOverlay' Z\l  0x0012\-0x0013: r1 'sceneRootIsAttached' Z\l  0x0077\-0x0088: r9 'picture' Landroid\/graphics\/Picture;\l  0x007b\-0x0088: r10 'canvas' Landroid\/graphics\/Canvas;\l  0x0054\-0x009a: r8 'scale' F\l  0x0094\-0x009a: r9 'canvas' Landroid\/graphics\/Canvas;\l  0x0014\-0x00a8: r0 'addToOverlay' Z\l  0x0015\-0x00a8: r1 'sceneRootIsAttached' Z\l  0x0016\-0x00a8: r2 'parent' Landroid\/view\/ViewGroup;\l  0x0017\-0x00a8: r3 'indexInParent' I\l  0x0034\-0x00a8: r5 'bitmap' Landroid\/graphics\/Bitmap;\l  0x003c\-0x00a8: r6 'bitmapWidth' I\l  0x0044\-0x00a8: r7 'bitmapHeight' I\l  \-1 \-0x00a8: r11 'view' Landroid\/view\/View;\l  \-1 \-0x00a8: r12 'matrix' Landroid\/graphics\/Matrix;\l  \-1 \-0x00a8: r13 'bounds' Landroid\/graphics\/RectF;\l  \-1 \-0x00a8: r14 'sceneRoot' Landroid\/view\/ViewGroup;\l}"];
MethodNode -> Node_28;Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_45;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_29;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_52;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_52;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_55;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_29;
Node_35 -> Node_38;
Node_37 -> Node_38;
}

