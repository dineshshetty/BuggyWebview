digraph "CFG forandroidx.transition.TransitionUtils.copyViewImage(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroid\/view\/View;)Landroid\/view\/View;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|android.graphics.Matrix r0 = new android.graphics.Matrix()\lr0.setTranslate((float) (\-r13.getScrollX()), (float) (\-r13.getScrollY()))\landroidx.transition.ViewUtils.transformMatrixToGlobal(r12, r0)\landroidx.transition.ViewUtils.transformMatrixToLocal(r11, r0)\landroid.graphics.RectF r1 = new android.graphics.RectF(0.0f, 0.0f, (float) r12.getWidth(), (float) r12.getHeight())\lr0.mapRect(r1)\lint r2 = java.lang.Math.round(r1.left)\lint r3 = java.lang.Math.round(r1.top)\lint r4 = java.lang.Math.round(r1.right)\lint r5 = java.lang.Math.round(r1.bottom)\landroid.widget.ImageView r6 = new android.widget.ImageView(r12.getContext())\lr6.setScaleType(android.widget.ImageView.ScaleType.CENTER_CROP)\landroid.graphics.Bitmap r7 = createViewBitmap(r12, r0, r1, r11)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|if (r7 == null) goto L4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|r6.setImageBitmap(r7)\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|int r8 = android.view.View.MeasureSpec.makeMeasureSpec(r4 \- r2, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lint r9 = android.view.View.MeasureSpec.makeMeasureSpec(r5 \- r3, androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY)\lr6.measure(r8, r9)\lr6.layout(r2, r3, r4, r5)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|RETURN\l|return r6\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.view.View androidx.transition.TransitionUtils.copyViewImage((r11v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'parent' android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0057 \-\> B:12:0x005c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

