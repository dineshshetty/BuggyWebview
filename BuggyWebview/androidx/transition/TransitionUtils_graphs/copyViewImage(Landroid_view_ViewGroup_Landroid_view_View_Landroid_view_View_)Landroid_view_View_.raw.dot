digraph "CFG forandroidx.transition.TransitionUtils.copyViewImage(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroid\/view\/View;)Landroid\/view\/View;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix  (LINE:51)\l0x0002: INVOKE  (r0 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[MD:():void (c)]\l0x0005: INVOKE  (r1 I:int) = (r13 I:android.view.View A[D('parent' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollX():int A[MD:():int (c)] (LINE:52)\l0x0009: NEG  (r1 I:int) = (r1 I:int) \l0x000a: CAST (r1 I:float) = (float) (r1 I:int) \l0x000b: INVOKE  (r2 I:int) = (r13 I:android.view.View A[D('parent' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollY():int A[MD:():int (c)]\l0x000f: NEG  (r2 I:int) = (r2 I:int) \l0x0010: CAST (r2 I:float) = (float) (r2 I:int) \l0x0011: INVOKE  (r0 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.Matrix.setTranslate(float, float):void A[MD:(float, float):void (c)]\l0x0014: INVOKE  \l  (r12 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: STATIC call: androidx.transition.ViewUtils.transformMatrixToGlobal(android.view.View, android.graphics.Matrix):void A[MD:(android.view.View, android.graphics.Matrix):void (m)] (LINE:53)\l0x0017: INVOKE  \l  (r11 I:android.view.View A[D('sceneRoot' android.view.ViewGroup)])\l  (r0 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: STATIC call: androidx.transition.ViewUtils.transformMatrixToLocal(android.view.View, android.graphics.Matrix):void A[MD:(android.view.View, android.graphics.Matrix):void (m)] (LINE:54)\l0x001a: NEW_INSTANCE  (r1 I:android.graphics.RectF) =  android.graphics.RectF  (LINE:55)\l0x001c: INVOKE  (r2 I:int) = (r12 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getWidth():int A[MD:():int (c)]\l0x0020: CAST (r2 I:float) = (float) (r2 I:int) \l0x0021: INVOKE  (r3 I:int) = (r12 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getHeight():int A[MD:():int (c)]\l0x0025: CAST (r3 I:float) = (float) (r3 I:int) \l0x0026: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0027: INVOKE  (r1 I:android.graphics.RectF), (r4 I:float), (r4 I:float), (r2 I:float), (r3 I:float) type: DIRECT call: android.graphics.RectF.\<init\>(float, float, float, float):void A[MD:(float, float, float, float):void (c)]\l0x002a: INVOKE  \l  (r0 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l  (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l type: VIRTUAL call: android.graphics.Matrix.mapRect(android.graphics.RectF):boolean A[MD:(android.graphics.RectF):boolean (c)] (LINE:56)\l0x002d: IGET  (r2 I:float) = (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.left float  (LINE:57)\l0x002f: INVOKE  (r2 I:int) = (r2 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0033: IGET  (r3 I:float) = (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.top float  (LINE:58)\l0x0035: INVOKE  (r3 I:int) = (r3 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0039: IGET  (r4 I:float) = (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.right float  (LINE:59)\l0x003b: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x003f: IGET  (r5 I:float) = (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)]) android.graphics.RectF.bottom float  (LINE:60)\l0x0041: INVOKE  (r5 I:int) = (r5 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)]\l0x0045: NEW_INSTANCE  (r6 I:android.widget.ImageView) =  android.widget.ImageView  (LINE:62)\l0x0047: INVOKE  (r7 I:android.content.Context) = (r12 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getContext():android.content.Context A[MD:():android.content.Context (c)]\l0x004b: INVOKE  (r6 I:android.widget.ImageView), (r7 I:android.content.Context) type: DIRECT call: android.widget.ImageView.\<init\>(android.content.Context):void A[MD:(android.content.Context):void (c)]\l0x004e: SGET  (r7 I:android.widget.ImageView$ScaleType) =  android.widget.ImageView.ScaleType.CENTER_CROP android.widget.ImageView$ScaleType  (LINE:63)\l0x0050: INVOKE  (r6 I:android.widget.ImageView A[D('copy' android.widget.ImageView)]), (r7 I:android.widget.ImageView$ScaleType) type: VIRTUAL call: android.widget.ImageView.setScaleType(android.widget.ImageView$ScaleType):void A[MD:(android.widget.ImageView$ScaleType):void (c)]\l0x0053: INVOKE  (r7 I:android.graphics.Bitmap) = \l  (r12 I:android.view.View A[D('view' android.view.View)])\l  (r0 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l  (r1 I:android.graphics.RectF A[D('bounds' android.graphics.RectF)])\l  (r11 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)])\l type: STATIC call: androidx.transition.TransitionUtils.createViewBitmap(android.view.View, android.graphics.Matrix, android.graphics.RectF, android.view.ViewGroup):android.graphics.Bitmap A[MD:(android.view.View, android.graphics.Matrix, android.graphics.RectF, android.view.ViewGroup):android.graphics.Bitmap (m)] (LINE:64)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|0x0057: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bitmap' android.graphics.Bitmap)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005c  (LINE:65)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: INVOKE  \l  (r6 I:android.widget.ImageView A[D('copy' android.widget.ImageView)])\l  (r7 I:android.graphics.Bitmap A[D('bitmap' android.graphics.Bitmap)])\l type: VIRTUAL call: android.widget.ImageView.setImageBitmap(android.graphics.Bitmap):void A[MD:(android.graphics.Bitmap):void (c)] (LINE:66)\l}"];
Node_12 [shape=record,label="{12\:\ 0x005c|0x005c: ARITH  (r8 I:int) = (r4 I:int A[D('right' int)]) \- (r2 I:int A[D('left' int)])  (LINE:68)\l0x005e: CONST  (r9 I:??[int, float, short, byte, char]) = (1073741824(0x40000000, float:2.0) ??[int, float, short, byte, char]) \l0x0060: INVOKE  (r8 I:int) = (r8 I:int), (r9 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x0064: ARITH  (r10 I:int) = (r5 I:int A[D('bottom' int)]) \- (r3 I:int A[D('top' int)])  (LINE:69)\l0x0066: INVOKE  (r9 I:int) = (r10 I:int), (r9 I:int) type: STATIC call: android.view.View.MeasureSpec.makeMeasureSpec(int, int):int A[MD:(int, int):int (c)]\l0x006a: INVOKE  \l  (r6 I:android.widget.ImageView A[D('copy' android.widget.ImageView)])\l  (r8 I:int A[D('widthSpec' int)])\l  (r9 I:int A[D('heightSpec' int)])\l type: VIRTUAL call: android.widget.ImageView.measure(int, int):void A[MD:(int, int):void (c)] (LINE:70)\l0x006d: INVOKE  \l  (r6 I:android.widget.ImageView A[D('copy' android.widget.ImageView)])\l  (r2 I:int A[D('left' int)])\l  (r3 I:int A[D('top' int)])\l  (r4 I:int A[D('right' int)])\l  (r5 I:int A[D('bottom' int)])\l type: VIRTUAL call: android.widget.ImageView.layout(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:71)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0070|RETURN\l|0x0070: RETURN  (r6 I:android.view.View A[D('copy' android.widget.ImageView)])  (LINE:72)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static android.view.View androidx.transition.TransitionUtils.copyViewImage((r11 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.view.View A[D('parent' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0057 \-\> B:12:0x005c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x0070: r0 'matrix' Landroid\/graphics\/Matrix;\l  0x002a\-0x0070: r1 'bounds' Landroid\/graphics\/RectF;\l  0x0033\-0x0070: r2 'left' I\l  0x0039\-0x0070: r3 'top' I\l  0x003f\-0x0070: r4 'right' I\l  0x0045\-0x0070: r5 'bottom' I\l  0x004e\-0x0070: r6 'copy' Landroid\/widget\/ImageView;\l  0x0057\-0x0070: r7 'bitmap' Landroid\/graphics\/Bitmap;\l  0x0064\-0x0070: r8 'widthSpec' I\l  0x006a\-0x0070: r9 'heightSpec' I\l  \-1 \-0x0070: r11 'sceneRoot' Landroid\/view\/ViewGroup;\l  \-1 \-0x0070: r12 'view' Landroid\/view\/View;\l  \-1 \-0x0070: r13 'parent' Landroid\/view\/View;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

