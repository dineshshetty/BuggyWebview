digraph "CFG forandroidx.transition.GhostViewHolder.isOnTop(Ljava\/util\/ArrayList;Ljava\/util\/ArrayList;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r6 I:java.util.ArrayList A[D('viewParents' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)] (LINE:132)\l0x0004: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0047 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r7 I:java.util.ArrayList A[D('comparedWith' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0047 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:133)\l0x000e: INVOKE  (r2 I:java.lang.Object) = (r6 I:java.util.ArrayList A[D('viewParents' java.util.ArrayList\<android.view.View\>)]), (r0 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0012: INVOKE  (r3 I:java.lang.Object) = (r7 I:java.util.ArrayList A[D('comparedWith' java.util.ArrayList\<android.view.View\>)]), (r0 I:int) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0019 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: INVOKE  (r2 I:int) = (r6 I:java.util.ArrayList A[D('viewParents' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:137)\l0x001d: INVOKE  (r3 I:int) = (r7 I:java.util.ArrayList A[D('comparedWith' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0021: INVOKE  (r2 I:int) = (r2 I:int), (r3 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0025: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:138)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|LOOP_START\lLOOP:0: B:10:0x0026\-\>B:15:0x003b\l|0x0026: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('depth' int)])  \-\> B:23:0x003e \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: INVOKE  (r4 I:java.lang.Object) = (r6 I:java.util.ArrayList A[D('viewParents' java.util.ArrayList\<android.view.View\>)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:139)\l0x002c: CHECK_CAST (r4 I:android.view.View) = (android.view.View) (r4 I:??[OBJECT, ARRAY]) \l0x002e: INVOKE  (r5 I:java.lang.Object) = (r7 I:java.util.ArrayList A[D('comparedWith' java.util.ArrayList\<android.view.View\>)]), (r3 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)] (LINE:140)\l0x0032: CHECK_CAST (r5 I:android.view.View) = (android.view.View) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewParent' android.view.View)]) == (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('comparedWithParent' android.view.View)])  \-\> B:15:0x003b  (LINE:142)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|LOOP_END\lLOOP:0: B:10:0x0026\-\>B:15:0x003b\l|0x003b: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:138)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: INVOKE  (r0 I:boolean) = \l  (r4 I:android.view.View A[D('viewParent' android.view.View)])\l  (r5 I:android.view.View A[D('comparedWithParent' android.view.View)])\l type: STATIC call: androidx.transition.GhostViewHolder.isOnTop(android.view.View, android.view.View):boolean A[MD:(android.view.View, android.view.View):boolean (m)] (LINE:144)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|RETURN\l|0x003a: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x003e|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: INVOKE  (r3 I:int) = (r7 I:java.util.ArrayList A[D('comparedWith' java.util.ArrayList\<android.view.View\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)] (LINE:149)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('depth' int)])  \-\> B:19:0x0045 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|RETURN\lORIG_RETURN\l|0x0045: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: RETURN  (r1 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0046: RETURN  (r1 I:boolean) A[SYNTHETIC]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|RETURN\l|0x0047: RETURN  (r1 I:boolean)  (LINE:135)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.transition.GhostViewHolder.isOnTop((r6 I:java.util.ArrayList\<android.view.View\> A[D('viewParents' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.ArrayList\<android.view.View\> A[D('comparedWith' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x003b \-\> B:10:0x0026, CROSS_EDGE: B:20:0x0046 \-\> B:1:?, CROSS_EDGE: B:17:0x0042 \-\> B:20:0x0046, CROSS_EDGE: B:21:0x0047 \-\> B:1:?, CROSS_EDGE: B:5:0x000b \-\> B:21:0x0047, CROSS_EDGE: B:3:0x0005 \-\> B:21:0x0047\lDebug Info:\l  0x002e\-0x003b: r4 'viewParent' Landroid\/view\/View;\l  0x0034\-0x003b: r5 'comparedWithParent' Landroid\/view\/View;\l  0x0026\-0x003e: r3 'i' I\l  0x0025\-0x0047: r2 'depth' I\l  0x0000\-0x0047: r6 'viewParents' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\l  0x0000\-0x0047: r7 'comparedWith' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;\lSIGNATURE: (Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;)Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_21;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_21[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_12 -> Node_15;
Node_12 -> Node_22[style=dashed];
Node_15 -> Node_10;
Node_22 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_23 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_24[style=dashed];
Node_19 -> Node_1;
Node_24 -> Node_1;
Node_21 -> Node_1;
}

