digraph "CFG forandroidx.transition.GhostViewHolder.isOnTop(Landroid\/view\/View;Landroid\/view\/View;)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:169)\l0x0004: CHECK_CAST (r0 I:android.view.ViewGroup) = (android.view.ViewGroup) (r0 I:??[OBJECT, ARRAY]) \l0x0006: INVOKE  (r1 I:int) = (r0 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]) type: VIRTUAL call: android.view.ViewGroup.getChildCount():int A[MD:():int (c)] (LINE:171)\l0x000a: SGET  (r2 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:175)\l0x000c: CONST  (r3 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r2 I:??[int, byte, short, char]) \< (r3 I:??[int, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r2 I:float) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getZ():float A[MD:():float (c)] (LINE:176)\l0x0014: INVOKE  (r3 I:float) = (r7 I:android.view.View A[D('comparedWith' android.view.View)]) type: VIRTUAL call: android.view.View.getZ():float A[MD:():float (c)]\l0x0018: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: INVOKE  (r2 I:float) = (r6 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getZ():float A[MD:():float (c)] (LINE:177)\l0x0020: INVOKE  (r3 I:float) = (r7 I:android.view.View A[D('comparedWith' android.view.View)]) type: VIRTUAL call: android.view.View.getZ():float A[MD:():float (c)]\l0x0024: CMP_L  (r2 I:int) = (r2 I:float), (r3 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r2 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|SYNTHETIC\lRETURN\l|0x0028: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x002b: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|RETURN\lORIG_RETURN\l|0x002a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002b: RETURN  (r2 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:184)\l0x002d: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:185)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|LOOP_START\lLOOP:0: B:12:0x002e\-\>B:18:0x0040\l|0x002e: IF  (r3 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char] A[D('childrenCount' int)])  \-\> B:22:0x0043 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: INVOKE  (r4 I:int) = (r0 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r3 I:int A[D('i' int)]) type: STATIC call: androidx.transition.ViewGroupUtils.getChildDrawingOrder(android.view.ViewGroup, int):int A[MD:(android.view.ViewGroup, int):int (m)] (LINE:186)\l0x0034: INVOKE  (r5 I:android.view.View) = (r0 I:android.view.ViewGroup A[D('parent' android.view.ViewGroup)]), (r4 I:int A[D('childIndex' int)]) type: VIRTUAL call: android.view.ViewGroup.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:187)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)])  \-\> B:16:0x003c  (LINE:188)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('comparedWith' android.view.View)])  \-\> B:18:0x0040  (LINE:191)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|LOOP_END\lLOOP:0: B:12:0x002e\-\>B:18:0x0040\l|0x0040: ARITH  (r3 I:int) = (r3 I:int A[D('i' int)]) + (1 int)  (LINE:185)\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|SYNTHETIC\lRETURN\l|0x003e: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('isOnTop' boolean)]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:192)\l0x0043: RETURN  (r2 I:boolean A[D('isOnTop' boolean)]) A[SYNTHETIC] (LINE:197)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|RETURN\lORIG_RETURN\l|0x003a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isOnTop' boolean)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:189)\l0x0043: RETURN  (r2 I:boolean A[D('isOnTop' boolean)])  (LINE:197)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0043: RETURN  (r2 I:boolean A[D('isOnTop' boolean)]) A[SYNTHETIC] (LINE:197)\l}"];
MethodNode[shape=record,label="{private static boolean androidx.transition.GhostViewHolder.isOnTop((r6 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('comparedWith' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x002a \-\> B:10:0x002b, CROSS_EDGE: B:19:0x0043 \-\> B:1:?, CROSS_EDGE: B:17:0x003e \-\> B:19:0x0043, BACK_EDGE: B:18:0x0040 \-\> B:12:0x002e, CROSS_EDGE: B:12:0x002e \-\> B:19:0x0043, CROSS_EDGE: B:3:0x000e \-\> B:11:0x002c\lDebug Info:\l  0x0034\-0x0040: r4 'childIndex' I\l  0x0038\-0x0040: r5 'child' Landroid\/view\/View;\l  0x002e\-0x0043: r3 'i' I\l  0x0006\-0x0043: r0 'parent' Landroid\/view\/ViewGroup;\l  0x000a\-0x0043: r1 'childrenCount' I\l  0x002d\-0x0043: r2 'isOnTop' Z\l  \-1 \-0x0043: r6 'view' Landroid\/view\/View;\l  \-1 \-0x0043: r7 'comparedWith' Landroid\/view\/View;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_20[style=dashed];
Node_16 -> Node_18;
Node_16 -> Node_21[style=dashed];
Node_18 -> Node_12;
Node_21 -> Node_17;
Node_17 -> Node_1;
Node_20 -> Node_15;
Node_15 -> Node_1;
Node_22 -> Node_25;
Node_25 -> Node_1;
}

