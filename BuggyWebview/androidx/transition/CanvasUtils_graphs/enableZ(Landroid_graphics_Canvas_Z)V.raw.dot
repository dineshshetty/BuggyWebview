digraph "CFG forandroidx.transition.CanvasUtils.enableZ(Landroid\/graphics\/Canvas;Z)V" {
Node_48 [shape=record,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_50 [shape=record,label="{50\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:41)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:53:0x0007 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0007|0x0007: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:43)\l0x0009: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:58:0x0017 \l}"];
Node_55 [shape=record,label="{55\:\ 0x000d|0x000d: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enable' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0013  (LINE:44)\l}"];
Node_56 [shape=record,label="{56\:\ 0x000f|0x000f: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.enableZ():void A[MD:():void (c)] (LINE:45)\l}"];
Node_83 [shape=record,label="{83\:\ 0x006c|RETURN\lORIG_RETURN\l|0x006c: RETURN    (LINE:79)\l}"];
Node_49 [shape=record,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_57 [shape=record,label="{57\:\ 0x0013|0x0013: INVOKE  (r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas)]) type: VIRTUAL call: android.graphics.Canvas.disableZ():void A[MD:():void (c)] (LINE:47)\l}"];
Node_90 [shape=record,label="{90\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0017|0x0017: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:49)\l0x0019: CONST  (r1 I:??[int, float, short, byte, char]) = (28 ??[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x006d \l}"];
Node_60 [shape=record,label="{60\:\ 0x001d|0x001d: SGET  (r0 I:boolean) =  androidx.transition.CanvasUtils.sOrderMethodsFetched boolean  (LINE:53)\l0x001f: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x0045 \l}"];
Node_62 [shape=record,label="{62\:\ 0x0022|0x0022: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:55)\l}"];
Node_86 [shape=record,label="{86\:\ 0x0023|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_63 [shape=record,label="{63\:\ 0x0023|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{NoSuchMethodException \-\> 0x0042, blocks: (B:63:0x0023), top: B:86:0x0023 \}\lCatch: NoSuchMethodException \-\> 0x0042\l|0x0023: CONST_CLASS  (r2 I:java.lang.Class\<android.graphics.Canvas\>) =  android.graphics.Canvas.class A[TRY_ENTER]\l0x0025: CONST_STR  (r3 I:java.lang.String) =  \"insertReorderBarrier\" \l0x0027: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x0042]\l0x0029: INVOKE  (r2 I:java.lang.reflect.Method) = (r2 I:java.lang.Class), (r3 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0042, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x002d: SPUT  (r2 I:java.lang.reflect.Method) androidx.transition.CanvasUtils.sReorderBarrierMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0042]\l0x002f: INVOKE  (r2 I:java.lang.reflect.Method), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x0042, MD:(boolean):void (s)] (LINE:57)\l0x0032: CONST_CLASS  (r2 I:java.lang.Class\<android.graphics.Canvas\>) =  android.graphics.Canvas.class  (LINE:58)\l0x0034: CONST_STR  (r3 I:java.lang.String) =  \"insertInorderBarrier\" \l0x0036: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch: NoSuchMethodException \-\> 0x0042]\l0x0038: INVOKE  (r2 I:java.lang.reflect.Method) = (r2 I:java.lang.Class), (r3 I:java.lang.String), (r4 I:java.lang.Class[]) type: VIRTUAL call: java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0042, MD:(java.lang.String, java.lang.Class\<?\>[]):java.lang.reflect.Method VARARG throws java.lang.NoSuchMethodException, java.lang.SecurityException (c)]\l0x003c: SPUT  (r2 I:java.lang.reflect.Method) androidx.transition.CanvasUtils.sInorderBarrierMethod java.lang.reflect.Method A[Catch: NoSuchMethodException \-\> 0x0042]\l0x003e: INVOKE  (r2 I:java.lang.reflect.Method), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Method.setAccessible(boolean):void A[Catch: NoSuchMethodException \-\> 0x0042, MD:(boolean):void (s), TRY_LEAVE] (LINE:60)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0043|0x0043: SPUT  (r0 I:boolean) androidx.transition.CanvasUtils.sOrderMethodsFetched boolean  (LINE:64)\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_65 [shape=record,label="{65\:\ 0x0042|ExcHandler: NoSuchMethodException \-\> 0x0042\l|0x0042: MOVE_EXCEPTION  (r2 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0042] (LINE:61)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0045|0x0045: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enable' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0055  (LINE:67)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0055|0x0055: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enable' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:?  (LINE:70)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0057|TryCatch #3 \{IllegalAccessException \-\> 0x0053, InvocationTargetException \-\> 0x0051, blocks: (B:68:0x0047, B:70:0x004b, B:76:0x0057, B:78:0x005b), top: B:88:0x0047 \}\lCatch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053\l|0x0057: SGET  (r0 I:java.lang.reflect.Method) =  androidx.transition.CanvasUtils.sInorderBarrierMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053]\l}"];
Node_77 [shape=record,label="{77\:\ 0x0059|0x0059: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:? \l}"];
Node_78 [shape=record,label="{78\:\ 0x005b|TRY_LEAVE\lTryCatch #3 \{IllegalAccessException \-\> 0x0053, InvocationTargetException \-\> 0x0051, blocks: (B:68:0x0047, B:70:0x004b, B:76:0x0057, B:78:0x005b), top: B:88:0x0047 \}\lCatch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053\l|0x005b: NEW_ARRAY  (r1 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053] (LINE:71)\l0x005d: INVOKE  \l  (r0 I:java.lang.reflect.Method)\l  (r5 I:java.lang.Object A[D('canvas' android.graphics.Canvas)])\l  (r1 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_73 [shape=record,label="{73\:\ 0x0053|ExcHandler: IllegalAccessException \-\> 0x0053\l|0x0053: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0053] (LINE:73)\l}"];
Node_74 [shape=record,label="{74\:\ 0x0054|0x0054: GOTO  \-\> 0x006b \l}"];
Node_92 [shape=record,label="{92\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0051|ExcHandler: InvocationTargetException \-\> 0x0051\l|0x0051: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0051] (LINE:75)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0052|0x0052: GOTO  \-\> 0x0061 \l}"];
Node_80 [shape=record,label="{80\:\ 0x0061|0x0061: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:76)\l0x0063: INVOKE  (r2 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)]\l0x0067: INVOKE  (r1 I:java.lang.RuntimeException), (r2 I:java.lang.Throwable) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_81 [shape=record,label="{81\:\ 0x006a|0x006a: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_95 [shape=record,label="{95\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
Node_94 [shape=record,label="{94\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
Node_93 [shape=record,label="{93\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
Node_88 [shape=record,label="{88\:\ 0x0047|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_68 [shape=record,label="{68\:\ 0x0047|TRY_ENTER\lTryCatch #3 \{IllegalAccessException \-\> 0x0053, InvocationTargetException \-\> 0x0051, blocks: (B:68:0x0047, B:70:0x004b, B:76:0x0057, B:78:0x005b), top: B:88:0x0047 \}\lCatch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053\l|0x0047: SGET  (r0 I:java.lang.reflect.Method) =  androidx.transition.CanvasUtils.sReorderBarrierMethod java.lang.reflect.Method A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053, TRY_ENTER]\l}"];
Node_69 [shape=record,label="{69\:\ 0x0049|0x0049: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0055 \l}"];
Node_70 [shape=record,label="{70\:\ 0x004b|TryCatch #3 \{IllegalAccessException \-\> 0x0053, InvocationTargetException \-\> 0x0051, blocks: (B:68:0x0047, B:70:0x004b, B:76:0x0057, B:78:0x005b), top: B:88:0x0047 \}\lCatch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053\l|0x004b: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053] (LINE:68)\l0x004d: INVOKE  \l  (r0 I:java.lang.reflect.Method)\l  (r5 I:java.lang.Object A[D('canvas' android.graphics.Canvas)])\l  (r2 I:java.lang.Object[])\l type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: InvocationTargetException \-\> 0x0051, IllegalAccessException \-\> 0x0053, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c)]\l0x0050: GOTO  \-\> 0x0055 \l}"];
Node_84 [shape=record,label="{84\:\ 0x006d|0x006d: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException  (LINE:51)\l0x006f: CONST_STR  (r1 I:java.lang.String) =  \"This method doesn't work on Pie!\" \l0x0071: INVOKE  (r0 I:java.lang.IllegalStateException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_85 [shape=record,label="{85\:\ 0x0074|0x0074: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lRETURN\l|0x006c: RETURN   A[SYNTHETIC] (LINE:79)\l}"];
MethodNode[shape=record,label="{public static void androidx.transition.CanvasUtils.enableZ((r5 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('enable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:57:0x0013 \-\> B:83:0x006c, CROSS_EDGE: B:78:0x005b \-\> B:83:0x006c, CROSS_EDGE: B:74:0x0054 \-\> B:83:0x006c, CROSS_EDGE: B:81:0x006a \-\> B:49:?, CROSS_EDGE: B:77:0x0059 \-\> B:83:0x006c, CROSS_EDGE: B:75:0x0055 \-\> B:83:0x006c, CROSS_EDGE: B:70:0x004b \-\> B:75:0x0055, CROSS_EDGE: B:69:0x0049 \-\> B:75:0x0055, CROSS_EDGE: B:88:0x0047 \-\> B:73:0x0053, CROSS_EDGE: B:88:0x0047 \-\> B:71:0x0051, CROSS_EDGE: B:65:0x0042 \-\> B:66:0x0043, CROSS_EDGE: B:86:0x0023 \-\> B:65:0x0042, CROSS_EDGE: B:61:0x0020 \-\> B:67:0x0045, CROSS_EDGE: B:85:0x0074 \-\> B:49:?, CROSS_EDGE: B:51:0x0004 \-\> B:83:0x006c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0061\-0x006b: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  \-1 \-0x0074: r5 'canvas' Landroid\/graphics\/Canvas;\l  \-1 \-0x0074: r6 'enable' Z\lTryCatch #2 \{NoSuchMethodException \-\> 0x0042, blocks: (B:63:0x0023), top: B:86:0x0023 \}, TryCatch #3 \{IllegalAccessException \-\> 0x0053, InvocationTargetException \-\> 0x0051, blocks: (B:68:0x0047, B:70:0x004b, B:76:0x0057, B:78:0x005b), top: B:88:0x0047 \}\l}"];
MethodNode -> Node_48;Node_48 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_53;
Node_51 -> Node_91[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_58;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_83;
Node_83 -> Node_49;
Node_57 -> Node_90;
Node_90 -> Node_49;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_84;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_67;
Node_62 -> Node_86;
Node_86 -> Node_63;
Node_86 -> Node_65;
Node_63 -> Node_66;
Node_63 -> Node_87;
Node_66 -> Node_67;
Node_87 -> Node_65;
Node_65 -> Node_66;
Node_67 -> Node_75;
Node_67 -> Node_88[style=dashed];
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_93;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_94;
Node_78 -> Node_89;
Node_78 -> Node_95;
Node_89 -> Node_73;
Node_89 -> Node_71;
Node_73 -> Node_74;
Node_74 -> Node_92;
Node_92 -> Node_49;
Node_71 -> Node_72;
Node_72 -> Node_80;
Node_80 -> Node_81;
Node_81 -> Node_49;
Node_95 -> Node_49;
Node_94 -> Node_49;
Node_93 -> Node_49;
Node_88 -> Node_68;
Node_88 -> Node_73;
Node_88 -> Node_71;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_75;
Node_70 -> Node_75;
Node_84 -> Node_85;
Node_85 -> Node_49;
Node_91 -> Node_49;
}

