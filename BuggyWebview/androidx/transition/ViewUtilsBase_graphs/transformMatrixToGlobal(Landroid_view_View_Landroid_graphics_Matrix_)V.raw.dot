digraph "CFG forandroidx.transition.ViewUtilsBase.transformMatrixToGlobal(Landroid\/view\/View;Landroid\/graphics\/Matrix;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:78)\l0x0004: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)]) android.view.View  (LINE:79)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|0x0006: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001d \l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('parent' android.view.ViewParent)])  (LINE:80)\l0x0009: CHECK_CAST (r1 I:android.view.View) = (android.view.View) (r1 I:??[OBJECT, ARRAY]) \l0x000b: INVOKE  \l  (r4 I:androidx.transition.ViewUtilsBase)\l  (r1 I:android.view.View A[D('vp' android.view.View)])\l  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: androidx.transition.ViewUtilsBase.transformMatrixToGlobal(android.view.View, android.graphics.Matrix):void A[MD:(android.view.View, android.graphics.Matrix):void (m)] (LINE:81)\l0x000e: INVOKE  (r2 I:int) = (r1 I:android.view.View A[D('vp' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollX():int A[MD:():int (c)] (LINE:82)\l0x0012: NEG  (r2 I:int) = (r2 I:int) \l0x0013: CAST (r2 I:float) = (float) (r2 I:int) \l0x0014: INVOKE  (r3 I:int) = (r1 I:android.view.View A[D('vp' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollY():int A[MD:():int (c)]\l0x0018: NEG  (r3 I:int) = (r3 I:int) \l0x0019: CAST (r3 I:float) = (float) (r3 I:int) \l0x001a: INVOKE  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r2 I:float), (r3 I:float) type: VIRTUAL call: android.graphics.Matrix.preTranslate(float, float):boolean A[MD:(float, float):boolean (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|0x001d: INVOKE  (r1 I:int) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:84)\l0x0021: CAST (r1 I:float) = (float) (r1 I:int) \l0x0022: INVOKE  (r2 I:int) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)]\l0x0026: CAST (r2 I:float) = (float) (r2 I:int) \l0x0027: INVOKE  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)]), (r1 I:float), (r2 I:float) type: VIRTUAL call: android.graphics.Matrix.preTranslate(float, float):boolean A[MD:(float, float):boolean (c)]\l0x002a: INVOKE  (r1 I:android.graphics.Matrix) = (r5 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getMatrix():android.graphics.Matrix A[MD:():android.graphics.Matrix (c)] (LINE:85)\l0x002e: INVOKE  (r2 I:boolean) = (r1 I:android.graphics.Matrix A[D('vm' android.graphics.Matrix)]) type: VIRTUAL call: android.graphics.Matrix.isIdentity():boolean A[MD:():boolean (c)] (LINE:86)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|0x0034: INVOKE  \l  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l  (r1 I:android.graphics.Matrix A[D('vm' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Matrix.preConcat(android.graphics.Matrix):boolean A[MD:(android.graphics.Matrix):boolean (c)] (LINE:87)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|RETURN\lORIG_RETURN\l|0x0037: RETURN    (LINE:89)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0037: RETURN   A[SYNTHETIC] (LINE:89)\l}"];
MethodNode[shape=record,label="{public void androidx.transition.ViewUtilsBase.transformMatrixToGlobal((r4 'this' I:androidx.transition.ViewUtilsBase A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0032 \-\> B:18:0x0037, CROSS_EDGE: B:13:0x0006 \-\> B:15:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x001d: r1 'vp' Landroid\/view\/View;\l  0x0004\-0x0037: r0 'parent' Landroid\/view\/ViewParent;\l  0x002e\-0x0037: r1 'vm' Landroid\/graphics\/Matrix;\l  \-1 \-0x0037: r5 'view' Landroid\/view\/View;\l  \-1 \-0x0037: r6 'matrix' Landroid\/graphics\/Matrix;\lMETHOD_OVERRIDE: [androidx.transition.ViewUtilsBase.transformMatrixToGlobal(android.view.View, android.graphics.Matrix):void]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

