digraph "CFG forandroidx.transition.ViewUtilsBase.setTransitionVisibility(Landroid\/view\/View;I)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: SGET  (r0 I:boolean) =  androidx.transition.ViewUtilsBase.sViewFlagsFieldFetched boolean  (LINE:155)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x001d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0004|0x0004: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:157)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{NoSuchFieldException \-\> 0x0013, blocks: (B:27:0x0005), top: B:40:0x0005 \}\lCatch: NoSuchFieldException \-\> 0x0013\l|0x0005: CONST_CLASS  (r1 I:java.lang.Class\<android.view.View\>) =  android.view.View.class A[TRY_ENTER]\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"mViewFlags\" \l0x0009: INVOKE  (r1 I:java.lang.reflect.Field) = (r1 I:java.lang.Class), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.Class.getDeclaredField(java.lang.String):java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0013, MD:(java.lang.String):java.lang.reflect.Field throws java.lang.NoSuchFieldException (c)]\l0x000d: SPUT  (r1 I:java.lang.reflect.Field) androidx.transition.ViewUtilsBase.sViewFlagsField java.lang.reflect.Field A[Catch: NoSuchFieldException \-\> 0x0013]\l0x000f: INVOKE  (r1 I:java.lang.reflect.Field), (r0 I:boolean) type: VIRTUAL call: java.lang.reflect.Field.setAccessible(boolean):void A[Catch: NoSuchFieldException \-\> 0x0013, MD:(boolean):void throws java.lang.SecurityException (c), TRY_LEAVE] (LINE:158)\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: SPUT  (r0 I:boolean) androidx.transition.ViewUtilsBase.sViewFlagsFieldFetched boolean  (LINE:162)\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|ExcHandler: NoSuchFieldException \-\> 0x0013\l|0x0013: MOVE_EXCEPTION  (r1 I:java.lang.NoSuchFieldException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchFieldException \-\> 0x0013] (LINE:159)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|0x0014: CONST_STR  (r2 I:java.lang.String) =  \"ViewUtilsBase\"  (LINE:160)\l0x0016: CONST_STR  (r3 I:java.lang.String) =  \"fetchViewFlagsField: \" \l0x0018: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String) type: STATIC call: android.util.Log.i(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|0x001d: SGET  (r0 I:java.lang.reflect.Field) =  androidx.transition.ViewUtilsBase.sViewFlagsField java.lang.reflect.Field  (LINE:164)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|0x001f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:? \l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x002e, blocks: (B:34:0x0021), top: B:38:0x0021 \}\lCatch: IllegalAccessException \-\> 0x002e\l|0x0021: INVOKE  (r0 I:int) = (r0 I:java.lang.reflect.Field), (r5 I:java.lang.Object A[D('view' android.view.View)]) type: VIRTUAL call: java.lang.reflect.Field.getInt(java.lang.Object):int A[Catch: IllegalAccessException \-\> 0x002e, MD:(java.lang.Object):int throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER] (LINE:166)\l0x0025: SGET  (r1 I:java.lang.reflect.Field) =  androidx.transition.ViewUtilsBase.sViewFlagsField java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x002e] (LINE:167)\l0x0027: ARITH  (r2 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char] A[D('viewFlags' int)]) & (\-13 ??[int, float, short, byte, char]) A[Catch: IllegalAccessException \-\> 0x002e]\l0x0029: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) \| (r6 I:??[int, boolean, short, byte, char] A[D('visibility' int)]) A[Catch: IllegalAccessException \-\> 0x002e]\l0x002a: INVOKE  (r1 I:java.lang.reflect.Field), (r5 I:java.lang.Object A[D('view' android.view.View)]), (r2 I:int) type: VIRTUAL call: java.lang.reflect.Field.setInt(java.lang.Object, int):void A[Catch: IllegalAccessException \-\> 0x002e, MD:(java.lang.Object, int):void throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_LEAVE]\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN   A[SYNTHETIC] (LINE:172)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x002e|ExcHandler: IllegalAccessException \-\> 0x002e\l|0x002e: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x002e] (LINE:168)\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|RETURN\lORIG_RETURN\l|0x002f: RETURN    (LINE:172)\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|0x002f: RETURN   A[SYNTHETIC] (LINE:172)\l}"];
MethodNode[shape=record,label="{public void androidx.transition.ViewUtilsBase.setTransitionVisibility((r4 'this' I:androidx.transition.ViewUtilsBase A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0021 \-\> B:37:0x002f, CROSS_EDGE: B:36:0x002e \-\> B:37:0x002f, CROSS_EDGE: B:38:0x0021 \-\> B:36:0x002e, CROSS_EDGE: B:30:0x0014 \-\> B:31:0x001b, CROSS_EDGE: B:40:0x0005 \-\> B:29:0x0013, CROSS_EDGE: B:25:0x0002 \-\> B:32:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x001b: r1 'e' Ljava\/lang\/NoSuchFieldException;\l  0x0025\-0x002d: r0 'viewFlags' I\l  \-1 \-0x002f: r5 'view' Landroid\/view\/View;\l  \-1 \-0x002f: r6 'visibility' I\lTryCatch #0 \{IllegalAccessException \-\> 0x002e, blocks: (B:34:0x0021), top: B:38:0x0021 \}, TryCatch #1 \{NoSuchFieldException \-\> 0x0013, blocks: (B:27:0x0005), top: B:40:0x0005 \}\lMETHOD_OVERRIDE: [androidx.transition.ViewUtilsBase.setTransitionVisibility(android.view.View, int):void]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_40;
Node_40 -> Node_27;
Node_40 -> Node_29;
Node_27 -> Node_31;
Node_27 -> Node_41;
Node_31 -> Node_32;
Node_41 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_38[style=dashed];
Node_33 -> Node_42;
Node_38 -> Node_34;
Node_38 -> Node_36;
Node_34 -> Node_39;
Node_34 -> Node_43;
Node_39 -> Node_36;
Node_43 -> Node_23;
Node_36 -> Node_37;
Node_37 -> Node_23;
Node_42 -> Node_23;
}

