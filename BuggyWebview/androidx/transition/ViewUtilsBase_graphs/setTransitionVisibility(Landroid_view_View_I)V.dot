digraph "CFG forandroidx.transition.ViewUtilsBase.setTransitionVisibility(Landroid\/view\/View;I)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000}"];
Node_25 [shape=record,label="{25\:\ 0x0002|if (androidx.transition.ViewUtilsBase.sViewFlagsFieldFetched != false) goto L10\l}"];
Node_26 [shape=record,label="{26\:\ 0x0004}"];
Node_40 [shape=record,label="{40\:\ 0x0005|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_27 [shape=record,label="{27\:\ 0x0005|TRY_ENTER\lTRY_LEAVE\lTryCatch #1 \{NoSuchFieldException \-\> 0x0013, blocks: (B:27:0x0005), top: B:40:0x0005 \}\lCatch: NoSuchFieldException \-\> 0x0013\l|java.lang.reflect.Field r1 = android.view.View.class.getDeclaredField(\"mViewFlags\")     \/\/ Catch: java.lang.NoSuchFieldException \-\> L13\landroidx.transition.ViewUtilsBase.sViewFlagsField = r1     \/\/ Catch: java.lang.NoSuchFieldException \-\> L13\lr1.setAccessible(true)     \/\/ Catch: java.lang.NoSuchFieldException \-\> L13\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|androidx.transition.ViewUtilsBase.sViewFlagsFieldFetched = true\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|ExcHandler: NoSuchFieldException \-\> 0x0013\l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|android.util.Log.i(androidx.transition.ViewUtilsBase.TAG, \"fetchViewFlagsField: \")\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|java.lang.reflect.Field r0 = androidx.transition.ViewUtilsBase.sViewFlagsField\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|if (r0 == null) goto L19\l}"];
Node_38 [shape=record,label="{38\:\ 0x0021|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_34 [shape=record,label="{34\:\ 0x0021|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x002e, blocks: (B:34:0x0021), top: B:38:0x0021 \}\lCatch: IllegalAccessException \-\> 0x002e\l|int r0 = r0.getInt(r5)     \/\/ Catch: java.lang.IllegalAccessException \-\> L2e\landroidx.transition.ViewUtilsBase.sViewFlagsField.setInt(r5, (r0 & (\-13)) \| r6)     \/\/ Catch: java.lang.IllegalAccessException \-\> L2e\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x002e|ExcHandler: IllegalAccessException \-\> 0x002e\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|RETURN\lORIG_RETURN\l|return\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.transition.ViewUtilsBase.setTransitionVisibility((r4v0 'this' androidx.transition.ViewUtilsBase A[IMMUTABLE_TYPE, THIS]), (r5v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'visibility' int A[D('visibility' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:34:0x0021 \-\> B:37:0x002f, CROSS_EDGE: B:36:0x002e \-\> B:37:0x002f, CROSS_EDGE: B:38:0x0021 \-\> B:36:0x002e, CROSS_EDGE: B:30:0x0014 \-\> B:31:0x001b, CROSS_EDGE: B:40:0x0005 \-\> B:29:0x0013, CROSS_EDGE: B:25:0x0002 \-\> B:32:0x001d\lINLINE_NOT_NEEDED\lTryCatch #0 \{IllegalAccessException \-\> 0x002e, blocks: (B:34:0x0021), top: B:38:0x0021 \}, TryCatch #1 \{NoSuchFieldException \-\> 0x0013, blocks: (B:27:0x0005), top: B:40:0x0005 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.transition.ViewUtilsBase.setTransitionVisibility(android.view.View, int):void]\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_40;
Node_40 -> Node_27;
Node_40 -> Node_29;
Node_27 -> Node_31;
Node_27 -> Node_41;
Node_31 -> Node_32;
Node_41 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_38[style=dashed];
Node_33 -> Node_42;
Node_38 -> Node_34;
Node_38 -> Node_36;
Node_34 -> Node_39;
Node_34 -> Node_43;
Node_39 -> Node_36;
Node_43 -> Node_23;
Node_36 -> Node_37;
Node_37 -> Node_23;
Node_42 -> Node_23;
}

