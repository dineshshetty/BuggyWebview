digraph "CFG forandroidx.transition.ChangeTransform.Transforms.hashCode()I" {
Node_35 [shape=record,label="{35\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|0x0000: IGET  (r0 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mTranslationX float  (LINE:503)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0004: CMP_L  (r3 I:int) = (r0 I:float), (r2 I:float) \l}"];
Node_38 [shape=record,label="{38\:\ 0x0006|0x0006: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x000d \l}"];
Node_39 [shape=record,label="{39\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = (r0 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x000e|0x000e: ARITH  (r3 I:int) = (r0 I:int A[D('code' int)]) * (31 int)  (LINE:504)\l0x0010: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mTranslationY float \l0x0012: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0014|0x0014: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x001b \l}"];
Node_43 [shape=record,label="{43\:\ 0x0016|0x0016: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x001c|0x001c: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x001d: ARITH  (r0 I:int A[D('code' int)]) = (r3 I:int A[D('code' int)]) * (31 int)  (LINE:505)\l0x001f: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mTranslationZ float \l0x0021: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0023|0x0023: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x002a \l}"];
Node_47 [shape=record,label="{47\:\ 0x0025|0x0025: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_49 [shape=record,label="{49\:\ 0x002b|0x002b: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int) \l0x002c: ARITH  (r3 I:int A[D('code' int)]) = (r0 I:int A[D('code' int)]) * (31 int)  (LINE:506)\l0x002e: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mScaleX float \l0x0030: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0032|0x0032: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0039 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0034|0x0034: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x003a|0x003a: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x003b: ARITH  (r0 I:int A[D('code' int)]) = (r3 I:int A[D('code' int)]) * (31 int)  (LINE:507)\l0x003d: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mScaleY float \l0x003f: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0041|0x0041: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0048 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0043|0x0043: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0049|0x0049: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int) \l0x004a: ARITH  (r3 I:int A[D('code' int)]) = (r0 I:int A[D('code' int)]) * (31 int)  (LINE:508)\l0x004c: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mRotationX float \l0x004e: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0050|0x0050: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0057 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0052|0x0052: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_61 [shape=record,label="{61\:\ 0x0058|0x0058: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0059: ARITH  (r0 I:int A[D('code' int)]) = (r3 I:int A[D('code' int)]) * (31 int)  (LINE:509)\l0x005b: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mRotationY float \l0x005d: CMP_L  (r5 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_62 [shape=record,label="{62\:\ 0x005f|0x005f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0066 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0061|0x0061: INVOKE  (r4 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0067|0x0067: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int) \l0x0068: ARITH  (r3 I:int A[D('code' int)]) = (r0 I:int A[D('code' int)]) * (31 int)  (LINE:510)\l0x006a: IGET  (r4 I:float) = (r6 I:androidx.transition.ChangeTransform$Transforms) androidx.transition.ChangeTransform.Transforms.mRotationZ float \l0x006c: CMP_L  (r2 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_66 [shape=record,label="{66\:\ 0x006e|0x006e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x0074 \l}"];
Node_67 [shape=record,label="{67\:\ 0x0070|0x0070: INVOKE  (r1 I:int) = (r4 I:float) type: STATIC call: java.lang.Float.floatToIntBits(float):int A[MD:(float):int (c)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0074|0x0074: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0075|RETURN\l|0x0075: RETURN  (r3 I:int A[D('code' int)])  (LINE:511)\l}"];
Node_36 [shape=record,label="{36\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_64 [shape=record,label="{64\:\ 0x0066|0x0066: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0057|0x0057: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0048|0x0048: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0039|0x0039: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002a|0x002a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x001b|0x001b: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x000d|0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public int androidx.transition.ChangeTransform.Transforms.hashCode((r6 'this' I:androidx.transition.ChangeTransform$Transforms A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:66:0x006e \-\> B:68:0x0074, CROSS_EDGE: B:64:0x0066 \-\> B:65:0x0067, CROSS_EDGE: B:60:0x0057 \-\> B:61:0x0058, CROSS_EDGE: B:56:0x0048 \-\> B:57:0x0049, CROSS_EDGE: B:52:0x0039 \-\> B:53:0x003a, CROSS_EDGE: B:48:0x002a \-\> B:49:0x002b, CROSS_EDGE: B:44:0x001b \-\> B:45:0x001c, CROSS_EDGE: B:40:0x000d \-\> B:41:0x000e\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000e\-0x001d: r0 'code' I\l  0x001d\-0x002c: r3 'code' I\l  0x002c\-0x003b: r0 'code' I\l  0x003b\-0x004a: r3 'code' I\l  0x004a\-0x0059: r0 'code' I\l  0x0059\-0x0068: r3 'code' I\l  0x0068\-0x0075: r0 'code' I\l  0x0075\-0x0075: r3 'code' I\l}"];
MethodNode -> Node_35;Node_35 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_57;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_36;
Node_64 -> Node_65;
Node_60 -> Node_61;
Node_56 -> Node_57;
Node_52 -> Node_53;
Node_48 -> Node_49;
Node_44 -> Node_45;
Node_40 -> Node_41;
}

