digraph "CFG forandroidx.transition.TransitionInflater.createTransitionManagerFromXml(Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/util\/AttributeSet;Landroid\/view\/ViewGroup;)Landroidx\/transition\/TransitionManager;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)] (LINE:288)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:289)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|LOOP_START\lLOOP:0: B:3:0x0005\-\>B:30:0x0005\l|0x0005: INVOKE  (r2 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.next():int A[MD:():int throws java.io.IOException, org.xmlpull.v1.XmlPullParserException (c)] (LINE:291)\l0x0009: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000a: CONST  (r4 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  (r2 I:int) = (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getDepth():int A[MD:():int (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r2 I:??[int, byte, short, char]) \<= (r0 I:??[int, byte, short, char] A[D('depth' int)])  \-\> B:23:0x0056 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|RETURN\l|0x0056: RETURN  (r1 I:androidx.transition.TransitionManager A[D('transitionManager' androidx.transition.TransitionManager)])  (LINE:307)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0056 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:294)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001a \l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: INVOKE  (r2 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:298)\l0x001e: CONST_STR  (r4 I:java.lang.String) =  \"transitionManager\"  (LINE:299)\l0x0020: INVOKE  (r4 I:boolean) = (r2 I:java.lang.String A[D('name' java.lang.String)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x002d \l}"];
Node_26 [shape=record,label="{26\:\ 0x002d|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: CONST_STR  (r4 I:java.lang.String) =  \"transition\"  (LINE:301)\l0x002f: INVOKE  (r4 I:boolean) = (r2 I:java.lang.String A[D('name' java.lang.String)]), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.String.equals(java.lang.Object):boolean A[MD:(java.lang.Object):boolean (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|0x0033: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x003b \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transitionManager' androidx.transition.TransitionManager)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x003b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: INVOKE  \l  (r7 I:androidx.transition.TransitionInflater)\l  (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l  (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r10 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)])\l  (r1 I:androidx.transition.TransitionManager A[D('transitionManager' androidx.transition.TransitionManager)])\l type: DIRECT call: androidx.transition.TransitionInflater.loadTransition(android.util.AttributeSet, org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, androidx.transition.TransitionManager):void A[MD:(android.util.AttributeSet, org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, androidx.transition.TransitionManager):void throws android.content.res.Resources$NotFoundException (m)] (LINE:302)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0005|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0005|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0005\-\>B:30:0x0005\l}"];
Node_29 [shape=record,label="{29\:\ 0x003b|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: NEW_INSTANCE  (r4 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:304)\l0x003d: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r5 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0042: CONST_STR  (r6 I:java.lang.String) =  \"Unknown scene name: \" \l0x0044: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0047: INVOKE  (r6 I:java.lang.String) = (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)]) type: INTERFACE call: org.xmlpull.v1.XmlPullParser.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x004b: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004e: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0052: INVOKE  (r4 I:java.lang.RuntimeException), (r5 I:java.lang.String) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x003b|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: NEW_INSTANCE  (r4 I:androidx.transition.TransitionManager) =  androidx.transition.TransitionManager  (LINE:300)\l0x0028: INVOKE  (r4 I:androidx.transition.TransitionManager) type: DIRECT call: androidx.transition.TransitionManager.\<init\>():void A[MD:():void (m)]\l0x002b: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('transitionManager' androidx.transition.TransitionManager)]) = (r4 I:??[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0005|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0005|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0056|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private androidx.transition.TransitionManager androidx.transition.TransitionInflater.createTransitionManagerFromXml((r7 'this' I:androidx.transition.TransitionInflater A[IMMUTABLE_TYPE, THIS]), (r8 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0026 \-\> B:3:0x0005, BACK_EDGE: B:18:0x0037 \-\> B:3:0x0005, CROSS_EDGE: B:16:0x0033 \-\> B:20:0x003b, BACK_EDGE: B:10:0x0017 \-\> B:3:0x0005, CROSS_EDGE: B:22:0x0056 \-\> B:1:?, CROSS_EDGE: B:6:0x0011 \-\> B:22:0x0056, CROSS_EDGE: B:4:0x000b \-\> B:7:0x0013\lDebug Info:\l  0x001e\-0x003a: r2 'name' Ljava\/lang\/String;\l  0x003b\-0x0056: r2 'name' Ljava\/lang\/String;\l  0x0004\-0x0056: r0 'depth' I\l  0x0005\-0x0056: r1 'transitionManager' Landroidx\/transition\/TransitionManager;\l  0x000a\-0x0056: r3 'type' I\l  \-1 \-0x0056: r8 'parser' Lorg\/xmlpull\/v1\/XmlPullParser;\l  \-1 \-0x0056: r9 'attrs' Landroid\/util\/AttributeSet;\l  \-1 \-0x0056: r10 'sceneRoot' Landroid\/view\/ViewGroup;\lEXCEPTIONS:[Lorg\/xmlpull\/v1\/XmlPullParserException;, Ljava\/io\/IOException;]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_23 -> Node_22;
Node_22 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_10 -> Node_25;
Node_10 -> Node_31[style=dashed];
Node_25 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_26;
Node_13 -> Node_27[style=dashed];
Node_26 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_28;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_32;
Node_32 -> Node_30;
Node_30 -> Node_3;
Node_29 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_28 -> Node_20;
Node_27 -> Node_14;
Node_14 -> Node_33;
Node_33 -> Node_30;
Node_31 -> Node_30;
Node_24 -> Node_22;
}

