digraph "CFG forandroidx.transition.TransitionSet.addTarget(Landroid\/view\/View;)Landroidx\/transition\/TransitionSet;" {
subgraph cluster_Region_1894118819 {
label = "R(3:1|(1:4)|7)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1400014582 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0007|if (r0 \< r2.mTransitions.size()) goto L4\l}"];
subgraph cluster_Region_1981600392 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0009|LOOP_END\lLOOP:0: B:12:0x0001\-\>B:14:0x0009\l|r2.mTransitions.get(r0).addTarget(r3)\lr0++\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x001d|RETURN\l|return (androidx.transition.TransitionSet) super.addTarget(r3)\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0001|LOOP_START\lLOOP:0: B:12:0x0001\-\>B:14:0x0009\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v4 'i' int) binds: [B:11:0x0000, B:14:0x0009] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0017|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0017}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.transition.TransitionSet androidx.transition.TransitionSet.addTarget((r2v0 'this' androidx.transition.TransitionSet A[IMMUTABLE_TYPE, THIS]), (r3v0 'target' android.view.View A[D('target' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0009 \-\> B:12:0x0001\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lREPLACED_BY: androidx.transition.TransitionSet.addTarget(android.view.View):androidx.transition.Transition\lMETHOD_OVERRIDE: [androidx.transition.Transition.addTarget(android.view.View):androidx.transition.Transition]\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_12;
Node_16 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_15;
Node_15 -> Node_16;
}

