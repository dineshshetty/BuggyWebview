digraph "CFG forandroidx.transition.Slide.setSlideEdge(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: SWITCH  (r3 I:?? A[D('slideEdge' int)])\l case 3: goto B:23:0x0024\l case 5: goto B:22:0x001f\l case 48: goto B:21:0x001a\l case 80: goto B:20:0x0015\l case 8388611: goto B:19:0x0010\l case 8388613: goto B:18:0x000b\l default: goto B:16:0x0003  (LINE:206)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:226)\l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"Invalid slide direction\" \l0x0007: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateEnd androidx.transition.Slide$CalculateSlide  (LINE:223)\l0x000d: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|0x0029: IPUT  (r3 I:int A[D('slideEdge' int)]), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideEdge int  (LINE:228)\l0x002b: NEW_INSTANCE  (r0 I:androidx.transition.SidePropagation) =  androidx.transition.SidePropagation  (LINE:229)\l0x002d: INVOKE  (r0 I:androidx.transition.SidePropagation) type: DIRECT call: androidx.transition.SidePropagation.\<init\>():void A[MD:():void (m)]\l0x0030: INVOKE  \l  (r0 I:androidx.transition.SidePropagation A[D('propagation' androidx.transition.SidePropagation)])\l  (r3 I:int A[D('slideEdge' int)])\l type: VIRTUAL call: androidx.transition.SidePropagation.setSide(int):void A[MD:(int):void (m)] (LINE:230)\l0x0033: INVOKE  \l  (r2 I:androidx.transition.Slide)\l  (r0 I:androidx.transition.TransitionPropagation A[D('propagation' androidx.transition.SidePropagation)])\l type: VIRTUAL call: androidx.transition.Slide.setPropagation(androidx.transition.TransitionPropagation):void A[MD:(androidx.transition.TransitionPropagation):void (m)] (LINE:231)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|RETURN\l|0x0036: RETURN    (LINE:232)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|0x0010: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateStart androidx.transition.Slide$CalculateSlide  (LINE:220)\l0x0012: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|0x0015: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateBottom androidx.transition.Slide$CalculateSlide  (LINE:217)\l0x0017: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|0x001a: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateTop androidx.transition.Slide$CalculateSlide  (LINE:211)\l0x001c: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|0x001f: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateRight androidx.transition.Slide$CalculateSlide  (LINE:214)\l0x0021: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|0x0024: SGET  (r0 I:androidx.transition.Slide$CalculateSlide) =  androidx.transition.Slide.sCalculateLeft androidx.transition.Slide$CalculateSlide  (LINE:208)\l0x0026: IPUT  (r0 I:androidx.transition.Slide$CalculateSlide), (r2 I:androidx.transition.Slide) androidx.transition.Slide.mSlideCalculator androidx.transition.Slide$CalculateSlide \l}"];
MethodNode[shape=record,label="{public void androidx.transition.Slide.setSlideEdge((r2 'this' I:androidx.transition.Slide A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('slideEdge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0036 \-\> B:14:?, CROSS_EDGE: B:19:0x0010 \-\> B:24:0x0029, CROSS_EDGE: B:20:0x0015 \-\> B:24:0x0029, CROSS_EDGE: B:21:0x001a \-\> B:24:0x0029, CROSS_EDGE: B:22:0x001f \-\> B:24:0x0029, CROSS_EDGE: B:23:0x0024 \-\> B:24:0x0029\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x0051: r0 'propagation' Landroidx\/transition\/SidePropagation;\l  \-1 \-0x0051: r3 'slideEdge' I\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_19;
Node_15 -> Node_20;
Node_15 -> Node_21;
Node_15 -> Node_22;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_18 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_19 -> Node_24;
Node_20 -> Node_24;
Node_21 -> Node_24;
Node_22 -> Node_24;
Node_23 -> Node_24;
}

