digraph "CFG forandroidx.transition.Slide.setSlideEdge(I)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|switch(r3) \{\l    case 3: goto L12;\l    case 5: goto L11;\l    case 48: goto L10;\l    case 80: goto L9;\l    case 8388611: goto L8;\l    case 8388613: goto L5;\l    default: goto L2;\l\}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003}"];
Node_17 [shape=record,label="{17\:\ 0x000a|throw new java.lang.IllegalArgumentException(\"Invalid slide direction\")\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|r2.mSlideCalculator = androidx.transition.Slide.sCalculateEnd\l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|r2.mSlideEdge = r3\landroidx.transition.SidePropagation r0 = new androidx.transition.SidePropagation()\lr0.setSide(r3)\lsetPropagation(r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0036|RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|r2.mSlideCalculator = androidx.transition.Slide.sCalculateStart\l}"];
Node_20 [shape=record,label="{20\:\ 0x0015|r2.mSlideCalculator = androidx.transition.Slide.sCalculateBottom\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a|r2.mSlideCalculator = androidx.transition.Slide.sCalculateTop\l}"];
Node_22 [shape=record,label="{22\:\ 0x001f|r2.mSlideCalculator = androidx.transition.Slide.sCalculateRight\l}"];
Node_23 [shape=record,label="{23\:\ 0x0024|r2.mSlideCalculator = androidx.transition.Slide.sCalculateLeft\l}"];
MethodNode[shape=record,label="{public void androidx.transition.Slide.setSlideEdge((r2v0 'this' androidx.transition.Slide A[IMMUTABLE_TYPE, THIS]), (r3v0 'slideEdge' int A[D('slideEdge' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0036 \-\> B:14:?, CROSS_EDGE: B:19:0x0010 \-\> B:24:0x0029, CROSS_EDGE: B:20:0x0015 \-\> B:24:0x0029, CROSS_EDGE: B:21:0x001a \-\> B:24:0x0029, CROSS_EDGE: B:22:0x001f \-\> B:24:0x0029, CROSS_EDGE: B:23:0x0024 \-\> B:24:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_15 -> Node_19;
Node_15 -> Node_20;
Node_15 -> Node_21;
Node_15 -> Node_22;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_14;
Node_18 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_14;
Node_19 -> Node_24;
Node_20 -> Node_24;
Node_21 -> Node_24;
Node_22 -> Node_24;
Node_23 -> Node_24;
}

