digraph "CFG forandroidx.transition.Slide.onDisappear(Landroid\/view\/ViewGroup;Landroid\/view\/View;Landroidx\/transition\/TransitionValues;Landroidx\/transition\/TransitionValues;)Landroid\/animation\/Animator;" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000}"];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r22 != null) goto L5\l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000c|int[] r14 = (int[]) r22.values.get(androidx.transition.Slide.PROPNAME_SCREEN_POSITION)\lfloat r15 = r21.getTranslationX()\lfloat r16 = r21.getTranslationY()\lfloat r17 = r19.mSlideCalculator.getGoneX(r20, r21)\lfloat r18 = r19.mSlideCalculator.getGoneY(r20, r21)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|RETURN\l|return androidx.transition.TranslationAnimationCreator.createAnimation(r21, r22, r14[0], r14[1], r15, r16, r17, r18, androidx.transition.Slide.sAccelerate, r19)\l}"];
MethodNode[shape=record,label="{public android.animation.Animator androidx.transition.Slide.onDisappear((r19v0 'this' androidx.transition.Slide A[IMMUTABLE_TYPE, THIS]), (r20v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'startValues' androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'endValues' androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0046 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.transition.Visibility.onDisappear(android.view.ViewGroup, android.view.View, androidx.transition.TransitionValues, androidx.transition.TransitionValues):android.animation.Animator]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

