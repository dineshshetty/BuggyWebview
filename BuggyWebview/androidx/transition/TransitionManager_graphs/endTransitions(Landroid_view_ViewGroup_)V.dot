digraph "CFG forandroidx.transition.TransitionManager.endTransitions(Landroid\/view\/ViewGroup;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|androidx.transition.TransitionManager.sPendingTransitions.remove(r4)\ljava.util.ArrayList r0 = getRunningTransitions().get(r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000f|if (r0 == null) goto L12\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011}"];
Node_18 [shape=record,label="{18\:\ 0x0015|if (r0.isEmpty() != false) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0017|java.util.ArrayList r1 = new java.util.ArrayList\<\>(r0)\lint r2 = r1.size() + (\-1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|LOOP_START\lLOOP:0: B:20:0x0022\-\>B:21:0x0024\lPHI: r2 \l  PHI: (r2v2 'i' int) = (r2v1 'i' int), (r2v3 'i' int) binds: [B:19:0x0017, B:21:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L8\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|LOOP_END\lLOOP:0: B:20:0x0022\-\>B:21:0x0024\l|androidx.transition.Transition r3 = r1.get(r2)\lr3.forceToEnd(r4)\lint r2 = r2 + (\-1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ 0x0030|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void androidx.transition.TransitionManager.endTransitions((r4v0 'sceneRoot' android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:21:0x0024 \-\> B:20:0x0022, CROSS_EDGE: B:18:0x0015 \-\> B:22:0x0030, CROSS_EDGE: B:16:0x000f \-\> B:22:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_20;
Node_23 -> Node_25;
Node_25 -> Node_14;
Node_24 -> Node_14;
Node_22 -> Node_14;
}

