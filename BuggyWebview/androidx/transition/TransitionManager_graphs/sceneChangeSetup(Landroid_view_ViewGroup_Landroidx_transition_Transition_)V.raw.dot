digraph "CFG forandroidx.transition.TransitionManager.sceneChangeSetup(Landroid\/view\/ViewGroup;Landroidx\/transition\/Transition;)V" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.collection.ArrayMap) =  type: STATIC call: androidx.transition.TransitionManager.getRunningTransitions():androidx.collection.ArrayMap A[MD:():androidx.collection.ArrayMap\<android.view.ViewGroup, java.util.ArrayList\<androidx.transition.Transition\>\> (m)] (LINE:309)\l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.collection.ArrayMap), (r3 I:java.lang.Object A[D('sceneRoot' android.view.ViewGroup)]) type: VIRTUAL call: androidx.collection.ArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)]\l0x0008: CHECK_CAST (r0 I:java.util.ArrayList) = (java.util.ArrayList) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('runningTransitions' java.util.ArrayList\<androidx.transition.Transition\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0026  (LINE:311)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r1 I:int) = (r0 I:java.util.ArrayList A[D('runningTransitions' java.util.ArrayList\<androidx.transition.Transition\>)]) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:28:0x0026 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|0x0012: INVOKE  (r1 I:java.util.Iterator) = (r0 I:java.util.ArrayList A[D('runningTransitions' java.util.ArrayList\<androidx.transition.Transition\>)]) type: VIRTUAL call: java.util.ArrayList.iterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:312)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|LOOP_START\lLOOP:0: B:25:0x0016\-\>B:27:0x001c\l|0x0016: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0026 \l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|LOOP_END\lLOOP:0: B:25:0x0016\-\>B:27:0x001c\l|0x001c: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)]\l0x0020: CHECK_CAST (r2 I:androidx.transition.Transition) = (androidx.transition.Transition) (r2 I:??[OBJECT, ARRAY]) \l0x0022: INVOKE  \l  (r2 I:androidx.transition.Transition A[D('runningTransition' androidx.transition.Transition)])\l  (r3 I:android.view.View A[D('sceneRoot' android.view.ViewGroup)])\l type: VIRTUAL call: androidx.transition.Transition.pause(android.view.View):void A[MD:(android.view.View):void (m)] (LINE:313)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0026|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0026|0x0026: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('transition' androidx.transition.Transition)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x002c  (LINE:317)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0028|0x0028: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:318)\l0x0029: INVOKE  \l  (r4 I:androidx.transition.Transition A[D('transition' androidx.transition.Transition)])\l  (r3 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)])\l  (r1 I:boolean)\l type: VIRTUAL call: androidx.transition.Transition.captureValues(android.view.ViewGroup, boolean):void A[MD:(android.view.ViewGroup, boolean):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: INVOKE  (r1 I:androidx.transition.Scene) = (r3 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup)]) type: STATIC call: androidx.transition.Scene.getCurrentScene(android.view.ViewGroup):androidx.transition.Scene A[MD:(android.view.ViewGroup):androidx.transition.Scene (m)] (LINE:322)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previousScene' androidx.transition.Scene)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:?  (LINE:323)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|0x0032: INVOKE  (r1 I:androidx.transition.Scene A[D('previousScene' androidx.transition.Scene)]) type: VIRTUAL call: androidx.transition.Scene.exit():void A[MD:():void (m)] (LINE:324)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0035|RETURN\lORIG_RETURN\l|0x0035: RETURN    (LINE:326)\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x0035: RETURN   A[SYNTHETIC] (LINE:326)\l}"];
MethodNode[shape=record,label="{private static void androidx.transition.TransitionManager.sceneChangeSetup((r3 I:android.view.ViewGroup A[D('sceneRoot' android.view.ViewGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.transition.Transition A[D('transition' androidx.transition.Transition), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:27:0x001c \-\> B:25:0x0016, CROSS_EDGE: B:31:0x0030 \-\> B:33:0x0035, CROSS_EDGE: B:28:0x0026 \-\> B:30:0x002c, CROSS_EDGE: B:23:0x0010 \-\> B:28:0x0026, CROSS_EDGE: B:21:0x000a \-\> B:28:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0025: r2 'runningTransition' Landroidx\/transition\/Transition;\l  0x000a\-0x0035: r0 'runningTransitions' Ljava\/util\/ArrayList;, signature: Ljava\/util\/ArrayList\<Landroidx\/transition\/Transition;\>;\l  0x0030\-0x0035: r1 'previousScene' Landroidx\/transition\/Scene;\l  \-1 \-0x0035: r3 'sceneRoot' Landroid\/view\/ViewGroup;\l  \-1 \-0x0035: r4 'transition' Landroidx\/transition\/Transition;\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_25;
Node_34 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_19;
Node_35 -> Node_19;
}

