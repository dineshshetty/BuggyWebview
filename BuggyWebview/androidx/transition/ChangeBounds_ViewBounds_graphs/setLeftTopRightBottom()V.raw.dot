digraph "CFG forandroidx.transition.ChangeBounds.ViewBounds.setLeftTopRightBottom()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.view.View) = (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mView android.view.View  (LINE:494)\l0x0002: IGET  (r1 I:int) = (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mLeft int \l0x0004: IGET  (r2 I:int) = (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mTop int \l0x0006: IGET  (r3 I:int) = (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mRight int \l0x0008: IGET  (r4 I:int) = (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mBottom int \l0x000a: INVOKE  (r0 I:android.view.View), (r1 I:int), (r2 I:int), (r3 I:int), (r4 I:int) type: STATIC call: androidx.transition.ViewUtils.setLeftTopRightBottom(android.view.View, int, int, int, int):void A[MD:(android.view.View, int, int, int, int):void (m)]\l0x000d: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:495)\l0x000e: IPUT  (r0 I:int), (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mTopLeftCalls int \l0x0010: IPUT  (r0 I:int), (r5 I:androidx.transition.ChangeBounds$ViewBounds) androidx.transition.ChangeBounds.ViewBounds.mBottomRightCalls int  (LINE:496)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:497)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.transition.ChangeBounds.ViewBounds.setLeftTopRightBottom((r5 'this' I:androidx.transition.ChangeBounds$ViewBounds A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

