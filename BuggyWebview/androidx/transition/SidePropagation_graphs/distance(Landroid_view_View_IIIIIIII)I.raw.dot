digraph "CFG forandroidx.transition.SidePropagation.distance(Landroid\/view\/View;IIIIIIII)I" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r6 I:androidx.transition.SidePropagation) androidx.transition.SidePropagation.mSide int  (LINE:125)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0004: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0006: CONST  (r5 I:??[int, float, short, byte, char]) = (8388611(0x800003, float:1.1754948E\-38) ??[int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0009|0x0009: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0019 \l}"];
Node_38 [shape=record,label="{38\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r7 I:android.view.View A[D('sceneRoot' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:126)\l}"];
Node_39 [shape=record,label="{39\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0012 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0011|0x0011: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0012|0x0012: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0016  (LINE:128)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0016|0x0016: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0017|0x0017: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isRtl' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x002d|0x002d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:136)\l}"];
Node_57 [shape=record,label="{57\:\ 0x002e|0x002e: SWITCH  (r0 I:?? A[D('side' int)])\l case 3: goto B:62:0x0053\l case 5: goto B:61:0x0048\l case 48: goto B:60:0x003d\l case 80: goto B:59:0x0032\l default: goto B:67:?  (LINE:137)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0032|0x0032: ARITH  (r2 I:int) = (r9 I:int A[D('viewY' int)]) \- (r13 I:int A[D('top' int)])  (LINE:148)\l0x0034: ARITH  (r3 I:int) = (r10 I:int A[D('epicenterX' int)]) \- (r8 I:int A[D('viewX' int)]) \l0x0036: INVOKE  (r3 I:int) = (r3 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x003a: ARITH  (r1 I:int A[D('distance' int)]) = (r2 I:int) + (r3 I:int) \l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN  (r1 I:int A[D('distance' int)]) A[SYNTHETIC] (LINE:151)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_60 [shape=record,label="{60\:\ 0x003d|0x003d: ARITH  (r2 I:int) = (r15 I:int A[D('bottom' int)]) \- (r9 I:int A[D('viewY' int)])  (LINE:142)\l0x003f: ARITH  (r3 I:int) = (r10 I:int A[D('epicenterX' int)]) \- (r8 I:int A[D('viewX' int)]) \l0x0041: INVOKE  (r3 I:int) = (r3 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0045: ARITH  (r1 I:int A[D('distance' int)]) = (r2 I:int) + (r3 I:int) \l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN  (r1 I:int A[D('distance' int)]) A[SYNTHETIC] (LINE:151)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0048|0x0048: ARITH  (r2 I:int) = (r8 I:int A[D('viewX' int)]) \- (r12 I:int A[D('left' int)])  (LINE:145)\l0x004a: ARITH  (r3 I:int) = (r11 I:int A[D('epicenterY' int)]) \- (r9 I:int A[D('viewY' int)]) \l0x004c: INVOKE  (r3 I:int) = (r3 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0050: ARITH  (r1 I:int A[D('distance' int)]) = (r2 I:int) + (r3 I:int) \l}"];
Node_66 [shape=record,label="{66\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN  (r1 I:int A[D('distance' int)]) A[SYNTHETIC] (LINE:151)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0053|0x0053: ARITH  (r2 I:int) = (r14 I:int A[D('right' int)]) \- (r8 I:int A[D('viewX' int)])  (LINE:139)\l0x0055: ARITH  (r3 I:int) = (r11 I:int A[D('epicenterY' int)]) \- (r9 I:int A[D('viewY' int)]) \l0x0057: INVOKE  (r3 I:int) = (r3 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x005b: ARITH  (r1 I:int A[D('distance' int)]) = (r2 I:int) + (r3 I:int) \l}"];
Node_63 [shape=record,label="{63\:\ 0x005e|RETURN\lORIG_RETURN\l|0x005e: RETURN  (r1 I:int A[D('distance' int)])  (LINE:151)\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x005e: RETURN  (r1 I:int A[D('distance' int)]) A[SYNTHETIC] (LINE:151)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0019|0x0019: CONST  (r5 I:??[int, float, short, byte, char]) = (8388613(0x800005, float:1.175495E\-38) ??[int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x002b \l}"];
Node_48 [shape=record,label="{48\:\ 0x001e|0x001e: INVOKE  (r0 I:int) = (r7 I:android.view.View A[D('sceneRoot' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getLayoutDirection(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:130)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0025 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0024|0x0024: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x0025|0x0025: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isRtl' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0029  (LINE:132)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0028|0x0028: CONST  (r1 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0029|0x0029: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isRtl' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x002b|0x002b: IGET  (r0 I:int A[D('side' int)]) = (r6 I:androidx.transition.SidePropagation) androidx.transition.SidePropagation.mSide int  (LINE:134)\l}"];
MethodNode[shape=record,label="{private int androidx.transition.SidePropagation.distance((r6 'this' I:androidx.transition.SidePropagation A[IMMUTABLE_TYPE, THIS]), (r7 I:android.view.View A[D('sceneRoot' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('viewX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('viewY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('epicenterX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('epicenterY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('top' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('bottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:60:0x003d \-\> B:63:0x005e, CROSS_EDGE: B:61:0x0048 \-\> B:63:0x005e, CROSS_EDGE: B:62:0x0053 \-\> B:63:0x005e, CROSS_EDGE: B:57:0x002e \-\> B:63:0x005e, CROSS_EDGE: B:42:0x0013 \-\> B:45:0x0017, CROSS_EDGE: B:39:0x000f \-\> B:41:0x0012, CROSS_EDGE: B:54:0x0029 \-\> B:56:0x002d, CROSS_EDGE: B:52:0x0026 \-\> B:54:0x0029, CROSS_EDGE: B:49:0x0022 \-\> B:51:0x0025, CROSS_EDGE: B:55:0x002b \-\> B:56:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0018: r0 'isRtl' Z\l  0x0018\-0x0019: r0 'side' I\l  0x0026\-0x002a: r0 'isRtl' Z\l  0x002a\-0x002b: r0 'side' I\l  0x002d\-0x0071: r0 'side' I\l  0x002e\-0x0071: r1 'distance' I\l  \-1 \-0x0071: r7 'sceneRoot' Landroid\/view\/View;\l  \-1 \-0x0071: r8 'viewX' I\l  \-1 \-0x0071: r9 'viewY' I\l  \-1 \-0x0071: r10 'epicenterX' I\l  \-1 \-0x0071: r11 'epicenterY' I\l  \-1 \-0x0071: r12 'left' I\l  \-1 \-0x0071: r13 'top' I\l  \-1 \-0x0071: r14 'right' I\l  \-1 \-0x0071: r15 'bottom' I\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_46;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_44;
Node_42 -> Node_45[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_60;
Node_57 -> Node_61;
Node_57 -> Node_62;
Node_57 -> Node_67;
Node_59 -> Node_64;
Node_64 -> Node_35;
Node_60 -> Node_65;
Node_65 -> Node_35;
Node_61 -> Node_66;
Node_66 -> Node_35;
Node_62 -> Node_63;
Node_63 -> Node_35;
Node_67 -> Node_35;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_55;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_56;
Node_55 -> Node_56;
}

