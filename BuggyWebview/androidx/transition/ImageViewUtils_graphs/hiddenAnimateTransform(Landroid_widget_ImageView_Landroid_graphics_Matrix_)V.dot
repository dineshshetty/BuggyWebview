digraph "CFG forandroidx.transition.ImageViewUtils.hiddenAnimateTransform(Landroid\/widget\/ImageView;Landroid\/graphics\/Matrix;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0002|if (androidx.transition.ImageViewUtils.sTryHiddenAnimateTransform == false) goto L11\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{NoSuchMethodError \-\> 0x0008, blocks: (B:17:0x0004), top: B:22:0x0004 \}\lCatch: NoSuchMethodError \-\> 0x0008\l|r2.animateTransform(r3)     \/\/ Catch: java.lang.NoSuchMethodError \-\> L8\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0008|ExcHandler: NoSuchMethodError \-\> 0x0008\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009|androidx.transition.ImageViewUtils.sTryHiddenAnimateTransform = false\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|RETURN\lORIG_RETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void androidx.transition.ImageViewUtils.hiddenAnimateTransform((r2v0 'view' android.widget.ImageView A[D('view' android.widget.ImageView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'matrix' android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0004 \-\> B:21:0x000c, CROSS_EDGE: B:20:0x0009 \-\> B:21:0x000c, CROSS_EDGE: B:22:0x0004 \-\> B:19:0x0008\lINLINE_NOT_NEEDED\lTryCatch #0 \{NoSuchMethodError \-\> 0x0008, blocks: (B:17:0x0004), top: B:22:0x0004 \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_22[style=dashed];
Node_16 -> Node_24;
Node_22 -> Node_17;
Node_22 -> Node_19;
Node_17 -> Node_23;
Node_17 -> Node_25;
Node_23 -> Node_19;
Node_25 -> Node_14;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_24 -> Node_14;
}

