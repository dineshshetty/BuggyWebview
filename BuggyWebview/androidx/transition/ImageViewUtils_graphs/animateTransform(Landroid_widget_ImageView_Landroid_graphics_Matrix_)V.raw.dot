digraph "CFG forandroidx.transition.ImageViewUtils.animateTransform(Landroid\/widget\/ImageView;Landroid\/graphics\/Matrix;)V" {
Node_34 [shape=record,label="{34\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_36 [shape=record,label="{36\:\ 0x0000|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int  (LINE:45)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (29 ??[int, float, short, byte, char]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char]) \< (r1 I:??[int, byte, short, char])  \-\> B:39:0x000b \l}"];
Node_38 [shape=record,label="{38\:\ 0x0006|0x0006: INVOKE  \l  (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)])\l  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.widget.ImageView.animateTransform(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:46)\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x0078: RETURN   A[SYNTHETIC] (LINE:83)\l}"];
Node_35 [shape=record,label="{35\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_39 [shape=record,label="{39\:\ 0x000b|0x000b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:47)\l}"];
Node_40 [shape=record,label="{40\:\ 0x000c|0x000c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('matrix' android.graphics.Matrix)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0037 \l}"];
Node_41 [shape=record,label="{41\:\ 0x000e|0x000e: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:50)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:?  (LINE:51)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0014|0x0014: INVOKE  (r2 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getWidth():int A[MD:():int (c)] (LINE:52)\l0x0018: INVOKE  (r3 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getPaddingLeft():int A[MD:():int (c)]\l0x001c: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x001d: INVOKE  (r3 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getPaddingRight():int A[MD:():int (c)]\l0x0021: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0022: INVOKE  (r3 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getHeight():int A[MD:():int (c)] (LINE:53)\l0x0026: INVOKE  (r4 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getPaddingTop():int A[MD:():int (c)]\l0x002a: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x002b: INVOKE  (r4 I:int) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getPaddingBottom():int A[MD:():int (c)]\l0x002f: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0030: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r0 I:int)\l  (r0 I:int)\l  (r2 I:int A[D('vwidth' int)])\l  (r3 I:int A[D('vheight' int)])\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:54)\l0x0033: INVOKE  (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.invalidate():void A[MD:():void (c)] (LINE:55)\l}"];
Node_66 [shape=record,label="{66\:\ ?|SYNTHETIC\lRETURN\l|0x0078: RETURN   A[SYNTHETIC] (LINE:83)\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\l|0x0078: RETURN   A[SYNTHETIC] (LINE:83)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0037|0x0037: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0039: CONST  (r2 I:??[int, float, short, byte, char]) = (21 ??[int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x003b|0x003b: IF  (r1 I:??[int, byte, short, char]) \< (r2 I:??[int, byte, short, char])  \-\> B:48:0x0041 \l}"];
Node_47 [shape=record,label="{47\:\ 0x003d|0x003d: INVOKE  \l  (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)])\l  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: STATIC call: androidx.transition.ImageViewUtils.hiddenAnimateTransform(android.widget.ImageView, android.graphics.Matrix):void A[MD:(android.widget.ImageView, android.graphics.Matrix):void (m)] (LINE:58)\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\l|0x0078: RETURN   A[SYNTHETIC] (LINE:83)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0041|0x0041: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.getDrawable():android.graphics.drawable.Drawable A[MD:():android.graphics.drawable.Drawable (c)] (LINE:60)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0045|0x0045: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawable' android.graphics.drawable.Drawable)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:?  (LINE:61)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0047|0x0047: INVOKE  (r2 I:int) = (r1 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicWidth():int A[MD:():int (c)] (LINE:62)\l0x004b: INVOKE  (r3 I:int) = (r1 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)]) type: VIRTUAL call: android.graphics.drawable.Drawable.getIntrinsicHeight():int A[MD:():int (c)] (LINE:63)\l0x004f: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable A[D('drawable' android.graphics.drawable.Drawable)])\l  (r0 I:int)\l  (r0 I:int)\l  (r2 I:int)\l  (r3 I:int)\l type: VIRTUAL call: android.graphics.drawable.Drawable.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (c)] (LINE:62)\l0x0052: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:64)\l0x0053: INVOKE   type: STATIC call: androidx.transition.ImageViewUtils.fetchDrawMatrixField():void A[MD:():void (m)] (LINE:65)\l0x0056: SGET  (r2 I:java.lang.reflect.Field) =  androidx.transition.ImageViewUtils.sDrawMatrixField java.lang.reflect.Field  (LINE:66)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0058|0x0058: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0070 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0070|0x0070: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawMatrix' android.graphics.Matrix)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0075  (LINE:77)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0072|0x0072: INVOKE  \l  (r0 I:android.graphics.Matrix A[D('drawMatrix' android.graphics.Matrix)])\l  (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix)])\l type: VIRTUAL call: android.graphics.Matrix.set(android.graphics.Matrix):void A[MD:(android.graphics.Matrix):void (c)] (LINE:78)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0075|0x0075: INVOKE  (r5 I:android.widget.ImageView A[D('view' android.widget.ImageView)]) type: VIRTUAL call: android.widget.ImageView.invalidate():void A[MD:():void (c)] (LINE:80)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0078|RETURN\lORIG_RETURN\l|0x0078: RETURN    (LINE:83)\l}"];
Node_61 [shape=record,label="{61\:\ 0x005a|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_52 [shape=record,label="{52\:\ 0x005a|TRY_ENTER\lTryCatch #0 \{IllegalAccessException \-\> 0x006f, blocks: (B:52:0x005a, B:54:0x0063), top: B:61:0x005a \}\lCatch: IllegalAccessException \-\> 0x006f\l|0x005a: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.lang.reflect.Field), (r5 I:java.lang.Object A[D('view' android.widget.ImageView)]) type: VIRTUAL call: java.lang.reflect.Field.get(java.lang.Object):java.lang.Object A[Catch: IllegalAccessException \-\> 0x006f, MD:(java.lang.Object):java.lang.Object throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_ENTER] (LINE:68)\l0x005e: CHECK_CAST (r2 I:android.graphics.Matrix) = (android.graphics.Matrix) (r2 I:??[OBJECT, ARRAY]) A[Catch: IllegalAccessException \-\> 0x006f]\l0x0060: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawMatrix' android.graphics.Matrix)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0061|0x0061: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drawMatrix' android.graphics.Matrix)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0070  (LINE:69)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0063|TRY_LEAVE\lTryCatch #0 \{IllegalAccessException \-\> 0x006f, blocks: (B:52:0x005a, B:54:0x0063), top: B:61:0x005a \}\lCatch: IllegalAccessException \-\> 0x006f\l|0x0063: NEW_INSTANCE  (r2 I:android.graphics.Matrix) =  android.graphics.Matrix A[Catch: IllegalAccessException \-\> 0x006f] (LINE:70)\l0x0065: INVOKE  (r2 I:android.graphics.Matrix) type: DIRECT call: android.graphics.Matrix.\<init\>():void A[Catch: IllegalAccessException \-\> 0x006f, MD:():void (c)]\l0x0068: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('drawMatrix' android.graphics.Matrix)]) = (r2 I:??[OBJECT, ARRAY]) \l0x0069: SGET  (r2 I:java.lang.reflect.Field) =  androidx.transition.ImageViewUtils.sDrawMatrixField java.lang.reflect.Field A[Catch: IllegalAccessException \-\> 0x006f] (LINE:71)\l0x006b: INVOKE  \l  (r2 I:java.lang.reflect.Field)\l  (r5 I:java.lang.Object A[D('view' android.widget.ImageView)])\l  (r0 I:java.lang.Object A[D('drawMatrix' android.graphics.Matrix)])\l type: VIRTUAL call: java.lang.reflect.Field.set(java.lang.Object, java.lang.Object):void A[Catch: IllegalAccessException \-\> 0x006f, MD:(java.lang.Object, java.lang.Object):void throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException (c), TRY_LEAVE]\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_56 [shape=record,label="{56\:\ 0x006f|ExcHandler: IllegalAccessException \-\> 0x006f\l|0x006f: MOVE_EXCEPTION  (r2 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x006f] (LINE:73)\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|0x0078: RETURN   A[SYNTHETIC] (LINE:83)\l}"];
MethodNode[shape=record,label="{public static void androidx.transition.ImageViewUtils.animateTransform((r5 I:android.widget.ImageView A[D('view' android.widget.ImageView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.Matrix A[D('matrix' android.graphics.Matrix), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:43:0x0014 \-\> B:60:0x0078, CROSS_EDGE: B:42:0x0012 \-\> B:60:0x0078, CROSS_EDGE: B:47:0x003d \-\> B:60:0x0078, CROSS_EDGE: B:59:0x0075 \-\> B:60:0x0078, CROSS_EDGE: B:57:0x0070 \-\> B:59:0x0075, CROSS_EDGE: B:54:0x0063 \-\> B:57:0x0070, CROSS_EDGE: B:56:0x006f \-\> B:57:0x0070, CROSS_EDGE: B:53:0x0061 \-\> B:57:0x0070, CROSS_EDGE: B:61:0x005a \-\> B:56:0x006f, CROSS_EDGE: B:49:0x0045 \-\> B:60:0x0078\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x0036: r1 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  0x0022\-0x0036: r2 'vwidth' I\l  0x0030\-0x0036: r3 'vheight' I\l  0x0053\-0x0078: r0 'drawMatrix' Landroid\/graphics\/Matrix;\l  0x0045\-0x0078: r1 'drawable' Landroid\/graphics\/drawable\/Drawable;\l  \-1 \-0x0078: r5 'view' Landroid\/widget\/ImageView;\l  \-1 \-0x0078: r6 'matrix' Landroid\/graphics\/Matrix;\lTryCatch #0 \{IllegalAccessException \-\> 0x006f, blocks: (B:52:0x005a, B:54:0x0063), top: B:61:0x005a \}\l}"];
MethodNode -> Node_34;Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_63;
Node_63 -> Node_35;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_67;
Node_43 -> Node_66;
Node_66 -> Node_35;
Node_67 -> Node_35;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_64;
Node_64 -> Node_35;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_65;
Node_50 -> Node_51;
Node_51 -> Node_57;
Node_51 -> Node_61[style=dashed];
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_35;
Node_61 -> Node_52;
Node_61 -> Node_56;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_57;
Node_54 -> Node_57;
Node_54 -> Node_62;
Node_62 -> Node_56;
Node_56 -> Node_57;
Node_65 -> Node_35;
}

