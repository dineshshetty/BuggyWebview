digraph "CFG forandroidx.transition.FragmentTransitionSupport.addTargets(Ljava\/lang\/Object;Ljava\/util\/ArrayList;)V" {
subgraph cluster_Region_391335952 {
label = "R(2:1|(2:(1:3)|(1:(2:7|(1:9))(1:(2:14|(1:(2:16|(1:18))))(0)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.transition.Transition androidx.transition.Transition r0 = (androidx.transition.Transition) r6\l}"];
subgraph cluster_Region_644581729 {
label = "R(2:(1:3)|(1:(2:7|(1:9))(1:(2:14|(1:(2:16|(1:18))))(0))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1543100156 {
label = "IF [B:3:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_669271260 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1300786945 {
label = "R(1:(2:7|(1:9))(1:(2:14|(1:(2:16|(1:18))))(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1979139025 {
label = "IF [B:6:0x0008] THEN: R(2:7|(1:9)) ELSE: R(1:(2:14|(1:(2:16|(1:18))))(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0008|if ((r0 instanceof androidx.transition.TransitionSet) != false) goto L7\l}"];
subgraph cluster_Region_133564591 {
label = "R(2:7|(1:9))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000a|androidx.transition.TransitionSet androidx.transition.TransitionSet r1 = (androidx.transition.TransitionSet) r0\lint int r2 = r1.getTransitionCount()\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_953360644 {
label = "LOOP:0: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0012|LOOP_START\lLOOP:0: B:8:0x0012\-\>B:9:0x0014\lPHI: r3 \l  PHI: (r3v4 'i' int) = (r3v3 'i' int), (r3v5 'i' int) binds: [B:7:0x000a, B:9:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L9\l}"];
subgraph cluster_Region_1404623166 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0014|LOOP_END\lLOOP:0: B:8:0x0012\-\>B:9:0x0014\l|androidx.transition.Transition androidx.transition.Transition r4 = r1.getTransitionAt(r3)\laddTargets(r4, r7)\lr3++\l}"];
}
}
}
subgraph cluster_Region_2083144792 {
label = "R(1:(2:14|(1:(2:16|(1:18))))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_170400657 {
label = "IF [B:12:0x0023] THEN: R(2:14|(1:(2:16|(1:18)))) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0023|if (hasSimpleTarget(r0) == false) goto L14\l}"];
subgraph cluster_Region_527659550 {
label = "R(2:14|(1:(2:16|(1:18))))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0025|java.util.List java.util.List\<android.view.View\> r1 = r0.getTargets()\l}"];
subgraph cluster_Region_116451901 {
label = "R(1:(2:16|(1:18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1741785663 {
label = "IF [B:14:0x002d] THEN: R(2:16|(1:18)) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002d|if (isNullOrEmpty(r1) != false) goto L16\l}"];
subgraph cluster_Region_770695623 {
label = "R(2:16|(1:18))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002f|int int r2 = r7.size()\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_688428518 {
label = "LOOP:1: (1:18)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0034|LOOP_START\lLOOP:1: B:16:0x0034\-\>B:17:0x0036\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:15:0x002f, B:17:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L18\l}"];
subgraph cluster_Region_1347765226 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0036|LOOP_END\lLOOP:1: B:16:0x0034\-\>B:17:0x0036\l|r0.addTarget(r7.get(r3))\lr3++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_62364827 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0006}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0043|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ ?|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0043|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ ?|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0043|ORIG_RETURN\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.transition.FragmentTransitionSupport.addTargets((r5v0 'this' androidx.transition.FragmentTransitionSupport A[IMMUTABLE_TYPE, THIS]), (r6v0 'transitionObj' java.lang.Object A[D('transitionObj' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'views' java.util.ArrayList\<android.view.View\> A[D('views' java.util.ArrayList\<android.view.View\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0014 \-\> B:8:0x0012, CROSS_EDGE: B:19:0x0043 \-\> B:1:?, BACK_EDGE: B:17:0x0036 \-\> B:16:0x0034, CROSS_EDGE: B:16:0x0034 \-\> B:19:0x0043, CROSS_EDGE: B:14:0x002d \-\> B:19:0x0043, CROSS_EDGE: B:12:0x0023 \-\> B:19:0x0043\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (Ljava\/lang\/Object;Ljava\/util\/ArrayList\<Landroid\/view\/View;\>;)V\lMETHOD_OVERRIDE: [androidx.fragment.app.FragmentTransitionImpl.addTargets(java.lang.Object, java.util.ArrayList\<android.view.View\>):void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_20[style=dashed];
Node_9 -> Node_8;
Node_12 -> Node_13;
Node_12 -> Node_22[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_19[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_17 -> Node_16;
Node_0 -> Node_2;
Node_5 -> Node_6;
Node_20 -> Node_23;
Node_23 -> Node_1;
Node_11 -> Node_12;
Node_21 -> Node_24;
Node_24 -> Node_1;
Node_19 -> Node_1;
Node_22 -> Node_1;
}

