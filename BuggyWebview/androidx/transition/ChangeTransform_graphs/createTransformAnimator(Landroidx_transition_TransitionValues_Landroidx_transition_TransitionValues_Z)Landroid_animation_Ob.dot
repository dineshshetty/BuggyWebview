digraph "CFG forandroidx.transition.ChangeTransform.createTransformAnimator(Landroidx\/transition\/TransitionValues;Landroidx\/transition\/TransitionValues;Z)Landroid\/animation\/ObjectAnimator;" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|android.graphics.Matrix r2 = (android.graphics.Matrix) r21.values.get(androidx.transition.ChangeTransform.PROPNAME_MATRIX)\landroid.graphics.Matrix r3 = (android.graphics.Matrix) r22.values.get(androidx.transition.ChangeTransform.PROPNAME_MATRIX)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0016|if (r2 != null) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0018|android.graphics.Matrix r2 = androidx.transition.MatrixUtils.IDENTITY_MATRIX\l}"];
Node_18 [shape=record,label="{18\:\ 0x001a|PHI: r2 \l  PHI: (r2v3 'startMatrix' android.graphics.Matrix) = (r2v2 'startMatrix' android.graphics.Matrix), (r2v4 'startMatrix' android.graphics.Matrix) binds: [B:16:0x0016, B:17:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != null) goto L6\l}"];
Node_19 [shape=record,label="{19\:\ 0x001c|android.graphics.Matrix r3 = androidx.transition.MatrixUtils.IDENTITY_MATRIX\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|PHI: r3 \l  PHI: (r3v3 'endMatrix' android.graphics.Matrix) = (r3v2 'endMatrix' android.graphics.Matrix), (r3v4 'endMatrix' android.graphics.Matrix) binds: [B:18:0x001a, B:19:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0022|if (r2.equals(r3) == false) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0024|RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0026|androidx.transition.ChangeTransform$Transforms r11 = (androidx.transition.ChangeTransform.Transforms) r22.values.get(androidx.transition.ChangeTransform.PROPNAME_TRANSFORMS)\landroid.view.View r12 = r22.view\lsetIdentityTransforms(r12)\lfloat[] r13 = new float[9]\lr2.getValues(r13)\lfloat[] r14 = new float[9]\lr3.getValues(r14)\landroidx.transition.ChangeTransform$PathAnimatorMatrix r5 = new androidx.transition.ChangeTransform.PathAnimatorMatrix(r12, r13)\landroid.animation.PropertyValuesHolder r16 = android.animation.PropertyValuesHolder.ofObject(androidx.transition.ChangeTransform.NON_TRANSLATIONS_PROPERTY, new androidx.transition.FloatArrayEvaluator(new float[9]), new float[][]\{r13, r14\})\landroid.graphics.Path r10 = getPathMotion().getPath(r13[2], r13[5], r14[2], r14[5])\landroid.animation.PropertyValuesHolder r18 = androidx.transition.PropertyValuesHolderUtils.ofPointF(androidx.transition.ChangeTransform.TRANSLATIONS_PROPERTY, r10)\landroid.animation.ObjectAnimator r9 = android.animation.ObjectAnimator.ofPropertyValuesHolder(r5, new android.animation.PropertyValuesHolder[]\{r16, r18\})\lr7 = r3\landroidx.transition.ChangeTransform$3 r17 = new androidx.transition.ChangeTransform.C04913()\lr9.addListener(r17)\landroidx.transition.AnimatorUtils.addPauseListener(r9, r17)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0098|RETURN\l|return r9\l}"];
MethodNode[shape=record,label="{private android.animation.ObjectAnimator androidx.transition.ChangeTransform.createTransformAnimator((r20v0 'this' androidx.transition.ChangeTransform A[IMMUTABLE_TYPE, THIS]), (r21v0 'startValues' androidx.transition.TransitionValues A[D('startValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'endValues' androidx.transition.TransitionValues A[D('endValues' androidx.transition.TransitionValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'handleParentChange' boolean A[D('handleParentChange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:25:0x0098 \-\> B:14:?, CROSS_EDGE: B:18:0x001a \-\> B:20:0x001e, CROSS_EDGE: B:16:0x0016 \-\> B:18:0x001a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_14;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

