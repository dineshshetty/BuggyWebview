digraph "CFG forandroidx.annotation.RestrictTo.Scope.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:65)\l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"LIBRARY\" \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0005: INVOKE  (r0 I:androidx.annotation.RestrictTo$Scope), (r1 I:java.lang.String), (r2 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0008: SPUT  (r0 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.LIBRARY androidx.annotation.RestrictTo$Scope \l0x000a: NEW_INSTANCE  (r1 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:71)\l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"LIBRARY_GROUP\" \l0x000e: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000f: INVOKE  (r1 I:androidx.annotation.RestrictTo$Scope), (r3 I:java.lang.String), (r4 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0012: SPUT  (r1 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP androidx.annotation.RestrictTo$Scope \l0x0014: NEW_INSTANCE  (r3 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:85)\l0x0016: CONST_STR  (r5 I:java.lang.String) =  \"LIBRARY_GROUP_PREFIX\" \l0x0018: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0019: INVOKE  (r3 I:androidx.annotation.RestrictTo$Scope), (r5 I:java.lang.String), (r6 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x001c: SPUT  (r3 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP_PREFIX androidx.annotation.RestrictTo$Scope \l0x001e: NEW_INSTANCE  (r5 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:93)\l0x0020: CONST_STR  (r7 I:java.lang.String) =  \"GROUP_ID\" \l0x0022: CONST  (r8 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char]) \l0x0023: INVOKE  (r5 I:androidx.annotation.RestrictTo$Scope), (r7 I:java.lang.String), (r8 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0026: SPUT  (r5 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.GROUP_ID androidx.annotation.RestrictTo$Scope \l0x0028: NEW_INSTANCE  (r7 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:99)\l0x002a: CONST_STR  (r9 I:java.lang.String) =  \"TESTS\" \l0x002c: CONST  (r10 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x002d: INVOKE  (r7 I:androidx.annotation.RestrictTo$Scope), (r9 I:java.lang.String), (r10 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x0030: SPUT  (r7 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.TESTS androidx.annotation.RestrictTo$Scope \l0x0032: NEW_INSTANCE  (r9 I:androidx.annotation.RestrictTo$Scope) =  androidx.annotation.RestrictTo$Scope  (LINE:107)\l0x0034: CONST_STR  (r11 I:java.lang.String) =  \"SUBCLASSES\" \l0x0036: CONST  (r12 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char]) \l0x0037: INVOKE  (r9 I:androidx.annotation.RestrictTo$Scope), (r11 I:java.lang.String), (r12 I:int) type: DIRECT call: androidx.annotation.RestrictTo.Scope.\<init\>(java.lang.String, int):void A[MD:(java.lang.String, int):void (m)]\l0x003a: SPUT  (r9 I:androidx.annotation.RestrictTo$Scope) androidx.annotation.RestrictTo.Scope.SUBCLASSES androidx.annotation.RestrictTo$Scope \l0x003c: CONST  (r11 I:??[int, float, short, byte, char]) = (6 ??[int, float, short, byte, char])  (LINE:60)\l0x003d: NEW_ARRAY  (r11 I:androidx.annotation.RestrictTo$Scope[]) = (r11 I:int A[IMMUTABLE_TYPE]) type: androidx.annotation.RestrictTo$Scope[] \l0x003f: APUT  (r11 I:??[OBJECT, ARRAY][]), (r2 I:??[int, short, byte, char]), (r0 I:??[OBJECT, ARRAY]) \l0x0041: APUT  (r11 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY]) \l0x0043: APUT  (r11 I:??[OBJECT, ARRAY][]), (r6 I:??[int, short, byte, char]), (r3 I:??[OBJECT, ARRAY]) \l0x0045: APUT  (r11 I:??[OBJECT, ARRAY][]), (r8 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) \l0x0047: APUT  (r11 I:??[OBJECT, ARRAY][]), (r10 I:??[int, short, byte, char]), (r7 I:??[OBJECT, ARRAY]) \l0x0049: APUT  (r11 I:??[OBJECT, ARRAY][]), (r12 I:??[int, short, byte, char]), (r9 I:??[OBJECT, ARRAY]) \l0x004b: SPUT  (r11 I:androidx.annotation.RestrictTo$Scope[]) androidx.annotation.RestrictTo.Scope.$VALUES androidx.annotation.RestrictTo$Scope[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x004d|RETURN\l|0x004d: RETURN   \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static void androidx.annotation.RestrictTo.Scope.\<clinit\>()  | USE_LINES_HINTS\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

