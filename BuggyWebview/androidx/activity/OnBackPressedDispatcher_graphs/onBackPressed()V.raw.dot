digraph "CFG forandroidx.activity.OnBackPressedDispatcher.onBackPressed()V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayDeque\<androidx.activity.OnBackPressedCallback\>) = (r3 I:androidx.activity.OnBackPressedDispatcher) androidx.activity.OnBackPressedDispatcher.mOnBackPressedCallbacks java.util.ArrayDeque  (LINE:187)\l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.ArrayDeque) type: VIRTUAL call: java.util.ArrayDeque.descendingIterator():java.util.Iterator A[MD:():java.util.Iterator\<E\> (c)] (LINE:188)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0006|LOOP_START\lLOOP:0: B:20:0x0006\-\>B:23:0x0016\l|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator\<androidx.activity.OnBackPressedCallback\>)]) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[MD:():boolean (c)] (LINE:189)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x001d \l}"];
Node_22 [shape=record,label="{22\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator A[D('iterator' java.util.Iterator\<androidx.activity.OnBackPressedCallback\>)]) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[MD:():E (c)] (LINE:190)\l0x0010: CHECK_CAST (r1 I:androidx.activity.OnBackPressedCallback) = (androidx.activity.OnBackPressedCallback) (r1 I:??[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:boolean) = (r1 I:androidx.activity.OnBackPressedCallback A[D('callback' androidx.activity.OnBackPressedCallback)]) type: VIRTUAL call: androidx.activity.OnBackPressedCallback.isEnabled():boolean A[MD:():boolean (m)] (LINE:191)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|LOOP_END\lLOOP:0: B:20:0x0006\-\>B:23:0x0016\l|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0006 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0018|0x0018: INVOKE  (r1 I:androidx.activity.OnBackPressedCallback A[D('callback' androidx.activity.OnBackPressedCallback)]) type: VIRTUAL call: androidx.activity.OnBackPressedCallback.handleOnBackPressed():void A[MD:():void (m)] (LINE:192)\l}"];
Node_25 [shape=record,label="{25\:\ 0x001b|RETURN\l|0x001b: RETURN    (LINE:193)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|0x001d: IGET  (r1 I:java.lang.Runnable) = (r3 I:androidx.activity.OnBackPressedDispatcher) androidx.activity.OnBackPressedDispatcher.mFallbackOnBackPressed java.lang.Runnable  (LINE:196)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|0x001f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:? \l}"];
Node_29 [shape=record,label="{29\:\ 0x0021|0x0021: INVOKE  (r1 I:java.lang.Runnable) type: INTERFACE call: java.lang.Runnable.run():void A[MD:():void (c)] (LINE:197)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|RETURN\lORIG_RETURN\l|0x0024: RETURN    (LINE:199)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0024: RETURN   A[SYNTHETIC] (LINE:199)\l}"];
MethodNode[shape=record,label="{public void androidx.activity.OnBackPressedDispatcher.onBackPressed((r3 'this' I:androidx.activity.OnBackPressedDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0016 \-\> B:20:0x0006, CROSS_EDGE: B:30:0x0024 \-\> B:18:?, CROSS_EDGE: B:28:0x001f \-\> B:30:0x0024\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001c: r1 'callback' Landroidx\/activity\/OnBackPressedCallback;\l  0x0006\-0x0024: r0 'iterator' Ljava\/util\/Iterator;, signature: Ljava\/util\/Iterator\<Landroidx\/activity\/OnBackPressedCallback;\>;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_20;
Node_23 -> Node_31[style=dashed];
Node_31 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_18;
Node_32 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_18;
Node_33 -> Node_18;
}

