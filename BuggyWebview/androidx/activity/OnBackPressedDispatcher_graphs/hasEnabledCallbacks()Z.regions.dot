digraph "CFG forandroidx.activity.OnBackPressedDispatcher.hasEnabledCallbacks()Z" {
subgraph cluster_Region_1220794892 {
label = "R(3:1|(1:(1:7))|10)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0000|java.util.Iterator java.util.Iterator\<androidx.activity.OnBackPressedCallback\> r0 = r2.mOnBackPressedCallbacks.descendingIterator()\l}"];
subgraph cluster_LoopRegion_1696161708 {
label = "LOOP:0: (1:(1:7))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000a|if (r0.hasNext() != false) goto L4\l}"];
subgraph cluster_Region_923275111 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2098290199 {
label = "IF [B:19:0x0016] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0016|LOOP_END\lLOOP:0: B:16:0x0006\-\>B:19:0x0016\l|if (r0.next().isEnabled() != false) goto L6\l}"];
subgraph cluster_Region_1954828303 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0018|RETURN\l|return true\l}"];
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x001a|RETURN\l|return false\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0006|LOOP_START\lLOOP:0: B:16:0x0006\-\>B:19:0x0016\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0018|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean androidx.activity.OnBackPressedDispatcher.hasEnabledCallbacks((r2v0 'this' androidx.activity.OnBackPressedDispatcher A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0016 \-\> B:16:0x0006, CROSS_EDGE: B:23:0x001b \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_25[style=dashed];
Node_19 -> Node_16[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_14;
Node_22 -> Node_14;
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_24 -> Node_20;
Node_25 -> Node_22;
}

