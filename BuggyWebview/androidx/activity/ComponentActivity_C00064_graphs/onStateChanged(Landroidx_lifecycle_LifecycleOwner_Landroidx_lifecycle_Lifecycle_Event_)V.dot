digraph "CFG forandroidx.activity.ComponentActivity.4.onStateChanged(Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/lifecycle\/Lifecycle$Event;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000}"];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r3 != androidx.lifecycle.Lifecycle.Event.ON_DESTROY) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|androidx.activity.ComponentActivity.this.mContextAwareHelper.clearAvailableContext()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|if (androidx.activity.ComponentActivity.this.isChangingConfigurations() != false) goto L8\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|androidx.activity.ComponentActivity.this.getViewModelStore().clear()\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.activity.ComponentActivity.4.onStateChanged((r1v0 'this' androidx.activity.ComponentActivity$4 A[IMMUTABLE_TYPE, THIS]), (r2v0 'source' androidx.lifecycle.LifecycleOwner A[D('source' androidx.lifecycle.LifecycleOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'event' androidx.lifecycle.Lifecycle$Event A[D('event' androidx.lifecycle.Lifecycle$Event), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:17:0x001c, CROSS_EDGE: B:13:0x0002 \-\> B:17:0x001c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.lifecycle.LifecycleEventObserver.onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event):void]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_19 -> Node_11;
Node_18 -> Node_11;
}

