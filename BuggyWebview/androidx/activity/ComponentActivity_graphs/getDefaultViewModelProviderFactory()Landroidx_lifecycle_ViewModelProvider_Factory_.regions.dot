digraph "CFG forandroidx.activity.ComponentActivity.getDefaultViewModelProviderFactory()Landroidx\/lifecycle\/ViewModelProvider$Factory;" {
subgraph cluster_Region_597928005 {
label = "R(2:(1:6)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_531227716 {
label = "IF [B:14:0x0002] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0002|if (r3.mDefaultFactory == null) goto L3\l}"];
subgraph cluster_Region_783096964 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x001a|PHI: r2 \l  PHI: (r2v2 android.os.Bundle A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.mDefaultFactory = new androidx.lifecycle.SavedStateViewModelFactory(getApplication(), r3, getIntent() != null ? getIntent().getExtras() : null)\l}"];
}
}
Node_21 [shape=record,label="{21\:\ 0x0021|RETURN\l|return r3.mDefaultFactory\l}"];
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0004}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000e}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0010}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0019}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x001f}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.lifecycle.ViewModelProvider$Factory androidx.activity.ComponentActivity.getDefaultViewModelProviderFactory((r3v0 'this' androidx.activity.ComponentActivity A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0019 \-\> B:19:0x001a, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.lifecycle.HasDefaultViewModelProviderFactory.getDefaultViewModelProviderFactory():androidx.lifecycle.ViewModelProvider$Factory]\l}"];
MethodNode -> Node_11;Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_21 -> Node_12;
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

