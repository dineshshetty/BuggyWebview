digraph "CFG forandroidx.activity.ComponentActivity.addOnPictureInPictureModeChangedListener(Landroidx\/core\/util\/Consumer;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<androidx.core.util.Consumer\<androidx.core.app.PictureInPictureModeChangedInfo\>\>) = (r1 I:androidx.activity.ComponentActivity) androidx.activity.ComponentActivity.mOnPictureInPictureModeChangedListeners java.util.concurrent.CopyOnWriteArrayList  (LINE:1012)\l0x0002: INVOKE  \l  (r0 I:java.util.concurrent.CopyOnWriteArrayList)\l  (r2 I:java.lang.Object A[D('listener' androidx.core.util.Consumer\<androidx.core.app.PictureInPictureModeChangedInfo\>)])\l type: VIRTUAL call: java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0005|RETURN\l|0x0005: RETURN    (LINE:1013)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public final void androidx.activity.ComponentActivity.addOnPictureInPictureModeChangedListener((r1 'this' I:androidx.activity.ComponentActivity A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.core.util.Consumer\<androidx.core.app.PictureInPictureModeChangedInfo\> A[D('listener' androidx.core.util.Consumer\<androidx.core.app.PictureInPictureModeChangedInfo\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0005: r2 'listener' Landroidx\/core\/util\/Consumer;, signature: Landroidx\/core\/util\/Consumer\<Landroidx\/core\/app\/PictureInPictureModeChangedInfo;\>;\lSIGNATURE: (Landroidx\/core\/util\/Consumer\<Landroidx\/core\/app\/PictureInPictureModeChangedInfo;\>;)V\lMETHOD_OVERRIDE: [androidx.core.app.OnPictureInPictureModeChangedProvider.addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer\<androidx.core.app.PictureInPictureModeChangedInfo\>):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

