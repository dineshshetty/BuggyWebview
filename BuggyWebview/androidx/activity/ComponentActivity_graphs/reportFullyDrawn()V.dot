digraph "CFG forandroidx.activity.ComponentActivity.reportFullyDrawn()V" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|if (androidx.tracing.Trace.isEnabled() == false) goto L5\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|TryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l|androidx.tracing.Trace.beginSection(\"reportFullyDrawn() for ComponentActivity\")     \/\/ Catch: java.lang.Throwable \-\> L29\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|TryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|if (android.os.Build.VERSION.SDK_INT \<= 19) goto L11\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|TryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l|super.reportFullyDrawn()     \/\/ Catch: java.lang.Throwable \-\> L29\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|DONT_GENERATE\l|androidx.tracing.Trace.endSection()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0028|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015|TryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l}"];
Node_28 [shape=record,label="{28\:\ 0x0017|if (android.os.Build.VERSION.SDK_INT != 19) goto L8\l}"];
Node_29 [shape=record,label="{29\:\ 0x0019|TryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l}"];
Node_30 [shape=record,label="{30\:\ 0x001f|if (androidx.core.content.ContextCompat.checkSelfPermission(r2, \"android.permission.UPDATE_DEVICE_STATS\") != 0) goto L8\l}"];
Node_31 [shape=record,label="{31\:\ 0x0021|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lCatch: all \-\> 0x0029\l|super.reportFullyDrawn()     \/\/ Catch: java.lang.Throwable \-\> L29\l}"];
Node_34 [shape=record,label="{34\:\ 0x0029|ExcHandler: all \-\> 0x0029\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x002a|FINALLY_INSNS\l|androidx.tracing.Trace.endSection()\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|throw r0\l}"];
MethodNode[shape=record,label="{public void androidx.activity.ComponentActivity.reportFullyDrawn((r2v0 'this' androidx.activity.ComponentActivity A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:31:0x0021 \-\> B:32:0x0024, CROSS_EDGE: B:30:0x001f \-\> B:32:0x0024, CROSS_EDGE: B:28:0x0017 \-\> B:32:0x0024, CROSS_EDGE: B:22:0x0004 \-\> B:24:0x000b, CROSS_EDGE: B:36:0x002d \-\> B:20:?\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0029, blocks: (B:21:0x0000, B:23:0x0006, B:24:0x000b, B:26:0x0011, B:27:0x0015, B:29:0x0019, B:31:0x0021), top: B:37:0x0000 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.app.Activity.reportFullyDrawn():void\}]\l}"];
MethodNode -> Node_19;Node_19 -> Node_37;
Node_37 -> Node_21;
Node_37 -> Node_34;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_20;
}

