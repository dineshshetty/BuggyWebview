digraph "CFG forandroidx.activity.ComponentActivity.getDefaultViewModelProviderFactory()Landroidx\/lifecycle\/ViewModelProvider$Factory;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: IGET  (r0 I:androidx.lifecycle.ViewModelProvider$Factory) = (r3 I:androidx.activity.ComponentActivity) androidx.activity.ComponentActivity.mDefaultFactory androidx.lifecycle.ViewModelProvider$Factory  (LINE:607)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001f \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:androidx.lifecycle.SavedStateViewModelFactory) =  androidx.lifecycle.SavedStateViewModelFactory  (LINE:608)\l0x0006: INVOKE  (r1 I:android.app.Application) = (r3 I:androidx.activity.ComponentActivity) type: VIRTUAL call: androidx.activity.ComponentActivity.getApplication():android.app.Application A[MD:():android.app.Application (s)] (LINE:609)\l0x000a: INVOKE  (r2 I:android.content.Intent) = (r3 I:androidx.activity.ComponentActivity) type: VIRTUAL call: androidx.activity.ComponentActivity.getIntent():android.content.Intent A[MD:():android.content.Intent (s)] (LINE:611)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0019 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0010|0x0010: INVOKE  (r2 I:android.content.Intent) = (r3 I:androidx.activity.ComponentActivity) type: VIRTUAL call: androidx.activity.ComponentActivity.getIntent():android.content.Intent A[MD:():android.content.Intent (s)]\l0x0014: INVOKE  (r2 I:android.os.Bundle) = (r2 I:android.content.Intent) type: VIRTUAL call: android.content.Intent.getExtras():android.os.Bundle A[MD:():android.os.Bundle (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|0x001a: INVOKE  \l  (r0 I:androidx.lifecycle.SavedStateViewModelFactory)\l  (r1 I:android.app.Application)\l  (r3 I:androidx.savedstate.SavedStateRegistryOwner)\l  (r2 I:android.os.Bundle)\l type: DIRECT call: androidx.lifecycle.SavedStateViewModelFactory.\<init\>(android.app.Application, androidx.savedstate.SavedStateRegistryOwner, android.os.Bundle):void A[MD:(android.app.Application, androidx.savedstate.SavedStateRegistryOwner, android.os.Bundle):void (m)]\l0x001d: IPUT  (r0 I:androidx.lifecycle.ViewModelProvider$Factory), (r3 I:androidx.activity.ComponentActivity) androidx.activity.ComponentActivity.mDefaultFactory androidx.lifecycle.ViewModelProvider$Factory \l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|0x0019: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x001f|0x001f: IGET  (r0 I:androidx.lifecycle.ViewModelProvider$Factory) = (r3 I:androidx.activity.ComponentActivity) androidx.activity.ComponentActivity.mDefaultFactory androidx.lifecycle.ViewModelProvider$Factory  (LINE:613)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|RETURN\l|0x0021: RETURN  (r0 I:androidx.lifecycle.ViewModelProvider$Factory) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.lifecycle.ViewModelProvider$Factory androidx.activity.ComponentActivity.getDefaultViewModelProviderFactory((r3 'this' I:androidx.activity.ComponentActivity A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0019 \-\> B:19:0x001a, CROSS_EDGE: B:14:0x0002 \-\> B:20:0x001f\lINLINE_NOT_NEEDED\lMETHOD_OVERRIDE: [androidx.lifecycle.HasDefaultViewModelProviderFactory.getDefaultViewModelProviderFactory():androidx.lifecycle.ViewModelProvider$Factory]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

