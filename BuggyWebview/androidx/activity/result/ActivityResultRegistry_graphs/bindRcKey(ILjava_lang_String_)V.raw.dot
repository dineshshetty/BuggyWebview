digraph "CFG forandroidx.activity.result.ActivityResultRegistry.bindRcKey(ILjava\/lang\/String;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:java.util.Map\<java.lang.Integer, java.lang.String\>) = (r2 I:androidx.activity.result.ActivityResultRegistry) androidx.activity.result.ActivityResultRegistry.mRcToKey java.util.Map  (LINE:450)\l0x0002: INVOKE  (r1 I:java.lang.Integer) = (r3 I:int A[D('rc' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x0006: INVOKE  (r0 I:java.util.Map), (r1 I:java.lang.Object), (r4 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0009: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Integer\>) = (r2 I:androidx.activity.result.ActivityResultRegistry) androidx.activity.result.ActivityResultRegistry.mKeyToRc java.util.Map  (LINE:451)\l0x000b: INVOKE  (r1 I:java.lang.Integer) = (r3 I:int A[D('rc' int)]) type: STATIC call: java.lang.Integer.valueOf(int):java.lang.Integer A[MD:(int):java.lang.Integer (c)]\l0x000f: INVOKE  (r0 I:java.util.Map), (r4 I:java.lang.Object A[D('key' java.lang.String)]), (r1 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:452)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.activity.result.ActivityResultRegistry.bindRcKey((r2 'this' I:androidx.activity.result.ActivityResultRegistry A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('rc' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0012: r3 'rc' I\l  \-1 \-0x0012: r4 'key' Ljava\/lang\/String;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

