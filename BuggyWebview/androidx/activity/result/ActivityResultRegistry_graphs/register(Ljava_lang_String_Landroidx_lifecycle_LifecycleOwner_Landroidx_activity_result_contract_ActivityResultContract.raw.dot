digraph "CFG forandroidx.activity.result.ActivityResultRegistry.register(Ljava\/lang\/String;Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/activity\/result\/contract\/ActivityResultContract;Landroidx\/activity\/result\/ActivityResultCallback;)Landroidx\/activity\/result\/ActivityResultLauncher;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.lifecycle.Lifecycle) = (r6 I:androidx.lifecycle.LifecycleOwner A[D('lifecycleOwner' androidx.lifecycle.LifecycleOwner)]) type: INTERFACE call: androidx.lifecycle.LifecycleOwner.getLifecycle():androidx.lifecycle.Lifecycle A[MD:():androidx.lifecycle.Lifecycle (m)] (LINE:118)\l0x0004: INVOKE  (r1 I:androidx.lifecycle.Lifecycle$State) = (r0 I:androidx.lifecycle.Lifecycle A[D('lifecycle' androidx.lifecycle.Lifecycle)]) type: VIRTUAL call: androidx.lifecycle.Lifecycle.getCurrentState():androidx.lifecycle.Lifecycle$State A[MD:():androidx.lifecycle.Lifecycle$State (m)] (LINE:120)\l0x0008: SGET  (r2 I:androidx.lifecycle.Lifecycle$State) =  androidx.lifecycle.Lifecycle.State.STARTED androidx.lifecycle.Lifecycle$State \l0x000a: INVOKE  (r1 I:boolean) = (r1 I:androidx.lifecycle.Lifecycle$State), (r2 I:androidx.lifecycle.Lifecycle$State) type: VIRTUAL call: androidx.lifecycle.Lifecycle.State.isAtLeast(androidx.lifecycle.Lifecycle$State):boolean A[MD:(androidx.lifecycle.Lifecycle$State):boolean (m)]\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0036 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0010|0x0010: INVOKE  (r4 I:androidx.activity.result.ActivityResultRegistry), (r5 I:java.lang.String A[D('key' java.lang.String)]) type: DIRECT call: androidx.activity.result.ActivityResultRegistry.registerKey(java.lang.String):void A[MD:(java.lang.String):void (m)] (LINE:127)\l0x0013: IGET  (r1 I:java.util.Map\<java.lang.String, androidx.activity.result.ActivityResultRegistry$LifecycleContainer\>) = (r4 I:androidx.activity.result.ActivityResultRegistry) androidx.activity.result.ActivityResultRegistry.mKeyToLifecycleContainers java.util.Map  (LINE:128)\l0x0015: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r5 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0019: CHECK_CAST (r1 I:androidx.activity.result.ActivityResultRegistry$LifecycleContainer) = (androidx.activity.result.ActivityResultRegistry$LifecycleContainer) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x001b|0x001b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lifecycleContainer' androidx.activity.result.ActivityResultRegistry$LifecycleContainer)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0023  (LINE:129)\l}"];
Node_17 [shape=record,label="{17\:\ 0x001d|0x001d: NEW_INSTANCE  (r2 I:androidx.activity.result.ActivityResultRegistry$LifecycleContainer) =  androidx.activity.result.ActivityResultRegistry$LifecycleContainer  (LINE:130)\l0x001f: INVOKE  \l  (r2 I:androidx.activity.result.ActivityResultRegistry$LifecycleContainer)\l  (r0 I:androidx.lifecycle.Lifecycle A[D('lifecycle' androidx.lifecycle.Lifecycle)])\l type: DIRECT call: androidx.activity.result.ActivityResultRegistry.LifecycleContainer.\<init\>(androidx.lifecycle.Lifecycle):void A[MD:(androidx.lifecycle.Lifecycle):void (m)]\l0x0022: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('lifecycleContainer' androidx.activity.result.ActivityResultRegistry$LifecycleContainer)]) = (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:androidx.activity.result.ActivityResultRegistry$1) =  androidx.activity.result.ActivityResultRegistry$1  (LINE:132)\l0x0025: INVOKE  \l  (r2 I:androidx.activity.result.ActivityResultRegistry$1)\l  (r4 I:androidx.activity.result.ActivityResultRegistry)\l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l  (r8 I:androidx.activity.result.ActivityResultCallback A[D('callback' androidx.activity.result.ActivityResultCallback\<O\>)])\l  (r7 I:androidx.activity.result.contract.ActivityResultContract A[D('contract' androidx.activity.result.contract.ActivityResultContract\<I, O\>)])\l type: DIRECT call: androidx.activity.result.ActivityResultRegistry.1.\<init\>(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.ActivityResultCallback, androidx.activity.result.contract.ActivityResultContract):void A[MD:(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.ActivityResultCallback, androidx.activity.result.contract.ActivityResultContract):void (m)]\l0x0028: INVOKE  \l  (r1 I:androidx.activity.result.ActivityResultRegistry$LifecycleContainer A[D('lifecycleContainer' androidx.activity.result.ActivityResultRegistry$LifecycleContainer)])\l  (r2 I:androidx.lifecycle.LifecycleEventObserver A[D('observer' androidx.lifecycle.LifecycleEventObserver)])\l type: VIRTUAL call: androidx.activity.result.ActivityResultRegistry.LifecycleContainer.addObserver(androidx.lifecycle.LifecycleEventObserver):void A[MD:(androidx.lifecycle.LifecycleEventObserver):void (m)] (LINE:160)\l0x002b: IGET  (r3 I:java.util.Map\<java.lang.String, androidx.activity.result.ActivityResultRegistry$LifecycleContainer\>) = (r4 I:androidx.activity.result.ActivityResultRegistry) androidx.activity.result.ActivityResultRegistry.mKeyToLifecycleContainers java.util.Map  (LINE:161)\l0x002d: INVOKE  \l  (r3 I:java.util.Map)\l  (r5 I:java.lang.Object A[D('key' java.lang.String)])\l  (r1 I:java.lang.Object A[D('lifecycleContainer' androidx.activity.result.ActivityResultRegistry$LifecycleContainer)])\l type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0030: NEW_INSTANCE  (r3 I:androidx.activity.result.ActivityResultRegistry$2) =  androidx.activity.result.ActivityResultRegistry$2  (LINE:163)\l0x0032: INVOKE  \l  (r3 I:androidx.activity.result.ActivityResultRegistry$2)\l  (r4 I:androidx.activity.result.ActivityResultRegistry)\l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l  (r7 I:androidx.activity.result.contract.ActivityResultContract A[D('contract' androidx.activity.result.contract.ActivityResultContract\<I, O\>)])\l type: DIRECT call: androidx.activity.result.ActivityResultRegistry.2.\<init\>(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.contract.ActivityResultContract):void A[MD:(androidx.activity.result.ActivityResultRegistry, java.lang.String, androidx.activity.result.contract.ActivityResultContract):void (m)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0035|RETURN\l|0x0035: RETURN  (r3 I:androidx.activity.result.ActivityResultLauncher\<I\>) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|0x0036: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException A[D('lifecycleContainer' androidx.activity.result.ActivityResultRegistry$LifecycleContainer)]) =  java.lang.IllegalStateException  (LINE:121)\l0x0038: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x003d: CONST_STR  (r3 I:java.lang.String) =  \"LifecycleOwner \" \l0x003f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.Object A[D('lifecycleOwner' androidx.lifecycle.LifecycleOwner)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0045: CONST_STR  (r3 I:java.lang.String) =  \" is attempting to register while current state is \" \l0x0047: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x004a: INVOKE  (r3 I:androidx.lifecycle.Lifecycle$State) = (r0 I:androidx.lifecycle.Lifecycle A[D('lifecycle' androidx.lifecycle.Lifecycle)]) type: VIRTUAL call: androidx.lifecycle.Lifecycle.getCurrentState():androidx.lifecycle.Lifecycle$State A[MD:():androidx.lifecycle.Lifecycle$State (m)] (LINE:123)\l0x004e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0051: CONST_STR  (r3 I:java.lang.String) =  \". LifecycleOwners must call register before they are STARTED.\" \l0x0053: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0056: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x005a: INVOKE  (r1 I:java.lang.IllegalStateException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalStateException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final androidx.activity.result.ActivityResultLauncher\<I\> androidx.activity.result.ActivityResultRegistry.register((r4 'this' I:androidx.activity.result.ActivityResultRegistry A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.lifecycle.LifecycleOwner A[D('lifecycleOwner' androidx.lifecycle.LifecycleOwner), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.activity.result.contract.ActivityResultContract\<I, O\> A[D('contract' androidx.activity.result.contract.ActivityResultContract\<I, O\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.activity.result.ActivityResultCallback\<O\> A[D('callback' androidx.activity.result.ActivityResultCallback\<O\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x001b \-\> B:18:0x0023, CROSS_EDGE: B:21:0x005d \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0036: r1 'lifecycleContainer' Landroidx\/activity\/result\/ActivityResultRegistry$LifecycleContainer;\l  0x0028\-0x0036: r2 'observer' Landroidx\/lifecycle\/LifecycleEventObserver;\l  0x0004\-0x005d: r0 'lifecycle' Landroidx\/lifecycle\/Lifecycle;\l  \-1 \-0x005d: r5 'key' Ljava\/lang\/String;\l  \-1 \-0x005d: r6 'lifecycleOwner' Landroidx\/lifecycle\/LifecycleOwner;\l  0x0000\-0x005d: r7 'contract' Landroidx\/activity\/result\/contract\/ActivityResultContract;, signature: Landroidx\/activity\/result\/contract\/ActivityResultContract\<TI;TO;\>;\l  0x0000\-0x005d: r8 'callback' Landroidx\/activity\/result\/ActivityResultCallback;, signature: Landroidx\/activity\/result\/ActivityResultCallback\<TO;\>;\lTYPE_VARS: [I, O]\lSIGNATURE: \<I:Ljava\/lang\/Object;O:Ljava\/lang\/Object;\>(Ljava\/lang\/String;Landroidx\/lifecycle\/LifecycleOwner;Landroidx\/activity\/result\/contract\/ActivityResultContract\<TI;TO;\>;Landroidx\/activity\/result\/ActivityResultCallback\<TO;\>;)Landroidx\/activity\/result\/ActivityResultLauncher\<TI;\>;\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_21;
Node_21 -> Node_12;
}

