digraph "CFG forandroidx.activity.result.ActivityResultRegistry.dispatchResult(ILjava\/lang\/Object;)Z" {
subgraph cluster_Region_1892258553 {
label = "R(2:1|(2:(1:3)|(2:5|(2:(2:14|15)|(2:9|(2:(2:11|12)|(1:13)))))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|java.lang.String java.lang.String r0 = r4.mRcToKey.get(java.lang.Integer.valueOf(r5))\l}"];
subgraph cluster_Region_1486795682 {
label = "R(2:(1:3)|(2:5|(2:(2:14|15)|(2:9|(2:(2:11|12)|(1:13))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1048243782 {
label = "IF [B:22:0x000c] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000c|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_2059586995 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000e|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_72741425 {
label = "R(2:5|(2:(2:14|15)|(2:9|(2:(2:11|12)|(1:13)))))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0010|androidx.activity.result.ActivityResultRegistry$CallbackAndContract androidx.activity.result.ActivityResultRegistry.CallbackAndContract\<?\> r1 = r4.mKeyToCallback.get(r0)\l}"];
subgraph cluster_Region_1082178514 {
label = "R(2:(2:14|15)|(2:9|(2:(2:11|12)|(1:13))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2139541283 {
label = "IF [B:26:0x0018, B:28:0x001c] THEN: R(2:14|15) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0018|if (r1 == null) goto L14\l}"];
Node_28 [shape=record,label="{28\:\ 0x001c|ADDED_TO_REGION\l|if (r1.mCallback == null) goto L14\l}"];
subgraph cluster_Region_704977556 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x002d|r4.mPendingResults.remove(r0)\lr4.mParsedPendingResults.put(r0, r6)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0037|RETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1416195736 {
label = "R(2:9|(2:(2:11|12)|(1:13)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001f|androidx.activity.result.ActivityResultCallback\<O\> androidx.activity.result.ActivityResultCallback\<?\> r2 = r1.mCallback\l}"];
subgraph cluster_Region_1964326259 {
label = "R(2:(2:11|12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_375855991 {
label = "IF [B:31:0x0027] THEN: R(2:11|12) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0027|if (r4.mLaunchedKeys.remove(r0) != false) goto L11\l}"];
subgraph cluster_Region_1455038267 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0029|r2.onActivityResult(r6)\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1488688080 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001a}"];
MethodNode[shape=record,label="{public final boolean androidx.activity.result.ActivityResultRegistry.dispatchResult((r4v0 'this' androidx.activity.result.ActivityResultRegistry A[IMMUTABLE_TYPE, THIS]), (r5v0 'requestCode' int A[D('requestCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'result' O A[D('result' O), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0038 \-\> B:20:?, CROSS_EDGE: B:31:0x0027 \-\> B:34:0x0037, CROSS_EDGE: B:33:0x002d \-\> B:34:0x0037, CROSS_EDGE: B:26:0x0018 \-\> B:33:0x002d\lINLINE_NOT_NEEDED\lTYPE_VARS: [O]\lSIGNATURE: \<O:Ljava\/lang\/Object;\>(ITO;)Z\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_20;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_28 -> Node_30[style=dashed];
Node_28 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36[style=dashed];
Node_32 -> Node_37;
Node_37 -> Node_20;
Node_36 -> Node_20;
Node_19 -> Node_21;
Node_27 -> Node_28;
}

