digraph "CFG forandroidx.activity.result.ActivityResultRegistry.registerKey(Ljava\/lang\/String;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Integer\>) = (r2 I:androidx.activity.result.ActivityResultRegistry) androidx.activity.result.ActivityResultRegistry.mKeyToRc java.util.Map  (LINE:424)\l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r3 I:java.lang.Object A[D('key' java.lang.String)]) type: INTERFACE call: java.util.Map.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (c)]\l0x0006: CHECK_CAST (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('existing' java.lang.Integer)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x000b  (LINE:425)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|RETURN\l|0x000a: RETURN    (LINE:426)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|0x000b: INVOKE  (r1 I:int) = (r2 I:androidx.activity.result.ActivityResultRegistry) type: DIRECT call: androidx.activity.result.ActivityResultRegistry.generateRandomNumber():int A[MD:():int (m)] (LINE:428)\l0x000f: INVOKE  \l  (r2 I:androidx.activity.result.ActivityResultRegistry)\l  (r1 I:int A[D('rc' int)])\l  (r3 I:java.lang.String A[D('key' java.lang.String)])\l type: DIRECT call: androidx.activity.result.ActivityResultRegistry.bindRcKey(int, java.lang.String):void A[MD:(int, java.lang.String):void (m)] (LINE:429)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|RETURN\l|0x0012: RETURN    (LINE:430)\l}"];
MethodNode[shape=record,label="{private void androidx.activity.result.ActivityResultRegistry.registerKey((r2 'this' I:androidx.activity.result.ActivityResultRegistry A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0012 \-\> B:8:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x0012: r0 'existing' Ljava\/lang\/Integer;\l  0x000f\-0x0012: r1 'rc' I\l  \-1 \-0x0012: r3 'key' Ljava\/lang\/String;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

