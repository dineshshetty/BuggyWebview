digraph "CFG forandroidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult(ILandroid\/content\/Intent;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r17 == (\-1)) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\l|return kotlin.collections.MapsKt.emptyMap()\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (r18 != null) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e}"];
Node_8 [shape=record,label="{8\:\ 0x0012|RETURN\l|return kotlin.collections.MapsKt.emptyMap()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|java.lang.String[] r1 = r18.getStringArrayExtra(androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.EXTRA_PERMISSIONS)\lint[] r3 = r18.getIntArrayExtra(androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.EXTRA_PERMISSION_GRANT_RESULTS)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|if (r3 == null) goto L24\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|if (r1 != null) goto L12\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|java.util.Collection r6 = new java.util.ArrayList(r3.length)\lint r9 = r3.length\lr11 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|LOOP_START\lLOOP:0: B:14:0x0033\-\>B:19:0x003e\lPHI: r11 \l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:13:0x0024, B:19:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 \>= r9) goto L21\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|r12 = r3[r11]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|if (r12 != 0) goto L19\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|r15 = true\l}"];
Node_26 [shape=record,label="{26\:\ 0x003e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|LOOP_END\lLOOP:0: B:14:0x0033\-\>B:19:0x003e\lPHI: r15 \l  PHI: (r15v1 boolean) = (r15v0 boolean), (r15v2 boolean) binds: [B:25:0x003e, B:26:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r6.add(java.lang.Boolean.valueOf(r15))\lint r11 = r11 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|r15 = false\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|java.util.List r6 = (java.util.List) r6\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|RETURN\l|return kotlin.collections.MapsKt.toMap(kotlin.collections.CollectionsKt.zip(kotlin.collections.ArraysKt.filterNotNull(r1), r6))\l}"];
Node_22 [shape=record,label="{22\:\ 0x0061}"];
Node_23 [shape=record,label="{23\:\ 0x0065|RETURN\l|return kotlin.collections.MapsKt.emptyMap()\l}"];
MethodNode[shape=record,label="{public java.util.Map\<java.lang.String, java.lang.Boolean\> androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult((r16v0 'this' androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions A[IMMUTABLE_TYPE, THIS]), (r17v0 'resultCode' int A[D('resultCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'intent' android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0012 \-\> B:1:?, BACK_EDGE: B:19:0x003e \-\> B:14:0x0033, CROSS_EDGE: B:18:0x003d \-\> B:19:0x003e, CROSS_EDGE: B:21:0x0060 \-\> B:1:?, CROSS_EDGE: B:23:0x0065 \-\> B:1:?, CROSS_EDGE: B:10:0x001f \-\> B:22:0x0061\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lSIGNATURE: (ILandroid\/content\/Intent;)Ljava\/util\/Map\<Ljava\/lang\/String;Ljava\/lang\/Boolean;\>;\lRENAME_REASON:avoid collision after fix types in other method\lBRIDGED_BY: androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult(int, android.content.Intent):java.util.Map\<java.lang.String, java.lang.Boolean\>\lMETHOD_OVERRIDE: [androidx.activity.result.contract.ActivityResultContract.parseResult(int, android.content.Intent):O]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_13;
Node_11 -> Node_22[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_26;
Node_26 -> Node_19;
Node_19 -> Node_14;
Node_18 -> Node_25;
Node_25 -> Node_19;
Node_24 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_1;
}

