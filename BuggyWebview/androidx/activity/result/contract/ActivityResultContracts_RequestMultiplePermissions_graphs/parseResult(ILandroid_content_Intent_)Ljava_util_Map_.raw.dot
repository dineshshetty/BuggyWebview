digraph "CFG forandroidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult(ILandroid\/content\/Intent;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('intent' android.content.Intent)])  (LINE:194)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x0003: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('resultCode' int)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  (r1 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|RETURN\l|0x000b: RETURN  (r1 I:java.util.Map\<java.lang.String, java.lang.Boolean\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013  (LINE:195)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: INVOKE  (r1 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|RETURN\l|0x0012: RETURN  (r1 I:java.util.Map\<java.lang.String, java.lang.Boolean\>) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: CONST_STR  (r1 I:java.lang.String) =  \"androidx.activity.result.contract.extra.PERMISSIONS\"  (LINE:196)\l0x0015: INVOKE  (r1 I:java.lang.String[]) = (r0 I:android.content.Intent), (r1 I:java.lang.String) type: VIRTUAL call: android.content.Intent.getStringArrayExtra(java.lang.String):java.lang.String[] A[MD:(java.lang.String):java.lang.String[] (c)]\l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS\"  (LINE:197)\l0x001b: INVOKE  (r3 I:int[]) = (r0 I:android.content.Intent), (r3 I:java.lang.String) type: VIRTUAL call: android.content.Intent.getIntArrayExtra(java.lang.String):int[] A[MD:(java.lang.String):int[] (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('grantResults' int[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0061  (LINE:198)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('permissions' java.lang.String[])]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('grantResults' int[])])  (LINE:199)\l0x0025: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0026: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:610)\l0x0028: ARRAY_LENGTH  (r7 I:int) = (r4 I:??[] A[D('$this$map$iv' int[])]) \l0x0029: INVOKE  (r6 I:java.util.ArrayList), (r7 I:int) type: DIRECT call: java.util.ArrayList.\<init\>(int):void A[MD:(int):void (c)]\l0x002c: CHECK_CAST (r6 I:java.util.Collection) = (java.util.Collection) (r6 I:??[OBJECT, ARRAY]) \l0x002e: MOVE  (r7 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('$this$map$iv' int[])]) \l0x002f: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0030: ARRAY_LENGTH  (r9 I:int) = (r7 I:??[] A[D('$this$mapTo$iv$iv' int[])])  (LINE:611)\l0x0031: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0032: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|LOOP_START\lLOOP:0: B:14:0x0033\-\>B:19:0x003e\l|0x0033: IF  (r11 I:??[int, byte, short, char]) \>= (r9 I:??[int, byte, short, char])  \-\> B:24:0x0048 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: AGET  (r12 I:??[int, float, short, byte, char]) = (r7 I:??[int, float][] A[D('$this$mapTo$iv$iv' int[])]), (r11 I:??[int, short, byte, char]) \l0x0037: MOVE  (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('item$iv$iv' int)])  (LINE:612)\l0x0038: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003d  (LINE:200)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: CONST  (r15 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x003e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|LOOP_END\lLOOP:0: B:14:0x0033\-\>B:19:0x003e\l|0x003e: INVOKE  (r13 I:java.lang.Boolean) = (r15 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)]\l0x0042: INVOKE  (r6 I:java.util.Collection A[D('destination$iv$iv' java.util.Collection)]), (r13 I:java.lang.Object) type: INTERFACE call: java.util.Collection.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0045: ARITH  (r11 I:int) = (r11 I:int) + (1 int)  (LINE:611)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: CONST  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|0x0049: CHECK_CAST (r6 I:java.util.List) = (java.util.List) (r6 I:??[OBJECT, ARRAY] A[D('destination$iv$iv' java.util.Collection)]) \l0x004c: MOVE  (r4 I:??[OBJECT, ARRAY] A[D('$this$map$iv' int[])]) = (r6 I:??[OBJECT, ARRAY])  (LINE:199)\l0x004d: INVOKE  (r5 I:java.util.List) = (r1 I:java.lang.Object[] A[D('permissions' java.lang.String[])]) type: STATIC call: kotlin.collections.ArraysKt.filterNotNull(java.lang.Object[]):java.util.List A[MD:\<T\>:(T[]):java.util.List\<T\> (m)] (LINE:202)\l0x0051: CHECK_CAST (r5 I:java.lang.Iterable) = (java.lang.Iterable) (r5 I:??[OBJECT, ARRAY]) \l0x0053: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('grantState' java.util.List)]) \l0x0054: CHECK_CAST (r6 I:java.lang.Iterable) = (java.lang.Iterable) (r6 I:??[OBJECT, ARRAY]) \l0x0056: INVOKE  (r5 I:java.util.List) = (r5 I:java.lang.Iterable), (r6 I:java.lang.Iterable) type: STATIC call: kotlin.collections.CollectionsKt.zip(java.lang.Iterable, java.lang.Iterable):java.util.List A[MD:\<T, R\>:(java.lang.Iterable\<? extends T\>, java.lang.Iterable\<? extends R\>):java.util.List\<kotlin.Pair\<T, R\>\> (m)]\l0x005a: CHECK_CAST (r5 I:java.lang.Iterable) = (java.lang.Iterable) (r5 I:??[OBJECT, ARRAY]) \l0x005c: INVOKE  (r5 I:java.util.Map) = (r5 I:java.lang.Iterable) type: STATIC call: kotlin.collections.MapsKt.toMap(java.lang.Iterable):java.util.Map A[MD:\<K, V\>:(java.lang.Iterable\<? extends kotlin.Pair\<? extends K, ? extends V\>\>):java.util.Map\<K, V\> (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|RETURN\l|0x0060: RETURN  (r5 I:java.util.Map\<java.lang.String, java.lang.Boolean\>) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|0x0061: INVOKE  (r4 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)] (LINE:198)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|RETURN\l|0x0065: RETURN  (r4 I:java.util.Map\<java.lang.String, java.lang.Boolean\>) \l}"];
MethodNode[shape=record,label="{public java.util.Map\<java.lang.String, java.lang.Boolean\> androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult((r16 'this' I:androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions A[IMMUTABLE_TYPE, THIS]), (r17 I:int A[D('resultCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0012 \-\> B:1:?, BACK_EDGE: B:19:0x003e \-\> B:14:0x0033, CROSS_EDGE: B:18:0x003d \-\> B:19:0x003e, CROSS_EDGE: B:21:0x0060 \-\> B:1:?, CROSS_EDGE: B:23:0x0065 \-\> B:1:?, CROSS_EDGE: B:10:0x001f \-\> B:22:0x0061\lSIGNATURE: (ILandroid\/content\/Intent;)Ljava\/util\/Map\<Ljava\/lang\/String;Ljava\/lang\/Boolean;\>;\lRENAME_REASON:avoid collision after fix types in other method\lDebug Info:\l  0x0038\-0x003e: r13 'result' I\l  0x0039\-0x003e: r14 '$i$a$\-map\-ActivityResultContracts$RequestMultiplePermissions$parseResult$grantState$1' I\l  0x0037\-0x0048: r12 'item$iv$iv' I\l  0x002e\-0x0049: r6 'destination$iv$iv' Ljava\/util\/Collection;\l  0x002f\-0x0049: r7 '$this$mapTo$iv$iv' [I\l  0x0030\-0x0049: r8 '$i$f$mapTo' I\l  0x0025\-0x004c: r4 '$this$map$iv' [I\l  0x0026\-0x004c: r5 '$i$f$map' I\l  0x004d\-0x0061: r4 'grantState' Ljava\/util\/List;\l  0x0019\-0x0065: r1 'permissions' [Ljava\/lang\/String;\l  0x001f\-0x0065: r3 'grantResults' [I\l  \-1 \-0x0065: r17 'resultCode' I\l  \-1 \-0x0065: r18 'intent' Landroid\/content\/Intent;\lBRIDGED_BY: androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.parseResult(int, android.content.Intent):java.util.Map\<java.lang.String, java.lang.Boolean\>\lMETHOD_OVERRIDE: [androidx.activity.result.contract.ActivityResultContract.parseResult(int, android.content.Intent):O]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_13;
Node_11 -> Node_22[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_26;
Node_26 -> Node_19;
Node_19 -> Node_14;
Node_18 -> Node_25;
Node_25 -> Node_19;
Node_24 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
Node_23 -> Node_1;
}

