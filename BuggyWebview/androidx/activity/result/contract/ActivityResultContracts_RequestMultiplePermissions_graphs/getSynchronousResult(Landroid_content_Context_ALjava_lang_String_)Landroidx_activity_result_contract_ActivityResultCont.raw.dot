digraph "CFG forandroidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.getSynchronousResult(Landroid\/content\/Context;[Ljava\/lang\/String;)Landroidx\/activity\/result\/contract\/ActivityResultContract$SynchronousResult;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r17 I:??[OBJECT, ARRAY] A[D('context' android.content.Context)]) \l0x0002: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('input' java.lang.String[])]) \l0x0004: CONST_STR  (r2 I:java.lang.String) =  \"context\" \l0x0006: INVOKE  (r0 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"input\" \l0x000b: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x000e: ARRAY_LENGTH  (r2 I:int) = (r1 I:??[])  (LINE:176)\l0x000f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0010: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: NEW_INSTANCE  (r2 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult) =  androidx.activity.result.contract.ActivityResultContract$SynchronousResult  (LINE:177)\l0x001a: INVOKE  (r3 I:java.util.Map) =  type: STATIC call: kotlin.collections.MapsKt.emptyMap():java.util.Map A[MD:\<K, V\>:():java.util.Map\<K, V\> (m)]\l0x001e: INVOKE  (r2 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult), (r3 I:java.lang.Object) type: DIRECT call: androidx.activity.result.contract.ActivityResultContract.SynchronousResult.\<init\>(java.lang.Object):void A[MD:(T):void (m)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|RETURN\l|0x0021: RETURN  \l  (r2 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult\<java.util.Map\<java.lang.String, java.lang.Boolean\>\>)\l \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('input' java.lang.String[])])  (LINE:179)\l0x0024: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0025: ARRAY_LENGTH  (r6 I:int) = (r2 I:??[] A[D('$this$all$iv' java.lang.Object[])])  (LINE:602)\l0x0026: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|LOOP_START\lLOOP:0: B:10:0x0027\-\>B:17:0x003c\l|0x0027: IF  (r7 I:??[int, byte, short, char]) \>= (r6 I:??[int, byte, short, char])  \-\> B:27:0x003f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: AGET  (r8 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY][] A[D('$this$all$iv' java.lang.Object[])]), (r7 I:??[int, short, byte, char]) \l0x002b: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('element$iv' java.lang.Object)]) \l0x002c: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x002f: INVOKE  (r11 I:int) = (r0 I:android.content.Context), (r9 I:java.lang.String A[D('permission' java.lang.String)]) type: STATIC call: androidx.core.content.ContextCompat.checkSelfPermission(android.content.Context, java.lang.String):int A[MD:(android.content.Context, java.lang.String):int (m)] (LINE:180)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: CONST  (r9 I:??[boolean, int, float, short, byte, char] A[D('permission' java.lang.String)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('permission' java.lang.String)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003c \l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|LOOP_END\lLOOP:0: B:10:0x0027\-\>B:17:0x003c\l|0x003c: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x003a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|0x003a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$all$iv' java.lang.Object[])]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allGranted' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x007f  (LINE:185)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY] A[D('input' java.lang.String[])])  (LINE:186)\l0x0045: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0046: ARRAY_LENGTH  (r7 I:int) = (r5 I:??[] A[D('$this$associate$iv' java.lang.Object[])])  (LINE:604)\l0x0047: INVOKE  (r7 I:int) = (r7 I:int) type: STATIC call: kotlin.collections.MapsKt.mapCapacity(int):int A[MD:(int):int (m)]\l0x004b: CONST  (r8 I:??[int, float, short, byte, char]) = (16 ??[int, float, short, byte, char]) \l0x004d: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: kotlin.ranges.RangesKt.coerceAtLeast(int, int):int A[MD:(int, int):int (m)]\l0x0051: NEW_INSTANCE  (r8 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap  (LINE:605)\l0x0053: INVOKE  (r8 I:java.util.LinkedHashMap), (r7 I:int A[D('capacity$iv' int)]) type: DIRECT call: java.util.LinkedHashMap.\<init\>(int):void A[MD:(int):void (c)]\l0x0056: CHECK_CAST (r8 I:java.util.Map) = (java.util.Map) (r8 I:??[OBJECT, ARRAY]) \l0x0058: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r5 I:??[OBJECT, ARRAY] A[D('$this$associate$iv' java.lang.Object[])]) \l0x0059: CONST  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x005a: ARRAY_LENGTH  (r11 I:int) = (r9 I:??[] A[D('$this$associateTo$iv$iv' java.lang.Object[])])  (LINE:606)\l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|LOOP_START\lLOOP:1: B:22:0x005b\-\>B:23:0x005d\l|0x005b: IF  (r3 I:??[int, byte, short, char]) \>= (r11 I:??[int, byte, short, char])  \-\> B:29:0x0077 \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|LOOP_END\lLOOP:1: B:22:0x005b\-\>B:23:0x005d\l|0x005d: AGET  (r12 I:??[OBJECT, ARRAY]) = (r9 I:??[OBJECT, ARRAY][] A[D('$this$associateTo$iv$iv' java.lang.Object[])]), (r3 I:??[int, short, byte, char]) \l0x005f: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r12 I:??[OBJECT, ARRAY] A[D('element$iv$iv' java.lang.Object)])  (LINE:607)\l0x0060: CONST  (r14 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0061: INVOKE  (r15 I:java.lang.Boolean) = (r4 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:186)\l0x0065: INVOKE  (r13 I:kotlin.Pair A[D('it' java.lang.String)]) = (r13 I:java.lang.Object A[D('it' java.lang.String)]), (r15 I:java.lang.Object) type: STATIC call: kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair A[MD:\<A, B\>:(A, B):kotlin.Pair\<A, B\> (m)]\l0x0069: INVOKE  (r14 I:java.lang.Object) = (r13 I:kotlin.Pair A[D('it' java.lang.String)]) type: VIRTUAL call: kotlin.Pair.getFirst():java.lang.Object A[MD:():A (m)]\l0x006d: INVOKE  (r13 I:java.lang.Object) = (r13 I:kotlin.Pair) type: VIRTUAL call: kotlin.Pair.getSecond():java.lang.Object A[MD:():B (m)]\l0x0071: INVOKE  (r8 I:java.util.Map A[D('destination$iv$iv' java.util.Map)]), (r14 I:java.lang.Object), (r13 I:java.lang.Object) type: INTERFACE call: java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (c)]\l0x0074: ARITH  (r3 I:int) = (r3 I:int) + (1 int)  (LINE:606)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0077|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|0x0079: NEW_INSTANCE  (r3 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult) =  androidx.activity.result.contract.ActivityResultContract$SynchronousResult  (LINE:186)\l0x007b: INVOKE  (r3 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult), (r8 I:java.lang.Object) type: DIRECT call: androidx.activity.result.contract.ActivityResultContract.SynchronousResult.\<init\>(java.lang.Object):void A[MD:(T):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|0x0080: RETURN  \l  (r3 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult\<java.util.Map\<java.lang.String, java.lang.Boolean\>\>)\l A[SYNTHETIC] (LINE:185)\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|RETURN\lORIG_RETURN\l|0x007f: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:187)\l0x0080: RETURN  \l  (r3 I:androidx.activity.result.contract.ActivityResultContract$SynchronousResult\<java.util.Map\<java.lang.String, java.lang.Boolean\>\>)\l  (LINE:185)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('permission' java.lang.String)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x003f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: CONST  (r2 I:??[boolean, int, float, short, byte, char] A[D('$this$all$iv' java.lang.Object[])]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:603)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public androidx.activity.result.contract.ActivityResultContract$SynchronousResult\<java.util.Map\<java.lang.String, java.lang.Boolean\>\> androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.getSynchronousResult((r16 'this' I:androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions A[IMMUTABLE_TYPE, THIS]), (r17 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.String[] A[D('input' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x005d \-\> B:22:0x005b, CROSS_EDGE: B:26:0x0080 \-\> B:1:?, CROSS_EDGE: B:25:0x007f \-\> B:26:0x0080, BACK_EDGE: B:17:0x003c \-\> B:10:0x0027, CROSS_EDGE: B:14:0x0037 \-\> B:15:0x0038, CROSS_EDGE: B:18:0x003f \-\> B:20:0x0041, CROSS_EDGE: B:5:0x0015 \-\> B:6:0x0016\lDebug Info:\l  0x002c\-0x0038: r9 'permission' Ljava\/lang\/String;\l  0x002d\-0x0038: r10 '$i$a$\-all\-ActivityResultContracts$RequestMultiplePermissions$getSynchronousResult$allGranted$1' I\l  0x002b\-0x003f: r8 'element$iv' Ljava\/lang\/Object;\l  0x0024\-0x0040: r2 '$this$all$iv' [Ljava\/lang\/Object;\l  0x0025\-0x0040: r5 '$i$f$all' I\l  0x0060\-0x0069: r13 'it' Ljava\/lang\/String;\l  0x0061\-0x0069: r14 '$i$a$\-associate\-ActivityResultContracts$RequestMultiplePermissions$getSynchronousResult$1' I\l  0x005f\-0x0077: r12 'element$iv$iv' Ljava\/lang\/Object;\l  0x0058\-0x0078: r8 'destination$iv$iv' Ljava\/util\/Map;\l  0x0059\-0x0078: r9 '$this$associateTo$iv$iv' [Ljava\/lang\/Object;\l  0x005a\-0x0078: r10 '$i$f$associateTo' I\l  0x0045\-0x0079: r5 '$this$associate$iv' [Ljava\/lang\/Object;\l  0x0046\-0x0079: r6 '$i$f$associate' I\l  0x0051\-0x0079: r7 'capacity$iv' I\l  0x0041\-0x0080: r2 'allGranted' Z\l  \-1 \-0x0080: r17 'context' Landroid\/content\/Context;\l  \-1 \-0x0080: r18 'input' [Ljava\/lang\/String;\lBRIDGED_BY: androidx.activity.result.contract.ActivityResultContracts.RequestMultiplePermissions.getSynchronousResult(android.content.Context, java.lang.String[]):androidx.activity.result.contract.ActivityResultContract$SynchronousResult\<java.util.Map\<java.lang.String, java.lang.Boolean\>\>\lSIGNATURE: (Landroid\/content\/Context;[Ljava\/lang\/String;)Landroidx\/activity\/result\/contract\/ActivityResultContract$SynchronousResult\<Ljava\/util\/Map\<Ljava\/lang\/String;Ljava\/lang\/Boolean;\>;\>;\lRENAME_REASON:avoid collision after fix types in other method\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_28[style=dashed];
Node_17 -> Node_10;
Node_28 -> Node_16;
Node_16 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_22;
Node_29 -> Node_24;
Node_24 -> Node_30;
Node_30 -> Node_1;
Node_25 -> Node_1;
Node_14 -> Node_15;
Node_27 -> Node_18;
Node_18 -> Node_20;
Node_5 -> Node_6;
}

