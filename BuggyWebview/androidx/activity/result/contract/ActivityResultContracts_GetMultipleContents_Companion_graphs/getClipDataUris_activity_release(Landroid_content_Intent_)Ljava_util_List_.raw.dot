digraph "CFG forandroidx.activity.result.contract.ActivityResultContracts.GetMultipleContents.Companion.getClipDataUris$activity_release(Landroid\/content\/Intent;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<this\>\" \l0x0002: INVOKE  (r6 I:java.lang.Object A[D('$this$getClipDataUris' android.content.Intent)]), (r0 I:java.lang.String) type: STATIC call: kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object, java.lang.String):void A[MD:(java.lang.Object, java.lang.String):void (m)]\l0x0005: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet  (LINE:440)\l0x0007: INVOKE  (r0 I:java.util.LinkedHashSet) type: DIRECT call: java.util.LinkedHashSet.\<init\>():void A[MD:():void (c)]\l0x000a: INVOKE  (r1 I:android.net.Uri) = (r6 I:android.content.Intent A[D('$this$getClipDataUris' android.content.Intent)]) type: VIRTUAL call: android.content.Intent.getData():android.net.Uri A[MD:():android.net.Uri (c)] (LINE:441)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0011: INVOKE  \l  (r0 I:java.util.LinkedHashSet A[D('resultSet' java.util.LinkedHashSet)])\l  (r1 I:java.lang.Object A[D('data' android.net.Uri)])\l type: VIRTUAL call: java.util.LinkedHashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:442)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r1 I:android.content.ClipData) = (r6 I:android.content.Intent A[D('$this$getClipDataUris' android.content.Intent)]) type: VIRTUAL call: android.content.Intent.getClipData():android.content.ClipData A[MD:():android.content.ClipData (c)] (LINE:444)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clipData' android.content.ClipData)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026  (LINE:445)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: INVOKE  (r2 I:boolean) = (r0 I:java.util.LinkedHashSet A[D('resultSet' java.util.LinkedHashSet)]) type: VIRTUAL call: java.util.LinkedHashSet.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: INVOKE  (r2 I:java.util.List) =  type: STATIC call: kotlin.collections.CollectionsKt.emptyList():java.util.List A[MD:\<T\>:():java.util.List\<T\> (m)] (LINE:446)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|RETURN\l|0x0025: RETURN  (r2 I:java.util.List\<android.net.Uri\>) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clipData' android.content.ClipData)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003f  (LINE:447)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:448)\l0x0029: INVOKE  (r3 I:int) = (r1 I:android.content.ClipData A[D('clipData' android.content.ClipData)]) type: VIRTUAL call: android.content.ClipData.getItemCount():int A[MD:():int (c)]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|LOOP_START\lLOOP:0: B:13:0x002d\-\>B:17:0x003c\l|0x002d: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:20:0x003f \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: INVOKE  (r4 I:android.content.ClipData$Item) = (r1 I:android.content.ClipData A[D('clipData' android.content.ClipData)]), (r2 I:int A[D('i' int)]) type: VIRTUAL call: android.content.ClipData.getItemAt(int):android.content.ClipData$Item A[MD:(int):android.content.ClipData$Item (c)] (LINE:449)\l0x0033: INVOKE  (r4 I:android.net.Uri) = (r4 I:android.content.ClipData$Item) type: VIRTUAL call: android.content.ClipData.Item.getUri():android.net.Uri A[MD:():android.net.Uri (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('uri' android.net.Uri)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x003c  (LINE:450)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: INVOKE  \l  (r0 I:java.util.LinkedHashSet A[D('resultSet' java.util.LinkedHashSet)])\l  (r4 I:java.lang.Object A[D('uri' android.net.Uri)])\l type: VIRTUAL call: java.util.LinkedHashSet.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:451)\l}"];
Node_21 [shape=record,label="{21\:\ 0x003c|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|LOOP_END\lLOOP:0: B:13:0x002d\-\>B:17:0x003c\l|0x003c: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:448)\l}"];
Node_22 [shape=record,label="{22\:\ 0x003c|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: NEW_INSTANCE  (r2 I:java.util.ArrayList A[D('i' int)]) =  java.util.ArrayList  (LINE:455)\l0x0041: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY] A[D('resultSet' java.util.LinkedHashSet)]) \l0x0042: CHECK_CAST (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:??[OBJECT, ARRAY]) \l0x0044: INVOKE  (r2 I:java.util.ArrayList), (r3 I:java.util.Collection) type: DIRECT call: java.util.ArrayList.\<init\>(java.util.Collection):void A[MD:(java.util.Collection\<? extends E\>):void (c)]\l0x0047: CHECK_CAST (r2 I:java.util.List) = (java.util.List) (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|RETURN\l|0x0049: RETURN  (r2 I:java.util.List\<android.net.Uri\>) \l}"];
MethodNode[shape=record,label="{public final java.util.List\<android.net.Uri\> androidx.activity.result.contract.ActivityResultContracts.GetMultipleContents.Companion.getClipDataUris$activity_release((r5 'this' I:androidx.activity.result.contract.ActivityResultContracts$GetMultipleContents$Companion A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Intent A[D('$this$getClipDataUris' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:17:0x003c \-\> B:13:0x002d, CROSS_EDGE: B:15:0x0037 \-\> B:17:0x003c, CROSS_EDGE: B:19:0x0049 \-\> B:1:?, CROSS_EDGE: B:11:0x0026 \-\> B:18:0x003f, CROSS_EDGE: B:6:0x0019 \-\> B:11:0x0026, CROSS_EDGE: B:3:0x000e \-\> B:5:0x0015\lDebug Info:\l  0x0010\-0x0014: r1 'data' Landroid\/net\/Uri;\l  0x0011\-0x0014: r2 '$i$a$\-let\-ActivityResultContracts$GetMultipleContents$Companion$getClipDataUris$1' I\l  0x0037\-0x003c: r4 'uri' Landroid\/net\/Uri;\l  0x0029\-0x003f: r2 'i' I\l  0x000a\-0x0049: r0 'resultSet' Ljava\/util\/LinkedHashSet;\l  0x0019\-0x0049: r1 'clipData' Landroid\/content\/ClipData;\l  \-1 \-0x0049: r6 '$this$getClipDataUris' Landroid\/content\/Intent;\lSIGNATURE: (Landroid\/content\/Intent;)Ljava\/util\/List\<Landroid\/net\/Uri;\>;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_21;
Node_21 -> Node_17;
Node_17 -> Node_13;
Node_22 -> Node_17;
Node_20 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

