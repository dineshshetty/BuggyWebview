digraph "CFG forandroidx.activity.result.contract.ActivityResultContracts.RequestPermission.parseResult(ILandroid\/content\/Intent;)Ljava\/lang\/Boolean;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:216)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|0x0001: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('intent' android.content.Intent)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0030 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0004|0x0004: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('resultCode' int)]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0007 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0007|0x0007: CONST_STR  (r1 I:java.lang.String) =  \"androidx.activity.result.contract.extra.PERMISSION_GRANT_RESULTS\"  (LINE:218)\l0x0009: INVOKE  (r1 I:int[]) = (r12 I:android.content.Intent A[D('intent' android.content.Intent)]), (r1 I:java.lang.String) type: VIRTUAL call: android.content.Intent.getIntArrayExtra(java.lang.String):int[] A[MD:(java.lang.String):int[] (c)]\l0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:219)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('grantResults' int[])]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY] A[D('grantResults' int[])]) \l0x0012: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: ARRAY_LENGTH  (r5 I:int) = (r3 I:??[] A[D('$this$any$iv' int[])])  (LINE:602)\l0x0014: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|LOOP_START\lLOOP:0: B:10:0x0015\-\>B:17:0x0024\l|0x0015: IF  (r6 I:??[int, byte, short, char]) \>= (r5 I:??[int, byte, short, char])  \-\> B:26:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: AGET  (r7 I:??[int, float, short, byte, char]) = (r3 I:??[int, float][] A[D('$this$any$iv' int[])]), (r6 I:??[int, short, byte, char]) \l0x0019: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('element$iv' int)]) \l0x001a: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001f  (LINE:220)\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: CONST  (r8 I:??[boolean, int, float, short, byte, char] A[D('result' int)]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|0x0020: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0024 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|LOOP_END\lLOOP:0: B:10:0x0015\-\>B:17:0x0024\l|0x0024: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0022|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|0x0022: CONST  (r3 I:??[boolean, int, float, short, byte, char] A[D('$this$any$iv' int[])]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0028|0x0028: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('$this$any$iv' int[])]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x002b  (LINE:221)\l}"];
Node_20 [shape=record,label="{20\:\ 0x002a|0x002a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|0x0027: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('$this$any$iv' int[])]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:603)\l}"];
Node_21 [shape=record,label="{21\:\ 0x002b|0x002b: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:219)\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|RETURN\l|0x002f: RETURN  (r0 I:java.lang.Boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: INVOKE  (r0 I:java.lang.Boolean) = (r0 I:boolean) type: STATIC call: java.lang.Boolean.valueOf(boolean):java.lang.Boolean A[MD:(boolean):java.lang.Boolean (c)] (LINE:216)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0034|RETURN\l|0x0034: RETURN  (r0 I:java.lang.Boolean) \l}"];
MethodNode[shape=record,label="{public java.lang.Boolean androidx.activity.result.contract.ActivityResultContracts.RequestPermission.parseResult((r10 'this' I:androidx.activity.result.contract.ActivityResultContracts$RequestPermission A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('resultCode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.content.Intent A[D('intent' android.content.Intent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0028 \-\> B:21:0x002b, BACK_EDGE: B:17:0x0024 \-\> B:10:0x0015, CROSS_EDGE: B:14:0x001f \-\> B:15:0x0020, CROSS_EDGE: B:18:0x0027 \-\> B:19:0x0028, CROSS_EDGE: B:8:0x000f \-\> B:21:0x002b, CROSS_EDGE: B:24:0x0034 \-\> B:1:?, CROSS_EDGE: B:3:0x0001 \-\> B:23:0x0030\lDebug Info:\l  0x001a\-0x0020: r8 'result' I\l  0x001b\-0x0020: r9 '$i$a$\-any\-ActivityResultContracts$RequestPermission$parseResult$1' I\l  0x0019\-0x0027: r7 'element$iv' I\l  0x0012\-0x0028: r3 '$this$any$iv' [I\l  0x0013\-0x0028: r4 '$i$f$any' I\l  0x000e\-0x0030: r1 'grantResults' [I\l  \-1 \-0x0034: r11 'resultCode' I\l  \-1 \-0x0034: r12 'intent' Landroid\/content\/Intent;\lBRIDGED_BY: androidx.activity.result.contract.ActivityResultContracts.RequestPermission.parseResult(int, android.content.Intent):java.lang.Boolean\lJadxCommentsAttr\{\l WARN: \l \-\> Can't rename method to resolve collision\}\lMETHOD_OVERRIDE: [androidx.activity.result.contract.ActivityResultContract.parseResult(int, android.content.Intent):O]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_23[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_26;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_25[style=dashed];
Node_17 -> Node_10;
Node_25 -> Node_16;
Node_16 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_14 -> Node_15;
Node_26 -> Node_18;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_23 -> Node_24;
Node_24 -> Node_1;
}

