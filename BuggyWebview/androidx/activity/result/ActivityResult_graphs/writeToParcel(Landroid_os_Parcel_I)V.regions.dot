digraph "CFG forandroidx.activity.result.ActivityResult.writeToParcel(Landroid\/os\/Parcel;I)V" {
subgraph cluster_Region_1347958572 {
label = "R(3:1|4|(1:(1:6)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|r2.writeInt(r1.mResultCode)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|PHI: r0 \l  PHI: (r0v3 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.writeInt(r1.mData == null ? 0 : 1)\landroid.content.Intent android.content.Intent r0 = r1.mData\l}"];
subgraph cluster_Region_733690654 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1331488283 {
label = "IF [B:18:0x0011] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0011|if (r0 != null) goto L6\l}"];
subgraph cluster_Region_278285722 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0013|r0.writeToParcel(r2, r3)\l}"];
}
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0007}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0009}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0016|ORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000b}"];
MethodNode[shape=record,label="{public void androidx.activity.result.ActivityResult.writeToParcel((r1v0 'this' androidx.activity.result.ActivityResult A[IMMUTABLE_TYPE, THIS]), (r2v0 'dest' android.os.Parcel A[D('dest' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'flags' int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0011 \-\> B:20:0x0016, CROSS_EDGE: B:16:0x000b \-\> B:17:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.os.Parcelable.writeToParcel(android.os.Parcel, int):void\}]\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_11 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

