digraph "CFG forandroidx.activity.ComponentActivity.1.run()V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IllegalStateException \-\> 0x0006, blocks: (B:14:0x0000), top: B:21:0x0000 \}\lCatch: IllegalStateException \-\> 0x0006\l|0x0000: IGET  (r0 I:androidx.activity.ComponentActivity) = (r3 I:androidx.activity.ComponentActivity$1) androidx.activity.ComponentActivity.1.this$0 androidx.activity.ComponentActivity A[Catch: IllegalStateException \-\> 0x0006, TRY_ENTER] (LINE:156)\l0x0002: INVOKE  (r0 I:androidx.activity.ComponentActivity) type: STATIC call: androidx.activity.ComponentActivity.access$001(androidx.activity.ComponentActivity):void A[Catch: IllegalStateException \-\> 0x0006, MD:(androidx.activity.ComponentActivity):void (m), TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|0x0013: RETURN   A[SYNTHETIC] (LINE:163)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|ExcHandler: IllegalStateException \-\> 0x0006\l|0x0006: MOVE_EXCEPTION  (r0 I:java.lang.IllegalStateException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalStateException \-\> 0x0006] (LINE:157)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: INVOKE  (r1 I:java.lang.String) = (r0 I:java.lang.IllegalStateException A[D('e' java.lang.IllegalStateException)]) type: VIRTUAL call: java.lang.IllegalStateException.getMessage():java.lang.String A[MD:():java.lang.String (s)] (LINE:158)\l0x000b: CONST_STR  (r2 I:java.lang.String) =  \"Can not perform this action after onSaveInstanceState\" \l0x000d: INVOKE  (r1 I:boolean) = (r1 I:java.lang.CharSequence), (r2 I:java.lang.CharSequence) type: STATIC call: android.text.TextUtils.equals(java.lang.CharSequence, java.lang.CharSequence):boolean A[MD:(java.lang.CharSequence, java.lang.CharSequence):boolean (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|0x0011: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0014 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|RETURN\lORIG_RETURN\l|0x0013: RETURN    (LINE:163)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalStateException)])  (LINE:160)\l}"];
MethodNode[shape=record,label="{public void androidx.activity.ComponentActivity.1.run((r3 'this' I:androidx.activity.ComponentActivity$1 A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0011 \-\> B:19:0x0013, CROSS_EDGE: B:20:0x0014 \-\> B:13:?, CROSS_EDGE: B:21:0x0000 \-\> B:16:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x0013: r0 'e' Ljava\/lang\/IllegalStateException;\l  0x0014\-0x0014: r0 'e' Ljava\/lang\/IllegalStateException;\lTryCatch #0 \{IllegalStateException \-\> 0x0006, blocks: (B:14:0x0000), top: B:21:0x0000 \}\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_12;Node_12 -> Node_21;
Node_21 -> Node_14;
Node_21 -> Node_16;
Node_14 -> Node_22;
Node_14 -> Node_23;
Node_22 -> Node_16;
Node_23 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_13;
Node_20 -> Node_13;
}

