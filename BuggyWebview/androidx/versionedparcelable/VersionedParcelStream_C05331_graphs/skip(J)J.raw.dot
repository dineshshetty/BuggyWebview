digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.1.skip(J)J" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:androidx.versionedparcelable.VersionedParcelStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream$1) androidx.versionedparcelable.VersionedParcelStream.1.this$0 androidx.versionedparcelable.VersionedParcelStream  (LINE:110)\l0x0002: IGET  (r0 I:int) = (r0 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldSize int \l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0018 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IGET  (r0 I:androidx.versionedparcelable.VersionedParcelStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream$1) androidx.versionedparcelable.VersionedParcelStream.1.this$0 androidx.versionedparcelable.VersionedParcelStream \l0x0009: IGET  (r0 I:int) = (r0 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCount int \l0x000b: IGET  (r1 I:androidx.versionedparcelable.VersionedParcelStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream$1) androidx.versionedparcelable.VersionedParcelStream.1.this$0 androidx.versionedparcelable.VersionedParcelStream \l0x000d: IGET  (r1 I:int) = (r1 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldSize int \l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|0x000f: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:20:0x0012 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException  (LINE:111)\l0x0014: INVOKE  (r0 I:java.io.IOException) type: DIRECT call: java.io.IOException.\<init\>():void A[MD:():void (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0018|0x0018: INVOKE  (r0 I:long) = (r5 I:java.io.FilterInputStream), (r6 I:long A[D('n' long)]) type: SUPER call: java.io.FilterInputStream.skip(long):long A[MD:(long):long throws java.io.IOException (c)] (LINE:113)\l0x001c: CONST  (r2 I:??[long, double]) = (0 ??[long, double])  (LINE:114)\l0x001e: CMP_L  (r4 I:int) = (r0 I:long A[D('skip' long)]), (r2 I:long) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|0x0020: IF  (r4 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:25:0x002a \l}"];
Node_24 [shape=record,label="{24\:\ 0x0022|0x0022: IGET  (r2 I:androidx.versionedparcelable.VersionedParcelStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream$1) androidx.versionedparcelable.VersionedParcelStream.1.this$0 androidx.versionedparcelable.VersionedParcelStream  (LINE:115)\l0x0024: IGET  (r3 I:int) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCount int \l0x0026: CAST (r4 I:int) = (int) (r0 I:long A[D('skip' long)]) \l0x0027: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0028: IPUT  (r3 I:int), (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCount int \l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|RETURN\l|0x002a: RETURN  (r0 I:long A[D('skip' long)])  (LINE:117)\l}"];
MethodNode[shape=record,label="{public long androidx.versionedparcelable.VersionedParcelStream.1.skip((r5 'this' I:androidx.versionedparcelable.VersionedParcelStream$1 A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('n' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:25:0x002a \-\> B:14:?, CROSS_EDGE: B:23:0x0020 \-\> B:25:0x002a, CROSS_EDGE: B:16:0x0005 \-\> B:22:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001c\-0x002a: r0 'skip' J\l  \-1 \-0x002a: r6 'n' J\lEXCEPTIONS:[Ljava\/io\/IOException;]\lMETHOD_OVERRIDE: [ClspMth\{java.io.InputStream.skip(long):long throws java.io.IOException\}]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_14;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_14;
}

