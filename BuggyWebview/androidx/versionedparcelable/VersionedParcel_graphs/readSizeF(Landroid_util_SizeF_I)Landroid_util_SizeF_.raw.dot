digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readSizeF(Landroid\/util\/SizeF;I)Landroid\/util\/SizeF;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r3 I:androidx.versionedparcelable.VersionedParcel), (r5 I:int A[D('fieldId' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readField(int):boolean A[MD:(int):boolean (m)] (LINE:1272)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0007 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|RETURN\l|0x0006: RETURN  (r4 I:android.util.SizeF A[D('def' android.util.SizeF)])  (LINE:1273)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r3 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readBoolean():boolean A[MD:():boolean (m)] (LINE:1275)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x001b \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: INVOKE  (r0 I:float) = (r3 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readFloat():float A[MD:():float (m)] (LINE:1276)\l0x0011: INVOKE  (r1 I:float) = (r3 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readFloat():float A[MD:():float (m)] (LINE:1277)\l0x0015: NEW_INSTANCE  (r2 I:android.util.SizeF) =  android.util.SizeF  (LINE:1278)\l0x0017: INVOKE  (r2 I:android.util.SizeF), (r0 I:float A[D('width' float)]), (r1 I:float A[D('height' float)]) type: DIRECT call: android.util.SizeF.\<init\>(float, float):void A[MD:(float, float):void (c)]\l}"];
Node_19 [shape=record,label="{19\:\ 0x001a|RETURN\l|0x001a: RETURN  (r2 I:android.util.SizeF) \l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\l|0x001b: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' float)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1280)\l0x001c: RETURN  (r0 I:android.util.SizeF) \l}"];
MethodNode[shape=record,label="{public android.util.SizeF androidx.versionedparcelable.VersionedParcel.readSizeF((r3 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r4 I:android.util.SizeF A[D('def' android.util.SizeF), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x001a \-\> B:12:?, CROSS_EDGE: B:21:0x001c \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x001b: r0 'width' F\l  0x0015\-0x001b: r1 'height' F\l  \-1 \-0x001c: r4 'def' Landroid\/util\/SizeF;\l  \-1 \-0x001c: r5 'fieldId' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_12;
Node_20 -> Node_12;
}

