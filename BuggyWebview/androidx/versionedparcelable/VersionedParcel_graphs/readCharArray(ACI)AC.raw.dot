digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readCharArray([CI)[C" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r4 I:androidx.versionedparcelable.VersionedParcel), (r6 I:int A[D('fieldId' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readField(int):boolean A[MD:(int):boolean (m)] (LINE:625)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|0x0006: RETURN  (r5 I:char[] A[D('def' char[])])  (LINE:626)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:628)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('n' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x000f  (LINE:629)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|RETURN\l|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:630)\l0x000e: RETURN  (r1 I:char[]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: NEW_ARRAY  (r1 I:char[]) = (r0 I:int A[D('n' int), IMMUTABLE_TYPE]) type: char[]  (LINE:632)\l0x0011: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:633)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012|LOOP_START\lLOOP:0: B:24:0x0012\-\>B:25:0x0014\l|0x0012: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('n' int)])  \-\> B:27:0x001e \l}"];
Node_25 [shape=record,label="{25\:\ 0x0014|LOOP_END\lLOOP:0: B:24:0x0012\-\>B:25:0x0014\l|0x0014: INVOKE  (r3 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:634)\l0x0018: CAST (r3 I:char) = (char) (r3 I:int) \l0x0019: APUT  \l  (r1 I:char[] A[D('val' char[]), IMMUTABLE_TYPE])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:char A[IMMUTABLE_TYPE])\l \l0x001b: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:633)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:char[] A[D('val' char[])])  (LINE:636)\l}"];
MethodNode[shape=record,label="{public char[] androidx.versionedparcelable.VersionedParcel.readCharArray((r4 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r5 I:char[] A[D('def' char[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000e \-\> B:15:?, BACK_EDGE: B:25:0x0014 \-\> B:24:0x0012, CROSS_EDGE: B:26:0x001e \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x001e: r2 'i' I\l  0x000b\-0x001e: r0 'n' I\l  0x0011\-0x001e: r1 'val' [C\l  \-1 \-0x001e: r5 'def' [C\l  \-1 \-0x001e: r6 'fieldId' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_15;
}

