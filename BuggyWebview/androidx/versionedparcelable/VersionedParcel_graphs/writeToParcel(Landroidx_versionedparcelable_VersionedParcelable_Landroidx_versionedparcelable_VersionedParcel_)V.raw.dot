digraph "CFG forandroidx.versionedparcelable.VersionedParcel.writeToParcel(Landroidx\/versionedparcelable\/VersionedParcelable;Landroidx\/versionedparcelable\/VersionedParcel;)V" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_42 [shape=record,label="{42\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #2 \{ClassNotFoundException \-\> 0x0017, IllegalAccessException \-\> 0x0041, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, blocks: (B:24:0x0000), top: B:42:0x0000 \}\lCatch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r5 I:java.lang.Object A[D('val' T extends androidx.versionedparcelable.VersionedParcelable)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041, MD:():java.lang.Class\<?\> (c), TRY_ENTER] (LINE:1586)\l0x0004: INVOKE  (r0 I:java.lang.reflect.Method) = (r4 I:androidx.versionedparcelable.VersionedParcel), (r0 I:java.lang.Class) type: DIRECT call: androidx.versionedparcelable.VersionedParcel.getWriteMethod(java.lang.Class):java.lang.reflect.Method A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041, MD:(java.lang.Class):java.lang.reflect.Method throws java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.ClassNotFoundException (m)]\l0x0008: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1587)\l0x0009: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x000a: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041]\l0x000c: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x000d: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r5 I:??[OBJECT, ARRAY] A[D('val' T extends androidx.versionedparcelable.VersionedParcelable)])\l A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041]\l0x000f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0010: APUT  \l  (r2 I:??[OBJECT, ARRAY][])\l  (r3 I:??[int, short, byte, char])\l  (r6 I:??[OBJECT, ARRAY] A[D('versionedParcel' androidx.versionedparcelable.VersionedParcel)])\l A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041]\l0x0012: INVOKE  (r0 I:java.lang.reflect.Method A[D('m' java.lang.reflect.Method)]), (r1 I:java.lang.Object), (r2 I:java.lang.Object[]) type: VIRTUAL call: java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object A[Catch: ClassNotFoundException \-\> 0x0017, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, IllegalAccessException \-\> 0x0041, MD:(java.lang.Object, java.lang.Object[]):java.lang.Object VARARG throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException (c), TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:1600)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_26 [shape=record,label="{26\:\ 0x0017|ExcHandler: ClassNotFoundException \-\> 0x0017\l|0x0017: MOVE_EXCEPTION  (r0 I:java.lang.ClassNotFoundException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: ClassNotFoundException \-\> 0x0017] (LINE:1597)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0018|0x0018: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:1598)\l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"VersionedParcel encountered ClassNotFoundException\" \l0x001c: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.ClassNotFoundException)])\l type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x001f|0x001f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0041|ExcHandler: IllegalAccessException \-\> 0x0041\l|0x0041: MOVE_EXCEPTION  (r0 I:java.lang.IllegalAccessException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IllegalAccessException \-\> 0x0041] (LINE:1588)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0042|0x0042: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:1589)\l0x0044: CONST_STR  (r2 I:java.lang.String) =  \"VersionedParcel encountered IllegalAccessException\" \l0x0046: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.IllegalAccessException)])\l type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0049|0x0049: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0020|ExcHandler: NoSuchMethodException \-\> 0x0020\l|0x0020: MOVE_EXCEPTION  (r0 I:java.lang.NoSuchMethodException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: NoSuchMethodException \-\> 0x0020] (LINE:1595)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:1596)\l0x0023: CONST_STR  (r2 I:java.lang.String) =  \"VersionedParcel encountered NoSuchMethodException\" \l0x0025: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.NoSuchMethodException)])\l type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0028|0x0028: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0029|ExcHandler: InvocationTargetException \-\> 0x0029\l|0x0029: MOVE_EXCEPTION  (r0 I:java.lang.reflect.InvocationTargetException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: InvocationTargetException \-\> 0x0029] (LINE:1590)\l}"];
Node_33 [shape=record,label="{33\:\ 0x002a|0x002a: INVOKE  (r1 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)] (LINE:1591)\l0x002e: INSTANCE_OF  (r1 I:boolean) = (r1 I:??[OBJECT, ARRAY]) java.lang.RuntimeException \l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|0x0030: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0039 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0032|0x0032: INVOKE  (r1 I:java.lang.Throwable) = (r0 I:java.lang.reflect.InvocationTargetException A[D('e' java.lang.reflect.InvocationTargetException)]) type: VIRTUAL call: java.lang.reflect.InvocationTargetException.getCause():java.lang.Throwable A[MD:():java.lang.Throwable (c)] (LINE:1592)\l0x0036: CHECK_CAST (r1 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0038|0x0038: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0039|0x0039: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:1594)\l0x003b: CONST_STR  (r2 I:java.lang.String) =  \"VersionedParcel encountered InvocationTargetException\" \l0x003d: INVOKE  \l  (r1 I:java.lang.RuntimeException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.reflect.InvocationTargetException)])\l type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.String, java.lang.Throwable):void A[MD:(java.lang.String, java.lang.Throwable):void (c)]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0040|0x0040: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void androidx.versionedparcelable.VersionedParcel.writeToParcel((r4 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r5 I:T extends androidx.versionedparcelable.VersionedParcelable A[D('val' T extends androidx.versionedparcelable.VersionedParcelable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:androidx.versionedparcelable.VersionedParcel A[D('versionedParcel' androidx.versionedparcelable.VersionedParcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001f \-\> B:23:?, CROSS_EDGE: B:41:0x0049 \-\> B:23:?, CROSS_EDGE: B:31:0x0028 \-\> B:23:?, CROSS_EDGE: B:36:0x0038 \-\> B:23:?, CROSS_EDGE: B:38:0x0040 \-\> B:23:?, CROSS_EDGE: B:42:0x0000 \-\> B:26:0x0017, CROSS_EDGE: B:42:0x0000 \-\> B:39:0x0041, CROSS_EDGE: B:42:0x0000 \-\> B:29:0x0020, CROSS_EDGE: B:42:0x0000 \-\> B:32:0x0029\lINLINE_NOT_NEEDED\lTryCatch #2 \{ClassNotFoundException \-\> 0x0017, IllegalAccessException \-\> 0x0041, NoSuchMethodException \-\> 0x0020, InvocationTargetException \-\> 0x0029, blocks: (B:24:0x0000), top: B:42:0x0000 \}\lTYPE_VARS: [T extends androidx.versionedparcelable.VersionedParcelable]\lSIGNATURE: \<T::Landroidx\/versionedparcelable\/VersionedParcelable;\>(TT;Landroidx\/versionedparcelable\/VersionedParcel;)V\lDebug Info:\l  0x0008\-0x0016: r0 'm' Ljava\/lang\/reflect\/Method;\l  0x0018\-0x0020: r0 'e' Ljava\/lang\/ClassNotFoundException;\l  0x0021\-0x0029: r0 'e' Ljava\/lang\/NoSuchMethodException;\l  0x002a\-0x0041: r0 'e' Ljava\/lang\/reflect\/InvocationTargetException;\l  0x0042\-0x0049: r0 'e' Ljava\/lang\/IllegalAccessException;\l  0x0000\-0x0049: r5 'val' Landroidx\/versionedparcelable\/VersionedParcelable;, signature: TT;\l  \-1 \-0x0049: r6 'versionedParcel' Landroidx\/versionedparcelable\/VersionedParcel;\l}"];
MethodNode -> Node_22;Node_22 -> Node_42;
Node_42 -> Node_24;
Node_42 -> Node_26;
Node_42 -> Node_39;
Node_42 -> Node_29;
Node_42 -> Node_32;
Node_24 -> Node_25;
Node_24 -> Node_43;
Node_25 -> Node_23;
Node_43 -> Node_26;
Node_43 -> Node_39;
Node_43 -> Node_29;
Node_43 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_23;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_23;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_23;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_23;
Node_37 -> Node_38;
Node_38 -> Node_23;
}

