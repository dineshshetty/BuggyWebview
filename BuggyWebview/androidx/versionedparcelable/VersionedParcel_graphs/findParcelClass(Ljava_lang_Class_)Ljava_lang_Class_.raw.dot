digraph "CFG forandroidx.versionedparcelable.VersionedParcel.findParcelClass(Ljava\/lang\/Class;)Ljava\/lang\/Class;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.collection.ArrayMap\<java.lang.String, java.lang.Class\>) = (r6 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.mParcelizerCache androidx.collection.ArrayMap  (LINE:1628)\l0x0002: INVOKE  (r1 I:java.lang.String) = (r7 I:java.lang.Class A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:androidx.collection.ArrayMap), (r1 I:java.lang.Object) type: VIRTUAL call: androidx.collection.ArrayMap.get(java.lang.Object):java.lang.Object A[MD:(java.lang.Object):V (m)]\l0x000a: CHECK_CAST (r0 I:java.lang.Class) = (java.lang.Class) (r0 I:??[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x000c|0x000c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ret' java.lang.Class)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:?  (LINE:1629)\l}"];
Node_11 [shape=record,label="{11\:\ 0x000e|0x000e: INVOKE  (r1 I:java.lang.Package) = (r7 I:java.lang.Class A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>)]) type: VIRTUAL call: java.lang.Class.getPackage():java.lang.Package A[MD:():java.lang.Package (c)] (LINE:1630)\l0x0012: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Package) type: VIRTUAL call: java.lang.Package.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0016: CONST  (r2 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1631)\l0x0017: NEW_ARRAY  (r2 I:java.lang.Object[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0019: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001a: APUT  (r2 I:??[OBJECT, ARRAY][]), (r3 I:??[int, short, byte, char]), (r1 I:??[OBJECT, ARRAY] A[D('pkg' java.lang.String)]) \l0x001c: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.Class A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>)]) type: VIRTUAL call: java.lang.Class.getSimpleName():java.lang.String A[MD:():java.lang.String (c)]\l0x0021: APUT  (r2 I:??[OBJECT, ARRAY][]), (r4 I:??[int, short, byte, char]), (r5 I:??[OBJECT, ARRAY]) \l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"%s.%sParcelizer\" \l0x0025: INVOKE  (r2 I:java.lang.String) = (r4 I:java.lang.String), (r2 I:java.lang.Object[]) type: STATIC call: java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String A[MD:(java.lang.String, java.lang.Object[]):java.lang.String VARARG (c)]\l0x0029: INVOKE  (r4 I:java.lang.ClassLoader) = (r7 I:java.lang.Class A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>)]) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[MD:():java.lang.ClassLoader (c)] (LINE:1632)\l0x002d: INVOKE  (r0 I:java.lang.Class A[D('ret' java.lang.Class)]) = (r2 I:java.lang.String A[D('c' java.lang.String)]), (r3 I:boolean), (r4 I:java.lang.ClassLoader) type: STATIC call: java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class A[MD:(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l0x0031: IGET  (r3 I:androidx.collection.ArrayMap\<java.lang.String, java.lang.Class\>) = (r6 I:androidx.versionedparcelable.VersionedParcel) androidx.versionedparcelable.VersionedParcel.mParcelizerCache androidx.collection.ArrayMap  (LINE:1633)\l0x0033: INVOKE  (r4 I:java.lang.String) = (r7 I:java.lang.Class A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>)]) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x0037: INVOKE  (r3 I:androidx.collection.ArrayMap), (r4 I:java.lang.Object), (r0 I:java.lang.Object A[D('ret' java.lang.Class)]) type: VIRTUAL call: androidx.collection.ArrayMap.put(java.lang.Object, java.lang.Object):java.lang.Object A[MD:(K, V):V (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|RETURN\lORIG_RETURN\l|0x003a: RETURN  (r0 I:java.lang.Class A[D('ret' java.lang.Class)])  (LINE:1635)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x003a: RETURN  (r0 I:java.lang.Class A[D('ret' java.lang.Class)]) A[SYNTHETIC] (LINE:1635)\l}"];
MethodNode[shape=record,label="{private java.lang.Class androidx.versionedparcelable.VersionedParcel.findParcelClass((r6 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\> A[D('cls' java.lang.Class\<? extends androidx.versionedparcelable.VersionedParcelable\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000c \-\> B:12:0x003a\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0016\-0x003a: r1 'pkg' Ljava\/lang\/String;\l  0x0029\-0x003a: r2 'c' Ljava\/lang\/String;\l  0x000c\-0x003a: r0 'ret' Ljava\/lang\/Class;\l  0x0000\-0x003a: r7 'cls' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<+Landroidx\/versionedparcelable\/VersionedParcelable;\>;\lEXCEPTIONS:[Ljava\/lang\/ClassNotFoundException;]\lSIGNATURE: (Ljava\/lang\/Class\<+Landroidx\/versionedparcelable\/VersionedParcelable;\>;)Ljava\/lang\/Class;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

