digraph "CFG forandroidx.versionedparcelable.VersionedParcel.getReadMethod(Ljava\/lang\/String;)Ljava\/lang\/reflect\/Method;" {
subgraph cluster_Region_1156275750 {
label = "R(2:1|(2:(2:3|4)|(1:6)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0000|java.lang.reflect.Method java.lang.reflect.Method r1 = r7.mReadCache.get(r8)\l}"];
subgraph cluster_Region_86753349 {
label = "R(2:(2:3|4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_864579049 {
label = "IF [B:10:0x000a] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x000a|if (r1 == null) goto L3\l}"];
subgraph cluster_Region_415652314 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x000c|java.lang.System.currentTimeMillis()\ljava.lang.Class java.lang.Class r4 = java.lang.Class.forName(r8, true, androidx.versionedparcelable.VersionedParcel.class.getClassLoader())\ljava.lang.reflect.Method java.lang.reflect.Method r1 = r4.getDeclaredMethod(\"read\", androidx.versionedparcelable.VersionedParcel.class)\lr7.mReadCache.put(r8, r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|RETURN\lORIG_RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_1861656550 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private java.lang.reflect.Method androidx.versionedparcelable.VersionedParcel.getReadMethod((r7v0 'this' androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r8v0 'parcelCls' java.lang.String A[D('parcelCls' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000a \-\> B:12:0x0029\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/lang\/IllegalAccessException;, Ljava\/lang\/NoSuchMethodException;, Ljava\/lang\/ClassNotFoundException;]\l}"];
MethodNode -> Node_7;Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
Node_7 -> Node_9;
}

