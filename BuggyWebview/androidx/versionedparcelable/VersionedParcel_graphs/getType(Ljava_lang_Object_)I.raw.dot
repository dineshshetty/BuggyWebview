digraph "CFG forandroidx.versionedparcelable.VersionedParcel.getType(Ljava\/lang\/Object;)I" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) java.lang.String  (LINE:995)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0006 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|RETURN\l|0x0004: CONST  (r0 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char])  (LINE:996)\l0x0005: RETURN  (r0 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0006|0x0006: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) android.os.Parcelable  (LINE:997)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0008|0x0008: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x000c \l}"];
Node_40 [shape=record,label="{40\:\ 0x000a|RETURN\l|0x000a: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:998)\l0x000b: RETURN  (r0 I:int) \l}"];
Node_42 [shape=record,label="{42\:\ 0x000c|0x000c: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) androidx.versionedparcelable.VersionedParcelable  (LINE:999)\l}"];
Node_43 [shape=record,label="{43\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0012 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0010|RETURN\l|0x0010: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:1000)\l0x0011: RETURN  (r0 I:int) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0012|0x0012: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) java.io.Serializable  (LINE:1001)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0014|0x0014: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0018 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0016|RETURN\l|0x0016: CONST  (r0 I:??[int, float, short, byte, char]) = (3 ??[int, float, short, byte, char])  (LINE:1002)\l0x0017: RETURN  (r0 I:int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0018|0x0018: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) android.os.IBinder  (LINE:1003)\l}"];
Node_51 [shape=record,label="{51\:\ 0x001a|0x001a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x001e \l}"];
Node_52 [shape=record,label="{52\:\ 0x001c|RETURN\l|0x001c: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:1004)\l0x001d: RETURN  (r0 I:int) \l}"];
Node_54 [shape=record,label="{54\:\ 0x001e|0x001e: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) java.lang.Integer  (LINE:1005)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0024 \l}"];
Node_56 [shape=record,label="{56\:\ 0x0022|RETURN\l|0x0022: CONST  (r0 I:??[int, float, short, byte, char]) = (7 ??[int, float, short, byte, char])  (LINE:1006)\l0x0023: RETURN  (r0 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0024|0x0024: INSTANCE_OF  (r0 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('t' T)]) java.lang.Float  (LINE:1007)\l}"];
Node_59 [shape=record,label="{59\:\ 0x0026|0x0026: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x002b \l}"];
Node_60 [shape=record,label="{60\:\ 0x0028|RETURN\l|0x0028: CONST  (r0 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:1008)\l0x002a: RETURN  (r0 I:int) \l}"];
Node_62 [shape=record,label="{62\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:1010)\l0x002d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0032: INVOKE  (r2 I:java.lang.Class) = (r4 I:java.lang.Object A[D('t' T)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)]\l0x0036: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getName():java.lang.String A[MD:():java.lang.String (c)]\l0x003a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x003d: CONST_STR  (r2 I:java.lang.String) =  \" cannot be VersionedParcelled\" \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0042: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0046: INVOKE  (r0 I:java.lang.IllegalArgumentException), (r1 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0049|0x0049: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int androidx.versionedparcelable.VersionedParcel.getType((r3 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r4 I:T A[D('t' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:41:0x000b \-\> B:33:?, CROSS_EDGE: B:45:0x0011 \-\> B:33:?, CROSS_EDGE: B:49:0x0017 \-\> B:33:?, CROSS_EDGE: B:53:0x001d \-\> B:33:?, CROSS_EDGE: B:57:0x0023 \-\> B:33:?, CROSS_EDGE: B:61:0x002a \-\> B:33:?, CROSS_EDGE: B:63:0x0049 \-\> B:33:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0049: r4 't' Ljava\/lang\/Object;, signature: TT;\lTYPE_VARS: [T]\lSIGNATURE: \<T:Ljava\/lang\/Object;\>(TT;)I\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_33;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_33;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_33;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_50;
Node_48 -> Node_33;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_54;
Node_52 -> Node_33;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_58;
Node_56 -> Node_33;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_62;
Node_60 -> Node_33;
Node_62 -> Node_63;
Node_63 -> Node_33;
}

