digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readArray([Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
subgraph cluster_Region_1866703719 {
label = "R(2:1|(2:(1:3)|(3:5|(2:7|(2:(1:9)|(1:10)))|27)))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0000|int int r0 = readInt()\l}"];
subgraph cluster_Region_332949432 {
label = "R(2:(1:3)|(3:5|(2:7|(2:(1:9)|(1:10)))|27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2010256758 {
label = "IF [B:32:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0005|if (r0 \< 0) goto L3\l}"];
subgraph cluster_Region_1211559253 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0007|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1487392894 {
label = "R(3:5|(2:7|(2:(1:9)|(1:10)))|27)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0008|java.util.ArrayList java.util.ArrayList\<T\> r2 = new java.util.ArrayList\<\>(r0)\l}"];
subgraph cluster_IfRegion_1405093173 {
label = "IF [B:35:0x000d] THEN: R(2:7|(2:(1:9)|(1:10))) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x000d|if (r0 != 0) goto L7\l}"];
subgraph cluster_Region_351874613 {
label = "R(2:7|(2:(1:9)|(1:10)))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x000f|int int r3 = readInt()\l}"];
subgraph cluster_Region_294893670 {
label = "R(2:(1:9)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1461062617 {
label = "IF [B:37:0x0013] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0013|if (r0 \< 0) goto L9\l}"];
subgraph cluster_Region_1438455295 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0015|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_92818775 {
label = "R(1:10)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_352838397 {
label = "Switch: 5
 case 1 -> R(2:(1:24)|1)
 case 2 -> R(2:(1:21)|1)
 case 3 -> R(2:(1:18)|1)
 case 4 -> R(2:(1:15)|1)
 case 5 -> R(2:(1:12)|1)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0016|switch(r3) \{\l    case 1: goto L23;\l    case 2: goto L20;\l    case 3: goto L17;\l    case 4: goto L14;\l    case 5: goto L11;\l    default: goto L26;\l\}\l}"];
subgraph cluster_Region_2049660150 {
label = "R(2:(1:24)|1)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_805883368 {
label = "LOOP:4: (1:24)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x004a|LOOP_START\lLOOP:4: B:49:0x004a\-\>B:50:0x004c\lPHI: r0 \l  PHI: (r0v1 'n' int) = (r0v0 'n' int), (r0v2 'n' int) binds: [B:39:0x0016, B:50:0x004c] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> 0) goto L24\l}"];
subgraph cluster_Region_989444658 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x004c|LOOP_END\lLOOP:4: B:49:0x004a\-\>B:50:0x004c\l|r2.add(readVersionedParcelable())\lr0\-\-\l}"];
}
}
Node_InsnContainer_1987547997 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1264087681 {
label = "R(2:(1:21)|1)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1447747511 {
label = "LOOP:3: (1:21)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x003e|LOOP_START\lLOOP:3: B:47:0x003e\-\>B:48:0x0040\lPHI: r0 \l  PHI: (r0v3 'n' int) = (r0v0 'n' int), (r0v4 'n' int) binds: [B:39:0x0016, B:48:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> 0) goto L21\l}"];
subgraph cluster_Region_1396981992 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0040|LOOP_END\lLOOP:3: B:47:0x003e\-\>B:48:0x0040\l|r2.add(readParcelable())\lr0\-\-\l}"];
}
}
Node_InsnContainer_217939016 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_751896005 {
label = "R(2:(1:18)|1)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_91259366 {
label = "LOOP:2: (1:18)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0032|LOOP_START\lLOOP:2: B:45:0x0032\-\>B:46:0x0034\lPHI: r0 \l  PHI: (r0v5 'n' int) = (r0v0 'n' int), (r0v6 'n' int) binds: [B:39:0x0016, B:46:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> 0) goto L18\l}"];
subgraph cluster_Region_51747315 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0034|LOOP_END\lLOOP:2: B:45:0x0032\-\>B:46:0x0034\l|r2.add(readSerializable())\lr0\-\-\l}"];
}
}
Node_InsnContainer_1719047801 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1857170508 {
label = "R(2:(1:15)|1)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1650395730 {
label = "LOOP:1: (1:15)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0026|LOOP_START\lLOOP:1: B:43:0x0026\-\>B:44:0x0028\lPHI: r0 \l  PHI: (r0v7 'n' int) = (r0v0 'n' int), (r0v8 'n' int) binds: [B:39:0x0016, B:44:0x0028] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> 0) goto L15\l}"];
subgraph cluster_Region_1899977325 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0028|LOOP_END\lLOOP:1: B:43:0x0026\-\>B:44:0x0028\l|r2.add(readString())\lr0\-\-\l}"];
}
}
Node_InsnContainer_164233966 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_764531007 {
label = "R(2:(1:12)|1)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_349105276 {
label = "LOOP:0: (1:12)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x001a|LOOP_START\lLOOP:0: B:41:0x001a\-\>B:42:0x001c\lPHI: r0 \l  PHI: (r0v9 'n' int) = (r0v0 'n' int), (r0v10 'n' int) binds: [B:39:0x0016, B:42:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \> 0) goto L12\l}"];
subgraph cluster_Region_106976850 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x001c|LOOP_END\lLOOP:0: B:41:0x001a\-\>B:42:0x001c\l|r2.add(readStrongBinder())\lr0\-\-\l}"];
}
}
Node_InsnContainer_2139512746 [shape=record,label="{|break\l}"];
}
}
}
}
}
}
Node_52 [shape=record,label="{52\:\ 0x005a|RETURN\l|return (T[]) r2.toArray(r5)\l}"];
}
}
}
Node_29 [shape=record,color=red,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_30 [shape=record,color=red,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0056|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0056|SYNTHETIC\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0056|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x0056|SYNTHETIC\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0056|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0056}"];
MethodNode[shape=record,label="{public T[] androidx.versionedparcelable.VersionedParcel.readArray((r4v0 'this' androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r5v0 'def' T[] A[D('def' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:38:0x0015 \-\> B:30:?, BACK_EDGE: B:42:0x001c \-\> B:41:0x001a, CROSS_EDGE: B:52:0x005a \-\> B:30:?, BACK_EDGE: B:44:0x0028 \-\> B:43:0x0026, CROSS_EDGE: B:43:0x0026 \-\> B:51:0x0056, BACK_EDGE: B:46:0x0034 \-\> B:45:0x0032, CROSS_EDGE: B:45:0x0032 \-\> B:51:0x0056, BACK_EDGE: B:48:0x0040 \-\> B:47:0x003e, CROSS_EDGE: B:47:0x003e \-\> B:51:0x0056, BACK_EDGE: B:50:0x004c \-\> B:49:0x004a, CROSS_EDGE: B:49:0x004a \-\> B:51:0x0056, CROSS_EDGE: B:39:0x0016 \-\> B:51:0x0056, CROSS_EDGE: B:35:0x000d \-\> B:51:0x0056\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lJadxCommentsAttr\{\l WARN: \l \-\> Can't fix incorrect switch cases order, some code will duplicate\}\lSIGNATURE: \<T:Ljava\/lang\/Object;\>([TT;)[TT;\l}"];
MethodNode -> Node_29;Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_30;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_51[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_30;
Node_39 -> Node_41;
Node_39 -> Node_43;
Node_39 -> Node_45;
Node_39 -> Node_47;
Node_39 -> Node_49;
Node_39 -> Node_51;
Node_49 -> Node_50;
Node_49 -> Node_57[style=dashed];
Node_50 -> Node_49;
Node_47 -> Node_48;
Node_47 -> Node_56[style=dashed];
Node_48 -> Node_47;
Node_45 -> Node_46;
Node_45 -> Node_55[style=dashed];
Node_46 -> Node_45;
Node_43 -> Node_44;
Node_43 -> Node_54[style=dashed];
Node_44 -> Node_43;
Node_41 -> Node_42;
Node_41 -> Node_53[style=dashed];
Node_42 -> Node_41;
Node_52 -> Node_30;
Node_29 -> Node_31;
Node_53 -> Node_51;
Node_54 -> Node_51;
Node_55 -> Node_51;
Node_56 -> Node_51;
Node_57 -> Node_51;
Node_51 -> Node_52;
}

