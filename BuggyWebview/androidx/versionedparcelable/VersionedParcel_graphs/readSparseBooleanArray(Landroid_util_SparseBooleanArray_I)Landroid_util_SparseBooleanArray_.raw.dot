digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readSparseBooleanArray(Landroid\/util\/SparseBooleanArray;I)Landroid\/util\/SparseBooleanArray;" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r5 I:androidx.versionedparcelable.VersionedParcel), (r7 I:int A[D('fieldId' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readField(int):boolean A[MD:(int):boolean (m)] (LINE:1289)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0007 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0006|RETURN\l|0x0006: RETURN  (r6 I:android.util.SparseBooleanArray A[D('def' android.util.SparseBooleanArray)])  (LINE:1290)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:1292)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IF  (r0 I:??[int, byte, short, char] A[D('n' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x000f  (LINE:1293)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000d|RETURN\l|0x000d: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1294)\l0x000e: RETURN  (r1 I:android.util.SparseBooleanArray) \l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: NEW_INSTANCE  (r1 I:android.util.SparseBooleanArray) =  android.util.SparseBooleanArray  (LINE:1296)\l0x0011: INVOKE  (r1 I:android.util.SparseBooleanArray), (r0 I:int A[D('n' int)]) type: DIRECT call: android.util.SparseBooleanArray.\<init\>(int):void A[MD:(int):void (c)]\l0x0014: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1297)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|LOOP_START\lLOOP:0: B:24:0x0015\-\>B:25:0x0017\l|0x0015: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('n' int)])  \-\> B:27:0x0025  (LINE:1298)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|LOOP_END\lLOOP:0: B:24:0x0015\-\>B:25:0x0017\l|0x0017: INVOKE  (r3 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:1299)\l0x001b: INVOKE  (r4 I:boolean) = (r5 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readBoolean():boolean A[MD:():boolean (m)]\l0x001f: INVOKE  (r1 I:android.util.SparseBooleanArray A[D('sa' android.util.SparseBooleanArray)]), (r3 I:int), (r4 I:boolean) type: VIRTUAL call: android.util.SparseBooleanArray.put(int, boolean):void A[MD:(int, boolean):void (c)]\l0x0022: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:1300)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|RETURN\l|0x0025: RETURN  (r1 I:android.util.SparseBooleanArray A[D('sa' android.util.SparseBooleanArray)])  (LINE:1302)\l}"];
MethodNode[shape=record,label="{public android.util.SparseBooleanArray androidx.versionedparcelable.VersionedParcel.readSparseBooleanArray((r5 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r6 I:android.util.SparseBooleanArray A[D('def' android.util.SparseBooleanArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x000e \-\> B:15:?, BACK_EDGE: B:25:0x0017 \-\> B:24:0x0015, CROSS_EDGE: B:26:0x0025 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x0025: r0 'n' I\l  0x0014\-0x0025: r1 'sa' Landroid\/util\/SparseBooleanArray;\l  0x0015\-0x0025: r2 'i' I\l  \-1 \-0x0025: r6 'def' Landroid\/util\/SparseBooleanArray;\l  \-1 \-0x0025: r7 'fieldId' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_15;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_15;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_24;
Node_27 -> Node_26;
Node_26 -> Node_15;
}

