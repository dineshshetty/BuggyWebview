digraph "CFG forandroidx.versionedparcelable.VersionedParcel.readBooleanArray()[Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:587)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char] A[D('n' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:23:0x0008  (LINE:588)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|RETURN\l|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:589)\l0x0007: RETURN  (r1 I:boolean[]) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|0x0008: NEW_ARRAY  (r1 I:boolean[]) = (r0 I:int A[D('n' int), IMMUTABLE_TYPE]) type: boolean[]  (LINE:591)\l0x000a: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:592)\l}"];
Node_24 [shape=record,label="{24\:\ 0x000b|LOOP_START\lLOOP:0: B:24:0x000b\-\>B:29:0x0016\l|0x000b: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('n' int)])  \-\> B:31:0x001b \l}"];
Node_25 [shape=record,label="{25\:\ 0x000d|0x000d: INVOKE  (r3 I:int) = (r4 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.readInt():int A[MD:():int (m)] (LINE:593)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0011|0x0011: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0015 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|0x0013: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0016|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0016|LOOP_END\lLOOP:0: B:24:0x000b\-\>B:29:0x0016\l|0x0016: APUT  \l  (r1 I:boolean[] A[D('val' boolean[]), IMMUTABLE_TYPE])\l  (r2 I:??[int, short, byte, char] A[D('i' int)])\l  (r3 I:boolean A[IMMUTABLE_TYPE])\l \l0x0018: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:592)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0015|0x0015: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0016|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x001b|RETURN\l|0x001b: RETURN  (r1 I:boolean[] A[D('val' boolean[])])  (LINE:595)\l}"];
MethodNode[shape=record,label="{public boolean[] androidx.versionedparcelable.VersionedParcel.readBooleanArray((r4 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0016 \-\> B:24:0x000b, CROSS_EDGE: B:28:0x0015 \-\> B:29:0x0016, CROSS_EDGE: B:30:0x001b \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000b\-0x001b: r2 'i' I\l  0x0004\-0x001b: r0 'n' I\l  0x000a\-0x001b: r1 'val' [Z\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_31;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_33;
Node_33 -> Node_29;
Node_29 -> Node_24;
Node_28 -> Node_32;
Node_32 -> Node_29;
Node_31 -> Node_30;
Node_30 -> Node_18;
}

