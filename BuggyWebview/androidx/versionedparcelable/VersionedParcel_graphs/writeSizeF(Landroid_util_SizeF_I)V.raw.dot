digraph "CFG forandroidx.versionedparcelable.VersionedParcel.writeSizeF(Landroid\/util\/SizeF;I)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r1 I:androidx.versionedparcelable.VersionedParcel), (r3 I:int A[D('fieldId' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.setOutputField(int):void A[MD:(int):void (m)] (LINE:528)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0003|0x0003: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('val' android.util.SizeF)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0007  (LINE:529)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: INVOKE  (r1 I:androidx.versionedparcelable.VersionedParcel), (r0 I:boolean) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean):void A[MD:(boolean):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('val' android.util.SizeF)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:?  (LINE:530)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000d|0x000d: INVOKE  (r0 I:float) = (r2 I:android.util.SizeF A[D('val' android.util.SizeF)]) type: VIRTUAL call: android.util.SizeF.getWidth():float A[MD:():float (c)] (LINE:531)\l0x0011: INVOKE  (r1 I:androidx.versionedparcelable.VersionedParcel), (r0 I:float) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeFloat(float):void A[MD:(float):void (m)]\l0x0014: INVOKE  (r0 I:float) = (r2 I:android.util.SizeF A[D('val' android.util.SizeF)]) type: VIRTUAL call: android.util.SizeF.getHeight():float A[MD:():float (c)] (LINE:532)\l0x0018: INVOKE  (r1 I:androidx.versionedparcelable.VersionedParcel), (r0 I:float) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeFloat(float):void A[MD:(float):void (m)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN    (LINE:534)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN   A[SYNTHETIC] (LINE:534)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0007|0x0007: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcel.writeSizeF((r1 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r2 I:android.util.SizeF A[D('val' android.util.SizeF), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x000b \-\> B:20:0x001b, CROSS_EDGE: B:16:0x0007 \-\> B:17:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001b: r2 'val' Landroid\/util\/SizeF;\l  \-1 \-0x001b: r3 'fieldId' I\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_12;
Node_21 -> Node_12;
Node_16 -> Node_17;
}

