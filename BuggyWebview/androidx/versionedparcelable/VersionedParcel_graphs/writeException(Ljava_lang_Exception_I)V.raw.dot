digraph "CFG forandroidx.versionedparcelable.VersionedParcel.writeException(Ljava\/lang\/Exception;I)V" {
Node_46 [shape=record,label="{46\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0000|0x0000: INVOKE  (r3 I:androidx.versionedparcelable.VersionedParcel), (r5 I:int A[D('fieldId' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.setOutputField(int):void A[MD:(int):void (m)] (LINE:1107)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0003|0x0003: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('e' java.lang.Exception)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0009  (LINE:1108)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0005|0x0005: INVOKE  (r3 I:androidx.versionedparcelable.VersionedParcel) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeNoException():void A[MD:():void (m)] (LINE:1109)\l}"];
Node_51 [shape=record,label="{51\:\ 0x0008|RETURN\l|0x0008: RETURN    (LINE:1110)\l}"];
Node_47 [shape=record,label="{47\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_52 [shape=record,label="{52\:\ 0x0009|0x0009: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1112)\l0x000a: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) android.os.Parcelable  (LINE:1113)\l}"];
Node_53 [shape=record,label="{53\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0021 \l}"];
Node_54 [shape=record,label="{54\:\ 0x000e|0x000e: INVOKE  (r1 I:java.lang.Class) = (r4 I:java.lang.Object A[D('e' java.lang.Exception)]) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:1114)\l0x0012: INVOKE  (r1 I:java.lang.ClassLoader) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[MD:():java.lang.ClassLoader (c)]\l0x0016: CONST_CLASS  (r2 I:java.lang.Class\<android.os.Parcelable\>) =  android.os.Parcelable.class \l0x0018: INVOKE  (r2 I:java.lang.ClassLoader) = (r2 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[MD:():java.lang.ClassLoader (c)]\l}"];
Node_55 [shape=record,label="{55\:\ 0x001c|0x001c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0021 \l}"];
Node_56 [shape=record,label="{56\:\ 0x001e|0x001e: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-9 ??[int, float, short, byte, char])  (LINE:1117)\l}"];
Node_78 [shape=record,label="{78\:\ 0x004a|0x004a: INVOKE  (r3 I:androidx.versionedparcelable.VersionedParcel), (r0 I:int A[D('code' int)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeInt(int):void A[MD:(int):void (m)] (LINE:1133)\l}"];
Node_79 [shape=record,label="{79\:\ 0x004d|0x004d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('code' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:86:0x005d  (LINE:1134)\l}"];
Node_80 [shape=record,label="{80\:\ 0x004f|0x004f: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.RuntimeException  (LINE:1135)\l}"];
Node_81 [shape=record,label="{81\:\ 0x0051|0x0051: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x0057 \l}"];
Node_82 [shape=record,label="{82\:\ 0x0053|0x0053: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)])  (LINE:1136)\l0x0054: CHECK_CAST (r1 I:java.lang.RuntimeException) = (java.lang.RuntimeException) (r1 I:??[OBJECT, ARRAY]) \l}"];
Node_83 [shape=record,label="{83\:\ 0x0056|0x0056: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0057|0x0057: NEW_INSTANCE  (r1 I:java.lang.RuntimeException) =  java.lang.RuntimeException  (LINE:1138)\l0x0059: INVOKE  (r1 I:java.lang.RuntimeException), (r4 I:java.lang.Throwable A[D('e' java.lang.Exception)]) type: DIRECT call: java.lang.RuntimeException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (c)]\l}"];
Node_85 [shape=record,label="{85\:\ 0x005c|0x005c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_86 [shape=record,label="{86\:\ 0x005d|0x005d: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.Exception A[D('e' java.lang.Exception)]) type: VIRTUAL call: java.lang.Exception.getMessage():java.lang.String A[MD:():java.lang.String (c)] (LINE:1140)\l0x0061: INVOKE  (r3 I:androidx.versionedparcelable.VersionedParcel), (r1 I:java.lang.String) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String):void A[MD:(java.lang.String):void (m)]\l}"];
Node_87 [shape=record,label="{87\:\ 0x0064|0x0064: SWITCH  (r0 I:?? A[D('code' int)])\l case \-9: goto B:89:0x0068\l default: goto B:91:?  (LINE:1141)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0068|0x0068: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)])  (LINE:1144)\l0x0069: CHECK_CAST (r1 I:android.os.Parcelable) = (android.os.Parcelable) (r1 I:??[OBJECT, ARRAY]) \l0x006b: INVOKE  (r3 I:androidx.versionedparcelable.VersionedParcel), (r1 I:android.os.Parcelable) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable):void A[MD:(android.os.Parcelable):void (m)]\l}"];
Node_90 [shape=record,label="{90\:\ 0x006e|RETURN\lORIG_RETURN\l|0x006e: RETURN    (LINE:1147)\l}"];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lRETURN\l|0x006e: RETURN   A[SYNTHETIC] (LINE:1147)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0021|0x0021: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.SecurityException  (LINE:1118)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0023|0x0023: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0027 \l}"];
Node_59 [shape=record,label="{59\:\ 0x0025|0x0025: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-1 ??[int, float, short, byte, char])  (LINE:1119)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0027|0x0027: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) android.os.BadParcelableException  (LINE:1120)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0029|0x0029: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x002d \l}"];
Node_62 [shape=record,label="{62\:\ 0x002b|0x002b: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-2 ??[int, float, short, byte, char])  (LINE:1121)\l}"];
Node_63 [shape=record,label="{63\:\ 0x002d|0x002d: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.IllegalArgumentException  (LINE:1122)\l}"];
Node_64 [shape=record,label="{64\:\ 0x002f|0x002f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x0033 \l}"];
Node_65 [shape=record,label="{65\:\ 0x0031|0x0031: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-3 ??[int, float, short, byte, char])  (LINE:1123)\l}"];
Node_66 [shape=record,label="{66\:\ 0x0033|0x0033: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.NullPointerException  (LINE:1124)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0035|0x0035: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0039 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0037|0x0037: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-4 ??[int, float, short, byte, char])  (LINE:1125)\l}"];
Node_69 [shape=record,label="{69\:\ 0x0039|0x0039: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.IllegalStateException  (LINE:1126)\l}"];
Node_70 [shape=record,label="{70\:\ 0x003b|0x003b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x003f \l}"];
Node_71 [shape=record,label="{71\:\ 0x003d|0x003d: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-5 ??[int, float, short, byte, char])  (LINE:1127)\l}"];
Node_72 [shape=record,label="{72\:\ 0x003f|0x003f: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) android.os.NetworkOnMainThreadException  (LINE:1128)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0041|0x0041: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0045 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0043|0x0043: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-6 ??[int, float, short, byte, char])  (LINE:1129)\l}"];
Node_75 [shape=record,label="{75\:\ 0x0045|0x0045: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('e' java.lang.Exception)]) java.lang.UnsupportedOperationException  (LINE:1130)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0047|0x0047: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x004a \l}"];
Node_77 [shape=record,label="{77\:\ 0x0049|0x0049: CONST  (r0 I:??[int, float, short, byte, char] A[D('code' int)]) = (\-7 ??[int, float, short, byte, char])  (LINE:1131)\l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcel.writeException((r3 'this' I:androidx.versionedparcelable.VersionedParcel A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Exception A[D('e' java.lang.Exception), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:83:0x0056 \-\> B:47:?, CROSS_EDGE: B:85:0x005c \-\> B:47:?, CROSS_EDGE: B:90:0x006e \-\> B:47:?, CROSS_EDGE: B:87:0x0064 \-\> B:90:0x006e, CROSS_EDGE: B:59:0x0025 \-\> B:78:0x004a, CROSS_EDGE: B:62:0x002b \-\> B:78:0x004a, CROSS_EDGE: B:65:0x0031 \-\> B:78:0x004a, CROSS_EDGE: B:68:0x0037 \-\> B:78:0x004a, CROSS_EDGE: B:71:0x003d \-\> B:78:0x004a, CROSS_EDGE: B:74:0x0043 \-\> B:78:0x004a, CROSS_EDGE: B:77:0x0049 \-\> B:78:0x004a, CROSS_EDGE: B:76:0x0047 \-\> B:78:0x004a, CROSS_EDGE: B:53:0x000c \-\> B:57:0x0021\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000a\-0x0075: r0 'code' I\l  \-1 \-0x0075: r4 'e' Ljava\/lang\/Exception;\l  \-1 \-0x0075: r5 'fieldId' I\l}"];
MethodNode -> Node_46;Node_46 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_52;
Node_50 -> Node_51;
Node_51 -> Node_47;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_57;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_78;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_86;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_84;
Node_82 -> Node_83;
Node_83 -> Node_47;
Node_84 -> Node_85;
Node_85 -> Node_47;
Node_86 -> Node_87;
Node_87 -> Node_89;
Node_87 -> Node_91;
Node_89 -> Node_90;
Node_90 -> Node_47;
Node_91 -> Node_47;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_78;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_78;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_78;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_69;
Node_68 -> Node_78;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_78;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_78;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78;
}

