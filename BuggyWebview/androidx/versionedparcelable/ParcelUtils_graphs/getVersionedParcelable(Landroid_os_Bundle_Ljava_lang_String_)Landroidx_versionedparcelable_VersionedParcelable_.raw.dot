digraph "CFG forandroidx.versionedparcelable.ParcelUtils.getVersionedParcelable(Landroid\/os\/Bundle;Ljava\/lang\/String;)Landroidx\/versionedparcelable\/VersionedParcelable;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:109)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{RuntimeException \-\> 0x001e, blocks: (B:3:0x0001, B:6:0x000a), top: B:10:0x0001 \}\lCatch: RuntimeException \-\> 0x001e\l|0x0001: INVOKE  (r1 I:android.os.Parcelable) = (r3 I:android.os.Bundle A[D('bundle' android.os.Bundle)]), (r4 I:java.lang.String A[D('key' java.lang.String)]) type: VIRTUAL call: android.os.Bundle.getParcelable(java.lang.String):android.os.Parcelable A[Catch: RuntimeException \-\> 0x001e, MD:\<T extends android.os.Parcelable\>:(java.lang.String):T extends android.os.Parcelable (c), TRY_ENTER]\l0x0005: CHECK_CAST (r1 I:android.os.Bundle) = (android.os.Bundle) (r1 I:??[OBJECT, ARRAY]) A[Catch: RuntimeException \-\> 0x001e]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('innerBundle' android.os.Bundle)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000a  (LINE:110)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|0x0009: RETURN  (r0 I:T extends androidx.versionedparcelable.VersionedParcelable)  (LINE:111)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|TRY_LEAVE\lTryCatch #0 \{RuntimeException \-\> 0x001e, blocks: (B:3:0x0001, B:6:0x000a), top: B:10:0x0001 \}\lCatch: RuntimeException \-\> 0x001e\l|0x000a: CONST_CLASS  (r2 I:java.lang.Class\<androidx.versionedparcelable.ParcelUtils\>) =  androidx.versionedparcelable.ParcelUtils.class  (LINE:113)\l0x000c: INVOKE  (r2 I:java.lang.ClassLoader) = (r2 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[Catch: RuntimeException \-\> 0x001e, MD:():java.lang.ClassLoader (c)]\l0x0010: INVOKE  (r1 I:android.os.Bundle A[D('innerBundle' android.os.Bundle)]), (r2 I:java.lang.ClassLoader) type: VIRTUAL call: android.os.Bundle.setClassLoader(java.lang.ClassLoader):void A[Catch: RuntimeException \-\> 0x001e, MD:(java.lang.ClassLoader):void (c)]\l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"a\"  (LINE:114)\l0x0015: INVOKE  (r2 I:android.os.Parcelable) = (r1 I:android.os.Bundle A[D('innerBundle' android.os.Bundle)]), (r2 I:java.lang.String) type: VIRTUAL call: android.os.Bundle.getParcelable(java.lang.String):android.os.Parcelable A[Catch: RuntimeException \-\> 0x001e, MD:\<T extends android.os.Parcelable\>:(java.lang.String):T extends android.os.Parcelable (c)]\l0x0019: INVOKE  (r0 I:androidx.versionedparcelable.VersionedParcelable) = (r2 I:android.os.Parcelable) type: STATIC call: androidx.versionedparcelable.ParcelUtils.fromParcelable(android.os.Parcelable):androidx.versionedparcelable.VersionedParcelable A[Catch: RuntimeException \-\> 0x001e, MD:\<T extends androidx.versionedparcelable.VersionedParcelable\>:(android.os.Parcelable):T extends androidx.versionedparcelable.VersionedParcelable (m), TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|RETURN\l|0x001d: RETURN  (r0 I:T extends androidx.versionedparcelable.VersionedParcelable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|ExcHandler: RuntimeException \-\> 0x001e\l|0x001e: MOVE_EXCEPTION  (r1 I:java.lang.RuntimeException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: RuntimeException \-\> 0x001e] (LINE:115)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:T extends androidx.versionedparcelable.VersionedParcelable)  (LINE:117)\l}"];
MethodNode[shape=record,label="{public static T extends androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.ParcelUtils.getVersionedParcelable((r3 I:android.os.Bundle A[D('bundle' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x001d \-\> B:1:?, CROSS_EDGE: B:9:0x001f \-\> B:1:?, CROSS_EDGE: B:10:0x0001 \-\> B:8:0x001e\lDebug Info:\l  0x0007\-0x001e: r1 'innerBundle' Landroid\/os\/Bundle;\l  0x001f\-0x001f: r1 'e' Ljava\/lang\/RuntimeException;\l  \-1 \-0x001f: r3 'bundle' Landroid\/os\/Bundle;\l  \-1 \-0x001f: r4 'key' Ljava\/lang\/String;\lTYPE_VARS: [T extends androidx.versionedparcelable.VersionedParcelable]\lTryCatch #0 \{RuntimeException \-\> 0x001e, blocks: (B:3:0x0001, B:6:0x000a), top: B:10:0x0001 \}\lSIGNATURE: \<T::Landroidx\/versionedparcelable\/VersionedParcelable;\>(Landroid\/os\/Bundle;Ljava\/lang\/String;)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_10;
Node_10 -> Node_3;
Node_10 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_6 -> Node_11;
Node_7 -> Node_1;
Node_11 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

