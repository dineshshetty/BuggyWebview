digraph "CFG forandroidx.versionedparcelable.VersionedParcel.1.resolveClass(Ljava\/io\/ObjectStreamClass;)Ljava\/lang\/Class;" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.String) = (r4 I:java.io.ObjectStreamClass A[D('osClass' java.io.ObjectStreamClass)]) type: VIRTUAL call: java.io.ObjectStreamClass.getName():java.lang.String A[MD:():java.lang.String (c)] (LINE:1539)\l0x0004: INVOKE  (r1 I:java.lang.Class) = (r3 I:java.lang.Object) type: VIRTUAL call: java.lang.Object.getClass():java.lang.Class A[MD:():java.lang.Class\<?\> (c)] (LINE:1540)\l0x0008: INVOKE  (r1 I:java.lang.ClassLoader) = (r1 I:java.lang.Class) type: VIRTUAL call: java.lang.Class.getClassLoader():java.lang.ClassLoader A[MD:():java.lang.ClassLoader (c)]\l0x000c: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1539)\l0x000d: INVOKE  (r0 I:java.lang.Class) = (r0 I:java.lang.String), (r2 I:boolean), (r1 I:java.lang.ClassLoader) type: STATIC call: java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class A[MD:(java.lang.String, boolean, java.lang.ClassLoader):java.lang.Class\<?\> throws java.lang.ClassNotFoundException (c)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('c' java.lang.Class\<?\>)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0014  (LINE:1541)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|RETURN\l|0x0013: RETURN  (r0 I:java.lang.Class\<?\> A[D('c' java.lang.Class\<?\>)])  (LINE:1542)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: INVOKE  (r1 I:java.lang.Class) = (r3 I:java.io.ObjectInputStream), (r4 I:java.io.ObjectStreamClass A[D('osClass' java.io.ObjectStreamClass)]) type: SUPER call: java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass):java.lang.Class A[MD:(java.io.ObjectStreamClass):java.lang.Class\<?\> throws java.lang.ClassNotFoundException, java.io.IOException (c)] (LINE:1544)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|RETURN\l|0x0018: RETURN  (r1 I:java.lang.Class\<?\>) \l}"];
MethodNode[shape=record,label="{protected java.lang.Class\<?\> androidx.versionedparcelable.VersionedParcel.1.resolveClass((r3 'this' I:androidx.versionedparcelable.VersionedParcel$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:java.io.ObjectStreamClass A[D('osClass' java.io.ObjectStreamClass), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:13:0x0018 \-\> B:8:?\lINLINE_NOT_NEEDED\lSIGNATURE: (Ljava\/io\/ObjectStreamClass;)Ljava\/lang\/Class\<*\>;\lDebug Info:\l  0x0011\-0x0018: r0 'c' Ljava\/lang\/Class;, signature: Ljava\/lang\/Class\<*\>;\l  \-1 \-0x0018: r4 'osClass' Ljava\/io\/ObjectStreamClass;\lEXCEPTIONS:[Ljava\/io\/IOException;, Ljava\/lang\/ClassNotFoundException;]\lMETHOD_OVERRIDE: [ClspMth\{java.io.ObjectInputStream.resolveClass(java.io.ObjectStreamClass):java.lang.Class\<?\> throws java.lang.ClassNotFoundException, java.io.IOException\}]\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_8;
}

