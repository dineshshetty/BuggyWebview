digraph "CFG forandroidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(Ljava\/lang\/CharSequence;)V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: IGET  (r0 I:android.os.Parcel) = (r2 I:androidx.versionedparcelable.VersionedParcelParcel) androidx.versionedparcelable.VersionedParcelParcel.mParcel android.os.Parcel  (LINE:196)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0003: INVOKE  (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence)]), (r0 I:android.os.Parcel), (r1 I:int) type: STATIC call: android.text.TextUtils.writeToParcel(java.lang.CharSequence, android.os.Parcel, int):void A[MD:(java.lang.CharSequence, android.os.Parcel, int):void (c)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:197)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence((r2 'this' I:androidx.versionedparcelable.VersionedParcelParcel A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.CharSequence A[D('charSequence' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0006: r3 'charSequence' Ljava\/lang\/CharSequence;\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence):void]\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

