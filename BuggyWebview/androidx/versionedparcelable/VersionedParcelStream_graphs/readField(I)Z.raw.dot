digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.readField(I)Z" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|LOOP_START\lLOOP:0: B:28:0x0000\-\>B:42:0x003c\l|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:164)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x0001: IGET  (r1 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldId int A[Catch: IOException \-\> 0x0044, TRY_ENTER]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0003|0x0003: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fieldId' int)])  \-\> B:33:0x0007 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0007|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x0007: INVOKE  (r1 I:java.lang.String) = (r1 I:int) type: STATIC call: java.lang.String.valueOf(int):java.lang.String A[Catch: IOException \-\> 0x0044, MD:(int):java.lang.String (c)] (LINE:167)\l0x000b: INVOKE  (r2 I:java.lang.String) = (r6 I:int A[D('fieldId' int)]) type: STATIC call: java.lang.String.valueOf(int):java.lang.String A[Catch: IOException \-\> 0x0044, MD:(int):java.lang.String (c)]\l0x000f: INVOKE  (r1 I:int) = (r1 I:java.lang.String), (r2 I:java.lang.String) type: VIRTUAL call: java.lang.String.compareTo(java.lang.String):int A[Catch: IOException \-\> 0x0044, MD:(java.lang.String):int (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0013|0x0013: IF  (r1 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:36:0x0016 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0016|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x0016: IGET  (r1 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCount int A[Catch: IOException \-\> 0x0044] (LINE:170)\l0x0018: IGET  (r2 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldSize int A[Catch: IOException \-\> 0x0044]\l}"];
Node_37 [shape=record,label="{37\:\ 0x001a|0x001a: IF  (r1 I:??[int, byte, short, char]) \>= (r2 I:??[int, byte, short, char])  \-\> B:39:0x0023 \l}"];
Node_38 [shape=record,label="{38\:\ 0x001c|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x001c: IGET  (r3 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch: IOException \-\> 0x0044] (LINE:171)\l0x001e: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int) A[Catch: IOException \-\> 0x0044]\l0x001f: CAST (r1 I:long) = (long) (r2 I:int) A[Catch: IOException \-\> 0x0044]\l0x0020: INVOKE  (r3 I:java.io.DataInputStream), (r1 I:long) type: VIRTUAL call: java.io.DataInputStream.skip(long):long A[Catch: IOException \-\> 0x0044, MD:(long):long throws java.io.IOException (c)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0023|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x0023: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:173)\l0x0024: IPUT  (r1 I:int), (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldSize int A[Catch: IOException \-\> 0x0044]\l0x0026: IGET  (r1 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch: IOException \-\> 0x0044] (LINE:174)\l0x0028: INVOKE  (r1 I:int) = (r1 I:java.io.DataInputStream) type: VIRTUAL call: java.io.DataInputStream.readInt():int A[Catch: IOException \-\> 0x0044, MD:():int throws java.io.IOException (c)]\l0x002c: IPUT  (r0 I:int), (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCount int A[Catch: IOException \-\> 0x0044] (LINE:175)\l0x002e: CONST  (r2 I:??[int, float, short, byte, char]) = (65535(0xffff, float:9.1834E\-41) ??[int, float, short, byte, char])  (LINE:176)\l0x0031: ARITH  (r3 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('fieldInfo' int)]) & (r2 I:??[int, boolean, short, byte, char]) A[Catch: IOException \-\> 0x0044]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0033|0x0033: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('size' int)]) != (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x003c  (LINE:177)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0035|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|0x0035: IGET  (r4 I:java.io.DataInputStream) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mMasterInput java.io.DataInputStream A[Catch: IOException \-\> 0x0044] (LINE:178)\l0x0037: INVOKE  (r4 I:int) = (r4 I:java.io.DataInputStream) type: VIRTUAL call: java.io.DataInputStream.readInt():int A[Catch: IOException \-\> 0x0044, MD:():int throws java.io.IOException (c)]\l0x003b: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x003c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003c|TRY_LEAVE\lLOOP_END\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lLOOP:0: B:28:0x0000\-\>B:42:0x003c\lCatch: IOException \-\> 0x0044\l|0x003c: ARITH  (r4 I:int) = (r1 I:int A[D('fieldInfo' int)]) \>\> (16 int) A[Catch: IOException \-\> 0x0044] (LINE:180)\l0x003e: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) & (r4 I:??[int, boolean, short, byte, char]) A[Catch: IOException \-\> 0x0044]\l0x003f: IPUT  (r2 I:int A[D('id' int)]), (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldId int A[Catch: IOException \-\> 0x0044] (LINE:181)\l0x0041: IPUT  (r3 I:int A[D('size' int)]), (r5 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mFieldSize int A[Catch: IOException \-\> 0x0044, TRY_LEAVE] (LINE:182)\l}"];
Node_51 [shape=record,label="{51\:\ 0x003c|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0015|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:boolean)  (LINE:168)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,label="{48\:\ 0x0005|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0005|RETURN\l|0x0005: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:165)\l0x0006: RETURN  (r0 I:boolean) \l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_44 [shape=record,label="{44\:\ 0x0044|ExcHandler: IOException \-\> 0x0044\l|0x0044: MOVE_EXCEPTION  (r1 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0044] (LINE:184)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0045|RETURN\l|0x0045: RETURN  (r0 I:boolean)  (LINE:186)\l}"];
MethodNode[shape=record,label="{public boolean androidx.versionedparcelable.VersionedParcelStream.readField((r5 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0015 \-\> B:27:?, BACK_EDGE: B:42:0x003c \-\> B:28:0x0000, CROSS_EDGE: B:40:0x0033 \-\> B:42:0x003c, CROSS_EDGE: B:37:0x001a \-\> B:39:0x0023, CROSS_EDGE: B:45:0x0045 \-\> B:27:?, CROSS_EDGE: B:46:0x0001 \-\> B:44:0x0044\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002c\-0x0043: r1 'fieldInfo' I\l  0x003f\-0x0043: r2 'id' I\l  0x0033\-0x0043: r3 'size' I\l  \-1 \-0x0045: r6 'fieldId' I\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.readField(int):boolean]\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_44;
Node_29 -> Node_30;
Node_29 -> Node_47;
Node_30 -> Node_33;
Node_30 -> Node_48[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_49[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_51;
Node_41 -> Node_50;
Node_50 -> Node_42;
Node_42 -> Node_28;
Node_51 -> Node_42;
Node_49 -> Node_35;
Node_35 -> Node_27;
Node_48 -> Node_31;
Node_31 -> Node_27;
Node_47 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_27;
}

