digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeObject(Ljava\/lang\/Object;)V" {
subgraph cluster_Region_187432631 {
label = "R(1:(1:2)(1:(1:7)(1:(1:11)(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1414246576 {
label = "IF [B:61:0x0000] THEN: R(1:2) ELSE: R(1:(1:7)(1:(1:11)(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))))))))";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0000|if (r4 == null) goto L2\l}"];
subgraph cluster_Region_718638224 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0002|writeInt(0)\l}"];
}
subgraph cluster_Region_2062293012 {
label = "R(1:(1:7)(1:(1:11)(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_778477496 {
label = "IF [B:64:0x000a] THEN: R(1:7) ELSE: R(1:(1:11)(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x000a|if ((r4 instanceof android.os.Bundle) != false) goto L7\l}"];
subgraph cluster_Region_664892660 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x000c|writeInt(1)\lwriteBundle((android.os.Bundle) r4)\l}"];
}
subgraph cluster_Region_563535260 {
label = "R(1:(1:11)(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_991972610 {
label = "IF [B:67:0x001a] THEN: R(1:11) ELSE: R(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x001a|if ((r4 instanceof java.lang.String) != false) goto L11\l}"];
subgraph cluster_Region_555851393 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x001c|writeInt(3)\lwriteString((java.lang.String) r4)\l}"];
}
subgraph cluster_Region_227231877 {
label = "R(1:(1:15)(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_442900117 {
label = "IF [B:70:0x002a] THEN: R(1:15) ELSE: R(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x002a|if ((r4 instanceof java.lang.String[]) != false) goto L15\l}"];
subgraph cluster_Region_597100678 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x002c|writeInt(4)\lwriteArray((java.lang.String[]) r4)\l}"];
}
subgraph cluster_Region_242180067 {
label = "R(1:(1:19)(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1501028811 {
label = "IF [B:73:0x003c] THEN: R(1:19) ELSE: R(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x003c|if ((r4 instanceof java.lang.Boolean) != false) goto L19\l}"];
subgraph cluster_Region_1942998726 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x003e|writeInt(5)\lwriteBoolean(((java.lang.Boolean) r4).booleanValue())\l}"];
}
subgraph cluster_Region_1745300225 {
label = "R(1:(1:23)(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_476311973 {
label = "IF [B:76:0x0050] THEN: R(1:23) ELSE: R(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x0050|if ((r4 instanceof boolean[]) != false) goto L23\l}"];
subgraph cluster_Region_2063344219 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0052|writeInt(6)\lwriteBooleanArray((boolean[]) r4)\l}"];
}
subgraph cluster_Region_2001234492 {
label = "R(1:(1:27)(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_642128119 {
label = "IF [B:79:0x0062] THEN: R(1:27) ELSE: R(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0062|if ((r4 instanceof java.lang.Double) != false) goto L27\l}"];
subgraph cluster_Region_623586115 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x0064|writeInt(7)\lwriteDouble(((java.lang.Double) r4).doubleValue())\l}"];
}
subgraph cluster_Region_1046358855 {
label = "R(1:(1:31)(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_175357754 {
label = "IF [B:82:0x0076] THEN: R(1:31) ELSE: R(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x0076|if ((r4 instanceof double[]) != false) goto L31\l}"];
subgraph cluster_Region_484744995 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_83 [shape=record,label="{83\:\ 0x0078|writeInt(8)\lwriteDoubleArray((double[]) r4)\l}"];
}
subgraph cluster_Region_1617551055 {
label = "R(1:(1:35)(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_799200662 {
label = "IF [B:85:0x0089] THEN: R(1:35) ELSE: R(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x0089|if ((r4 instanceof java.lang.Integer) != false) goto L35\l}"];
subgraph cluster_Region_952055095 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ 0x008b|writeInt(9)\lwriteInt(((java.lang.Integer) r4).intValue())\l}"];
}
subgraph cluster_Region_10139780 {
label = "R(1:(1:39)(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_782995966 {
label = "IF [B:88:0x009d] THEN: R(1:39) ELSE: R(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_88 [shape=record,label="{88\:\ 0x009d|if ((r4 instanceof int[]) != false) goto L39\l}"];
subgraph cluster_Region_396165080 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_89 [shape=record,label="{89\:\ 0x009f|writeInt(10)\lwriteIntArray((int[]) r4)\l}"];
}
subgraph cluster_Region_1456170641 {
label = "R(1:(1:43)(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_62958164 {
label = "IF [B:91:0x00af] THEN: R(1:43) ELSE: R(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ 0x00af|if ((r4 instanceof java.lang.Long) != false) goto L43\l}"];
subgraph cluster_Region_1905717171 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_92 [shape=record,label="{92\:\ 0x00b1|writeInt(11)\lwriteLong(((java.lang.Long) r4).longValue())\l}"];
}
subgraph cluster_Region_17087590 {
label = "R(1:(1:47)(1:(1:51)(1:(1:55)(2:57|58)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_217496889 {
label = "IF [B:94:0x00c3] THEN: R(1:47) ELSE: R(1:(1:51)(1:(1:55)(2:57|58))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_94 [shape=record,label="{94\:\ 0x00c3|if ((r4 instanceof long[]) != false) goto L47\l}"];
subgraph cluster_Region_174208249 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_95 [shape=record,label="{95\:\ 0x00c5|writeInt(12)\lwriteLongArray((long[]) r4)\l}"];
}
subgraph cluster_Region_1280293233 {
label = "R(1:(1:51)(1:(1:55)(2:57|58))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1745672978 {
label = "IF [B:97:0x00d5] THEN: R(1:51) ELSE: R(1:(1:55)(2:57|58)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_97 [shape=record,label="{97\:\ 0x00d5|if ((r4 instanceof java.lang.Float) != false) goto L51\l}"];
subgraph cluster_Region_1361751135 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_98 [shape=record,label="{98\:\ 0x00d7|writeInt(13)\lwriteFloat(((java.lang.Float) r4).floatValue())\l}"];
}
subgraph cluster_Region_1249152895 {
label = "R(1:(1:55)(2:57|58)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2076259185 {
label = "IF [B:100:0x00e9] THEN: R(1:55) ELSE: R(2:57|58) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_100 [shape=record,label="{100\:\ 0x00e9|if ((r4 instanceof float[]) != false) goto L55\l}"];
subgraph cluster_Region_1973134160 {
label = "R(1:55)";
node [shape=record,color=blue];
Node_101 [shape=record,label="{101\:\ 0x00eb|writeInt(14)\lwriteFloatArray((float[]) r4)\l}"];
}
subgraph cluster_Region_1901568488 {
label = "R(2:57|58)";
node [shape=record,color=blue];
Node_103 [shape=record,label="{103\:\ 0x00f9}"];
Node_104 [shape=record,label="{104\:\ 0x0113|throw new java.lang.IllegalArgumentException(\"Unsupported type \" + r4.getClass())\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_59 [shape=record,color=red,label="{59\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_105 [shape=record,color=red,label="{105\:\ ?|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x0008}"];
Node_106 [shape=record,color=red,label="{106\:\ ?|SYNTHETIC\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0018}"];
Node_107 [shape=record,color=red,label="{107\:\ ?|SYNTHETIC\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0028}"];
Node_108 [shape=record,color=red,label="{108\:\ ?|SYNTHETIC\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x003a}"];
Node_109 [shape=record,color=red,label="{109\:\ ?|SYNTHETIC\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x004e}"];
Node_110 [shape=record,color=red,label="{110\:\ ?|SYNTHETIC\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x0060}"];
Node_111 [shape=record,color=red,label="{111\:\ ?|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x0074}"];
Node_112 [shape=record,color=red,label="{112\:\ ?|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0087}"];
Node_113 [shape=record,color=red,label="{113\:\ ?|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x009b}"];
Node_114 [shape=record,color=red,label="{114\:\ ?|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x00ad}"];
Node_115 [shape=record,color=red,label="{115\:\ ?|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x00c1}"];
Node_116 [shape=record,color=red,label="{116\:\ ?|SYNTHETIC\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x00d3}"];
Node_117 [shape=record,color=red,label="{117\:\ ?|SYNTHETIC\l}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x00e7}"];
Node_102 [shape=record,color=red,label="{102\:\ 0x00f8|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{private void androidx.versionedparcelable.VersionedParcelStream.writeObject((r3v0 'this' androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r4v0 'o' java.lang.Object A[D('o' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:65:0x000c \-\> B:102:0x00f8, CROSS_EDGE: B:68:0x001c \-\> B:102:0x00f8, CROSS_EDGE: B:71:0x002c \-\> B:102:0x00f8, CROSS_EDGE: B:74:0x003e \-\> B:102:0x00f8, CROSS_EDGE: B:77:0x0052 \-\> B:102:0x00f8, CROSS_EDGE: B:80:0x0064 \-\> B:102:0x00f8, CROSS_EDGE: B:83:0x0078 \-\> B:102:0x00f8, CROSS_EDGE: B:86:0x008b \-\> B:102:0x00f8, CROSS_EDGE: B:89:0x009f \-\> B:102:0x00f8, CROSS_EDGE: B:92:0x00b1 \-\> B:102:0x00f8, CROSS_EDGE: B:95:0x00c5 \-\> B:102:0x00f8, CROSS_EDGE: B:98:0x00d7 \-\> B:102:0x00f8, CROSS_EDGE: B:101:0x00eb \-\> B:102:0x00f8, CROSS_EDGE: B:104:0x0113 \-\> B:60:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_59;Node_61 -> Node_62;
Node_61 -> Node_63[style=dashed];
Node_62 -> Node_105;
Node_64 -> Node_65;
Node_64 -> Node_66[style=dashed];
Node_65 -> Node_106;
Node_67 -> Node_68;
Node_67 -> Node_69[style=dashed];
Node_68 -> Node_107;
Node_70 -> Node_71;
Node_70 -> Node_72[style=dashed];
Node_71 -> Node_108;
Node_73 -> Node_74;
Node_73 -> Node_75[style=dashed];
Node_74 -> Node_109;
Node_76 -> Node_77;
Node_76 -> Node_78[style=dashed];
Node_77 -> Node_110;
Node_79 -> Node_80;
Node_79 -> Node_81[style=dashed];
Node_80 -> Node_111;
Node_82 -> Node_83;
Node_82 -> Node_84[style=dashed];
Node_83 -> Node_112;
Node_85 -> Node_86;
Node_85 -> Node_87[style=dashed];
Node_86 -> Node_113;
Node_88 -> Node_89;
Node_88 -> Node_90[style=dashed];
Node_89 -> Node_114;
Node_91 -> Node_92;
Node_91 -> Node_93[style=dashed];
Node_92 -> Node_115;
Node_94 -> Node_95;
Node_94 -> Node_96[style=dashed];
Node_95 -> Node_116;
Node_97 -> Node_98;
Node_97 -> Node_99[style=dashed];
Node_98 -> Node_117;
Node_100 -> Node_101;
Node_100 -> Node_103[style=dashed];
Node_101 -> Node_102;
Node_103 -> Node_104;
Node_104 -> Node_60;
Node_59 -> Node_61;
Node_105 -> Node_60;
Node_63 -> Node_64;
Node_106 -> Node_60;
Node_66 -> Node_67;
Node_107 -> Node_60;
Node_69 -> Node_70;
Node_108 -> Node_60;
Node_72 -> Node_73;
Node_109 -> Node_60;
Node_75 -> Node_76;
Node_110 -> Node_60;
Node_78 -> Node_79;
Node_111 -> Node_60;
Node_81 -> Node_82;
Node_112 -> Node_60;
Node_84 -> Node_85;
Node_113 -> Node_60;
Node_87 -> Node_88;
Node_114 -> Node_60;
Node_90 -> Node_91;
Node_115 -> Node_60;
Node_93 -> Node_94;
Node_116 -> Node_60;
Node_96 -> Node_97;
Node_117 -> Node_60;
Node_99 -> Node_100;
Node_102 -> Node_60;
}

