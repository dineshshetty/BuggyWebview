digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeDouble(D)V" {
Node_9 [shape=record,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x0000|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0007, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lCatch: IOException \-\> 0x0007\l|0x0000: IGET  (r0 I:java.io.DataOutputStream) = (r2 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch: IOException \-\> 0x0007, TRY_ENTER] (LINE:263)\l0x0002: INVOKE  (r0 I:java.io.DataOutputStream), (r3 I:double A[D('val' double)]) type: VIRTUAL call: java.io.DataOutputStream.writeDouble(double):void A[Catch: IOException \-\> 0x0007, MD:(double):void throws java.io.IOException (c), TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:268)\l}"];
Node_10 [shape=record,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|ExcHandler: IOException \-\> 0x0007\l|0x0007: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0007] (LINE:264)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0008|0x0008: NEW_INSTANCE  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException  (LINE:265)\l0x000a: INVOKE  \l  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r0 I:java.lang.Throwable A[D('e' java.io.IOException)])\l type: DIRECT call: androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x000d|0x000d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.writeDouble((r2 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r3 I:double A[D('val' double), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000d \-\> B:10:?, CROSS_EDGE: B:16:0x0000 \-\> B:13:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x000d: r0 'e' Ljava\/io\/IOException;\l  \-1 \-0x000d: r3 'val' D\lTryCatch #0 \{IOException \-\> 0x0007, blocks: (B:11:0x0000), top: B:16:0x0000 \}\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.writeDouble(double):void]\l}"];
MethodNode -> Node_9;Node_9 -> Node_16;
Node_16 -> Node_11;
Node_16 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_17;
Node_12 -> Node_10;
Node_17 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_10;
}

