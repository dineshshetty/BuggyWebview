digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.writeBundle(Landroid\/os\/Bundle;)V" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('val' android.os.Bundle)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x002b  (LINE:411)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|TRY_ENTER\lTryCatch #0 \{IOException \-\> 0x0033, blocks: (B:20:0x0002, B:21:0x0013, B:23:0x0019, B:25:0x002b), top: B:31:0x0000 \}\lCatch: IOException \-\> 0x0033\l|0x0002: INVOKE  (r0 I:java.util.Set) = (r5 I:android.os.Bundle A[D('val' android.os.Bundle)]) type: VIRTUAL call: android.os.Bundle.keySet():java.util.Set A[Catch: IOException \-\> 0x0033, MD:():java.util.Set\<java.lang.String\> (c), TRY_ENTER] (LINE:412)\l0x0006: IGET  (r1 I:java.io.DataOutputStream) = (r4 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch: IOException \-\> 0x0033] (LINE:413)\l0x0008: INVOKE  (r2 I:int) = (r0 I:java.util.Set A[D('keys' java.util.Set\<java.lang.String\>)]) type: INTERFACE call: java.util.Set.size():int A[Catch: IOException \-\> 0x0033, MD:():int (c)]\l0x000c: INVOKE  (r1 I:java.io.DataOutputStream), (r2 I:int) type: VIRTUAL call: java.io.DataOutputStream.writeInt(int):void A[Catch: IOException \-\> 0x0033, MD:(int):void throws java.io.IOException (c)]\l0x000f: INVOKE  (r1 I:java.util.Iterator) = (r0 I:java.util.Set A[D('keys' java.util.Set\<java.lang.String\>)]) type: INTERFACE call: java.util.Set.iterator():java.util.Iterator A[Catch: IOException \-\> 0x0033, MD:():java.util.Iterator\<E\> (c)] (LINE:414)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013|LOOP_START\lTryCatch #0 \{IOException \-\> 0x0033, blocks: (B:20:0x0002, B:21:0x0013, B:23:0x0019, B:25:0x002b), top: B:31:0x0000 \}\lLOOP:0: B:21:0x0013\-\>B:23:0x0019\lCatch: IOException \-\> 0x0033\l|0x0013: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.hasNext():boolean A[Catch: IOException \-\> 0x0033, MD:():boolean (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x002a \l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|LOOP_END\lTryCatch #0 \{IOException \-\> 0x0033, blocks: (B:20:0x0002, B:21:0x0013, B:23:0x0019, B:25:0x002b), top: B:31:0x0000 \}\lLOOP:0: B:21:0x0013\-\>B:23:0x0019\lCatch: IOException \-\> 0x0033\l|0x0019: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) type: INTERFACE call: java.util.Iterator.next():java.lang.Object A[Catch: IOException \-\> 0x0033, MD:():E (c)]\l0x001d: CHECK_CAST (r2 I:java.lang.String) = (java.lang.String) (r2 I:??[OBJECT, ARRAY]) A[Catch: IOException \-\> 0x0033]\l0x001f: INVOKE  (r4 I:androidx.versionedparcelable.VersionedParcelStream), (r2 I:java.lang.String A[D('key' java.lang.String)]) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcelStream.writeString(java.lang.String):void A[Catch: IOException \-\> 0x0033, MD:(java.lang.String):void (m)] (LINE:415)\l0x0022: INVOKE  (r3 I:java.lang.Object) = (r5 I:android.os.Bundle A[D('val' android.os.Bundle)]), (r2 I:java.lang.String A[D('key' java.lang.String)]) type: VIRTUAL call: android.os.Bundle.get(java.lang.String):java.lang.Object A[Catch: IOException \-\> 0x0033, MD:(java.lang.String):java.lang.Object (c)] (LINE:416)\l0x0026: INVOKE  (r4 I:androidx.versionedparcelable.VersionedParcelStream), (r3 I:java.lang.Object A[D('o' java.lang.Object)]) type: DIRECT call: androidx.versionedparcelable.VersionedParcelStream.writeObject(java.lang.Object):void A[Catch: IOException \-\> 0x0033, MD:(java.lang.Object):void (m)] (LINE:417)\l0x0029: GOTO  \-\> 0x0013  (LINE:418)\l}"];
Node_32 [shape=record,label="{32\:\ 0x002a|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|0x002a: GOTO  \-\> 0x0031  (LINE:419)\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|0x0032: RETURN   A[SYNTHETIC] (LINE:425)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x002b|TRY_LEAVE\lTryCatch #0 \{IOException \-\> 0x0033, blocks: (B:20:0x0002, B:21:0x0013, B:23:0x0019, B:25:0x002b), top: B:31:0x0000 \}\lCatch: IOException \-\> 0x0033\l|0x002b: IGET  (r0 I:java.io.DataOutputStream) = (r4 I:androidx.versionedparcelable.VersionedParcelStream) androidx.versionedparcelable.VersionedParcelStream.mCurrentOutput java.io.DataOutputStream A[Catch: IOException \-\> 0x0033] (LINE:420)\l0x002d: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l0x002e: INVOKE  (r0 I:java.io.DataOutputStream), (r1 I:int) type: VIRTUAL call: java.io.DataOutputStream.writeInt(int):void A[Catch: IOException \-\> 0x0033, MD:(int):void throws java.io.IOException (c), TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: RETURN    (LINE:425)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0033|ExcHandler: IOException \-\> 0x0033\l|0x0033: MOVE_EXCEPTION  (r0 I:java.io.IOException A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: IOException \-\> 0x0033] (LINE:422)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0034|0x0034: NEW_INSTANCE  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException) =  androidx.versionedparcelable.VersionedParcel$ParcelException  (LINE:423)\l0x0036: INVOKE  \l  (r1 I:androidx.versionedparcelable.VersionedParcel$ParcelException)\l  (r0 I:java.lang.Throwable A[D('e' java.io.IOException)])\l type: DIRECT call: androidx.versionedparcelable.VersionedParcel.ParcelException.\<init\>(java.lang.Throwable):void A[MD:(java.lang.Throwable):void (m)]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0039|0x0039: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.versionedparcelable.VersionedParcelStream.writeBundle((r4 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Bundle A[D('val' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:23:0x0019 \-\> B:21:0x0013, CROSS_EDGE: B:25:0x002b \-\> B:27:0x0032, CROSS_EDGE: B:30:0x0039 \-\> B:18:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0029: r2 'key' Ljava\/lang\/String;\l  0x0026\-0x0029: r3 'o' Ljava\/lang\/Object;\l  0x0006\-0x002a: r0 'keys' Ljava\/util\/Set;, signature: Ljava\/util\/Set\<Ljava\/lang\/String;\>;\l  0x0034\-0x0039: r0 'e' Ljava\/io\/IOException;\l  \-1 \-0x0039: r5 'val' Landroid\/os\/Bundle;\lTryCatch #0 \{IOException \-\> 0x0033, blocks: (B:20:0x0002, B:21:0x0013, B:23:0x0019, B:25:0x002b), top: B:31:0x0000 \}\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.writeBundle(android.os.Bundle):void]\l}"];
MethodNode -> Node_17;Node_17 -> Node_31;
Node_31 -> Node_19;
Node_31 -> Node_28;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_21;
Node_32 -> Node_24;
Node_24 -> Node_33;
Node_33 -> Node_18;
Node_25 -> Node_27;
Node_27 -> Node_18;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_18;
}

