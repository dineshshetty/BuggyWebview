digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.readField(I)Z" {
subgraph cluster_Region_699098978 {
label = "R(1:(1:(2:3|(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14)))))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1697266295 {
label = "LOOP:0: (1:(2:3|(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1168075643 {
label = "R(1:(2:3|(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14))))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1209027186 {
label = "Try: R(2:3|(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14))))) catches: R(1:23)";
node [shape=record,color=blue];
subgraph cluster_Region_83115484 {
label = "R(2:3|(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14)))))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0001|TRY_ENTER\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|int int r1 = r5.mFieldId     \/\/ Catch: java.io.IOException \-\> L44\l}"];
subgraph cluster_Region_980591717 {
label = "R(2:(1:20)|(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_317800121 {
label = "IF [B:30:0x0003] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0003|if (r1 == r6) goto L19\l}"];
subgraph cluster_Region_247449822 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0005|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_818261697 {
label = "R(1:(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14)))";
node [shape=record,color=blue];
subgraph cluster_Region_2051813745 {
label = "R(2:(1:17)|(5:7|(1:9)|10|(1:12)(0)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1355821919 {
label = "IF [B:34:0x0013] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0013|if (java.lang.String.valueOf(r1).compareTo(java.lang.String.valueOf(r6)) \> 0) goto L16\l}"];
subgraph cluster_Region_1429402577 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0015|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1293771046 {
label = "R(5:7|(1:9)|10|(1:12)(0)|14)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0016|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|int int r1 = r5.mCount     \/\/ Catch: java.io.IOException \-\> L44\lint int r2 = r5.mFieldSize     \/\/ Catch: java.io.IOException \-\> L44\l}"];
subgraph cluster_IfRegion_1755492228 {
label = "IF [B:37:0x001a] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x001a|if (r1 \< r2) goto L9\l}"];
subgraph cluster_Region_1941782751 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x001c|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|r5.mMasterInput.skip(r2 \- r1)     \/\/ Catch: java.io.IOException \-\> L44\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x0023|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|r5.mFieldSize = \-1     \/\/ Catch: java.io.IOException \-\> L44\lint int r1 = r5.mMasterInput.readInt()     \/\/ Catch: java.io.IOException \-\> L44\lr5.mCount = 0     \/\/ Catch: java.io.IOException \-\> L44\lint r3 = r1 & androidx.core.internal.view.SupportMenu.USER_MASK     \/\/ Catch: java.io.IOException \-\> L44\l}"];
subgraph cluster_IfRegion_68455967 {
label = "IF [B:40:0x0033] THEN: R(1:12) ELSE: R(0)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0033|if (r3 == 65535) goto L12\l}"];
subgraph cluster_Region_581361468 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0035|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l|r3 = r5.mMasterInput.readInt()     \/\/ Catch: java.io.IOException \-\> L44\l}"];
}
subgraph cluster_Region_633022609 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_42 [shape=record,label="{42\:\ 0x003c|TRY_LEAVE\lLOOP_END\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lLOOP:0: B:28:0x0000\-\>B:42:0x003c\lCatch: IOException \-\> 0x0044\lPHI: r3 \l  PHI: (r3v1 'size' int) = (r3v0 'size' int), (r3v2 'size' int) binds: [B:51:0x003c, B:50:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = 65535 & (r1 \>\> 16)     \/\/ Catch: java.io.IOException \-\> L44\lr5.mFieldId = r2     \/\/ Catch: java.io.IOException \-\> L44\lr5.mFieldSize = r3     \/\/ Catch: java.io.IOException \-\> L44\l}"];
}
}
}
}
}
subgraph cluster_Region_940910913 {
label = "R(1:23) | ExcHandler: IOException \-\> 0x0044\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0045|RETURN\l|return false\l}"];
}
}
}
}
}
subgraph cluster_Region_940910913 {
label = "R(1:23) | ExcHandler: IOException \-\> 0x0044\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0045|RETURN\l|return false\l}"];
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0000|LOOP_START\lLOOP:0: B:28:0x0000\-\>B:42:0x003c\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0007|TryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lCatch: IOException \-\> 0x0044\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x003c|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x003c|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0015|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0005|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0044|ExcHandler: IOException \-\> 0x0044\l}"];
MethodNode[shape=record,label="{public boolean androidx.versionedparcelable.VersionedParcelStream.readField((r5v0 'this' androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]), (r6v0 'fieldId' int A[D('fieldId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0015 \-\> B:27:?, BACK_EDGE: B:42:0x003c \-\> B:28:0x0000, CROSS_EDGE: B:40:0x0033 \-\> B:42:0x003c, CROSS_EDGE: B:37:0x001a \-\> B:39:0x0023, CROSS_EDGE: B:45:0x0045 \-\> B:27:?, CROSS_EDGE: B:46:0x0001 \-\> B:44:0x0044\lINLINE_NOT_NEEDED\lTryCatch #0 \{IOException \-\> 0x0044, blocks: (B:29:0x0001, B:33:0x0007, B:36:0x0016, B:38:0x001c, B:39:0x0023, B:41:0x0035, B:42:0x003c), top: B:46:0x0001 \}\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.readField(int):boolean]\l}"];
MethodNode -> Node_26;Node_29 -> Node_30;
Node_29 -> Node_47;
Node_30 -> Node_33[style=dashed];
Node_30 -> Node_48;
Node_31 -> Node_27;
Node_34 -> Node_36[style=dashed];
Node_34 -> Node_49;
Node_35 -> Node_27;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_51[style=dashed];
Node_41 -> Node_50;
Node_42 -> Node_28;
Node_45 -> Node_27;
Node_45 -> Node_27;
Node_26 -> Node_28;
Node_28 -> Node_46;
Node_46 -> Node_29;
Node_46 -> Node_44;
Node_33 -> Node_34;
Node_50 -> Node_42;
Node_51 -> Node_42;
Node_49 -> Node_35;
Node_48 -> Node_31;
Node_47 -> Node_44;
Node_44 -> Node_45;
}

