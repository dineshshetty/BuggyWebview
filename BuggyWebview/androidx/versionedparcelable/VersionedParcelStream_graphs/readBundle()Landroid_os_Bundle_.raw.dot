digraph "CFG forandroidx.versionedparcelable.VersionedParcelStream.readBundle()Landroid\/os\/Bundle;" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcelStream.readInt():int A[MD:():int (m)] (LINE:429)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|0x0004: IF  (r0 I:??[int, byte, short, char] A[D('size' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:17:0x0008  (LINE:430)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0006|RETURN\l|0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:431)\l0x0007: RETURN  (r1 I:android.os.Bundle) \l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0008|0x0008: NEW_INSTANCE  (r1 I:android.os.Bundle) =  android.os.Bundle  (LINE:433)\l0x000a: INVOKE  (r1 I:android.os.Bundle) type: DIRECT call: android.os.Bundle.\<init\>():void A[MD:():void (c)]\l0x000d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:434)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000e|LOOP_START\lLOOP:0: B:18:0x000e\-\>B:19:0x0010\l|0x000e: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:21:0x001e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|LOOP_END\lLOOP:0: B:18:0x000e\-\>B:19:0x0010\l|0x0010: INVOKE  (r3 I:java.lang.String) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcelStream.readString():java.lang.String A[MD:():java.lang.String (m)] (LINE:435)\l0x0014: INVOKE  (r4 I:int) = (r5 I:androidx.versionedparcelable.VersionedParcelStream) type: VIRTUAL call: androidx.versionedparcelable.VersionedParcelStream.readInt():int A[MD:():int (m)] (LINE:436)\l0x0018: INVOKE  \l  (r5 I:androidx.versionedparcelable.VersionedParcelStream)\l  (r4 I:int)\l  (r3 I:java.lang.String A[D('key' java.lang.String)])\l  (r1 I:android.os.Bundle A[D('b' android.os.Bundle)])\l type: DIRECT call: androidx.versionedparcelable.VersionedParcelStream.readObject(int, java.lang.String, android.os.Bundle):void A[MD:(int, java.lang.String, android.os.Bundle):void (m)]\l0x001b: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:434)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001e|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x001e|RETURN\l|0x001e: RETURN  (r1 I:android.os.Bundle A[D('b' android.os.Bundle)])  (LINE:438)\l}"];
MethodNode[shape=record,label="{public android.os.Bundle androidx.versionedparcelable.VersionedParcelStream.readBundle((r5 'this' I:androidx.versionedparcelable.VersionedParcelStream A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:19:0x0010 \-\> B:18:0x000e, CROSS_EDGE: B:20:0x001e \-\> B:12:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0014\-0x001b: r3 'key' Ljava\/lang\/String;\l  0x000e\-0x001e: r2 'i' I\l  0x0004\-0x001e: r0 'size' I\l  0x000d\-0x001e: r1 'b' Landroid\/os\/Bundle;\lMETHOD_OVERRIDE: [androidx.versionedparcelable.VersionedParcel.readBundle():android.os.Bundle]\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_18;
Node_21 -> Node_20;
Node_20 -> Node_12;
}

