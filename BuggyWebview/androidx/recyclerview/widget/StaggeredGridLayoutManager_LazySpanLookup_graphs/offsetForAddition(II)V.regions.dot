digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForAddition(II)V" {
subgraph cluster_Region_1642719966 {
label = "R(2:1|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int[] int[] r0 = r3.mData\l}"];
subgraph cluster_Region_571328135 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1432154592 {
label = "IF [B:3:0x0002, B:5:0x0005] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 == null) goto L9\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|ADDED_TO_REGION\l|if (r4 \>= r0.length) goto L8\l}"];
subgraph cluster_Region_12715434 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1025294749 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0008|ensureSize(r4 + r5)\lint[] int[] r0 = r3.mData\ljava.lang.System.arraycopy(r0, r4, r0, r4 + r5, (r0.length \- r4) \- r5)\ljava.util.Arrays.fill(r3.mData, r4, r4 + r5, \-1)\loffsetFullSpansForAddition(r4, r5)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0004}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0022}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.offsetForAddition((r3v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup A[IMMUTABLE_TYPE, THIS]), (r4v0 'positionStart' int A[D('positionStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'itemCount' int A[D('itemCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0023 \-\> B:1:?, CROSS_EDGE: B:3:0x0002 \-\> B:9:0x0023\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_5 -> Node_7[style=dashed];
Node_5 -> Node_10;
Node_10 -> Node_1;
Node_7 -> Node_8;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

