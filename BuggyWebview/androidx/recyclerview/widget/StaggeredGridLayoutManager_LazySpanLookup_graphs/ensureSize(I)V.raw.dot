digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.ensureSize(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:int[]) = (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup) androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.mData int[]  (LINE:2903)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, short, byte, char]) = (10 ??[int, float, short, byte, char])  (LINE:2904)\l0x0007: INVOKE  (r0 I:int) = (r6 I:int A[D('position' int)]), (r0 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x000b: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x000d: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000f: IPUT  (r0 I:int[]), (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup) androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.mData int[] \l0x0011: INVOKE  (r0 I:int[]), (r1 I:int) type: STATIC call: java.util.Arrays.fill(int[], int):void A[MD:(int[], int):void (c)] (LINE:2905)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN   A[SYNTHETIC] (LINE:2912)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: ARRAY_LENGTH  (r0 I:int) = (r0 I:??[])  (LINE:2906)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r6 I:??[int, byte, short, char] A[D('position' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:10:? \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r0 I:int[]) = (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup) androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.mData int[]  (LINE:2907)\l0x001a: INVOKE  (r2 I:int) = (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup), (r6 I:int A[D('position' int)]) type: VIRTUAL call: androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.sizeForPosition(int):int A[MD:(int):int (m)] (LINE:2908)\l0x001e: NEW_ARRAY  (r2 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0020: IPUT  (r2 I:int[]), (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup) androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.mData int[] \l0x0022: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[] A[D('old' int[])])  (LINE:2909)\l0x0023: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0024: INVOKE  (r0 I:java.lang.Object A[D('old' int[])]), (r4 I:int), (r2 I:java.lang.Object), (r4 I:int), (r3 I:int) type: STATIC call: java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void A[MD:(java.lang.Object, int, java.lang.Object, int, int):void (c)]\l0x0027: IGET  (r2 I:int[]) = (r5 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup) androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.mData int[]  (LINE:2910)\l0x0029: ARRAY_LENGTH  (r3 I:int) = (r0 I:??[] A[D('old' int[])]) \l0x002a: ARRAY_LENGTH  (r4 I:int) = (r2 I:??[]) \l0x002b: INVOKE  (r2 I:int[]), (r3 I:int), (r4 I:int), (r1 I:int) type: STATIC call: java.util.Arrays.fill(int[], int, int, int):void A[MD:(int[], int, int, int):void (c)]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|RETURN\lORIG_RETURN\l|0x002e: RETURN    (LINE:2912)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|0x002e: RETURN   A[SYNTHETIC] (LINE:2912)\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.ensureSize((r5 'this' I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0018 \-\> B:8:0x002e, CROSS_EDGE: B:6:0x0016 \-\> B:8:0x002e\lDebug Info:\l  0x001a\-0x002e: r0 'old' [I\l  \-1 \-0x002e: r6 'position' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_9 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_10 -> Node_1;
}

