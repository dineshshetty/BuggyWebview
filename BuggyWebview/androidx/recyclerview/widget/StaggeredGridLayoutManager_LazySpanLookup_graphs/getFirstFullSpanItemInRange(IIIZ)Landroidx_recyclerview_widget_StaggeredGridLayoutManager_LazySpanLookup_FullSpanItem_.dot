digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.getFirstFullSpanItemInRange(IIIZ)Landroidx\/recyclerview\/widget\/StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|java.util.List\<androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\> r0 = r5.mFullSpanItems\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r0 != null) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|RETURN\l|return null\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|int r0 = r0.size()\lr2 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|LOOP_START\lLOOP:0: B:6:0x000b\-\>B:19:0x002b\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:5:0x0006, B:19:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \>= r0) goto L27\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem r3 = r5.mFullSpanItems.get(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|if (r3.mPosition \< r7) goto L9\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if (r3.mPosition \< r6) goto L24\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|if (r8 == 0) goto L23\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020}"];
Node_14 [shape=record,label="{14\:\ 0x0022|if (r3.mGapDir == r8) goto L22\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|if (r9 == false) goto L21\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026}"];
Node_17 [shape=record,label="{17\:\ 0x0028|if (r3.mHasUnwantedGapAfter == false) goto L19\l}"];
Node_23 [shape=record,label="{23\:\ 0x002a|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|RETURN\l|return r3\l}"];
Node_28 [shape=record,label="{28\:\ 0x002b|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x002b|LOOP_END\lLOOP:0: B:6:0x000b\-\>B:19:0x002b\l|int r2 = r2 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x002a|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x002b|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0019|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|RETURN\l|return null\l}"];
Node_24 [shape=record,label="{24\:\ 0x002e|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x002e|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.getFirstFullSpanItemInRange((r5v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup A[IMMUTABLE_TYPE, THIS]), (r6v0 'minPos' int A[D('minPos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'maxPos' int A[D('maxPos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'gapDir' int A[D('gapDir' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'hasUnwantedGapAfter' boolean A[D('hasUnwantedGapAfter' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0019 \-\> B:1:?, CROSS_EDGE: B:18:0x002a \-\> B:1:?, BACK_EDGE: B:19:0x002b \-\> B:6:0x000b, CROSS_EDGE: B:15:0x0024 \-\> B:19:0x002b, CROSS_EDGE: B:14:0x0022 \-\> B:18:0x002a, CROSS_EDGE: B:12:0x001e \-\> B:18:0x002a, CROSS_EDGE: B:11:0x001c \-\> B:19:0x002b, CROSS_EDGE: B:20:0x002e \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_24;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_22[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_17;
Node_17 -> Node_23[style=dashed];
Node_17 -> Node_28;
Node_23 -> Node_18;
Node_18 -> Node_1;
Node_28 -> Node_19;
Node_19 -> Node_6;
Node_27 -> Node_19;
Node_21 -> Node_18;
Node_25 -> Node_18;
Node_26 -> Node_19;
Node_22 -> Node_9;
Node_9 -> Node_1;
Node_24 -> Node_20;
Node_20 -> Node_1;
}

