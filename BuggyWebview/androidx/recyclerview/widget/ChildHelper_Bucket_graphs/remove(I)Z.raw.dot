digraph "CFG forandroidx.recyclerview.widget.ChildHelper.Bucket.remove(I)Z" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char])  (LINE:470)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|0x0002: IF  (r14 I:??[int, byte, short, char] A[D('index' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:23:0x0010 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0004|0x0004: INVOKE  (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) type: DIRECT call: androidx.recyclerview.widget.ChildHelper.Bucket.ensureNext():void A[MD:():void (m)] (LINE:471)\l0x0007: IGET  (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:472)\l0x0009: ARITH  (r1 I:int) = (r14 I:int A[D('index' int)]) + (\-64 int) \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r1 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.remove(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x000f|RETURN\l|0x000f: RETURN  (r0 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|0x0010: CONST  (r0 I:??[long, double]) = (1 ??[long, double])  (LINE:474)\l0x0012: ARITH  (r2 I:long) = (r0 I:long) \<\< (r14 I:long A[D('index' int)]) \l0x0014: IGET  (r4 I:long) = (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long  (LINE:475)\l0x0016: ARITH  (r6 I:long) = (r4 I:long) & (r2 I:long A[D('mask' long)]) \l0x0018: CONST  (r8 I:??[long, double]) = (0 ??[long, double]) \l0x001a: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001b: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001c: CMP_L  (r12 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0022 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|0x0020: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0023|0x0023: NOT  (r7 I:long) = (r2 I:long A[D('mask' long)])  (LINE:476)\l0x0024: ARITH  (r4 I:long) = (r4 I:long) & (r7 I:long) \l0x0025: IPUT  (r4 I:long), (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long \l0x0027: ARITH  (r2 I:long) = (r2 I:long A[D('mask' long)]) \- (r0 I:long)  (LINE:477)\l0x0028: ARITH  (r0 I:long) = (r4 I:long) & (r2 I:long A[D('mask' long)])  (LINE:478)\l0x002a: NOT  (r7 I:long) = (r2 I:long A[D('mask' long)])  (LINE:480)\l0x002b: ARITH  (r4 I:long) = (r4 I:long) & (r7 I:long) \l0x002c: INVOKE  (r4 I:long) = (r4 I:long), (r10 I:int) type: STATIC call: java.lang.Long.rotateRight(long, int):long A[MD:(long, int):long (c)]\l0x0030: ARITH  (r7 I:long) = (r0 I:long A[D('before' long)]) \| (r4 I:long A[D('after' long)])  (LINE:481)\l0x0032: IPUT  (r7 I:long), (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long \l0x0034: IGET  (r7 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:482)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0036|0x0036: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0048 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0038|0x0038: INVOKE  (r7 I:boolean) = (r7 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r11 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.get(int):boolean A[MD:(int):boolean (m)] (LINE:483)\l}"];
Node_30 [shape=record,label="{30\:\ 0x003c|0x003c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0043 \l}"];
Node_31 [shape=record,label="{31\:\ 0x003e|0x003e: CONST  (r7 I:??[int, float, short, byte, char]) = (63 ??[int, float, short, byte, char])  (LINE:484)\l0x0040: INVOKE  (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r7 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.set(int):void A[MD:(int):void (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0043|0x0043: IGET  (r7 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r13 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:486)\l0x0045: INVOKE  (r7 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r11 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.remove(int):boolean A[MD:(int):boolean (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0048|RETURN\l|0x0048: RETURN  (r6 I:boolean A[D('value' boolean)])  (LINE:488)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0022|0x0022: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{boolean androidx.recyclerview.widget.ChildHelper.Bucket.remove((r13 'this' I:androidx.recyclerview.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r14 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0048 \-\> B:18:?, CROSS_EDGE: B:30:0x003c \-\> B:32:0x0043, CROSS_EDGE: B:28:0x0036 \-\> B:33:0x0048, CROSS_EDGE: B:26:0x0022 \-\> B:27:0x0023\lINLINE_NOT_NEEDED\lDebug Info:\l  0x002a\-0x0048: r0 'before' J\l  0x0014\-0x0048: r2 'mask' J\l  0x0030\-0x0048: r4 'after' J\l  0x0023\-0x0048: r6 'value' Z\l  \-1 \-0x0048: r14 'index' I\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_26 -> Node_27;
}

