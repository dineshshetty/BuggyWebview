digraph "CFG forandroidx.recyclerview.widget.ChildHelper.Bucket.countOnesBefore(I)I" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r6 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:493)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:??[long, double]) = (1 ??[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x001c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0008|0x0008: IF  (r7 I:??[int, byte, short, char] A[D('index' int)]) \< (r1 I:??[int, byte, short, char])  \-\> B:21:0x0011  (LINE:494)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|0x000a: IGET  (r0 I:long) = (r6 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long  (LINE:495)\l0x000c: INVOKE  (r0 I:int) = (r0 I:long) type: STATIC call: java.lang.Long.bitCount(long):int A[MD:(long):int (c)]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0010|RETURN\l|0x0010: RETURN  (r0 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IGET  (r0 I:long) = (r6 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long  (LINE:497)\l0x0013: ARITH  (r4 I:long) = (r2 I:long) \<\< (r7 I:long A[D('index' int)]) \l0x0015: ARITH  (r4 I:long) = (r4 I:long) \- (r2 I:long) \l0x0016: ARITH  (r0 I:long) = (r0 I:long) & (r4 I:long) \l0x0017: INVOKE  (r0 I:int) = (r0 I:long) type: STATIC call: java.lang.Long.bitCount(long):int A[MD:(long):int (c)]\l}"];
Node_22 [shape=record,label="{22\:\ 0x001b|RETURN\l|0x001b: RETURN  (r0 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|0x001c: IF  (r7 I:??[int, byte, short, char] A[D('index' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:26:0x0029  (LINE:499)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001e|0x001e: IGET  (r0 I:long) = (r6 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long  (LINE:500)\l0x0020: ARITH  (r4 I:long) = (r2 I:long) \<\< (r7 I:long A[D('index' int)]) \l0x0022: ARITH  (r4 I:long) = (r4 I:long) \- (r2 I:long) \l0x0023: ARITH  (r0 I:long) = (r0 I:long) & (r4 I:long) \l0x0024: INVOKE  (r0 I:int) = (r0 I:long) type: STATIC call: java.lang.Long.bitCount(long):int A[MD:(long):int (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|RETURN\l|0x0028: RETURN  (r0 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0029|0x0029: ARITH  (r1 I:int) = (r7 I:int A[D('index' int)]) + (\-64 int)  (LINE:502)\l0x002b: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r1 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.countOnesBefore(int):int A[MD:(int):int (m)]\l0x002f: IGET  (r1 I:long) = (r6 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long \l0x0031: INVOKE  (r1 I:int) = (r1 I:long) type: STATIC call: java.lang.Long.bitCount(long):int A[MD:(long):int (c)]\l0x0035: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|RETURN\l|0x0036: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{int androidx.recyclerview.widget.ChildHelper.Bucket.countOnesBefore((r6 'this' I:androidx.recyclerview.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001b \-\> B:15:?, CROSS_EDGE: B:25:0x0028 \-\> B:15:?, CROSS_EDGE: B:27:0x0036 \-\> B:15:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0036: r7 'index' I\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_15;
Node_21 -> Node_22;
Node_22 -> Node_15;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_15;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

