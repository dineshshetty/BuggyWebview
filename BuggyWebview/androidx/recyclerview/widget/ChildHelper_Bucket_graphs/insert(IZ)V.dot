digraph "CFG forandroidx.recyclerview.widget.ChildHelper.Bucket.insert(IZ)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000}"];
Node_23 [shape=record,label="{23\:\ 0x0002|if (r13 \< 64) goto L6\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|ensureNext()\lr12.mNext.insert(r13 + (\-64), r14)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|long r0 = r12.mData\l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|if (((Long.MIN_VALUE & r0) \> 0 ? 1 : ((Long.MIN_VALUE & r0) == 0 ? 0 : \-1)) == 0) goto L19\l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|r2 = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|PHI: r2 \l  PHI: (r2v3 'lastBit' boolean) = (r2v2 'lastBit' boolean), (r2v4 'lastBit' boolean) binds: [B:28:0x001e, B:27:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|long r8 = (1 \<\< r13) \- 1\llong r3 = r0 & r8\llong r0 = (r0 & (~r8)) \<\< 1\lr12.mData = r3 \| r0\l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|if (r14 == false) goto L18\l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|set(r13)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|if (r2 != false) goto L16\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038}"];
Node_35 [shape=record,label="{35\:\ 0x003a|if (r12.mNext == null) goto L15\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ 0x003c|ensureNext()\lr12.mNext.insert(0, r2)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|RETURN\lORIG_RETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x0033|clear(r13)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|r2 = false\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.ChildHelper.Bucket.insert((r12v0 'this' androidx.recyclerview.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r13v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'value' boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x003c \-\> B:37:0x0044, CROSS_EDGE: B:35:0x003a \-\> B:37:0x0044, CROSS_EDGE: B:33:0x0036 \-\> B:36:0x003c, CROSS_EDGE: B:32:0x0033 \-\> B:33:0x0036, CROSS_EDGE: B:28:0x001e \-\> B:29:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_38;
Node_38 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_39 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_32 -> Node_33;
Node_28 -> Node_29;
}

