digraph "CFG forandroidx.recyclerview.widget.ChildHelper.Bucket.insert(IZ)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (64 ??[int, float, short, byte, char])  (LINE:448)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|0x0002: IF  (r13 I:??[int, byte, short, char] A[D('index' int)]) \< (r0 I:??[int, byte, short, char])  \-\> B:25:0x000f \l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|0x0004: INVOKE  (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) type: DIRECT call: androidx.recyclerview.widget.ChildHelper.Bucket.ensureNext():void A[MD:():void (m)] (LINE:449)\l0x0007: IGET  (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:450)\l0x0009: ARITH  (r1 I:int) = (r13 I:int A[D('index' int)]) + (\-64 int) \l0x000b: INVOKE  (r0 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r1 I:int), (r14 I:boolean A[D('value' boolean)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.insert(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x0044: RETURN   A[SYNTHETIC] (LINE:467)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x000f|0x000f: IGET  (r0 I:long) = (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long  (LINE:452)\l0x0011: CONST  (r2 I:??[long, double]) = (\-9223372036854775808 ??[long, double]) \l0x0013: ARITH  (r2 I:long) = (r2 I:long) & (r0 I:long) \l0x0014: CONST  (r4 I:??[long, double]) = (0 ??[long, double]) \l0x0016: CONST  (r6 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0017: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0018: CMP_L  (r8 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x001e \l}"];
Node_27 [shape=record,label="{27\:\ 0x001c|0x001c: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x001f|0x001f: CONST  (r3 I:??[long, double]) = (1 ??[long, double])  (LINE:453)\l0x0021: ARITH  (r8 I:long) = (r3 I:long) \<\< (r13 I:long A[D('index' int)]) \l0x0023: ARITH  (r8 I:long) = (r8 I:long) \- (r3 I:long) \l0x0024: ARITH  (r3 I:long) = (r0 I:long) & (r8 I:long A[D('mask' long)])  (LINE:454)\l0x0026: NOT  (r10 I:long) = (r8 I:long A[D('mask' long)])  (LINE:455)\l0x0027: ARITH  (r0 I:long) = (r0 I:long) & (r10 I:long) \l0x0028: ARITH  (r0 I:long) = (r0 I:long) \<\< (r6 I:long) \l0x0029: ARITH  (r5 I:long) = (r3 I:long A[D('before' long)]) \| (r0 I:long A[D('after' long)])  (LINE:456)\l0x002b: IPUT  (r5 I:long), (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mData long \l}"];
Node_30 [shape=record,label="{30\:\ 0x002d|0x002d: IF  (r14 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0033  (LINE:457)\l}"];
Node_31 [shape=record,label="{31\:\ 0x002f|0x002f: INVOKE  (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r13 I:int A[D('index' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.set(int):void A[MD:(int):void (m)] (LINE:458)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0036|0x0036: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lastBit' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x003c  (LINE:462)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|0x0038: IGET  (r5 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket \l}"];
Node_35 [shape=record,label="{35\:\ 0x003a|0x003a: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:? \l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x0044: RETURN   A[SYNTHETIC] (LINE:467)\l}"];
Node_36 [shape=record,label="{36\:\ 0x003c|0x003c: INVOKE  (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) type: DIRECT call: androidx.recyclerview.widget.ChildHelper.Bucket.ensureNext():void A[MD:():void (m)] (LINE:463)\l0x003f: IGET  (r5 I:androidx.recyclerview.widget.ChildHelper$Bucket) = (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket) androidx.recyclerview.widget.ChildHelper.Bucket.mNext androidx.recyclerview.widget.ChildHelper$Bucket  (LINE:464)\l0x0041: INVOKE  (r5 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r7 I:int), (r2 I:boolean A[D('lastBit' boolean)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.insert(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0044|RETURN\lORIG_RETURN\l|0x0044: RETURN    (LINE:467)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0033|0x0033: INVOKE  (r12 I:androidx.recyclerview.widget.ChildHelper$Bucket), (r13 I:int A[D('index' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.Bucket.clear(int):void A[MD:(int):void (m)] (LINE:460)\l}"];
Node_28 [shape=record,label="{28\:\ 0x001e|0x001e: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.ChildHelper.Bucket.insert((r12 'this' I:androidx.recyclerview.widget.ChildHelper$Bucket A[IMMUTABLE_TYPE, THIS]), (r13 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[D('value' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x003c \-\> B:37:0x0044, CROSS_EDGE: B:35:0x003a \-\> B:37:0x0044, CROSS_EDGE: B:33:0x0036 \-\> B:36:0x003c, CROSS_EDGE: B:32:0x0033 \-\> B:33:0x0036, CROSS_EDGE: B:28:0x001e \-\> B:29:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0029\-0x0044: r0 'after' J\l  0x001f\-0x0044: r2 'lastBit' Z\l  0x0026\-0x0044: r3 'before' J\l  0x0024\-0x0044: r8 'mask' J\l  \-1 \-0x0044: r13 'index' I\l  \-1 \-0x0044: r14 'value' Z\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_38;
Node_38 -> Node_21;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_39 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_21;
Node_32 -> Node_33;
Node_28 -> Node_29;
}

