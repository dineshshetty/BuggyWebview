digraph "CFG forandroidx.recyclerview.widget.SnapHelper.attachToRecyclerView(Landroidx\/recyclerview\/widget\/RecyclerView;)V" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|androidx.recyclerview.widget.RecyclerView r0 = r3.mRecyclerView\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|if (r0 != r4) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|if (r0 == null) goto L7\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|destroyCallbacks()\l}"];
Node_19 [shape=record,label="{19\:\ 0x000a|r3.mRecyclerView = r4\l}"];
Node_20 [shape=record,label="{20\:\ 0x000c|if (r4 == null) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|setupCallbacks()\lr3.mGravityScroller = new android.widget.Scroller(r3.mRecyclerView.getContext(), new android.view.animation.DecelerateInterpolator())\lsnapToTargetExistingView()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0026|RETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.SnapHelper.attachToRecyclerView((r3v0 'this' androidx.recyclerview.widget.SnapHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'recyclerView' androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0026 \-\> B:13:?, CROSS_EDGE: B:20:0x000c \-\> B:22:0x0026, CROSS_EDGE: B:17:0x0005 \-\> B:19:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lEXCEPTIONS:[Ljava\/lang\/IllegalStateException;]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_13;
}

