digraph "CFG forandroidx.recyclerview.widget.OrientationHelper.createOrientationHelper(Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;I)Landroidx\/recyclerview\/widget\/OrientationHelper;" {
subgraph cluster_Region_481844389 {
label = "R(1:1)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1256533473 {
label = "Switch: 3
 case 0 -> R(1:8)
 case 1 -> R(1:6)
 case default -> R(1:3)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|switch(r3) \{\l    case 0: goto L7;\l    case 1: goto L5;\l    default: goto L2;\l\}\l}"];
subgraph cluster_Region_369614192 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0014|RETURN\l|return createHorizontalHelper(r2)\l}"];
}
subgraph cluster_Region_959469553 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x000f|RETURN\l|return createVerticalHelper(r2)\l}"];
}
subgraph cluster_Region_1731426566 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000a|throw new java.lang.IllegalArgumentException(\"invalid orientation\")\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0003}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000b}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0010}"];
MethodNode[shape=record,label="{public static androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createOrientationHelper((r2v0 'layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x000f \-\> B:10:?, CROSS_EDGE: B:17:0x0014 \-\> B:10:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_11 -> Node_14;
Node_11 -> Node_16;
Node_17 -> Node_10;
Node_15 -> Node_10;
Node_13 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

