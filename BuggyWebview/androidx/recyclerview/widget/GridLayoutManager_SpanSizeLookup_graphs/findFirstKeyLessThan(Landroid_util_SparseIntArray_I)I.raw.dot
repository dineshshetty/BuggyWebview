digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.findFirstKeyLessThan(Landroid\/util\/SparseIntArray;I)I" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:997)\l0x0001: INVOKE  (r1 I:int) = (r4 I:android.util.SparseIntArray A[D('cache' android.util.SparseIntArray)]) type: VIRTUAL call: android.util.SparseIntArray.size():int A[MD:():int (c)] (LINE:998)\l0x0005: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0007|LOOP_START\lLOOP:0: B:27:0x0007\-\>B:44:0x0007\l|0x0007: IF  (r0 I:??[int, byte, short, char] A[D('lo' int)]) \> (r1 I:??[int, byte, short, char] A[D('hi' int)])  \-\> B:42:0x0019  (LINE:1000)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0009|0x0009: ARITH  (r2 I:int) = (r0 I:int A[D('lo' int)]) + (r1 I:int A[D('hi' int)])  (LINE:1003)\l0x000b: ARITH  (r2 I:int) = (r2 I:int) \>\>\> (1 int) \l0x000d: INVOKE  (r3 I:int) = (r4 I:android.util.SparseIntArray A[D('cache' android.util.SparseIntArray)]), (r2 I:int A[D('mid' int)]) type: VIRTUAL call: android.util.SparseIntArray.keyAt(int):int A[MD:(int):int (c)] (LINE:1004)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0011|0x0011: IF  (r3 I:??[int, byte, short, char] A[D('midVal' int)]) \>= (r5 I:??[int, byte, short, char] A[D('position' int)])  \-\> B:41:0x0016  (LINE:1005)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0016|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0016|0x0016: ARITH  (r1 I:int A[D('hi' int)]) = (r2 I:int A[D('mid' int)]) + (\-1 int)  (LINE:1008)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0007|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0007|LOOP_END\lSYNTHETIC\lLOOP:0: B:27:0x0007\-\>B:44:0x0007\l}"];
Node_43 [shape=record,label="{43\:\ 0x0013|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0013|0x0013: ARITH  (r0 I:int A[D('lo' int)]) = (r2 I:int A[D('mid' int)]) + (1 int)  (LINE:1006)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0007|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0019|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0019|0x0019: ARITH  (r2 I:int) = (r0 I:int A[D('lo' int)]) + (\-1 int)  (LINE:1011)\l}"];
Node_34 [shape=record,label="{34\:\ 0x001b|0x001b: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \< (0 ??[int, byte, short, char])  \-\> B:39:0x0028  (LINE:1012)\l}"];
Node_35 [shape=record,label="{35\:\ 0x001d|0x001d: INVOKE  (r3 I:int) = (r4 I:android.util.SparseIntArray A[D('cache' android.util.SparseIntArray)]) type: VIRTUAL call: android.util.SparseIntArray.size():int A[MD:():int (c)]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0021|0x0021: IF  (r2 I:??[int, byte, short, char] A[D('index' int)]) \>= (r3 I:??[int, byte, short, char])  \-\> B:47:? \l}"];
Node_37 [shape=record,label="{37\:\ 0x0023|0x0023: INVOKE  (r3 I:int) = (r4 I:android.util.SparseIntArray A[D('cache' android.util.SparseIntArray)]), (r2 I:int A[D('index' int)]) type: VIRTUAL call: android.util.SparseIntArray.keyAt(int):int A[MD:(int):int (c)] (LINE:1013)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|RETURN\l|0x0027: RETURN  (r3 I:int) \l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|0x0028: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:1015)\l0x0029: RETURN  (r3 I:int) A[SYNTHETIC]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|RETURN\lORIG_RETURN\l|0x0028: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1015)\l0x0029: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{static int androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.findFirstKeyLessThan((r4 I:android.util.SparseIntArray A[D('cache' android.util.SparseIntArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:30:0x0013 \-\> B:27:0x0007, BACK_EDGE: B:31:0x0016 \-\> B:27:0x0007, CROSS_EDGE: B:40:0x0029 \-\> B:25:?, CROSS_EDGE: B:34:0x001b \-\> B:39:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0018: r2 'mid' I\l  0x0011\-0x0018: r3 'midVal' I\l  0x0001\-0x0029: r0 'lo' I\l  0x0007\-0x0029: r1 'hi' I\l  0x001b\-0x0029: r2 'index' I\l  \-1 \-0x0029: r4 'cache' Landroid\/util\/SparseIntArray;\l  \-1 \-0x0029: r5 'position' I\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_42;
Node_28 -> Node_29;
Node_29 -> Node_41;
Node_29 -> Node_43[style=dashed];
Node_41 -> Node_31;
Node_31 -> Node_45;
Node_45 -> Node_44;
Node_44 -> Node_27;
Node_43 -> Node_30;
Node_30 -> Node_46;
Node_46 -> Node_44;
Node_42 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_25;
Node_47 -> Node_25;
Node_39 -> Node_25;
}

