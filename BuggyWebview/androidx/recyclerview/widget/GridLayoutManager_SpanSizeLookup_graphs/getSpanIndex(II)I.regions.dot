digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex(II)I" {
subgraph cluster_Region_58557271 {
label = "R(2:1|(2:(1:3)|(6:5|(1:9)|10|(3:12|(1:14)(1:(1:18)(0))|16)|22|(2:(1:25)|(1:24))))) | DECL_VAR: int prevKey\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0000|int int r0 = getSpanSize(r8)\l}"];
subgraph cluster_Region_1135684819 {
label = "R(2:(1:3)|(6:5|(1:9)|10|(3:12|(1:14)(1:(1:18)(0))|16)|22|(2:(1:25)|(1:24))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1595688069 {
label = "IF [B:29:0x0005] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0005|if (r0 == r9) goto L3\l}"];
subgraph cluster_Region_1784088749 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0007|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_700505934 {
label = "R(6:5|(1:9)|10|(3:12|(1:14)(1:(1:18)(0))|16)|22|(2:(1:25)|(1:24)))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0008|int r2 = 0\lint r3 = 0\l}"];
subgraph cluster_IfRegion_897612827 {
label = "IF [B:32:0x000c, B:34:0x0014] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x000c|if (r7.mCacheSpanIndices != false) goto L7\l}"];
Node_34 [shape=record,label="{34\:\ 0x0014|ADDED_TO_REGION\l|if ((r4 = findFirstKeyLessThan(r7.mSpanIndexCache, r8)) \>= 0) goto L9\l}"];
subgraph cluster_Region_1541742041 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0016|int r2 = r7.mSpanIndexCache.get(r4) + getSpanSize(r4)\lint r3 = r4 + 1\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x0024|PHI: r2 r3 \l  PHI: (r2v1 'span' int) = (r2v0 'span' int), (r2v0 'span' int), (r2v7 'span' int) binds: [B:32:0x000c, B:34:0x0014, B:35:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'startPos' int) = (r3v0 'startPos' int), (r3v0 'startPos' int), (r3v2 'startPos' int) binds: [B:32:0x000c, B:34:0x0014, B:35:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r3\l}"];
subgraph cluster_LoopRegion_1976056437 {
label = "LOOP:0: (3:12|(1:14)(1:(1:18)(0))|16)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0025|LOOP_START\lLOOP:0: B:37:0x0025\-\>B:43:0x0033\lPHI: r2 r4 \l  PHI: (r2v2 'span' int) = (r2v1 'span' int), (r2v5 'span' int) binds: [B:36:0x0024, B:43:0x0033] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'i' int) = (r4v1 'i' int), (r4v4 'i' int) binds: [B:36:0x0024, B:43:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \< r8) goto L12\l}"];
subgraph cluster_Region_654152658 {
label = "R(3:12|(1:14)(1:(1:18)(0))|16)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0027|int int r5 = getSpanSize(r4)\lr2 += r5\l}"];
subgraph cluster_IfRegion_1980041727 {
label = "IF [B:39:0x002c] THEN: R(1:14) ELSE: R(1:(1:18)(0))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x002c|if (r2 == r9) goto L14\l}"];
subgraph cluster_Region_1953535670 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x002e|r2 = 0\l}"];
}
subgraph cluster_Region_1361933323 {
label = "R(1:(1:18)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_112256175 {
label = "IF [B:41:0x0030] THEN: R(1:18) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0030|if (r2 \> r9) goto L18\l}"];
subgraph cluster_Region_1240845153 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0032|r2 = r5\l}"];
}
subgraph cluster_Region_464522569 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_43 [shape=record,label="{43\:\ 0x0033|LOOP_END\lLOOP:0: B:37:0x0025\-\>B:43:0x0033\lPHI: r2 \l  PHI: (r2v5 'span' int) = (r2v3 'span' int), (r2v4 'span' int), (r2v6 'span' int) binds: [B:51:0x0033, B:49:0x0033, B:50:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|r4++\l}"];
}
}
Node_44 [shape=record,label="{44\:\ 0x0036|int int r4 = r2 + r0\l}"];
subgraph cluster_Region_1240493298 {
label = "R(2:(1:25)|(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_130358638 {
label = "IF [B:45:0x0038] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0038|if (r4 \> r9) goto L25\l}"];
subgraph cluster_Region_2133242227 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x003b|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_290223732 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x003a|RETURN\l|return r2\l}"];
}
}
}
}
}
Node_26 [shape=record,color=red,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x000e}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0033|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0033|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0033|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex((r7v0 'this' androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup A[IMMUTABLE_TYPE, THIS]), (r8v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'spanCount' int A[D('spanCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:43:0x0033 \-\> B:37:0x0025, CROSS_EDGE: B:42:0x0032 \-\> B:43:0x0033, CROSS_EDGE: B:41:0x0030 \-\> B:43:0x0033, CROSS_EDGE: B:46:0x003a \-\> B:27:?, CROSS_EDGE: B:47:0x003b \-\> B:27:?, CROSS_EDGE: B:34:0x0014 \-\> B:36:0x0024, CROSS_EDGE: B:32:0x000c \-\> B:36:0x0024\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanIndex(int, int):int]\l}"];
MethodNode -> Node_26;Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_27;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_36[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_48[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41[style=dashed];
Node_40 -> Node_50;
Node_41 -> Node_42;
Node_41 -> Node_51[style=dashed];
Node_42 -> Node_49;
Node_43 -> Node_37;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_47 -> Node_27;
Node_46 -> Node_27;
Node_26 -> Node_28;
Node_33 -> Node_34;
Node_50 -> Node_43;
Node_49 -> Node_43;
Node_51 -> Node_43;
Node_48 -> Node_44;
}

