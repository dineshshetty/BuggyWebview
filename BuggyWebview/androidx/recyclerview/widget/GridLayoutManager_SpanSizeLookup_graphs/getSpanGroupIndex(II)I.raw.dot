digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanGroupIndex(II)I" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1029)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1030)\l0x0002: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1031)\l0x0003: IGET  (r3 I:boolean) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.mCacheSpanGroupIndices boolean  (LINE:1032)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0005|0x0005: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0027 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0007|0x0007: IGET  (r3 I:android.util.SparseIntArray) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.mSpanGroupIndexCache android.util.SparseIntArray  (LINE:1034)\l0x0009: INVOKE  (r3 I:int) = (r3 I:android.util.SparseIntArray), (r7 I:int A[D('adapterPosition' int)]) type: STATIC call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.findFirstKeyLessThan(android.util.SparseIntArray, int):int A[MD:(android.util.SparseIntArray, int):int (m)]\l0x000d: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:1035)\l}"];
Node_31 [shape=record,label="{31\:\ 0x000e|0x000e: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('prevKey' int)]) == (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0027 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0010|0x0010: IGET  (r4 I:android.util.SparseIntArray) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.mSpanGroupIndexCache android.util.SparseIntArray  (LINE:1036)\l0x0012: INVOKE  (r1 I:int A[D('group' int)]) = (r4 I:android.util.SparseIntArray), (r3 I:int A[D('prevKey' int)]) type: VIRTUAL call: android.util.SparseIntArray.get(int):int A[MD:(int):int (c)]\l0x0016: ARITH  (r2 I:int A[D('start' int)]) = (r3 I:int A[D('prevKey' int)]) + (1 int)  (LINE:1037)\l0x0018: INVOKE  (r4 I:int) = \l  (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup)\l  (r3 I:int A[D('prevKey' int)])\l  (r8 I:int A[D('spanCount' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanIndex(int, int):int A[MD:(int, int):int (m)] (LINE:1038)\l0x001c: INVOKE  (r5 I:int) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r3 I:int A[D('prevKey' int)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int A[MD:(int):int (m)]\l0x0020: ARITH  (r0 I:int A[D('span' int)]) = (r4 I:int) + (r5 I:int) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|0x0022: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('span' int)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spanCount' int)])  \-\> B:35:0x0027  (LINE:1039)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('span' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1040)\l0x0025: ARITH  (r1 I:int) = (r1 I:int A[D('group' int)]) + (1 int)  (LINE:1041)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|0x0027: INVOKE  (r3 I:int) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r7 I:int A[D('adapterPosition' int)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int A[MD:(int):int (m)] (LINE:1045)\l0x002b: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)])  (LINE:1046)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002c|LOOP_START\lLOOP:0: B:36:0x002c\-\>B:42:0x003e\l|0x002c: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r7 I:??[int, byte, short, char] A[D('adapterPosition' int)])  \-\> B:47:0x0041 \l}"];
Node_37 [shape=record,label="{37\:\ 0x002e|0x002e: INVOKE  (r5 I:int) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r4 I:int A[D('i' int)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanSize(int):int A[MD:(int):int (m)] (LINE:1047)\l0x0032: ARITH  (r0 I:int) = (r0 I:int A[D('span' int)]) + (r5 I:int A[D('size' int)])  (LINE:1048)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0033|0x0033: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('span' int)]) != (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spanCount' int)])  \-\> B:40:0x0039  (LINE:1049)\l}"];
Node_39 [shape=record,label="{39\:\ 0x0035|0x0035: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('span' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1050)\l0x0036: ARITH  (r1 I:int) = (r1 I:int A[D('group' int)]) + (1 int)  (LINE:1051)\l}"];
Node_49 [shape=record,label="{49\:\ 0x003e|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x003e|LOOP_END\lLOOP:0: B:36:0x002c\-\>B:42:0x003e\l|0x003e: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:1046)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|0x0039: IF  (r0 I:??[int, byte, short, char] A[D('span' int)]) \<= (r8 I:??[int, byte, short, char] A[D('spanCount' int)])  \-\> B:50:0x003e  (LINE:1052)\l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|0x003b: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('span' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])  (LINE:1054)\l0x003c: ARITH  (r1 I:int) = (r1 I:int A[D('group' int)]) + (1 int)  (LINE:1055)\l}"];
Node_48 [shape=record,label="{48\:\ 0x003e|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x003e|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0041|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|0x0041: ARITH  (r4 I:int A[D('i' int)]) = (r0 I:int A[D('span' int)]) + (r3 I:int A[D('positionSpanSize' int)])  (LINE:1058)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0043|0x0043: IF  (r4 I:??[int, byte, short, char]) \<= (r8 I:??[int, byte, short, char] A[D('spanCount' int)])  \-\> B:51:? \l}"];
Node_45 [shape=record,label="{45\:\ 0x0045|0x0045: ARITH  (r1 I:int) = (r1 I:int A[D('group' int)]) + (1 int)  (LINE:1059)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0047|RETURN\lORIG_RETURN\l|0x0047: RETURN  (r1 I:int A[D('group' int)])  (LINE:1061)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|0x0047: RETURN  (r1 I:int A[D('group' int)]) A[SYNTHETIC] (LINE:1061)\l}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getSpanGroupIndex((r6 'this' I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('adapterPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('spanCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:42:0x003e \-\> B:36:0x002c, CROSS_EDGE: B:41:0x003b \-\> B:42:0x003e, CROSS_EDGE: B:40:0x0039 \-\> B:42:0x003e, CROSS_EDGE: B:44:0x0043 \-\> B:46:0x0047, CROSS_EDGE: B:33:0x0022 \-\> B:35:0x0027, CROSS_EDGE: B:31:0x000e \-\> B:35:0x0027, CROSS_EDGE: B:29:0x0005 \-\> B:35:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000d\-0x0027: r3 'prevKey' I\l  0x0032\-0x003e: r5 'size' I\l  0x002c\-0x0041: r4 'i' I\l  0x0001\-0x0047: r0 'span' I\l  0x0002\-0x0047: r1 'group' I\l  0x0003\-0x0047: r2 'start' I\l  0x002b\-0x0047: r3 'positionSpanSize' I\l  \-1 \-0x0047: r7 'adapterPosition' I\l  \-1 \-0x0047: r8 'spanCount' I\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_47;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_49;
Node_49 -> Node_42;
Node_42 -> Node_36;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_50;
Node_41 -> Node_48;
Node_48 -> Node_42;
Node_50 -> Node_42;
Node_47 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_51;
Node_45 -> Node_46;
Node_46 -> Node_27;
Node_51 -> Node_27;
}

