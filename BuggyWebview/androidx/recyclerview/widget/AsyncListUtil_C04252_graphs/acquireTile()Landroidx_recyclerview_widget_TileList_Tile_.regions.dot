digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.2.acquireTile()Landroidx\/recyclerview\/widget\/TileList$Tile;" {
subgraph cluster_Region_1034938923 {
label = "R(2:1|(2:(2:3|4)|(1:7)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.recyclerview.widget.TileList$Tile\<T\> androidx.recyclerview.widget.TileList.Tile\<T\> r0 = r3.mRecycledRoot\l}"];
subgraph cluster_Region_880041007 {
label = "R(2:(2:3|4)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1940650698 {
label = "IF [B:3:0x0002] THEN: R(2:3|4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_1912819552 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0004|androidx.recyclerview.widget.TileList$Tile\<T\> androidx.recyclerview.widget.TileList.Tile\<T\> r1 = r3.mRecycledRoot\lr3.mRecycledRoot = r0.mNext\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_751117895 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0018|RETURN\l|return new androidx.recyclerview.widget.TileList.Tile\<\>(androidx.recyclerview.widget.AsyncListUtil.this.mTClass, androidx.recyclerview.widget.AsyncListUtil.this.mTileSize)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
MethodNode[shape=record,label="{private androidx.recyclerview.widget.TileList$Tile\<T\> androidx.recyclerview.widget.AsyncListUtil.2.acquireTile((r3v0 'this' androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:7:0x0018 \-\> B:1:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ()Landroidx\/recyclerview\/widget\/TileList$Tile\<TT;\>;\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_7 -> Node_1;
Node_0 -> Node_2;
Node_6 -> Node_7;
}

