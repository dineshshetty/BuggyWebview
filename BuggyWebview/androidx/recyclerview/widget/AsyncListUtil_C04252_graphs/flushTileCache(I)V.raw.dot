digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.2.flushTileCache(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.AsyncListUtil) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.this$0 androidx.recyclerview.widget.AsyncListUtil  (LINE:421)\l0x0002: IGET  (r0 I:androidx.recyclerview.widget.AsyncListUtil$DataCallback\<T\>) = (r0 I:androidx.recyclerview.widget.AsyncListUtil) androidx.recyclerview.widget.AsyncListUtil.mDataCallback androidx.recyclerview.widget.AsyncListUtil$DataCallback \l0x0004: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.AsyncListUtil$DataCallback) type: VIRTUAL call: androidx.recyclerview.widget.AsyncListUtil.DataCallback.getMaxCachedTiles():int A[MD:():int (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lLOOP:0: B:3:0x0008\-\>B:25:0x0008\l|0x0008: IGET  (r1 I:android.util.SparseBooleanArray) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.mLoadedTiles android.util.SparseBooleanArray  (LINE:422)\l0x000a: INVOKE  (r1 I:int) = (r1 I:android.util.SparseBooleanArray) type: VIRTUAL call: android.util.SparseBooleanArray.size():int A[MD:():int (c)]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r1 I:??[int, byte, short, char]) \< (r0 I:??[int, byte, short, char] A[D('cacheSizeLimit' int)])  \-\> B:19:0x0040 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r1 I:android.util.SparseBooleanArray) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.mLoadedTiles android.util.SparseBooleanArray  (LINE:423)\l0x0012: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0013: INVOKE  (r1 I:int) = (r1 I:android.util.SparseBooleanArray), (r2 I:int) type: VIRTUAL call: android.util.SparseBooleanArray.keyAt(int):int A[MD:(int):int (c)]\l0x0017: IGET  (r2 I:android.util.SparseBooleanArray) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.mLoadedTiles android.util.SparseBooleanArray  (LINE:424)\l0x0019: INVOKE  (r3 I:int) = (r2 I:android.util.SparseBooleanArray) type: VIRTUAL call: android.util.SparseBooleanArray.size():int A[MD:():int (c)]\l0x001d: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001e: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x001f: INVOKE  (r2 I:int) = (r2 I:android.util.SparseBooleanArray), (r3 I:int) type: VIRTUAL call: android.util.SparseBooleanArray.keyAt(int):int A[MD:(int):int (c)]\l0x0023: IGET  (r3 I:int) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.mFirstRequiredTileStart int  (LINE:425)\l0x0025: ARITH  (r3 I:int) = (r3 I:int) \- (r1 I:int A[D('firstLoadedTileStart' int)]) \l0x0026: IGET  (r5 I:int) = (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)]) androidx.recyclerview.widget.AsyncListUtil.2.mLastRequiredTileStart int  (LINE:426)\l0x0028: ARITH  (r5 I:int) = (r2 I:int A[D('lastLoadedTileStart' int)]) \- (r5 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:??[int, byte, short, char] A[D('startMargin' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:18:0x0035  (LINE:427)\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r3 I:??[int, byte, short, char] A[D('startMargin' int)]) \>= (r5 I:??[int, byte, short, char] A[D('endMargin' int)])  \-\> B:21:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: CONST  (r6 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('scrollHint' int)]) != (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0035 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IF  (r5 I:??[int, byte, short, char] A[D('endMargin' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:23:0x003f  (LINE:430)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: IF  (r3 I:??[int, byte, short, char] A[D('startMargin' int)]) \< (r5 I:??[int, byte, short, char] A[D('endMargin' int)])  \-\> B:14:0x003b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('scrollHint' int)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x003f \l}"];
Node_24 [shape=record,label="{24\:\ 0x003f|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|0x003f: RETURN   A[SYNTHETIC] (LINE:435)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: INVOKE  \l  (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)])\l  (r2 I:int A[D('lastLoadedTileStart' int)])\l type: DIRECT call: androidx.recyclerview.widget.AsyncListUtil.2.removeTile(int):void A[MD:(int):void (m)] (LINE:432)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|LOOP_END\lSYNTHETIC\lLOOP:0: B:3:0x0008\-\>B:25:0x0008\l}"];
Node_23 [shape=record,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|RETURN\lORIG_RETURN\l|0x003f: RETURN    (LINE:435)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0031|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: INVOKE  \l  (r7 I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2)])\l  (r1 I:int A[D('firstLoadedTileStart' int)])\l type: DIRECT call: androidx.recyclerview.widget.AsyncListUtil.2.removeTile(int):void A[MD:(int):void (m)] (LINE:429)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0008|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|RETURN\l|0x0040: RETURN    (LINE:438)\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.AsyncListUtil.2.flushTileCache((r7 'this' I:androidx.recyclerview.widget.AsyncListUtil$2 A[D('this' androidx.recyclerview.widget.AsyncListUtil$2), IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('scrollHint' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:10:0x0031 \-\> B:3:0x0008, BACK_EDGE: B:14:0x003b \-\> B:3:0x0008, CROSS_EDGE: B:12:0x0037 \-\> B:14:0x003b, CROSS_EDGE: B:11:0x0035 \-\> B:16:0x003f, CROSS_EDGE: B:7:0x002c \-\> B:10:0x0031, CROSS_EDGE: B:6:0x002a \-\> B:11:0x0035, CROSS_EDGE: B:17:0x0040 \-\> B:1:?\lDebug Info:\l  0x0017\-0x003e: r1 'firstLoadedTileStart' I\l  0x0023\-0x003e: r2 'lastLoadedTileStart' I\l  0x0026\-0x003e: r3 'startMargin' I\l  0x002a\-0x003e: r5 'endMargin' I\l  0x003f\-0x0040: r1 'firstLoadedTileStart' I\l  0x003f\-0x0040: r2 'lastLoadedTileStart' I\l  0x003f\-0x0040: r3 'startMargin' I\l  0x003f\-0x0040: r5 'endMargin' I\l  0x0008\-0x0040: r0 'cacheSizeLimit' I\l  0x0000\-0x0040: r7 'this' Landroidx\/recyclerview\/widget\/AsyncListUtil$2;, signature: Landroidx\/recyclerview\/widget\/AsyncListUtil$2;\l  \-1 \-0x0040: r8 'scrollHint' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_20;
Node_9 -> Node_22[style=dashed];
Node_20 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_24 -> Node_28;
Node_28 -> Node_1;
Node_14 -> Node_26;
Node_26 -> Node_25;
Node_25 -> Node_3;
Node_23 -> Node_16;
Node_16 -> Node_1;
Node_22 -> Node_10;
Node_10 -> Node_27;
Node_27 -> Node_25;
Node_21 -> Node_10;
Node_18 -> Node_11;
Node_19 -> Node_17;
Node_17 -> Node_1;
}

