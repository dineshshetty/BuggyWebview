digraph "CFG forandroidx.recyclerview.widget.RecyclerView.ViewHolder.setIsRecyclable(Z)V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:11414)\l0x0001: IGET  (r1 I:int) = (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mIsRecyclableCount int \l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|0x0003: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('recyclable' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0007 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0005|0x0005: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|0x0008: IPUT  (r1 I:int), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mIsRecyclableCount int \l}"];
Node_27 [shape=record,label="{27\:\ 0x000a|0x000a: IF  (r1 I:??[int, byte, short, char]) \>= (0 ??[int, byte, short, char])  \-\> B:29:0x0026  (LINE:11415)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|0x000c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:11416)\l0x000d: IPUT  (r0 I:int), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mIsRecyclableCount int \l0x000f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder  (LINE:11421)\l0x0011: INVOKE  (r0 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for \" \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x001c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0020: CONST_STR  (r1 I:java.lang.String) =  \"View\" \l0x0022: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:11431)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|0x0026: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('recyclable' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0031  (LINE:11423)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|0x0028: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0031 \l}"];
Node_31 [shape=record,label="{31\:\ 0x002a|0x002a: IGET  (r0 I:int) = (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mFlags int  (LINE:11424)\l0x002c: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) \| (16 ??[int, float, short, byte, char]) \l0x002e: IPUT  (r0 I:int), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mFlags int \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:11431)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0031|0x0031: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('recyclable' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:?  (LINE:11425)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|0x0033: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:? \l}"];
Node_34 [shape=record,label="{34\:\ 0x0035|0x0035: IGET  (r0 I:int) = (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mFlags int  (LINE:11426)\l0x0037: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (\-17 ??[int, float, short, byte, char]) \l0x0039: IPUT  (r0 I:int), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mFlags int \l}"];
Node_35 [shape=record,label="{35\:\ 0x003b|RETURN\lORIG_RETURN\l|0x003b: RETURN    (LINE:11431)\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:11431)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|0x003b: RETURN   A[SYNTHETIC] (LINE:11431)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0007|0x0007: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
MethodNode[shape=record,label="{public final void androidx.recyclerview.widget.RecyclerView.ViewHolder.setIsRecyclable((r2 'this' I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[D('recyclable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x002a \-\> B:35:0x003b, CROSS_EDGE: B:34:0x0035 \-\> B:35:0x003b, CROSS_EDGE: B:33:0x0033 \-\> B:35:0x003b, CROSS_EDGE: B:32:0x0031 \-\> B:35:0x003b, CROSS_EDGE: B:29:0x0026 \-\> B:32:0x0031, CROSS_EDGE: B:25:0x0007 \-\> B:26:0x0008\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x003b: r3 'recyclable' Z\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_36;
Node_36 -> Node_21;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_37;
Node_37 -> Node_21;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
Node_25 -> Node_26;
}

