digraph "CFG forandroidx.recyclerview.widget.RecyclerView.ViewHolder.offsetPosition(IZ)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0003|if (r2.mOldPosition != (\-1)) goto L4\l}"];
Node_19 [shape=record,label="{19\:\ 0x0005|r2.mOldPosition = r2.mPosition\l}"];
Node_20 [shape=record,label="{20\:\ 0x0009}"];
Node_21 [shape=record,label="{21\:\ 0x000b|if (r2.mPreLayoutPosition != (\-1)) goto L7\l}"];
Node_22 [shape=record,label="{22\:\ 0x000d|r2.mPreLayoutPosition = r2.mPosition\l}"];
Node_23 [shape=record,label="{23\:\ 0x0011|if (r4 == false) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|r2.mPreLayoutPosition = r2.mPreLayoutPosition + r3\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|r2.mPosition = r2.mPosition + r3\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|if (r2.itemView.getLayoutParams() == null) goto L14\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|((androidx.recyclerview.widget.RecyclerView.LayoutParams) r2.itemView.getLayoutParams()).mInsetsDirty = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x0030|RETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.ViewHolder.offsetPosition((r2v0 'this' androidx.recyclerview.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, THIS]), (r3v0 'offset' int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'applyToPreLayout' boolean A[D('applyToPreLayout' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0023 \-\> B:28:0x0030, CROSS_EDGE: B:23:0x0011 \-\> B:25:0x0018, CROSS_EDGE: B:21:0x000b \-\> B:23:0x0011, CROSS_EDGE: B:18:0x0003 \-\> B:20:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_16;
Node_29 -> Node_16;
}

