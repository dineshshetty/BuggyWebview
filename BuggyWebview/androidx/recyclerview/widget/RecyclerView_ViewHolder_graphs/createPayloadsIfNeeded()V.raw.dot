digraph "CFG forandroidx.recyclerview.widget.RecyclerView.ViewHolder.createPayloadsIfNeeded()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:java.util.List\<java.lang.Object\>) = (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mPayloads java.util.List  (LINE:11309)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:11310)\l0x0006: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0009: IPUT  (r0 I:java.util.List\<java.lang.Object\>), (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mPayloads java.util.List \l0x000b: INVOKE  (r0 I:java.util.List) = (r0 I:java.util.List) type: STATIC call: java.util.Collections.unmodifiableList(java.util.List):java.util.List A[MD:\<T\>:(java.util.List\<? extends T\>):java.util.List\<T\> (c)] (LINE:11311)\l0x000f: IPUT  (r0 I:java.util.List\<java.lang.Object\>), (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.mUnmodifiedPayloads java.util.List \l}"];
Node_12 [shape=record,label="{12\:\ 0x0011|RETURN\lORIG_RETURN\l|0x0011: RETURN    (LINE:11313)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x0011: RETURN   A[SYNTHETIC] (LINE:11313)\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.RecyclerView.ViewHolder.createPayloadsIfNeeded((r1 'this' I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x0011\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

