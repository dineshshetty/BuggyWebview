digraph "CFG forandroidx.recyclerview.widget.RecyclerView.ViewHolder.setIsRecyclable(Z)V" {
subgraph cluster_Region_982479054 {
label = "R(4:1|2|4|(1:6)(1:(1:11)(1:(1:15)(0))))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0000|int int r1 = r2.mIsRecyclableCount\l}"];
Node_23 [shape=record,label="{23\:\ 0x0003|int r1 = r3 ? r1 \- 1 : r1 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0008|PHI: r1 \l  PHI: (r1v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r2.mIsRecyclableCount = r1\l}"];
subgraph cluster_IfRegion_1371313658 {
label = "IF [B:27:0x000a] THEN: R(1:6) ELSE: R(1:(1:11)(1:(1:15)(0)))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x000a|if (r1 \< 0) goto L6\l}"];
subgraph cluster_Region_1440589347 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x000c|r2.mIsRecyclableCount = 0\landroid.util.Log.e(\"View\", \"isRecyclable decremented below 0: unmatched pair of setIsRecyable() calls for \" + r2)\l}"];
}
subgraph cluster_Region_629328747 {
label = "R(1:(1:11)(1:(1:15)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1159207876 {
label = "IF [B:29:0x0026, B:30:0x0028] THEN: R(1:11) ELSE: R(1:(1:15)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0026|if (r3 == false) goto L10\l}"];
Node_30 [shape=record,label="{30\:\ 0x0028|ADDED_TO_REGION\l|if (r1 == 1) goto L11\l}"];
subgraph cluster_Region_150927102 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x002a|r2.mFlags \|= 16\l}"];
}
subgraph cluster_Region_1634013009 {
label = "R(1:(1:15)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_532641578 {
label = "IF [B:32:0x0031, B:33:0x0033] THEN: R(1:15) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0031|if (r3 != false) goto L14\l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|ADDED_TO_REGION\l|if (r1 == 0) goto L15\l}"];
subgraph cluster_Region_1496400352 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0035|r2.mFlags &= \-17\l}"];
}
subgraph cluster_Region_1792737342 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0005}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x003b|ORIG_RETURN\l}"];
Node_39 [shape=record,color=red,label="{39\:\ ?|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0007}"];
MethodNode[shape=record,label="{public final void androidx.recyclerview.widget.RecyclerView.ViewHolder.setIsRecyclable((r2v0 'this' androidx.recyclerview.widget.RecyclerView$ViewHolder A[IMMUTABLE_TYPE, THIS]), (r3v0 'recyclable' boolean A[D('recyclable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x002a \-\> B:35:0x003b, CROSS_EDGE: B:34:0x0035 \-\> B:35:0x003b, CROSS_EDGE: B:33:0x0033 \-\> B:35:0x003b, CROSS_EDGE: B:32:0x0031 \-\> B:35:0x003b, CROSS_EDGE: B:29:0x0026 \-\> B:32:0x0031, CROSS_EDGE: B:25:0x0007 \-\> B:26:0x0008\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_20;Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_36;
Node_29 -> Node_30;
Node_29 -> Node_32[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_32 -> Node_38[style=dashed];
Node_33 -> Node_34;
Node_33 -> Node_39[style=dashed];
Node_34 -> Node_35;
Node_20 -> Node_22;
Node_24 -> Node_26;
Node_36 -> Node_21;
Node_37 -> Node_21;
Node_35 -> Node_21;
Node_39 -> Node_21;
Node_38 -> Node_21;
Node_25 -> Node_26;
}

