digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.Span.findOnePartiallyOrCompletelyVisibleChild(IIZZZ)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r2 = r14.this$0.mPrimaryOrientation.getStartAfterPadding()\lint r3 = r14.this$0.mPrimaryOrientation.getEndAfterPadding()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r16 \<= r15) goto L44\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|r7 = 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|PHI: r7 \l  PHI: (r7v1 'next' int) = (r7v0 'next' int), (r7v2 'next' int) binds: [B:5:0x001a, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r15\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|LOOP_START\lLOOP:0: B:7:0x001c\-\>B:35:0x0070\lPHI: r8 \l  PHI: (r8v1 'i' int) = (r8v0 'i' int), (r8v2 'i' int) binds: [B:6:0x001b, B:35:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == r16) goto L42\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|android.view.View r9 = r14.mViews.get(r8)\lint r10 = r14.this$0.mPrimaryOrientation.getDecoratedStart(r9)\lint r11 = r14.this$0.mPrimaryOrientation.getDecoratedEnd(r9)\lr12 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|if (r19 == false) goto L41\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|if (r10 \> r3) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|r13 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|PHI: r13 \l  PHI: (r13v1 'childStartInclusion' boolean) = (r13v0 'childStartInclusion' boolean), (r13v2 'childStartInclusion' boolean) binds: [B:13:0x003e, B:14:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|if (r19 == false) goto L39\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|if (r11 \< r2) goto L12\l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|PHI: r12 \l  PHI: (r12v2 'childEndInclusion' boolean) = (r12v0 'childEndInclusion' boolean), (r12v1 'childEndInclusion' boolean), (r12v0 'childEndInclusion' boolean) binds: [B:18:0x0046, B:19:0x0048, B:16:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|if (r13 == false) goto L37\l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|if (r12 == false) goto L36\l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|if (r17 == false) goto L25\l}"];
Node_23 [shape=record,label="{23\:\ 0x004f|if (r18 == false) goto L25\l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|if (r10 \< r2) goto L24\l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|if (r11 \> r3) goto L22\l}"];
Node_39 [shape=record,label="{39\:\ 0x0055|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0055}"];
Node_27 [shape=record,label="{27\:\ 0x005b|RETURN\l|return r14.this$0.getPosition(r9)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0070|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0070|LOOP_END\lLOOP:0: B:7:0x001c\-\>B:35:0x0070\l|int r8 = r8 + r7\l}"];
Node_44 [shape=record,label="{44\:\ 0x0070|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x005c|if (r18 == false) goto L26\l}"];
Node_31 [shape=record,label="{31\:\ 0x0065|if (r10 \< r2) goto L32\l}"];
Node_32 [shape=record,label="{32\:\ 0x0067|if (r11 \<= r3) goto L31\l}"];
Node_38 [shape=record,label="{38\:\ 0x0069|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0069}"];
Node_34 [shape=record,label="{34\:\ 0x006f|RETURN\l|return r14.this$0.getPosition(r9)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0070|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0069|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x005e|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x005e}"];
Node_30 [shape=record,label="{30\:\ 0x0064|RETURN\l|return r14.this$0.getPosition(r9)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0070|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0070|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|r12 = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|if (r11 \<= r2) goto L12\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|r13 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|if (r10 \>= r3) goto L9\l}"];
Node_40 [shape=record,label="{40\:\ 0x0072|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0072|RETURN\l|return \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|r7 = \-1\l}"];
MethodNode[shape=record,label="{int androidx.recyclerview.widget.StaggeredGridLayoutManager.Span.findOnePartiallyOrCompletelyVisibleChild((r14v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager$Span A[IMMUTABLE_TYPE, THIS]), (r15v0 'fromIndex' int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'toIndex' int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'completelyVisible' boolean A[D('completelyVisible' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'acceptCompletelyVisible' boolean A[D('acceptCompletelyVisible' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'acceptEndPointInclusion' boolean A[D('acceptEndPointInclusion' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0070 \-\> B:7:0x001c, CROSS_EDGE: B:24:0x0051 \-\> B:35:0x0070, CROSS_EDGE: B:30:0x0064 \-\> B:1:?, CROSS_EDGE: B:34:0x006f \-\> B:1:?, CROSS_EDGE: B:32:0x0067 \-\> B:35:0x0070, CROSS_EDGE: B:31:0x0065 \-\> B:33:0x0069, CROSS_EDGE: B:22:0x004d \-\> B:28:0x005c, CROSS_EDGE: B:21:0x004b \-\> B:35:0x0070, CROSS_EDGE: B:20:0x0049 \-\> B:35:0x0070, CROSS_EDGE: B:19:0x0048 \-\> B:20:0x0049, CROSS_EDGE: B:18:0x0046 \-\> B:19:0x0048, CROSS_EDGE: B:18:0x0046 \-\> B:20:0x0049, CROSS_EDGE: B:13:0x003e \-\> B:15:0x0041, CROSS_EDGE: B:12:0x003c \-\> B:13:0x003e, CROSS_EDGE: B:12:0x003c \-\> B:14:0x0040, CROSS_EDGE: B:36:0x0072 \-\> B:1:?, CROSS_EDGE: B:5:0x001a \-\> B:6:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_40;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_14;
Node_10 -> Node_13[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_20;
Node_16 -> Node_19[style=dashed];
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_42;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_43;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_44;
Node_25 -> Node_39[style=dashed];
Node_25 -> Node_45;
Node_39 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_1;
Node_45 -> Node_35;
Node_35 -> Node_7;
Node_44 -> Node_35;
Node_28 -> Node_31;
Node_28 -> Node_41[style=dashed];
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_38[style=dashed];
Node_32 -> Node_46;
Node_38 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_46 -> Node_35;
Node_37 -> Node_33;
Node_41 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_1;
Node_43 -> Node_35;
Node_42 -> Node_35;
Node_19 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_13 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_40 -> Node_36;
Node_36 -> Node_1;
Node_5 -> Node_6;
}

