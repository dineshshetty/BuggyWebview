digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.Span.findOnePartiallyVisibleChild(IIZ)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2793)\l0x0001: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromIndex' int)]) \l0x0004: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toIndex' int)]) \l0x0005: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('acceptEndPointInclusion' boolean)]) \l0x0006: INVOKE  (r0 I:int) = \l  (r0 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:boolean)\l type: VIRTUAL call: androidx.recyclerview.widget.StaggeredGridLayoutManager.Span.findOnePartiallyOrCompletelyVisibleChild(int, int, boolean, boolean, boolean):int A[MD:(int, int, boolean, boolean, boolean):int (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{int androidx.recyclerview.widget.StaggeredGridLayoutManager.Span.findOnePartiallyVisibleChild((r6 'this' I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('acceptEndPointInclusion' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x000a: r7 'fromIndex' I\l  \-1 \-0x000a: r8 'toIndex' I\l  \-1 \-0x000a: r9 'acceptEndPointInclusion' Z\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

