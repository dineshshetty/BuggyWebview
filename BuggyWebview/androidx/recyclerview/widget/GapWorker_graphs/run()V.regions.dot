digraph "CFG forandroidx.recyclerview.widget.GapWorker.run()V" {
subgraph cluster_Region_1209270617 {
label = "R(2:1|(2:3|(2:(1:6)|(4:8|(3:10|(1:13)(0)|15)|18|(2:(1:21)|(1:22))))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|long r0 = 0\l}"];
subgraph cluster_TryCatchRegion_1098436005 {
label = "Try: R(2:3|(2:(1:6)|(4:8|(3:10|(1:13)(0)|15)|18|(2:(1:21)|(1:22))))) finally: R(3:26|27|28)";
node [shape=record,color=blue];
subgraph cluster_Region_1197165869 {
label = "R(2:3|(2:(1:6)|(4:8|(3:10|(1:13)(0)|15)|18|(2:(1:21)|(1:22)))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|androidx.core.p003os.TraceCompat.beginSection(\"RV Prefetch\")     \/\/ Catch: java.lang.Throwable \-\> L57\l}"];
subgraph cluster_Region_299740820 {
label = "R(2:(1:6)|(4:8|(3:10|(1:13)(0)|15)|18|(2:(1:21)|(1:22))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_220815761 {
label = "IF [B:4:0x000d] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r9.mRecyclerViews.isEmpty() == true) goto L5\l}"];
subgraph cluster_Region_180060276 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_381226598 {
label = "R(4:8|(3:10|(1:13)(0)|15)|18|(2:(1:21)|(1:22)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|int int r2 = r9.mRecyclerViews.size()     \/\/ Catch: java.lang.Throwable \-\> L57\llong r3 = 0\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_70454419 {
label = "LOOP:0: (3:10|(1:13)(0)|15)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lLOOP:0: B:8:0x001e\-\>B:13:0x0037\lPHI: r3 r5 \l  PHI: (r3v1 'latestFrameVsyncMs' long) = (r3v0 'latestFrameVsyncMs' long), (r3v2 'latestFrameVsyncMs' long) binds: [B:7:0x0015, B:13:0x0037] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'i' int) = (r5v0 'i' int), (r5v6 'i' int) binds: [B:7:0x0015, B:13:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 \< r2) goto L10\l}"];
subgraph cluster_Region_538555559 {
label = "R(3:10|(1:13)(0)|15)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|TryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|androidx.recyclerview.widget.RecyclerView androidx.recyclerview.widget.RecyclerView r6 = r9.mRecyclerViews.get(r5)     \/\/ Catch: java.lang.Throwable \-\> L57\l}"];
subgraph cluster_IfRegion_1982877402 {
label = "IF [B:10:0x002c] THEN: R(1:13) ELSE: R(0)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002c|if (r6.getWindowVisibility() == 0) goto L12\l}"];
subgraph cluster_Region_377199201 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0036|r3 = java.lang.Math.max(r6.getDrawingTime(), r3)     \/\/ Catch: java.lang.Throwable \-\> L57\l}"];
}
subgraph cluster_Region_387225131 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x0037|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:13:0x0037\lPHI: r3 \l  PHI: (r3v2 'latestFrameVsyncMs' long) = (r3v1 'latestFrameVsyncMs' long), (r3v3 'latestFrameVsyncMs' long) binds: [B:28:0x0037, B:27:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|r5++\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x003a|int int r5 = (r3 \> 0L ? 1 : (r3 == 0L ? 0 : \-1))\l}"];
subgraph cluster_Region_1807819603 {
label = "R(2:(1:21)|(1:22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1012032419 {
label = "IF [B:15:0x003c] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003c|if (r5 == 0) goto L20\l}"];
subgraph cluster_Region_757264979 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0043|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_2114801470 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0044|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|long long r5 = java.util.concurrent.TimeUnit.MILLISECONDS.toNanos(r3) + r9.mFrameIntervalNs     \/\/ Catch: java.lang.Throwable \-\> L57\lprefetch(r5)     \/\/ Catch: java.lang.Throwable \-\> L57\l}"];
}
}
}
}
}
subgraph cluster_Region_2068606883 {
label = "R(3:26|27|28) | ExcHandler: all \-\> 0x0057\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0057|ExcHandler: all \-\> 0x0057\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|FINALLY_INSNS\l|r9.mPostTimeNs = 0L\landroidx.core.p003os.TraceCompat.endSection()\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|throw r2\l}"];
}
}
}
subgraph cluster_Region_2068606883 {
label = "R(3:26|27|28) | ExcHandler: all \-\> 0x0057\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0057|ExcHandler: all \-\> 0x0057\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|FINALLY_INSNS\l|r9.mPostTimeNs = 0L\landroidx.core.p003os.TraceCompat.endSection()\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|throw r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f|DONT_GENERATE\l|r9.mPostTimeNs = r0\landroidx.core.p003os.TraceCompat.endSection()\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0037|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0037|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x003a|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003e|DONT_GENERATE\l|r9.mPostTimeNs = r0\landroidx.core.p003os.TraceCompat.endSection()\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0050|DONT_GENERATE\l|r9.mPostTimeNs = r0\landroidx.core.p003os.TraceCompat.endSection()\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0056}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.GapWorker.run((r9v0 'this' androidx.recyclerview.widget.GapWorker A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lBACK_EDGE: B:13:0x0037 \-\> B:8:0x001e, CROSS_EDGE: B:10:0x002c \-\> B:13:0x0037, CROSS_EDGE: B:17:0x0043 \-\> B:1:?, CROSS_EDGE: B:20:0x0056 \-\> B:1:?, CROSS_EDGE: B:23:0x005d \-\> B:1:?, CROSS_EDGE: B:24:0x0002 \-\> B:21:0x0057\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lTYPE_VARS: EMPTY\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [403=4, 404=4]\}\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_0;Node_2 -> Node_24;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_26[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_28[style=dashed];
Node_12 -> Node_27;
Node_13 -> Node_8;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_0 -> Node_2;
Node_24 -> Node_3;
Node_24 -> Node_21;
Node_5 -> Node_6;
Node_11 -> Node_12;
Node_27 -> Node_13;
Node_28 -> Node_13;
Node_26 -> Node_14;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_25 -> Node_21;
}

