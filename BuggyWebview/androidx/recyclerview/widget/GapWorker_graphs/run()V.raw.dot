digraph "CFG forandroidx.recyclerview.widget.GapWorker.run()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:374)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|0x0002: CONST_STR  (r2 I:java.lang.String) =  \"RV Prefetch\" A[TRY_ENTER]\l0x0004: INVOKE  (r2 I:java.lang.String) type: STATIC call: androidx.core.os.TraceCompat.beginSection(java.lang.String):void A[Catch: all \-\> 0x0057, MD:(java.lang.String):void (m)]\l0x0007: IGET  (r2 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch: all \-\> 0x0057] (LINE:376)\l0x0009: INVOKE  (r2 I:boolean) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[Catch: all \-\> 0x0057, MD:():boolean (c), TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IPUT  (r0 I:long), (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mPostTimeNs long  (LINE:403)\l0x0011: INVOKE   type: STATIC call: androidx.core.os.TraceCompat.endSection():void A[MD:():void (m)] (LINE:404)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|RETURN\l|0x0014: RETURN    (LINE:378)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|TRY_ENTER\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|0x0015: IGET  (r2 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch: all \-\> 0x0057, TRY_ENTER] (LINE:383)\l0x0017: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[Catch: all \-\> 0x0057, MD:():int (c)]\l0x001b: CONST  (r3 I:??[long, double]) = (0 ??[long, double])  (LINE:384)\l0x001d: CONST  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:385)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lLOOP:0: B:8:0x001e\-\>B:13:0x0037\l|0x001e: IF  (r5 I:??[int, byte, short, char] A[D('i' int)]) \>= (r2 I:??[int, byte, short, char] A[D('size' int)])  \-\> B:26:0x003a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|TryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|0x0020: IGET  (r6 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList A[Catch: all \-\> 0x0057] (LINE:386)\l0x0022: INVOKE  (r6 I:java.lang.Object) = (r6 I:java.util.ArrayList), (r5 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[Catch: all \-\> 0x0057, MD:(int):E (c)]\l0x0026: CHECK_CAST (r6 I:androidx.recyclerview.widget.RecyclerView) = (androidx.recyclerview.widget.RecyclerView) (r6 I:??[OBJECT, ARRAY]) A[Catch: all \-\> 0x0057]\l0x0028: INVOKE  (r7 I:int) = (r6 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getWindowVisibility():int A[Catch: all \-\> 0x0057, MD:():int (s)] (LINE:387)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0037 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|0x002e: INVOKE  (r7 I:long) = (r6 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getDrawingTime():long A[Catch: all \-\> 0x0057, MD:():long (s)] (LINE:388)\l0x0032: INVOKE  (r7 I:long) = (r7 I:long), (r3 I:long A[D('latestFrameVsyncMs' long)]) type: STATIC call: java.lang.Math.max(long, long):long A[Catch: all \-\> 0x0057, MD:(long, long):long (c), TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: MOVE  (r3 I:??[long, double] A[D('latestFrameVsyncMs' long)]) = (r7 I:??[long, double]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0037|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:13:0x0037\l|0x0037: ARITH  (r5 I:int) = (r5 I:int A[D('i' int)]) + (1 int)  (LINE:385)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0037|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x003a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: CMP_L  (r5 I:int A[D('i' int)]) = (r3 I:long A[D('latestFrameVsyncMs' long)]), (r0 I:long)  (LINE:392)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0044 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|0x003e: IPUT  (r0 I:long), (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mPostTimeNs long  (LINE:403)\l0x0040: INVOKE   type: STATIC call: androidx.core.os.TraceCompat.endSection():void A[MD:():void (m)] (LINE:404)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|RETURN\l|0x0043: RETURN    (LINE:394)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lCatch: all \-\> 0x0057\l|0x0044: SGET  (r5 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.MILLISECONDS java.util.concurrent.TimeUnit A[Catch: all \-\> 0x0057, TRY_ENTER] (LINE:397)\l0x0046: INVOKE  (r5 I:long) = (r5 I:java.util.concurrent.TimeUnit), (r3 I:long A[D('latestFrameVsyncMs' long)]) type: VIRTUAL call: java.util.concurrent.TimeUnit.toNanos(long):long A[Catch: all \-\> 0x0057, MD:(long):long (c)]\l0x004a: IGET  (r7 I:long) = (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mFrameIntervalNs long A[Catch: all \-\> 0x0057]\l0x004c: ARITH  (r5 I:long) = (r5 I:long) + (r7 I:long) A[Catch: all \-\> 0x0057]\l0x004d: INVOKE  (r9 I:androidx.recyclerview.widget.GapWorker), (r5 I:long A[D('nextFrameNs' long)]) type: VIRTUAL call: androidx.recyclerview.widget.GapWorker.prefetch(long):void A[Catch: all \-\> 0x0057, MD:(long):void (m), TRY_LEAVE] (LINE:399)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: IPUT  (r0 I:long), (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mPostTimeNs long  (LINE:403)\l0x0052: INVOKE   type: STATIC call: androidx.core.os.TraceCompat.endSection():void A[MD:():void (m)] (LINE:404)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|RETURN\l|0x0056: RETURN    (LINE:406)\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|ExcHandler: all \-\> 0x0057\l|0x0057: MOVE_EXCEPTION  (r2 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x0057] (LINE:403)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|0x0058: IPUT  (r0 I:long), (r9 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mPostTimeNs long \l0x005a: INVOKE   type: STATIC call: androidx.core.os.TraceCompat.endSection():void A[MD:():void (m)] (LINE:404)\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: THROW  (r2 I:java.lang.Throwable)  (LINE:405)\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.GapWorker.run((r9 'this' I:androidx.recyclerview.widget.GapWorker A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lBACK_EDGE: B:13:0x0037 \-\> B:8:0x001e, CROSS_EDGE: B:10:0x002c \-\> B:13:0x0037, CROSS_EDGE: B:17:0x0043 \-\> B:1:?, CROSS_EDGE: B:20:0x0056 \-\> B:1:?, CROSS_EDGE: B:23:0x005d \-\> B:1:?, CROSS_EDGE: B:24:0x0002 \-\> B:21:0x0057\lDebug Info:\l  0x0028\-0x0037: r6 'view' Landroidx\/recyclerview\/widget\/RecyclerView;\l  0x001e\-0x003a: r5 'i' I\l  0x001b\-0x0050: r2 'size' I\l  0x001d\-0x0050: r3 'latestFrameVsyncMs' J\l  0x004d\-0x0050: r5 'nextFrameNs' J\lTryCatch #0 \{all \-\> 0x0057, blocks: (B:3:0x0002, B:7:0x0015, B:9:0x0020, B:11:0x002e, B:18:0x0044), top: B:24:0x0002 \}\lJadxCommentsAttr\{\l DEBUG: \l \-\> Don't trust debug lines info. Repeating lines: [403=4, 404=4]\}\lMETHOD_OVERRIDE: [ClspMth\{java.lang.Runnable.run():void\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_24;
Node_24 -> Node_3;
Node_24 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_26;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_28;
Node_11 -> Node_12;
Node_12 -> Node_27;
Node_27 -> Node_13;
Node_13 -> Node_8;
Node_28 -> Node_13;
Node_26 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_25 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_1;
}

