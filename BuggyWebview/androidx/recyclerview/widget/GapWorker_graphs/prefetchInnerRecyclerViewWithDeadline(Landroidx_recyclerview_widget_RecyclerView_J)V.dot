digraph "CFG forandroidx.recyclerview.widget.GapWorker.prefetchInnerRecyclerViewWithDeadline(Landroidx\/recyclerview\/widget\/RecyclerView;J)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 != null) goto L4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x0003}"];
Node_5 [shape=record,label="{5\:\ 0x0005|if (r4.mDataSetHasChangedAfterLayout == false) goto L9\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007}"];
Node_7 [shape=record,label="{7\:\ 0x000d|if (r4.mChildHelper.getUnfilteredChildCount() == 0) goto L9\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|r4.removeAndRecycleViews()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl r0 = r4.mPrefetchRegistry\lr0.collectPrefetchPositionsFromView(r4, true)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r0.mCount == 0) goto L11\l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|RETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x001c|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|TRY_ENTER\lTryCatch #0 \{all \-\> 0x003e, blocks: (B:11:0x001c, B:12:0x0029, B:14:0x002f), top: B:21:0x001c \}\lCatch: all \-\> 0x003e\l|androidx.core.p003os.TraceCompat.beginSection(\"RV Nested Prefetch\")     \/\/ Catch: java.lang.Throwable \-\> L3e\lr4.mState.prepareForNestedPrefetch(r4.mAdapter)     \/\/ Catch: java.lang.Throwable \-\> L3e\lr1 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|LOOP_START\lTryCatch #0 \{all \-\> 0x003e, blocks: (B:11:0x001c, B:12:0x0029, B:14:0x002f), top: B:21:0x001c \}\lLOOP:0: B:12:0x0029\-\>B:15:0x0037\lCatch: all \-\> 0x003e\lPHI: r1 \l  PHI: (r1v6 'i' int) = (r1v5 'i' int), (r1v7 'i' int) binds: [B:11:0x001c, B:15:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|if (r1 \>= (r0.mCount * 2)) goto L18\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|TRY_LEAVE\lTryCatch #0 \{all \-\> 0x003e, blocks: (B:11:0x001c, B:12:0x0029, B:14:0x002f), top: B:21:0x001c \}\lCatch: all \-\> 0x003e\l|r2 = r0.mPrefetchArray[r1]     \/\/ Catch: java.lang.Throwable \-\> L3e\lprefetchPositionWithDeadline(r4, r2, r5)     \/\/ Catch: java.lang.Throwable \-\> L3e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|LOOP_END\lLOOP:0: B:12:0x0029\-\>B:15:0x0037\l|int r1 = r1 + 2\l}"];
Node_23 [shape=record,label="{23\:\ 0x003a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|DONT_GENERATE\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|ExcHandler: all \-\> 0x003e\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|FINALLY_INSNS\l|androidx.core.p003os.TraceCompat.endSection()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|throw r1\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.GapWorker.prefetchInnerRecyclerViewWithDeadline((r3v0 'this' androidx.recyclerview.widget.GapWorker A[IMMUTABLE_TYPE, THIS]), (r4v0 'innerView' androidx.recyclerview.widget.RecyclerView A[D('innerView' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'deadlineNs' long A[D('deadlineNs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x0043 \-\> B:1:?, BACK_EDGE: B:15:0x0037 \-\> B:12:0x0029, CROSS_EDGE: B:16:0x003a \-\> B:20:0x0043, CROSS_EDGE: B:19:0x0042 \-\> B:1:?, CROSS_EDGE: B:21:0x001c \-\> B:17:0x003e, CROSS_EDGE: B:7:0x000d \-\> B:9:0x0012, CROSS_EDGE: B:5:0x0005 \-\> B:9:0x0012\lINLINE_NOT_NEEDED\lTryCatch #0 \{all \-\> 0x003e, blocks: (B:11:0x001c, B:12:0x0029, B:14:0x002f), top: B:21:0x001c \}\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_20;
Node_10 -> Node_21[style=dashed];
Node_20 -> Node_1;
Node_21 -> Node_11;
Node_21 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_22;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_12;
Node_23 -> Node_16;
Node_16 -> Node_24;
Node_24 -> Node_1;
Node_22 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_1;
}

