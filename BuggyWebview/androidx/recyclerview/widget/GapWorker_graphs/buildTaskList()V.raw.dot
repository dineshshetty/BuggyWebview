digraph "CFG forandroidx.recyclerview.widget.GapWorker.buildTaskList()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: IGET  (r0 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList  (LINE:217)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:218)\l0x0007: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:219)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lLOOP:0: B:3:0x0008\-\>B:8:0x0023\l|0x0008: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('viewCount' int)])  \-\> B:29:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IGET  (r4 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList  (LINE:220)\l0x000d: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.ArrayList), (r2 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0011: CHECK_CAST (r4 I:androidx.recyclerview.widget.RecyclerView) = (androidx.recyclerview.widget.RecyclerView) (r4 I:??[OBJECT, ARRAY]) \l0x0013: INVOKE  (r5 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getWindowVisibility():int A[MD:():int (s)] (LINE:221)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IGET  (r5 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl) = (r4 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) androidx.recyclerview.widget.RecyclerView.mPrefetchRegistry androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl  (LINE:222)\l0x001b: INVOKE  \l  (r5 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)\l  (r4 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)])\l  (r3 I:boolean)\l type: VIRTUAL call: androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView, boolean):void A[MD:(androidx.recyclerview.widget.RecyclerView, boolean):void (m)]\l0x001e: IGET  (r3 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl) = (r4 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) androidx.recyclerview.widget.RecyclerView.mPrefetchRegistry androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl  (LINE:223)\l0x0020: IGET  (r3 I:int) = (r3 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl) androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mCount int \l0x0022: ARITH  (r1 I:int) = (r1 I:int A[D('totalTaskCount' int)]) + (r3 I:int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0023|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:8:0x0023\l|0x0023: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:219)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0023|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0026|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IGET  (r2 I:java.util.ArrayList\<androidx.recyclerview.widget.GapWorker$Task\> A[D('i' int)]) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mTasks java.util.ArrayList  (LINE:228)\l0x0028: INVOKE  (r2 I:java.util.ArrayList), (r1 I:int A[D('totalTaskCount' int)]) type: VIRTUAL call: java.util.ArrayList.ensureCapacity(int):void A[MD:(int):void (c)]\l0x002b: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:229)\l0x002c: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:230)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|LOOP_START\lLOOP:1: B:10:0x002d\-\>B:26:0x008e\l|0x002d: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('viewCount' int)])  \-\> B:32:0x0091 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IGET  (r5 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mRecyclerViews java.util.ArrayList  (LINE:231)\l0x0031: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.ArrayList), (r4 I:int A[D('i' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0035: CHECK_CAST (r5 I:androidx.recyclerview.widget.RecyclerView) = (androidx.recyclerview.widget.RecyclerView) (r5 I:??[OBJECT, ARRAY]) \l0x0037: INVOKE  (r6 I:int) = (r5 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getWindowVisibility():int A[MD:():int (s)] (LINE:232)\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IGET  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl) = (r5 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)]) androidx.recyclerview.widget.RecyclerView.mPrefetchRegistry androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl  (LINE:237)\l0x0040: IGET  (r7 I:int) = \l  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl A[D('prefetchRegistry' androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)])\l androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mPrefetchDx int  (LINE:238)\l0x0042: INVOKE  (r7 I:int) = (r7 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0046: IGET  (r8 I:int) = \l  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl A[D('prefetchRegistry' androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)])\l androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mPrefetchDy int \l0x0048: INVOKE  (r8 I:int) = (r8 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:239)\l0x004c: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x004d: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:240)\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|LOOP_START\lLOOP:2: B:15:0x004e\-\>B:25:0x007a\l|0x004e: IGET  (r9 I:int) = \l  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl A[D('prefetchRegistry' androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)])\l androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mCount int \l0x0050: ARITH  (r9 I:int) = (r9 I:int) * (2 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: IF  (r8 I:??[int, byte, short, char] A[D('j' int)]) \>= (r9 I:??[int, byte, short, char])  \-\> B:33:0x008e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|0x0054: IGET  (r9 I:java.util.ArrayList\<androidx.recyclerview.widget.GapWorker$Task\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mTasks java.util.ArrayList  (LINE:242)\l0x0056: INVOKE  (r9 I:int) = (r9 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|0x005a: IF  (r2 I:??[int, byte, short, char] A[D('totalTaskIndex' int)]) \< (r9 I:??[int, byte, short, char])  \-\> B:20:0x0067 \l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|0x005c: NEW_INSTANCE  (r9 I:androidx.recyclerview.widget.GapWorker$Task) =  androidx.recyclerview.widget.GapWorker$Task  (LINE:243)\l0x005e: INVOKE  (r9 I:androidx.recyclerview.widget.GapWorker$Task) type: DIRECT call: androidx.recyclerview.widget.GapWorker.Task.\<init\>():void A[MD:():void (m)]\l0x0061: IGET  (r10 I:java.util.ArrayList\<androidx.recyclerview.widget.GapWorker$Task\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mTasks java.util.ArrayList  (LINE:244)\l0x0063: INVOKE  (r10 I:java.util.ArrayList), (r9 I:java.lang.Object A[D('task' androidx.recyclerview.widget.GapWorker$Task)]) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|0x006f: IGET  (r10 I:int[]) = \l  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl A[D('prefetchRegistry' androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)])\l androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mPrefetchArray int[]  (LINE:248)\l0x0071: ARITH  (r11 I:int) = (r8 I:int A[D('j' int)]) + (1 int) \l0x0073: AGET  (r10 I:??[int, float, short, byte, char]) = (r10 I:??[int, float][]), (r11 I:??[int, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0075|0x0075: IF  (r10 I:??[int, byte, short, char] A[D('distanceToItem' int)]) \> (r7 I:??[int, byte, short, char] A[D('viewVelocity' int)])  \-\> B:24:0x0079  (LINE:250)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|0x0077: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x007a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x007a|LOOP_END\lLOOP:2: B:15:0x004e\-\>B:25:0x007a\l|0x007a: IPUT  \l  (r11 I:boolean)\l  (r9 I:androidx.recyclerview.widget.GapWorker$Task A[D('task' androidx.recyclerview.widget.GapWorker$Task)])\l androidx.recyclerview.widget.GapWorker.Task.immediate boolean \l0x007c: IPUT  \l  (r7 I:int A[D('viewVelocity' int)])\l  (r9 I:androidx.recyclerview.widget.GapWorker$Task A[D('task' androidx.recyclerview.widget.GapWorker$Task)])\l androidx.recyclerview.widget.GapWorker.Task.viewVelocity int  (LINE:251)\l0x007e: IPUT  \l  (r10 I:int A[D('distanceToItem' int)])\l  (r9 I:androidx.recyclerview.widget.GapWorker$Task A[D('task' androidx.recyclerview.widget.GapWorker$Task)])\l androidx.recyclerview.widget.GapWorker.Task.distanceToItem int  (LINE:252)\l0x0080: IPUT  \l  (r5 I:androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView)])\l  (r9 I:androidx.recyclerview.widget.GapWorker$Task A[D('task' androidx.recyclerview.widget.GapWorker$Task)])\l androidx.recyclerview.widget.GapWorker.Task.view androidx.recyclerview.widget.RecyclerView  (LINE:253)\l0x0082: IGET  (r11 I:int[]) = \l  (r6 I:androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl A[D('prefetchRegistry' androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl)])\l androidx.recyclerview.widget.GapWorker.LayoutPrefetchRegistryImpl.mPrefetchArray int[]  (LINE:254)\l0x0084: AGET  (r11 I:??[int, float, short, byte, char]) = (r11 I:??[int, float][]), (r8 I:??[int, short, byte, char] A[D('j' int)]) \l0x0086: IPUT  \l  (r11 I:int)\l  (r9 I:androidx.recyclerview.widget.GapWorker$Task A[D('task' androidx.recyclerview.widget.GapWorker$Task)])\l androidx.recyclerview.widget.GapWorker.Task.position int \l0x0089: ARITH  (r2 I:int) = (r2 I:int A[D('totalTaskIndex' int)]) + (1 int) \l0x008b: ARITH  (r8 I:int) = (r8 I:int A[D('j' int)]) + (2 int)  (LINE:240)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|0x0079: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x007a|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0067|0x0067: IGET  (r9 I:java.util.ArrayList\<androidx.recyclerview.widget.GapWorker$Task\> A[D('task' androidx.recyclerview.widget.GapWorker$Task)]) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mTasks java.util.ArrayList  (LINE:246)\l0x0069: INVOKE  (r9 I:java.lang.Object) = (r9 I:java.util.ArrayList), (r2 I:int A[D('totalTaskIndex' int)]) type: VIRTUAL call: java.util.ArrayList.get(int):java.lang.Object A[MD:(int):E (c)]\l0x006d: CHECK_CAST (r9 I:androidx.recyclerview.widget.GapWorker$Task) = (androidx.recyclerview.widget.GapWorker$Task) (r9 I:??[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x008e|LOOP_END\lLOOP:1: B:10:0x002d\-\>B:26:0x008e\l|0x008e: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (1 int)  (LINE:230)\l}"];
Node_34 [shape=record,label="{34\:\ 0x008e|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0091|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|0x0091: IGET  (r3 I:java.util.ArrayList\<androidx.recyclerview.widget.GapWorker$Task\>) = (r12 I:androidx.recyclerview.widget.GapWorker) androidx.recyclerview.widget.GapWorker.mTasks java.util.ArrayList  (LINE:261)\l0x0093: SGET  (r4 I:java.util.Comparator\<androidx.recyclerview.widget.GapWorker$Task\>) =  androidx.recyclerview.widget.GapWorker.sTaskComparator java.util.Comparator \l0x0095: INVOKE  (r3 I:java.util.List), (r4 I:java.util.Comparator) type: STATIC call: java.util.Collections.sort(java.util.List, java.util.Comparator):void A[MD:\<T\>:(java.util.List\<T\>, java.util.Comparator\<? super T\>):void (c)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0098|RETURN\l|0x0098: RETURN    (LINE:262)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.GapWorker.buildTaskList((r12 'this' I:androidx.recyclerview.widget.GapWorker A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:8:0x0023 \-\> B:3:0x0008, CROSS_EDGE: B:6:0x0017 \-\> B:8:0x0023, BACK_EDGE: B:25:0x007a \-\> B:15:0x004e, CROSS_EDGE: B:24:0x0079 \-\> B:25:0x007a, CROSS_EDGE: B:20:0x0067 \-\> B:21:0x006f, BACK_EDGE: B:26:0x008e \-\> B:10:0x002d, CROSS_EDGE: B:12:0x003b \-\> B:26:0x008e\lDebug Info:\l  0x0013\-0x0023: r4 'view' Landroidx\/recyclerview\/widget\/RecyclerView;\l  0x0008\-0x0026: r2 'i' I\l  0x0061\-0x0067: r9 'task' Landroidx\/recyclerview\/widget\/GapWorker$Task;\l  0x006f\-0x0089: r9 'task' Landroidx\/recyclerview\/widget\/GapWorker$Task;\l  0x0075\-0x0089: r10 'distanceToItem' I\l  0x0037\-0x008e: r5 'view' Landroidx\/recyclerview\/widget\/RecyclerView;\l  0x0040\-0x008e: r6 'prefetchRegistry' Landroidx\/recyclerview\/widget\/GapWorker$LayoutPrefetchRegistryImpl;\l  0x004d\-0x008e: r7 'viewVelocity' I\l  0x004e\-0x008e: r8 'j' I\l  0x002d\-0x0091: r4 'i' I\l  0x0006\-0x0098: r0 'viewCount' I\l  0x0007\-0x0098: r1 'totalTaskCount' I\l  0x002c\-0x0098: r2 'totalTaskIndex' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_31;
Node_7 -> Node_30;
Node_30 -> Node_8;
Node_8 -> Node_3;
Node_31 -> Node_8;
Node_29 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_32;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_34[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_33;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_36;
Node_36 -> Node_25;
Node_25 -> Node_15;
Node_24 -> Node_35;
Node_35 -> Node_25;
Node_20 -> Node_21;
Node_33 -> Node_26;
Node_26 -> Node_10;
Node_34 -> Node_26;
Node_32 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_1;
}

