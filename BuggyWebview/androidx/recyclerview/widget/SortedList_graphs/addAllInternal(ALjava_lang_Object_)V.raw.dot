digraph "CFG forandroidx.recyclerview.widget.SortedList.addAllInternal([Ljava\/lang\/Object;)V" {
Node_11 [shape=record,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x0000|0x0000: ARRAY_LENGTH  (r0 I:int) = (r4 I:??[] A[D('newItems' T[])])  (LINE:252)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|0x0002: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:16:0x0005 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:253)\l}"];
Node_12 [shape=record,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0005|0x0005: INVOKE  (r0 I:int) = \l  (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l  (r4 I:java.lang.Object[] A[D('newItems' T[])])\l type: DIRECT call: androidx.recyclerview.widget.SortedList.sortAndDedup(java.lang.Object[]):int A[MD:(T[]):int (m)] (LINE:256)\l0x0009: IGET  (r1 I:int) = (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mSize int  (LINE:258)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0018 \l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: IPUT  \l  (r4 I:T[] A[D('newItems' T[])])\l  (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l androidx.recyclerview.widget.SortedList.mData java.lang.Object[]  (LINE:259)\l0x000f: IPUT  \l  (r0 I:int A[D('newSize' int)])\l  (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l androidx.recyclerview.widget.SortedList.mSize int  (LINE:260)\l0x0011: IGET  (r1 I:androidx.recyclerview.widget.SortedList$Callback) = (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:261)\l0x0013: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0014: INVOKE  (r1 I:androidx.recyclerview.widget.SortedList$Callback), (r2 I:int), (r0 I:int A[D('newSize' int)]) type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.onInserted(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN   A[SYNTHETIC] (LINE:265)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0018|0x0018: INVOKE  \l  (r3 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l  (r4 I:java.lang.Object[] A[D('newItems' T[])])\l  (r0 I:int A[D('newSize' int)])\l type: DIRECT call: androidx.recyclerview.widget.SortedList.merge(java.lang.Object[], int):void A[MD:(T[], int):void (m)] (LINE:263)\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN    (LINE:265)\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.SortedList.addAllInternal((r3 'this' I:androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r4 I:T[] A[D('newItems' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:20:0x001b \-\> B:12:?, CROSS_EDGE: B:19:0x0018 \-\> B:20:0x001b\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x001b: r0 'newSize' I\l  0x0000\-0x001b: r3 'this' Landroidx\/recyclerview\/widget\/SortedList;, signature: Landroidx\/recyclerview\/widget\/SortedList\<TT;\>;\l  0x0000\-0x001b: r4 'newItems' [Ljava\/lang\/Object;, signature: [TT;\lTYPE_VARS: [T]\lSIGNATURE: ([TT;)V\l}"];
MethodNode -> Node_11;Node_11 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_21;
Node_21 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_12;
}

