digraph "CFG forandroidx.recyclerview.widget.SortedList.sortAndDedup([Ljava\/lang\/Object;)I" {
subgraph cluster_Region_704226100 {
label = "R(1:(2:(1:3)|(3:5|(3:8|(2:10|(1:12)(2:(1:16)|17))(2:(1:20)|21)|14)|24)))";
node [shape=record,color=blue];
subgraph cluster_Region_2098629902 {
label = "R(2:(1:3)|(3:5|(3:8|(2:10|(1:12)(2:(1:16)|17))(2:(1:20)|21)|14)|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1649824516 {
label = "IF [B:30:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0001|if (r8.length == 0) goto L3\l}"];
subgraph cluster_Region_1132055387 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0003|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_822203902 {
label = "R(3:5|(3:8|(2:10|(1:12)(2:(1:16)|17))(2:(1:20)|21)|14)|24)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0005|java.util.Arrays.sort(r8, r7.mCallback)\lint r0 = 0\lint r1 = 1\lint r2 = 1\l}"];
subgraph cluster_LoopRegion_1294564713 {
label = "LOOP:0: (3:8|(2:10|(1:12)(2:(1:16)|17))(2:(1:20)|21)|14)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x000e|if (r2 \< r8.length) goto L8\l}"];
subgraph cluster_Region_176606235 {
label = "R(3:8|(2:10|(1:12)(2:(1:16)|17))(2:(1:20)|21)|14)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0010|T r3 = r8[r2]\lint int r4 = r7.mCallback.compare(r8[r0], r3)\l}"];
subgraph cluster_IfRegion_2098950776 {
label = "IF [B:37:0x001a] THEN: R(2:10|(1:12)(2:(1:16)|17)) ELSE: R(2:(1:20)|21)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x001a|if (r4 == 0) goto L10\l}"];
subgraph cluster_Region_1965940817 {
label = "R(2:10|(1:12)(2:(1:16)|17))";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x001c|int int r5 = findSameItem(r3, r8, r0, r1)\l}"];
subgraph cluster_IfRegion_464260531 {
label = "IF [B:39:0x0021] THEN: R(1:12) ELSE: R(2:(1:16)|17)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0021|if (r5 != (\-1)) goto L12\l}"];
subgraph cluster_Region_1443421005 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0023|r8[r5] = r3\l}"];
}
subgraph cluster_Region_1253860655 {
label = "R(2:(1:16)|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_851984722 {
label = "IF [B:41:0x0026] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0026|if (r1 != r2) goto L16\l}"];
subgraph cluster_Region_236102916 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0028|r8[r1] = r3\l}"];
}
}
Node_43 [shape=record,label="{43\:\ 0x002a|r1++\l}"];
}
}
}
subgraph cluster_Region_2134964619 {
label = "R(2:(1:20)|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_338162687 {
label = "IF [B:45:0x002d] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x002d|if (r1 != r2) goto L20\l}"];
subgraph cluster_Region_1025206601 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x002f|r8[r1] = r3\l}"];
}
}
Node_47 [shape=record,label="{47\:\ 0x0031|r0 = r1\lr1++\l}"];
}
}
Node_48 [shape=record,label="{48\:\ 0x0035|LOOP_END\lLOOP:0: B:34:0x000d\-\>B:48:0x0035\lPHI: r0 r1 \l  PHI: (r0v5 'rangeStart' int) = (r0v4 'rangeStart' int), (r0v3 'rangeStart' int), (r0v3 'rangeStart' int) binds: [B:51:0x0035, B:52:0x0035, B:53:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'rangeEnd' int) = (r1v2 'rangeEnd' int), (r1v4 'rangeEnd' int), (r1v1 'rangeEnd' int) binds: [B:51:0x0035, B:52:0x0035, B:53:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r2++\l}"];
}
}
Node_49 [shape=record,label="{49\:\ 0x0038|RETURN\l|return r1\l}"];
}
}
}
Node_27 [shape=record,color=red,label="{27\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0000}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x000d|LOOP_START\lLOOP:0: B:34:0x000d\-\>B:48:0x0035\lPHI: r0 r1 r2 \l  PHI: (r0v3 'rangeStart' int) = (r0v2 'rangeStart' int), (r0v5 'rangeStart' int) binds: [B:33:0x0005, B:48:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'rangeEnd' int) = (r1v0 'rangeEnd' int), (r1v3 'rangeEnd' int) binds: [B:33:0x0005, B:48:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:33:0x0005, B:48:0x0035] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0035|SYNTHETIC\l}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x0035|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0035|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.SortedList.sortAndDedup((r7v0 'this' androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r8v0 'items' T[] A[D('items' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x0035 \-\> B:34:0x000d, CROSS_EDGE: B:43:0x002a \-\> B:48:0x0035, CROSS_EDGE: B:41:0x0026 \-\> B:43:0x002a, CROSS_EDGE: B:47:0x0031 \-\> B:48:0x0035, CROSS_EDGE: B:45:0x002d \-\> B:47:0x0031, CROSS_EDGE: B:49:0x0038 \-\> B:28:?\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ([TT;)I\l}"];
MethodNode -> Node_27;Node_30 -> Node_31;
Node_30 -> Node_33[style=dashed];
Node_31 -> Node_28;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_35 -> Node_50[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_45[style=dashed];
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_41[style=dashed];
Node_40 -> Node_53;
Node_41 -> Node_42;
Node_41 -> Node_43[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_52;
Node_45 -> Node_46;
Node_45 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_47 -> Node_51;
Node_48 -> Node_34;
Node_49 -> Node_28;
Node_27 -> Node_29;
Node_29 -> Node_30;
Node_34 -> Node_35;
Node_53 -> Node_48;
Node_52 -> Node_48;
Node_51 -> Node_48;
Node_50 -> Node_49;
}

