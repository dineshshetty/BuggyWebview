digraph "CFG forandroidx.recyclerview.widget.SortedList.beginBatchedUpdates()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) type: DIRECT call: androidx.recyclerview.widget.SortedList.throwIfInMutationOperation():void A[MD:():void (m)] (LINE:518)\l0x0003: IGET  (r0 I:androidx.recyclerview.widget.SortedList$Callback) = (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:519)\l0x0005: INSTANCE_OF  (r1 I:boolean) = (r0 I:??[OBJECT, ARRAY]) androidx.recyclerview.widget.SortedList$BatchedCallback \l}"];
Node_13 [shape=record,label="{13\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x000a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0009|RETURN\l|0x0009: RETURN    (LINE:520)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|0x000a: IGET  (r1 I:androidx.recyclerview.widget.SortedList$BatchedCallback) = (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mBatchedCallback androidx.recyclerview.widget.SortedList$BatchedCallback  (LINE:522)\l}"];
Node_16 [shape=record,label="{16\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0015 \l}"];
Node_17 [shape=record,label="{17\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:androidx.recyclerview.widget.SortedList$BatchedCallback) =  androidx.recyclerview.widget.SortedList$BatchedCallback  (LINE:523)\l0x0010: INVOKE  (r1 I:androidx.recyclerview.widget.SortedList$BatchedCallback), (r0 I:androidx.recyclerview.widget.SortedList$Callback) type: DIRECT call: androidx.recyclerview.widget.SortedList.BatchedCallback.\<init\>(androidx.recyclerview.widget.SortedList$Callback):void A[MD:(androidx.recyclerview.widget.SortedList$Callback\<T2\>):void (m)]\l0x0013: IPUT  \l  (r1 I:androidx.recyclerview.widget.SortedList$BatchedCallback)\l  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l androidx.recyclerview.widget.SortedList.mBatchedCallback androidx.recyclerview.widget.SortedList$BatchedCallback \l}"];
Node_18 [shape=record,label="{18\:\ 0x0015|0x0015: IGET  (r0 I:androidx.recyclerview.widget.SortedList$BatchedCallback) = (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mBatchedCallback androidx.recyclerview.widget.SortedList$BatchedCallback  (LINE:525)\l0x0017: IPUT  \l  (r0 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback \l}"];
Node_19 [shape=record,label="{19\:\ 0x0019|RETURN\l|0x0019: RETURN    (LINE:526)\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.SortedList.beginBatchedUpdates((r2 'this' I:androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0019 \-\> B:11:?, CROSS_EDGE: B:16:0x000c \-\> B:18:0x0015\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0000\-0x0019: r2 'this' Landroidx\/recyclerview\/widget\/SortedList;, signature: Landroidx\/recyclerview\/widget\/SortedList\<TT;\>;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

