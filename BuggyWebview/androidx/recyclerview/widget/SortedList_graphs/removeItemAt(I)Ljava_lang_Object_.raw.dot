digraph "CFG forandroidx.recyclerview.widget.SortedList.removeItemAt(I)Ljava\/lang\/Object;" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) type: DIRECT call: androidx.recyclerview.widget.SortedList.throwIfInMutationOperation():void A[MD:():void (m)] (LINE:586)\l0x0003: INVOKE  (r0 I:java.lang.Object) = \l  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l  (r3 I:int A[D('index' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.get(int):java.lang.Object A[MD:(int):T throws java.lang.IndexOutOfBoundsException (m)] (LINE:587)\l0x0007: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:588)\l0x0008: INVOKE  \l  (r2 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l  (r3 I:int A[D('index' int)])\l  (r1 I:boolean)\l type: DIRECT call: androidx.recyclerview.widget.SortedList.removeItemAtIndex(int, boolean):void A[MD:(int, boolean):void (m)]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|RETURN\l|0x000b: RETURN  (r0 I:T A[D('item' T)])  (LINE:589)\l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public T androidx.recyclerview.widget.SortedList.removeItemAt((r2 'this' I:androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0007\-0x000b: r0 'item' Ljava\/lang\/Object;, signature: TT;\l  0x0000\-0x000b: r2 'this' Landroidx\/recyclerview\/widget\/SortedList;, signature: Landroidx\/recyclerview\/widget\/SortedList\<TT;\>;\l  \-1 \-0x000b: r3 'index' I\lTYPE_VARS: [T]\lSIGNATURE: (I)TT;\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

