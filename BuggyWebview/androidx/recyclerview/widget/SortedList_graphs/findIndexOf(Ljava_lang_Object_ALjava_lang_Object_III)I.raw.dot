digraph "CFG forandroidx.recyclerview.widget.SortedList.findIndexOf(Ljava\/lang\/Object;[Ljava\/lang\/Object;III)I" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|LOOP_START\lLOOP:0: B:34:0x0000\-\>B:59:0x0000\l|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:743)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|0x0002: IF  (r9 I:??[int, byte, short, char] A[D('left' int)]) \>= (r10 I:??[int, byte, short, char] A[D('right' int)])  \-\> B:56:0x002f \l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|0x0004: ARITH  (r2 I:int) = (r9 I:int A[D('left' int)]) + (r10 I:int A[D('right' int)])  (LINE:744)\l0x0006: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0008: AGET  (r3 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY][] A[D('mData' T[])]), (r2 I:??[int, short, byte, char] A[D('middle' int)])  (LINE:745)\l0x000a: IGET  (r4 I:androidx.recyclerview.widget.SortedList$Callback) = (r6 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:746)\l0x000c: INVOKE  (r4 I:int) = \l  (r4 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r3 I:java.lang.Object A[D('myItem' T)])\l  (r7 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.compare(java.lang.Object, java.lang.Object):int A[MD:(T2, T2):int (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|0x0010: IF  (r4 I:??[int, byte, short, char] A[D('cmp' int)]) \>= (0 ??[int, byte, short, char])  \-\> B:55:0x0015  (LINE:747)\l}"];
Node_55 [shape=record,label="{55\:\ 0x0015|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0015|0x0015: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cmp' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x002d  (LINE:749)\l}"];
Node_50 [shape=record,label="{50\:\ 0x002d|0x002d: MOVE  (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('right' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('middle' int)])  (LINE:761)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:34:0x0000\-\>B:59:0x0000\l}"];
Node_58 [shape=record,label="{58\:\ 0x0017|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0017|0x0017: IGET  (r5 I:androidx.recyclerview.widget.SortedList$Callback) = (r6 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:750)\l0x0019: INVOKE  (r5 I:boolean) = \l  (r5 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r3 I:java.lang.Object A[D('myItem' T)])\l  (r7 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.areItemsTheSame(java.lang.Object, java.lang.Object):boolean A[MD:(T2, T2):boolean (m)]\l}"];
Node_41 [shape=record,label="{41\:\ 0x001d|0x001d: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0020 \l}"];
Node_42 [shape=record,label="{42\:\ 0x001f|RETURN\l|0x001f: RETURN  (r2 I:int A[D('middle' int)])  (LINE:751)\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|0x0020: INVOKE  (r5 I:int) = \l  (r6 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)])\l  (r7 I:java.lang.Object A[D('item' T)])\l  (r2 I:int A[D('middle' int)])\l  (r9 I:int A[D('left' int)])\l  (r10 I:int A[D('right' int)])\l type: DIRECT call: androidx.recyclerview.widget.SortedList.linearEqualitySearch(java.lang.Object, int, int, int):int A[MD:(T, int, int, int):int (m)] (LINE:753)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|0x0024: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reason' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x002c  (LINE:754)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|0x0026: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exact' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x002a  (LINE:755)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0028|0x0028: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('middle' int)]) \l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|0x002b: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a|0x002a: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('exact' int)]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x002b|RETURN\lORIG_RETURN\l|0x002b: RETURN  (r0 I:int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|RETURN\l|0x002c: RETURN  (r5 I:int A[D('exact' int)])  (LINE:757)\l}"];
Node_57 [shape=record,label="{57\:\ 0x0012|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|0x0012: ARITH  (r9 I:int A[D('left' int)]) = (r2 I:int A[D('middle' int)]) + (1 int)  (LINE:748)\l}"];
Node_61 [shape=record,label="{61\:\ 0x0000|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|0x002f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reason' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:?  (LINE:764)\l}"];
Node_53 [shape=record,label="{53\:\ 0x0031|0x0031: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('left' int)]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0032|RETURN\lORIG_RETURN\l|0x0032: RETURN  (r0 I:int) \l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|0x0032: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.SortedList.findIndexOf((r6 'this' I:androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r7 I:T A[D('item' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:T[] A[D('mData' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('reason' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x0012 \-\> B:34:0x0000, CROSS_EDGE: B:48:0x002b \-\> B:33:?, CROSS_EDGE: B:47:0x002a \-\> B:48:0x002b, CROSS_EDGE: B:49:0x002c \-\> B:33:?, BACK_EDGE: B:50:0x002d \-\> B:34:0x0000, CROSS_EDGE: B:54:0x0032 \-\> B:33:?, CROSS_EDGE: B:52:0x002f \-\> B:54:0x0032\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0024\-0x002d: r5 'exact' I\l  0x0008\-0x002e: r2 'middle' I\l  0x000a\-0x002e: r3 'myItem' Ljava\/lang\/Object;, signature: TT;\l  0x0010\-0x002e: r4 'cmp' I\l  0x0000\-0x0032: r6 'this' Landroidx\/recyclerview\/widget\/SortedList;, signature: Landroidx\/recyclerview\/widget\/SortedList\<TT;\>;\l  0x0000\-0x0032: r7 'item' Ljava\/lang\/Object;, signature: TT;\l  0x0000\-0x0032: r8 'mData' [Ljava\/lang\/Object;, signature: [TT;\l  \-1 \-0x0032: r9 'left' I\l  \-1 \-0x0032: r10 'right' I\l  \-1 \-0x0032: r11 'reason' I\lTYPE_VARS: [T]\lSIGNATURE: (TT;[TT;III)I\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_56;
Node_36 -> Node_37;
Node_37 -> Node_55;
Node_37 -> Node_57[style=dashed];
Node_55 -> Node_39;
Node_39 -> Node_50;
Node_39 -> Node_58[style=dashed];
Node_50 -> Node_60;
Node_60 -> Node_59;
Node_59 -> Node_34;
Node_58 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_33;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_49;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_62;
Node_62 -> Node_33;
Node_47 -> Node_48;
Node_48 -> Node_33;
Node_49 -> Node_33;
Node_57 -> Node_38;
Node_38 -> Node_61;
Node_61 -> Node_59;
Node_56 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_63;
Node_53 -> Node_54;
Node_54 -> Node_33;
Node_63 -> Node_33;
}

