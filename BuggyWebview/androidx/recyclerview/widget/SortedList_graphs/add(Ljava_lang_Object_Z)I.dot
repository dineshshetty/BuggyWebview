digraph "CFG forandroidx.recyclerview.widget.SortedList.add(Ljava\/lang\/Object;Z)I" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|int r0 = findIndexOf(r7, r6.mData, 0, r6.mSize, 1)\l}"];
Node_22 [shape=record,label="{22\:\ 0x000e|if (r0 != (\-1)) goto L9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0010|r0 = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x003d|PHI: r0 \l  PHI: (r0v2 'index' int) = (r0v1 'index' int), (r0v1 'index' int), (r0v3 'index' int) binds: [B:25:0x0014, B:27:0x0020, B:23:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|addToData(r0, r7)\l}"];
Node_35 [shape=record,label="{35\:\ 0x0040|if (r8 == false) goto L7\l}"];
Node_36 [shape=record,label="{36\:\ 0x0042|r6.mCallback.onInserted(r0, 1)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0047|RETURN\l|return r0\l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0012}"];
Node_25 [shape=record,label="{25\:\ 0x0014|if (r0 \>= r6.mSize) goto L4\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|r2 = r6.mData[r0]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|if (r6.mCallback.areItemsTheSame(r2, r7) == false) goto L4\l}"];
Node_28 [shape=record,label="{28\:\ 0x0022}"];
Node_29 [shape=record,label="{29\:\ 0x0028|if (r6.mCallback.areContentsTheSame(r2, r7) == false) goto L17\l}"];
Node_30 [shape=record,label="{30\:\ 0x002a|r6.mData[r0] = r7\l}"];
Node_31 [shape=record,label="{31\:\ 0x002e|RETURN\l|return r0\l}"];
Node_32 [shape=record,label="{32\:\ 0x002f|r6.mData[r0] = r7\landroidx.recyclerview.widget.SortedList$Callback r3 = r6.mCallback\lr3.onChanged(r0, 1, r3.getChangePayload(r2, r7))\l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.SortedList.add((r6v0 'this' androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r7v0 'item' T A[D('item' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'notify' boolean A[D('notify' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:35:0x0040 \-\> B:37:0x0047, CROSS_EDGE: B:31:0x002e \-\> B:20:?, CROSS_EDGE: B:33:0x003c \-\> B:20:?, CROSS_EDGE: B:27:0x0020 \-\> B:34:0x003d, CROSS_EDGE: B:25:0x0014 \-\> B:34:0x003d\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;Z)I\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_34;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_20;
}

