digraph "CFG forandroidx.recyclerview.widget.SortedList.replaceAllInternal([Ljava\/lang\/Object;)V" {
subgraph cluster_Region_776345921 {
label = "R(6:1|(1:3)|4|(2:5|(2:(1:9)|(2:16|(2:46|1)(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))))))|10|(1:(1:12)))";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0000|boolean r0 = !(r9.mCallback instanceof androidx.recyclerview.widget.SortedList.BatchedCallback)\l}"];
subgraph cluster_IfRegion_1095999052 {
label = "IF [B:51:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0006|if (r0 != false) goto L3\l}"];
subgraph cluster_Region_927502717 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0008|beginBatchedUpdates()\l}"];
}
}
Node_53 [shape=record,label="{53\:\ 0x000b|r9.mOldDataStart = 0\lr9.mOldDataSize = r9.mSize\lr9.mOldData = r9.mData\lr9.mNewDataStart = 0\lint int r2 = sortAndDedup(r10)\lr9.mData = (T[]) ((java.lang.Object[]) java.lang.reflect.Array.newInstance((java.lang.Class\<?\>) r9.mTClass, r2))\l}"];
subgraph cluster_LoopRegion_631557991 {
label = "LOOP:0: (2:5|(2:(1:9)|(2:16|(2:46|1)(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1070272534 {
label = "R(2:5|(2:(1:9)|(2:16|(2:46|1)(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))))))";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x0028|LOOP_START\lLOOP:0: B:54:0x0028\-\>B:89:0x0028\l|int int r3 = r9.mNewDataStart\l}"];
subgraph cluster_Region_286584199 {
label = "R(2:(1:9)|(2:16|(2:46|1)(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_170167221 {
label = "IF [B:55:0x002a, B:57:0x0030] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x002a|if (r3 \>= r2) goto L7\l}"];
Node_57 [shape=record,label="{57\:\ 0x0030|ADDED_TO_REGION\l|if (r9.mOldDataStart \>= r9.mOldDataSize) goto L9\l}"];
subgraph cluster_Region_141018791 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x005f|SYNTHETIC\lEDGE_INSN: B:79:0x005f\-\>B:63:0x005f ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_783720757 {
label = "R(2:16|(2:46|1)(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))))";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0032|int int r4 = r9.mOldDataStart\lint int r5 = r9.mOldDataSize\l}"];
subgraph cluster_IfRegion_1226465109 {
label = "IF [B:59:0x0036] THEN: R(2:46|1) ELSE: R(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0))))))";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x0036|if (r4 \>= r5) goto L45\l}"];
subgraph cluster_Region_339089313 {
label = "R(2:46|1)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0038|EDGE_INSN: B:60:0x0038\-\>B:63:0x005f ?: BREAK  \l|int int r1 = r9.mNewDataStart\lint int r3 = r2 \- r3\ljava.lang.System.arraycopy(r10, r1, r9.mData, r1, r3)\lr9.mNewDataStart += r3\lr9.mSize += r3\lr9.mCallback.onInserted(r1, r3)\l}"];
Node_InsnContainer_2077715887 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_2022398533 {
label = "R(1:(2:44|1)(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1229609621 {
label = "IF [B:61:0x0051] THEN: R(2:44|1) ELSE: R(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0051|if (r3 \>= r2) goto L43\l}"];
subgraph cluster_Region_295460217 {
label = "R(2:44|1)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0053|EDGE_INSN: B:62:0x0053\-\>B:63:0x005f ?: BREAK  \l|int int r5 = r5 \- r4\lr9.mSize \-= r5\lr9.mCallback.onRemoved(r3, r5)\l}"];
Node_InsnContainer_1321596934 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_892591092 {
label = "R(2:19|(1:41)(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))))";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x0068|T r4 = r9.mOldData[r4]\lT r3 = r10[r3]\lint int r5 = r9.mCallback.compare(r4, r3)\l}"];
subgraph cluster_IfRegion_1615452653 {
label = "IF [B:68:0x0074] THEN: R(1:41) ELSE: R(1:(1:38)(1:(1:35)(2:27|(1:30)(0))))";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0074|if (r5 \< 0) goto L40\l}"];
subgraph cluster_Region_2015452551 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0076|replaceAllRemove()\l}"];
}
subgraph cluster_Region_953937209 {
label = "R(1:(1:38)(1:(1:35)(2:27|(1:30)(0)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1172275262 {
label = "IF [B:70:0x007a] THEN: R(1:38) ELSE: R(1:(1:35)(2:27|(1:30)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x007a|if (r5 \> 0) goto L37\l}"];
subgraph cluster_Region_285640380 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x007c|replaceAllInsert(r3)\l}"];
}
subgraph cluster_Region_446746901 {
label = "R(1:(1:35)(2:27|(1:30)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_975090842 {
label = "IF [B:73:0x0086] THEN: R(1:35) ELSE: R(2:27|(1:30)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0086|if (r9.mCallback.areItemsTheSame(r4, r3) == false) goto L34\l}"];
subgraph cluster_Region_1584613986 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x0088|replaceAllRemove()\lreplaceAllInsert(r3)\l}"];
}
subgraph cluster_Region_105918062 {
label = "R(2:27|(1:30)(0))";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x008f|T[] T[] r6 = r9.mData\lint int r7 = r9.mNewDataStart\lr6[r7] = r3\lr9.mOldDataStart++\lr9.mNewDataStart = r7 + 1\l}"];
subgraph cluster_IfRegion_299443286 {
label = "IF [B:76:0x00a3] THEN: R(1:30) ELSE: R(0)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x00a3|if (r9.mCallback.areContentsTheSame(r4, r3) == false) goto L29\l}"];
subgraph cluster_Region_176001105 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x00a5|androidx.recyclerview.widget.SortedList$Callback androidx.recyclerview.widget.SortedList.Callback r6 = r9.mCallback\lr6.onChanged(r9.mNewDataStart \- 1, 1, r6.getChangePayload(r4, r3))\l}"];
}
subgraph cluster_Region_2076446607 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_63 [shape=record,label="{63\:\ 0x005f|EDGE_INSN: B:62:0x0053\-\>B:63:0x005f ?: BREAK  , EDGE_INSN: B:79:0x005f\-\>B:63:0x005f ?: BREAK  , EDGE_INSN: B:60:0x0038\-\>B:63:0x005f ?: BREAK  \l|r9.mOldData = null\l}"];
subgraph cluster_Region_167491605 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1750320286 {
label = "IF [B:64:0x0062] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_64 [shape=record,label="{64\:\ 0x0062|if (r0 != false) goto L12\l}"];
subgraph cluster_Region_1848520246 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0064|endBatchedUpdates()\l}"];
}
}
}
}
Node_48 [shape=record,color=red,label="{48\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x002c}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0067|ORIG_RETURN\l}"];
Node_49 [shape=record,color=red,label="{49\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_95 [shape=record,color=red,label="{95\:\ ?|SYNTHETIC\l}"];
Node_81 [shape=record,color=red,label="{81\:\ 0x007a|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0080|SYNTHETIC\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0080}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x008f|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x00a5|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0028|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0028|LOOP_END\lSYNTHETIC\lLOOP:0: B:54:0x0028\-\>B:89:0x0028\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0028|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x0088|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x0028|SYNTHETIC\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x007c|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x0028|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0076|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x0028|SYNTHETIC\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0053|SYNTHETIC\l}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.SortedList.replaceAllInternal((r9v0 'this' androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r10v0 'newData' T[] A[D('newData' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:64:0x0062 \-\> B:66:0x0067, CROSS_EDGE: B:62:0x0053 \-\> B:63:0x005f, BACK_EDGE: B:69:0x0076 \-\> B:54:0x0028, BACK_EDGE: B:71:0x007c \-\> B:54:0x0028, BACK_EDGE: B:74:0x0088 \-\> B:54:0x0028, BACK_EDGE: B:77:0x00a5 \-\> B:54:0x0028, BACK_EDGE: B:76:0x00a3 \-\> B:54:0x0028, CROSS_EDGE: B:57:0x0030 \-\> B:63:0x005f, CROSS_EDGE: B:55:0x002a \-\> B:58:0x0032, CROSS_EDGE: B:51:0x0006 \-\> B:53:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: ([TT;)V\l}"];
MethodNode -> Node_48;Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_53[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_58[style=dashed];
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_79;
Node_79 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_61[style=dashed];
Node_59 -> Node_82;
Node_60 -> Node_63;
Node_61 -> Node_67[style=dashed];
Node_61 -> Node_80;
Node_62 -> Node_63;
Node_67 -> Node_68;
Node_68 -> Node_81[style=dashed];
Node_68 -> Node_83;
Node_69 -> Node_94;
Node_70 -> Node_84[style=dashed];
Node_70 -> Node_86;
Node_71 -> Node_93;
Node_73 -> Node_85[style=dashed];
Node_73 -> Node_88;
Node_74 -> Node_92;
Node_75 -> Node_76;
Node_76 -> Node_87;
Node_76 -> Node_90[style=dashed];
Node_77 -> Node_91;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_64 -> Node_95[style=dashed];
Node_65 -> Node_66;
Node_48 -> Node_50;
Node_56 -> Node_57;
Node_66 -> Node_49;
Node_95 -> Node_49;
Node_81 -> Node_70;
Node_84 -> Node_72;
Node_72 -> Node_73;
Node_85 -> Node_75;
Node_87 -> Node_77;
Node_91 -> Node_89;
Node_89 -> Node_54;
Node_90 -> Node_89;
Node_88 -> Node_74;
Node_92 -> Node_89;
Node_86 -> Node_71;
Node_93 -> Node_89;
Node_83 -> Node_69;
Node_94 -> Node_89;
Node_80 -> Node_62;
Node_82 -> Node_60;
}

