digraph "CFG forandroidx.recyclerview.widget.SortedList.findIndexOf(Ljava\/lang\/Object;[Ljava\/lang\/Object;III)I" {
Node_32 [shape=record,label="{32\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x0000|LOOP_START\lLOOP:0: B:34:0x0000\-\>B:59:0x0000\lPHI: r9 r10 \l  PHI: (r9v1 'left' int) = (r9v0 'left' int), (r9v3 'left' int) binds: [B:32:?, B:59:0x0000] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'right' int) = (r10v0 'right' int), (r10v2 'right' int) binds: [B:32:?, B:59:0x0000] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0002|if (r9 \>= r10) goto L26\l}"];
Node_36 [shape=record,label="{36\:\ 0x0004|int r2 = (r9 + r10) \/ 2\lr3 = r8[r2]\lint r4 = r6.mCallback.compare(r3, r7)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0010|if (r4 \>= 0) goto L5\l}"];
Node_55 [shape=record,label="{55\:\ 0x0015|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0015|if (r4 != 0) goto L7\l}"];
Node_50 [shape=record,label="{50\:\ 0x002d|r10 = r2\l}"];
Node_60 [shape=record,label="{60\:\ 0x0000|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:34:0x0000\-\>B:59:0x0000\lPHI: r9 r10 \l  PHI: (r9v3 'left' int) = (r9v2 'left' int), (r9v1 'left' int) binds: [B:61:0x0000, B:60:0x0000] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 'right' int) = (r10v1 'right' int), (r10v3 'right' int) binds: [B:61:0x0000, B:60:0x0000] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0017|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0017}"];
Node_41 [shape=record,label="{41\:\ 0x001d|if (r6.mCallback.areItemsTheSame(r3, r7) == false) goto L15\l}"];
Node_42 [shape=record,label="{42\:\ 0x001f|RETURN\l|return r2\l}"];
Node_33 [shape=record,label="{33\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0020|int r5 = linearEqualitySearch(r7, r2, r9, r10)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0024|if (r11 != 1) goto L22\l}"];
Node_45 [shape=record,label="{45\:\ 0x0026|if (r5 != (\-1)) goto L20\l}"];
Node_46 [shape=record,label="{46\:\ 0x0028}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_47 [shape=record,label="{47\:\ 0x002a}"];
Node_48 [shape=record,label="{48\:\ 0x002b|RETURN\lORIG_RETURN\l|return r5\l}"];
Node_49 [shape=record,label="{49\:\ 0x002c|RETURN\l|return r5\l}"];
Node_57 [shape=record,label="{57\:\ 0x0012|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0012|int r9 = r2 + 1\l}"];
Node_61 [shape=record,label="{61\:\ 0x0000|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x002f|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x002f|if (r11 != 1) goto L30\l}"];
Node_53 [shape=record,label="{53\:\ 0x0031}"];
Node_54 [shape=record,label="{54\:\ 0x0032|RETURN\lORIG_RETURN\l|return r9\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.SortedList.findIndexOf((r6v0 'this' androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r7v0 'item' T A[D('item' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'mData' T[] A[D('mData' T[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'left' int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'right' int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'reason' int A[D('reason' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:38:0x0012 \-\> B:34:0x0000, CROSS_EDGE: B:48:0x002b \-\> B:33:?, CROSS_EDGE: B:47:0x002a \-\> B:48:0x002b, CROSS_EDGE: B:49:0x002c \-\> B:33:?, BACK_EDGE: B:50:0x002d \-\> B:34:0x0000, CROSS_EDGE: B:54:0x0032 \-\> B:33:?, CROSS_EDGE: B:52:0x002f \-\> B:54:0x0032\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\lSIGNATURE: (TT;[TT;III)I\l}"];
MethodNode -> Node_32;Node_32 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_56;
Node_36 -> Node_37;
Node_37 -> Node_55;
Node_37 -> Node_57[style=dashed];
Node_55 -> Node_39;
Node_39 -> Node_50;
Node_39 -> Node_58[style=dashed];
Node_50 -> Node_60;
Node_60 -> Node_59;
Node_59 -> Node_34;
Node_58 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_33;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_49;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_62;
Node_62 -> Node_33;
Node_47 -> Node_48;
Node_48 -> Node_33;
Node_49 -> Node_33;
Node_57 -> Node_38;
Node_38 -> Node_61;
Node_61 -> Node_59;
Node_56 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_63;
Node_53 -> Node_54;
Node_54 -> Node_33;
Node_63 -> Node_33;
}

