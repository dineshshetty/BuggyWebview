digraph "CFG forandroidx.recyclerview.widget.SortedList.linearEqualitySearch(Ljava\/lang\/Object;III)I" {
Node_29 [shape=record,label="{29\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0000|0x0000: ARITH  (r0 I:int) = (r6 I:int A[D('middle' int)]) + (\-1 int)  (LINE:769)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0002|LOOP_START\lLOOP:0: B:32:0x0002\-\>B:39:0x001a\l|0x0002: IF  (r0 I:??[int, byte, short, char] A[D('next' int)]) \< (r7 I:??[int, byte, short, char] A[D('left' int)])  \-\> B:51:0x001d \l}"];
Node_33 [shape=record,label="{33\:\ 0x0004|0x0004: IGET  (r1 I:T[]) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mData java.lang.Object[]  (LINE:770)\l0x0006: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('next' int)]) \l0x0008: IGET  (r2 I:androidx.recyclerview.widget.SortedList$Callback) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:771)\l0x000a: INVOKE  (r2 I:int) = \l  (r2 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r1 I:java.lang.Object A[D('nextItem' T)])\l  (r5 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.compare(java.lang.Object, java.lang.Object):int A[MD:(T2, T2):int (m)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x000e|0x000e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cmp' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0011  (LINE:772)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0011|0x0011: IGET  (r3 I:androidx.recyclerview.widget.SortedList$Callback) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:775)\l0x0013: INVOKE  (r3 I:boolean) = \l  (r3 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r1 I:java.lang.Object A[D('nextItem' T)])\l  (r5 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.areItemsTheSame(java.lang.Object, java.lang.Object):boolean A[MD:(T2, T2):boolean (m)]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0017|0x0017: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x001a \l}"];
Node_39 [shape=record,label="{39\:\ 0x001a|LOOP_END\lLOOP:0: B:32:0x0002\-\>B:39:0x001a\l|0x001a: ARITH  (r0 I:int) = (r0 I:int A[D('next' int)]) + (\-1 int)  (LINE:769)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0019|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0019|RETURN\l|0x0019: RETURN  (r0 I:int A[D('next' int)])  (LINE:776)\l}"];
Node_30 [shape=record,label="{30\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_53 [shape=record,label="{53\:\ 0x001d|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x001d|0x001d: ARITH  (r0 I:int A[D('next' int)]) = (r6 I:int A[D('middle' int)]) + (1 int)  (LINE:779)\l}"];
Node_41 [shape=record,label="{41\:\ 0x001f|LOOP_START\lLOOP:1: B:41:0x001f\-\>B:48:0x0037\l|0x001f: IF  (r0 I:??[int, byte, short, char] A[D('next' int)]) \>= (r8 I:??[int, byte, short, char] A[D('right' int)])  \-\> B:56:0x003a \l}"];
Node_42 [shape=record,label="{42\:\ 0x0021|0x0021: IGET  (r1 I:T[]) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mData java.lang.Object[]  (LINE:780)\l0x0023: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('next' int)]) \l0x0025: IGET  (r2 I:androidx.recyclerview.widget.SortedList$Callback) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:781)\l0x0027: INVOKE  (r2 I:int) = \l  (r2 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r1 I:java.lang.Object A[D('nextItem' T)])\l  (r5 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.compare(java.lang.Object, java.lang.Object):int A[MD:(T2, T2):int (m)]\l}"];
Node_43 [shape=record,label="{43\:\ 0x002b|0x002b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cmp' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x002e  (LINE:782)\l}"];
Node_45 [shape=record,label="{45\:\ 0x002e|0x002e: IGET  (r3 I:androidx.recyclerview.widget.SortedList$Callback) = (r4 I:androidx.recyclerview.widget.SortedList A[D('this' androidx.recyclerview.widget.SortedList\<T\>)]) androidx.recyclerview.widget.SortedList.mCallback androidx.recyclerview.widget.SortedList$Callback  (LINE:785)\l0x0030: INVOKE  (r3 I:boolean) = \l  (r3 I:androidx.recyclerview.widget.SortedList$Callback)\l  (r1 I:java.lang.Object A[D('nextItem' T)])\l  (r5 I:java.lang.Object A[D('item' T)])\l type: VIRTUAL call: androidx.recyclerview.widget.SortedList.Callback.areItemsTheSame(java.lang.Object, java.lang.Object):boolean A[MD:(T2, T2):boolean (m)]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0034|0x0034: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0037 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0037|LOOP_END\lLOOP:1: B:41:0x001f\-\>B:48:0x0037\l|0x0037: ARITH  (r0 I:int) = (r0 I:int A[D('next' int)]) + (1 int)  (LINE:779)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0036|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0036|RETURN\l|0x0036: RETURN  (r0 I:int A[D('next' int)])  (LINE:786)\l}"];
Node_55 [shape=record,label="{55\:\ 0x003a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x003a|RETURN\lORIG_RETURN\l|0x003a: CONST  (r0 I:??[int, float, short, byte, char] A[D('next' int)]) = (\-1 ??[int, float, short, byte, char])  (LINE:789)\l0x003b: RETURN  (r0 I:int) \l}"];
Node_56 [shape=record,label="{56\:\ 0x003a|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|0x003a: CONST  (r0 I:??[int, float, short, byte, char] A[D('next' int)]) = (\-1 ??[int, float, short, byte, char]) A[SYNTHETIC] (LINE:789)\l0x003b: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_51 [shape=record,label="{51\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.SortedList.linearEqualitySearch((r4 'this' I:androidx.recyclerview.widget.SortedList\<T\> A[D('this' androidx.recyclerview.widget.SortedList\<T\>), IMMUTABLE_TYPE, THIS]), (r5 I:T A[D('item' T), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('middle' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('left' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('right' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:39:0x001a \-\> B:32:0x0002, CROSS_EDGE: B:47:0x0036 \-\> B:30:?, BACK_EDGE: B:48:0x0037 \-\> B:41:0x001f, CROSS_EDGE: B:50:0x003b \-\> B:30:?, CROSS_EDGE: B:41:0x001f \-\> B:49:0x003a, CROSS_EDGE: B:32:0x0002 \-\> B:40:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0008\-0x001a: r1 'nextItem' Ljava\/lang\/Object;, signature: TT;\l  0x000e\-0x001a: r2 'cmp' I\l  0x0002\-0x001d: r0 'next' I\l  0x0025\-0x0037: r1 'nextItem' Ljava\/lang\/Object;, signature: TT;\l  0x002b\-0x0037: r2 'cmp' I\l  0x001f\-0x003a: r0 'next' I\l  0x0000\-0x003b: r4 'this' Landroidx\/recyclerview\/widget\/SortedList;, signature: Landroidx\/recyclerview\/widget\/SortedList\<TT;\>;\l  0x0000\-0x003b: r5 'item' Ljava\/lang\/Object;, signature: TT;\l  \-1 \-0x003b: r6 'middle' I\l  \-1 \-0x003b: r7 'left' I\l  \-1 \-0x003b: r8 'right' I\lTYPE_VARS: [T]\lSIGNATURE: (TT;III)I\l}"];
MethodNode -> Node_29;Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_51;
Node_33 -> Node_34;
Node_34 -> Node_36;
Node_34 -> Node_53[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_39;
Node_37 -> Node_52[style=dashed];
Node_39 -> Node_32;
Node_52 -> Node_38;
Node_38 -> Node_30;
Node_53 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_56;
Node_42 -> Node_43;
Node_43 -> Node_45;
Node_43 -> Node_55[style=dashed];
Node_45 -> Node_46;
Node_46 -> Node_48;
Node_46 -> Node_54[style=dashed];
Node_48 -> Node_41;
Node_54 -> Node_47;
Node_47 -> Node_30;
Node_55 -> Node_49;
Node_49 -> Node_30;
Node_56 -> Node_57;
Node_57 -> Node_30;
Node_51 -> Node_40;
}

