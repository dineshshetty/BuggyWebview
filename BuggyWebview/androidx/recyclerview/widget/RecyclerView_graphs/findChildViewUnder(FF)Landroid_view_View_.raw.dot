digraph "CFG forandroidx.recyclerview.widget.RecyclerView.findChildViewUnder(FF)Landroid\/view\/View;" {
Node_22 [shape=record,label="{22\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.ChildHelper) = (r6 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mChildHelper androidx.recyclerview.widget.ChildHelper  (LINE:5013)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.ChildHelper) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.getChildCount():int A[MD:():int (m)]\l0x0006: ARITH  (r1 I:int) = (r0 I:int A[D('count' int)]) + (\-1 int)  (LINE:5014)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|LOOP_START\lLOOP:0: B:25:0x0008\-\>B:35:0x0041\l|0x0008: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:38:0x0044 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|0x000a: IGET  (r2 I:androidx.recyclerview.widget.ChildHelper) = (r6 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mChildHelper androidx.recyclerview.widget.ChildHelper  (LINE:5015)\l0x000c: INVOKE  (r2 I:android.view.View) = (r2 I:androidx.recyclerview.widget.ChildHelper), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)]\l0x0010: INVOKE  (r3 I:float) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationX():float A[MD:():float (c)] (LINE:5016)\l0x0014: INVOKE  (r4 I:float) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTranslationY():float A[MD:():float (c)] (LINE:5017)\l0x0018: INVOKE  (r5 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:5018)\l0x001c: CAST (r5 I:float) = (float) (r5 I:int) \l0x001d: ARITH  (r5 I:float) = (r5 I:float) + (r3 I:float A[D('translationX' float)]) \l0x001e: CMP_L  (r5 I:int) = (r7 I:float A[D('x' float)]), (r5 I:float) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0020|0x0020: IF  (r5 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:40:0x0041 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0022|0x0022: INVOKE  (r5 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getRight():int A[MD:():int (c)] (LINE:5019)\l0x0026: CAST (r5 I:float) = (float) (r5 I:int) \l0x0027: ARITH  (r5 I:float) = (r5 I:float) + (r3 I:float A[D('translationX' float)]) \l0x0028: CMP_G  (r5 I:int) = (r7 I:float A[D('x' float)]), (r5 I:float) \l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|0x002a: IF  (r5 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:41:0x0041 \l}"];
Node_30 [shape=record,label="{30\:\ 0x002c|0x002c: INVOKE  (r5 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:5020)\l0x0030: CAST (r5 I:float) = (float) (r5 I:int) \l0x0031: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float A[D('translationY' float)]) \l0x0032: CMP_L  (r5 I:int) = (r8 I:float A[D('y' float)]), (r5 I:float) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0034|0x0034: IF  (r5 I:??[int, byte, short, char]) \< (0 ??[int, byte, short, char])  \-\> B:42:0x0041 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0036|0x0036: INVOKE  (r5 I:int) = (r2 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getBottom():int A[MD:():int (c)] (LINE:5021)\l0x003a: CAST (r5 I:float) = (float) (r5 I:int) \l0x003b: ARITH  (r5 I:float) = (r5 I:float) + (r4 I:float A[D('translationY' float)]) \l0x003c: CMP_G  (r5 I:int) = (r8 I:float A[D('y' float)]), (r5 I:float) \l}"];
Node_33 [shape=record,label="{33\:\ 0x003e|0x003e: IF  (r5 I:??[int, byte, short, char]) \> (0 ??[int, byte, short, char])  \-\> B:43:0x0041 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0040|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0040|RETURN\l|0x0040: RETURN  (r2 I:android.view.View A[D('child' android.view.View)])  (LINE:5022)\l}"];
Node_23 [shape=record,label="{23\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0041|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0041|LOOP_END\lLOOP:0: B:25:0x0008\-\>B:35:0x0041\l|0x0041: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (\-1 int)  (LINE:5014)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0041|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0041|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0041|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0044|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0044|RETURN\l|0x0044: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:5025)\l0x0045: RETURN  (r1 I:android.view.View) \l}"];
MethodNode[shape=record,label="{public android.view.View androidx.recyclerview.widget.RecyclerView.findChildViewUnder((r6 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r7 I:float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:35:0x0041 \-\> B:25:0x0008, CROSS_EDGE: B:31:0x0034 \-\> B:35:0x0041, CROSS_EDGE: B:29:0x002a \-\> B:35:0x0041, CROSS_EDGE: B:27:0x0020 \-\> B:35:0x0041, CROSS_EDGE: B:37:0x0045 \-\> B:23:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0010\-0x0041: r2 'child' Landroid\/view\/View;\l  0x0014\-0x0041: r3 'translationX' F\l  0x0018\-0x0041: r4 'translationY' F\l  0x0008\-0x0044: r1 'i' I\l  0x0006\-0x0045: r0 'count' I\l  \-1 \-0x0045: r7 'x' F\l  \-1 \-0x0045: r8 'y' F\l}"];
MethodNode -> Node_22;Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_41;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_42;
Node_32 -> Node_33;
Node_33 -> Node_39[style=dashed];
Node_33 -> Node_43;
Node_39 -> Node_34;
Node_34 -> Node_23;
Node_43 -> Node_35;
Node_35 -> Node_25;
Node_42 -> Node_35;
Node_41 -> Node_35;
Node_40 -> Node_35;
Node_38 -> Node_36;
Node_36 -> Node_23;
}

