digraph "CFG forandroidx.recyclerview.widget.RecyclerView.getChildViewHolder(Landroid\/view\/View;)Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.ViewParent) = (r5 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)] (LINE:4769)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.ViewParent)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0028  (LINE:4770)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.ViewParent)]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0009 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|0x0009: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:4771)\l0x000b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000d: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0010: CONST_STR  (r3 I:java.lang.String) =  \"View \" \l0x0012: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0015: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.Object A[D('child' android.view.View)]) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0018: CONST_STR  (r3 I:java.lang.String) =  \" is not a direct child of \" \l0x001a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.Object) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder A[MD:(java.lang.Object):java.lang.StringBuilder (c)]\l0x0020: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0024: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|0x0027: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|0x0028: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) = (r5 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.recyclerview.widget.RecyclerView.getChildViewHolderInt(android.view.View):androidx.recyclerview.widget.RecyclerView$ViewHolder A[MD:(android.view.View):androidx.recyclerview.widget.RecyclerView$ViewHolder (m)] (LINE:4774)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|RETURN\l|0x002c: RETURN  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) \l}"];
MethodNode[shape=record,label="{public androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView.getChildViewHolder((r4 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x002c \-\> B:11:?, CROSS_EDGE: B:13:0x0004 \-\> B:18:0x0028\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x002c: r0 'parent' Landroid\/view\/ViewParent;\l  \-1 \-0x002c: r5 'child' Landroid\/view\/View;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_16;
Node_14 -> Node_18[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

