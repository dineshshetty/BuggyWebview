digraph "CFG forandroidx.recyclerview.widget.RecyclerView.removeItemDecoration(Landroidx\/recyclerview\/widget\/RecyclerView$ItemDecoration;)V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$LayoutManager r0 = r2.mLayout\l}"];
Node_17 [shape=record,label="{17\:\ 0x0002|if (r0 == null) goto L4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0004|r0.assertNotInLayoutOrScroll(\"Cannot remove item decoration during a scroll  or layout\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|r2.mItemDecorations.remove(r3)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0014|if (r2.mItemDecorations.isEmpty() == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0016}"];
Node_22 [shape=record,label="{22\:\ 0x001b|if (getOverScrollMode() != 2) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x001d|r0 = true\l}"];
Node_25 [shape=record,label="{25\:\ 0x0020|PHI: r0 \l  PHI: (r0v6 boolean) = (r0v5 boolean), (r0v7 boolean) binds: [B:24:0x001f, B:23:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|setWillNotDraw(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x001f|r0 = false\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|markItemDecorInsetsDirty()\lrequestLayout()\l}"];
Node_27 [shape=record,label="{27\:\ 0x0029|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.removeItemDecoration((r2v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r3v0 'decor' androidx.recyclerview.widget.RecyclerView$ItemDecoration A[D('decor' androidx.recyclerview.widget.RecyclerView$ItemDecoration), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x001f \-\> B:25:0x0020, CROSS_EDGE: B:20:0x0014 \-\> B:26:0x0023, CROSS_EDGE: B:17:0x0002 \-\> B:19:0x0009\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_15;
}

