digraph "CFG forandroidx.recyclerview.widget.RecyclerView.animateAppearance(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;Landroidx\/recyclerview\/widget\/RecyclerView$ItemAnimator$ItemHolderInfo;Landroidx\/recyclerview\/widget\/RecyclerView$ItemAnimator$ItemHolderInfo;)V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:4363)\l0x0001: INVOKE  \l  (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('itemHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l  (r0 I:boolean)\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ViewHolder.setIsRecyclable(boolean):void A[MD:(boolean):void (m)]\l0x0004: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator) = (r1 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mItemAnimator androidx.recyclerview.widget.RecyclerView$ItemAnimator  (LINE:4364)\l0x0006: INVOKE  (r0 I:boolean) = \l  (r0 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator)\l  (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('itemHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l  (r3 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo A[D('preLayoutInfo' androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)])\l  (r4 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo A[D('postLayoutInfo' androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ItemAnimator.animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):boolean A[MD:(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo):boolean (m)]\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x000c|0x000c: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.postAnimationRunner():void A[MD:():void (m)] (LINE:4365)\l}"];
Node_12 [shape=record,label="{12\:\ 0x000f|RETURN\lORIG_RETURN\l|0x000f: RETURN    (LINE:4367)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000f: RETURN   A[SYNTHETIC] (LINE:4367)\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.animateAppearance((r1 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('itemHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo A[D('preLayoutInfo' androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo A[D('postLayoutInfo' androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x000a \-\> B:12:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x000f: r2 'itemHolder' Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;\l  \-1 \-0x000f: r3 'preLayoutInfo' Landroidx\/recyclerview\/widget\/RecyclerView$ItemAnimator$ItemHolderInfo;\l  \-1 \-0x000f: r4 'postLayoutInfo' Landroidx\/recyclerview\/widget\/RecyclerView$ItemAnimator$ItemHolderInfo;\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

