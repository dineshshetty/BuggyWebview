digraph "CFG forandroidx.recyclerview.widget.RecyclerView.findNestedRecyclerView(Landroid\/view\/View;)Landroidx\/recyclerview\/widget\/RecyclerView;" {
Node_18 [shape=record,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0000}"];
Node_21 [shape=record,label="{21\:\ 0x0003|if ((r6 instanceof android.view.ViewGroup) != false) goto L5\l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|RETURN\l|return null\l}"];
Node_19 [shape=record,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006}"];
Node_24 [shape=record,label="{24\:\ 0x0008|if ((r6 instanceof androidx.recyclerview.widget.RecyclerView) == false) goto L9\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a}"];
Node_26 [shape=record,label="{26\:\ 0x000d|RETURN\l|return (androidx.recyclerview.widget.RecyclerView) r6\l}"];
Node_27 [shape=record,label="{27\:\ 0x000e|android.view.ViewGroup r0 = (android.view.ViewGroup) r6\lint r2 = r0.getChildCount()\lr3 = 0\l}"];
Node_28 [shape=record,label="{28\:\ 0x0016|LOOP_START\lLOOP:0: B:28:0x0016\-\>B:32:0x0023\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:27:0x000e, B:32:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \>= r2) goto L16\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|android.view.View r4 = r0.getChildAt(r3)\landroidx.recyclerview.widget.RecyclerView r5 = findNestedRecyclerView(r4)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0020|if (r5 == null) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x0023|LOOP_END\lLOOP:0: B:28:0x0016\-\>B:32:0x0023\l|int r3 = r3 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|RETURN\l|return r5\l}"];
Node_35 [shape=record,label="{35\:\ 0x0026|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0026|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{static androidx.recyclerview.widget.RecyclerView androidx.recyclerview.widget.RecyclerView.findNestedRecyclerView((r6v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x000d \-\> B:19:?, CROSS_EDGE: B:31:0x0022 \-\> B:19:?, BACK_EDGE: B:32:0x0023 \-\> B:28:0x0016, CROSS_EDGE: B:33:0x0026 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_19;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_34[style=dashed];
Node_32 -> Node_28;
Node_34 -> Node_31;
Node_31 -> Node_19;
Node_35 -> Node_33;
Node_33 -> Node_19;
}

