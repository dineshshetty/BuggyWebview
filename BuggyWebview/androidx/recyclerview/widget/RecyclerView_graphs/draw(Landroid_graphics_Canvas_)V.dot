digraph "CFG forandroidx.recyclerview.widget.RecyclerView.draw(Landroid\/graphics\/Canvas;)V" {
Node_77 [shape=record,label="{77\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_79 [shape=record,label="{79\:\ 0x0000|super.draw(r10)\lint r0 = r9.mItemDecorations.size()\lr1 = 0\l}"];
Node_80 [shape=record,label="{80\:\ 0x000a|LOOP_START\lLOOP:0: B:80:0x000a\-\>B:81:0x000c\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v13 'i' int) binds: [B:79:0x0000, B:81:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L4\l}"];
Node_81 [shape=record,label="{81\:\ 0x000c|LOOP_END\lLOOP:0: B:80:0x000a\-\>B:81:0x000c\l|r9.mItemDecorations.get(r1).onDrawOver(r10, r9, r9.mState)\lint r1 = r1 + 1\l}"];
Node_152 [shape=record,label="{152\:\ 0x001c|SYNTHETIC\l}"];
Node_82 [shape=record,label="{82\:\ 0x001c|r1 = false\landroid.widget.EdgeEffect r2 = r9.mLeftGlow\lr3 = true\l}"];
Node_83 [shape=record,label="{83\:\ 0x0021|if (r2 == null) goto L20\l}"];
Node_84 [shape=record,label="{84\:\ 0x0023}"];
Node_85 [shape=record,label="{85\:\ 0x0027|if (r2.isFinished() != false) goto L20\l}"];
Node_86 [shape=record,label="{86\:\ 0x0029|int r2 = r10.save()\l}"];
Node_87 [shape=record,label="{87\:\ 0x002f|if (r9.mClipToPadding == false) goto L19\l}"];
Node_88 [shape=record,label="{88\:\ 0x0031|int r5 = getPaddingBottom()\l}"];
Node_90 [shape=record,label="{90\:\ 0x0037|PHI: r5 \l  PHI: (r5v22 'padding' int) = (r5v21 'padding' int), (r5v23 'padding' int) binds: [B:89:0x0036, B:88:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r10.rotate(270.0f)\lr10.translate((float) ((\-getHeight()) + r5), 0.0f)\landroid.widget.EdgeEffect r6 = r9.mLeftGlow\l}"];
Node_91 [shape=record,label="{91\:\ 0x0049|if (r6 == null) goto L18\l}"];
Node_92 [shape=record,label="{92\:\ 0x004b}"];
Node_93 [shape=record,label="{93\:\ 0x004f|if (r6.draw(r10) == false) goto L18\l}"];
Node_94 [shape=record,label="{94\:\ 0x0051|r6 = true\l}"];
Node_96 [shape=record,label="{96\:\ 0x0054|PHI: r6 \l  PHI: (r6v21 boolean) = (r6v20 boolean), (r6v23 boolean) binds: [B:95:0x0053, B:94:0x0051] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r6\lr10.restoreToCount(r2)\l}"];
Node_95 [shape=record,label="{95\:\ 0x0053|r6 = false\l}"];
Node_89 [shape=record,label="{89\:\ 0x0036|r5 = 0\l}"];
Node_97 [shape=record,label="{97\:\ 0x0058|PHI: r1 \l  PHI: (r1v3 'needsInvalidate' boolean) = (r1v2 'needsInvalidate' boolean), (r1v2 'needsInvalidate' boolean), (r1v12 'needsInvalidate' boolean) binds: [B:83:0x0021, B:85:0x0027, B:96:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|android.widget.EdgeEffect r2 = r9.mTopGlow\l}"];
Node_98 [shape=record,label="{98\:\ 0x005a|if (r2 == null) goto L34\l}"];
Node_99 [shape=record,label="{99\:\ 0x005c}"];
Node_100 [shape=record,label="{100\:\ 0x0060|if (r2.isFinished() != false) goto L34\l}"];
Node_101 [shape=record,label="{101\:\ 0x0062|int r2 = r10.save()\l}"];
Node_102 [shape=record,label="{102\:\ 0x0068|if (r9.mClipToPadding == false) goto L27\l}"];
Node_103 [shape=record,label="{103\:\ 0x006a|r10.translate((float) getPaddingLeft(), (float) getPaddingTop())\l}"];
Node_104 [shape=record,label="{104\:\ 0x0077|android.widget.EdgeEffect r5 = r9.mTopGlow\l}"];
Node_105 [shape=record,label="{105\:\ 0x0079|if (r5 == null) goto L33\l}"];
Node_106 [shape=record,label="{106\:\ 0x007b}"];
Node_107 [shape=record,label="{107\:\ 0x007f|if (r5.draw(r10) == false) goto L33\l}"];
Node_108 [shape=record,label="{108\:\ 0x0081|r5 = true\l}"];
Node_110 [shape=record,label="{110\:\ 0x0084|PHI: r5 \l  PHI: (r5v15 boolean) = (r5v14 boolean), (r5v17 boolean) binds: [B:109:0x0083, B:108:0x0081] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r1 \| r5\lr10.restoreToCount(r2)\l}"];
Node_109 [shape=record,label="{109\:\ 0x0083|r5 = false\l}"];
Node_111 [shape=record,label="{111\:\ 0x0088|PHI: r1 \l  PHI: (r1v4 'needsInvalidate' boolean) = (r1v3 'needsInvalidate' boolean), (r1v3 'needsInvalidate' boolean), (r1v11 'needsInvalidate' boolean) binds: [B:98:0x005a, B:100:0x0060, B:110:0x0084] A[DONT_GENERATE, DONT_INLINE]\l|android.widget.EdgeEffect r2 = r9.mRightGlow\l}"];
Node_112 [shape=record,label="{112\:\ 0x008a|if (r2 == null) goto L49\l}"];
Node_113 [shape=record,label="{113\:\ 0x008c}"];
Node_114 [shape=record,label="{114\:\ 0x0090|if (r2.isFinished() != false) goto L49\l}"];
Node_115 [shape=record,label="{115\:\ 0x0092|int r2 = r10.save()\lint r5 = getWidth()\l}"];
Node_116 [shape=record,label="{116\:\ 0x009c|if (r9.mClipToPadding == false) goto L48\l}"];
Node_117 [shape=record,label="{117\:\ 0x009e|int r6 = getPaddingTop()\l}"];
Node_119 [shape=record,label="{119\:\ 0x00a4|PHI: r6 \l  PHI: (r6v10 'padding' int) = (r6v9 'padding' int), (r6v11 'padding' int) binds: [B:118:0x00a3, B:117:0x009e] A[DONT_GENERATE, DONT_INLINE]\l|r10.rotate(90.0f)\lr10.translate((float) (\-r6), (float) (\-r5))\landroid.widget.EdgeEffect r7 = r9.mRightGlow\l}"];
Node_120 [shape=record,label="{120\:\ 0x00b2|if (r7 == null) goto L47\l}"];
Node_121 [shape=record,label="{121\:\ 0x00b4}"];
Node_122 [shape=record,label="{122\:\ 0x00b8|if (r7.draw(r10) == false) goto L47\l}"];
Node_123 [shape=record,label="{123\:\ 0x00ba|r7 = true\l}"];
Node_125 [shape=record,label="{125\:\ 0x00bd|PHI: r7 \l  PHI: (r7v6 boolean) = (r7v5 boolean), (r7v8 boolean) binds: [B:124:0x00bc, B:123:0x00ba] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r1 \| r7\lr10.restoreToCount(r2)\l}"];
Node_124 [shape=record,label="{124\:\ 0x00bc|r7 = false\l}"];
Node_118 [shape=record,label="{118\:\ 0x00a3|r6 = 0\l}"];
Node_126 [shape=record,label="{126\:\ 0x00c1|PHI: r1 \l  PHI: (r1v5 'needsInvalidate' boolean) = (r1v4 'needsInvalidate' boolean), (r1v4 'needsInvalidate' boolean), (r1v10 'needsInvalidate' boolean) binds: [B:112:0x008a, B:114:0x0090, B:125:0x00bd] A[DONT_GENERATE, DONT_INLINE]\l|android.widget.EdgeEffect r2 = r9.mBottomGlow\l}"];
Node_127 [shape=record,label="{127\:\ 0x00c3|if (r2 == null) goto L63\l}"];
Node_128 [shape=record,label="{128\:\ 0x00c5}"];
Node_129 [shape=record,label="{129\:\ 0x00c9|if (r2.isFinished() != false) goto L63\l}"];
Node_130 [shape=record,label="{130\:\ 0x00cb|int r2 = r10.save()\lr10.rotate(180.0f)\l}"];
Node_131 [shape=record,label="{131\:\ 0x00d6|if (r9.mClipToPadding == false) goto L62\l}"];
Node_132 [shape=record,label="{132\:\ 0x00d8|r10.translate((float) ((\-getWidth()) + getPaddingRight()), (float) ((\-getHeight()) + getPaddingBottom()))\l}"];
Node_134 [shape=record,label="{134\:\ 0x0101|android.widget.EdgeEffect r5 = r9.mBottomGlow\l}"];
Node_135 [shape=record,label="{135\:\ 0x0103|if (r5 == null) goto L61\l}"];
Node_136 [shape=record,label="{136\:\ 0x0105}"];
Node_137 [shape=record,label="{137\:\ 0x0109|if (r5.draw(r10) == false) goto L61\l}"];
Node_140 [shape=record,label="{140\:\ 0x010d|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v0 boolean) binds: [B:139:0x010c, B:137:0x0109] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r1 \| r3\lr10.restoreToCount(r2)\l}"];
Node_139 [shape=record,label="{139\:\ 0x010c|r3 = false\l}"];
Node_133 [shape=record,label="{133\:\ 0x00f2|r10.translate((float) (\-getWidth()), (float) (\-getHeight()))\l}"];
Node_141 [shape=record,label="{141\:\ 0x0111|PHI: r1 \l  PHI: (r1v6 'needsInvalidate' boolean) = (r1v5 'needsInvalidate' boolean), (r1v5 'needsInvalidate' boolean), (r1v9 'needsInvalidate' boolean) binds: [B:127:0x00c3, B:129:0x00c9, B:140:0x010d] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 != false) goto L71\l}"];
Node_142 [shape=record,label="{142\:\ 0x0113}"];
Node_143 [shape=record,label="{143\:\ 0x0115|if (r9.mItemAnimator == null) goto L71\l}"];
Node_144 [shape=record,label="{144\:\ 0x0117}"];
Node_145 [shape=record,label="{145\:\ 0x011d|if (r9.mItemDecorations.size() \<= 0) goto L71\l}"];
Node_146 [shape=record,label="{146\:\ 0x011f}"];
Node_147 [shape=record,label="{147\:\ 0x0125|if (r9.mItemAnimator.isRunning() == false) goto L71\l}"];
Node_148 [shape=record,label="{148\:\ 0x0127|r1 = true\l}"];
Node_149 [shape=record,label="{149\:\ 0x0128|PHI: r1 \l  PHI: (r1v7 'needsInvalidate' boolean) = (r1v6 'needsInvalidate' boolean), (r1v6 'needsInvalidate' boolean), (r1v6 'needsInvalidate' boolean), (r1v6 'needsInvalidate' boolean), (r1v8 'needsInvalidate' boolean) binds: [B:141:0x0111, B:143:0x0115, B:145:0x011d, B:147:0x0125, B:148:0x0127] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L75\l}"];
Node_150 [shape=record,label="{150\:\ 0x012a|androidx.core.view.ViewCompat.postInvalidateOnAnimation(r9)\l}"];
Node_151 [shape=record,label="{151\:\ 0x012d|RETURN\lORIG_RETURN\l|return\l}"];
Node_78 [shape=record,label="{78\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_153 [shape=record,label="{153\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.draw((r9v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r10v0 'c' android.graphics.Canvas A[D('c' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lBACK_EDGE: B:81:0x000c \-\> B:80:0x000a, CROSS_EDGE: B:149:0x0128 \-\> B:151:0x012d, CROSS_EDGE: B:147:0x0125 \-\> B:149:0x0128, CROSS_EDGE: B:145:0x011d \-\> B:149:0x0128, CROSS_EDGE: B:143:0x0115 \-\> B:149:0x0128, CROSS_EDGE: B:141:0x0111 \-\> B:149:0x0128, CROSS_EDGE: B:137:0x0109 \-\> B:140:0x010d, CROSS_EDGE: B:135:0x0103 \-\> B:139:0x010c, CROSS_EDGE: B:133:0x00f2 \-\> B:134:0x0101, CROSS_EDGE: B:129:0x00c9 \-\> B:141:0x0111, CROSS_EDGE: B:127:0x00c3 \-\> B:141:0x0111, CROSS_EDGE: B:124:0x00bc \-\> B:125:0x00bd, CROSS_EDGE: B:120:0x00b2 \-\> B:124:0x00bc, CROSS_EDGE: B:118:0x00a3 \-\> B:119:0x00a4, CROSS_EDGE: B:114:0x0090 \-\> B:126:0x00c1, CROSS_EDGE: B:112:0x008a \-\> B:126:0x00c1, CROSS_EDGE: B:109:0x0083 \-\> B:110:0x0084, CROSS_EDGE: B:105:0x0079 \-\> B:109:0x0083, CROSS_EDGE: B:102:0x0068 \-\> B:104:0x0077, CROSS_EDGE: B:100:0x0060 \-\> B:111:0x0088, CROSS_EDGE: B:98:0x005a \-\> B:111:0x0088, CROSS_EDGE: B:95:0x0053 \-\> B:96:0x0054, CROSS_EDGE: B:91:0x0049 \-\> B:95:0x0053, CROSS_EDGE: B:89:0x0036 \-\> B:90:0x0037, CROSS_EDGE: B:85:0x0027 \-\> B:97:0x0058, CROSS_EDGE: B:83:0x0021 \-\> B:97:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.draw(android.graphics.Canvas):void\}]\l}"];
MethodNode -> Node_77;Node_77 -> Node_79;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_152;
Node_81 -> Node_80;
Node_152 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_97;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_97;
Node_86 -> Node_87;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_95;
Node_92 -> Node_93;
Node_93 -> Node_94[style=dashed];
Node_93 -> Node_95;
Node_94 -> Node_96;
Node_96 -> Node_97;
Node_95 -> Node_96;
Node_89 -> Node_90;
Node_97 -> Node_98;
Node_98 -> Node_99[style=dashed];
Node_98 -> Node_111;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_111;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_109;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_109;
Node_108 -> Node_110;
Node_110 -> Node_111;
Node_109 -> Node_110;
Node_111 -> Node_112;
Node_112 -> Node_113[style=dashed];
Node_112 -> Node_126;
Node_113 -> Node_114;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_126;
Node_115 -> Node_116;
Node_116 -> Node_117[style=dashed];
Node_116 -> Node_118;
Node_117 -> Node_119;
Node_119 -> Node_120;
Node_120 -> Node_121[style=dashed];
Node_120 -> Node_124;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_124;
Node_123 -> Node_125;
Node_125 -> Node_126;
Node_124 -> Node_125;
Node_118 -> Node_119;
Node_126 -> Node_127;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_141;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_141;
Node_130 -> Node_131;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_133;
Node_132 -> Node_134;
Node_134 -> Node_135;
Node_135 -> Node_136[style=dashed];
Node_135 -> Node_139;
Node_136 -> Node_137;
Node_137 -> Node_139;
Node_137 -> Node_140[style=dashed];
Node_140 -> Node_141;
Node_139 -> Node_140;
Node_133 -> Node_134;
Node_141 -> Node_142[style=dashed];
Node_141 -> Node_149;
Node_142 -> Node_143;
Node_143 -> Node_144[style=dashed];
Node_143 -> Node_149;
Node_144 -> Node_145;
Node_145 -> Node_146[style=dashed];
Node_145 -> Node_149;
Node_146 -> Node_147;
Node_147 -> Node_148[style=dashed];
Node_147 -> Node_149;
Node_148 -> Node_149;
Node_149 -> Node_150[style=dashed];
Node_149 -> Node_153;
Node_150 -> Node_151;
Node_151 -> Node_78;
Node_153 -> Node_78;
}

