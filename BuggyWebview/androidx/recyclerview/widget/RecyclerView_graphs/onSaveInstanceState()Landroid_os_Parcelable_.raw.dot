digraph "CFG forandroidx.recyclerview.widget.RecyclerView.onSaveInstanceState()Landroid\/os\/Parcelable;" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.recyclerview.widget.RecyclerView$SavedState) =  androidx.recyclerview.widget.RecyclerView$SavedState  (LINE:1380)\l0x0002: INVOKE  (r1 I:android.os.Parcelable) = (r2 I:android.view.ViewGroup) type: SUPER call: android.view.ViewGroup.onSaveInstanceState():android.os.Parcelable A[MD:():android.os.Parcelable (c)]\l0x0006: INVOKE  (r0 I:androidx.recyclerview.widget.RecyclerView$SavedState), (r1 I:android.os.Parcelable) type: DIRECT call: androidx.recyclerview.widget.RecyclerView.SavedState.\<init\>(android.os.Parcelable):void A[MD:(android.os.Parcelable):void (m)]\l0x0009: IGET  (r1 I:androidx.recyclerview.widget.RecyclerView$SavedState) = (r2 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mPendingSavedState androidx.recyclerview.widget.RecyclerView$SavedState  (LINE:1381)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000b|0x000b: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0011 \l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|0x000d: INVOKE  \l  (r0 I:androidx.recyclerview.widget.RecyclerView$SavedState A[D('state' androidx.recyclerview.widget.RecyclerView$SavedState)])\l  (r1 I:androidx.recyclerview.widget.RecyclerView$SavedState)\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.SavedState.copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState):void A[MD:(androidx.recyclerview.widget.RecyclerView$SavedState):void (m)] (LINE:1382)\l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|RETURN\l|0x001f: RETURN  (r0 I:android.os.Parcelable A[D('state' androidx.recyclerview.widget.RecyclerView$SavedState)])  (LINE:1389)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0011|0x0011: IGET  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r2 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayout androidx.recyclerview.widget.RecyclerView$LayoutManager  (LINE:1383)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|0x0013: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x001c \l}"];
Node_17 [shape=record,label="{17\:\ 0x0015|0x0015: INVOKE  (r1 I:android.os.Parcelable) = (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.onSaveInstanceState():android.os.Parcelable A[MD:():android.os.Parcelable (m)] (LINE:1384)\l0x0019: IPUT  \l  (r1 I:android.os.Parcelable)\l  (r0 I:androidx.recyclerview.widget.RecyclerView$SavedState A[D('state' androidx.recyclerview.widget.RecyclerView$SavedState)])\l androidx.recyclerview.widget.RecyclerView.SavedState.mLayoutState android.os.Parcelable \l}"];
Node_18 [shape=record,label="{18\:\ 0x001c|0x001c: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1386)\l0x001d: IPUT  \l  (r1 I:android.os.Parcelable)\l  (r0 I:androidx.recyclerview.widget.RecyclerView$SavedState A[D('state' androidx.recyclerview.widget.RecyclerView$SavedState)])\l androidx.recyclerview.widget.RecyclerView.SavedState.mLayoutState android.os.Parcelable \l}"];
MethodNode[shape=record,label="{protected android.os.Parcelable androidx.recyclerview.widget.RecyclerView.onSaveInstanceState((r2 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:17:0x0015 \-\> B:19:0x001f, CROSS_EDGE: B:18:0x001c \-\> B:19:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x001f: r0 'state' Landroidx\/recyclerview\/widget\/RecyclerView$SavedState;\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onSaveInstanceState():android.os.Parcelable\}]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_19;
Node_19 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
}

