digraph "CFG forandroidx.recyclerview.widget.RecyclerView.setScrollState(I)V" {
subgraph cluster_Region_1617984131 {
label = "R(1:(2:(1:3)|(3:5|(1:7)|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1590973453 {
label = "R(2:(1:3)|(3:5|(1:7)|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1862810923 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r2 == r1.mScrollState) goto L3\l}"];
subgraph cluster_Region_1492883499 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_993809877 {
label = "R(3:5|(1:7)|8)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0005|r1.mScrollState = r2\l}"];
subgraph cluster_IfRegion_1202985603 {
label = "IF [B:16:0x0008] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0008|if (r2 != 2) goto L7\l}"];
subgraph cluster_Region_1769702971 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000a|stopScrollersInternal()\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x000d|dispatchOnScrollStateChanged(r2)\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0010}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.setScrollState((r1v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r2v0 'state' int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:11:?, CROSS_EDGE: B:16:0x0008 \-\> B:18:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_19 -> Node_11;
}

