digraph "CFG forandroidx.recyclerview.widget.RecyclerView.dispatchPendingImportantForAccessibilityChanges()V" {
Node_20 [shape=record,label="{20\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_22 [shape=record,label="{22\:\ 0x0000|0x0000: IGET  (r0 I:java.util.List\<androidx.recyclerview.widget.RecyclerView$ViewHolder\>) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List  (LINE:11480)\l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0008|LOOP_START\lLOOP:0: B:23:0x0008\-\>B:32:0x002d\l|0x0008: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:35:0x0030 \l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: IGET  (r1 I:java.util.List\<androidx.recyclerview.widget.RecyclerView$ViewHolder\>) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List  (LINE:11481)\l0x000c: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0010: CHECK_CAST (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) = (androidx.recyclerview.widget.RecyclerView$ViewHolder) (r1 I:??[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:android.view.View) = \l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l androidx.recyclerview.widget.RecyclerView.ViewHolder.itemView android.view.View  (LINE:11482)\l0x0014: INVOKE  (r2 I:android.view.ViewParent) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getParent():android.view.ViewParent A[MD:():android.view.ViewParent (c)]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0018|0x0018: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x002d \l}"];
Node_26 [shape=record,label="{26\:\ 0x001a|0x001a: INVOKE  (r2 I:boolean) = \l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ViewHolder.shouldIgnore():boolean A[MD:():boolean (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x001e|0x001e: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0021 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0021|0x0021: IGET  (r2 I:int) = \l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l androidx.recyclerview.widget.RecyclerView.ViewHolder.mPendingAccessibilityState int  (LINE:11485)\l0x0023: CONST  (r3 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:11486)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0024|0x0024: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) == (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x002d \l}"];
Node_31 [shape=record,label="{31\:\ 0x0026|0x0026: IGET  (r4 I:android.view.View) = \l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l androidx.recyclerview.widget.RecyclerView.ViewHolder.itemView android.view.View  (LINE:11488)\l0x0028: INVOKE  (r4 I:android.view.View), (r2 I:int A[D('state' int)]) type: STATIC call: androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int):void A[MD:(android.view.View, int):void (m)]\l0x002b: IPUT  \l  (r3 I:int)\l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l androidx.recyclerview.widget.RecyclerView.ViewHolder.mPendingAccessibilityState int  (LINE:11489)\l}"];
Node_36 [shape=record,label="{36\:\ 0x002d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x002d|LOOP_END\lLOOP:0: B:23:0x0008\-\>B:32:0x002d\l|0x002d: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (\-1 int)  (LINE:11480)\l}"];
Node_38 [shape=record,label="{38\:\ 0x002d|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002d|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x002d|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0030|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|0x0030: IGET  (r0 I:java.util.List\<androidx.recyclerview.widget.RecyclerView$ViewHolder\> A[D('i' int)]) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mPendingAccessibilityImportanceChange java.util.List  (LINE:11493)\l0x0032: INVOKE  (r0 I:java.util.List) type: INTERFACE call: java.util.List.clear():void A[MD:():void (c)]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0035|RETURN\l|0x0035: RETURN    (LINE:11494)\l}"];
Node_21 [shape=record,label="{21\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.dispatchPendingImportantForAccessibilityChanges((r5 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x002d \-\> B:23:0x0008, CROSS_EDGE: B:30:0x0024 \-\> B:32:0x002d, CROSS_EDGE: B:27:0x001e \-\> B:32:0x002d, CROSS_EDGE: B:25:0x0018 \-\> B:32:0x002d\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0012\-0x002d: r1 'viewHolder' Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;\l  0x0023\-0x002d: r2 'state' I\l  0x0008\-0x0030: r0 'i' I\l}"];
MethodNode -> Node_20;Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_35;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_39[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_38;
Node_31 -> Node_36;
Node_36 -> Node_32;
Node_32 -> Node_23;
Node_38 -> Node_32;
Node_39 -> Node_32;
Node_37 -> Node_32;
Node_35 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_21;
}

