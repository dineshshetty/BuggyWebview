digraph "CFG forandroidx.recyclerview.widget.RecyclerView.getDeepestFocusedViewWithId(Landroid\/view\/View;)I" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:4003)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|LOOP_START\lLOOP:0: B:24:0x0004\-\>B:39:0x0004\l|0x0004: INVOKE  (r1 I:boolean) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.isFocused():boolean A[MD:():boolean (c)] (LINE:4004)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0027 \l}"];
Node_26 [shape=record,label="{26\:\ 0x000a|0x000a: INSTANCE_OF  (r1 I:boolean) = (r4 I:??[OBJECT, ARRAY] A[D('view' android.view.View)]) android.view.ViewGroup \l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0027 \l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: INVOKE  (r1 I:boolean) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.hasFocus():boolean A[MD:():boolean (c)]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0027 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0014|0x0014: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r4 I:??[OBJECT, ARRAY] A[D('view' android.view.View)])  (LINE:4005)\l0x0015: CHECK_CAST (r1 I:android.view.ViewGroup) = (android.view.ViewGroup) (r1 I:??[OBJECT, ARRAY]) \l0x0017: INVOKE  (r4 I:android.view.View A[D('view' android.view.View)]) = (r1 I:android.view.ViewGroup) type: VIRTUAL call: android.view.ViewGroup.getFocusedChild():android.view.View A[MD:():android.view.View (c)]\l0x001b: INVOKE  (r1 I:int) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:4006)\l0x001f: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:4007)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0020|0x0020: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id' int)]) == (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0004 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|0x0022: INVOKE  (r0 I:int A[D('lastKnownId' int)]) = (r4 I:android.view.View A[D('view' android.view.View)]) type: VIRTUAL call: android.view.View.getId():int A[MD:():int (c)] (LINE:4008)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0004|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0004|LOOP_END\lSYNTHETIC\lLOOP:0: B:24:0x0004\-\>B:39:0x0004\l}"];
Node_40 [shape=record,label="{40\:\ 0x0004|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0027|RETURN\l|0x0027: RETURN  (r0 I:int A[D('lastKnownId' int)])  (LINE:4011)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.RecyclerView.getDeepestFocusedViewWithId((r3 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:32:0x0022 \-\> B:24:0x0004, BACK_EDGE: B:31:0x0020 \-\> B:24:0x0004, CROSS_EDGE: B:27:0x000c \-\> B:34:0x0027, CROSS_EDGE: B:25:0x0008 \-\> B:34:0x0027\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001f\-0x0026: r1 'id' I\l  0x0004\-0x0027: r0 'lastKnownId' I\l  \-1 \-0x0027: r4 'view' Landroid\/view\/View;\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_37;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_35[style=dashed];
Node_31 -> Node_40;
Node_35 -> Node_32;
Node_32 -> Node_41;
Node_41 -> Node_39;
Node_39 -> Node_24;
Node_40 -> Node_39;
Node_36 -> Node_34;
Node_34 -> Node_22;
Node_38 -> Node_34;
Node_37 -> Node_34;
}

