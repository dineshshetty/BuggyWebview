digraph "CFG forandroidx.recyclerview.widget.RecyclerView.onPointerUp(Landroid\/view\/MotionEvent;)V" {
subgraph cluster_Region_2055344255 {
label = "R(2:1|(1:(2:3|5)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|int int r0 = r5.getActionIndex()\l}"];
subgraph cluster_Region_2133793490 {
label = "R(1:(2:3|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_302210094 {
label = "IF [B:13:0x000a] THEN: R(2:3|5) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000a|if (r5.getPointerId(r0) == r4.mScrollPointerId) goto L3\l}"];
subgraph cluster_Region_549175366 {
label = "R(2:3|5)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000c|int r1 = r0 == 0 ? 1 : 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0011|PHI: r1 \l  PHI: (r1v2 'newIndex' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r4.mScrollPointerId = r5.getPointerId(r1)\lint int r2 = (int) (r5.getX(r1) + 0.5f)\lr4.mLastTouchX = r2\lr4.mInitialTouchX = r2\lint int r2 = (int) (r5.getY(r1) + 0.5f)\lr4.mLastTouchY = r2\lr4.mInitialTouchY = r2\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000e}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002d|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0010}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.RecyclerView.onPointerUp((r4v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r5v0 'e' android.view.MotionEvent A[D('e' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0010 \-\> B:17:0x0011, CROSS_EDGE: B:13:0x000a \-\> B:18:0x002d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_15 -> Node_17;
Node_18 -> Node_11;
Node_16 -> Node_17;
Node_19 -> Node_11;
}

