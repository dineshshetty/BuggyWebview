digraph "CFG forandroidx.recyclerview.widget.RecyclerView.computeVerticalScrollOffset()I" {
subgraph cluster_Region_1988090565 {
label = "R(2:1|(2:(1:8)|(1:9)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$LayoutManager androidx.recyclerview.widget.RecyclerView.LayoutManager r0 = r2.mLayout\l}"];
subgraph cluster_Region_1722039241 {
label = "R(2:(1:8)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1750475496 {
label = "IF [B:13:0x0003, B:16:0x000a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0003|if (r0 != null) goto L5\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|ADDED_TO_REGION\l|if (r0.canScrollVertically() == true) goto L7\l}"];
subgraph cluster_Region_81203934 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0014|RETURN\lORIG_RETURN\l|return r2.mLayout.computeVerticalScrollOffset(r2.mState)\l}"];
}
}
subgraph cluster_Region_20151204 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0005|RETURN\lADDED_TO_REGION\l|return 0\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0006}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000c}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.RecyclerView.computeVerticalScrollOffset((r2v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:18:0x0014 \-\> B:11:?, CROSS_EDGE: B:16:0x000a \-\> B:18:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.computeVerticalScrollOffset():int\}, androidx.core.view.ScrollingView.computeVerticalScrollOffset():int]\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_11;
Node_19 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

