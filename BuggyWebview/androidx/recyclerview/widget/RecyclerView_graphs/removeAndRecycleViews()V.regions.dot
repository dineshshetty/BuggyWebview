digraph "CFG forandroidx.recyclerview.widget.RecyclerView.removeAndRecycleViews()V" {
subgraph cluster_Region_540610539 {
label = "R(5:1|(1:3)|4|(1:6)|7)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$ItemAnimator androidx.recyclerview.widget.RecyclerView.ItemAnimator r0 = r2.mItemAnimator\l}"];
subgraph cluster_IfRegion_1306577433 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_1414673274 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|r0.endAnimations()\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0007|androidx.recyclerview.widget.RecyclerView$LayoutManager androidx.recyclerview.widget.RecyclerView.LayoutManager r0 = r2.mLayout\l}"];
subgraph cluster_IfRegion_1116419205 {
label = "IF [B:16:0x0009] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0009|if (r0 != null) goto L6\l}"];
subgraph cluster_Region_707079528 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000b|r0.removeAndRecycleAllViews(r2.mRecycler)\lr2.mLayout.removeAndRecycleScrapInt(r2.mRecycler)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0017|r2.mRecycler.clear()\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x001c}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.removeAndRecycleViews((r2v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:16:0x0009 \-\> B:18:0x0017, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_19 -> Node_11;
}

