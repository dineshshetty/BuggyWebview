digraph "CFG forandroidx.recyclerview.widget.RecyclerView.scrollBy(II)V" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayout androidx.recyclerview.widget.RecyclerView$LayoutManager  (LINE:1801)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x000c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|0x0004: CONST_STR  (r0 I:java.lang.String) =  \"RecyclerView\"  (LINE:1802)\l0x0006: CONST_STR  (r1 I:java.lang.String) =  \"Cannot scroll without a LayoutManager set. Call setLayoutManager with a non\-null argument.\" \l0x0008: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|RETURN\l|0x000b: RETURN    (LINE:1804)\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: IGET  (r1 I:boolean) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayoutSuppressed boolean  (LINE:1806)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0011 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|RETURN\l|0x0010: RETURN    (LINE:1807)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: INVOKE  (r0 I:boolean) = (r0 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean A[MD:():boolean (m)] (LINE:1809)\l0x0015: IGET  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r5 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayout androidx.recyclerview.widget.RecyclerView$LayoutManager  (LINE:1810)\l0x0017: INVOKE  (r1 I:boolean) = (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollVertically():boolean A[MD:():boolean (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x001b|0x001b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollHorizontal' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x001f  (LINE:1811)\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|0x001d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:? \l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|0x002c: RETURN   A[SYNTHETIC] (LINE:1814)\l}"];
Node_33 [shape=record,label="{33\:\ 0x001f|0x001f: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1812)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0020|0x0020: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0024 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0022|0x0022: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('x' int)]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0025|0x0025: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0028 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|0x0027: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' int)]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x0028|0x0028: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0029: INVOKE  (r5 I:androidx.recyclerview.widget.RecyclerView), (r3 I:int), (r2 I:int), (r4 I:android.view.MotionEvent) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.scrollByInternal(int, int, android.view.MotionEvent):boolean A[MD:(int, int, android.view.MotionEvent):boolean (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x002c|RETURN\lORIG_RETURN\l|0x002c: RETURN    (LINE:1814)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0024|0x0024: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.scrollBy((r5 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x0010 \-\> B:22:?, CROSS_EDGE: B:40:0x002c \-\> B:22:?, CROSS_EDGE: B:37:0x0025 \-\> B:39:0x0028, CROSS_EDGE: B:36:0x0024 \-\> B:37:0x0025, CROSS_EDGE: B:32:0x001d \-\> B:40:0x002c, CROSS_EDGE: B:31:0x001b \-\> B:33:0x001f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0015\-0x002c: r0 'canScrollHorizontal' Z\l  0x001b\-0x002c: r1 'canScrollVertical' Z\l  \-1 \-0x002c: r6 'x' I\l  \-1 \-0x002c: r7 'y' I\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.scrollBy(int, int):void\}]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_22;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_41;
Node_41 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_22;
Node_36 -> Node_37;
}

