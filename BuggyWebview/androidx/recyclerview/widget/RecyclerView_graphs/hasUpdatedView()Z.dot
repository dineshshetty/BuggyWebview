digraph "CFG forandroidx.recyclerview.widget.RecyclerView.hasUpdatedView()Z" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|int r0 = r4.mChildHelper.getChildCount()\lr1 = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|LOOP_START\lLOOP:0: B:24:0x0007\-\>B:34:0x0024\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v3 'i' int) binds: [B:23:0x0000, B:34:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L16\l}"];
Node_25 [shape=record,label="{25\:\ 0x0009|androidx.recyclerview.widget.RecyclerView$ViewHolder r2 = getChildViewHolderInt(r4.mChildHelper.getChildAt(r1))\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|if (r2 == null) goto L15\l}"];
Node_27 [shape=record,label="{27\:\ 0x0015}"];
Node_28 [shape=record,label="{28\:\ 0x0019|if (r2.shouldIgnore() == false) goto L7\l}"];
Node_30 [shape=record,label="{30\:\ 0x001c}"];
Node_31 [shape=record,label="{31\:\ 0x0020|if (r2.isUpdated() == false) goto L12\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0022|RETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_40 [shape=record,label="{40\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|LOOP_END\lLOOP:0: B:24:0x0007\-\>B:34:0x0024\l|int r1 = r1 + 1\l}"];
Node_41 [shape=record,label="{41\:\ 0x0024|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0024|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0027|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0027|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean androidx.recyclerview.widget.RecyclerView.hasUpdatedView((r4v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:34:0x0024 \-\> B:24:0x0007, CROSS_EDGE: B:28:0x0019 \-\> B:34:0x0024, CROSS_EDGE: B:26:0x0013 \-\> B:34:0x0024, CROSS_EDGE: B:36:0x0028 \-\> B:22:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_38;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_41[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_37[style=dashed];
Node_31 -> Node_40;
Node_37 -> Node_32;
Node_32 -> Node_22;
Node_40 -> Node_34;
Node_34 -> Node_24;
Node_41 -> Node_34;
Node_39 -> Node_34;
Node_38 -> Node_35;
Node_35 -> Node_22;
}

