digraph "CFG forandroidx.recyclerview.widget.RecyclerView.scrollBy(II)V" {
subgraph cluster_Region_759944797 {
label = "R(2:1|(1:3)(1:(0)(2:9|(1:(1:18)))))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$LayoutManager androidx.recyclerview.widget.RecyclerView.LayoutManager r0 = r5.mLayout\l}"];
subgraph cluster_IfRegion_1463661984 {
label = "IF [B:24:0x0002] THEN: R(1:3) ELSE: R(1:(0)(2:9|(1:(1:18))))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0002|if (r0 == null) goto L3\l}"];
subgraph cluster_Region_468523461 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0004|android.util.Log.e(androidx.recyclerview.widget.RecyclerView.TAG, \"Cannot scroll without a LayoutManager set. Call setLayoutManager with a non\-null argument.\")\l}"];
}
subgraph cluster_Region_912833661 {
label = "R(1:(0)(2:9|(1:(1:18)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_388746769 {
label = "IF [B:28:0x000e] THEN: R(0) ELSE: R(2:9|(1:(1:18))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x000e|if (r5.mLayoutSuppressed != false) goto L8\l}"];
subgraph cluster_Region_1009019426 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1252347660 {
label = "R(2:9|(1:(1:18)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0011|boolean boolean r0 = r0.canScrollHorizontally()\lboolean boolean r1 = r5.mLayout.canScrollVertically()\l}"];
subgraph cluster_Region_1341423442 {
label = "R(1:(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_112273777 {
label = "IF [B:31:0x001b, B:32:0x001d] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x001b|if (r0 != false) goto L13\l}"];
Node_32 [shape=record,label="{32\:\ 0x001d|ADDED_TO_REGION\l|if (r1 != false) goto L13\l}"];
subgraph cluster_Region_1975250628 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0028|PHI: r2 \l  PHI: (r2v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|scrollByInternal(r0 ? r6 : 0, r1 ? r7 : 0, null)\l}"];
}
}
}
}
}
}
}
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x000b}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x000c}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0010}"];
Node_41 [shape=record,color=red,label="{41\:\ ?|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x001f}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0020}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0022}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0025|PHI: r3 \l  PHI: (r3v1 int A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0027}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x002c|ORIG_RETURN\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0024}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.scrollBy((r5v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r6v0 'x' int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'y' int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:29:0x0010 \-\> B:22:?, CROSS_EDGE: B:40:0x002c \-\> B:22:?, CROSS_EDGE: B:37:0x0025 \-\> B:39:0x0028, CROSS_EDGE: B:36:0x0024 \-\> B:37:0x0025, CROSS_EDGE: B:32:0x001d \-\> B:40:0x002c, CROSS_EDGE: B:31:0x001b \-\> B:33:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.scrollBy(int, int):void\}]\l}"];
MethodNode -> Node_21;Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_27[style=dashed];
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_32 -> Node_41[style=dashed];
Node_39 -> Node_40;
Node_21 -> Node_23;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_29 -> Node_22;
Node_41 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_40 -> Node_22;
Node_36 -> Node_37;
}

