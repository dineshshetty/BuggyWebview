digraph "CFG forandroidx.recyclerview.widget.RecyclerView.setScrollState(I)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r1 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mScrollState int  (LINE:1539)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0005 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|RETURN\l|0x0004: RETURN    (LINE:1540)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: IPUT  (r2 I:int A[D('state' int)]), (r1 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mScrollState int  (LINE:1546)\l0x0007: CONST  (r0 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char])  (LINE:1547)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0008|0x0008: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) == (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000d \l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|0x000a: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView) type: DIRECT call: androidx.recyclerview.widget.RecyclerView.stopScrollersInternal():void A[MD:():void (m)] (LINE:1548)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d|0x000d: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView), (r2 I:int A[D('state' int)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.dispatchOnScrollStateChanged(int):void A[MD:(int):void (m)] (LINE:1550)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0010|RETURN\l|0x0010: RETURN    (LINE:1551)\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.setScrollState((r1 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('state' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0010 \-\> B:11:?, CROSS_EDGE: B:16:0x0008 \-\> B:18:0x000d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0010: r2 'state' I\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
}

