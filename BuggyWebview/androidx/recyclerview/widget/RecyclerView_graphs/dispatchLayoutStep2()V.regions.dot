digraph "CFG forandroidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2()V" {
subgraph cluster_Region_302515571 {
label = "R(2:1|6)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0000|startInterceptRequestLayout()\lonEnterLayoutOrScroll()\lr4.mState.assertLayoutStep(6)\lr4.mAdapterHelper.consumeUpdatesInOnePass()\lr4.mState.mItemCount = r4.mAdapter.getItemCount()\lr4.mState.mDeletedInvisibleItemCountSincePreviousLayout = 0\lr4.mState.mInPreLayout = false\lr4.mLayout.onLayoutChildren(r4.mRecycler, r4.mState)\lr4.mState.mStructureChanged = false\lr4.mPendingSavedState = null\landroidx.recyclerview.widget.RecyclerView$State androidx.recyclerview.widget.RecyclerView.State r0 = r4.mState\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|PHI: r2 \l  PHI: (r2v3 boolean A[REMOVE]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r0.mRunSimpleAnimations = r0.mRunSimpleAnimations && r4.mItemAnimator != null\lr4.mState.mLayoutStep = 4\lonExitLayoutOrScroll()\lstopInterceptRequestLayout(false)\l}"];
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0038}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003c|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x004e}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0040}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2((r4v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0040 \-\> B:18:0x0041, CROSS_EDGE: B:13:0x0038 \-\> B:17:0x0040\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_12 -> Node_13;
Node_18 -> Node_19;
Node_10 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

