digraph "CFG forandroidx.recyclerview.widget.RecyclerView.fling(II)Z" {
Node_43 [shape=record,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayout androidx.recyclerview.widget.RecyclerView$LayoutManager  (LINE:2438)\l0x0002: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x000d \l}"];
Node_47 [shape=record,label="{47\:\ 0x0005|0x0005: CONST_STR  (r0 I:java.lang.String) =  \"RecyclerView\"  (LINE:2439)\l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"Cannot fling without a LayoutManager set. Call setLayoutManager with a non\-null argument.\" \l0x0009: INVOKE  (r0 I:java.lang.String), (r2 I:java.lang.String) type: STATIC call: android.util.Log.e(java.lang.String, java.lang.String):int A[MD:(java.lang.String, java.lang.String):int (c)]\l}"];
Node_48 [shape=record,label="{48\:\ 0x000c|RETURN\l|0x000c: RETURN  (r1 I:boolean)  (LINE:2441)\l}"];
Node_44 [shape=record,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ 0x000d|0x000d: IGET  (r2 I:boolean) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayoutSuppressed boolean  (LINE:2443)\l}"];
Node_50 [shape=record,label="{50\:\ 0x000f|0x000f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0012 \l}"];
Node_51 [shape=record,label="{51\:\ 0x0011|RETURN\l|0x0011: RETURN  (r1 I:boolean)  (LINE:2444)\l}"];
Node_52 [shape=record,label="{52\:\ 0x0012|0x0012: INVOKE  (r0 I:boolean) = (r0 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean A[MD:():boolean (m)] (LINE:2447)\l0x0016: IGET  (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mLayout androidx.recyclerview.widget.RecyclerView$LayoutManager  (LINE:2448)\l0x0018: INVOKE  (r2 I:boolean) = (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollVertically():boolean A[MD:():boolean (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x001c|0x001c: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0026  (LINE:2450)\l}"];
Node_54 [shape=record,label="{54\:\ 0x001e|0x001e: INVOKE  (r3 I:int) = (r8 I:int A[D('velocityX' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0022: IGET  (r4 I:int) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mMinFlingVelocity int \l}"];
Node_55 [shape=record,label="{55\:\ 0x0024|0x0024: IF  (r3 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:57:0x0027 \l}"];
Node_57 [shape=record,label="{57\:\ 0x0027|0x0027: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x0031  (LINE:2453)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0029|0x0029: INVOKE  (r3 I:int) = (r9 I:int A[D('velocityY' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x002d: IGET  (r4 I:int) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mMinFlingVelocity int \l}"];
Node_59 [shape=record,label="{59\:\ 0x002f|0x002f: IF  (r3 I:??[int, byte, short, char]) \>= (r4 I:??[int, byte, short, char])  \-\> B:61:0x0032 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0032|0x0032: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('velocityX' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0037  (LINE:2456)\l}"];
Node_62 [shape=record,label="{62\:\ 0x0034|0x0034: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('velocityY' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0037 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0036|RETURN\l|0x0036: RETURN  (r1 I:boolean)  (LINE:2458)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0037|0x0037: CAST (r3 I:float) = (float) (r8 I:int A[D('velocityX' int)])  (LINE:2461)\l0x0038: CAST (r4 I:float) = (float) (r9 I:int A[D('velocityY' int)]) \l0x0039: INVOKE  (r3 I:boolean) = (r7 I:androidx.recyclerview.widget.RecyclerView), (r3 I:float), (r4 I:float) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.dispatchNestedPreFling(float, float):boolean A[MD:(float, float):boolean (m)]\l}"];
Node_65 [shape=record,label="{65\:\ 0x003d|0x003d: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x0082 \l}"];
Node_66 [shape=record,label="{66\:\ 0x003f|0x003f: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:2462)\l}"];
Node_67 [shape=record,label="{67\:\ 0x0040|0x0040: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollHorizontal' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0047 \l}"];
Node_68 [shape=record,label="{68\:\ 0x0042|0x0042: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x0045 \l}"];
Node_70 [shape=record,label="{70\:\ 0x0045|0x0045: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x0048|0x0048: CAST (r5 I:float) = (float) (r8 I:int A[D('velocityX' int)])  (LINE:2463)\l0x0049: CAST (r6 I:float) = (float) (r9 I:int A[D('velocityY' int)]) \l0x004a: INVOKE  (r7 I:androidx.recyclerview.widget.RecyclerView), (r5 I:float), (r6 I:float), (r4 I:boolean A[D('canScroll' boolean)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.dispatchNestedFling(float, float, boolean):boolean A[MD:(float, float, boolean):boolean (m)]\l0x004d: IGET  (r5 I:androidx.recyclerview.widget.RecyclerView$OnFlingListener) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mOnFlingListener androidx.recyclerview.widget.RecyclerView$OnFlingListener  (LINE:2465)\l}"];
Node_73 [shape=record,label="{73\:\ 0x004f|0x004f: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0058 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0051|0x0051: INVOKE  (r5 I:boolean) = \l  (r5 I:androidx.recyclerview.widget.RecyclerView$OnFlingListener)\l  (r8 I:int A[D('velocityX' int)])\l  (r9 I:int A[D('velocityY' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.OnFlingListener.onFling(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_75 [shape=record,label="{75\:\ 0x0055|0x0055: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:77:0x0058 \l}"];
Node_76 [shape=record,label="{76\:\ 0x0057|RETURN\l|0x0057: RETURN  (r3 I:boolean)  (LINE:2466)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0058|0x0058: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScroll' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:85:0x0082  (LINE:2469)\l}"];
Node_78 [shape=record,label="{78\:\ 0x005a|0x005a: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2470)\l}"];
Node_79 [shape=record,label="{79\:\ 0x005b|0x005b: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollHorizontal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x005f  (LINE:2471)\l}"];
Node_80 [shape=record,label="{80\:\ 0x005d|0x005d: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('nestedScrollAxis' int)]) \| (1 ??[boolean, int, float, short, byte, char])  (LINE:2472)\l}"];
Node_81 [shape=record,label="{81\:\ 0x005f|0x005f: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canScrollVertical' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:83:0x0063  (LINE:2474)\l}"];
Node_82 [shape=record,label="{82\:\ 0x0061|0x0061: ARITH  (r1 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('nestedScrollAxis' int)]) \| (2 ??[int, float, short, byte, char])  (LINE:2475)\l}"];
Node_83 [shape=record,label="{83\:\ 0x0063|0x0063: INVOKE  (r7 I:androidx.recyclerview.widget.RecyclerView), (r1 I:int A[D('nestedScrollAxis' int)]), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.startNestedScroll(int, int):boolean A[MD:(int, int):boolean (m)] (LINE:2477)\l0x0066: IGET  (r5 I:int) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mMaxFlingVelocity int  (LINE:2479)\l0x0068: NEG  (r6 I:int) = (r5 I:int) \l0x0069: INVOKE  (r5 I:int) = (r8 I:int A[D('velocityX' int)]), (r5 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x006d: INVOKE  (r8 I:int A[D('velocityX' int)]) = (r6 I:int), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0071: IGET  (r5 I:int) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mMaxFlingVelocity int  (LINE:2480)\l0x0073: NEG  (r6 I:int) = (r5 I:int) \l0x0074: INVOKE  (r5 I:int) = (r9 I:int A[D('velocityY' int)]), (r5 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0078: INVOKE  (r9 I:int A[D('velocityY' int)]) = (r6 I:int), (r5 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x007c: IGET  (r5 I:androidx.recyclerview.widget.RecyclerView$ViewFlinger) = (r7 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mViewFlinger androidx.recyclerview.widget.RecyclerView$ViewFlinger  (LINE:2481)\l0x007e: INVOKE  \l  (r5 I:androidx.recyclerview.widget.RecyclerView$ViewFlinger)\l  (r8 I:int A[D('velocityX' int)])\l  (r9 I:int A[D('velocityY' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ViewFlinger.fling(int, int):void A[MD:(int, int):void (m)]\l}"];
Node_84 [shape=record,label="{84\:\ 0x0081|RETURN\l|0x0081: RETURN  (r3 I:boolean)  (LINE:2482)\l}"];
Node_71 [shape=record,label="{71\:\ 0x0047|0x0047: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_85 [shape=record,label="{85\:\ 0x0082|RETURN\l|0x0082: RETURN  (r1 I:boolean A[D('nestedScrollAxis' int)])  (LINE:2485)\l}"];
Node_60 [shape=record,label="{60\:\ 0x0031|0x0031: CONST  (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('velocityY' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2454)\l}"];
Node_56 [shape=record,label="{56\:\ 0x0026|0x0026: CONST  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('velocityX' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:2451)\l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.RecyclerView.fling((r7 'this' I:androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('velocityX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('velocityY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:51:0x0011 \-\> B:44:?, CROSS_EDGE: B:63:0x0036 \-\> B:44:?, CROSS_EDGE: B:76:0x0057 \-\> B:44:?, CROSS_EDGE: B:84:0x0081 \-\> B:44:?, CROSS_EDGE: B:81:0x005f \-\> B:83:0x0063, CROSS_EDGE: B:79:0x005b \-\> B:81:0x005f, CROSS_EDGE: B:85:0x0082 \-\> B:44:?, CROSS_EDGE: B:73:0x004f \-\> B:77:0x0058, CROSS_EDGE: B:71:0x0047 \-\> B:72:0x0048, CROSS_EDGE: B:67:0x0040 \-\> B:71:0x0047, CROSS_EDGE: B:65:0x003d \-\> B:85:0x0082, CROSS_EDGE: B:61:0x0032 \-\> B:64:0x0037, CROSS_EDGE: B:59:0x002f \-\> B:61:0x0032, CROSS_EDGE: B:57:0x0027 \-\> B:60:0x0031, CROSS_EDGE: B:55:0x0024 \-\> B:57:0x0027, CROSS_EDGE: B:53:0x001c \-\> B:56:0x0026\lINLINE_NOT_NEEDED\lDebug Info:\l  0x005b\-0x0082: r1 'nestedScrollAxis' I\l  0x0048\-0x0082: r4 'canScroll' Z\l  0x0016\-0x0082: r0 'canScrollHorizontal' Z\l  0x001c\-0x0082: r2 'canScrollVertical' Z\l  \-1 \-0x0082: r8 'velocityX' I\l  \-1 \-0x0082: r9 'velocityY' I\l}"];
MethodNode -> Node_43;Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_44;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_44;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_60;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_64;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_44;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_85;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_71;
Node_68 -> Node_70;
Node_68 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_77;
Node_74 -> Node_75;
Node_75 -> Node_76[style=dashed];
Node_75 -> Node_77;
Node_76 -> Node_44;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_85;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_81;
Node_81 -> Node_82[style=dashed];
Node_81 -> Node_83;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_44;
Node_71 -> Node_72;
Node_85 -> Node_44;
Node_60 -> Node_61;
Node_56 -> Node_57;
}

