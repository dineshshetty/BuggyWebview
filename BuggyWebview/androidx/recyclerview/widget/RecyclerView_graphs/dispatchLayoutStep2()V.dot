digraph "CFG forandroidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2()V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|startInterceptRequestLayout()\lonEnterLayoutOrScroll()\lr4.mState.assertLayoutStep(6)\lr4.mAdapterHelper.consumeUpdatesInOnePass()\landroidx.recyclerview.widget.RecyclerView$State r0 = r4.mState\lr0.mItemCount = r4.mAdapter.getItemCount()\lr4.mState.mDeletedInvisibleItemCountSincePreviousLayout = 0\lr4.mState.mInPreLayout = false\lr4.mLayout.onLayoutChildren(r4.mRecycler, r4.mState)\lr4.mState.mStructureChanged = false\lr4.mPendingSavedState = null\landroidx.recyclerview.widget.RecyclerView$State r0 = r4.mState\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|if (r0.mRunSimpleAnimations == false) goto L9\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a}"];
Node_15 [shape=record,label="{15\:\ 0x003c|if (r4.mItemAnimator == null) goto L9\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|r2 = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|PHI: r2 \l  PHI: (r2v3 boolean) = (r2v2 boolean), (r2v6 boolean) binds: [B:17:0x0040, B:16:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r0.mRunSimpleAnimations = r2\lr4.mState.mLayoutStep = 4\lonExitLayoutOrScroll()\lstopInterceptRequestLayout(false)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|r2 = false\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.RecyclerView.dispatchLayoutStep2((r4v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:17:0x0040 \-\> B:18:0x0041, CROSS_EDGE: B:13:0x0038 \-\> B:17:0x0040\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_17 -> Node_18;
}

