digraph "CFG forandroidx.recyclerview.widget.RecyclerView.setClipToPadding(Z)V" {
subgraph cluster_Region_2057594400 {
label = "R(3:(1:3)|4|(1:(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_893208621 {
label = "IF [B:13:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0002|if (r2 != r1.mClipToPadding) goto L3\l}"];
subgraph cluster_Region_117293884 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0004|invalidateGlows()\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0007|r1.mClipToPadding = r2\lsuper.setClipToPadding(r2)\l}"];
subgraph cluster_Region_1568928767 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_80681737 {
label = "IF [B:16:0x000e] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x000e|if (r1.mFirstLayoutComplete != false) goto L6\l}"];
subgraph cluster_Region_1542211485 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0010|requestLayout()\l}"];
}
}
}
}
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0000}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0013|ORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.setClipToPadding((r1v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r2v0 'clipToPadding' boolean A[D('clipToPadding' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:16:0x000e \-\> B:18:0x0013, CROSS_EDGE: B:13:0x0002 \-\> B:15:0x0007\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.setClipToPadding(boolean):void\}]\l}"];
MethodNode -> Node_10;Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

