digraph "CFG forandroidx.recyclerview.widget.RecyclerView.onAttachedToWindow()V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|super.onAttachedToWindow()\lr5.mLayoutOrScrollCounter = 0\lr1 = true\lr5.mIsAttached = true\l}"];
Node_28 [shape=record,label="{28\:\ 0x000b|if (r5.mFirstLayoutComplete == false) goto L23\l}"];
Node_29 [shape=record,label="{29\:\ 0x000d}"];
Node_30 [shape=record,label="{30\:\ 0x0011|if (isLayoutRequested() != false) goto L23\l}"];
Node_33 [shape=record,label="{33\:\ 0x0015|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v0 boolean) binds: [B:32:0x0014, B:30:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r5.mFirstLayoutComplete = r1\landroidx.recyclerview.widget.RecyclerView$LayoutManager r1 = r5.mLayout\l}"];
Node_34 [shape=record,label="{34\:\ 0x0019|if (r1 == null) goto L8\l}"];
Node_35 [shape=record,label="{35\:\ 0x001b|r1.dispatchAttachedToWindow(r5)\l}"];
Node_36 [shape=record,label="{36\:\ 0x001e|r5.mPostedAnimatorRunner = false\l}"];
Node_37 [shape=record,label="{37\:\ 0x0022|if (androidx.recyclerview.widget.RecyclerView.ALLOW_THREAD_GAP_WORK == false) goto L22\l}"];
Node_38 [shape=record,label="{38\:\ 0x0024|androidx.recyclerview.widget.GapWorker r0 = androidx.recyclerview.widget.GapWorker.sGapWorker.get()\lr5.mGapWorker = r0\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|if (r0 != null) goto L19\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|r5.mGapWorker = new androidx.recyclerview.widget.GapWorker()\landroid.view.Display r0 = androidx.core.view.ViewCompat.getDisplay(r5)\lr1 = 60.0f\l}"];
Node_41 [shape=record,label="{41\:\ 0x0041|if (isInEditMode() != false) goto L18\l}"];
Node_42 [shape=record,label="{42\:\ 0x0043|if (r0 == null) goto L18\l}"];
Node_43 [shape=record,label="{43\:\ 0x0045|float r2 = r0.getRefreshRate()\l}"];
Node_44 [shape=record,label="{44\:\ 0x004d|if ((r2 \> 30.0f ? 1 : (r2 == 30.0f ? 0 : \-1)) \< 0) goto L18\l}"];
Node_45 [shape=record,label="{45\:\ 0x004f|r1 = r2\l}"];
Node_46 [shape=record,label="{46\:\ 0x0050|PHI: r1 \l  PHI: (r1v5 'refreshRate' float) = (r1v4 'refreshRate' float), (r1v4 'refreshRate' float), (r1v4 'refreshRate' float), (r1v6 'refreshRate' float) binds: [B:41:0x0041, B:42:0x0043, B:44:0x004d, B:45:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|long r3 = (long) (1.0E9f \/ r1)\lr5.mGapWorker.mFrameIntervalNs = r3\landroidx.recyclerview.widget.GapWorker.sGapWorker.set(r5.mGapWorker)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0060|r5.mGapWorker.add(r5)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0065|RETURN\lORIG_RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|r1 = false\l}"];
MethodNode[shape=record,label="{protected void androidx.recyclerview.widget.RecyclerView.onAttachedToWindow((r5v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:44:0x004d \-\> B:46:0x0050, CROSS_EDGE: B:42:0x0043 \-\> B:46:0x0050, CROSS_EDGE: B:41:0x0041 \-\> B:46:0x0050, CROSS_EDGE: B:39:0x002e \-\> B:47:0x0060, CROSS_EDGE: B:37:0x0022 \-\> B:48:0x0065, CROSS_EDGE: B:34:0x0019 \-\> B:36:0x001e, CROSS_EDGE: B:30:0x0011 \-\> B:33:0x0015, CROSS_EDGE: B:28:0x000b \-\> B:32:0x0014\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.View.onAttachedToWindow():void\}]\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_33[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_49;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_26;
Node_49 -> Node_26;
Node_32 -> Node_33;
}

