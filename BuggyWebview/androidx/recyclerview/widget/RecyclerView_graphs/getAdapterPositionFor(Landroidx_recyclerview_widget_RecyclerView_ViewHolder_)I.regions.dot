digraph "CFG forandroidx.recyclerview.widget.RecyclerView.getAdapterPositionFor(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;)I" {
subgraph cluster_Region_649692746 {
label = "R(1:(2:(1:8)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1304051777 {
label = "R(2:(1:8)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1439529360 {
label = "IF [B:15:0x0006, B:17:0x000c] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0006|if (r3.hasAnyOfTheFlags(524) != false) goto L9\l}"];
Node_17 [shape=record,label="{17\:\ 0x000c|ADDED_TO_REGION\l|if (r3.isBound() == false) goto L8\l}"];
subgraph cluster_Region_817414782 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1515821557 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0017|RETURN\l|return r2.mAdapterHelper.applyPendingUpdatesToPosition(r3.mPosition)\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0000}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0008}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0018|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return \-1\l}"];
MethodNode[shape=record,label="{int androidx.recyclerview.widget.RecyclerView.getAdapterPositionFor((r2v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r3v0 'viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x0019 \-\> B:13:?, CROSS_EDGE: B:15:0x0006 \-\> B:21:0x0018\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_23;
Node_23 -> Node_13;
Node_20 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_21 -> Node_13;
}

