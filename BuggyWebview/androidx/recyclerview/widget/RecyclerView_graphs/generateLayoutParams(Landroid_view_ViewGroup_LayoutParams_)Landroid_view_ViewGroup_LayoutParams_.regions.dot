digraph "CFG forandroidx.recyclerview.widget.RecyclerView.generateLayoutParams(Landroid\/view\/ViewGroup$LayoutParams;)Landroid\/view\/ViewGroup$LayoutParams;" {
subgraph cluster_Region_2104845049 {
label = "R(2:1|(2:(2:6|7)|(1:4)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$LayoutManager androidx.recyclerview.widget.RecyclerView.LayoutManager r0 = r3.mLayout\l}"];
subgraph cluster_Region_1005848998 {
label = "R(2:(2:6|7)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1162863930 {
label = "IF [B:11:0x0002] THEN: R(2:6|7) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if (r0 == null) goto L6\l}"];
subgraph cluster_Region_926648934 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0009}"];
Node_15 [shape=record,label="{15\:\ 0x0023|throw new java.lang.IllegalStateException(\"RecyclerView has no LayoutManager\" + exceptionLabel())\l}"];
}
}
subgraph cluster_Region_501669872 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0008|RETURN\l|return r0.generateLayoutParams(r4)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0004}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{protected android.view.ViewGroup$LayoutParams androidx.recyclerview.widget.RecyclerView.generateLayoutParams((r3v0 'this' androidx.recyclerview.widget.RecyclerView A[IMMUTABLE_TYPE, THIS]), (r4v0 'p' android.view.ViewGroup$LayoutParams A[D('p' android.view.ViewGroup$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lCROSS_EDGE: B:15:0x0023 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [ClspMth\{android.view.ViewGroup.generateLayoutParams(android.view.ViewGroup$LayoutParams):android.view.ViewGroup$LayoutParams\}]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_9;
Node_8 -> Node_10;
Node_12 -> Node_13;
}

