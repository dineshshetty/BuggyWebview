digraph "CFG forandroidx.recyclerview.widget.ItemTouchHelper.updateDxDy(Landroid\/view\/MotionEvent;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|float r0 = r6.getX(r8)\lfloat r1 = r6.getY(r8)\lfloat r2 = r0 \- r5.mInitialTouchX\lr5.mDx = r2\lr5.mDy = r1 \- r5.mInitialTouchY\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if ((r7 & 4) != 0) goto L4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|r5.mDx = java.lang.Math.max(0.0f, r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if ((r7 & 8) != 0) goto L7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|r5.mDx = java.lang.Math.min(0.0f, r5.mDx)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b}"];
Node_9 [shape=record,label="{9\:\ 0x002d|if ((r7 & 1) != 0) goto L10\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|r5.mDy = java.lang.Math.max(0.0f, r5.mDy)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037}"];
Node_12 [shape=record,label="{12\:\ 0x0039|if ((r7 & 2) != 0) goto L15\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|r5.mDy = java.lang.Math.min(0.0f, r5.mDy)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.ItemTouchHelper.updateDxDy((r5v0 'this' androidx.recyclerview.widget.ItemTouchHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 'ev' android.view.MotionEvent A[D('ev' android.view.MotionEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'directionFlags' int A[D('directionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'pointerIndex' int A[D('pointerIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0039 \-\> B:14:0x0043, CROSS_EDGE: B:9:0x002d \-\> B:11:0x0037, CROSS_EDGE: B:6:0x0021 \-\> B:8:0x002b, CROSS_EDGE: B:3:0x0017 \-\> B:5:0x001f\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_1;
}

