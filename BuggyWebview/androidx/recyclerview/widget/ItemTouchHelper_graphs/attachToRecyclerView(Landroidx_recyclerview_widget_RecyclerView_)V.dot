digraph "CFG forandroidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView(Landroidx\/recyclerview\/widget\/RecyclerView;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.recyclerview.widget.RecyclerView r0 = r2.mRecyclerView\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r0 != r3) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|if (r0 == null) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|destroyCallbacks()\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|r2.mRecyclerView = r3\l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|if (r3 == null) goto L11\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|android.content.res.Resources r0 = r3.getResources()\lr2.mSwipeEscapeVelocity = r0.getDimension(androidx.recyclerview.C0417R.dimen.item_touch_helper_swipe_escape_velocity)\lr2.mMaxSwipeVelocity = r0.getDimension(androidx.recyclerview.C0417R.dimen.item_touch_helper_swipe_escape_max_velocity)\lsetupCallbacks()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|RETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.ItemTouchHelper.attachToRecyclerView((r2v0 'this' androidx.recyclerview.widget.ItemTouchHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'recyclerView' androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0025 \-\> B:1:?, CROSS_EDGE: B:8:0x000c \-\> B:10:0x0025, CROSS_EDGE: B:5:0x0005 \-\> B:7:0x000a\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_1;
}

