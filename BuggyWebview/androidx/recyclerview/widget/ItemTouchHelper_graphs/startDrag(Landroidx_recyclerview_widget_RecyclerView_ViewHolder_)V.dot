digraph "CFG forandroidx.recyclerview.widget.ItemTouchHelper.startDrag(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r3.mCallback.hasDragFlag(r3.mRecyclerView, r4) != false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|android.util.Log.e(androidx.recyclerview.widget.ItemTouchHelper.TAG, \"Start drag has been called but dragging is not enabled\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r4.itemView.getParent() == r3.mRecyclerView) goto L10\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|android.util.Log.e(androidx.recyclerview.widget.ItemTouchHelper.TAG, \"Start drag has been called with a view holder which is not a child of the RecyclerView which is controlled by this ItemTouchHelper.\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|obtainVelocityTracker()\lr3.mDy = 0.0f\lr3.mDx = 0.0f\lselect(r4, 2)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.ItemTouchHelper.startDrag((r3v0 'this' androidx.recyclerview.widget.ItemTouchHelper A[IMMUTABLE_TYPE, THIS]), (r4v0 'viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('viewHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:9:0x0021 \-\> B:1:?, CROSS_EDGE: B:11:0x002e \-\> B:1:?\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

