digraph "CFG forandroidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.ItemDelegate.saveOriginalDelegate(Landroid\/view\/View;)V" {
subgraph cluster_Region_76048201 {
label = "R(2:1|(1:(1:4)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|androidx.core.view.AccessibilityDelegateCompat androidx.core.view.AccessibilityDelegateCompat r0 = androidx.core.view.ViewCompat.getAccessibilityDelegate(r3)\l}"];
subgraph cluster_Region_1265383174 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_586644251 {
label = "IF [B:12:0x0004, B:13:0x0006] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|if (r0 != null) goto L3\l}"];
Node_13 [shape=record,label="{13\:\ 0x0006|ADDED_TO_REGION\l|if (r0 != r2) goto L4\l}"];
subgraph cluster_Region_60424886 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0008|r2.mOriginalItemDelegates.put(r3, r0)\l}"];
}
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000d|ORIG_RETURN\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.ItemDelegate.saveOriginalDelegate((r2v0 'this' androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate A[IMMUTABLE_TYPE, THIS]), (r3v0 'itemView' android.view.View A[D('itemView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x0006 \-\> B:15:0x000d, CROSS_EDGE: B:12:0x0004 \-\> B:15:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_9 -> Node_11;
Node_15 -> Node_10;
Node_17 -> Node_10;
Node_16 -> Node_10;
}

