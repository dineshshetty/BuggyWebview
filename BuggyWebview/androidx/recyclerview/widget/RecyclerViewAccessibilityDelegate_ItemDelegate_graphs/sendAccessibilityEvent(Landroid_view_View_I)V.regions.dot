digraph "CFG forandroidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.ItemDelegate.sendAccessibilityEvent(Landroid\/view\/View;I)V" {
subgraph cluster_Region_1952568622 {
label = "R(2:1|(1:3)(1:6))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0000|androidx.core.view.AccessibilityDelegateCompat androidx.core.view.AccessibilityDelegateCompat r0 = r1.mOriginalItemDelegates.get(r2)\l}"];
subgraph cluster_IfRegion_2059306962 {
label = "IF [B:11:0x0008] THEN: R(1:3) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0008|if (r0 != null) goto L3\l}"];
subgraph cluster_Region_527300982 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x000a|r0.sendAccessibilityEvent(r2, r3)\l}"];
}
subgraph cluster_Region_305132894 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x000e|super.sendAccessibilityEvent(r2, r3)\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0011|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.ItemDelegate.sendAccessibilityEvent((r1v0 'this' androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate A[IMMUTABLE_TYPE, THIS]), (r2v0 'host' android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'eventType' int A[D('eventType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000e \-\> B:14:0x0011\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View, int):void]\l}"];
MethodNode -> Node_8;Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_8 -> Node_10;
Node_15 -> Node_9;
Node_14 -> Node_9;
}

