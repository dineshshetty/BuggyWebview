digraph "CFG forandroidx.recyclerview.widget.MessageThreadUtil.MessageQueue.next()Landroidx\/recyclerview\/widget\/MessageThreadUtil$SyncQueueItem;" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MONITOR_ENTER  (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0001|SYNTHETIC\lEXC_TOP_SPLITTER\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000f, blocks: (B:20:0x0001, B:26:0x0009), top: B:32:0x0001 \}\lCatch: all \-\> 0x000f\l|0x0001: IGET  (r0 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) = (r2 I:androidx.recyclerview.widget.MessageThreadUtil$MessageQueue) androidx.recyclerview.widget.MessageThreadUtil.MessageQueue.mRoot androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem A[Catch: all \-\> 0x000f, TRY_ENTER, TRY_LEAVE] (LINE:238)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0008 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0005|0x0005: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:239)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0007|RETURN\l|0x0007: RETURN  (r0 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) \l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0008|0x0008: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r0 I:??[OBJECT, ARRAY])  (LINE:241)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0009|TRY_ENTER\lTRY_LEAVE\lTryCatch #0 \{all \-\> 0x000f, blocks: (B:20:0x0001, B:26:0x0009), top: B:32:0x0001 \}\lCatch: all \-\> 0x000f\l|0x0009: IGET  (r0 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) = (r0 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) androidx.recyclerview.widget.MessageThreadUtil.SyncQueueItem.next androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem A[Catch: all \-\> 0x000f, TRY_ENTER] (LINE:242)\l0x000b: IPUT  \l  (r0 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)\l  (r2 I:androidx.recyclerview.widget.MessageThreadUtil$MessageQueue)\l androidx.recyclerview.widget.MessageThreadUtil.MessageQueue.mRoot androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem A[Catch: all \-\> 0x000f, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000d|0x000d: MONITOR_EXIT  (r2 I:??[OBJECT, ARRAY])  (LINE:243)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|RETURN\l|0x000e: RETURN  \l  (r1 I:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem A[D('next' androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem)])\l \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lEXC_BOTTOM_SPLITTER\l}"];
Node_29 [shape=record,label="{29\:\ 0x000f|ExcHandler: all \-\> 0x000f\l|0x000f: MOVE_EXCEPTION  (r0 I:java.lang.Throwable A[CUSTOM_DECLARE]) =  A[DONT_INLINE, ExcHandler: all \-\> 0x000f] (LINE:237)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0011|0x0011: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{synchronized androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem androidx.recyclerview.widget.MessageThreadUtil.MessageQueue.next((r2 'this' I:androidx.recyclerview.widget.MessageThreadUtil$MessageQueue A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x000e \-\> B:18:?, CROSS_EDGE: B:31:0x0011 \-\> B:18:?, CROSS_EDGE: B:32:0x0001 \-\> B:29:0x000f\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0009\-0x000f: r1 'next' Landroidx\/recyclerview\/widget\/MessageThreadUtil$SyncQueueItem;\lTryCatch #0 \{all \-\> 0x000f, blocks: (B:20:0x0001, B:26:0x0009), top: B:32:0x0001 \}\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_32;
Node_32 -> Node_20;
Node_32 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_18;
Node_33 -> Node_29;
Node_29 -> Node_31;
Node_31 -> Node_18;
}

