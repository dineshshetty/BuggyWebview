digraph "CFG forandroidx.recyclerview.widget.ScrollbarHelper.computeScrollRange(Landroidx\/recyclerview\/widget\/RecyclerView$State;Landroidx\/recyclerview\/widget\/OrientationHelper;Landroid\/view\/View;Landroid\/view\/View;Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;Z)I" {
Node_19 [shape=record,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = \l  (r8 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('lm' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildCount():int A[MD:():int (m)] (LINE:82)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x003c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)]\l}"];
Node_24 [shape=record,label="{24\:\ 0x000a|0x000a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:? \l}"];
Node_25 [shape=record,label="{25\:\ 0x000c|0x000c: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startChild' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:? \l}"];
Node_26 [shape=record,label="{26\:\ 0x000e|0x000e: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('endChild' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0011 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0011|0x0011: IF  (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('smoothScrollbarEnabled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0018  (LINE:86)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0013|0x0013: INVOKE  (r0 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)] (LINE:87)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0017|RETURN\l|0x0017: RETURN  (r0 I:int) \l}"];
Node_20 [shape=record,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|0x0018: INVOKE  (r0 I:int) = \l  (r5 I:androidx.recyclerview.widget.OrientationHelper A[D('orientation' androidx.recyclerview.widget.OrientationHelper)])\l  (r7 I:android.view.View A[D('endChild' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedEnd(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:90)\l0x001c: INVOKE  (r1 I:int) = \l  (r5 I:androidx.recyclerview.widget.OrientationHelper A[D('orientation' androidx.recyclerview.widget.OrientationHelper)])\l  (r6 I:android.view.View A[D('startChild' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedStart(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:91)\l0x0020: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0021: INVOKE  (r1 I:int) = \l  (r8 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('lm' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l  (r6 I:android.view.View A[D('startChild' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:92)\l0x0025: INVOKE  (r2 I:int) = \l  (r8 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('lm' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l  (r7 I:android.view.View A[D('endChild' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:93)\l0x0029: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x002a: INVOKE  (r1 I:int) = (r1 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:92)\l0x002e: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0030: CAST (r2 I:float) = (float) (r0 I:int A[D('laidOutArea' int)])  (LINE:96)\l0x0031: CAST (r3 I:float) = (float) (r1 I:int A[D('laidOutRange' int)]) \l0x0032: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x0033: INVOKE  (r3 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)]\l0x0037: CAST (r3 I:float) = (float) (r3 I:int) \l0x0038: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) \l0x003a: CAST (r2 I:int) = (int) (r2 I:float) \l}"];
Node_32 [shape=record,label="{32\:\ 0x003b|RETURN\l|0x003b: RETURN  (r2 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|0x003c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('laidOutArea' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:84)\l0x003d: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|0x003c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('laidOutArea' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:84)\l0x003d: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|0x003c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('laidOutArea' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) A[SYNTHETIC] (LINE:84)\l0x003d: RETURN  (r0 I:int) A[SYNTHETIC]\l}"];
Node_33 [shape=record,label="{33\:\ 0x003c|RETURN\lORIG_RETURN\l|0x003c: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('laidOutArea' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:84)\l0x003d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int androidx.recyclerview.widget.ScrollbarHelper.computeScrollRange((r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:androidx.recyclerview.widget.OrientationHelper A[D('orientation' androidx.recyclerview.widget.OrientationHelper), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.view.View A[D('startChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('endChild' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('lm' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('smoothScrollbarEnabled' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:32:0x003b \-\> B:20:?, CROSS_EDGE: B:34:0x003d \-\> B:20:?, CROSS_EDGE: B:25:0x000c \-\> B:33:0x003c, CROSS_EDGE: B:24:0x000a \-\> B:33:0x003c, CROSS_EDGE: B:22:0x0004 \-\> B:33:0x003c\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0021\-0x003c: r0 'laidOutArea' I\l  0x0030\-0x003c: r1 'laidOutRange' I\l  \-1 \-0x003d: r4 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\l  \-1 \-0x003d: r5 'orientation' Landroidx\/recyclerview\/widget\/OrientationHelper;\l  \-1 \-0x003d: r6 'startChild' Landroid\/view\/View;\l  \-1 \-0x003d: r7 'endChild' Landroid\/view\/View;\l  \-1 \-0x003d: r8 'lm' Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;\l  \-1 \-0x003d: r9 'smoothScrollbarEnabled' Z\l}"];
MethodNode -> Node_19;Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_36;
Node_26 -> Node_28;
Node_26 -> Node_37[style=dashed];
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_37 -> Node_20;
Node_36 -> Node_20;
Node_35 -> Node_20;
Node_33 -> Node_20;
}

