digraph "CFG forandroidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.performAccessibilityAction(Landroid\/view\/View;ILandroid\/os\/Bundle;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (super.performAccessibilityAction(r2, r3, r4) == false) goto L5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|RETURN\l|return true\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_21 [shape=record,label="{21\:\ 0x0008}"];
Node_22 [shape=record,label="{22\:\ 0x000c|if (shouldIgnore() != false) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x000e}"];
Node_24 [shape=record,label="{24\:\ 0x0014|if (r1.mRecyclerView.getLayoutManager() == null) goto L11\l}"];
Node_25 [shape=record,label="{25\:\ 0x0016}"];
Node_26 [shape=record,label="{26\:\ 0x0020|RETURN\l|return r1.mRecyclerView.getLayoutManager().performAccessibilityAction(r3, r4)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_27 [shape=record,label="{27\:\ 0x0021|RETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate.performAccessibilityAction((r1v0 'this' androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate A[IMMUTABLE_TYPE, THIS]), (r2v0 'host' android.view.View A[D('host' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'action' int A[D('action' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'args' android.os.Bundle A[D('args' android.os.Bundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0020 \-\> B:16:?, CROSS_EDGE: B:28:0x0022 \-\> B:16:?, CROSS_EDGE: B:22:0x000c \-\> B:27:0x0021\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.core.view.AccessibilityDelegateCompat.performAccessibilityAction(android.view.View, int, android.os.Bundle):boolean]\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_16;
Node_29 -> Node_16;
Node_27 -> Node_16;
}

