digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.1.addTile(ILandroidx\/recyclerview\/widget\/TileList$Tile;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (isRequestedGeneration(r6) != false) goto L6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|r5.this$0.mBackgroundProxy.recycleTile(r7)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|androidx.recyclerview.widget.TileList$Tile r0 = r5.this$0.mTileList.addOrReplace(r7)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r0 == null) goto L9\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"duplicate tile @\")\lr1.append(r0.mStartPosition)\landroid.util.Log.e(androidx.recyclerview.widget.AsyncListUtil.TAG, r1.toString())\lr5.this$0.mBackgroundProxy.recycleTile(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|int r1 = r7.mStartPosition + r7.mItemCount\lr2 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|LOOP_START\lLOOP:0: B:10:0x003d\-\>B:23:0x003d\lPHI: r2 \l  PHI: (r2v2 'index' int) = (r2v1 'index' int), (r2v3 'index' int) binds: [B:9:0x0037, B:23:0x003d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|if (r2 \>= r5.this$0.mMissingPositions.size()) goto L23\l}"];
Node_12 [shape=record,label="{12\:\ 0x0047|int r3 = r5.this$0.mMissingPositions.keyAt(r2)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|if (r7.mStartPosition \> r3) goto L22\l}"];
Node_14 [shape=record,label="{14\:\ 0x0053|if (r3 \>= r1) goto L15\l}"];
Node_20 [shape=record,label="{20\:\ 0x0064|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|int r2 = r2 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x003d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|LOOP_END\lSYNTHETIC\lLOOP:0: B:10:0x003d\-\>B:23:0x003d\lPHI: r2 \l  PHI: (r2v3 'index' int) = (r2v4 'index' int), (r2v2 'index' int) binds: [B:24:0x003d, B:25:0x003d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0055|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|r5.this$0.mMissingPositions.removeAt(r2)\lr5.this$0.mViewCallback.onItemLoaded(r3)\l}"];
Node_25 [shape=record,label="{25\:\ 0x003d|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0067|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.AsyncListUtil.1.addTile((r5v0 'this' androidx.recyclerview.widget.AsyncListUtil$1 A[D('this' androidx.recyclerview.widget.AsyncListUtil$1), IMMUTABLE_TYPE, THIS]), (r6v0 'generation' int A[D('generation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'tile' androidx.recyclerview.widget.TileList$Tile\<T\> A[D('tile' androidx.recyclerview.widget.TileList$Tile\<T\>), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:15:0x0055 \-\> B:10:0x003d, BACK_EDGE: B:16:0x0064 \-\> B:10:0x003d, CROSS_EDGE: B:13:0x0051 \-\> B:16:0x0064, CROSS_EDGE: B:18:0x0067 \-\> B:1:?, CROSS_EDGE: B:7:0x0016 \-\> B:9:0x0037\lTYPE_VARS: [T]\lSIGNATURE: (ILandroidx\/recyclerview\/widget\/TileList$Tile\<TT;\>;)V\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.ThreadUtil.MainThreadCallback.addTile(int, androidx.recyclerview.widget.TileList$Tile\<T\>):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_20;
Node_14 -> Node_22[style=dashed];
Node_20 -> Node_16;
Node_16 -> Node_24;
Node_24 -> Node_23;
Node_23 -> Node_10;
Node_22 -> Node_15;
Node_15 -> Node_25;
Node_25 -> Node_23;
Node_19 -> Node_16;
Node_21 -> Node_18;
Node_18 -> Node_1;
}

