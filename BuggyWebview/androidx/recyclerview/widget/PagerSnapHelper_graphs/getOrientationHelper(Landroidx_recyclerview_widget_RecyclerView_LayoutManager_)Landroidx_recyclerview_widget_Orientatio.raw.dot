digraph "CFG forandroidx.recyclerview.widget.PagerSnapHelper.getOrientationHelper(Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;)Landroidx\/recyclerview\/widget\/OrientationHelper;" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = \l  (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollVertically():boolean A[MD:():boolean (m)] (LINE:243)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x000b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0006|0x0006: INVOKE  (r0 I:androidx.recyclerview.widget.OrientationHelper) = \l  (r1 I:androidx.recyclerview.widget.PagerSnapHelper)\l  (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: DIRECT call: androidx.recyclerview.widget.PagerSnapHelper.getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):androidx.recyclerview.widget.OrientationHelper A[MD:(androidx.recyclerview.widget.RecyclerView$LayoutManager):androidx.recyclerview.widget.OrientationHelper (m)] (LINE:244)\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|RETURN\l|0x000a: RETURN  (r0 I:androidx.recyclerview.widget.OrientationHelper) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) = \l  (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollHorizontally():boolean A[MD:():boolean (m)] (LINE:245)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|0x000f: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|0x0011: INVOKE  (r0 I:androidx.recyclerview.widget.OrientationHelper) = \l  (r1 I:androidx.recyclerview.widget.PagerSnapHelper)\l  (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: DIRECT call: androidx.recyclerview.widget.PagerSnapHelper.getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager):androidx.recyclerview.widget.OrientationHelper A[MD:(androidx.recyclerview.widget.RecyclerView$LayoutManager):androidx.recyclerview.widget.OrientationHelper (m)] (LINE:246)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|RETURN\l|0x0015: RETURN  (r0 I:androidx.recyclerview.widget.OrientationHelper) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|RETURN\l|0x0016: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:248)\l0x0017: RETURN  (r0 I:androidx.recyclerview.widget.OrientationHelper) \l}"];
MethodNode[shape=record,label="{private androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.PagerSnapHelper.getOrientationHelper((r1 'this' I:androidx.recyclerview.widget.PagerSnapHelper A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0015 \-\> B:13:?, CROSS_EDGE: B:23:0x0017 \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0017: r2 'layoutManager' Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_13;
}

