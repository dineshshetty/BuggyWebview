digraph "CFG forandroidx.recyclerview.widget.PagerSnapHelper.createSnapScroller(Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;)Landroidx\/recyclerview\/widget\/LinearSmoothScroller;" {
subgraph cluster_Region_1488970699 {
label = "R(1:(2:(1:3)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_8591158 {
label = "R(2:(1:3)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_586618499 {
label = "IF [B:11:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0002|if ((r3 instanceof androidx.recyclerview.widget.RecyclerView.SmoothScroller.ScrollVectorProvider) == false) goto L3\l}"];
subgraph cluster_Region_1746294035 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0004|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1326465633 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0011|RETURN\l|return new androidx.recyclerview.widget.PagerSnapHelper.C04541(r2.mRecyclerView.getContext())\l}"];
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0006}"];
MethodNode[shape=record,label="{protected androidx.recyclerview.widget.LinearSmoothScroller androidx.recyclerview.widget.PagerSnapHelper.createSnapScroller((r2v0 'this' androidx.recyclerview.widget.PagerSnapHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0011 \-\> B:9:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.SnapHelper.createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager):androidx.recyclerview.widget.LinearSmoothScroller]\l}"];
MethodNode -> Node_8;Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_9;
Node_15 -> Node_9;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_14 -> Node_15;
}

