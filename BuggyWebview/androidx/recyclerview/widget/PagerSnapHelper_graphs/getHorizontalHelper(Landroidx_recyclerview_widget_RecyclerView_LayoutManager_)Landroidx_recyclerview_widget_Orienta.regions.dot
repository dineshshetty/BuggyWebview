digraph "CFG forandroidx.recyclerview.widget.PagerSnapHelper.getHorizontalHelper(Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;)Landroidx\/recyclerview\/widget\/OrientationHelper;" {
subgraph cluster_Region_1560129908 {
label = "R(3:1|(1:8)|6)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper r0 = r1.mHorizontalHelper\l}"];
subgraph cluster_IfRegion_128705716 {
label = "IF [B:12:0x0002, B:14:0x0006] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0002|if (r0 == null) goto L8\l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|ADDED_TO_REGION\l|if (r0.mLayoutManager != r2) goto L8\l}"];
subgraph cluster_Region_810067999 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0008|r1.mHorizontalHelper = androidx.recyclerview.widget.OrientationHelper.createHorizontalHelper(r2)\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0010|RETURN\l|return r1.mHorizontalHelper\l}"];
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0004}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000e}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.PagerSnapHelper.getHorizontalHelper((r1v0 'this' androidx.recyclerview.widget.PagerSnapHelper A[IMMUTABLE_TYPE, THIS]), (r2v0 'layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:14:0x0006 \-\> B:16:0x000e, CROSS_EDGE: B:12:0x0002 \-\> B:15:0x0008\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_10;
Node_9 -> Node_11;
Node_13 -> Node_14;
Node_16 -> Node_17;
}

