digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.getRowCountForAccessibility(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;)I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r2 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mOrientation int  (LINE:119)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0007 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|0x0004: IGET  (r0 I:int) = (r2 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int  (LINE:120)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|RETURN\l|0x0006: RETURN  (r0 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: INVOKE  (r0 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)] (LINE:122)\l0x000b: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IF  (r0 I:??[int, byte, short, char]) \>= (r1 I:??[int, byte, short, char])  \-\> B:22:0x0010 \l}"];
Node_20 [shape=record,label="{20\:\ 0x000e|RETURN\l|0x000e: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:123)\l0x000f: RETURN  (r0 I:int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: INVOKE  (r0 I:int) = (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)] (LINE:127)\l0x0014: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x0015: INVOKE  (r0 I:int) = \l  (r2 I:androidx.recyclerview.widget.GridLayoutManager)\l  (r3 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler)])\l  (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)])\l  (r0 I:int)\l type: DIRECT call: androidx.recyclerview.widget.GridLayoutManager.getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int A[MD:(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int (m)]\l0x0019: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x001a|RETURN\l|0x001a: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.GridLayoutManager.getRowCountForAccessibility((r2 'this' I:androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x000f \-\> B:13:?, CROSS_EDGE: B:23:0x001a \-\> B:13:?\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001a: r3 'recycler' Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;\l  \-1 \-0x001a: r4 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State):int]\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

