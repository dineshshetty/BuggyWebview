digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.ensureAnchorIsInCorrectSpan(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;Landroidx\/recyclerview\/widget\/LinearLayoutManager$AnchorInfo;I)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:391)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0001|0x0001: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemDirection' int)]) != (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0005 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0003|0x0003: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|0x0006: IGET  (r2 I:int) = \l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int  (LINE:393)\l0x0008: INVOKE  (r2 I:int) = \l  (r6 I:androidx.recyclerview.widget.GridLayoutManager)\l  (r7 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler)])\l  (r8 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)])\l  (r2 I:int)\l type: DIRECT call: androidx.recyclerview.widget.GridLayoutManager.getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int A[MD:(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int (m)]\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|0x000c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('layingOutInPrimaryDirection' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0020  (LINE:394)\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|LOOP_START\lLOOP:0: B:33:0x000e\-\>B:36:0x0014\l|0x000e: IF  (r2 I:??[int, byte, short, char] A[D('span' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:45:0x0038  (LINE:396)\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010|0x0010: IGET  (r3 I:int) = \l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0012|0x0012: IF  (r3 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:44:0x0038 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|LOOP_END\lLOOP:0: B:33:0x000e\-\>B:36:0x0014\l|0x0014: IGET  (r3 I:int) = \l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int  (LINE:397)\l0x0016: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x0017: IPUT  \l  (r3 I:int)\l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int \l0x0019: IGET  (r3 I:int) = \l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int  (LINE:398)\l0x001b: INVOKE  (r2 I:int A[D('span' int)]) = \l  (r6 I:androidx.recyclerview.widget.GridLayoutManager)\l  (r7 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler)])\l  (r8 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)])\l  (r3 I:int)\l type: DIRECT call: androidx.recyclerview.widget.GridLayoutManager.getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int A[MD:(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int (m)]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0038|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:416)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0038|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0038: RETURN   A[SYNTHETIC] (LINE:416)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|0x0020: INVOKE  (r3 I:int) = (r8 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)] (LINE:402)\l0x0024: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x0025: IGET  (r0 I:int) = \l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int  (LINE:403)\l0x0027: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('span' int)])  (LINE:404)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|LOOP_START\lLOOP:1: B:38:0x0028\-\>B:41:0x0032\l|0x0028: IF  (r0 I:??[int, byte, short, char] A[D('pos' int)]) \>= (r3 I:??[int, byte, short, char] A[D('indexLimit' int)])  \-\> B:47:0x0036  (LINE:405)\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|0x002a: ARITH  (r5 I:int) = (r0 I:int A[D('pos' int)]) + (1 int)  (LINE:406)\l0x002c: INVOKE  (r5 I:int) = \l  (r6 I:androidx.recyclerview.widget.GridLayoutManager)\l  (r7 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler)])\l  (r8 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)])\l  (r5 I:int)\l type: DIRECT call: androidx.recyclerview.widget.GridLayoutManager.getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int A[MD:(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int):int (m)]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|0x0030: IF  (r5 I:??[int, byte, short, char] A[D('next' int)]) \<= (r4 I:??[int, byte, short, char] A[D('bestSpan' int)])  \-\> B:46:0x0036  (LINE:407)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|LOOP_END\lLOOP:1: B:38:0x0028\-\>B:41:0x0032\l|0x0032: ARITH  (r0 I:int) = (r0 I:int A[D('pos' int)]) + (1 int)  (LINE:408)\l0x0034: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bestSpan' int)]) = (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('next' int)])  (LINE:409)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0036|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|0x0036: IPUT  \l  (r0 I:int A[D('pos' int)])\l  (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)])\l androidx.recyclerview.widget.LinearLayoutManager.AnchorInfo.mPosition int  (LINE:414)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|RETURN\lORIG_RETURN\l|0x0038: RETURN    (LINE:416)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0036|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0005|0x0005: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.GridLayoutManager.ensureAnchorIsInCorrectSpan((r6 'this' I:androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r7 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('itemDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0014 \-\> B:33:0x000e, CROSS_EDGE: B:33:0x000e \-\> B:43:0x0038, BACK_EDGE: B:41:0x0032 \-\> B:38:0x0028, CROSS_EDGE: B:42:0x0036 \-\> B:43:0x0038, CROSS_EDGE: B:38:0x0028 \-\> B:42:0x0036, CROSS_EDGE: B:30:0x0005 \-\> B:31:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0030\-0x0035: r5 'next' I\l  0x0027\-0x0038: r0 'pos' I\l  0x0025\-0x0038: r3 'indexLimit' I\l  0x0028\-0x0038: r4 'bestSpan' I\l  0x0006\-0x0038: r1 'layingOutInPrimaryDirection' Z\l  0x000c\-0x0038: r2 'span' I\l  \-1 \-0x0038: r7 'recycler' Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;\l  \-1 \-0x0038: r8 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\l  \-1 \-0x0038: r9 'anchorInfo' Landroidx\/recyclerview\/widget\/LinearLayoutManager$AnchorInfo;\l  \-1 \-0x0038: r10 'itemDirection' I\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_45;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_33;
Node_44 -> Node_48;
Node_48 -> Node_26;
Node_45 -> Node_49;
Node_49 -> Node_26;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_38;
Node_46 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_26;
Node_47 -> Node_42;
Node_30 -> Node_31;
}

