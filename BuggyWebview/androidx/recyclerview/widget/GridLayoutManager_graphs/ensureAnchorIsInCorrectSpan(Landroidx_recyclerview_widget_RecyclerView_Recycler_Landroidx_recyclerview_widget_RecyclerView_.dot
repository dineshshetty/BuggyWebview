digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.ensureAnchorIsInCorrectSpan(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;Landroidx\/recyclerview\/widget\/LinearLayoutManager$AnchorInfo;I)V" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000}"];
Node_28 [shape=record,label="{28\:\ 0x0001|if (r10 != 1) goto L24\l}"];
Node_29 [shape=record,label="{29\:\ 0x0003|r1 = true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 'layingOutInPrimaryDirection' boolean) = (r1v0 'layingOutInPrimaryDirection' boolean), (r1v2 'layingOutInPrimaryDirection' boolean) binds: [B:30:0x0005, B:29:0x0003] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = getSpanIndex(r7, r8, r9.mPosition)\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|if (r1 == false) goto L15\l}"];
Node_33 [shape=record,label="{33\:\ 0x000e|LOOP_START\lLOOP:0: B:33:0x000e\-\>B:36:0x0014\lPHI: r2 \l  PHI: (r2v2 'span' int) = (r2v1 'span' int), (r2v3 'span' int) binds: [B:32:0x000c, B:36:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \<= 0) goto L13\l}"];
Node_34 [shape=record,label="{34\:\ 0x0010}"];
Node_35 [shape=record,label="{35\:\ 0x0012|if (r9.mPosition \<= 0) goto L10\l}"];
Node_36 [shape=record,label="{36\:\ 0x0014|LOOP_END\lLOOP:0: B:33:0x000e\-\>B:36:0x0014\l|r9.mPosition = r9.mPosition \- 1\lint r2 = getSpanIndex(r7, r8, r9.mPosition)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0038|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_45 [shape=record,label="{45\:\ 0x0038|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ 0x0020|int r3 = r8.getItemCount() \- 1\lint r0 = r9.mPosition\lr4 = r2\l}"];
Node_38 [shape=record,label="{38\:\ 0x0028|LOOP_START\lLOOP:1: B:38:0x0028\-\>B:41:0x0032\lPHI: r0 r4 \l  PHI: (r0v2 'pos' int) = (r0v1 'pos' int), (r0v3 'pos' int) binds: [B:37:0x0020, B:41:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'bestSpan' int) = (r4v0 'bestSpan' int), (r4v2 'bestSpan' int) binds: [B:37:0x0020, B:41:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \>= r3) goto L23\l}"];
Node_39 [shape=record,label="{39\:\ 0x002a|int r5 = getSpanIndex(r7, r8, r0 + 1)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0030|if (r5 \<= r4) goto L20\l}"];
Node_41 [shape=record,label="{41\:\ 0x0032|LOOP_END\lLOOP:1: B:38:0x0028\-\>B:41:0x0032\l|int r0 = r0 + 1\lr4 = r5\l}"];
Node_46 [shape=record,label="{46\:\ 0x0036|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0036|r9.mPosition = r0\l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|RETURN\lORIG_RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ 0x0036|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0005|r1 = false\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.GridLayoutManager.ensureAnchorIsInCorrectSpan((r6v0 'this' androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r7v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo A[D('anchorInfo' androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'itemDirection' int A[D('itemDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0014 \-\> B:33:0x000e, CROSS_EDGE: B:33:0x000e \-\> B:43:0x0038, BACK_EDGE: B:41:0x0032 \-\> B:38:0x0028, CROSS_EDGE: B:42:0x0036 \-\> B:43:0x0038, CROSS_EDGE: B:38:0x0028 \-\> B:42:0x0036, CROSS_EDGE: B:30:0x0005 \-\> B:31:0x0006\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_45;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_44;
Node_36 -> Node_33;
Node_44 -> Node_48;
Node_48 -> Node_26;
Node_45 -> Node_49;
Node_49 -> Node_26;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_46;
Node_41 -> Node_38;
Node_46 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_26;
Node_47 -> Node_42;
Node_30 -> Node_31;
}

