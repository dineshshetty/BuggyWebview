digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.computeScrollOffsetWithSpanInfo(Landroidx\/recyclerview\/widget\/RecyclerView$State;)I" {
Node_23 [shape=record,label="{23\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r18 I:??[OBJECT, ARRAY])  (LINE:1304)\l0x0002: INVOKE  (r1 I:int) = (r18 I:androidx.recyclerview.widget.GridLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getChildCount():int A[MD:():int (m)]\l0x0006: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0007|0x0007: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00bd \l}"];
Node_27 [shape=record,label="{27\:\ 0x0009|0x0009: INVOKE  (r1 I:int) = (r19 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)]\l}"];
Node_28 [shape=record,label="{28\:\ 0x000d|0x000d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0011 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: INVOKE  (r18 I:androidx.recyclerview.widget.GridLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.ensureLayoutState():void A[MD:():void (m)] (LINE:1307)\l0x0014: INVOKE  (r1 I:boolean) = (r18 I:androidx.recyclerview.widget.GridLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.isSmoothScrollbarEnabled():boolean A[MD:():boolean (m)] (LINE:1309)\l0x0018: ARITH  (r3 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('smoothScrollEnabled' boolean)]) ^ (1 ??[boolean, int, float, short, byte, char])  (LINE:1310)\l0x001a: CONST  (r4 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001b: INVOKE  (r3 I:android.view.View) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r3 I:boolean), (r4 I:boolean) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.findFirstVisibleChildClosestToStart(boolean, boolean):android.view.View A[MD:(boolean, boolean):android.view.View (m)]\l0x001f: ARITH  (r5 I:??[int, boolean]) = (r1 I:??[int, boolean, short, byte, char] A[D('smoothScrollEnabled' boolean)]) ^ (1 ??[boolean, int, float, short, byte, char])  (LINE:1311)\l0x0021: INVOKE  (r5 I:android.view.View) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r5 I:boolean), (r4 I:boolean) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.findFirstVisibleChildClosestToEnd(boolean, boolean):android.view.View A[MD:(boolean, boolean):android.view.View (m)]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0025|0x0025: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startChild' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00ba  (LINE:1312)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0027|0x0027: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('endChild' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x002d \l}"];
Node_33 [shape=record,label="{33\:\ 0x0029|0x0029: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('smoothScrollEnabled' boolean)]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00bc|RETURN\l|0x00bc: RETURN  (r2 I:int)  (LINE:1313)\l}"];
Node_24 [shape=record,label="{24\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_34 [shape=record,label="{34\:\ 0x002d|0x002d: IGET  (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanSizeLookup androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup  (LINE:1315)\l0x002f: INVOKE  (r7 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r3 I:android.view.View A[D('startChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)]\l0x0033: IGET  (r8 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int \l0x0035: INVOKE  (r6 I:int) = (r6 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r7 I:int), (r8 I:int) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanGroupIndex(int, int):int A[MD:(int, int):int (m)]\l0x0039: IGET  (r7 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanSizeLookup androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup  (LINE:1317)\l0x003b: INVOKE  (r8 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r5 I:android.view.View A[D('endChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)]\l0x003f: IGET  (r9 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int \l0x0041: INVOKE  (r7 I:int) = (r7 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r8 I:int), (r9 I:int) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanGroupIndex(int, int):int A[MD:(int, int):int (m)]\l0x0045: INVOKE  (r8 I:int) = (r6 I:int A[D('startChildSpan' int)]), (r7 I:int A[D('endChildSpan' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:1320)\l0x0049: INVOKE  (r9 I:int) = (r6 I:int A[D('startChildSpan' int)]), (r7 I:int A[D('endChildSpan' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1321)\l0x004d: IGET  (r10 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanSizeLookup androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup  (LINE:1322)\l0x004f: INVOKE  (r11 I:int) = (r19 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.State.getItemCount():int A[MD:():int (m)]\l0x0053: ARITH  (r11 I:int) = (r11 I:int) \- (r4 I:int) \l0x0054: IGET  (r12 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int \l0x0056: INVOKE  (r10 I:int) = (r10 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r11 I:int), (r12 I:int) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanGroupIndex(int, int):int A[MD:(int, int):int (m)]\l0x005a: ARITH  (r10 I:int) = (r10 I:int) + (r4 I:int) \l0x005b: IGET  (r11 I:boolean) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mShouldReverseLayout boolean  (LINE:1325)\l}"];
Node_35 [shape=record,label="{35\:\ 0x005d|0x005d: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0067 \l}"];
Node_36 [shape=record,label="{36\:\ 0x005f|0x005f: ARITH  (r11 I:int) = (r10 I:int A[D('totalSpans' int)]) \- (r9 I:int A[D('maxSpan' int)]) \l0x0061: ARITH  (r11 I:int) = (r11 I:int) \- (r4 I:int) \l0x0062: INVOKE  (r2 I:int) = (r2 I:int), (r11 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1326)\l}"];
Node_39 [shape=record,label="{39\:\ 0x006d|0x006d: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('smoothScrollEnabled' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0070  (LINE:1328)\l}"];
Node_40 [shape=record,label="{40\:\ 0x006f|RETURN\l|0x006f: RETURN  (r2 I:int A[D('spansBefore' int)])  (LINE:1329)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0070|0x0070: IGET  (r11 I:androidx.recyclerview.widget.OrientationHelper) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mOrientationHelper androidx.recyclerview.widget.OrientationHelper  (LINE:1331)\l0x0072: INVOKE  (r11 I:int) = (r11 I:androidx.recyclerview.widget.OrientationHelper), (r5 I:android.view.View A[D('endChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedEnd(android.view.View):int A[MD:(android.view.View):int (m)]\l0x0076: IGET  (r12 I:androidx.recyclerview.widget.OrientationHelper) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mOrientationHelper androidx.recyclerview.widget.OrientationHelper \l0x0078: INVOKE  (r12 I:int) = (r12 I:androidx.recyclerview.widget.OrientationHelper), (r3 I:android.view.View A[D('startChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedStart(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1332)\l0x007c: ARITH  (r11 I:int) = (r11 I:int) \- (r12 I:int) \l0x007d: INVOKE  (r11 I:int) = (r11 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:1331)\l0x0081: IGET  (r12 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanSizeLookup androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup  (LINE:1334)\l0x0083: INVOKE  (r13 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r3 I:android.view.View A[D('startChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1335)\l0x0087: IGET  (r14 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int \l0x0089: INVOKE  (r12 I:int) = (r12 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r13 I:int), (r14 I:int) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanGroupIndex(int, int):int A[MD:(int, int):int (m)]\l0x008d: IGET  (r13 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanSizeLookup androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup  (LINE:1336)\l0x008f: INVOKE  (r14 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager), (r5 I:android.view.View A[D('endChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)]\l0x0093: IGET  (r15 I:int) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mSpanCount int \l0x0095: INVOKE  (r13 I:int) = (r13 I:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup), (r14 I:int), (r15 I:int) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup.getCachedSpanGroupIndex(int, int):int A[MD:(int, int):int (m)]\l0x0099: ARITH  (r14 I:int) = (r13 I:int A[D('lastVisibleSpan' int)]) \- (r12 I:int A[D('firstVisibleSpan' int)])  (LINE:1338)\l0x009b: ARITH  (r14 I:int) = (r14 I:int) + (r4 I:int) \l0x009c: CAST (r4 I:float) = (float) (r11 I:int A[D('laidOutArea' int)])  (LINE:1339)\l0x009d: CAST (r15 I:float) = (float) (r14 I:int A[D('laidOutSpans' int)]) \l0x009e: ARITH  (r4 I:float) = (r4 I:float) \/ (r15 I:float) \l0x009f: CAST (r15 I:float) = (float) (r2 I:int A[D('spansBefore' int)])  (LINE:1341)\l0x00a0: ARITH  (r15 I:float) = (r15 I:float) * (r4 I:float A[D('avgSizePerSpan' float)]) \l0x00a2: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('smoothScrollEnabled' boolean)]) \l0x00a4: IGET  (r1 I:androidx.recyclerview.widget.OrientationHelper A[D('smoothScrollEnabled' boolean)]) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mOrientationHelper androidx.recyclerview.widget.OrientationHelper \l0x00a6: INVOKE  (r1 I:int) = (r1 I:androidx.recyclerview.widget.OrientationHelper) type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getStartAfterPadding():int A[MD:():int (m)]\l0x00aa: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('spansBefore' int)]) \l0x00ac: IGET  (r2 I:androidx.recyclerview.widget.OrientationHelper A[D('spansBefore' int)]) = (r0 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mOrientationHelper androidx.recyclerview.widget.OrientationHelper \l0x00ae: INVOKE  (r2 I:int) = (r2 I:androidx.recyclerview.widget.OrientationHelper), (r3 I:android.view.View A[D('startChild' android.view.View)]) type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedStart(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:1342)\l0x00b2: ARITH  (r1 I:int) = (r1 I:int) \- (r2 I:int) \l0x00b3: CAST (r1 I:float) = (float) (r1 I:int) \l0x00b4: ARITH  (r15 I:float) = (r15 I:float) + (r1 I:float) \l0x00b5: INVOKE  (r1 I:int) = (r15 I:float) type: STATIC call: java.lang.Math.round(float):int A[MD:(float):int (c)] (LINE:1341)\l}"];
Node_42 [shape=record,label="{42\:\ 0x00b9|RETURN\l|0x00b9: RETURN  (r1 I:int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0067|0x0068: INVOKE  (r2 I:int) = (r2 I:int), (r8 I:int A[D('minSpan' int)]) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:1327)\l}"];
Node_43 [shape=record,label="{43\:\ 0x00ba|0x00ba: MOVE  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('smoothScrollEnabled' boolean)]) = (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('smoothScrollEnabled' boolean)])  (LINE:1312)\l}"];
Node_45 [shape=record,label="{45\:\ 0x00bd|RETURN\l|0x00bd: RETURN  (r2 I:int)  (LINE:1305)\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.GridLayoutManager.computeScrollOffsetWithSpanInfo((r18 'this' I:androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r19 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:40:0x006f \-\> B:24:?, CROSS_EDGE: B:42:0x00b9 \-\> B:24:?, CROSS_EDGE: B:37:0x0067 \-\> B:39:0x006d, CROSS_EDGE: B:43:0x00ba \-\> B:44:0x00bc, CROSS_EDGE: B:45:0x00bd \-\> B:24:?, CROSS_EDGE: B:26:0x0007 \-\> B:45:0x00bd\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0018\-0x00a4: r1 'smoothScrollEnabled' Z\l  0x006d\-0x00ac: r2 'spansBefore' I\l  0x009f\-0x00ba: r4 'avgSizePerSpan' F\l  0x0039\-0x00ba: r6 'startChildSpan' I\l  0x0045\-0x00ba: r7 'endChildSpan' I\l  0x0049\-0x00ba: r8 'minSpan' I\l  0x004d\-0x00ba: r9 'maxSpan' I\l  0x005b\-0x00ba: r10 'totalSpans' I\l  0x0081\-0x00ba: r11 'laidOutArea' I\l  0x008d\-0x00ba: r12 'firstVisibleSpan' I\l  0x0099\-0x00ba: r13 'lastVisibleSpan' I\l  0x009c\-0x00ba: r14 'laidOutSpans' I\l  0x00a4\-0x00ba: r16 'smoothScrollEnabled' Z\l  0x00ac\-0x00ba: r17 'spansBefore' I\l  0x00ba\-0x00bc: r1 'smoothScrollEnabled' Z\l  0x001f\-0x00bd: r3 'startChild' Landroid\/view\/View;\l  0x0025\-0x00bd: r5 'endChild' Landroid\/view\/View;\l  0x00bc\-0x00bd: r16 'smoothScrollEnabled' Z\l  \-1 \-0x00bd: r19 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\l}"];
MethodNode -> Node_23;Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_45;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_45[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_43;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_44;
Node_44 -> Node_24;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_24;
Node_41 -> Node_42;
Node_42 -> Node_24;
Node_37 -> Node_39;
Node_43 -> Node_44;
Node_45 -> Node_24;
}

