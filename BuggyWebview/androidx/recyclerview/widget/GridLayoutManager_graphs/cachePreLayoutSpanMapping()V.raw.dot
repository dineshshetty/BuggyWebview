digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.cachePreLayoutSpanMapping()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:androidx.recyclerview.widget.GridLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getChildCount():int A[MD:():int (m)] (LINE:189)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:190)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0005|LOOP_START\lLOOP:0: B:10:0x0005\-\>B:11:0x0007\l|0x0005: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:13:0x002a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0007|LOOP_END\lLOOP:0: B:10:0x0005\-\>B:11:0x0007\l|0x0007: INVOKE  (r2 I:android.view.View) = (r6 I:androidx.recyclerview.widget.GridLayoutManager), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)] (LINE:191)\l0x000b: INVOKE  (r2 I:android.view.ViewGroup$LayoutParams) = (r2 I:android.view.View) type: VIRTUAL call: android.view.View.getLayoutParams():android.view.ViewGroup$LayoutParams A[MD:():android.view.ViewGroup$LayoutParams (c)]\l0x000f: CHECK_CAST (r2 I:androidx.recyclerview.widget.GridLayoutManager$LayoutParams) = (androidx.recyclerview.widget.GridLayoutManager$LayoutParams) (r2 I:??[OBJECT, ARRAY]) \l0x0011: INVOKE  (r3 I:int) = \l  (r2 I:androidx.recyclerview.widget.GridLayoutManager$LayoutParams A[D('lp' androidx.recyclerview.widget.GridLayoutManager$LayoutParams)])\l type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.LayoutParams.getViewLayoutPosition():int A[MD:():int (m)] (LINE:192)\l0x0015: IGET  (r4 I:android.util.SparseIntArray) = (r6 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mPreLayoutSpanSizeCache android.util.SparseIntArray  (LINE:193)\l0x0017: INVOKE  (r5 I:int) = \l  (r2 I:androidx.recyclerview.widget.GridLayoutManager$LayoutParams A[D('lp' androidx.recyclerview.widget.GridLayoutManager$LayoutParams)])\l type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.LayoutParams.getSpanSize():int A[MD:():int (m)]\l0x001b: INVOKE  (r4 I:android.util.SparseIntArray), (r3 I:int A[D('viewPosition' int)]), (r5 I:int) type: VIRTUAL call: android.util.SparseIntArray.put(int, int):void A[MD:(int, int):void (c)]\l0x001e: IGET  (r4 I:android.util.SparseIntArray) = (r6 I:androidx.recyclerview.widget.GridLayoutManager) androidx.recyclerview.widget.GridLayoutManager.mPreLayoutSpanIndexCache android.util.SparseIntArray  (LINE:194)\l0x0020: INVOKE  (r5 I:int) = \l  (r2 I:androidx.recyclerview.widget.GridLayoutManager$LayoutParams A[D('lp' androidx.recyclerview.widget.GridLayoutManager$LayoutParams)])\l type: VIRTUAL call: androidx.recyclerview.widget.GridLayoutManager.LayoutParams.getSpanIndex():int A[MD:():int (m)]\l0x0024: INVOKE  (r4 I:android.util.SparseIntArray), (r3 I:int A[D('viewPosition' int)]), (r5 I:int) type: VIRTUAL call: android.util.SparseIntArray.put(int, int):void A[MD:(int, int):void (c)]\l0x0027: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (1 int)  (LINE:190)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|RETURN\l|0x002a: RETURN    (LINE:196)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.GridLayoutManager.cachePreLayoutSpanMapping((r6 'this' I:androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0007 \-\> B:10:0x0005\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0011\-0x0027: r2 'lp' Landroidx\/recyclerview\/widget\/GridLayoutManager$LayoutParams;\l  0x0015\-0x0027: r3 'viewPosition' I\l  0x0005\-0x002a: r1 'i' I\l  0x0004\-0x002a: r0 'childCount' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

