digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.getSpanGroupIndex(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;I)I" {
Node_12 [shape=record,label="{12\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x0000}"];
Node_15 [shape=record,label="{15\:\ 0x0004|if (r5.isPreLayout() != false) goto L6\l}"];
Node_16 [shape=record,label="{16\:\ 0x0006}"];
Node_17 [shape=record,label="{17\:\ 0x000e|RETURN\l|return r3.mSpanSizeLookup.getCachedSpanGroupIndex(r6, r3.mSpanCount)\l}"];
Node_13 [shape=record,label="{13\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x000f|int r0 = r4.convertPreLayoutPositionToPostLayout(r6)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0014|if (r0 != (\-1)) goto L10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0016|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Cannot find span size for pre layout position. \")\lr1.append(r6)\landroid.util.Log.w(androidx.recyclerview.widget.GridLayoutManager.TAG, r1.toString())\l}"];
Node_21 [shape=record,label="{21\:\ 0x002d|RETURN\l|return 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x002e}"];
Node_23 [shape=record,label="{23\:\ 0x0036|RETURN\l|return r3.mSpanSizeLookup.getCachedSpanGroupIndex(r0, r3.mSpanCount)\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.GridLayoutManager.getSpanGroupIndex((r3v0 'this' androidx.recyclerview.widget.GridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'viewPosition' int A[D('viewPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x002d \-\> B:13:?, CROSS_EDGE: B:23:0x0036 \-\> B:13:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_12;Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_13;
}

