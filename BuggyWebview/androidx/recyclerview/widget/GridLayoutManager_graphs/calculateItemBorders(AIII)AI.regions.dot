digraph "CFG forandroidx.recyclerview.widget.GridLayoutManager.calculateItemBorders([III)[I" {
subgraph cluster_Region_187899514 {
label = "R(4:(1:20)|6|(3:8|(1:12)|14)|18)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_361964405 {
label = "IF [B:23:0x0000, B:25:0x0005, B:27:0x000c] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0000|if (r7 == null) goto L20\l}"];
Node_25 [shape=record,label="{25\:\ 0x0005|ADDED_TO_REGION\l|if (r7.length != (r8 + 1)) goto L20\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|ADDED_TO_REGION\l|if (r7[r7.length \- 1] != r9) goto L20\l}"];
subgraph cluster_Region_992995821 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x000e|int[] r7 = new int[r8 + 1]\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0012|PHI: r7 \l  PHI: (r7v2 'cachedBorders' int[]) = (r7v1 'cachedBorders' int[]), (r7v0 'cachedBorders' int[]) binds: [B:28:0x000e, B:27:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r7[0] = 0\lint int r0 = r9 \/ r8\lint int r1 = r9 % r8\lint r2 = 0\lint r3 = 0\lint r4 = 1\l}"];
subgraph cluster_LoopRegion_1765728330 {
label = "LOOP:0: (3:8|(1:12)|14)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x001c|LOOP_START\lLOOP:0: B:30:0x001c\-\>B:36:0x0029\lPHI: r2 r3 r4 \l  PHI: (r2v1 'consumedPixels' int) = (r2v0 'consumedPixels' int), (r2v2 'consumedPixels' int) binds: [B:29:0x0012, B:36:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 'additionalSize' int) = (r3v0 'additionalSize' int), (r3v3 'additionalSize' int) binds: [B:29:0x0012, B:36:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'i' int) = (r4v0 'i' int), (r4v2 'i' int) binds: [B:29:0x0012, B:36:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 \<= r8) goto L8\l}"];
subgraph cluster_Region_1731475299 {
label = "R(3:8|(1:12)|14)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x001e|int r5 = r0\lr3 += r1\l}"];
subgraph cluster_IfRegion_1832305727 {
label = "IF [B:32:0x0020, B:34:0x0024] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0020|if (r3 \> 0) goto L10\l}"];
Node_34 [shape=record,label="{34\:\ 0x0024|ADDED_TO_REGION\l|if ((r8 \- r3) \< r1) goto L12\l}"];
subgraph cluster_Region_2054021555 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0026|r5++\lr3 \-= r8\l}"];
}
}
Node_36 [shape=record,label="{36\:\ 0x0029|LOOP_END\lLOOP:0: B:30:0x001c\-\>B:36:0x0029\lPHI: r3 r5 \l  PHI: (r3v3 'additionalSize' int) = (r3v2 'additionalSize' int), (r3v2 'additionalSize' int), (r3v4 'additionalSize' int) binds: [B:40:0x0029, B:41:0x0029, B:39:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'itemSize' int) = (r5v0 'itemSize' int), (r5v0 'itemSize' int), (r5v2 'itemSize' int) binds: [B:40:0x0029, B:41:0x0029, B:39:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|r2 += r5\lr7[r4] = r2\lr4++\l}"];
}
}
Node_37 [shape=record,label="{37\:\ 0x002f|RETURN\l|return r7\l}"];
}
Node_21 [shape=record,color=red,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0002}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0007}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0022}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0029|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0029|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0029|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x002f|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{static int[] androidx.recyclerview.widget.GridLayoutManager.calculateItemBorders((r7v0 'cachedBorders' int[] A[D('cachedBorders' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'spanCount' int A[D('spanCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'totalSpace' int A[D('totalSpace' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:36:0x0029 \-\> B:30:0x001c, CROSS_EDGE: B:34:0x0024 \-\> B:36:0x0029, CROSS_EDGE: B:32:0x0020 \-\> B:36:0x0029, CROSS_EDGE: B:27:0x000c \-\> B:29:0x0012, CROSS_EDGE: B:25:0x0005 \-\> B:28:0x000e, CROSS_EDGE: B:23:0x0000 \-\> B:28:0x000e\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_21;Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_38[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_40[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_41[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_30;
Node_37 -> Node_22;
Node_21 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_33 -> Node_34;
Node_39 -> Node_36;
Node_41 -> Node_36;
Node_40 -> Node_36;
Node_38 -> Node_37;
}

