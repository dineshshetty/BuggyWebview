digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView) = (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mRecyclerView androidx.recyclerview.widget.RecyclerView  (LINE:10508)\l0x0002: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|0x0003: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0019 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0005|0x0005: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$Adapter) = (r0 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mAdapter androidx.recyclerview.widget.RecyclerView$Adapter \l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x000a \l}"];
Node_20 [shape=record,label="{20\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.canScrollVertically():boolean A[MD:():boolean (m)] (LINE:10511)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000e|0x000e: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0010|0x0010: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView) = (r2 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mRecyclerView androidx.recyclerview.widget.RecyclerView \l0x0012: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$Adapter) = (r0 I:androidx.recyclerview.widget.RecyclerView) androidx.recyclerview.widget.RecyclerView.mAdapter androidx.recyclerview.widget.RecyclerView$Adapter \l0x0014: INVOKE  (r1 I:int) = (r0 I:androidx.recyclerview.widget.RecyclerView$Adapter) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.Adapter.getItemCount():int A[MD:():int (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN  (r1 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN  (r1 I:int) A[SYNTHETIC]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:int)  (LINE:10509)\l}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility((r2 'this' I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x000e \-\> B:23:0x0018, CROSS_EDGE: B:24:0x0019 \-\> B:14:?, CROSS_EDGE: B:16:0x0003 \-\> B:24:0x0019\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0019: r3 'recycler' Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;\l  \-1 \-0x0019: r4 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State):int]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_24[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

