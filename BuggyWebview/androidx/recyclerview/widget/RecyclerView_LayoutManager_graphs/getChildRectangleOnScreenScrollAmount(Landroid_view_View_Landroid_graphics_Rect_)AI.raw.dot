digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.getChildRectangleOnScreenScrollAmount(Landroid\/view\/View;Landroid\/graphics\/Rect;)[I" {
Node_17 [shape=record,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_19 [shape=record,label="{19\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('rect' android.graphics.Rect)])  (LINE:9834)\l0x0002: CONST  (r1 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: INVOKE  (r2 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPaddingLeft():int A[MD:():int (m)] (LINE:9835)\l0x0009: INVOKE  (r3 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPaddingTop():int A[MD:():int (m)] (LINE:9836)\l0x000d: INVOKE  (r4 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getWidth():int A[MD:():int (m)] (LINE:9837)\l0x0011: INVOKE  (r5 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPaddingRight():int A[MD:():int (m)]\l0x0015: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0016: INVOKE  (r5 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getHeight():int A[MD:():int (m)] (LINE:9838)\l0x001a: INVOKE  (r6 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPaddingBottom():int A[MD:():int (m)]\l0x001e: ARITH  (r5 I:int) = (r5 I:int) \- (r6 I:int) \l0x001f: INVOKE  (r6 I:int) = (r18 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getLeft():int A[MD:():int (c)] (LINE:9839)\l0x0023: IGET  (r7 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0025: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0026: INVOKE  (r7 I:int) = (r18 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollX():int A[MD:():int (c)]\l0x002a: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x002b: INVOKE  (r7 I:int) = (r18 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getTop():int A[MD:():int (c)] (LINE:9840)\l0x002f: IGET  (r8 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0031: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x0032: INVOKE  (r8 I:int) = (r18 I:android.view.View A[D('child' android.view.View)]) type: VIRTUAL call: android.view.View.getScrollY():int A[MD:():int (c)]\l0x0036: ARITH  (r7 I:int) = (r7 I:int) \- (r8 I:int) \l0x0037: INVOKE  (r8 I:int) = (r19 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.width():int A[MD:():int (c)] (LINE:9841)\l0x003b: ARITH  (r8 I:int) = (r8 I:int) + (r6 I:int A[D('childLeft' int)]) \l0x003c: INVOKE  (r9 I:int) = (r19 I:android.graphics.Rect A[D('rect' android.graphics.Rect)]) type: VIRTUAL call: android.graphics.Rect.height():int A[MD:():int (c)] (LINE:9842)\l0x0040: ARITH  (r9 I:int) = (r9 I:int) + (r7 I:int A[D('childTop' int)]) \l0x0041: ARITH  (r10 I:int) = (r6 I:int A[D('childLeft' int)]) \- (r2 I:int A[D('parentLeft' int)])  (LINE:9844)\l0x0043: CONST  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0044: INVOKE  (r10 I:int) = (r11 I:int), (r10 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x0048: ARITH  (r12 I:int) = (r7 I:int A[D('childTop' int)]) \- (r3 I:int A[D('parentTop' int)])  (LINE:9845)\l0x004a: INVOKE  (r12 I:int) = (r11 I:int), (r12 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)]\l0x004e: ARITH  (r13 I:int) = (r8 I:int A[D('childRight' int)]) \- (r4 I:int A[D('parentRight' int)])  (LINE:9846)\l0x0050: INVOKE  (r13 I:int) = (r11 I:int), (r13 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0054: ARITH  (r14 I:int) = (r9 I:int A[D('childBottom' int)]) \- (r5 I:int A[D('parentBottom' int)])  (LINE:9847)\l0x0056: INVOKE  (r14 I:int) = (r11 I:int), (r14 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x005a: INVOKE  (r15 I:int) = (r17 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getLayoutDirection():int A[MD:():int (m)] (LINE:9853)\l0x005e: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x005f|0x005f: IF  (r15 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x006d \l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|0x0061: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offScreenRight' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0065  (LINE:9854)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|0x0063: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r13 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offScreenRight' int)]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0078|0x0078: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offScreenTop' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x007c  (LINE:9863)\l}"];
Node_30 [shape=record,label="{30\:\ 0x007a|0x007a: MOVE  (r11 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r12 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offScreenTop' int)]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0082|0x0083: CONST  (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:9865)\l0x0085: APUT  \l  (r1 I:??[int, float][] A[D('out' int[])])\l  (r16 I:??[int, short, byte, char])\l  (r15 I:??[int, float, short, byte, char] A[D('dx' int)])\l \l0x0087: CONST  (r16 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:9866)\l0x0089: APUT  \l  (r1 I:??[int, float][] A[D('out' int[])])\l  (r16 I:??[int, short, byte, char])\l  (r11 I:??[int, float, short, byte, char] A[D('dy' int)])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x008b|RETURN\l|0x008b: RETURN  (r1 I:int[] A[D('out' int[])])  (LINE:9867)\l}"];
Node_18 [shape=record,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_31 [shape=record,label="{31\:\ 0x007c|0x007c: ARITH  (r11 I:int) = (r7 I:int A[D('childTop' int)]) \- (r3 I:int A[D('parentTop' int)]) \l0x007e: INVOKE  (r11 I:int) = (r11 I:int), (r14 I:int A[D('offScreenBottom' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:9864)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|0x0065: ARITH  (r15 I:int) = (r8 I:int A[D('childRight' int)]) \- (r4 I:int A[D('parentRight' int)]) \l0x0067: INVOKE  (r15 I:int) = (r10 I:int A[D('offScreenLeft' int)]), (r15 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:9855)\l}"];
Node_25 [shape=record,label="{25\:\ 0x006d|0x006d: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('offScreenLeft' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0071  (LINE:9857)\l}"];
Node_26 [shape=record,label="{26\:\ 0x006f|0x006f: MOVE  (r15 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offScreenLeft' int)]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0071|0x0071: ARITH  (r15 I:int) = (r6 I:int A[D('childLeft' int)]) \- (r2 I:int A[D('parentLeft' int)]) \l0x0073: INVOKE  (r15 I:int) = (r15 I:int), (r13 I:int A[D('offScreenRight' int)]) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:9858)\l}"];
MethodNode[shape=record,label="{private int[] androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildRectangleOnScreenScrollAmount((r17 'this' I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r18 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:android.graphics.Rect A[D('rect' android.graphics.Rect), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:31:0x007c \-\> B:32:0x0082, CROSS_EDGE: B:23:0x0065 \-\> B:29:0x0078, CROSS_EDGE: B:26:0x006f \-\> B:29:0x0078, CROSS_EDGE: B:27:0x0071 \-\> B:29:0x0078\lINLINE_NOT_NEEDED\lDebug Info:\l  0x006c\-0x006d: r15 'dx' I\l  0x0005\-0x008b: r1 'out' [I\l  0x0009\-0x008b: r2 'parentLeft' I\l  0x000d\-0x008b: r3 'parentTop' I\l  0x0016\-0x008b: r4 'parentRight' I\l  0x001f\-0x008b: r5 'parentBottom' I\l  0x002b\-0x008b: r6 'childLeft' I\l  0x0037\-0x008b: r7 'childTop' I\l  0x003c\-0x008b: r8 'childRight' I\l  0x0041\-0x008b: r9 'childBottom' I\l  0x0048\-0x008b: r10 'offScreenLeft' I\l  0x0083\-0x008b: r11 'dy' I\l  0x004e\-0x008b: r12 'offScreenTop' I\l  0x0054\-0x008b: r13 'offScreenRight' I\l  0x005a\-0x008b: r14 'offScreenBottom' I\l  0x0078\-0x008b: r15 'dx' I\l  \-1 \-0x008b: r18 'child' Landroid\/view\/View;\l  \-1 \-0x008b: r19 'rect' Landroid\/graphics\/Rect;\l}"];
MethodNode -> Node_17;Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_18;
Node_31 -> Node_32;
Node_23 -> Node_29;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_29;
Node_27 -> Node_29;
}

