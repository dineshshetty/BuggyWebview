digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.removeAllViews()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r3 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildCount():int A[MD:():int (m)] (LINE:8649)\l0x0004: ARITH  (r1 I:int) = (r0 I:int A[D('childCount' int)]) + (\-1 int)  (LINE:8650)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0006|LOOP_START\lLOOP:0: B:10:0x0006\-\>B:11:0x0008\l|0x0006: IF  (r1 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:13:0x0010 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|LOOP_END\lLOOP:0: B:10:0x0006\-\>B:11:0x0008\l|0x0008: IGET  (r2 I:androidx.recyclerview.widget.ChildHelper) = (r3 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mChildHelper androidx.recyclerview.widget.ChildHelper  (LINE:8651)\l0x000a: INVOKE  (r2 I:androidx.recyclerview.widget.ChildHelper), (r1 I:int A[D('i' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ChildHelper.removeViewAt(int):void A[MD:(int):void (m)]\l0x000d: ARITH  (r1 I:int) = (r1 I:int A[D('i' int)]) + (\-1 int)  (LINE:8650)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0010|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0010|RETURN\l|0x0010: RETURN    (LINE:8653)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.LayoutManager.removeAllViews((r3 'this' I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:11:0x0008 \-\> B:10:0x0006\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0006\-0x0010: r1 'i' I\l  0x0004\-0x0010: r0 'childCount' I\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_10;
Node_13 -> Node_12;
Node_12 -> Node_8;
}

