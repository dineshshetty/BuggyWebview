digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.chooseSize(III)I" {
subgraph cluster_Region_1667163742 {
label = "R(2:1|2)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0000|int int r0 = android.view.View.MeasureSpec.getMode(r3)\lint int r1 = android.view.View.MeasureSpec.getSize(r3)\l}"];
subgraph cluster_SwitchRegion_969432687 {
label = "Switch: 3
 case -2147483648 -> R(1:8)
 case androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY :int -> R(1:6)
 case default -> R(1:4)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0008|switch(r0) \{\l    case \-2147483648: goto L7;\l    case 1073741824: goto L6;\l    default: goto L3;\l\}\l}"];
subgraph cluster_Region_684477690 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0019|RETURN\l|return java.lang.Math.min(r1, java.lang.Math.max(r4, r5))\l}"];
}
subgraph cluster_Region_1170284109 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0010|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_1589858077 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x000f|RETURN\l|return java.lang.Math.max(r4, r5)\l}"];
}
}
}
Node_9 [shape=record,color=red,label="{9\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000b}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0011}"];
MethodNode[shape=record,label="{public static int androidx.recyclerview.widget.RecyclerView.LayoutManager.chooseSize((r3v0 'spec' int A[D('spec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'desired' int A[D('desired' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'min' int A[D('min' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x0010 \-\> B:10:?, CROSS_EDGE: B:17:0x0019 \-\> B:10:?\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_9;Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_12 -> Node_16;
Node_17 -> Node_10;
Node_15 -> Node_10;
Node_14 -> Node_10;
Node_9 -> Node_11;
Node_13 -> Node_14;
Node_16 -> Node_17;
}

