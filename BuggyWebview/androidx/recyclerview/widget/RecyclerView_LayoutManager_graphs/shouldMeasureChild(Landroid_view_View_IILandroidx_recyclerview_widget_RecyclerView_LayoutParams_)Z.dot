digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.shouldMeasureChild(Landroid\/view\/View;IILandroidx\/recyclerview\/widget\/RecyclerView$LayoutParams;)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x0004|if (r3.isLayoutRequested() != false) goto L11\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006}"];
Node_20 [shape=record,label="{20\:\ 0x0008|if (r2.mMeasurementCacheEnabled == false) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x000a}"];
Node_22 [shape=record,label="{22\:\ 0x0014|if (isMeasurementUpToDate(r3.getWidth(), r4, r6.width) == false) goto L11\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016}"];
Node_24 [shape=record,label="{24\:\ 0x0020|if (isMeasurementUpToDate(r3.getHeight(), r5, r6.height) != false) goto L9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0023|SYNTHETIC\lRETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|RETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.RecyclerView.LayoutManager.shouldMeasureChild((r2v0 'this' androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'widthSpec' int A[D('widthSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'heightSpec' int A[D('heightSpec' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'lp' androidx.recyclerview.widget.RecyclerView$LayoutParams A[D('lp' androidx.recyclerview.widget.RecyclerView$LayoutParams), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:27:0x0025 \-\> B:28:0x0026, CROSS_EDGE: B:22:0x0014 \-\> B:27:0x0025, CROSS_EDGE: B:20:0x0008 \-\> B:27:0x0025, CROSS_EDGE: B:18:0x0004 \-\> B:27:0x0025\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_16;
Node_27 -> Node_16;
}

