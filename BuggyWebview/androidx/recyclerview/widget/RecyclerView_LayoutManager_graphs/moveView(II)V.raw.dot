digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.moveView(II)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: INVOKE  (r0 I:android.view.View) = (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager), (r5 I:int A[D('fromIndex' int)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)] (LINE:8856)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('view' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x000d  (LINE:8857)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|0x0006: INVOKE  (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager), (r5 I:int A[D('fromIndex' int)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.detachViewAt(int):void A[MD:(int):void (m)] (LINE:8861)\l0x0009: INVOKE  \l  (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager)\l  (r0 I:android.view.View A[D('view' android.view.View)])\l  (r6 I:int A[D('toIndex' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.attachView(android.view.View, int):void A[MD:(android.view.View, int):void (m)] (LINE:8862)\l}"];
Node_13 [shape=record,label="{13\:\ 0x000c|RETURN\l|0x000c: RETURN    (LINE:8863)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException  (LINE:8858)\l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) type: DIRECT call: java.lang.StringBuilder.\<init\>():void A[MD:():void (c)]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"Cannot move a child from non\-existing index:\" \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:int A[D('fromIndex' int)]) type: VIRTUAL call: java.lang.StringBuilder.append(int):java.lang.StringBuilder A[MD:(int):java.lang.StringBuilder (c)]\l0x001c: IGET  (r3 I:androidx.recyclerview.widget.RecyclerView) = (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mRecyclerView androidx.recyclerview.widget.RecyclerView \l0x001e: INVOKE  (r3 I:java.lang.String) = (r3 I:androidx.recyclerview.widget.RecyclerView) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.toString():java.lang.String A[MD:():java.lang.String (s)] (LINE:8859)\l0x0022: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) type: VIRTUAL call: java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder A[MD:(java.lang.String):java.lang.StringBuilder (c)]\l0x0025: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) type: VIRTUAL call: java.lang.StringBuilder.toString():java.lang.String A[MD:():java.lang.String (c)]\l0x0029: INVOKE  (r1 I:java.lang.IllegalArgumentException), (r2 I:java.lang.String) type: DIRECT call: java.lang.IllegalArgumentException.\<init\>(java.lang.String):void A[MD:(java.lang.String):void (c)]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.LayoutManager.moveView((r4 'this' I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:15:0x002c \-\> B:9:?\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0004\-0x002c: r0 'view' Landroid\/view\/View;\l  \-1 \-0x002c: r5 'fromIndex' I\l  \-1 \-0x002c: r6 'toIndex' I\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_9;
}

