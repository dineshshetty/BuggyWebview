digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.getChildMeasureSpec(IIIZ)I" {
subgraph cluster_Region_1309876799 {
label = "R(3:1|(1:(1:4)(1:8))(1:(1:10)(1:(1:13)(1:(1:16))))|6)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0000|int int r0 = java.lang.Math.max(0, r4 \- r5)\lint r1 = 0\lint r2 = 0\l}"];
subgraph cluster_IfRegion_106254668 {
label = "IF [B:20:0x0009] THEN: R(1:(1:4)(1:8)) ELSE: R(1:(1:10)(1:(1:13)(1:(1:16))))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0009|if (r7 != false) goto L3\l}"];
subgraph cluster_Region_89628192 {
label = "R(1:(1:4)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1141211951 {
label = "IF [B:21:0x000b] THEN: R(1:4) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x000b|if (r6 \>= 0) goto L4\l}"];
subgraph cluster_Region_1639799444 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x000d|r1 = r6\lr2 = androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY\l}"];
}
subgraph cluster_Region_1257740137 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0011|r1 = 0\lr2 = 0\l}"];
}
}
}
subgraph cluster_Region_955204243 {
label = "R(1:(1:10)(1:(1:13)(1:(1:16)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_345811955 {
label = "IF [B:24:0x0014] THEN: R(1:10) ELSE: R(1:(1:13)(1:(1:16))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0014|if (r6 \>= 0) goto L10\l}"];
subgraph cluster_Region_488791080 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0016|r1 = r6\lr2 = androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY\l}"];
}
subgraph cluster_Region_763593182 {
label = "R(1:(1:13)(1:(1:16))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1173840826 {
label = "IF [B:27:0x001b] THEN: R(1:13) ELSE: R(1:(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x001b|if (r6 == (\-1)) goto L13\l}"];
subgraph cluster_Region_1129125254 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001d|r1 = r0\lr2 = androidx.constraintlayout.core.widgets.analyzer.BasicMeasure.EXACTLY\l}"];
}
subgraph cluster_Region_122571341 {
label = "R(1:(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1996274276 {
label = "IF [B:30:0x0022] THEN: R(1:16) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0022|if (r6 == (\-2)) goto L16\l}"];
subgraph cluster_Region_405015734 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0024|r1 = r0\lr2 = Integer.MIN_VALUE\l}"];
}
}
}
}
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x002b|RETURN\l|return android.view.View.MeasureSpec.makeMeasureSpec(r1, r2)\l}"];
}
Node_17 [shape=record,color=red,label="{17\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0027|PHI: r1 r2 \l  PHI: (r1v5 'resultSize' int) = (r1v1 'resultSize' int), (r1v2 'resultSize' int), (r1v3 'resultSize' int), (r1v4 'resultSize' int), (r1v6 'resultSize' int), (r1v7 'resultSize' int) binds: [B:30:0x0022, B:31:0x0024, B:28:0x001d, B:25:0x0016, B:23:0x0011, B:22:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 'resultMode' int) = (r2v0 'resultMode' int), (r2v1 'resultMode' int), (r2v2 'resultMode' int), (r2v3 'resultMode' int), (r2v5 'resultMode' int), (r2v6 'resultMode' int) binds: [B:30:0x0022, B:31:0x0024, B:28:0x001d, B:25:0x0016, B:23:0x0011, B:22:0x000d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x001a}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0021}"];
MethodNode[shape=record,label="{public static int androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildMeasureSpec((r4v0 'parentSize' int A[D('parentSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'padding' int A[D('padding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'childDimension' int A[D('childDimension' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'canScroll' boolean A[D('canScroll' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\l\{Ljava\/lang\/Deprecated;=Annotation\{RUNTIME, type=Ljava\/lang\/Deprecated;, values=\{\}\}\}\lINLINE_NOT_NEEDED\lCROSS_EDGE: B:23:0x0011 \-\> B:32:0x0027, CROSS_EDGE: B:25:0x0016 \-\> B:32:0x0027, CROSS_EDGE: B:28:0x001d \-\> B:32:0x0027, CROSS_EDGE: B:31:0x0024 \-\> B:32:0x0027, CROSS_EDGE: B:30:0x0022 \-\> B:32:0x0027\l}"];
MethodNode -> Node_17;Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_33 -> Node_18;
Node_17 -> Node_19;
Node_32 -> Node_33;
Node_26 -> Node_27;
Node_29 -> Node_30;
}

