digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|androidx.recyclerview.widget.RecyclerView r0 = r2.mRecyclerView\l}"];
Node_16 [shape=record,label="{16\:\ 0x0003|if (r0 == null) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0005}"];
Node_18 [shape=record,label="{18\:\ 0x0007|if (r0.mAdapter != null) goto L5\l}"];
Node_20 [shape=record,label="{20\:\ 0x000a}"];
Node_21 [shape=record,label="{21\:\ 0x000e|if (canScrollVertically() == false) goto L10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0010}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\lORIG_RETURN\l|return r2.mRecyclerView.mAdapter.getItemCount()\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|RETURN\l|return 1\l}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility((r2v0 'this' androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x000e \-\> B:23:0x0018, CROSS_EDGE: B:24:0x0019 \-\> B:14:?, CROSS_EDGE: B:16:0x0003 \-\> B:24:0x0019\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State):int]\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_24[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

