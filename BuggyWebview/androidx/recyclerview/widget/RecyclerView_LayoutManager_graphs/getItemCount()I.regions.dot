digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.getItemCount()I" {
subgraph cluster_Region_808080683 {
label = "R(3:1|2|(2:(1:6)|(1:8)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0000|androidx.recyclerview.widget.RecyclerView androidx.recyclerview.widget.RecyclerView r0 = r2.mRecyclerView\l}"];
Node_14 [shape=record,label="{14\:\ 0x0002|androidx.recyclerview.widget.RecyclerView.Adapter r0 = r0 != null ? r0.getAdapter() : null\l}"];
subgraph cluster_Region_1959951910 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1632705647 {
label = "IF [B:17:0x000a] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x000a|PHI: r0 \l  PHI: (r0v2 'a' androidx.recyclerview.widget.RecyclerView$Adapter) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L5\l}"];
subgraph cluster_Region_2147198468 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r0.getItemCount()\l}"];
}
}
subgraph cluster_Region_1996677236 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0011|RETURN\lORIG_RETURN\l|return 0\l}"];
}
}
}
Node_11 [shape=record,color=red,label="{11\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0004}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x000c}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0009}"];
MethodNode[shape=record,label="{public int androidx.recyclerview.widget.RecyclerView.LayoutManager.getItemCount((r2v0 'this' androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:19:0x0011 \-\> B:20:0x0012, CROSS_EDGE: B:16:0x0009 \-\> B:17:0x000a\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_11;Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_21 -> Node_12;
Node_19 -> Node_12;
Node_11 -> Node_13;
Node_15 -> Node_17;
Node_18 -> Node_21;
Node_16 -> Node_17;
}

