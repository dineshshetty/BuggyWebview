digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.isViewPartiallyVisible(Landroid\/view\/View;ZZ)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000}"];
Node_18 [shape=record,label="{18\:\ 0x000a|if (r4.mHorizontalBoundCheck.isViewWithinBoundFlags(r5, 24579) == false) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x000c}"];
Node_20 [shape=record,label="{20\:\ 0x0012|if (r4.mVerticalBoundCheck.isViewWithinBoundFlags(r5, 24579) == false) goto L12\l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|r1 = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|PHI: r1 \l  PHI: (r1v3 'isViewFullyVisible' boolean) = (r1v2 'isViewFullyVisible' boolean), (r1v6 'isViewFullyVisible' boolean) binds: [B:22:0x0016, B:21:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|RETURN\l|return r1\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|if (r1 != false) goto L10\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|RETURN\lORIG_RETURN\l|return false\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|r1 = false\l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.RecyclerView.LayoutManager.isViewPartiallyVisible((r4v0 'this' androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'child' android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'completelyVisible' boolean A[D('completelyVisible' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'acceptEndPointInclusion' boolean A[D('acceptEndPointInclusion' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001e \-\> B:16:?, CROSS_EDGE: B:25:0x001a \-\> B:28:0x001e, CROSS_EDGE: B:22:0x0016 \-\> B:23:0x0017, CROSS_EDGE: B:18:0x000a \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_16;
Node_25 -> Node_27;
Node_25 -> Node_29[style=dashed];
Node_27 -> Node_16;
Node_29 -> Node_16;
Node_22 -> Node_23;
}

