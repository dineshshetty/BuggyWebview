digraph "CFG forandroidx.recyclerview.widget.RecyclerView.LayoutManager.isViewPartiallyVisible(Landroid\/view\/View;ZZ)Z" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, short, byte, char]) = (24579(0x6003, float:3.4443E\-41) ??[int, float, short, byte, char])  (LINE:9944)\l0x0002: IGET  (r1 I:androidx.recyclerview.widget.ViewBoundsCheck) = (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mHorizontalBoundCheck androidx.recyclerview.widget.ViewBoundsCheck  (LINE:9946)\l0x0004: INVOKE  (r1 I:boolean) = \l  (r1 I:androidx.recyclerview.widget.ViewBoundsCheck)\l  (r5 I:android.view.View A[D('child' android.view.View)])\l  (r0 I:int A[D('boundsFlag' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.isViewWithinBoundFlags(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)]\l0x0008: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x0009: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x000a|0x000a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_19 [shape=record,label="{19\:\ 0x000c|0x000c: IGET  (r1 I:androidx.recyclerview.widget.ViewBoundsCheck) = (r4 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) androidx.recyclerview.widget.RecyclerView.LayoutManager.mVerticalBoundCheck androidx.recyclerview.widget.ViewBoundsCheck \l0x000e: INVOKE  (r1 I:boolean) = \l  (r1 I:androidx.recyclerview.widget.ViewBoundsCheck)\l  (r5 I:android.view.View A[D('child' android.view.View)])\l  (r0 I:int A[D('boundsFlag' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.isViewWithinBoundFlags(android.view.View, int):boolean A[MD:(android.view.View, int):boolean (m)] (LINE:9948)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0012|0x0012: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0016 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0014|0x0014: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|0x0017: IF  (r6 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('completelyVisible' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001a  (LINE:9949)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0019|RETURN\l|0x0019: RETURN  (r1 I:boolean A[D('isViewFullyVisible' boolean)])  (LINE:9950)\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001a|0x001a: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isViewFullyVisible' boolean)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x001d  (LINE:9952)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001d|RETURN\lORIG_RETURN\l|0x001d: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x001e: RETURN  (r2 I:boolean) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|0x001e: RETURN  (r2 I:boolean) A[SYNTHETIC]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0016|0x0016: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.RecyclerView.LayoutManager.isViewPartiallyVisible((r4 'this' I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.View A[D('child' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('completelyVisible' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('acceptEndPointInclusion' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x001e \-\> B:16:?, CROSS_EDGE: B:25:0x001a \-\> B:28:0x001e, CROSS_EDGE: B:22:0x0016 \-\> B:23:0x0017, CROSS_EDGE: B:18:0x000a \-\> B:22:0x0016\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0002\-0x001e: r0 'boundsFlag' I\l  0x0017\-0x001e: r1 'isViewFullyVisible' Z\l  \-1 \-0x001e: r5 'child' Landroid\/view\/View;\l  \-1 \-0x001e: r6 'completelyVisible' Z\l  \-1 \-0x001e: r7 'acceptEndPointInclusion' Z\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_16;
Node_25 -> Node_27;
Node_25 -> Node_29[style=dashed];
Node_27 -> Node_16;
Node_29 -> Node_16;
Node_22 -> Node_23;
}

