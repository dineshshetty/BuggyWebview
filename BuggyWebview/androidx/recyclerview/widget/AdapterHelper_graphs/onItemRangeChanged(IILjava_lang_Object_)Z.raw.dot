digraph "CFG forandroidx.recyclerview.widget.AdapterHelper.onItemRangeChanged(IILjava\/lang\/Object;)Z" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:504)\l0x0001: CONST  (r1 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0002|0x0002: IF  (r7 I:??[int, byte, short, char] A[D('itemCount' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:15:0x0005 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0004|RETURN\l|0x0004: RETURN  (r0 I:boolean)  (LINE:505)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0005|0x0005: IGET  (r2 I:java.util.ArrayList\<androidx.recyclerview.widget.AdapterHelper$UpdateOp\>) = (r5 I:androidx.recyclerview.widget.AdapterHelper) androidx.recyclerview.widget.AdapterHelper.mPendingUpdates java.util.ArrayList  (LINE:507)\l0x0007: CONST  (r3 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0008: INVOKE  (r4 I:androidx.recyclerview.widget.AdapterHelper$UpdateOp) = \l  (r5 I:androidx.recyclerview.widget.AdapterHelper)\l  (r3 I:int)\l  (r6 I:int A[D('positionStart' int)])\l  (r7 I:int A[D('itemCount' int)])\l  (r8 I:java.lang.Object A[D('payload' java.lang.Object)])\l type: VIRTUAL call: androidx.recyclerview.widget.AdapterHelper.obtainUpdateOp(int, int, int, java.lang.Object):androidx.recyclerview.widget.AdapterHelper$UpdateOp A[MD:(int, int, int, java.lang.Object):androidx.recyclerview.widget.AdapterHelper$UpdateOp (m)]\l0x000c: INVOKE  (r2 I:java.util.ArrayList), (r4 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x000f: IGET  (r2 I:int) = (r5 I:androidx.recyclerview.widget.AdapterHelper) androidx.recyclerview.widget.AdapterHelper.mExistingUpdateTypes int  (LINE:508)\l0x0011: ARITH  (r2 I:??[int, boolean]) = (r2 I:??[int, boolean, short, byte, char]) \| (r3 I:??[int, boolean, short, byte, char]) \l0x0012: IPUT  (r2 I:int), (r5 I:androidx.recyclerview.widget.AdapterHelper) androidx.recyclerview.widget.AdapterHelper.mExistingUpdateTypes int \l0x0014: IGET  (r2 I:java.util.ArrayList\<androidx.recyclerview.widget.AdapterHelper$UpdateOp\>) = (r5 I:androidx.recyclerview.widget.AdapterHelper) androidx.recyclerview.widget.AdapterHelper.mPendingUpdates java.util.ArrayList  (LINE:509)\l0x0016: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.size():int A[MD:():int (c)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x001a|0x001a: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:? \l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|RETURN\lORIG_RETURN\l|0x001c: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x001d: RETURN  (r0 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x001d: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeChanged((r5 'this' I:androidx.recyclerview.widget.AdapterHelper A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('positionStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('itemCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Object A[D('payload' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x001d \-\> B:11:?, CROSS_EDGE: B:16:0x001a \-\> B:18:0x001d\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x001d: r6 'positionStart' I\l  \-1 \-0x001d: r7 'itemCount' I\l  \-1 \-0x001d: r8 'payload' Ljava\/lang\/Object;\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_11;
Node_19 -> Node_11;
}

