digraph "CFG forandroidx.recyclerview.widget.DiffUtil.calculateDiff(Landroidx\/recyclerview\/widget\/DiffUtil$Callback;Z)Landroidx\/recyclerview\/widget\/DiffUtil$DiffResult;" {
Node_39 [shape=record,label="{39\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_41 [shape=record,label="{41\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r19 I:androidx.recyclerview.widget.DiffUtil$Callback A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.getOldListSize():int A[MD:():int (m)] (LINE:123)\l0x0004: INVOKE  (r1 I:int) = (r19 I:androidx.recyclerview.widget.DiffUtil$Callback A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.getNewListSize():int A[MD:():int (m)] (LINE:124)\l0x0008: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:126)\l0x000a: INVOKE  (r2 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x000d: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:130)\l0x000f: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0012: MOVE  (r9 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l0x0013: NEW_INSTANCE  (r3 I:androidx.recyclerview.widget.DiffUtil$Range) =  androidx.recyclerview.widget.DiffUtil$Range  (LINE:132)\l0x0015: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l0x0016: INVOKE  \l  (r3 I:androidx.recyclerview.widget.DiffUtil$Range)\l  (r4 I:int)\l  (r0 I:int A[D('oldSize' int)])\l  (r4 I:int)\l  (r1 I:int A[D('newSize' int)])\l type: DIRECT call: androidx.recyclerview.widget.DiffUtil.Range.\<init\>(int, int, int, int):void A[MD:(int, int, int, int):void (m)]\l0x0019: INVOKE  \l  (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)])\l  (r3 I:java.lang.Object)\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x001c: ARITH  (r3 I:int) = (r0 I:int A[D('oldSize' int)]) + (r1 I:int A[D('newSize' int)])  (LINE:134)\l0x001e: ARITH  (r4 I:int) = (r0 I:int A[D('oldSize' int)]) \- (r1 I:int A[D('newSize' int)]) \l0x0020: INVOKE  (r4 I:int) = (r4 I:int) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0024: ARITH  (r18 I:int) = (r3 I:int) + (r4 I:int) \l0x0026: ARITH  (r3 I:int) = (r18 I:int A[D('max' int)]) * (2 int)  (LINE:138)\l0x0028: NEW_ARRAY  (r8 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x002a: ARITH  (r3 I:int) = (r18 I:int A[D('max' int)]) * (2 int)  (LINE:139)\l0x002c: NEW_ARRAY  (r7 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x002e: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:142)\l0x0030: INVOKE  (r3 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0033: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x0034|LOOP_START\lLOOP:0: B:42:0x0034\-\>B:75:0x0034\l|0x0034: INVOKE  (r3 I:boolean) = (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)] (LINE:143)\l}"];
Node_43 [shape=record,label="{43\:\ 0x0038|0x0038: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x00fb \l}"];
Node_44 [shape=record,label="{44\:\ 0x003a|0x003a: INVOKE  (r3 I:int) = (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:144)\l0x003e: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l0x0040: INVOKE  (r3 I:java.lang.Object) = (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]), (r3 I:int) type: INTERFACE call: java.util.List.remove(int):java.lang.Object A[MD:(int):E (c)]\l0x0044: CHECK_CAST (r3 I:androidx.recyclerview.widget.DiffUtil$Range) = (androidx.recyclerview.widget.DiffUtil$Range) (r3 I:??[OBJECT, ARRAY]) \l0x0046: IGET  (r11 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.oldListStart int  (LINE:145)\l0x0048: IGET  (r12 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.oldListEnd int \l0x004a: IGET  (r13 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l0x004c: IGET  (r14 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.newListEnd int \l0x004e: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback)]) \l0x0050: MOVE  (r15 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('forward' int[])]) \l0x0051: MOVE  (r16 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('backward' int[])]) \l0x0053: MOVE  (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('max' int)]) \l0x0055: INVOKE  (r4 I:androidx.recyclerview.widget.DiffUtil$Snake) = \l  (r10 I:androidx.recyclerview.widget.DiffUtil$Callback)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:int)\l  (r15 I:int[])\l  (r16 I:int[])\l  (r17 I:int)\l type: STATIC call: androidx.recyclerview.widget.DiffUtil.diffPartial(androidx.recyclerview.widget.DiffUtil$Callback, int, int, int, int, int[], int[], int):androidx.recyclerview.widget.DiffUtil$Snake A[MD:(androidx.recyclerview.widget.DiffUtil$Callback, int, int, int, int, int[], int[], int):androidx.recyclerview.widget.DiffUtil$Snake (m)]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0059|0x0059: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x00f6  (LINE:147)\l}"];
Node_72 [shape=record,label="{72\:\ 0x00f6|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x00f6|0x00f6: INVOKE  \l  (r6 I:java.util.List A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)])\l  (r3 I:java.lang.Object A[D('range' androidx.recyclerview.widget.DiffUtil$Range)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:191)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0034|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x0034|LOOP_END\lSYNTHETIC\lLOOP:0: B:42:0x0034\-\>B:75:0x0034\l}"];
Node_74 [shape=record,label="{74\:\ 0x005b|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x005b|0x005b: IGET  (r5 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int  (LINE:148)\l}"];
Node_47 [shape=record,label="{47\:\ 0x005d|0x005d: IF  (r5 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:49:0x0062 \l}"];
Node_48 [shape=record,label="{48\:\ 0x005f|0x005f: INVOKE  \l  (r2 I:java.util.List A[D('snakes' java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>)])\l  (r4 I:java.lang.Object A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:149)\l}"];
Node_49 [shape=record,label="{49\:\ 0x0062|0x0062: IGET  (r5 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:152)\l0x0064: IGET  (r10 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.oldListStart int \l0x0066: ARITH  (r5 I:int) = (r5 I:int) + (r10 I:int) \l0x0067: IPUT  \l  (r5 I:int)\l  (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)])\l androidx.recyclerview.widget.DiffUtil.Snake.x int \l0x0069: IGET  (r5 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:153)\l0x006b: IGET  (r10 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l0x006d: ARITH  (r5 I:int) = (r5 I:int) + (r10 I:int) \l0x006e: IPUT  \l  (r5 I:int)\l  (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)])\l androidx.recyclerview.widget.DiffUtil.Snake.y int \l0x0070: INVOKE  (r5 I:boolean) = (r6 I:java.util.List A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)] (LINE:156)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0074|0x0074: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x007c \l}"];
Node_51 [shape=record,label="{51\:\ 0x0076|0x0076: NEW_INSTANCE  (r5 I:androidx.recyclerview.widget.DiffUtil$Range) =  androidx.recyclerview.widget.DiffUtil$Range \l0x0078: INVOKE  (r5 I:androidx.recyclerview.widget.DiffUtil$Range) type: DIRECT call: androidx.recyclerview.widget.DiffUtil.Range.\<init\>():void A[MD:():void (m)]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0088|0x0088: IGET  (r10 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.oldListStart int  (LINE:158)\l0x008a: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListStart int \l0x008c: IGET  (r10 I:int) = (r3 I:androidx.recyclerview.widget.DiffUtil$Range A[D('range' androidx.recyclerview.widget.DiffUtil$Range)]) androidx.recyclerview.widget.DiffUtil.Range.newListStart int  (LINE:159)\l0x008e: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l0x0090: IGET  (r10 I:boolean) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.reverse boolean  (LINE:160)\l}"];
Node_54 [shape=record,label="{54\:\ 0x0092|0x0092: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x009d \l}"];
Node_55 [shape=record,label="{55\:\ 0x0094|0x0094: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:161)\l0x0096: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListEnd int \l0x0098: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:162)\l0x009a: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListEnd int \l}"];
Node_60 [shape=record,label="{60\:\ 0x00b6|0x00b6: INVOKE  \l  (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)])\l  (r5 I:java.lang.Object A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:172)\l0x00b9: MOVE  (r10 I:??[OBJECT, ARRAY]) = (r3 I:??[OBJECT, ARRAY] A[D('range' androidx.recyclerview.widget.DiffUtil$Range)])  (LINE:176)\l0x00ba: IGET  (r11 I:boolean) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.reverse boolean  (LINE:177)\l}"];
Node_61 [shape=record,label="{61\:\ 0x00bc|0x00bc: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:66:0x00e4 \l}"];
Node_62 [shape=record,label="{62\:\ 0x00be|0x00be: IGET  (r11 I:boolean) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.removal boolean  (LINE:178)\l}"];
Node_63 [shape=record,label="{63\:\ 0x00c0|0x00c0: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x00d3 \l}"];
Node_64 [shape=record,label="{64\:\ 0x00c2|0x00c2: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:179)\l0x00c4: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00c6: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00c7: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l0x00c9: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListStart int \l0x00cb: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:180)\l0x00cd: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00cf: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00d0: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l}"];
Node_67 [shape=record,label="{67\:\ 0x00f2|0x00f2: INVOKE  \l  (r9 I:java.util.List A[D('stack' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)])\l  (r10 I:java.lang.Object A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l type: INTERFACE call: java.util.List.add(java.lang.Object):boolean A[MD:(E):boolean (c)] (LINE:189)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0034|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x00d3|0x00d3: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:182)\l0x00d5: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00d7: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00d8: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListStart int \l0x00da: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:183)\l0x00dc: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00de: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00df: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l0x00e1: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l}"];
Node_66 [shape=record,label="{66\:\ 0x00e4|0x00e4: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:186)\l0x00e6: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00e8: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00e9: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListStart int \l0x00eb: IGET  (r11 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:187)\l0x00ed: IGET  (r12 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x00ef: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) \l0x00f0: IPUT  \l  (r11 I:int)\l  (r10 I:androidx.recyclerview.widget.DiffUtil$Range A[D('right' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListStart int \l}"];
Node_56 [shape=record,label="{56\:\ 0x009d|0x009d: IGET  (r10 I:boolean) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.removal boolean  (LINE:164)\l}"];
Node_57 [shape=record,label="{57\:\ 0x009f|0x009f: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x00ac \l}"];
Node_58 [shape=record,label="{58\:\ 0x00a1|0x00a1: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:165)\l0x00a3: ARITH  (r10 I:int) = (r10 I:int) + (\-1 int) \l0x00a5: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListEnd int \l0x00a7: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:166)\l0x00a9: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListEnd int \l}"];
Node_59 [shape=record,label="{59\:\ 0x00ac|0x00ac: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:168)\l0x00ae: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.oldListEnd int \l0x00b0: IGET  (r10 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:169)\l0x00b2: ARITH  (r10 I:int) = (r10 I:int) + (\-1 int) \l0x00b4: IPUT  \l  (r10 I:int)\l  (r5 I:androidx.recyclerview.widget.DiffUtil$Range A[D('left' androidx.recyclerview.widget.DiffUtil$Range)])\l androidx.recyclerview.widget.DiffUtil.Range.newListEnd int \l}"];
Node_52 [shape=record,label="{52\:\ 0x007c|0x007c: INVOKE  (r5 I:int) = (r6 I:java.util.List A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)] (LINE:157)\l0x0080: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l0x0082: INVOKE  (r5 I:java.lang.Object) = (r6 I:java.util.List A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]), (r5 I:int) type: INTERFACE call: java.util.List.remove(int):java.lang.Object A[MD:(int):E (c)] (LINE:156)\l0x0086: CHECK_CAST (r5 I:androidx.recyclerview.widget.DiffUtil$Range) = (androidx.recyclerview.widget.DiffUtil$Range) (r5 I:??[OBJECT, ARRAY]) \l}"];
Node_73 [shape=record,label="{73\:\ 0x00fb|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x00fb|0x00fb: SGET  (r3 I:java.util.Comparator\<androidx.recyclerview.widget.DiffUtil$Snake\>) =  androidx.recyclerview.widget.DiffUtil.SNAKE_COMPARATOR java.util.Comparator  (LINE:196)\l0x00fd: INVOKE  \l  (r2 I:java.util.List A[D('snakes' java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>)])\l  (r3 I:java.util.Comparator)\l type: STATIC call: java.util.Collections.sort(java.util.List, java.util.Comparator):void A[MD:\<T\>:(java.util.List\<T\>, java.util.Comparator\<? super T\>):void (c)]\l0x0100: NEW_INSTANCE  (r10 I:androidx.recyclerview.widget.DiffUtil$DiffResult) =  androidx.recyclerview.widget.DiffUtil$DiffResult  (LINE:198)\l0x0102: MOVE  (r3 I:??[OBJECT, ARRAY]) = (r10 I:??[OBJECT, ARRAY]) \l0x0103: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r19 I:??[OBJECT, ARRAY] A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback)]) \l0x0105: MOVE  (r5 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY] A[D('snakes' java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>)]) \l0x0106: MOVE  (r11 I:??[OBJECT, ARRAY]) = (r6 I:??[OBJECT, ARRAY] A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) \l0x0107: MOVE  (r6 I:??[OBJECT, ARRAY] A[D('rangePool' java.util.List\<androidx.recyclerview.widget.DiffUtil$Range\>)]) = (r8 I:??[OBJECT, ARRAY] A[D('forward' int[])]) \l0x0108: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r7 I:??[OBJECT, ARRAY] A[D('backward' int[])]) \l0x0109: MOVE  (r13 I:??[OBJECT, ARRAY]) = (r8 I:??[OBJECT, ARRAY] A[D('forward' int[])]) \l0x010a: MOVE  (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('forward' int[])]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('detectMoves' boolean)]) \l0x010c: INVOKE  \l  (r3 I:androidx.recyclerview.widget.DiffUtil$DiffResult)\l  (r4 I:androidx.recyclerview.widget.DiffUtil$Callback)\l  (r5 I:java.util.List)\l  (r6 I:int[])\l  (r7 I:int[])\l  (r8 I:boolean)\l type: DIRECT call: androidx.recyclerview.widget.DiffUtil.DiffResult.\<init\>(androidx.recyclerview.widget.DiffUtil$Callback, java.util.List, int[], int[], boolean):void A[MD:(androidx.recyclerview.widget.DiffUtil$Callback, java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>, int[], int[], boolean):void (m)]\l}"];
Node_71 [shape=record,label="{71\:\ 0x010f|RETURN\l|0x010f: RETURN  (r10 I:androidx.recyclerview.widget.DiffUtil$DiffResult) \l}"];
Node_40 [shape=record,label="{40\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public static androidx.recyclerview.widget.DiffUtil$DiffResult androidx.recyclerview.widget.DiffUtil.calculateDiff((r19 I:androidx.recyclerview.widget.DiffUtil$Callback A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[D('detectMoves' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:67:0x00f2 \-\> B:42:0x0034, CROSS_EDGE: B:65:0x00d3 \-\> B:67:0x00f2, CROSS_EDGE: B:66:0x00e4 \-\> B:67:0x00f2, CROSS_EDGE: B:58:0x00a1 \-\> B:60:0x00b6, CROSS_EDGE: B:59:0x00ac \-\> B:60:0x00b6, CROSS_EDGE: B:52:0x007c \-\> B:53:0x0088, CROSS_EDGE: B:47:0x005d \-\> B:49:0x0062, BACK_EDGE: B:68:0x00f6 \-\> B:42:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0088\-0x00f5: r5 'left' Landroidx\/recyclerview\/widget\/DiffUtil$Range;\l  0x00ba\-0x00f5: r10 'right' Landroidx\/recyclerview\/widget\/DiffUtil$Range;\l  0x0046\-0x00f9: r3 'range' Landroidx\/recyclerview\/widget\/DiffUtil$Range;\l  0x0059\-0x00f9: r4 'snake' Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\l  0x0034\-0x0107: r6 'rangePool' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/recyclerview\/widget\/DiffUtil$Range;\>;\l  0x002e\-0x0109: r7 'backward' [I\l  0x002a\-0x010a: r8 'forward' [I\l  0x0004\-0x010f: r0 'oldSize' I\l  0x0008\-0x010f: r1 'newSize' I\l  0x000d\-0x010f: r2 'snakes' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\>;\l  0x0013\-0x010f: r9 'stack' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/recyclerview\/widget\/DiffUtil$Range;\>;\l  0x0107\-0x010f: r11 'rangePool' Ljava\/util\/List;, signature: Ljava\/util\/List\<Landroidx\/recyclerview\/widget\/DiffUtil$Range;\>;\l  0x0109\-0x010f: r12 'backward' [I\l  0x010a\-0x010f: r13 'forward' [I\l  0x0026\-0x010f: r18 'max' I\l  \-1 \-0x010f: r19 'cb' Landroidx\/recyclerview\/widget\/DiffUtil$Callback;\l  \-1 \-0x010f: r20 'detectMoves' Z\l}"];
MethodNode -> Node_39;Node_39 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_73;
Node_44 -> Node_45;
Node_45 -> Node_72;
Node_45 -> Node_74[style=dashed];
Node_72 -> Node_68;
Node_68 -> Node_76;
Node_76 -> Node_75;
Node_75 -> Node_42;
Node_74 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_66;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_67;
Node_67 -> Node_77;
Node_77 -> Node_75;
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_52 -> Node_53;
Node_73 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_40;
}

