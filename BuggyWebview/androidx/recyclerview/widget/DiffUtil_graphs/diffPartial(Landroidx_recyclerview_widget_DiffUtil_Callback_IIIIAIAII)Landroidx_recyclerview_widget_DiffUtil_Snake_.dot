digraph "CFG forandroidx.recyclerview.widget.DiffUtil.diffPartial(Landroidx\/recyclerview\/widget\/DiffUtil$Callback;IIII[I[II)Landroidx\/recyclerview\/widget\/DiffUtil$Snake;" {
Node_97 [shape=record,label="{97\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_99 [shape=record,label="{99\:\ 0x0000|int r3 = r20 \- r19\lint r4 = r22 \- r21\l}"];
Node_100 [shape=record,label="{100\:\ 0x000d|if ((r20 \- r19) \< 1) goto L90\l}"];
Node_101 [shape=record,label="{101\:\ 0x000f}"];
Node_102 [shape=record,label="{102\:\ 0x0011|if ((r22 \- r21) \>= 1) goto L8\l}"];
Node_103 [shape=record,label="{103\:\ 0x0013}"];
Node_193 [shape=record,label="{193\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_98 [shape=record,label="{98\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_104 [shape=record,label="{104\:\ 0x0017|int r5 = r3 \- r4\lint r7 = ((r3 + r4) + 1) \/ 2\ljava.util.Arrays.fill(r23, (r25 \- r7) \- 1, (r25 + r7) + 1, 0)\ljava.util.Arrays.fill(r24, ((r25 \- r7) \- 1) + r5, ((r25 + r7) + 1) + r5, r3)\l}"];
Node_105 [shape=record,label="{105\:\ 0x0035|if ((r5 % 2) == 0) goto L89\l}"];
Node_106 [shape=record,label="{106\:\ 0x0037|r8 = true\l}"];
Node_108 [shape=record,label="{108\:\ 0x003a|PHI: r8 \l  PHI: (r8v7 'checkInFwd' boolean) = (r8v6 'checkInFwd' boolean), (r8v8 'checkInFwd' boolean) binds: [B:107:0x0039, B:106:0x0037] A[DONT_GENERATE, DONT_INLINE]\l|r9 = 0\l}"];
Node_109 [shape=record,label="{109\:\ 0x003b|LOOP_START\lLOOP:0: B:109:0x003b\-\>B:168:0x0140\lPHI: r3 r9 \l  PHI: (r3v2 'oldSize' int) = (r3v0 'oldSize' int), (r3v4 'oldSize' int) binds: [B:108:0x003a, B:168:0x0140] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v6 'd' int) = (r9v5 'd' int), (r9v7 'd' int) binds: [B:108:0x003a, B:168:0x0140] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 \> r7) goto L86\l}"];
Node_110 [shape=record,label="{110\:\ 0x003d|int r11 = \-r9\l}"];
Node_111 [shape=record,label="{111\:\ 0x003e|LOOP_START\lLOOP:1: B:111:0x003e\-\>B:138:0x00b4\lPHI: r11 \l  PHI: (r11v1 'k' int) = (r11v0 'k' int), (r11v5 'k' int) binds: [B:110:0x003d, B:138:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 \> r9) goto L47\l}"];
Node_112 [shape=record,label="{112\:\ 0x0040}"];
Node_113 [shape=record,label="{113\:\ 0x0041|if (r11 == (\-r9)) goto L46\l}"];
Node_114 [shape=record,label="{114\:\ 0x0043|if (r11 == r9) goto L20\l}"];
Node_115 [shape=record,label="{115\:\ 0x0045}"];
Node_116 [shape=record,label="{116\:\ 0x004f|if (r23[(r25 + r11) \- 1] \>= r23[(r25 + r11) + 1]) goto L20\l}"];
Node_118 [shape=record,label="{118\:\ 0x0052|int r12 = r23[(r25 + r11) \- 1] + 1\lr13 = true\l}"];
Node_120 [shape=record,label="{120\:\ 0x0060|PHI: r12 r13 \l  PHI: (r12v5 'x' int) = (r12v4 'x' int), (r12v11 'x' int) binds: [B:119:0x005a, B:118:0x0052] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v17 'removal' boolean) = (r13v16 'removal' boolean), (r13v18 'removal' boolean) binds: [B:119:0x005a, B:118:0x0052] A[DONT_GENERATE, DONT_INLINE]\l|int r14 = r12 \- r11\l}"];
Node_121 [shape=record,label="{121\:\ 0x0062|LOOP_START\lLOOP:2: B:121:0x0062\-\>B:125:0x0070\lPHI: r12 r14 \l  PHI: (r12v6 'x' int) = (r12v5 'x' int), (r12v7 'x' int) binds: [B:120:0x0060, B:125:0x0070] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v7 'y' int) = (r14v6 'y' int), (r14v8 'y' int) binds: [B:120:0x0060, B:125:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|if (r12 \>= r3) goto L45\l}"];
Node_122 [shape=record,label="{122\:\ 0x0064|if (r14 \>= r4) goto L44\l}"];
Node_123 [shape=record,label="{123\:\ 0x0066}"];
Node_124 [shape=record,label="{124\:\ 0x006e|if (r18.areItemsTheSame(r19 + r12, r21 + r14) == false) goto L27\l}"];
Node_125 [shape=record,label="{125\:\ 0x0070|LOOP_END\lLOOP:2: B:121:0x0062\-\>B:125:0x0070\l|int r12 = r12 + 1\lint r14 = r14 + 1\l}"];
Node_184 [shape=record,label="{184\:\ 0x0076|SYNTHETIC\l}"];
Node_126 [shape=record,label="{126\:\ 0x0076|r23[r25 + r11] = r12\l}"];
Node_127 [shape=record,label="{127\:\ 0x007a|if (r8 == false) goto L43\l}"];
Node_128 [shape=record,label="{128\:\ 0x007c}"];
Node_129 [shape=record,label="{129\:\ 0x007f|if (r11 \< ((r5 \- r9) + 1)) goto L42\l}"];
Node_130 [shape=record,label="{130\:\ 0x0081}"];
Node_131 [shape=record,label="{131\:\ 0x0084|if (r11 \> ((r5 + r9) \- 1)) goto L41\l}"];
Node_132 [shape=record,label="{132\:\ 0x0086}"];
Node_133 [shape=record,label="{133\:\ 0x008e|if (r23[r25 + r11] \< r24[r25 + r11]) goto L39\l}"];
Node_174 [shape=record,label="{174\:\ 0x0090|SYNTHETIC\l}"];
Node_134 [shape=record,label="{134\:\ 0x0090|androidx.recyclerview.widget.DiffUtil$Snake r6 = new androidx.recyclerview.widget.DiffUtil.Snake()\lr6.f92x = r24[r25 + r11]\lr6.f93y = r6.f92x \- r11\lr6.size = r23[r25 + r11] \- r24[r25 + r11]\lr6.removal = r13\lr6.reverse = false\l}"];
Node_135 [shape=record,label="{135\:\ 0x00b0|RETURN\l|return r6\l}"];
Node_178 [shape=record,label="{178\:\ 0x00b4|SYNTHETIC\l}"];
Node_138 [shape=record,label="{138\:\ 0x00b4|LOOP_END\lLOOP:1: B:111:0x003e\-\>B:138:0x00b4\l|int r11 = r11 + 2\l}"];
Node_181 [shape=record,label="{181\:\ 0x00b4|SYNTHETIC\l}"];
Node_180 [shape=record,label="{180\:\ 0x00b4|SYNTHETIC\l}"];
Node_179 [shape=record,label="{179\:\ 0x00b4|SYNTHETIC\l}"];
Node_183 [shape=record,label="{183\:\ 0x0076|SYNTHETIC\l}"];
Node_182 [shape=record,label="{182\:\ 0x0076|SYNTHETIC\l}"];
Node_119 [shape=record,label="{119\:\ 0x005a|int r12 = r25 + r11\lr12 = r23[r12 + 1]\lr13 = false\l}"];
Node_177 [shape=record,label="{177\:\ 0x00b7|SYNTHETIC\l}"];
Node_139 [shape=record,label="{139\:\ 0x00b7|int r11 = \-r9\l}"];
Node_140 [shape=record,label="{140\:\ 0x00b8|LOOP_START\lLOOP:3: B:140:0x00b8\-\>B:167:0x0139\lPHI: r3 r11 \l  PHI: (r3v4 'oldSize' int) = (r3v2 'oldSize' int), (r3v7 'oldSize' int) binds: [B:139:0x00b7, B:167:0x0139] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v3 'k' int) = (r11v2 'k' int), (r11v4 'k' int) binds: [B:139:0x00b7, B:167:0x0139] A[DONT_GENERATE, DONT_INLINE]\l|if (r11 \> r9) goto L84\l}"];
Node_141 [shape=record,label="{141\:\ 0x00ba|int r12 = r11 + r5\l}"];
Node_142 [shape=record,label="{142\:\ 0x00be|if (r12 == (r9 + r5)) goto L83\l}"];
Node_143 [shape=record,label="{143\:\ 0x00c0}"];
Node_144 [shape=record,label="{144\:\ 0x00c2|if (r12 == ((\-r9) + r5)) goto L56\l}"];
Node_145 [shape=record,label="{145\:\ 0x00c4}"];
Node_146 [shape=record,label="{146\:\ 0x00ce|if (r24[(r25 + r12) \- 1] \>= r24[(r25 + r12) + 1]) goto L56\l}"];
Node_148 [shape=record,label="{148\:\ 0x00d1|int r13 = r24[(r25 + r12) + 1] \- 1\lr14 = true\l}"];
Node_150 [shape=record,label="{150\:\ 0x00df|PHI: r13 r14 \l  PHI: (r13v4 'x' int) = (r13v3 'x' int), (r13v12 'x' int) binds: [B:149:0x00d9, B:148:0x00d1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'removal' boolean) = (r14v0 'removal' boolean), (r14v2 'removal' boolean) binds: [B:149:0x00d9, B:148:0x00d1] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = r13 \- r12\l}"];
Node_151 [shape=record,label="{151\:\ 0x00e1|LOOP_START\lLOOP:4: B:151:0x00e1\-\>B:155:0x00f5\lPHI: r3 r13 r15 \l  PHI: (r3v5 'oldSize' int) = (r3v4 'oldSize' int), (r3v15 'oldSize' int) binds: [B:150:0x00df, B:155:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v5 'x' int) = (r13v4 'x' int), (r13v6 'x' int) binds: [B:150:0x00df, B:155:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'y' int) = (r15v0 'y' int), (r15v2 'y' int) binds: [B:150:0x00df, B:155:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l|if (r13 \<= 0) goto L82\l}"];
Node_152 [shape=record,label="{152\:\ 0x00e3|if (r15 \<= 0) goto L80\l}"];
Node_153 [shape=record,label="{153\:\ 0x00e5|r17 = r3\l}"];
Node_154 [shape=record,label="{154\:\ 0x00f3|if (r18.areItemsTheSame((r19 + r13) + (\-1), (r21 + r15) + (\-1)) == false) goto L63\l}"];
Node_155 [shape=record,label="{155\:\ 0x00f5|LOOP_END\lLOOP:4: B:151:0x00e1\-\>B:155:0x00f5\l|int r13 = r13 + (\-1)\lint r15 = r15 + (\-1)\lr3 = r17\l}"];
Node_191 [shape=record,label="{191\:\ 0x00ff|SYNTHETIC\l}"];
Node_157 [shape=record,label="{157\:\ 0x00ff|PHI: r17 \l  PHI: (r17v4 'oldSize' int) = (r17v3 'oldSize' int), (r17v5 'oldSize' int) binds: [B:156:0x00fd, B:191:0x00ff] A[DONT_GENERATE, DONT_INLINE]\l|r24[r25 + r12] = r13\l}"];
Node_158 [shape=record,label="{158\:\ 0x0103|if (r8 != false) goto L79\l}"];
Node_159 [shape=record,label="{159\:\ 0x0105}"];
Node_160 [shape=record,label="{160\:\ 0x0108|if ((r11 + r5) \< (\-r9)) goto L78\l}"];
Node_161 [shape=record,label="{161\:\ 0x010a}"];
Node_162 [shape=record,label="{162\:\ 0x010c|if ((r11 + r5) \> r9) goto L77\l}"];
Node_163 [shape=record,label="{163\:\ 0x010e}"];
Node_164 [shape=record,label="{164\:\ 0x0116|if (r23[r25 + r12] \< r24[r25 + r12]) goto L75\l}"];
Node_175 [shape=record,label="{175\:\ 0x0118|SYNTHETIC\l}"];
Node_165 [shape=record,label="{165\:\ 0x0118|androidx.recyclerview.widget.DiffUtil$Snake r3 = new androidx.recyclerview.widget.DiffUtil.Snake()\lr3.f92x = r24[r25 + r12]\lr3.f93y = r3.f92x \- r12\lr3.size = r23[r25 + r12] \- r24[r25 + r12]\lr3.removal = r14\lr3.reverse = true\l}"];
Node_166 [shape=record,label="{166\:\ 0x0138|RETURN\l|return r3\l}"];
Node_189 [shape=record,label="{189\:\ 0x0139|SYNTHETIC\l}"];
Node_167 [shape=record,label="{167\:\ 0x0139|LOOP_END\lLOOP:3: B:140:0x00b8\-\>B:167:0x0139\l|int r11 = r11 + 2\lr3 = r17\l}"];
Node_188 [shape=record,label="{188\:\ 0x0139|SYNTHETIC\l}"];
Node_187 [shape=record,label="{187\:\ 0x0139|SYNTHETIC\l}"];
Node_186 [shape=record,label="{186\:\ 0x0139|SYNTHETIC\l}"];
Node_192 [shape=record,label="{192\:\ 0x00fd|SYNTHETIC\l}"];
Node_156 [shape=record,label="{156\:\ 0x00fd|r17 = r3\l}"];
Node_190 [shape=record,label="{190\:\ 0x00fd|SYNTHETIC\l}"];
Node_149 [shape=record,label="{149\:\ 0x00d9|int r13 = r25 + r12\lr13 = r24[r13 \- 1]\lr14 = false\l}"];
Node_185 [shape=record,label="{185\:\ 0x0140|SYNTHETIC\l}"];
Node_168 [shape=record,label="{168\:\ 0x0140|LOOP_END\lLOOP:0: B:109:0x003b\-\>B:168:0x0140\l|int r9 = r9 + 1\l}"];
Node_176 [shape=record,label="{176\:\ 0x0147|SYNTHETIC\l}"];
Node_169 [shape=record,label="{169\:\ 0x0147}"];
Node_170 [shape=record,label="{170\:\ 0x0150|throw new java.lang.IllegalStateException(\"DiffUtil hit an unexpected case while trying to calculate the optimal path. Please make sure your data is not changing during the diff calculation.\")\l}"];
Node_107 [shape=record,label="{107\:\ 0x0039|r8 = false\l}"];
Node_171 [shape=record,label="{171\:\ 0x0151}"];
Node_172 [shape=record,label="{172\:\ 0x0153|RETURN\lORIG_RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static androidx.recyclerview.widget.DiffUtil$Snake androidx.recyclerview.widget.DiffUtil.diffPartial((r18v0 'cb' androidx.recyclerview.widget.DiffUtil$Callback A[D('cb' androidx.recyclerview.widget.DiffUtil$Callback), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'startOld' int A[D('startOld' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'endOld' int A[D('endOld' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'startNew' int A[D('startNew' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'endNew' int A[D('endNew' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'forward' int[] A[D('forward' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'backward' int[] A[D('backward' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'kOffset' int A[D('kOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:125:0x0070 \-\> B:121:0x0062, CROSS_EDGE: B:135:0x00b0 \-\> B:98:?, BACK_EDGE: B:138:0x00b4 \-\> B:111:0x003e, CROSS_EDGE: B:131:0x0084 \-\> B:138:0x00b4, CROSS_EDGE: B:129:0x007f \-\> B:138:0x00b4, CROSS_EDGE: B:127:0x007a \-\> B:138:0x00b4, CROSS_EDGE: B:122:0x0064 \-\> B:126:0x0076, CROSS_EDGE: B:121:0x0062 \-\> B:126:0x0076, CROSS_EDGE: B:119:0x005a \-\> B:120:0x0060, CROSS_EDGE: B:114:0x0043 \-\> B:118:0x0052, CROSS_EDGE: B:113:0x0041 \-\> B:119:0x005a, BACK_EDGE: B:155:0x00f5 \-\> B:151:0x00e1, CROSS_EDGE: B:166:0x0138 \-\> B:98:?, BACK_EDGE: B:167:0x0139 \-\> B:140:0x00b8, CROSS_EDGE: B:162:0x010c \-\> B:167:0x0139, CROSS_EDGE: B:160:0x0108 \-\> B:167:0x0139, CROSS_EDGE: B:158:0x0103 \-\> B:167:0x0139, CROSS_EDGE: B:156:0x00fd \-\> B:157:0x00ff, CROSS_EDGE: B:151:0x00e1 \-\> B:156:0x00fd, CROSS_EDGE: B:149:0x00d9 \-\> B:150:0x00df, CROSS_EDGE: B:144:0x00c2 \-\> B:148:0x00d1, CROSS_EDGE: B:142:0x00be \-\> B:149:0x00d9, BACK_EDGE: B:168:0x0140 \-\> B:109:0x003b, CROSS_EDGE: B:170:0x0150 \-\> B:98:?, CROSS_EDGE: B:107:0x0039 \-\> B:108:0x003a, CROSS_EDGE: B:171:0x0151 \-\> B:172:0x0153\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_97;Node_97 -> Node_99;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_171;
Node_101 -> Node_102;
Node_102 -> Node_103[style=dashed];
Node_102 -> Node_104;
Node_103 -> Node_193;
Node_193 -> Node_98;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_107;
Node_106 -> Node_108;
Node_108 -> Node_109;
Node_109 -> Node_110[style=dashed];
Node_109 -> Node_176;
Node_110 -> Node_111;
Node_111 -> Node_112[style=dashed];
Node_111 -> Node_177;
Node_112 -> Node_113;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_119;
Node_114 -> Node_115[style=dashed];
Node_114 -> Node_118;
Node_115 -> Node_116;
Node_116 -> Node_118;
Node_116 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_120 -> Node_121;
Node_121 -> Node_122[style=dashed];
Node_121 -> Node_182;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_183;
Node_123 -> Node_124;
Node_124 -> Node_125[style=dashed];
Node_124 -> Node_184;
Node_125 -> Node_121;
Node_184 -> Node_126;
Node_126 -> Node_127;
Node_127 -> Node_128[style=dashed];
Node_127 -> Node_179;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_180;
Node_130 -> Node_131;
Node_131 -> Node_132[style=dashed];
Node_131 -> Node_181;
Node_132 -> Node_133;
Node_133 -> Node_174[style=dashed];
Node_133 -> Node_178;
Node_174 -> Node_134;
Node_134 -> Node_135;
Node_135 -> Node_98;
Node_178 -> Node_138;
Node_138 -> Node_111;
Node_181 -> Node_138;
Node_180 -> Node_138;
Node_179 -> Node_138;
Node_183 -> Node_126;
Node_182 -> Node_126;
Node_119 -> Node_120;
Node_177 -> Node_139;
Node_139 -> Node_140;
Node_140 -> Node_141[style=dashed];
Node_140 -> Node_185;
Node_141 -> Node_142;
Node_142 -> Node_143[style=dashed];
Node_142 -> Node_149;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_148;
Node_145 -> Node_146;
Node_146 -> Node_148;
Node_146 -> Node_149[style=dashed];
Node_148 -> Node_150;
Node_150 -> Node_151;
Node_151 -> Node_152[style=dashed];
Node_151 -> Node_190;
Node_152 -> Node_153[style=dashed];
Node_152 -> Node_192;
Node_153 -> Node_154;
Node_154 -> Node_155[style=dashed];
Node_154 -> Node_191;
Node_155 -> Node_151;
Node_191 -> Node_157;
Node_157 -> Node_158;
Node_158 -> Node_159[style=dashed];
Node_158 -> Node_186;
Node_159 -> Node_160;
Node_160 -> Node_161[style=dashed];
Node_160 -> Node_187;
Node_161 -> Node_162;
Node_162 -> Node_163[style=dashed];
Node_162 -> Node_188;
Node_163 -> Node_164;
Node_164 -> Node_175[style=dashed];
Node_164 -> Node_189;
Node_175 -> Node_165;
Node_165 -> Node_166;
Node_166 -> Node_98;
Node_189 -> Node_167;
Node_167 -> Node_140;
Node_188 -> Node_167;
Node_187 -> Node_167;
Node_186 -> Node_167;
Node_192 -> Node_156;
Node_156 -> Node_157;
Node_190 -> Node_156;
Node_149 -> Node_150;
Node_185 -> Node_168;
Node_168 -> Node_109;
Node_176 -> Node_169;
Node_169 -> Node_170;
Node_170 -> Node_98;
Node_107 -> Node_108;
Node_171 -> Node_172;
Node_172 -> Node_98;
}

