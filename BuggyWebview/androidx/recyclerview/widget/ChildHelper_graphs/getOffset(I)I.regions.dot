digraph "CFG forandroidx.recyclerview.widget.ChildHelper.getOffset(I)I" {
subgraph cluster_Region_2124564628 {
label = "R(1:(2:(1:3)|(3:5|(2:7|(2:(2:(1:13)|15)|(1:9)))|17)))";
node [shape=record,color=blue];
subgraph cluster_Region_1612827900 {
label = "R(2:(1:3)|(3:5|(2:7|(2:(2:(1:13)|15)|(1:9)))|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1806587843 {
label = "IF [B:21:0x0001] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0001|if (r6 \< 0) goto L3\l}"];
subgraph cluster_Region_388785584 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0003|RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_2092661392 {
label = "R(3:5|(2:7|(2:(2:(1:13)|15)|(1:9)))|17)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0004|int int r1 = r5.mCallback.getChildCount()\lint r2 = r6\l}"];
subgraph cluster_LoopRegion_1982680590 {
label = "LOOP:0: (2:7|(2:(2:(1:13)|15)|(1:9)))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x000b|LOOP_START\lLOOP:0: B:24:0x000b\-\>B:31:0x0025\lPHI: r2 \l  PHI: (r2v1 'offset' int) = (r2v0 'offset' int), (r2v4 'offset' int) binds: [B:23:0x0004, B:31:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< r1) goto L7\l}"];
subgraph cluster_Region_1057738813 {
label = "R(2:7|(2:(2:(1:13)|15)|(1:9)))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x000d|int int r3 = r5.mBucket.countOnesBefore(r2)\lint int r4 = r6 \- (r2 \- r3)\l}"];
subgraph cluster_Region_2066118953 {
label = "R(2:(2:(1:13)|15)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1240952656 {
label = "IF [B:26:0x0017] THEN: R(2:(1:13)|15) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0017|if (r4 == 0) goto L10\l}"];
subgraph cluster_Region_1258600769 {
label = "R(2:(1:13)|15)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_592094444 {
label = "LOOP:1: (1:13)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001f|if (r5.mBucket.get(r2) != false) goto L13\l}"];
subgraph cluster_Region_597260267 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0021|LOOP_END\lLOOP:1: B:27:0x0019\-\>B:29:0x0021\l|r2++\l}"];
}
}
Node_30 [shape=record,label="{30\:\ 0x0024|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_415450703 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0025|LOOP_END\lLOOP:0: B:24:0x000b\-\>B:31:0x0025\l|r2 += r4\l}"];
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x0027|RETURN\l|return \-1\l}"];
}
}
}
Node_18 [shape=record,color=red,label="{18\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0000}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0019|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0019|LOOP_START\lLOOP:1: B:27:0x0019\-\>B:29:0x0021\lPHI: r2 \l  PHI: (r2v2 'offset' int) = (r2v1 'offset' int), (r2v3 'offset' int) binds: [B:33:0x0019, B:29:0x0021] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0024|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.ChildHelper.getOffset((r5v0 'this' androidx.recyclerview.widget.ChildHelper A[IMMUTABLE_TYPE, THIS]), (r6v0 'index' int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:29:0x0021 \-\> B:27:0x0019, CROSS_EDGE: B:30:0x0024 \-\> B:19:?, BACK_EDGE: B:31:0x0025 \-\> B:24:0x000b, CROSS_EDGE: B:32:0x0027 \-\> B:19:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_18;Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_34[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_31[style=dashed];
Node_26 -> Node_33;
Node_28 -> Node_29;
Node_28 -> Node_35[style=dashed];
Node_29 -> Node_27;
Node_30 -> Node_19;
Node_31 -> Node_24;
Node_32 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_33 -> Node_27;
Node_27 -> Node_28;
Node_35 -> Node_30;
Node_34 -> Node_32;
}

