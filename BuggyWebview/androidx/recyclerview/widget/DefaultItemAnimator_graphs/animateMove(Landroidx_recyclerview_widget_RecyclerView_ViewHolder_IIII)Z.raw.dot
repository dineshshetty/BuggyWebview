digraph "CFG forandroidx.recyclerview.widget.DefaultItemAnimator.animateMove(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;IIII)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: MOVE  (r6 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])  (LINE:257)\l0x0002: IGET  (r7 I:android.view.View) = (r6 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.itemView android.view.View \l0x0004: IGET  (r0 I:android.view.View) = (r6 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.itemView android.view.View  (LINE:258)\l0x0006: INVOKE  (r0 I:float) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getTranslationX():float A[MD:():float (c)]\l0x000a: CAST (r0 I:int) = (int) (r0 I:float) \l0x000b: ARITH  (r8 I:int) = (r17 I:int A[D('fromX' int)]) + (r0 I:int) \l0x000d: IGET  (r0 I:android.view.View) = (r6 I:androidx.recyclerview.widget.RecyclerView$ViewHolder) androidx.recyclerview.widget.RecyclerView.ViewHolder.itemView android.view.View  (LINE:259)\l0x000f: INVOKE  (r0 I:float) = (r0 I:android.view.View) type: VIRTUAL call: android.view.View.getTranslationY():float A[MD:():float (c)]\l0x0013: CAST (r0 I:int) = (int) (r0 I:float) \l0x0014: ARITH  (r9 I:int) = (r18 I:int A[D('fromY' int)]) + (r0 I:int) \l0x0016: INVOKE  \l  (r15 I:androidx.recyclerview.widget.DefaultItemAnimator)\l  (r16 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l type: DIRECT call: androidx.recyclerview.widget.DefaultItemAnimator.resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder):void A[MD:(androidx.recyclerview.widget.RecyclerView$ViewHolder):void (m)] (LINE:260)\l0x0019: ARITH  (r10 I:int) = (r19 I:int A[D('toX' int)]) \- (r8 I:int A[D('fromX' int)])  (LINE:261)\l0x001b: ARITH  (r11 I:int) = (r20 I:int A[D('toY' int)]) \- (r9 I:int A[D('fromY' int)])  (LINE:262)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaX' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026  (LINE:263)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaY' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  \l  (r15 I:androidx.recyclerview.widget.DefaultItemAnimator)\l  (r16 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l type: VIRTUAL call: androidx.recyclerview.widget.DefaultItemAnimator.dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder):void A[MD:(androidx.recyclerview.widget.RecyclerView$ViewHolder):void (m)] (LINE:264)\l0x0024: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:265)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|0x0025: RETURN  (r0 I:boolean) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaX' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d  (LINE:267)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: NEG  (r0 I:int) = (r10 I:int A[D('deltaX' int)])  (LINE:268)\l0x0029: CAST (r0 I:float) = (float) (r0 I:int) \l0x002a: INVOKE  (r7 I:android.view.View A[D('view' android.view.View)]), (r0 I:float) type: VIRTUAL call: android.view.View.setTranslationX(float):void A[MD:(float):void (c)]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IF  (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deltaY' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034  (LINE:270)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: NEG  (r0 I:int) = (r11 I:int A[D('deltaY' int)])  (LINE:271)\l0x0030: CAST (r0 I:float) = (float) (r0 I:int) \l0x0031: INVOKE  (r7 I:android.view.View A[D('view' android.view.View)]), (r0 I:float) type: VIRTUAL call: android.view.View.setTranslationY(float):void A[MD:(float):void (c)]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: MOVE  (r12 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:273)\l0x0035: IGET  (r13 I:java.util.ArrayList\<androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo\>) = (r12 I:androidx.recyclerview.widget.DefaultItemAnimator) androidx.recyclerview.widget.DefaultItemAnimator.mPendingMoves java.util.ArrayList \l0x0037: NEW_INSTANCE  (r14 I:androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo) =  androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo \l0x0039: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r14 I:??[OBJECT, ARRAY]) \l0x003a: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r16 I:??[OBJECT, ARRAY] A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder)]) \l0x003c: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromX' int)]) \l0x003d: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r9 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromY' int)]) \l0x003e: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r19 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toX' int)]) \l0x0040: MOVE  (r5 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r20 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('toY' int)]) \l0x0042: INVOKE  \l  (r0 I:androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo)\l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l type: DIRECT call: androidx.recyclerview.widget.DefaultItemAnimator.MoveInfo.\<init\>(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int, int, int):void A[MD:(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int, int, int):void (m)]\l0x0045: INVOKE  (r13 I:java.util.ArrayList), (r14 I:java.lang.Object) type: VIRTUAL call: java.util.ArrayList.add(java.lang.Object):boolean A[MD:(E):boolean (c)]\l0x0048: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:274)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|RETURN\l|0x0049: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean androidx.recyclerview.widget.DefaultItemAnimator.animateMove((r15 'this' I:androidx.recyclerview.widget.DefaultItemAnimator A[IMMUTABLE_TYPE, THIS]), (r16 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('fromX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('fromY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('toX' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('toY' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0049 \-\> B:1:?, CROSS_EDGE: B:9:0x002d \-\> B:11:0x0034, CROSS_EDGE: B:7:0x0026 \-\> B:9:0x002d, CROSS_EDGE: B:3:0x001d \-\> B:7:0x0026\lDebug Info:\l  \-1 \-0x000d: r17 'fromX' I\l  \-1 \-0x0016: r18 'fromY' I\l  0x0004\-0x0049: r7 'view' Landroid\/view\/View;\l  0x000d\-0x0049: r8 'fromX' I\l  0x0016\-0x0049: r9 'fromY' I\l  0x001b\-0x0049: r10 'deltaX' I\l  0x001d\-0x0049: r11 'deltaY' I\l  \-1 \-0x0049: r16 'holder' Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;\l  \-1 \-0x0049: r19 'toX' I\l  \-1 \-0x0049: r20 'toY' I\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.SimpleItemAnimator.animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int, int, int):boolean]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

