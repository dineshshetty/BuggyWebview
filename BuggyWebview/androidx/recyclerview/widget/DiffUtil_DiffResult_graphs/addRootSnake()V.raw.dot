digraph "CFG forandroidx.recyclerview.widget.DiffUtil.DiffResult.addRootSnake()V" {
Node_14 [shape=record,label="{14\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_16 [shape=record,label="{16\:\ 0x0000|0x0000: IGET  (r0 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r4 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List  (LINE:586)\l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) type: INTERFACE call: java.util.List.isEmpty():boolean A[MD:():boolean (c)]\l0x0006: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0007|0x0007: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x000b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0009|0x0009: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|0x0013: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('firstSnake' androidx.recyclerview.widget.DiffUtil$Snake)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001d  (LINE:587)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0015|0x0015: IGET  (r2 I:int) = (r0 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('firstSnake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0017|0x0017: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x001d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0019|0x0019: IGET  (r2 I:int) = (r0 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('firstSnake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int \l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|0x001b: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:? \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|0x0031: RETURN   A[SYNTHETIC] (LINE:596)\l}"];
Node_15 [shape=record,label="{15\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ 0x001d|0x001d: NEW_INSTANCE  (r2 I:androidx.recyclerview.widget.DiffUtil$Snake) =  androidx.recyclerview.widget.DiffUtil$Snake  (LINE:588)\l0x001f: INVOKE  (r2 I:androidx.recyclerview.widget.DiffUtil$Snake) type: DIRECT call: androidx.recyclerview.widget.DiffUtil.Snake.\<init\>():void A[MD:():void (m)]\l0x0022: IPUT  (r1 I:int), (r2 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:589)\l0x0024: IPUT  (r1 I:int), (r2 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:590)\l0x0026: IPUT  \l  (r1 I:boolean)\l  (r2 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)])\l androidx.recyclerview.widget.DiffUtil.Snake.removal boolean  (LINE:591)\l0x0028: IPUT  (r1 I:int), (r2 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int  (LINE:592)\l0x002a: IPUT  \l  (r1 I:boolean)\l  (r2 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)])\l androidx.recyclerview.widget.DiffUtil.Snake.reverse boolean  (LINE:593)\l0x002c: IGET  (r3 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r4 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List  (LINE:594)\l0x002e: INVOKE  (r3 I:java.util.List), (r1 I:int), (r2 I:java.lang.Object A[D('root' androidx.recyclerview.widget.DiffUtil$Snake)]) type: INTERFACE call: java.util.List.add(int, java.lang.Object):void A[MD:(int, E):void (c)]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0031|RETURN\lORIG_RETURN\l|0x0031: RETURN    (LINE:596)\l}"];
Node_19 [shape=record,label="{19\:\ 0x000b|0x000b: IGET  (r0 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r4 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List \l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0011: CHECK_CAST (r0 I:androidx.recyclerview.widget.DiffUtil$Snake) = (androidx.recyclerview.widget.DiffUtil$Snake) (r0 I:??[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.DiffUtil.DiffResult.addRootSnake((r4 'this' I:androidx.recyclerview.widget.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:24:0x001b \-\> B:26:0x0031, CROSS_EDGE: B:22:0x0017 \-\> B:25:0x001d, CROSS_EDGE: B:20:0x0013 \-\> B:25:0x001d, CROSS_EDGE: B:19:0x000b \-\> B:20:0x0013\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0022\-0x0031: r2 'root' Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\l  0x0013\-0x0031: r0 'firstSnake' Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\l}"];
MethodNode -> Node_14;Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_27 -> Node_15;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_19 -> Node_20;
}

