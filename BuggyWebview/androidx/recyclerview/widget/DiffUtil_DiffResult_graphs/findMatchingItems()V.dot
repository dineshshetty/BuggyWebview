digraph "CFG forandroidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItems()V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|int r0 = r14.mOldListSize\lint r1 = r14.mNewListSize\lint r2 = r14.mSnakes.size() \- 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|LOOP_START\lLOOP:0: B:29:0x000c\-\>B:44:0x005b\lPHI: r0 r1 r2 \l  PHI: (r0v1 'posOld' int) = (r0v0 'posOld' int), (r0v2 'posOld' int) binds: [B:28:0x0000, B:44:0x005b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'posNew' int) = (r1v0 'posNew' int), (r1v2 'posNew' int) binds: [B:28:0x0000, B:44:0x005b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v4 'i' int) binds: [B:28:0x0000, B:44:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \< 0) goto L23\l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|androidx.recyclerview.widget.DiffUtil$Snake r4 = r14.mSnakes.get(r2)\lint r5 = r4.f92x + r4.size\lint r6 = r4.f93y + r4.size\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|if (r14.mDetectMoves == false) goto L11\l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|LOOP_START\lLOOP:1: B:32:0x0024\-\>B:33:0x0026\lPHI: r0 \l  PHI: (r0v3 'posOld' int) = (r0v1 'posOld' int), (r0v4 'posOld' int) binds: [B:31:0x0022, B:33:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \<= r5) goto L7\l}"];
Node_33 [shape=record,label="{33\:\ 0x0026|LOOP_END\lLOOP:1: B:32:0x0024\-\>B:33:0x0026\l|findAddition(r0, r1, r2)\lint r0 = r0 + (\-1)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|LOOP_START\lLOOP:2: B:34:0x002c\-\>B:35:0x002e\lPHI: r1 \l  PHI: (r1v3 'posNew' int) = (r1v1 'posNew' int), (r1v4 'posNew' int) binds: [B:47:0x002c, B:35:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \<= r6) goto L10\l}"];
Node_35 [shape=record,label="{35\:\ 0x002e|LOOP_END\lLOOP:2: B:34:0x002c\-\>B:35:0x002e\l|findRemoval(r0, r1, r2)\lint r1 = r1 + (\-1)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0034|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0034|r7 = 0\l}"];
Node_37 [shape=record,label="{37\:\ 0x0035|LOOP_START\lLOOP:3: B:37:0x0035\-\>B:43:0x004a\lPHI: r7 \l  PHI: (r7v3 'j' int) = (r7v2 'j' int), (r7v4 'j' int) binds: [B:36:0x0034, B:43:0x004a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0037|if (r7 \>= r4.size) goto L21\l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|int r8 = r4.f92x + r7\lint r9 = r4.f93y + r7\lboolean r10 = r14.mCallback.areContentsTheSame(r8, r9)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|if (r10 == false) goto L19\l}"];
Node_41 [shape=record,label="{41\:\ 0x0047|r11 = 1\l}"];
Node_51 [shape=record,label="{51\:\ 0x004a|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|LOOP_END\lLOOP:3: B:37:0x0035\-\>B:43:0x004a\lPHI: r11 \l  PHI: (r11v1 'changeFlag' int) = (r11v0 'changeFlag' int), (r11v2 'changeFlag' int) binds: [B:50:0x004a, B:51:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|r14.mOldItemStatuses[r8] = (r9 \<\< 5) \| r11\lr14.mNewItemStatuses[r9] = (r8 \<\< 5) \| r11\lint r7 = r7 + 1\l}"];
Node_42 [shape=record,label="{42\:\ 0x0049|r11 = 2\l}"];
Node_50 [shape=record,label="{50\:\ 0x004a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x005b|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|LOOP_END\lLOOP:0: B:29:0x000c\-\>B:44:0x005b\l|int r0 = r4.f92x\lint r1 = r4.f93y\lint r2 = r2 + (\-1)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0062|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0062|RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItems((r14v0 'this' androidx.recyclerview.widget.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0026 \-\> B:32:0x0024, BACK_EDGE: B:35:0x002e \-\> B:34:0x002c, BACK_EDGE: B:43:0x004a \-\> B:37:0x0035, CROSS_EDGE: B:42:0x0049 \-\> B:43:0x004a, BACK_EDGE: B:44:0x005b \-\> B:29:0x000c, CROSS_EDGE: B:31:0x0022 \-\> B:36:0x0034\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_46;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_47;
Node_33 -> Node_32;
Node_47 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_34;
Node_48 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_49;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_51;
Node_51 -> Node_43;
Node_43 -> Node_37;
Node_42 -> Node_50;
Node_50 -> Node_43;
Node_49 -> Node_44;
Node_44 -> Node_29;
Node_46 -> Node_45;
Node_45 -> Node_27;
}

