digraph "CFG forandroidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItem(IIIZ)Z" {
Node_41 [shape=record,label="{41\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_43 [shape=record,label="{43\:\ 0x0000|0x0000: MOVE  (r0 I:??[OBJECT, ARRAY]) = (r15 I:??[OBJECT, ARRAY])  (LINE:723)\l}"];
Node_44 [shape=record,label="{44\:\ 0x0001|0x0001: IF  (r19 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x000a \l}"];
Node_45 [shape=record,label="{45\:\ 0x0003|0x0003: ARITH  (r1 I:int) = (r17 I:int A[D('y' int)]) + (\-1 int)  (LINE:724)\l0x0005: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r16 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('x' int)])  (LINE:725)\l0x0007: ARITH  (r3 I:int) = (r17 I:int A[D('y' int)]) + (\-1 int)  (LINE:726)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0010|0x0010: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r18 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('snakeIndex' int)])  (LINE:732)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0012|LOOP_START\lLOOP:0: B:48:0x0012\-\>B:74:0x0083\l|0x0012: IF  (r4 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:78:0x008a \l}"];
Node_49 [shape=record,label="{49\:\ 0x0014|0x0014: IGET  (r5 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List  (LINE:733)\l0x0016: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r4 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x001a: CHECK_CAST (r5 I:androidx.recyclerview.widget.DiffUtil$Snake) = (androidx.recyclerview.widget.DiffUtil$Snake) (r5 I:??[OBJECT, ARRAY]) \l0x001c: IGET  (r6 I:int) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:734)\l0x001e: IGET  (r7 I:int) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x0020: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0021: IGET  (r7 I:int) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:735)\l0x0023: IGET  (r8 I:int) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x0025: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x0026: CONST  (r8 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:736)\l0x0028: CONST  (r9 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l0x0029: CONST  (r10 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x002a|0x002a: IF  (r19 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removal' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x0056 \l}"];
Node_51 [shape=record,label="{51\:\ 0x002c|0x002c: ARITH  (r11 I:int) = (r2 I:int A[D('curX' int)]) + (\-1 int)  (LINE:738)\l}"];
Node_52 [shape=record,label="{52\:\ 0x002e|LOOP_START\lLOOP:1: B:52:0x002e\-\>B:61:0x0052\l|0x002e: IF  (r11 I:??[int, byte, short, char] A[D('pos' int)]) \< (r6 I:??[int, byte, short, char] A[D('endX' int)])  \-\> B:81:0x0083 \l}"];
Node_53 [shape=record,label="{53\:\ 0x0030|0x0030: IGET  (r12 I:androidx.recyclerview.widget.DiffUtil$Callback) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mCallback androidx.recyclerview.widget.DiffUtil$Callback  (LINE:739)\l0x0032: INVOKE  (r12 I:boolean) = (r12 I:androidx.recyclerview.widget.DiffUtil$Callback), (r11 I:int A[D('pos' int)]), (r1 I:int A[D('myItemPos' int)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.areItemsTheSame(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0036|0x0036: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0052 \l}"];
Node_61 [shape=record,label="{61\:\ 0x0052|LOOP_END\lLOOP:1: B:52:0x002e\-\>B:61:0x0052\l|0x0052: ARITH  (r11 I:int) = (r11 I:int A[D('pos' int)]) + (\-1 int)  (LINE:738)\l}"];
Node_79 [shape=record,label="{79\:\ 0x0038|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x0038|0x0038: IGET  (r12 I:androidx.recyclerview.widget.DiffUtil$Callback) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mCallback androidx.recyclerview.widget.DiffUtil$Callback  (LINE:741)\l0x003a: INVOKE  (r12 I:boolean) = (r12 I:androidx.recyclerview.widget.DiffUtil$Callback), (r11 I:int A[D('pos' int)]), (r1 I:int A[D('myItemPos' int)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.areContentsTheSame(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_56 [shape=record,label="{56\:\ 0x003e|0x003e: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('theSame' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0041  (LINE:742)\l}"];
Node_58 [shape=record,label="{58\:\ 0x0041|0x0041: CONST  (r8 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x0042|0x0042: IGET  (r9 I:int[]) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mNewItemStatuses int[]  (LINE:744)\l0x0044: ARITH  (r13 I:int) = (r11 I:int A[D('pos' int)]) \<\< (5 int) \l0x0046: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) \| (16 ??[int, float, short, byte, char]) \l0x0048: APUT  \l  (r9 I:??[int, float][])\l  (r1 I:??[int, short, byte, char] A[D('myItemPos' int)])\l  (r13 I:??[int, float, short, byte, char])\l \l0x004a: IGET  (r9 I:int[]) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mOldItemStatuses int[]  (LINE:745)\l0x004c: ARITH  (r13 I:int) = (r1 I:int A[D('myItemPos' int)]) \<\< (5 int) \l0x004e: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) \| (r8 I:??[int, boolean, short, byte, char] A[D('changeFlag' int)]) \l0x004f: APUT  (r9 I:??[int, float][]), (r11 I:??[int, short, byte, char] A[D('pos' int)]), (r13 I:??[int, float, short, byte, char]) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0051|RETURN\l|0x0051: RETURN  (r10 I:boolean)  (LINE:746)\l}"];
Node_42 [shape=record,label="{42\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_81 [shape=record,label="{81\:\ 0x0083|SYNTHETIC\l}"];
Node_74 [shape=record,label="{74\:\ 0x0083|LOOP_END\lLOOP:0: B:48:0x0012\-\>B:74:0x0083\l|0x0083: IGET  (r2 I:int A[D('curX' int)]) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:763)\l0x0085: IGET  (r3 I:int A[D('curY' int)]) = (r5 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:764)\l0x0087: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (\-1 int)  (LINE:732)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0056|0x0056: ARITH  (r11 I:int) = (r3 I:int A[D('curY' int)]) + (\-1 int)  (LINE:751)\l}"];
Node_64 [shape=record,label="{64\:\ 0x0058|LOOP_START\lLOOP:2: B:64:0x0058\-\>B:73:0x0080\l|0x0058: IF  (r11 I:??[int, byte, short, char] A[D('pos' int)]) \< (r7 I:??[int, byte, short, char] A[D('endY' int)])  \-\> B:80:0x0083 \l}"];
Node_65 [shape=record,label="{65\:\ 0x005a|0x005a: IGET  (r12 I:androidx.recyclerview.widget.DiffUtil$Callback) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mCallback androidx.recyclerview.widget.DiffUtil$Callback  (LINE:752)\l0x005c: INVOKE  (r12 I:boolean) = (r12 I:androidx.recyclerview.widget.DiffUtil$Callback), (r1 I:int A[D('myItemPos' int)]), (r11 I:int A[D('pos' int)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.areItemsTheSame(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0060|0x0060: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x0080 \l}"];
Node_73 [shape=record,label="{73\:\ 0x0080|LOOP_END\lLOOP:2: B:64:0x0058\-\>B:73:0x0080\l|0x0080: ARITH  (r11 I:int) = (r11 I:int A[D('pos' int)]) + (\-1 int)  (LINE:751)\l}"];
Node_77 [shape=record,label="{77\:\ 0x0062|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x0062|0x0062: IGET  (r12 I:androidx.recyclerview.widget.DiffUtil$Callback) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mCallback androidx.recyclerview.widget.DiffUtil$Callback  (LINE:754)\l0x0064: INVOKE  (r12 I:boolean) = (r12 I:androidx.recyclerview.widget.DiffUtil$Callback), (r1 I:int A[D('myItemPos' int)]), (r11 I:int A[D('pos' int)]) type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.areContentsTheSame(int, int):boolean A[MD:(int, int):boolean (m)]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0068|0x0068: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('theSame' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:70:0x006b  (LINE:755)\l}"];
Node_70 [shape=record,label="{70\:\ 0x006b|0x006b: CONST  (r8 I:??[int, float, short, byte, char]) = (4 ??[int, float, short, byte, char]) \l}"];
Node_71 [shape=record,label="{71\:\ 0x006c|0x006c: IGET  (r9 I:int[]) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mOldItemStatuses int[]  (LINE:757)\l0x006e: ARITH  (r13 I:int) = (r16 I:int A[D('x' int)]) + (\-1 int) \l0x0070: ARITH  (r14 I:int) = (r11 I:int A[D('pos' int)]) \<\< (5 int) \l0x0072: ARITH  (r14 I:??[int, boolean]) = (r14 I:??[int, boolean, short, byte, char]) \| (16 ??[int, float, short, byte, char]) \l0x0074: APUT  (r9 I:??[int, float][]), (r13 I:??[int, short, byte, char]), (r14 I:??[int, float, short, byte, char]) \l0x0076: IGET  (r9 I:int[]) = (r0 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mNewItemStatuses int[]  (LINE:758)\l0x0078: ARITH  (r13 I:int) = (r16 I:int A[D('x' int)]) + (\-1 int) \l0x007a: ARITH  (r13 I:int) = (r13 I:int) \<\< (5 int) \l0x007c: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) \| (r8 I:??[int, boolean, short, byte, char] A[D('changeFlag' int)]) \l0x007d: APUT  (r9 I:??[int, float][]), (r11 I:??[int, short, byte, char] A[D('pos' int)]), (r13 I:??[int, float, short, byte, char]) \l}"];
Node_72 [shape=record,label="{72\:\ 0x007f|RETURN\l|0x007f: RETURN  (r10 I:boolean)  (LINE:759)\l}"];
Node_80 [shape=record,label="{80\:\ 0x0083|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x008a|SYNTHETIC\l}"];
Node_75 [shape=record,label="{75\:\ 0x008a|RETURN\l|0x008a: CONST  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:766)\l0x008b: RETURN  (r4 I:boolean) \l}"];
Node_46 [shape=record,label="{46\:\ 0x000a|0x000a: ARITH  (r1 I:int A[D('myItemPos' int)]) = (r16 I:int A[D('x' int)]) + (\-1 int)  (LINE:728)\l0x000c: ARITH  (r2 I:int) = (r16 I:int A[D('x' int)]) + (\-1 int)  (LINE:729)\l0x000e: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r17 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' int)])  (LINE:730)\l}"];
MethodNode[shape=record,label="{private boolean androidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItem((r15 'this' I:androidx.recyclerview.widget.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]), (r16 I:int A[D('x' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('y' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('snakeIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:boolean A[D('removal' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:56:0x003e \-\> B:59:0x0042, BACK_EDGE: B:61:0x0052 \-\> B:52:0x002e, BACK_EDGE: B:74:0x0083 \-\> B:48:0x0012, CROSS_EDGE: B:72:0x007f \-\> B:42:?, CROSS_EDGE: B:68:0x0068 \-\> B:71:0x006c, BACK_EDGE: B:73:0x0080 \-\> B:64:0x0058, CROSS_EDGE: B:64:0x0058 \-\> B:74:0x0083, CROSS_EDGE: B:76:0x008b \-\> B:42:?, CROSS_EDGE: B:46:0x000a \-\> B:47:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0005\-0x000a: r1 'myItemPos' I\l  0x0007\-0x000a: r2 'curX' I\l  0x0009\-0x000a: r3 'curY' I\l  0x0042\-0x0052: r8 'changeFlag' I\l  0x003e\-0x0052: r12 'theSame' Z\l  0x002e\-0x0055: r11 'pos' I\l  0x006c\-0x0080: r8 'changeFlag' I\l  0x0068\-0x0080: r12 'theSame' Z\l  0x0058\-0x0083: r11 'pos' I\l  0x001c\-0x0087: r5 'snake' Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\l  0x0021\-0x0087: r6 'endX' I\l  0x0026\-0x0087: r7 'endY' I\l  0x0012\-0x008a: r4 'i' I\l  0x000c\-0x008b: r1 'myItemPos' I\l  0x000e\-0x008b: r2 'curX' I\l  0x0010\-0x008b: r3 'curY' I\l  \-1 \-0x008b: r16 'x' I\l  \-1 \-0x008b: r17 'y' I\l  \-1 \-0x008b: r18 'snakeIndex' I\l  \-1 \-0x008b: r19 'removal' Z\l}"];
MethodNode -> Node_41;Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_78;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_63;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_81;
Node_53 -> Node_54;
Node_54 -> Node_61;
Node_54 -> Node_79[style=dashed];
Node_61 -> Node_52;
Node_79 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_58;
Node_56 -> Node_59[style=dashed];
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_42;
Node_81 -> Node_74;
Node_74 -> Node_48;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_80;
Node_65 -> Node_66;
Node_66 -> Node_73;
Node_66 -> Node_77[style=dashed];
Node_73 -> Node_64;
Node_77 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_70;
Node_68 -> Node_71[style=dashed];
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_42;
Node_80 -> Node_74;
Node_78 -> Node_75;
Node_75 -> Node_42;
Node_46 -> Node_47;
}

