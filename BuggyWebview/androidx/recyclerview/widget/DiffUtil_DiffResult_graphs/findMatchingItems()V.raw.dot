digraph "CFG forandroidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItems()V" {
Node_26 [shape=record,label="{26\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_28 [shape=record,label="{28\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mOldListSize int  (LINE:610)\l0x0002: IGET  (r1 I:int) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mNewListSize int  (LINE:611)\l0x0004: IGET  (r2 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List  (LINE:613)\l0x0006: INVOKE  (r2 I:int) = (r2 I:java.util.List) type: INTERFACE call: java.util.List.size():int A[MD:():int (c)]\l0x000a: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l0x000b: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x000c|LOOP_START\lLOOP:0: B:29:0x000c\-\>B:44:0x005b\l|0x000c: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \< (0 ??[int, byte, short, char])  \-\> B:46:0x0062 \l}"];
Node_30 [shape=record,label="{30\:\ 0x000e|0x000e: IGET  (r4 I:java.util.List\<androidx.recyclerview.widget.DiffUtil$Snake\>) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mSnakes java.util.List  (LINE:614)\l0x0010: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r2 I:int A[D('i' int)]) type: INTERFACE call: java.util.List.get(int):java.lang.Object A[MD:(int):E (c)]\l0x0014: CHECK_CAST (r4 I:androidx.recyclerview.widget.DiffUtil$Snake) = (androidx.recyclerview.widget.DiffUtil$Snake) (r4 I:??[OBJECT, ARRAY]) \l0x0016: IGET  (r5 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:615)\l0x0018: IGET  (r6 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x001a: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x001b: IGET  (r6 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:616)\l0x001d: IGET  (r7 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l0x001f: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l0x0020: IGET  (r7 I:boolean) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mDetectMoves boolean  (LINE:617)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|0x0022: IF  (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0034 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0024|LOOP_START\lLOOP:1: B:32:0x0024\-\>B:33:0x0026\l|0x0024: IF  (r0 I:??[int, byte, short, char] A[D('posOld' int)]) \<= (r5 I:??[int, byte, short, char] A[D('endX' int)])  \-\> B:47:0x002c  (LINE:618)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0026|LOOP_END\lLOOP:1: B:32:0x0024\-\>B:33:0x0026\l|0x0026: INVOKE  \l  (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult)\l  (r0 I:int A[D('posOld' int)])\l  (r1 I:int A[D('posNew' int)])\l  (r2 I:int A[D('i' int)])\l type: DIRECT call: androidx.recyclerview.widget.DiffUtil.DiffResult.findAddition(int, int, int):void A[MD:(int, int, int):void (m)] (LINE:620)\l0x0029: ARITH  (r0 I:int) = (r0 I:int A[D('posOld' int)]) + (\-1 int)  (LINE:621)\l}"];
Node_47 [shape=record,label="{47\:\ 0x002c|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x002c|LOOP_START\lLOOP:2: B:34:0x002c\-\>B:35:0x002e\l|0x002c: IF  (r1 I:??[int, byte, short, char] A[D('posNew' int)]) \<= (r6 I:??[int, byte, short, char] A[D('endY' int)])  \-\> B:48:0x0034  (LINE:623)\l}"];
Node_35 [shape=record,label="{35\:\ 0x002e|LOOP_END\lLOOP:2: B:34:0x002c\-\>B:35:0x002e\l|0x002e: INVOKE  \l  (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult)\l  (r0 I:int A[D('posOld' int)])\l  (r1 I:int A[D('posNew' int)])\l  (r2 I:int A[D('i' int)])\l type: DIRECT call: androidx.recyclerview.widget.DiffUtil.DiffResult.findRemoval(int, int, int):void A[MD:(int, int, int):void (m)] (LINE:626)\l0x0031: ARITH  (r1 I:int) = (r1 I:int A[D('posNew' int)]) + (\-1 int)  (LINE:627)\l}"];
Node_48 [shape=record,label="{48\:\ 0x0034|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0034|0x0034: CONST  (r7 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:630)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0035|LOOP_START\lLOOP:3: B:37:0x0035\-\>B:43:0x004a\l|0x0035: IGET  (r8 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.size int \l}"];
Node_38 [shape=record,label="{38\:\ 0x0037|0x0037: IF  (r7 I:??[int, byte, short, char] A[D('j' int)]) \>= (r8 I:??[int, byte, short, char])  \-\> B:49:0x005b \l}"];
Node_39 [shape=record,label="{39\:\ 0x0039|0x0039: IGET  (r8 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:632)\l0x003b: ARITH  (r8 I:int) = (r8 I:int) + (r7 I:int A[D('j' int)]) \l0x003c: IGET  (r9 I:int) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:633)\l0x003e: ARITH  (r9 I:int) = (r9 I:int) + (r7 I:int A[D('j' int)]) \l0x003f: IGET  (r10 I:androidx.recyclerview.widget.DiffUtil$Callback) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mCallback androidx.recyclerview.widget.DiffUtil$Callback  (LINE:634)\l0x0041: INVOKE  (r10 I:boolean) = \l  (r10 I:androidx.recyclerview.widget.DiffUtil$Callback)\l  (r8 I:int A[D('oldItemPos' int)])\l  (r9 I:int A[D('newItemPos' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.DiffUtil.Callback.areContentsTheSame(int, int):boolean A[MD:(int, int):boolean (m)] (LINE:635)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0045|0x0045: IF  (r10 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('theSame' boolean)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0049  (LINE:636)\l}"];
Node_41 [shape=record,label="{41\:\ 0x0047|0x0047: CONST  (r11 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x004a|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x004a|LOOP_END\lLOOP:3: B:37:0x0035\-\>B:43:0x004a\l|0x004a: IGET  (r12 I:int[]) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mOldItemStatuses int[]  (LINE:637)\l0x004c: ARITH  (r13 I:int) = (r9 I:int A[D('newItemPos' int)]) \<\< (5 int) \l0x004e: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) \| (r11 I:??[int, boolean, short, byte, char] A[D('changeFlag' int)]) \l0x004f: APUT  \l  (r12 I:??[int, float][])\l  (r8 I:??[int, short, byte, char] A[D('oldItemPos' int)])\l  (r13 I:??[int, float, short, byte, char])\l \l0x0051: IGET  (r12 I:int[]) = (r14 I:androidx.recyclerview.widget.DiffUtil$DiffResult) androidx.recyclerview.widget.DiffUtil.DiffResult.mNewItemStatuses int[]  (LINE:638)\l0x0053: ARITH  (r13 I:int) = (r8 I:int A[D('oldItemPos' int)]) \<\< (5 int) \l0x0055: ARITH  (r13 I:??[int, boolean]) = (r13 I:??[int, boolean, short, byte, char]) \| (r11 I:??[int, boolean, short, byte, char] A[D('changeFlag' int)]) \l0x0056: APUT  \l  (r12 I:??[int, float][])\l  (r9 I:??[int, short, byte, char] A[D('newItemPos' int)])\l  (r13 I:??[int, float, short, byte, char])\l \l0x0058: ARITH  (r7 I:int) = (r7 I:int A[D('j' int)]) + (1 int)  (LINE:630)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0049|0x0049: CONST  (r11 I:??[int, float, short, byte, char]) = (2 ??[int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x004a|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x005b|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x005b|LOOP_END\lLOOP:0: B:29:0x000c\-\>B:44:0x005b\l|0x005b: IGET  (r0 I:int A[D('posOld' int)]) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.x int  (LINE:640)\l0x005d: IGET  (r1 I:int A[D('posNew' int)]) = (r4 I:androidx.recyclerview.widget.DiffUtil$Snake A[D('snake' androidx.recyclerview.widget.DiffUtil$Snake)]) androidx.recyclerview.widget.DiffUtil.Snake.y int  (LINE:641)\l0x005f: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (\-1 int)  (LINE:613)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0062|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0062|RETURN\l|0x0062: RETURN    (LINE:643)\l}"];
Node_27 [shape=record,label="{27\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.DiffUtil.DiffResult.findMatchingItems((r14 'this' I:androidx.recyclerview.widget.DiffUtil$DiffResult A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lBACK_EDGE: B:33:0x0026 \-\> B:32:0x0024, BACK_EDGE: B:35:0x002e \-\> B:34:0x002c, BACK_EDGE: B:43:0x004a \-\> B:37:0x0035, CROSS_EDGE: B:42:0x0049 \-\> B:43:0x004a, BACK_EDGE: B:44:0x005b \-\> B:29:0x000c, CROSS_EDGE: B:31:0x0022 \-\> B:36:0x0034\lINLINE_NOT_NEEDED\lDebug Info:\l  0x003c\-0x0058: r8 'oldItemPos' I\l  0x003f\-0x0058: r9 'newItemPos' I\l  0x0045\-0x0058: r10 'theSame' Z\l  0x004a\-0x0058: r11 'changeFlag' I\l  0x0035\-0x005b: r7 'j' I\l  0x0016\-0x005f: r4 'snake' Landroidx\/recyclerview\/widget\/DiffUtil$Snake;\l  0x001b\-0x005f: r5 'endX' I\l  0x0020\-0x005f: r6 'endY' I\l  0x000c\-0x0062: r2 'i' I\l  0x0002\-0x0062: r0 'posOld' I\l  0x0004\-0x0062: r1 'posNew' I\l}"];
MethodNode -> Node_26;Node_26 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_46;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_47;
Node_33 -> Node_32;
Node_47 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_48;
Node_35 -> Node_34;
Node_48 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_49;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_51;
Node_51 -> Node_43;
Node_43 -> Node_37;
Node_42 -> Node_50;
Node_50 -> Node_43;
Node_49 -> Node_44;
Node_44 -> Node_29;
Node_46 -> Node_45;
Node_45 -> Node_27;
}

