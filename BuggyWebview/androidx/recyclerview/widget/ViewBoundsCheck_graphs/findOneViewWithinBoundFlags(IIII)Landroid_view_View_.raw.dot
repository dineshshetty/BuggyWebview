digraph "CFG forandroidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags(IIII)Landroid\/view\/View;" {
Node_24 [shape=record,label="{24\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mCallback androidx.recyclerview.widget.ViewBoundsCheck$Callback  (LINE:213)\l0x0002: INVOKE  (r0 I:int) = (r0 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) type: INTERFACE call: androidx.recyclerview.widget.ViewBoundsCheck.Callback.getParentStart():int A[MD:():int (m)]\l0x0006: IGET  (r1 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mCallback androidx.recyclerview.widget.ViewBoundsCheck$Callback  (LINE:214)\l0x0008: INVOKE  (r1 I:int) = (r1 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) type: INTERFACE call: androidx.recyclerview.widget.ViewBoundsCheck.Callback.getParentEnd():int A[MD:():int (m)]\l}"];
Node_27 [shape=record,label="{27\:\ 0x000c|0x000c: IF  (r11 I:??[int, byte, short, char] A[D('toIndex' int)]) \<= (r10 I:??[int, byte, short, char] A[D('fromIndex' int)])  \-\> B:29:0x0010  (LINE:215)\l}"];
Node_28 [shape=record,label="{28\:\ 0x000e|0x000e: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:216)\l0x0012: MOVE  (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (r10 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('fromIndex' int)])  (LINE:217)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|LOOP_START\lLOOP:0: B:31:0x0013\-\>B:41:0x0056\l|0x0013: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) == (r11 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('toIndex' int)])  \-\> B:43:0x0058 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0015|0x0015: IGET  (r5 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mCallback androidx.recyclerview.widget.ViewBoundsCheck$Callback  (LINE:218)\l0x0017: INVOKE  (r5 I:android.view.View) = (r5 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback), (r4 I:int A[D('i' int)]) type: INTERFACE call: androidx.recyclerview.widget.ViewBoundsCheck.Callback.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)]\l0x001b: IGET  (r6 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mCallback androidx.recyclerview.widget.ViewBoundsCheck$Callback  (LINE:219)\l0x001d: INVOKE  (r6 I:int) = (r6 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback), (r5 I:android.view.View A[D('child' android.view.View)]) type: INTERFACE call: androidx.recyclerview.widget.ViewBoundsCheck.Callback.getChildStart(android.view.View):int A[MD:(android.view.View):int (m)]\l0x0021: IGET  (r7 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mCallback androidx.recyclerview.widget.ViewBoundsCheck$Callback  (LINE:220)\l0x0023: INVOKE  (r7 I:int) = (r7 I:androidx.recyclerview.widget.ViewBoundsCheck$Callback), (r5 I:android.view.View A[D('child' android.view.View)]) type: INTERFACE call: androidx.recyclerview.widget.ViewBoundsCheck.Callback.getChildEnd(android.view.View):int A[MD:(android.view.View):int (m)]\l0x0027: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:221)\l0x0029: INVOKE  \l  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags)\l  (r0 I:int A[D('start' int)])\l  (r1 I:int A[D('end' int)])\l  (r6 I:int A[D('childStart' int)])\l  (r7 I:int A[D('childEnd' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.setBounds(int, int, int, int):void A[MD:(int, int, int, int):void (m)]\l}"];
Node_33 [shape=record,label="{33\:\ 0x002c|0x002c: IF  (r12 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('preferredBoundFlags' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0041  (LINE:222)\l}"];
Node_34 [shape=record,label="{34\:\ 0x002e|0x002e: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:223)\l0x0030: INVOKE  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.resetFlags():void A[MD:():void (m)]\l0x0033: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:224)\l0x0035: INVOKE  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r12 I:int A[D('preferredBoundFlags' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.addFlags(int):void A[MD:(int):void (m)]\l0x0038: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:225)\l0x003a: INVOKE  (r8 I:boolean) = (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.boundsMatch():boolean A[MD:():boolean (m)]\l}"];
Node_35 [shape=record,label="{35\:\ 0x003e|0x003e: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0041 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0040|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0040|RETURN\l|0x0040: RETURN  (r5 I:android.view.View A[D('child' android.view.View)])  (LINE:227)\l}"];
Node_25 [shape=record,label="{25\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,label="{37\:\ 0x0041|0x0041: IF  (r13 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('acceptableBoundFlags' int)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0056  (LINE:230)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0043|0x0043: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:231)\l0x0045: INVOKE  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.resetFlags():void A[MD:():void (m)]\l0x0048: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:232)\l0x004a: INVOKE  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r13 I:int A[D('acceptableBoundFlags' int)]) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.addFlags(int):void A[MD:(int):void (m)]\l0x004d: IGET  (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) = (r9 I:androidx.recyclerview.widget.ViewBoundsCheck) androidx.recyclerview.widget.ViewBoundsCheck.mBoundFlags androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags  (LINE:233)\l0x004f: INVOKE  (r8 I:boolean) = (r8 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.boundsMatch():boolean A[MD:():boolean (m)]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0053|0x0053: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0056 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0055|0x0055: MOVE  (r3 I:??[OBJECT, ARRAY] A[D('acceptableMatch' android.view.View)]) = (r5 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:234)\l}"];
Node_45 [shape=record,label="{45\:\ 0x0056|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0056|LOOP_END\lLOOP:0: B:31:0x0013\-\>B:41:0x0056\l|0x0056: ARITH  (r4 I:int) = (r4 I:int A[D('i' int)]) + (r2 I:int A[D('next' int)])  (LINE:217)\l}"];
Node_47 [shape=record,label="{47\:\ 0x0056|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0056|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0058|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0058|RETURN\l|0x0058: RETURN  (r3 I:android.view.View A[D('acceptableMatch' android.view.View)])  (LINE:238)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|0x0010: CONST  (r2 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public android.view.View androidx.recyclerview.widget.ViewBoundsCheck.findOneViewWithinBoundFlags((r9 'this' I:androidx.recyclerview.widget.ViewBoundsCheck A[IMMUTABLE_TYPE, THIS]), (r10 I:int A[D('fromIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('toIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('preferredBoundFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('acceptableBoundFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:41:0x0056 \-\> B:31:0x0013, CROSS_EDGE: B:39:0x0053 \-\> B:41:0x0056, CROSS_EDGE: B:37:0x0041 \-\> B:41:0x0056, CROSS_EDGE: B:33:0x002c \-\> B:37:0x0041, CROSS_EDGE: B:42:0x0058 \-\> B:25:?, CROSS_EDGE: B:29:0x0010 \-\> B:30:0x0011\lINLINE_NOT_NEEDED\lDebug Info:\l  0x001b\-0x0056: r5 'child' Landroid\/view\/View;\l  0x0021\-0x0056: r6 'childStart' I\l  0x0027\-0x0056: r7 'childEnd' I\l  0x0013\-0x0058: r4 'i' I\l  0x0006\-0x0058: r0 'start' I\l  0x000c\-0x0058: r1 'end' I\l  0x0011\-0x0058: r2 'next' I\l  0x0012\-0x0058: r3 'acceptableMatch' Landroid\/view\/View;\l  \-1 \-0x0058: r10 'fromIndex' I\l  \-1 \-0x0058: r11 'toIndex' I\l  \-1 \-0x0058: r12 'preferredBoundFlags' I\l  \-1 \-0x0058: r13 'acceptableBoundFlags' I\l}"];
MethodNode -> Node_24;Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_43;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_44[style=dashed];
Node_44 -> Node_36;
Node_36 -> Node_25;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_46;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_47;
Node_40 -> Node_45;
Node_45 -> Node_41;
Node_41 -> Node_31;
Node_47 -> Node_41;
Node_46 -> Node_41;
Node_43 -> Node_42;
Node_42 -> Node_25;
Node_29 -> Node_30;
}

