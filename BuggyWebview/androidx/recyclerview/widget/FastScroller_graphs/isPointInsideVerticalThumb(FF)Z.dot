digraph "CFG forandroidx.recyclerview.widget.FastScroller.isPointInsideVerticalThumb(FF)Z" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0004|if (isLayoutRTL() == false) goto L12\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if ((r4 \> ((float) (r3.mVerticalThumbWidth \/ 2)) ? 1 : (r4 == ((float) (r3.mVerticalThumbWidth \/ 2)) ? 0 : \-1)) \> 0) goto L5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|RETURN\lORIG_RETURN\l|return false\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|int r0 = r3.mVerticalThumbCenterY\lint r1 = r3.mVerticalThumbHeight\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if ((r5 \> ((float) (r0 \- (r1 \/ 2))) ? 1 : (r5 == ((float) (r0 \- (r1 \/ 2))) ? 0 : \-1)) \< 0) goto L5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027}"];
Node_12 [shape=record,label="{12\:\ 0x002d|if ((r5 \> ((float) (r0 + (r1 \/ 2))) ? 1 : (r5 == ((float) (r0 + (r1 \/ 2))) ? 0 : \-1)) \> 0) goto L5\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|SYNTHETIC\lRETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010}"];
Node_8 [shape=record,label="{8\:\ 0x0018|if ((r4 \> ((float) (r3.mRecyclerViewWidth \- r3.mVerticalThumbWidth)) ? 1 : (r4 == ((float) (r3.mRecyclerViewWidth \- r3.mVerticalThumbWidth)) ? 0 : \-1)) \< 0) goto L5\l}"];
MethodNode[shape=record,label="{boolean androidx.recyclerview.widget.FastScroller.isPointInsideVerticalThumb((r3v0 'this' androidx.recyclerview.widget.FastScroller A[IMMUTABLE_TYPE, THIS]), (r4v0 'x' float A[D('x' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'y' float A[D('y' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x002f \-\> B:15:0x0032, CROSS_EDGE: B:12:0x002d \-\> B:14:0x0031, CROSS_EDGE: B:10:0x0025 \-\> B:14:0x0031, CROSS_EDGE: B:8:0x0018 \-\> B:9:0x001a, CROSS_EDGE: B:8:0x0018 \-\> B:14:0x0031\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_14;
Node_5 -> Node_9[style=dashed];
Node_14 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_1;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
}

