digraph "CFG forandroidx.recyclerview.widget.FastScroller.scrollTo(FF[IIII)I" {
subgraph cluster_Region_1914024342 {
label = "R(2:1|(2:(1:3)|(2:5|(2:(1:9)|(1:8)))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|int int r0 = r9[1] \- r9[0]\l}"];
subgraph cluster_Region_476052990 {
label = "R(2:(1:3)|(2:5|(2:(1:9)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1442041480 {
label = "IF [B:3:0x0007] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 == 0) goto L3\l}"];
subgraph cluster_Region_1795812252 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1595987048 {
label = "R(2:5|(2:(1:9)|(1:8)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|float float r2 = (r8 \- r7) \/ r0\lint int r3 = r10 \- r12\lint int r4 = (int) (r3 * r2)\lint int r5 = r11 + r4\l}"];
subgraph cluster_Region_1109463376 {
label = "R(2:(1:9)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1956689522 {
label = "IF [B:6:0x0016, B:7:0x0018] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r5 \>= r3) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|ADDED_TO_REGION\l|if (r5 \< 0) goto L9\l}"];
subgraph cluster_Region_898033614 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_736501873 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\l|return r4\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.FastScroller.scrollTo((r6v0 'this' androidx.recyclerview.widget.FastScroller A[IMMUTABLE_TYPE, THIS]), (r7v0 'oldDragPos' float A[D('oldDragPos' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'newDragPos' float A[D('newDragPos' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'scrollbarRange' int[] A[D('scrollbarRange' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'scrollRange' int A[D('scrollRange' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'scrollOffset' int A[D('scrollOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'viewLength' int A[D('viewLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x001a \-\> B:1:?, CROSS_EDGE: B:9:0x001b \-\> B:1:?, CROSS_EDGE: B:6:0x0016 \-\> B:9:0x001b\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_1;
Node_8 -> Node_1;
Node_0 -> Node_2;
}

