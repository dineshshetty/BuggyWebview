digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.handleUpdate(III)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r5.mShouldReverseLayout == false) goto L26\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|int r0 = getLastChildPosition()\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|PHI: r0 \l  PHI: (r0v2 'minPosition' int) = (r0v1 'minPosition' int), (r0v3 'minPosition' int) binds: [B:5:0x0009, B:4:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if (r8 != 8) goto L25\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r6 \>= r7) goto L24\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|int r1 = r7 + 1\lr2 = r6\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|PHI: r1 r2 \l  PHI: (r1v2 'affectedRangeEnd' int) = (r1v1 'affectedRangeEnd' int), (r1v3 'affectedRangeEnd' int), (r1v4 'affectedRangeEnd' int) binds: [B:11:0x001b, B:10:0x0017, B:9:0x0013] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'affectedRangeStart' int) = (r2v0 'affectedRangeStart' int), (r2v2 'affectedRangeStart' int), (r2v3 'affectedRangeStart' int) binds: [B:11:0x001b, B:10:0x0017, B:9:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r5.mLazySpanLookup.invalidateAfter(r2)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|switch(r8) \{\l    case 1: goto L12;\l    case 2: goto L11;\l    case 8: goto L10;\l    default: goto L13;\l\}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|r5.mLazySpanLookup.offsetForRemoval(r6, 1)\lr5.mLazySpanLookup.offsetForAddition(r7, 1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|r5.mLazySpanLookup.offsetForRemoval(r6, r7)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|r5.mLazySpanLookup.offsetForAddition(r6, r7)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|if (r1 \> r0) goto L16\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042}"];
Node_21 [shape=record,label="{21\:\ 0x0044|if (r5.mShouldReverseLayout == false) goto L23\l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|int r3 = getFirstChildPosition()\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|PHI: r3 \l  PHI: (r3v3 'maxPosition' int) = (r3v2 'maxPosition' int), (r3v4 'maxPosition' int) binds: [B:23:0x004b, B:22:0x0046] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \> r3) goto L22\l}"];
Node_25 [shape=record,label="{25\:\ 0x0051|requestLayout()\l}"];
Node_26 [shape=record,label="{26\:\ 0x0054|RETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|int r3 = getLastChildPosition()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|int r1 = r6 + 1\lr2 = r7\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|r2 = r6\lint r1 = r6 + r7\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|int r0 = getFirstChildPosition()\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.StaggeredGridLayoutManager.handleUpdate((r5v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6v0 'positionStart' int A[D('positionStart' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'itemCountOrToPosition' int A[D('itemCountOrToPosition' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'cmd' int A[D('cmd' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0054 \-\> B:1:?, CROSS_EDGE: B:24:0x004f \-\> B:26:0x0054, CROSS_EDGE: B:23:0x004b \-\> B:24:0x004f, CROSS_EDGE: B:16:0x0033 \-\> B:18:0x003f, CROSS_EDGE: B:17:0x0039 \-\> B:18:0x003f, CROSS_EDGE: B:13:0x0023 \-\> B:18:0x003f, CROSS_EDGE: B:10:0x0017 \-\> B:12:0x001e, CROSS_EDGE: B:11:0x001b \-\> B:12:0x001e, CROSS_EDGE: B:5:0x0009 \-\> B:6:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_13 -> Node_17;
Node_13 -> Node_18;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_27 -> Node_1;
Node_23 -> Node_24;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_5 -> Node_6;
}

