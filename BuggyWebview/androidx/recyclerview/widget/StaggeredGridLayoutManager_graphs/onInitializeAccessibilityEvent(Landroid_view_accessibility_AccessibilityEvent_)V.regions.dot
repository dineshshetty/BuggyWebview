digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.onInitializeAccessibilityEvent(Landroid\/view\/accessibility\/AccessibilityEvent;)V" {
subgraph cluster_Region_490850337 {
label = "R(2:1|(1:(2:3|(2:(1:13)|(2:6|(2:(2:8|9)|(1:11)))))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onInitializeAccessibilityEvent(r5)\l}"];
subgraph cluster_Region_1656975700 {
label = "R(1:(2:3|(2:(1:13)|(2:6|(2:(2:8|9)|(1:11))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_725513742 {
label = "IF [B:3:0x0007] THEN: R(2:3|(2:(1:13)|(2:6|(2:(2:8|9)|(1:11))))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (getChildCount() \> 0) goto L3\l}"];
subgraph cluster_Region_807947689 {
label = "R(2:3|(2:(1:13)|(2:6|(2:(2:8|9)|(1:11)))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|android.view.View android.view.View r1 = findFirstVisibleItemClosestToStart(false)\landroid.view.View android.view.View r0 = findFirstVisibleItemClosestToEnd(false)\l}"];
subgraph cluster_Region_1418017716 {
label = "R(2:(1:13)|(2:6|(2:(2:8|9)|(1:11))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1020945515 {
label = "IF [B:5:0x0012, B:6:0x0014] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r1 == null) goto L14\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|ADDED_TO_REGION\l|if (r0 == null) goto L13\l}"];
subgraph cluster_Region_1192681925 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_2031739812 {
label = "R(2:6|(2:(2:8|9)|(1:11)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|int int r2 = getPosition(r1)\lint int r3 = getPosition(r0)\l}"];
subgraph cluster_Region_1042706850 {
label = "R(2:(2:8|9)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_73070977 {
label = "IF [B:9:0x001f] THEN: R(2:8|9) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|if (r2 \< r3) goto L8\l}"];
subgraph cluster_Region_1995286950 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|r5.setFromIndex(r2)\lr5.setToIndex(r3)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_435905068 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0028|r5.setFromIndex(r3)\lr5.setToIndex(r2)\l}"];
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002f|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0030|ORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.StaggeredGridLayoutManager.onInitializeAccessibilityEvent((r4v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'event' android.view.accessibility.AccessibilityEvent A[D('event' android.view.accessibility.AccessibilityEvent), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:11:0x0028 \-\> B:13:0x0030, CROSS_EDGE: B:12:0x002f \-\> B:1:?, CROSS_EDGE: B:5:0x0012 \-\> B:12:0x002f, CROSS_EDGE: B:3:0x0007 \-\> B:13:0x0030\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent):void]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_14;
Node_14 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_15 -> Node_1;
Node_11 -> Node_16;
Node_0 -> Node_2;
Node_16 -> Node_1;
Node_12 -> Node_1;
Node_13 -> Node_1;
}

