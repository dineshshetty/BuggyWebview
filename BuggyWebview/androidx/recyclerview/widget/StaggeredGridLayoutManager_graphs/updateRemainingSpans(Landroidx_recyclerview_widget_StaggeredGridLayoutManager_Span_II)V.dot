digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.updateRemainingSpans(Landroidx\/recyclerview\/widget\/StaggeredGridLayoutManager$Span;II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|int r0 = r6.getDeletedSize()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r7 != (\-1)) goto L9\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|int r2 = r6.getStartLine()\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if ((r2 + r0) \> r8) goto L8\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r5.mRemainingSpans.set(r6.mIndex, false)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|int r2 = r6.getEndLine()\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|if ((r2 \- r0) \< r8) goto L13\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|r5.mRemainingSpans.set(r6.mIndex, false)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|RETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.StaggeredGridLayoutManager.updateRemainingSpans((r5v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6v0 'span' androidx.recyclerview.widget.StaggeredGridLayoutManager$Span A[D('span' androidx.recyclerview.widget.StaggeredGridLayoutManager$Span), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'layoutDir' int A[D('layoutDir' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'targetLine' int A[D('targetLine' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000e \-\> B:11:0x0027, CROSS_EDGE: B:10:0x0020 \-\> B:11:0x0027, CROSS_EDGE: B:9:0x001e \-\> B:11:0x0027\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_1;
}

