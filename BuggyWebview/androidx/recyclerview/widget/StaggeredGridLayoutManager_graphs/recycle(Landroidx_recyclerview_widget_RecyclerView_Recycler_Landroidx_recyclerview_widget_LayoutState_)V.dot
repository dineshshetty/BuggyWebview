digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.recycle(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/LayoutState;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0002|if (r5.mRecycle == false) goto L29\l}"];
Node_4 [shape=record,label="{4\:\ 0x0004}"];
Node_5 [shape=record,label="{5\:\ 0x0006|if (r5.mInfinite == false) goto L5\l}"];
Node_7 [shape=record,label="{7\:\ 0x0009}"];
Node_8 [shape=record,label="{8\:\ 0x000c|if (r5.mAvailable != 0) goto L14\l}"];
Node_9 [shape=record,label="{9\:\ 0x000e}"];
Node_10 [shape=record,label="{10\:\ 0x0010|if (r5.mLayoutDirection != (\-1)) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|recycleFromEnd(r4, r5.mEndLine)\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|recycleFromStart(r4, r5.mStartLine)\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e}"];
Node_14 [shape=record,label="{14\:\ 0x0020|if (r5.mLayoutDirection != (\-1)) goto L22\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|int r0 = r5.mStartLine \- getMaxStart(r5.mStartLine)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|if (r0 \>= 0) goto L21\l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|int r1 = r5.mEndLine\l}"];
Node_19 [shape=record,label="{19\:\ 0x0039|PHI: r1 \l  PHI: (r1v10 'line' int) = (r1v9 'line' int), (r1v11 'line' int) binds: [B:18:0x0030, B:17:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|recycleFromEnd(r4, r1)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|int r1 = r5.mEndLine\lint r1 = r1 \- java.lang.Math.min(r0, r5.mAvailable)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|int r0 = getMinEnd(r5.mEndLine) \- r5.mEndLine\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|if (r0 \>= 0) goto L27\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|int r1 = r5.mStartLine\l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|PHI: r1 \l  PHI: (r1v4 'line' int) = (r1v3 'line' int), (r1v5 'line' int) binds: [B:23:0x004b, B:22:0x0048] A[DONT_GENERATE, DONT_INLINE]\l|recycleFromStart(r4, r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0057|RETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|int r1 = r5.mStartLine\lint r1 = r1 + java.lang.Math.min(r0, r5.mAvailable)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x0058|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.StaggeredGridLayoutManager.recycle((r3v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'layoutState' androidx.recyclerview.widget.LayoutState A[D('layoutState' androidx.recyclerview.widget.LayoutState), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:12:0x0018 \-\> B:25:0x0057, CROSS_EDGE: B:19:0x0039 \-\> B:25:0x0057, CROSS_EDGE: B:18:0x0030 \-\> B:19:0x0039, CROSS_EDGE: B:24:0x0054 \-\> B:25:0x0057, CROSS_EDGE: B:23:0x004b \-\> B:24:0x0054, CROSS_EDGE: B:26:0x0058 \-\> B:1:?, CROSS_EDGE: B:3:0x0002 \-\> B:26:0x0058\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_26;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_30[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_27;
Node_27 -> Node_1;
Node_12 -> Node_28;
Node_28 -> Node_1;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_19 -> Node_29;
Node_29 -> Node_1;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_1;
Node_23 -> Node_24;
Node_30 -> Node_1;
Node_26 -> Node_1;
}

