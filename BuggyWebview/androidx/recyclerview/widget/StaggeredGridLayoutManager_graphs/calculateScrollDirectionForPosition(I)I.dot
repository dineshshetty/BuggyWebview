digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.calculateScrollDirectionForPosition(I)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (getChildCount() != 0) goto L8\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r5.mShouldReverseLayout == false) goto L7\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|RETURN\lORIG_RETURN\l|return 1\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|int r0 = getFirstChildPosition()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r6 \>= r0) goto L15\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|r3 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:11:0x0016, B:10:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|if (r3 == r5.mShouldReverseLayout) goto L13\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|RETURN\lORIG_RETURN\l|return 1\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|r3 = false\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.StaggeredGridLayoutManager.calculateScrollDirectionForPosition((r5v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:5:0x000a \-\> B:7:0x000d, CROSS_EDGE: B:16:0x001d \-\> B:1:?, CROSS_EDGE: B:13:0x0019 \-\> B:16:0x001d, CROSS_EDGE: B:11:0x0016 \-\> B:12:0x0017\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_1;
Node_17 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_1;
Node_18 -> Node_1;
Node_11 -> Node_12;
}

