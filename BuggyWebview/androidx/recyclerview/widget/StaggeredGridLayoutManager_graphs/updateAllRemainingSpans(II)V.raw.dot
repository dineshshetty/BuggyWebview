digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.updateAllRemainingSpans(II)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:1819)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0001|LOOP_START\lLOOP:0: B:3:0x0001\-\>B:9:0x0019\l|0x0001: IGET  (r1 I:int) = (r2 I:androidx.recyclerview.widget.StaggeredGridLayoutManager) androidx.recyclerview.widget.StaggeredGridLayoutManager.mSpanCount int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0003|0x0003: IF  (r0 I:??[int, byte, short, char] A[D('i' int)]) \>= (r1 I:??[int, byte, short, char])  \-\> B:11:0x001c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0005|0x0005: IGET  (r1 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) = (r2 I:androidx.recyclerview.widget.StaggeredGridLayoutManager) androidx.recyclerview.widget.StaggeredGridLayoutManager.mSpans androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]  (LINE:1820)\l0x0007: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0009: IGET  (r1 I:java.util.ArrayList\<android.view.View\>) = (r1 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) androidx.recyclerview.widget.StaggeredGridLayoutManager.Span.mViews java.util.ArrayList \l0x000b: INVOKE  (r1 I:boolean) = (r1 I:java.util.ArrayList) type: VIRTUAL call: java.util.ArrayList.isEmpty():boolean A[MD:():boolean (c)]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IGET  (r1 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) = (r2 I:androidx.recyclerview.widget.StaggeredGridLayoutManager) androidx.recyclerview.widget.StaggeredGridLayoutManager.mSpans androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]  (LINE:1823)\l0x0014: AGET  (r1 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY][]), (r0 I:??[int, short, byte, char] A[D('i' int)]) \l0x0016: INVOKE  \l  (r2 I:androidx.recyclerview.widget.StaggeredGridLayoutManager)\l  (r1 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)\l  (r3 I:int A[D('layoutDir' int)])\l  (r4 I:int A[D('targetLine' int)])\l type: DIRECT call: androidx.recyclerview.widget.StaggeredGridLayoutManager.updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span, int, int):void A[MD:(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span, int, int):void (m)]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|LOOP_END\lLOOP:0: B:3:0x0001\-\>B:9:0x0019\l|0x0019: ARITH  (r0 I:int) = (r0 I:int A[D('i' int)]) + (1 int)  (LINE:1819)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|RETURN\l|0x001c: RETURN    (LINE:1825)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.StaggeredGridLayoutManager.updateAllRemainingSpans((r2 'this' I:androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('layoutDir' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('targetLine' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0019 \-\> B:3:0x0001, CROSS_EDGE: B:6:0x000f \-\> B:9:0x0019\lDebug Info:\l  0x0001\-0x001c: r0 'i' I\l  \-1 \-0x001c: r3 'layoutDir' I\l  \-1 \-0x001c: r4 'targetLine' I\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_13[style=dashed];
Node_8 -> Node_12;
Node_12 -> Node_9;
Node_9 -> Node_3;
Node_13 -> Node_9;
Node_11 -> Node_10;
Node_10 -> Node_1;
}

