digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.createFullSpanItemFromEnd(I)Landroidx\/recyclerview\/widget\/StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem;" {
subgraph cluster_Region_244484255 {
label = "R(3:1|(1:4)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem r0 = new androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem()\lr0.mGapPerSpan = new int[r4.mSpanCount]\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_94718679 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r1 \< r4.mSpanCount) goto L4\l}"];
subgraph cluster_Region_1982733305 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_END\lLOOP:0: B:3:0x000c\-\>B:5:0x0010\l|r0.mGapPerSpan[r1] = r5 \- r4.mSpans[r1].getEndLine(r5)\lr1++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0021|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c|LOOP_START\lLOOP:0: B:3:0x000c\-\>B:5:0x0010\lPHI: r1 \l  PHI: (r1v3 'i' int) = (r1v2 'i' int), (r1v4 'i' int) binds: [B:2:0x0000, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0021|SYNTHETIC\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager.createFullSpanItemFromEnd((r4v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'newItemTop' int A[D('newItemTop' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x0010 \-\> B:3:0x000c\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_1;
Node_0 -> Node_2;
Node_3 -> Node_4;
Node_7 -> Node_6;
}

