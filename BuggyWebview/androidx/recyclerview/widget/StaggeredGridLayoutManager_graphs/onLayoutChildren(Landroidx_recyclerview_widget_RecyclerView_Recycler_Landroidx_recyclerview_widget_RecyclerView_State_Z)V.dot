digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.onLayoutChildren(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;Z)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo r0 = r9.mAnchorInfo\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r9.mPendingSavedState != null) goto L96\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r9.mPendingScrollPosition == (\-1)) goto L5\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|r4 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|if (r0.mValid == false) goto L95\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x0020|if (r9.mPendingScrollPosition != (\-1)) goto L95\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022}"];
Node_15 [shape=record,label="{15\:\ 0x0024|if (r9.mPendingSavedState == null) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|r1 = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|PHI: r1 \l  PHI: (r1v4 'recalculateAnchor' boolean) = (r1v3 'recalculateAnchor' boolean), (r1v7 'recalculateAnchor' boolean) binds: [B:18:0x0029, B:17:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L18\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|r0.reset()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|if (r9.mPendingSavedState == null) goto L17\l}"];
Node_22 [shape=record,label="{22\:\ 0x0033|applyPendingSavedState(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|updateAnchorInfoForLayout(r11, r0)\lr0.mValid = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|resolveShouldLayoutReverse()\lr0.mLayoutFromEnd = r9.mShouldReverseLayout\l}"];
Node_25 [shape=record,label="{25\:\ 0x0043}"];
Node_26 [shape=record,label="{26\:\ 0x0045|if (r9.mPendingSavedState != null) goto L27\l}"];
Node_27 [shape=record,label="{27\:\ 0x0047}"];
Node_28 [shape=record,label="{28\:\ 0x0049|if (r9.mPendingScrollPosition != (\-1)) goto L27\l}"];
Node_29 [shape=record,label="{29\:\ 0x004b}"];
Node_30 [shape=record,label="{30\:\ 0x004f|if (r0.mLayoutFromEnd != r9.mLastLayoutFromEnd) goto L26\l}"];
Node_31 [shape=record,label="{31\:\ 0x0051}"];
Node_32 [shape=record,label="{32\:\ 0x0057|if (isLayoutRTL() == r9.mLastLayoutRTL) goto L27\l}"];
Node_33 [shape=record,label="{33\:\ 0x0059|r9.mLazySpanLookup.clear()\lr0.mInvalidateOffsets = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x0060}"];
Node_35 [shape=record,label="{35\:\ 0x0064|if (getChildCount() \<= 0) goto L59\l}"];
Node_36 [shape=record,label="{36\:\ 0x0066|androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState r5 = r9.mPendingSavedState\l}"];
Node_37 [shape=record,label="{37\:\ 0x0068|if (r5 == null) goto L33\l}"];
Node_38 [shape=record,label="{38\:\ 0x006a}"];
Node_39 [shape=record,label="{39\:\ 0x006c|if (r5.mSpanOffsetsSize \>= 1) goto L59\l}"];
Node_40 [shape=record,label="{40\:\ 0x006e}"];
Node_41 [shape=record,label="{41\:\ 0x0070|if (r0.mInvalidateOffsets == false) goto L45\l}"];
Node_42 [shape=record,label="{42\:\ 0x0072|r5 = 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x0073|LOOP_START\lLOOP:0: B:43:0x0073\-\>B:48:0x008d\lPHI: r5 \l  PHI: (r5v31 'i' int) = (r5v30 'i' int), (r5v32 'i' int) binds: [B:42:0x0072, B:48:0x008d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0075|if (r5 \>= r9.mSpanCount) goto L44\l}"];
Node_45 [shape=record,label="{45\:\ 0x0077|r9.mSpans[r5].clear()\l}"];
Node_46 [shape=record,label="{46\:\ 0x0082|if (r0.mOffset == Integer.MIN_VALUE) goto L43\l}"];
Node_47 [shape=record,label="{47\:\ 0x0084|r9.mSpans[r5].setLine(r0.mOffset)\l}"];
Node_99 [shape=record,label="{99\:\ 0x008d|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x008d|LOOP_END\lLOOP:0: B:43:0x0073\-\>B:48:0x008d\l|int r5 = r5 + 1\l}"];
Node_100 [shape=record,label="{100\:\ 0x008d|SYNTHETIC\l}"];
Node_98 [shape=record,label="{98\:\ 0x00cc|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x0091|if (r1 != false) goto L53\l}"];
Node_51 [shape=record,label="{51\:\ 0x0093}"];
Node_52 [shape=record,label="{52\:\ 0x0097|if (r9.mAnchorInfo.mSpanReferenceLines != null) goto L48\l}"];
Node_54 [shape=record,label="{54\:\ 0x009a|r5 = 0\l}"];
Node_55 [shape=record,label="{55\:\ 0x009b|LOOP_START\lLOOP:1: B:55:0x009b\-\>B:57:0x009f\lPHI: r5 \l  PHI: (r5v28 'i' int) = (r5v27 'i' int), (r5v29 'i' int) binds: [B:54:0x009a, B:57:0x009f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_56 [shape=record,label="{56\:\ 0x009d|if (r5 \>= r9.mSpanCount) goto L52\l}"];
Node_57 [shape=record,label="{57\:\ 0x009f|LOOP_END\lLOOP:1: B:55:0x009b\-\>B:57:0x009f\l|r6 = r9.mSpans[r5]\lr6.clear()\lr6.setLine(r9.mAnchorInfo.mSpanReferenceLines[r5])\lint r5 = r5 + 1\l}"];
Node_101 [shape=record,label="{101\:\ 0x00cc|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x00b2|r5 = 0\l}"];
Node_59 [shape=record,label="{59\:\ 0x00b3|LOOP_START\lLOOP:2: B:59:0x00b3\-\>B:61:0x00b7\lPHI: r5 \l  PHI: (r5v22 'i' int) = (r5v21 'i' int), (r5v24 'i' int) binds: [B:58:0x00b2, B:61:0x00b7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_60 [shape=record,label="{60\:\ 0x00b5|if (r5 \>= r9.mSpanCount) goto L57\l}"];
Node_61 [shape=record,label="{61\:\ 0x00b7|LOOP_END\lLOOP:2: B:59:0x00b3\-\>B:61:0x00b7\l|r9.mSpans[r5].cacheReferenceLineAndClear(r9.mShouldReverseLayout, r0.mOffset)\lint r5 = r5 + 1\l}"];
Node_102 [shape=record,label="{102\:\ 0x00c5|SYNTHETIC\l}"];
Node_62 [shape=record,label="{62\:\ 0x00c5|r9.mAnchorInfo.saveSpanReferenceLines(r9.mSpans)\l}"];
Node_63 [shape=record,label="{63\:\ 0x00cc|detachAndScrapAttachedViews(r10)\lr9.mLayoutState.mRecycle = false\lr9.mLaidOutInvalidFullSpan = false\lupdateMeasureSpecs(r9.mSecondaryOrientation.getTotalSpace())\lupdateLayoutState(r0.mPosition, r11)\l}"];
Node_64 [shape=record,label="{64\:\ 0x00e5|if (r0.mLayoutFromEnd == false) goto L94\l}"];
Node_65 [shape=record,label="{65\:\ 0x00e7|setLayoutStateDirection(\-1)\lfill(r10, r9.mLayoutState, r11)\lsetLayoutStateDirection(1)\landroidx.recyclerview.widget.LayoutState r2 = r9.mLayoutState\lr2.mCurrentPosition = r0.mPosition + r9.mLayoutState.mItemDirection\lfill(r10, r9.mLayoutState, r11)\l}"];
Node_67 [shape=record,label="{67\:\ 0x011e|repositionToWrapContentIfNecessary()\l}"];
Node_68 [shape=record,label="{68\:\ 0x0125|if (getChildCount() \<= 0) goto L68\l}"];
Node_69 [shape=record,label="{69\:\ 0x0127}"];
Node_70 [shape=record,label="{70\:\ 0x0129|if (r9.mShouldReverseLayout == false) goto L67\l}"];
Node_71 [shape=record,label="{71\:\ 0x012b|fixEndGap(r10, r11, true)\lfixStartGap(r10, r11, false)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0132|fixStartGap(r10, r11, true)\lfixEndGap(r10, r11, false)\l}"];
Node_73 [shape=record,label="{73\:\ 0x0138|r2 = false\l}"];
Node_74 [shape=record,label="{74\:\ 0x0139|if (r12 == false) goto L85\l}"];
Node_75 [shape=record,label="{75\:\ 0x013b}"];
Node_76 [shape=record,label="{76\:\ 0x013f|if (r11.isPreLayout() != false) goto L85\l}"];
Node_77 [shape=record,label="{77\:\ 0x0141}"];
Node_78 [shape=record,label="{78\:\ 0x0143|if (r9.mGapStrategy == 0) goto L84\l}"];
Node_79 [shape=record,label="{79\:\ 0x0145}"];
Node_80 [shape=record,label="{80\:\ 0x0149|if (getChildCount() \<= 0) goto L84\l}"];
Node_81 [shape=record,label="{81\:\ 0x014b}"];
Node_82 [shape=record,label="{82\:\ 0x014d|if (r9.mLaidOutInvalidFullSpan != false) goto L80\l}"];
Node_83 [shape=record,label="{83\:\ 0x014f}"];
Node_84 [shape=record,label="{84\:\ 0x0153|if (hasGapsToFix() == null) goto L84\l}"];
Node_87 [shape=record,label="{87\:\ 0x0157|PHI: r4 \l  PHI: (r4v7 'needToCheckForGaps' boolean) = (r4v6 'needToCheckForGaps' boolean), (r4v0 'needToCheckForGaps' boolean), (r4v0 'needToCheckForGaps' boolean) binds: [B:86:0x0156, B:82:0x014d, B:84:0x0153] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L85\l}"];
Node_88 [shape=record,label="{88\:\ 0x0159|removeCallbacks(r9.mCheckForGapsRunnable)\l}"];
Node_89 [shape=record,label="{89\:\ 0x0162|if (checkForGaps() == false) goto L85\l}"];
Node_90 [shape=record,label="{90\:\ 0x0164|r2 = true\l}"];
Node_86 [shape=record,label="{86\:\ 0x0156|r4 = false\l}"];
Node_91 [shape=record,label="{91\:\ 0x0165|PHI: r2 \l  PHI: (r2v5 'hasGaps' boolean) = (r2v4 'hasGaps' boolean), (r2v4 'hasGaps' boolean), (r2v4 'hasGaps' boolean), (r2v4 'hasGaps' boolean), (r2v6 'hasGaps' boolean) binds: [B:74:0x0139, B:76:0x013f, B:87:0x0157, B:89:0x0162, B:90:0x0164] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_92 [shape=record,label="{92\:\ 0x0169|if (r11.isPreLayout() == false) goto L88\l}"];
Node_93 [shape=record,label="{93\:\ 0x016b|r9.mAnchorInfo.reset()\l}"];
Node_94 [shape=record,label="{94\:\ 0x0170|r9.mLastLayoutFromEnd = r0.mLayoutFromEnd\lr9.mLastLayoutRTL = isLayoutRTL()\l}"];
Node_95 [shape=record,label="{95\:\ 0x017a|if (r2 == false) goto L93\l}"];
Node_96 [shape=record,label="{96\:\ 0x017c|r9.mAnchorInfo.reset()\lonLayoutChildren(r10, r11, false)\l}"];
Node_97 [shape=record,label="{97\:\ 0x0184|RETURN\lORIG_RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_103 [shape=record,label="{103\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_66 [shape=record,label="{66\:\ 0x0103|setLayoutStateDirection(1)\lfill(r10, r9.mLayoutState, r11)\lsetLayoutStateDirection(\-1)\landroidx.recyclerview.widget.LayoutState r2 = r9.mLayoutState\lr2.mCurrentPosition = r0.mPosition + r9.mLayoutState.mItemDirection\lfill(r10, r9.mLayoutState, r11)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|r1 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if (r11.getItemCount() != 0) goto L5\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|removeAndRecycleAllViews(r10)\lr0.reset()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.StaggeredGridLayoutManager.onLayoutChildren((r9v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r10v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'shouldCheckForGaps' boolean A[D('shouldCheckForGaps' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:48:0x008d \-\> B:43:0x0073, CROSS_EDGE: B:46:0x0082 \-\> B:48:0x008d, CROSS_EDGE: B:97:0x0184 \-\> B:1:?, CROSS_EDGE: B:95:0x017a \-\> B:97:0x0184, CROSS_EDGE: B:92:0x0169 \-\> B:94:0x0170, CROSS_EDGE: B:89:0x0162 \-\> B:91:0x0165, CROSS_EDGE: B:87:0x0157 \-\> B:91:0x0165, CROSS_EDGE: B:84:0x0153 \-\> B:87:0x0157, CROSS_EDGE: B:82:0x014d \-\> B:87:0x0157, CROSS_EDGE: B:80:0x0149 \-\> B:86:0x0156, CROSS_EDGE: B:78:0x0143 \-\> B:86:0x0156, CROSS_EDGE: B:76:0x013f \-\> B:91:0x0165, CROSS_EDGE: B:74:0x0139 \-\> B:91:0x0165, CROSS_EDGE: B:72:0x0132 \-\> B:73:0x0138, CROSS_EDGE: B:68:0x0125 \-\> B:73:0x0138, CROSS_EDGE: B:66:0x0103 \-\> B:67:0x011e, BACK_EDGE: B:57:0x009f \-\> B:55:0x009b, CROSS_EDGE: B:56:0x009d \-\> B:63:0x00cc, BACK_EDGE: B:61:0x00b7 \-\> B:59:0x00b3, CROSS_EDGE: B:62:0x00c5 \-\> B:63:0x00cc, CROSS_EDGE: B:50:0x0091 \-\> B:58:0x00b2, CROSS_EDGE: B:39:0x006c \-\> B:63:0x00cc, CROSS_EDGE: B:37:0x0068 \-\> B:40:0x006e, CROSS_EDGE: B:35:0x0064 \-\> B:63:0x00cc, CROSS_EDGE: B:32:0x0057 \-\> B:34:0x0060, CROSS_EDGE: B:30:0x004f \-\> B:33:0x0059, CROSS_EDGE: B:28:0x0049 \-\> B:34:0x0060, CROSS_EDGE: B:26:0x0045 \-\> B:34:0x0060, CROSS_EDGE: B:23:0x0037 \-\> B:24:0x003e, CROSS_EDGE: B:19:0x002a \-\> B:25:0x0043, CROSS_EDGE: B:18:0x0029 \-\> B:19:0x002a, CROSS_EDGE: B:13:0x0020 \-\> B:18:0x0029, CROSS_EDGE: B:11:0x001c \-\> B:18:0x0029, CROSS_EDGE: B:5:0x0009 \-\> B:10:0x0018, CROSS_EDGE: B:3:0x0005 \-\> B:6:0x000b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_17;
Node_15 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_34;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_34;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_63;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_63;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_50;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_98;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_100;
Node_47 -> Node_99;
Node_99 -> Node_48;
Node_48 -> Node_43;
Node_100 -> Node_48;
Node_98 -> Node_63;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_58;
Node_51 -> Node_52;
Node_52 -> Node_54;
Node_52 -> Node_58[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_101;
Node_57 -> Node_55;
Node_101 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_102;
Node_61 -> Node_59;
Node_102 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_67;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_73;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_73;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_91;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_91;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_86;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_86;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_87;
Node_83 -> Node_84;
Node_84 -> Node_86;
Node_84 -> Node_87[style=dashed];
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_91;
Node_88 -> Node_89;
Node_89 -> Node_90[style=dashed];
Node_89 -> Node_91;
Node_90 -> Node_91;
Node_86 -> Node_87;
Node_91 -> Node_92;
Node_92 -> Node_93[style=dashed];
Node_92 -> Node_94;
Node_93 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_103;
Node_96 -> Node_97;
Node_97 -> Node_1;
Node_103 -> Node_1;
Node_66 -> Node_67;
Node_18 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

