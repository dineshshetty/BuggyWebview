digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.setGapStrategy(I)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|assertNotInLayoutOrScroll(null)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r3 != r2.mGapStrategy) goto L5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r3 == 0) goto L10\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b}"];
Node_7 [shape=record,label="{7\:\ 0x000c|if (r3 != 2) goto L8\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f}"];
Node_10 [shape=record,label="{10\:\ 0x0016|throw new java.lang.IllegalArgumentException(\"invalid gap strategy. Must be GAP_HANDLING_NONE or GAP_HANDLING_MOVE_ITEMS_BETWEEN_SPANS\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|r2.mGapStrategy = r3\lrequestLayout()\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.StaggeredGridLayoutManager.setGapStrategy((r2v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'gapStrategy' int A[D('gapStrategy' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0016 \-\> B:1:?, CROSS_EDGE: B:12:0x001c \-\> B:1:?, CROSS_EDGE: B:5:0x0009 \-\> B:11:0x0017\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

