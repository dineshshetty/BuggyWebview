digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.onDetachedFromWindow(Landroidx\/recyclerview\/widget\/RecyclerView;Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|super.onDetachedFromWindow(r3, r4)\lremoveCallbacks(r2.mCheckForGapsRunnable)\lr0 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_START\lLOOP:0: B:3:0x0009\-\>B:5:0x000d\lPHI: r0 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v3 'i' int) binds: [B:2:0x0000, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r0 \>= r2.mSpanCount) goto L5\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|LOOP_END\lLOOP:0: B:3:0x0009\-\>B:5:0x000d\l|r2.mSpans[r0].clear()\lint r0 = r0 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|r3.requestLayout()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.StaggeredGridLayoutManager.onDetachedFromWindow((r2v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'view' androidx.recyclerview.widget.RecyclerView A[D('view' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:5:0x000d \-\> B:3:0x0009\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler):void]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_3;
Node_8 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

