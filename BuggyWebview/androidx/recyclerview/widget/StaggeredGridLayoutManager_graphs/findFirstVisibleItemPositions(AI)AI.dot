digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.findFirstVisibleItemPositions([I)[I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 != null) goto L10\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002|int[] r4 = new int[r3.mSpanCount]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|PHI: r4 \l  PHI: (r4v1 'into' int[]) = (r4v0 'into' int[]), (r4v2 'into' int[]) binds: [B:5:0x000a, B:3:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|r0 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|LOOP_START\lLOOP:0: B:7:0x000d\-\>B:9:0x0011\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:6:0x000c, B:9:0x0011] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|if (r0 \>= r3.mSpanCount) goto L7\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|LOOP_END\lLOOP:0: B:7:0x000d\-\>B:9:0x0011\l|r4[r0] = r3.mSpans[r0].findFirstVisibleItemPosition()\lint r0 = r0 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|RETURN\l|return r4\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r4.length \< r3.mSpanCount) goto L12\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Provided int[]'s size must be more than or equal to span count. Expected:\")\lr1.append(r3.mSpanCount)\lr1.append(\", array size:\")\lr1.append(r4.length)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public int[] androidx.recyclerview.widget.StaggeredGridLayoutManager.findFirstVisibleItemPositions((r3v0 'this' androidx.recyclerview.widget.StaggeredGridLayoutManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'into' int[] A[D('into' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:9:0x0011 \-\> B:7:0x000d, CROSS_EDGE: B:5:0x000a \-\> B:6:0x000c, CROSS_EDGE: B:12:0x0040 \-\> B:1:?\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_7;
Node_13 -> Node_10;
Node_10 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

