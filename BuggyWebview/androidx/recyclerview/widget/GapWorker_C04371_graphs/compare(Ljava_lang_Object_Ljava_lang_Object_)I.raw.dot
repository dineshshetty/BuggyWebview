digraph "CFG forandroidx.recyclerview.widget.GapWorker.1.compare(Ljava\/lang\/Object;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CHECK_CAST (r1 I:androidx.recyclerview.widget.GapWorker$Task) = (androidx.recyclerview.widget.GapWorker$Task) (r1 I:??[OBJECT, ARRAY])  (LINE:190)\l0x0002: CHECK_CAST (r2 I:androidx.recyclerview.widget.GapWorker$Task) = (androidx.recyclerview.widget.GapWorker$Task) (r2 I:??[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:int) = \l  (r0 I:androidx.recyclerview.widget.GapWorker$1)\l  (r1 I:androidx.recyclerview.widget.GapWorker$Task)\l  (r2 I:androidx.recyclerview.widget.GapWorker$Task)\l type: VIRTUAL call: androidx.recyclerview.widget.GapWorker.1.compare(androidx.recyclerview.widget.GapWorker$Task, androidx.recyclerview.widget.GapWorker$Task):int A[MD:(androidx.recyclerview.widget.GapWorker$Task, androidx.recyclerview.widget.GapWorker$Task):int (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|0x0008: RETURN  (r1 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ int androidx.recyclerview.widget.GapWorker.1.compare((r0 'this' I:androidx.recyclerview.widget.GapWorker$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.recyclerview.widget.GapWorker$Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:androidx.recyclerview.widget.GapWorker$Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lJadxCommentsAttr\{\l DEBUG: \l \-\> Method arguments types fixed to match base method, original types: [java.lang.Object, java.lang.Object]\}\lMETHOD_OVERRIDE: [ClspMth\{java.util.Comparator.compare(T, T):int\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

