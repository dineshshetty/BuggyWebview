digraph "CFG forandroidx.recyclerview.widget.ItemTouchHelper.Callback.getAnimationDuration(Landroidx\/recyclerview\/widget\/RecyclerView;IFF)J" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator) = (r4 I:androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getItemAnimator():androidx.recyclerview.widget.RecyclerView$ItemAnimator A[MD:():androidx.recyclerview.widget.RecyclerView$ItemAnimator (m)] (LINE:2132)\l0x0004: CONST  (r1 I:??[int, float, short, byte, char]) = (8 ??[int, float, short, byte, char])  (LINE:2133)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemAnimator' androidx.recyclerview.widget.RecyclerView$ItemAnimator)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('animationType' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d  (LINE:2134)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|SYNTHETIC\lRETURN\l|0x000a: CONST  (r1 I:??[long, double]) = (200(0xc8, double:9.9E\-322) ??[long, double]) \l0x000f: RETURN  (r1 I:long) A[SYNTHETIC]\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|RETURN\lORIG_RETURN\l|0x000d: CONST  (r1 I:??[long, double]) = (250(0xfa, double:1.235E\-321) ??[long, double]) \l0x000f: RETURN  (r1 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r5 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('animationType' int)]) != (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017  (LINE:2137)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: INVOKE  (r1 I:long) = \l  (r0 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator A[D('itemAnimator' androidx.recyclerview.widget.RecyclerView$ItemAnimator)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ItemAnimator.getMoveDuration():long A[MD:():long (m)]\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x001b: RETURN  (r1 I:long) A[SYNTHETIC] (LINE:2137)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: INVOKE  (r1 I:long) = \l  (r0 I:androidx.recyclerview.widget.RecyclerView$ItemAnimator A[D('itemAnimator' androidx.recyclerview.widget.RecyclerView$ItemAnimator)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.ItemAnimator.getRemoveDuration():long A[MD:():long (m)] (LINE:2138)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\lORIG_RETURN\l|0x001b: RETURN  (r1 I:long)  (LINE:2137)\l}"];
MethodNode[shape=record,label="{public long androidx.recyclerview.widget.ItemTouchHelper.Callback.getAnimationDuration((r3 'this' I:androidx.recyclerview.widget.ItemTouchHelper$Callback A[IMMUTABLE_TYPE, THIS]), (r4 I:androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('animationType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[D('animateDx' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[D('animateDy' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x000d \-\> B:7:0x000f, CROSS_EDGE: B:11:0x001b \-\> B:1:?, CROSS_EDGE: B:10:0x0017 \-\> B:11:0x001b\lDebug Info:\l  0x0004\-0x001b: r0 'itemAnimator' Landroidx\/recyclerview\/widget\/RecyclerView$ItemAnimator;\l  \-1 \-0x001b: r4 'recyclerView' Landroidx\/recyclerview\/widget\/RecyclerView;\l  \-1 \-0x001b: r5 'animationType' I\l  \-1 \-0x001b: r6 'animateDx' F\l  \-1 \-0x001b: r7 'animateDy' F\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_1;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_13 -> Node_1;
Node_10 -> Node_11;
Node_11 -> Node_1;
}

