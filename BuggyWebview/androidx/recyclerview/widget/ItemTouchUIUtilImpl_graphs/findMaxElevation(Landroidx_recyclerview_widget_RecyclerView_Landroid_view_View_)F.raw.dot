digraph "CFG forandroidx.recyclerview.widget.ItemTouchUIUtilImpl.findMaxElevation(Landroidx\/recyclerview\/widget\/RecyclerView;Landroid\/view\/View;)F" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|0x0000: INVOKE  (r0 I:int) = (r6 I:androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView)]) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getChildCount():int A[MD:():int (c)] (LINE:53)\l0x0004: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:54)\l0x0005: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:55)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0006|LOOP_START\lLOOP:0: B:19:0x0006\-\>B:26:0x0018\l|0x0006: IF  (r2 I:??[int, byte, short, char] A[D('i' int)]) \>= (r0 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:28:0x001b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0008|0x0008: INVOKE  (r3 I:android.view.View) = \l  (r6 I:androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView)])\l  (r2 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getChildAt(int):android.view.View A[MD:(int):android.view.View (c)] (LINE:56)\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|0x000c: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('child' android.view.View)]) != (r7 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('itemView' android.view.View)])  \-\> B:23:0x000f  (LINE:57)\l}"];
Node_23 [shape=record,label="{23\:\ 0x000f|0x000f: INVOKE  (r4 I:float) = (r3 I:android.view.View A[D('child' android.view.View)]) type: STATIC call: androidx.core.view.ViewCompat.getElevation(android.view.View):float A[MD:(android.view.View):float (m)] (LINE:60)\l0x0013: CMP_L  (r5 I:int) = (r4 I:float A[D('elevation' float)]), (r1 I:float A[D('max' float)])  (LINE:61)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0015|0x0015: IF  (r5 I:??[int, byte, short, char]) \<= (0 ??[int, byte, short, char])  \-\> B:30:0x0018 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0017|0x0017: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('max' float)]) = (r4 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('elevation' float)])  (LINE:62)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0018|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0018|LOOP_END\lLOOP:0: B:19:0x0006\-\>B:26:0x0018\l|0x0018: ARITH  (r2 I:int) = (r2 I:int A[D('i' int)]) + (1 int)  (LINE:55)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0018|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0018|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|RETURN\l|0x001b: RETURN  (r1 I:float A[D('max' float)])  (LINE:65)\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private static float androidx.recyclerview.widget.ItemTouchUIUtilImpl.findMaxElevation((r6 I:androidx.recyclerview.widget.RecyclerView A[D('recyclerView' androidx.recyclerview.widget.RecyclerView), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.view.View A[D('itemView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:26:0x0018 \-\> B:19:0x0006, CROSS_EDGE: B:24:0x0015 \-\> B:26:0x0018, CROSS_EDGE: B:21:0x000c \-\> B:26:0x0018\lINLINE_NOT_NEEDED\lDebug Info:\l  0x000c\-0x0018: r3 'child' Landroid\/view\/View;\l  0x0013\-0x0018: r4 'elevation' F\l  0x0006\-0x001b: r2 'i' I\l  0x0004\-0x001b: r0 'childCount' I\l  0x0005\-0x001b: r1 'max' F\l  \-1 \-0x001b: r6 'recyclerView' Landroidx\/recyclerview\/widget\/RecyclerView;\l  \-1 \-0x001b: r7 'itemView' Landroid\/view\/View;\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_29;
Node_29 -> Node_26;
Node_26 -> Node_19;
Node_30 -> Node_26;
Node_31 -> Node_26;
Node_28 -> Node_27;
Node_27 -> Node_17;
}

