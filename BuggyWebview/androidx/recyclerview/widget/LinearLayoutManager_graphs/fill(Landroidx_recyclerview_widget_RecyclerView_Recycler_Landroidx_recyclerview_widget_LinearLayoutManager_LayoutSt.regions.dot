digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.fill(Landroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/LinearLayoutManager$LayoutState;Landroidx\/recyclerview\/widget\/RecyclerView$State;Z)I" {
subgraph cluster_Region_178613871 {
label = "R(5:1|(2:(1:5)|6)|7|(1:(2:(1:41)|(2:17|(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))(1:40))))|13)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0000|int int r0 = r9.mAvailable\l}"];
subgraph cluster_IfRegion_817788628 {
label = "IF [B:46:0x0006] THEN: R(2:(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0006|if (r9.mScrollingOffset != Integer.MIN_VALUE) goto L3\l}"];
subgraph cluster_Region_1668960042 {
label = "R(2:(1:5)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_64623984 {
label = "IF [B:48:0x000a] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x000a|if (r9.mAvailable \< 0) goto L5\l}"];
subgraph cluster_Region_268100818 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x000c|r9.mScrollingOffset += r9.mAvailable\l}"];
}
}
Node_50 [shape=record,label="{50\:\ 0x0013|recycleByLayoutState(r8, r9)\l}"];
}
}
Node_51 [shape=record,label="{51\:\ 0x0016|int int r1 = r9.mAvailable + r9.mExtraFillSpace\landroidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult androidx.recyclerview.widget.LinearLayoutManager.LayoutChunkResult r3 = r7.mLayoutChunkResult\l}"];
subgraph cluster_LoopRegion_1278290735 {
label = "LOOP:0: (1:(2:(1:41)|(2:17|(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))(1:40))))";
node [shape=record,color=blue];
subgraph cluster_Region_2105753244 {
label = "R(1:(2:(1:41)|(2:17|(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))(1:40))))";
node [shape=record,color=blue];
subgraph cluster_Region_773965257 {
label = "R(2:(1:41)|(2:17|(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))(1:40)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1115696584 {
label = "IF [B:53:0x001f, B:54:0x0021, B:56:0x0027] THEN: R(1:41) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x001f|if (r9.mInfinite != true) goto L10\l}"];
Node_54 [shape=record,label="{54\:\ 0x0021|ADDED_TO_REGION\l|if (r1 \<= 0) goto L11\l}"];
Node_56 [shape=record,label="{56\:\ 0x0027|ADDED_TO_REGION\l|if (r9.hasMore(r10) != true) goto L41\l}"];
subgraph cluster_Region_1990551723 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0076|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:79:0x0076\-\>B:76:0x0076 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_127173841 {
label = "R(2:17|(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))(1:40))";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0029|r3.resetInternal()\llayoutChunk(r8, r10, r9, r3)\l}"];
subgraph cluster_IfRegion_652432474 {
label = "IF [B:58:0x0031] THEN: R(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35))) ELSE: R(1:40)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x0031|if (r3.mFinished != true) goto L19\l}"];
subgraph cluster_Region_1920652560 {
label = "R(4:19|(1:39)|(3:27|(1:29)|30)|(1:(1:35)))";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x0034|r9.mOffset += r3.mConsumed * r9.mLayoutDirection\l}"];
subgraph cluster_IfRegion_836192506 {
label = "IF [B:61:0x0041, B:63:0x0045, B:65:0x004b] THEN: R(1:39) ELSE: null";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0041|if (r3.mIgnoreConsumed == false) goto L39\l}"];
Node_63 [shape=record,label="{63\:\ 0x0045|ADDED_TO_REGION\l|if (r9.mScrapList != null) goto L39\l}"];
Node_65 [shape=record,label="{65\:\ 0x004b|ADDED_TO_REGION\l|if (r10.isPreLayout() == false) goto L39\l}"];
subgraph cluster_Region_764360798 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x004d|r9.mAvailable \-= r3.mConsumed\lr1 \-= r3.mConsumed\l}"];
}
}
subgraph cluster_IfRegion_856186115 {
label = "IF [B:68:0x0059] THEN: R(3:27|(1:29)|30) ELSE: null";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x0059|if (r9.mScrollingOffset != Integer.MIN_VALUE) goto L27\l}"];
subgraph cluster_Region_306634781 {
label = "R(3:27|(1:29)|30)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x005b|r9.mScrollingOffset += r3.mConsumed\l}"];
subgraph cluster_IfRegion_1469833760 {
label = "IF [B:70:0x0064] THEN: R(1:29) ELSE: null";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x0064|if (r9.mAvailable \< 0) goto L29\l}"];
subgraph cluster_Region_2008312471 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x0066|r9.mScrollingOffset += r9.mAvailable\l}"];
}
}
Node_72 [shape=record,label="{72\:\ 0x006d|recycleByLayoutState(r8, r9)\l}"];
}
}
subgraph cluster_Region_705279226 {
label = "R(1:(1:35))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_775632779 {
label = "IF [B:73:0x0070, B:75:0x0074] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x0070|if (r11 != false) goto L32\l}"];
Node_75 [shape=record,label="{75\:\ 0x0074|ADDED_TO_REGION\l|if (r3.mFocusable != false) goto L35\l}"];
subgraph cluster_Region_1528304893 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x0076|SYNTHETIC\lEDGE_INSN: B:82:0x0076\-\>B:76:0x0076 ?: BREAK  \l|break\l}"];
}
}
}
}
subgraph cluster_Region_1394239324 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0076|SYNTHETIC\lEDGE_INSN: B:81:0x0076\-\>B:76:0x0076 ?: BREAK  \l|break\l}"];
}
}
}
}
}
}
Node_77 [shape=record,label="{77\:\ 0x007a|RETURN\l|return r0 \- r9.mAvailable\l}"];
}
Node_43 [shape=record,color=red,label="{43\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0008}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x001d|LOOP_START\lLOOP:0: B:52:0x001d\-\>B:83:0x001d\lPHI: r1 \l  PHI: (r1v3 'remainingSpace' int) = (r1v2 'remainingSpace' int), (r1v5 'remainingSpace' int) binds: [B:51:0x0016, B:83:0x001d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x0076|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:78:0x0076\-\>B:76:0x0076 ?: BREAK  \l}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x0076|EDGE_INSN: B:78:0x0076\-\>B:76:0x0076 ?: BREAK  , EDGE_INSN: B:79:0x0076\-\>B:76:0x0076 ?: BREAK  , EDGE_INSN: B:81:0x0076\-\>B:76:0x0076 ?: BREAK  , EDGE_INSN: B:82:0x0076\-\>B:76:0x0076 ?: BREAK  \l}"];
Node_44 [shape=record,color=red,label="{44\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x0023}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x0043}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0047}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0057|PHI: r1 \l  PHI: (r1v5 'remainingSpace' int) = (r1v4 'remainingSpace' int), (r1v3 'remainingSpace' int) binds: [B:66:0x004d, B:65:0x004b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x0072|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x0072}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x001d|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x001d|LOOP_END\lSYNTHETIC\lLOOP:0: B:52:0x001d\-\>B:83:0x001d\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x001d|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{int androidx.recyclerview.widget.LinearLayoutManager.fill((r7v0 'this' androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r8v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'layoutState' androidx.recyclerview.widget.LinearLayoutManager$LayoutState A[D('layoutState' androidx.recyclerview.widget.LinearLayoutManager$LayoutState), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'stopOnFocusable' boolean A[D('stopOnFocusable' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:73:0x0070 \-\> B:52:0x001d, BACK_EDGE: B:75:0x0074 \-\> B:52:0x001d, CROSS_EDGE: B:70:0x0064 \-\> B:72:0x006d, CROSS_EDGE: B:68:0x0059 \-\> B:73:0x0070, CROSS_EDGE: B:65:0x004b \-\> B:67:0x0057, CROSS_EDGE: B:63:0x0045 \-\> B:66:0x004d, CROSS_EDGE: B:61:0x0041 \-\> B:66:0x004d, CROSS_EDGE: B:58:0x0031 \-\> B:76:0x0076, CROSS_EDGE: B:56:0x0027 \-\> B:76:0x0076, CROSS_EDGE: B:54:0x0021 \-\> B:76:0x0076, CROSS_EDGE: B:53:0x001f \-\> B:55:0x0023, CROSS_EDGE: B:48:0x000a \-\> B:50:0x0013, CROSS_EDGE: B:46:0x0006 \-\> B:51:0x0016\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_43;Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_51[style=dashed];
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_53 -> Node_54;
Node_53 -> Node_55[style=dashed];
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_78;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_79;
Node_79 -> Node_76;
Node_57 -> Node_58;
Node_58 -> Node_60;
Node_58 -> Node_81[style=dashed];
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_66;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_66;
Node_65 -> Node_66;
Node_65 -> Node_67[style=dashed];
Node_66 -> Node_67;
Node_68 -> Node_69;
Node_68 -> Node_73[style=dashed];
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_70 -> Node_72[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_73 -> Node_80;
Node_73 -> Node_84[style=dashed];
Node_75 -> Node_82;
Node_75 -> Node_85[style=dashed];
Node_82 -> Node_76;
Node_81 -> Node_76;
Node_77 -> Node_44;
Node_43 -> Node_45;
Node_47 -> Node_48;
Node_52 -> Node_53;
Node_78 -> Node_76;
Node_76 -> Node_77;
Node_55 -> Node_56;
Node_62 -> Node_63;
Node_64 -> Node_65;
Node_67 -> Node_68;
Node_80 -> Node_74;
Node_74 -> Node_75;
Node_85 -> Node_83;
Node_83 -> Node_52;
Node_84 -> Node_83;
}

