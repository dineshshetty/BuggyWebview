digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.calculateExtraLayoutSpace(Landroidx\/recyclerview\/widget\/RecyclerView$State;[I)V" {
Node_8 [shape=record,label="{8\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_10 [shape=record,label="{10\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:482)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:483)\l0x0002: INVOKE  (r2 I:int) = \l  (r5 I:androidx.recyclerview.widget.LinearLayoutManager)\l  (r6 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State)])\l type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State):int A[MD:(androidx.recyclerview.widget.RecyclerView$State):int (m)] (LINE:488)\l0x0006: IGET  (r3 I:androidx.recyclerview.widget.LinearLayoutManager$LayoutState) = (r5 I:androidx.recyclerview.widget.LinearLayoutManager) androidx.recyclerview.widget.LinearLayoutManager.mLayoutState androidx.recyclerview.widget.LinearLayoutManager$LayoutState  (LINE:489)\l0x0008: IGET  (r3 I:int) = (r3 I:androidx.recyclerview.widget.LinearLayoutManager$LayoutState) androidx.recyclerview.widget.LinearLayoutManager.LayoutState.mLayoutDirection int \l0x000a: CONST  (r4 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x000b|0x000b: IF  (r3 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x000f \l}"];
Node_12 [shape=record,label="{12\:\ 0x000d|0x000d: MOVE  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('extraLayoutSpaceStart' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('extraScrollSpace' int)])  (LINE:490)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0010|0x0010: CONST  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:495)\l0x0011: APUT  \l  (r7 I:??[int, float][] A[D('extraLayoutSpace' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r0 I:??[int, float, short, byte, char] A[D('extraLayoutSpaceStart' int)])\l \l0x0013: CONST  (r3 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:496)\l0x0014: APUT  \l  (r7 I:??[int, float][] A[D('extraLayoutSpace' int[])])\l  (r3 I:??[int, short, byte, char])\l  (r1 I:??[int, float, short, byte, char] A[D('extraLayoutSpaceEnd' int)])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|RETURN\l|0x0016: RETURN    (LINE:497)\l}"];
Node_9 [shape=record,label="{9\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ 0x000f|0x000f: MOVE  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('extraLayoutSpaceEnd' int)]) = (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('extraScrollSpace' int)])  (LINE:492)\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.LinearLayoutManager.calculateExtraLayoutSpace((r5 'this' I:androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r6 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int[] A[D('extraLayoutSpace' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:13:0x000f \-\> B:14:0x0010\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0001\-0x0016: r0 'extraLayoutSpaceStart' I\l  0x0002\-0x0016: r1 'extraLayoutSpaceEnd' I\l  0x0006\-0x0016: r2 'extraScrollSpace' I\l  \-1 \-0x0016: r6 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\l  \-1 \-0x0016: r7 'extraLayoutSpace' [I\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.LinearLayoutManager.calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State, int[]):void]\l}"];
MethodNode -> Node_8;Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_9;
Node_13 -> Node_14;
}

