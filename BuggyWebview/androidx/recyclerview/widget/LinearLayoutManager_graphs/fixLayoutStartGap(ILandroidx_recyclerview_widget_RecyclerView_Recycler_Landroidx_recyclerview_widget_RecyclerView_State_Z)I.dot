digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.fixLayoutStartGap(ILandroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;Z)I" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|int r0 = r5 \- r4.mOrientationHelper.getStartAfterPadding()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0009|if (r0 \<= 0) goto L11\l}"];
Node_17 [shape=record,label="{17\:\ 0x000b|int r1 = \-scrollBy(r0, r6, r7)\lint r5 = r5 + r1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0011|if (r8 == false) goto L10\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|int r0 = r5 \- r4.mOrientationHelper.getStartAfterPadding()\l}"];
Node_20 [shape=record,label="{20\:\ 0x001b|if (r0 \<= 0) goto L10\l}"];
Node_21 [shape=record,label="{21\:\ 0x001d|r4.mOrientationHelper.offsetChildren(\-r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|RETURN\l|return r1 \- r0\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0026|RETURN\l|return r1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|RETURN\l|return 0\l}"];
MethodNode[shape=record,label="{private int androidx.recyclerview.widget.LinearLayoutManager.fixLayoutStartGap((r4v0 'this' androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'startOffset' int A[D('startOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'canOffsetChildren' boolean A[D('canOffsetChildren' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:23:0x0026 \-\> B:14:?, CROSS_EDGE: B:18:0x0011 \-\> B:23:0x0026, CROSS_EDGE: B:25:0x0028 \-\> B:14:?\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_14;
Node_23 -> Node_14;
Node_24 -> Node_14;
}

