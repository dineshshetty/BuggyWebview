digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.setOrientation(I)V" {
Node_16 [shape=record,label="{16\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_18 [shape=record,label="{18\:\ 0x0000|if (r4 == 0) goto L7\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002}"];
Node_20 [shape=record,label="{20\:\ 0x0003|if (r4 != 1) goto L4\l}"];
Node_22 [shape=record,label="{22\:\ 0x0006|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"invalid orientation:\")\lr1.append(r4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x001c|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_17 [shape=record,label="{17\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_24 [shape=record,label="{24\:\ 0x001d|assertNotInLayoutOrScroll(null)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0023|if (r4 != r3.mOrientation) goto L12\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025}"];
Node_27 [shape=record,label="{27\:\ 0x0027|if (r3.mOrientationHelper != null) goto L11\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x002a|androidx.recyclerview.widget.OrientationHelper r0 = androidx.recyclerview.widget.OrientationHelper.createOrientationHelper(r3, r4)\lr3.mOrientationHelper = r0\lr3.mAnchorInfo.mOrientationHelper = r0\lr3.mOrientation = r4\lrequestLayout()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0039|RETURN\lORIG_RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.LinearLayoutManager.setOrientation((r3v0 'this' androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r4v0 'orientation' int A[D('orientation' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:30:0x0039 \-\> B:17:?, CROSS_EDGE: B:27:0x0027 \-\> B:30:0x0039, CROSS_EDGE: B:25:0x0023 \-\> B:29:0x002a, CROSS_EDGE: B:18:0x0000 \-\> B:24:0x001d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_16;Node_16 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_24;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_17;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_29[style=dashed];
Node_27 -> Node_31;
Node_31 -> Node_17;
Node_29 -> Node_30;
Node_30 -> Node_17;
}

