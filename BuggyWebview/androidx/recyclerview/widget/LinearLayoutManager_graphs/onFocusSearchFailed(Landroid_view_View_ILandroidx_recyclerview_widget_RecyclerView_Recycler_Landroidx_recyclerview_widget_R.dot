digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.onFocusSearchFailed(Landroid\/view\/View;ILandroidx\/recyclerview\/widget\/RecyclerView$Recycler;Landroidx\/recyclerview\/widget\/RecyclerView$State;)Landroid\/view\/View;" {
Node_21 [shape=record,label="{21\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_23 [shape=record,label="{23\:\ 0x0000|resolveShouldLayoutReverse()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0008|if (getChildCount() != 0) goto L5\l}"];
Node_25 [shape=record,label="{25\:\ 0x000a|RETURN\l|return null\l}"];
Node_22 [shape=record,label="{22\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_26 [shape=record,label="{26\:\ 0x000b|int r0 = convertFocusDirectionToLayoutDirection(r8)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0011|if (r0 != Integer.MIN_VALUE) goto L8\l}"];
Node_28 [shape=record,label="{28\:\ 0x0013|RETURN\l|return null\l}"];
Node_29 [shape=record,label="{29\:\ 0x0014|ensureLayoutState()\lint r3 = (int) (((float) r6.mOrientationHelper.getTotalSpace()) * androidx.recyclerview.widget.LinearLayoutManager.MAX_SCROLL_FACTOR)\lupdateLayoutState(r0, r3, false, r10)\lr6.mLayoutState.mScrollingOffset = Integer.MIN_VALUE\lr6.mLayoutState.mRecycle = false\lfill(r9, r6.mLayoutState, r10, true)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0037|if (r0 != (\-1)) goto L20\l}"];
Node_31 [shape=record,label="{31\:\ 0x0039|android.view.View r4 = findPartiallyOrCompletelyInvisibleChildClosestToStart()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0042|PHI: r4 \l  PHI: (r4v7 'nextCandidate' android.view.View) = (r4v6 'nextCandidate' android.view.View), (r4v8 'nextCandidate' android.view.View) binds: [B:32:0x003e, B:31:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != (\-1)) goto L19\l}"];
Node_34 [shape=record,label="{34\:\ 0x0044|android.view.View r2 = getChildClosestToStart()\l}"];
Node_36 [shape=record,label="{36\:\ 0x004d|PHI: r2 \l  PHI: (r2v5 'nextFocus' android.view.View) = (r2v4 'nextFocus' android.view.View), (r2v6 'nextFocus' android.view.View) binds: [B:35:0x0049, B:34:0x0044] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x0051|if (r2.hasFocusable() == false) goto L18\l}"];
Node_38 [shape=record,label="{38\:\ 0x0053|if (r4 != null) goto L17\l}"];
Node_39 [shape=record,label="{39\:\ 0x0055|RETURN\l|return null\l}"];
Node_40 [shape=record,label="{40\:\ 0x0056|RETURN\l|return r2\l}"];
Node_41 [shape=record,label="{41\:\ 0x0057|RETURN\l|return r4\l}"];
Node_35 [shape=record,label="{35\:\ 0x0049|android.view.View r2 = getChildClosestToEnd()\l}"];
Node_32 [shape=record,label="{32\:\ 0x003e|android.view.View r4 = findPartiallyOrCompletelyInvisibleChildClosestToEnd()\l}"];
MethodNode[shape=record,label="{public android.view.View androidx.recyclerview.widget.LinearLayoutManager.onFocusSearchFailed((r6v0 'this' androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]), (r7v0 'focused' android.view.View A[D('focused' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'focusDirection' int A[D('focusDirection' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'recycler' androidx.recyclerview.widget.RecyclerView$Recycler A[D('recycler' androidx.recyclerview.widget.RecyclerView$Recycler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'state' androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:28:0x0013 \-\> B:22:?, CROSS_EDGE: B:39:0x0055 \-\> B:22:?, CROSS_EDGE: B:40:0x0056 \-\> B:22:?, CROSS_EDGE: B:41:0x0057 \-\> B:22:?, CROSS_EDGE: B:35:0x0049 \-\> B:36:0x004d, CROSS_EDGE: B:32:0x003e \-\> B:33:0x0042\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.LayoutManager.onFocusSearchFailed(android.view.View, int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State):android.view.View]\l}"];
MethodNode -> Node_21;Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_22;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_41;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_22;
Node_40 -> Node_22;
Node_41 -> Node_22;
Node_35 -> Node_36;
Node_32 -> Node_33;
}

