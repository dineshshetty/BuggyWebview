digraph "CFG forandroidx.recyclerview.widget.LinearLayoutManager.ensureLayoutState()V" {
Node_7 [shape=record,label="{7\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_9 [shape=record,label="{9\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.LinearLayoutManager$LayoutState) = (r1 I:androidx.recyclerview.widget.LinearLayoutManager) androidx.recyclerview.widget.LinearLayoutManager.mLayoutState androidx.recyclerview.widget.LinearLayoutManager$LayoutState  (LINE:1040)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:? \l}"];
Node_11 [shape=record,label="{11\:\ 0x0004|0x0004: INVOKE  (r0 I:androidx.recyclerview.widget.LinearLayoutManager$LayoutState) = (r1 I:androidx.recyclerview.widget.LinearLayoutManager) type: VIRTUAL call: androidx.recyclerview.widget.LinearLayoutManager.createLayoutState():androidx.recyclerview.widget.LinearLayoutManager$LayoutState A[MD:():androidx.recyclerview.widget.LinearLayoutManager$LayoutState (m)] (LINE:1041)\l0x0008: IPUT  \l  (r0 I:androidx.recyclerview.widget.LinearLayoutManager$LayoutState)\l  (r1 I:androidx.recyclerview.widget.LinearLayoutManager)\l androidx.recyclerview.widget.LinearLayoutManager.mLayoutState androidx.recyclerview.widget.LinearLayoutManager$LayoutState \l}"];
Node_12 [shape=record,label="{12\:\ 0x000a|RETURN\lORIG_RETURN\l|0x000a: RETURN    (LINE:1043)\l}"];
Node_8 [shape=record,label="{8\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|0x000a: RETURN   A[SYNTHETIC] (LINE:1043)\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.LinearLayoutManager.ensureLayoutState((r1 'this' I:androidx.recyclerview.widget.LinearLayoutManager A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:10:0x0002 \-\> B:12:0x000a\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_7;Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

