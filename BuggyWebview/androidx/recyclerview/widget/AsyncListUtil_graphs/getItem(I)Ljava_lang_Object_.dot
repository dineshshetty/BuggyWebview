digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.getItem(I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|if (r4 \< 0) goto L11\l}"];
Node_3 [shape=record,label="{3\:\ 0x0002}"];
Node_4 [shape=record,label="{4\:\ 0x0004|if (r4 \>= r3.mItemCount) goto L11\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|java.lang.Object r0 = r3.mTileList.getItemAt(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (r0 != null) goto L9\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e}"];
Node_8 [shape=record,label="{8\:\ 0x0012|if (isRefreshPending() != false) goto L9\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|r3.mMissingPositions.put(r4, 0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|RETURN\l|return r0\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r4)\lr1.append(\" is not within 0 and \")\lr1.append(r3.mItemCount)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|throw new java.lang.IndexOutOfBoundsException(r1.toString())\l}"];
MethodNode[shape=record,label="{public T androidx.recyclerview.widget.AsyncListUtil.getItem((r3v0 'this' androidx.recyclerview.widget.AsyncListUtil\<T\> A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>), IMMUTABLE_TYPE, THIS]), (r4v0 'position' int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:8:0x0012 \-\> B:10:0x001a, CROSS_EDGE: B:6:0x000c \-\> B:10:0x001a, CROSS_EDGE: B:12:0x0036 \-\> B:1:?, CROSS_EDGE: B:2:0x0000 \-\> B:11:0x001b\lTYPE_VARS: [T]\lSIGNATURE: (I)TT;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_1;
}

