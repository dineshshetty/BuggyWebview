digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.onRangeChanged()V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:boolean) = (r1 I:androidx.recyclerview.widget.AsyncListUtil A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>)]) type: DIRECT call: androidx.recyclerview.widget.AsyncListUtil.isRefreshPending():boolean A[MD:():boolean (m)] (LINE:119)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:120)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r1 I:androidx.recyclerview.widget.AsyncListUtil A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>)]) type: VIRTUAL call: androidx.recyclerview.widget.AsyncListUtil.updateRange():void A[MD:():void (m)] (LINE:122)\l0x000a: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:123)\l0x000b: IPUT  \l  (r0 I:boolean)\l  (r1 I:androidx.recyclerview.widget.AsyncListUtil A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>)])\l androidx.recyclerview.widget.AsyncListUtil.mAllowScrollHints boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|RETURN\l|0x000d: RETURN    (LINE:124)\l}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.AsyncListUtil.onRangeChanged((r1 'this' I:androidx.recyclerview.widget.AsyncListUtil\<T\> A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:6:0x000d \-\> B:1:?\lDebug Info:\l  0x0000\-0x000d: r1 'this' Landroidx\/recyclerview\/widget\/AsyncListUtil;, signature: Landroidx\/recyclerview\/widget\/AsyncListUtil\<TT;\>;\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

