digraph "CFG forandroidx.recyclerview.widget.AsyncListUtil.updateRange()V" {
subgraph cluster_Region_135943106 {
label = "R(2:1|(2:(1:7)|(2:(1:11)(2:14|(1:24)(1:(1:20)(1:(1:23))))|12)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0000|r10.mViewCallback.getItemRangeInto(r10.mTmpRange)\lint[] int[] r0 = r10.mTmpRange\l}"];
subgraph cluster_Region_483565661 {
label = "R(2:(1:7)|(2:(1:11)(2:14|(1:24)(1:(1:20)(1:(1:23))))|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1148628006 {
label = "IF [B:3:0x000f, B:5:0x0013, B:8:0x001b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r0[0] \> r0[1]) goto L26\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|ADDED_TO_REGION\l|if (r0[0] \< 0) goto L25\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ADDED_TO_REGION\l|if (r0[1] \>= r10.mItemCount) goto L7\l}"];
subgraph cluster_Region_1095542275 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1818623051 {
label = "R(2:(1:11)(2:14|(1:24)(1:(1:20)(1:(1:23))))|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_745022827 {
label = "IF [B:11:0x0020] THEN: R(1:11) ELSE: R(2:14|(1:24)(1:(1:20)(1:(1:23))))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0020|if (r10.mAllowScrollHints == false) goto L11\l}"];
subgraph cluster_Region_1299710286 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0022|r10.mScrollHint = 0\l}"];
}
subgraph cluster_Region_445214560 {
label = "R(2:14|(1:24)(1:(1:20)(1:(1:23))))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0025|int r2 = r0[0]\lint[] int[] r4 = r10.mPrevRange\l}"];
subgraph cluster_IfRegion_385757596 {
label = "IF [B:14:0x002b, B:16:0x0031] THEN: R(1:24) ELSE: R(1:(1:20)(1:(1:23)))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|if (r2 \> r4[1]) goto L24\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|ADDED_TO_REGION\l|if (r4[0] \> r0[1]) goto L24\l}"];
subgraph cluster_Region_1143050484 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0047|r10.mScrollHint = 0\l}"];
}
subgraph cluster_Region_1626950349 {
label = "R(1:(1:20)(1:(1:23))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1277228226 {
label = "IF [B:19:0x0038] THEN: R(1:20) ELSE: R(1:(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0038|if (r0[0] \< r4[0]) goto L20\l}"];
subgraph cluster_Region_223836356 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x003a|r10.mScrollHint = 1\l}"];
}
subgraph cluster_Region_11037265 {
label = "R(1:(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1036416764 {
label = "IF [B:22:0x0041] THEN: R(1:23) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0041|if (r0[0] \> r4[0]) goto L23\l}"];
subgraph cluster_Region_1221000320 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0043|r10.mScrollHint = 2\l}"];
}
}
}
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0049|int[] int[] r2 = r10.mPrevRange\lr2[0] = r0[0]\lr2[1] = r0[1]\lr10.mViewCallback.extendRangeInto(r0, r10.mTmpRangeExtended, r10.mScrollHint)\lint[] int[] r0 = r10.mTmpRangeExtended\lr0[0] = java.lang.Math.min(r10.mTmpRange[0], java.lang.Math.max(r0[0], 0))\lint[] int[] r0 = r10.mTmpRangeExtended\lr0[1] = java.lang.Math.max(r10.mTmpRange[1], java.lang.Math.min(r0[1], r10.mItemCount \- 1))\landroidx.recyclerview.widget.ThreadUtil$BackgroundCallback\<T\> androidx.recyclerview.widget.ThreadUtil.BackgroundCallback\<T\> r4 = r10.mBackgroundProxy\lint[] int[] r0 = r10.mTmpRange\lint r5 = r0[0]\lint r6 = r0[1]\lint[] int[] r0 = r10.mTmpRangeExtended\lr4.updateRange(r5, r6, r0[0], r0[1], r10.mScrollHint)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001e}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0096}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0034}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x003d}"];
Node_28 [shape=record,color=red,label="{28\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0097|RETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.AsyncListUtil.updateRange((r10v0 'this' androidx.recyclerview.widget.AsyncListUtil\<T\> A[D('this' androidx.recyclerview.widget.AsyncListUtil\<T\>), IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:26:0x0096 \-\> B:1:?, CROSS_EDGE: B:20:0x003a \-\> B:25:0x0049, CROSS_EDGE: B:23:0x0043 \-\> B:25:0x0049, CROSS_EDGE: B:22:0x0041 \-\> B:25:0x0049, CROSS_EDGE: B:24:0x0047 \-\> B:25:0x0049, CROSS_EDGE: B:14:0x002b \-\> B:24:0x0047, CROSS_EDGE: B:27:0x0097 \-\> B:1:?, CROSS_EDGE: B:3:0x000f \-\> B:27:0x0097\lINLINE_NOT_NEEDED\lTYPE_VARS: [T]\l}"];
MethodNode -> Node_0;Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_27;
Node_5 -> Node_7[style=dashed];
Node_5 -> Node_28;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_1;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_16 -> Node_18[style=dashed];
Node_16 -> Node_24;
Node_24 -> Node_25;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_0 -> Node_2;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_26 -> Node_1;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_28 -> Node_1;
Node_27 -> Node_1;
}

