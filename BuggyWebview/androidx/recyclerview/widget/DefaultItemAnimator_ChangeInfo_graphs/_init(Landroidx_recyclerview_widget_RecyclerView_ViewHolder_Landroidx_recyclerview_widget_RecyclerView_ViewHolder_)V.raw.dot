digraph "CFG forandroidx.recyclerview.widget.DefaultItemAnimator.ChangeInfo.\<init\>(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;)V" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: INVOKE  (r0 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:73)\l0x0003: IPUT  \l  (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('oldHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l  (r0 I:androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)\l androidx.recyclerview.widget.DefaultItemAnimator.ChangeInfo.oldHolder androidx.recyclerview.widget.RecyclerView$ViewHolder  (LINE:74)\l0x0005: IPUT  \l  (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('newHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder)])\l  (r0 I:androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo)\l androidx.recyclerview.widget.DefaultItemAnimator.ChangeInfo.newHolder androidx.recyclerview.widget.RecyclerView$ViewHolder  (LINE:75)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|RETURN\l|0x0007: RETURN    (LINE:76)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{private void androidx.recyclerview.widget.DefaultItemAnimator.ChangeInfo.\<init\>((r0 'this' I:androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo A[IMMUTABLE_TYPE, THIS]), (r1 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('oldHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('newHolder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0007: r1 'oldHolder' Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;\l  \-1 \-0x0007: r2 'newHolder' Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

