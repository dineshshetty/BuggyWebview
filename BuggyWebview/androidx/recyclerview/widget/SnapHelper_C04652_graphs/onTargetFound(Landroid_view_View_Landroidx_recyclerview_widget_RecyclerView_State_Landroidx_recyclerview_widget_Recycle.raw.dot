digraph "CFG forandroidx.recyclerview.widget.SnapHelper.2.onTargetFound(Landroid\/view\/View;Landroidx\/recyclerview\/widget\/RecyclerView$State;Landroidx\/recyclerview\/widget\/RecyclerView$SmoothScroller$Action;)V" {
Node_10 [shape=record,label="{10\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_12 [shape=record,label="{12\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.SnapHelper) = (r5 I:androidx.recyclerview.widget.SnapHelper$2) androidx.recyclerview.widget.SnapHelper.2.this$0 androidx.recyclerview.widget.SnapHelper  (LINE:230)\l0x0002: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView) = (r0 I:androidx.recyclerview.widget.SnapHelper) androidx.recyclerview.widget.SnapHelper.mRecyclerView androidx.recyclerview.widget.RecyclerView \l}"];
Node_13 [shape=record,label="{13\:\ 0x0004|0x0004: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0007 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0006|RETURN\l|0x0006: RETURN    (LINE:232)\l}"];
Node_11 [shape=record,label="{11\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0007|0x0007: IGET  (r0 I:androidx.recyclerview.widget.SnapHelper) = (r5 I:androidx.recyclerview.widget.SnapHelper$2) androidx.recyclerview.widget.SnapHelper.2.this$0 androidx.recyclerview.widget.SnapHelper  (LINE:234)\l0x0009: IGET  (r1 I:androidx.recyclerview.widget.RecyclerView) = (r0 I:androidx.recyclerview.widget.SnapHelper) androidx.recyclerview.widget.SnapHelper.mRecyclerView androidx.recyclerview.widget.RecyclerView \l0x000b: INVOKE  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager) = (r1 I:androidx.recyclerview.widget.RecyclerView) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getLayoutManager():androidx.recyclerview.widget.RecyclerView$LayoutManager A[MD:():androidx.recyclerview.widget.RecyclerView$LayoutManager (m)]\l0x000f: INVOKE  (r0 I:int[]) = \l  (r0 I:androidx.recyclerview.widget.SnapHelper)\l  (r1 I:androidx.recyclerview.widget.RecyclerView$LayoutManager)\l  (r6 I:android.view.View A[D('targetView' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.SnapHelper.calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager, android.view.View):int[] A[MD:(androidx.recyclerview.widget.RecyclerView$LayoutManager, android.view.View):int[] (m)]\l0x0013: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:236)\l0x0014: AGET  (r1 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('snapDistances' int[])]), (r1 I:??[int, short, byte, char]) \l0x0016: CONST  (r2 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:237)\l0x0017: AGET  (r2 I:??[int, float, short, byte, char]) = (r0 I:??[int, float][] A[D('snapDistances' int[])]), (r2 I:??[int, short, byte, char]) \l0x0019: INVOKE  (r3 I:int) = (r1 I:int A[D('dx' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)] (LINE:238)\l0x001d: INVOKE  (r4 I:int) = (r2 I:int A[D('dy' int)]) type: STATIC call: java.lang.Math.abs(int):int A[MD:(int):int (c)]\l0x0021: INVOKE  (r3 I:int) = (r3 I:int), (r4 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)]\l0x0025: INVOKE  (r3 I:int) = (r5 I:androidx.recyclerview.widget.SnapHelper$2), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.SnapHelper.2.calculateTimeForDeceleration(int):int A[MD:(int):int (m)]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|0x0029: IF  (r3 I:??[int, byte, short, char] A[D('time' int)]) \<= (0 ??[int, byte, short, char])  \-\> B:19:?  (LINE:239)\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: IGET  (r4 I:android.view.animation.DecelerateInterpolator) = (r5 I:androidx.recyclerview.widget.SnapHelper$2) androidx.recyclerview.widget.SnapHelper.2.mDecelerateInterpolator android.view.animation.DecelerateInterpolator  (LINE:240)\l0x002d: INVOKE  \l  (r8 I:androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action A[D('action' androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action)])\l  (r1 I:int A[D('dx' int)])\l  (r2 I:int A[D('dy' int)])\l  (r3 I:int A[D('time' int)])\l  (r4 I:android.view.animation.Interpolator)\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.SmoothScroller.Action.update(int, int, int, android.view.animation.Interpolator):void A[MD:(int, int, int, android.view.animation.Interpolator):void (m)]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|RETURN\lORIG_RETURN\l|0x0030: RETURN    (LINE:242)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|0x0030: RETURN   A[SYNTHETIC] (LINE:242)\l}"];
MethodNode[shape=record,label="{protected void androidx.recyclerview.widget.SnapHelper.2.onTargetFound((r5 'this' I:androidx.recyclerview.widget.SnapHelper$2 A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.View A[D('targetView' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:androidx.recyclerview.widget.RecyclerView$State A[D('state' androidx.recyclerview.widget.RecyclerView$State), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action A[D('action' androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:18:0x0030 \-\> B:11:?, CROSS_EDGE: B:16:0x0029 \-\> B:18:0x0030\lINLINE_NOT_NEEDED\lDebug Info:\l  0x0013\-0x0030: r0 'snapDistances' [I\l  0x0016\-0x0030: r1 'dx' I\l  0x0019\-0x0030: r2 'dy' I\l  0x0029\-0x0030: r3 'time' I\l  \-1 \-0x0030: r6 'targetView' Landroid\/view\/View;\l  \-1 \-0x0030: r7 'state' Landroidx\/recyclerview\/widget\/RecyclerView$State;\l  \-1 \-0x0030: r8 'action' Landroidx\/recyclerview\/widget\/RecyclerView$SmoothScroller$Action;\lMETHOD_OVERRIDE: [androidx.recyclerview.widget.RecyclerView.SmoothScroller.onTargetFound(android.view.View, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action):void]\l}"];
MethodNode -> Node_10;Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_11;
Node_19 -> Node_11;
}

