digraph "CFG forandroidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.1.createFromParcel(Landroid\/os\/Parcel;)Landroidx\/recyclerview\/widget\/StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem;" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: NEW_INSTANCE  (r0 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) =  androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem  (LINE:3133)\l0x0002: INVOKE  \l  (r0 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)\l  (r2 I:android.os.Parcel A[D('in' android.os.Parcel)])\l type: DIRECT call: androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.\<init\>(android.os.Parcel):void A[MD:(android.os.Parcel):void (m)]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|0x0005: RETURN  (r0 I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) \l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{public androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.1.createFromParcel((r1 'this' I:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Parcel A[D('in' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | DONT_RENAME\lUSE_LINES_HINTS\lDebug Info:\l  \-1 \-0x0005: r2 'in' Landroid\/os\/Parcel;\lBRIDGED_BY: androidx.recyclerview.widget.StaggeredGridLayoutManager.LazySpanLookup.FullSpanItem.1.createFromParcel(android.os.Parcel):androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem\lJadxCommentsAttr\{\l WARN: \l \-\> Can't rename method to resolve collision\}\lMETHOD_OVERRIDE: [ClspMth\{android.os.Parcelable.Creator.createFromParcel(android.os.Parcel):T\}]\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_1;
}

