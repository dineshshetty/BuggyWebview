digraph "CFG forandroidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.boundsMatch()Z" {
Node_25 [shape=record,label="{25\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_27 [shape=record,label="{27\:\ 0x0000|0x0000: IGET  (r0 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mBoundFlags int  (LINE:166)\l0x0002: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (7 ??[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0005|0x0005: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0014 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0007|0x0007: IGET  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mChildStart int  (LINE:167)\l0x0009: IGET  (r3 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mRvStart int \l0x000b: INVOKE  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r1 I:int), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.compare(int, int):int A[MD:(int, int):int (m)]\l0x000f: ARITH  (r1 I:int) = (r1 I:int) \<\< (r2 I:int) \l0x0010: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0014 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0013|RETURN\l|0x0013: RETURN  (r2 I:boolean)  (LINE:168)\l}"];
Node_26 [shape=record,label="{26\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_32 [shape=record,label="{32\:\ 0x0014|0x0014: IGET  (r0 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mBoundFlags int  (LINE:172)\l0x0016: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (112(0x70, float:1.57E\-43) ??[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0018|0x0018: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028 \l}"];
Node_34 [shape=record,label="{34\:\ 0x001a|0x001a: IGET  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mChildStart int  (LINE:173)\l0x001c: IGET  (r3 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mRvEnd int \l0x001e: INVOKE  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r1 I:int), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.compare(int, int):int A[MD:(int, int):int (m)]\l0x0022: ARITH  (r1 I:int) = (r1 I:int) \<\< (4 int) \l0x0024: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0025|0x0025: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0028 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0027|RETURN\l|0x0027: RETURN  (r2 I:boolean)  (LINE:174)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0028|0x0028: IGET  (r0 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mBoundFlags int  (LINE:178)\l0x002a: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (1792(0x700, float:2.511E\-42) ??[int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x003c \l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|0x002e: IGET  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mChildEnd int  (LINE:179)\l0x0030: IGET  (r3 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mRvStart int \l0x0032: INVOKE  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r1 I:int), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.compare(int, int):int A[MD:(int, int):int (m)]\l0x0036: ARITH  (r1 I:int) = (r1 I:int) \<\< (8 int) \l0x0038: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0039|0x0039: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x003c \l}"];
Node_41 [shape=record,label="{41\:\ 0x003b|RETURN\l|0x003b: RETURN  (r2 I:boolean)  (LINE:180)\l}"];
Node_42 [shape=record,label="{42\:\ 0x003c|0x003c: IGET  (r0 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mBoundFlags int  (LINE:184)\l0x003e: ARITH  (r1 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (28672(0x7000, float:4.0178E\-41) ??[int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0040|0x0040: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0050 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0042|0x0042: IGET  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mChildEnd int  (LINE:185)\l0x0044: IGET  (r3 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags) androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.mRvEnd int \l0x0046: INVOKE  (r1 I:int) = (r4 I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags), (r1 I:int), (r3 I:int) type: VIRTUAL call: androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.compare(int, int):int A[MD:(int, int):int (m)]\l0x004a: ARITH  (r1 I:int) = (r1 I:int) \<\< (12 int) \l0x004c: ARITH  (r0 I:??[int, boolean]) = (r0 I:??[int, boolean, short, byte, char]) & (r1 I:??[int, boolean, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x004d|0x004d: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:? \l}"];
Node_46 [shape=record,label="{46\:\ 0x004f|RETURN\l|0x004f: RETURN  (r2 I:boolean)  (LINE:186)\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|0x0050: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char]) A[SYNTHETIC] (LINE:189)\l0x0051: RETURN  (r0 I:boolean) A[SYNTHETIC]\l}"];
Node_47 [shape=record,label="{47\:\ 0x0050|RETURN\lORIG_RETURN\l|0x0050: CONST  (r0 I:??[boolean, int, float, short, byte, char]) = (1 ??[boolean, int, float, short, byte, char])  (LINE:189)\l0x0051: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean androidx.recyclerview.widget.ViewBoundsCheck.BoundFlags.boundsMatch((r4 'this' I:androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lCROSS_EDGE: B:36:0x0027 \-\> B:26:?, CROSS_EDGE: B:41:0x003b \-\> B:26:?, CROSS_EDGE: B:46:0x004f \-\> B:26:?, CROSS_EDGE: B:48:0x0051 \-\> B:26:?, CROSS_EDGE: B:43:0x0040 \-\> B:47:0x0050, CROSS_EDGE: B:38:0x002c \-\> B:42:0x003c, CROSS_EDGE: B:33:0x0018 \-\> B:37:0x0028, CROSS_EDGE: B:28:0x0005 \-\> B:32:0x0014\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_25;Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_26;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_26;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_26;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_49;
Node_46 -> Node_26;
Node_49 -> Node_26;
Node_47 -> Node_26;
}

