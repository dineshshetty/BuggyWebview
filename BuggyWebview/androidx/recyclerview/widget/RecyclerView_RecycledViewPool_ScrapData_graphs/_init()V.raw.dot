digraph "CFG forandroidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.\<init\>()V" {
Node_4 [shape=record,label="{4\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,label="{6\:\ 0x0000|0x0000: INVOKE  (r2 I:java.lang.Object) type: DIRECT call: java.lang.Object.\<init\>():void A[MD:():void (c)] (LINE:5652)\l0x0003: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList  (LINE:5653)\l0x0005: INVOKE  (r0 I:java.util.ArrayList) type: DIRECT call: java.util.ArrayList.\<init\>():void A[MD:():void (c)]\l0x0008: IPUT  \l  (r0 I:java.util.ArrayList\<androidx.recyclerview.widget.RecyclerView$ViewHolder\>)\l  (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData)\l androidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.mScrapHeap java.util.ArrayList \l0x000a: CONST  (r0 I:??[int, float, short, byte, char]) = (5 ??[int, float, short, byte, char])  (LINE:5654)\l0x000b: IPUT  (r0 I:int), (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) androidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.mMaxScrap int \l0x000d: CONST  (r0 I:??[long, double]) = (0 ??[long, double])  (LINE:5655)\l0x000f: IPUT  (r0 I:long), (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) androidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.mCreateRunningAverageNs long \l0x0011: IPUT  (r0 I:long), (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData) androidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.mBindRunningAverageNs long  (LINE:5656)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|0x0013: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.RecycledViewPool.ScrapData.\<init\>((r2 'this' I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData A[IMMUTABLE_TYPE, THIS]))  | USE_LINES_HINTS\lINLINE_NOT_NEEDED\l}"];
MethodNode -> Node_4;Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_5;
}

