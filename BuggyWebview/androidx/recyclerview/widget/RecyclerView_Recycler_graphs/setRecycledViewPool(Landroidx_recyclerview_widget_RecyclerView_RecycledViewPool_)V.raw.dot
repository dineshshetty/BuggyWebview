digraph "CFG forandroidx.recyclerview.widget.RecyclerView.Recycler.setRecycledViewPool(Landroidx\/recyclerview\/widget\/RecyclerView$RecycledViewPool;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000|0x0000: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool) = (r1 I:androidx.recyclerview.widget.RecyclerView$Recycler) androidx.recyclerview.widget.RecyclerView.Recycler.mRecyclerPool androidx.recyclerview.widget.RecyclerView$RecycledViewPool  (LINE:6859)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0002|0x0002: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0007 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0004|0x0004: INVOKE  (r0 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.RecycledViewPool.detach():void A[MD:():void (m)] (LINE:6860)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|0x0007: IPUT  \l  (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool A[D('pool' androidx.recyclerview.widget.RecyclerView$RecycledViewPool)])\l  (r1 I:androidx.recyclerview.widget.RecyclerView$Recycler)\l androidx.recyclerview.widget.RecyclerView.Recycler.mRecyclerPool androidx.recyclerview.widget.RecyclerView$RecycledViewPool  (LINE:6862)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|0x0009: IF  (r2 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pool' androidx.recyclerview.widget.RecyclerView$RecycledViewPool)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:?  (LINE:6863)\l}"];
Node_20 [shape=record,label="{20\:\ 0x000b|0x000b: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView) = (r1 I:androidx.recyclerview.widget.RecyclerView$Recycler) androidx.recyclerview.widget.RecyclerView.Recycler.this$0 androidx.recyclerview.widget.RecyclerView \l0x000d: INVOKE  (r0 I:androidx.recyclerview.widget.RecyclerView$Adapter) = (r0 I:androidx.recyclerview.widget.RecyclerView) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.getAdapter():androidx.recyclerview.widget.RecyclerView$Adapter A[MD:():androidx.recyclerview.widget.RecyclerView$Adapter (m)]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0011|0x0011: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:? \l}"];
Node_22 [shape=record,label="{22\:\ 0x0013|0x0013: IGET  (r0 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool) = (r1 I:androidx.recyclerview.widget.RecyclerView$Recycler) androidx.recyclerview.widget.RecyclerView.Recycler.mRecyclerPool androidx.recyclerview.widget.RecyclerView$RecycledViewPool  (LINE:6864)\l0x0015: INVOKE  (r0 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool) type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.RecycledViewPool.attach():void A[MD:():void (m)]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0018|RETURN\lORIG_RETURN\l|0x0018: RETURN    (LINE:6866)\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:6866)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|0x0018: RETURN   A[SYNTHETIC] (LINE:6866)\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.Recycler.setRecycledViewPool((r1 'this' I:androidx.recyclerview.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r2 I:androidx.recyclerview.widget.RecyclerView$RecycledViewPool A[D('pool' androidx.recyclerview.widget.RecyclerView$RecycledViewPool), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:21:0x0011 \-\> B:23:0x0018, CROSS_EDGE: B:19:0x0009 \-\> B:23:0x0018, CROSS_EDGE: B:16:0x0002 \-\> B:18:0x0007\lINLINE_NOT_NEEDED\lDebug Info:\l  \-1 \-0x0018: r2 'pool' Landroidx\/recyclerview\/widget\/RecyclerView$RecycledViewPool;\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_14;
Node_25 -> Node_14;
Node_24 -> Node_14;
}

