digraph "CFG forandroidx.recyclerview.widget.RecyclerView.Recycler.offsetPositionRecordsForInsert(II)V" {
Node_15 [shape=record,label="{15\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_17 [shape=record,label="{17\:\ 0x0000|int r0 = r4.mCachedViews.size()\lr1 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0007|LOOP_START\lLOOP:0: B:18:0x0007\-\>B:24:0x001b\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:17:0x0000, B:24:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 \>= r0) goto L12\l}"];
Node_19 [shape=record,label="{19\:\ 0x0009|androidx.recyclerview.widget.RecyclerView$ViewHolder r2 = r4.mCachedViews.get(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0011|if (r2 == null) goto L11\l}"];
Node_21 [shape=record,label="{21\:\ 0x0013}"];
Node_22 [shape=record,label="{22\:\ 0x0015|if (r2.mPosition \< r5) goto L10\l}"];
Node_23 [shape=record,label="{23\:\ 0x0017|r2.offsetPosition(r6, true)\l}"];
Node_27 [shape=record,label="{27\:\ 0x001b|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001b|LOOP_END\lLOOP:0: B:18:0x0007\-\>B:24:0x001b\l|int r1 = r1 + 1\l}"];
Node_29 [shape=record,label="{29\:\ 0x001b|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x001b|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x001e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x001e|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|MTH_EXIT_BLOCK\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.Recycler.offsetPositionRecordsForInsert((r4v0 'this' androidx.recyclerview.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r5v0 'insertedAt' int A[D('insertedAt' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'count' int A[D('count' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:24:0x001b \-\> B:18:0x0007, CROSS_EDGE: B:22:0x0015 \-\> B:24:0x001b, CROSS_EDGE: B:20:0x0011 \-\> B:24:0x001b\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_15;Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_27;
Node_27 -> Node_24;
Node_24 -> Node_18;
Node_29 -> Node_24;
Node_28 -> Node_24;
Node_26 -> Node_25;
Node_25 -> Node_16;
}

