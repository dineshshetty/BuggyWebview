digraph "CFG forandroidx.recyclerview.widget.RecyclerView.Recycler.dispatchViewRecycled(Landroidx\/recyclerview\/widget\/RecyclerView$ViewHolder;)V" {
Node_13 [shape=record,label="{13\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_15 [shape=record,label="{15\:\ 0x0000}"];
Node_16 [shape=record,label="{16\:\ 0x0004|if (androidx.recyclerview.widget.RecyclerView.this.mRecyclerListener == null) goto L4\l}"];
Node_17 [shape=record,label="{17\:\ 0x0006|androidx.recyclerview.widget.RecyclerView.this.mRecyclerListener.onViewRecycled(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x000d}"];
Node_19 [shape=record,label="{19\:\ 0x0011|if (androidx.recyclerview.widget.RecyclerView.this.mAdapter == null) goto L7\l}"];
Node_20 [shape=record,label="{20\:\ 0x0013|androidx.recyclerview.widget.RecyclerView.this.mAdapter.onViewRecycled(r2)\l}"];
Node_21 [shape=record,label="{21\:\ 0x001a}"];
Node_22 [shape=record,label="{22\:\ 0x001e|if (androidx.recyclerview.widget.RecyclerView.this.mState == null) goto L12\l}"];
Node_23 [shape=record,label="{23\:\ 0x0020|androidx.recyclerview.widget.RecyclerView.this.mViewInfoStore.removeViewHolder(r2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0027|RETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void androidx.recyclerview.widget.RecyclerView.Recycler.dispatchViewRecycled((r1v0 'this' androidx.recyclerview.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r2v0 'holder' androidx.recyclerview.widget.RecyclerView$ViewHolder A[D('holder' androidx.recyclerview.widget.RecyclerView$ViewHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:22:0x001e \-\> B:24:0x0027, CROSS_EDGE: B:19:0x0011 \-\> B:21:0x001a, CROSS_EDGE: B:16:0x0004 \-\> B:18:0x000d\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_13;Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_14;
}

