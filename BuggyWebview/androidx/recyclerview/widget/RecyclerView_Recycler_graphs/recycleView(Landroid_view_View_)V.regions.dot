digraph "CFG forandroidx.recyclerview.widget.RecyclerView.Recycler.recycleView(Landroid\/view\/View;)V" {
subgraph cluster_Region_735261065 {
label = "R(5:1|(1:3)|(1:6)(1:(1:18))|7|(1:(1:11)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0000|androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView.ViewHolder r0 = androidx.recyclerview.widget.RecyclerView.getChildViewHolderInt(r4)\l}"];
subgraph cluster_IfRegion_1198980974 {
label = "IF [B:22:0x0008] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0008|if (r0.isTmpDetached() != false) goto L3\l}"];
subgraph cluster_Region_525718558 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x000a|androidx.recyclerview.widget.RecyclerView.this.removeDetachedView(r4, false)\l}"];
}
}
subgraph cluster_IfRegion_173994660 {
label = "IF [B:25:0x0014] THEN: R(1:6) ELSE: R(1:(1:18))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0014|if (r0.isScrap() != false) goto L6\l}"];
subgraph cluster_Region_224058821 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0016|r0.unScrap()\l}"];
}
subgraph cluster_Region_1142569147 {
label = "R(1:(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1069021854 {
label = "IF [B:28:0x001e] THEN: R(1:18) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x001e|if (r0.wasReturnedFromScrap() != false) goto L18\l}"];
subgraph cluster_Region_1330311049 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0020|r0.clearReturnedFromScrapFlag()\l}"];
}
}
}
}
Node_30 [shape=record,label="{30\:\ 0x0023|recycleViewHolderInternal(r0)\l}"];
subgraph cluster_Region_687109257 {
label = "R(1:(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_847048470 {
label = "IF [B:31:0x002a, B:33:0x0030] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x002a|if (androidx.recyclerview.widget.RecyclerView.this.mItemAnimator != null) goto L9\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|ADDED_TO_REGION\l|if (r0.isRecyclable() == false) goto L11\l}"];
subgraph cluster_Region_1762895977 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0032|androidx.recyclerview.widget.RecyclerView.this.mItemAnimator.endAnimation(r0)\l}"];
}
}
}
}
Node_19 [shape=record,color=red,label="{19\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0010}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x002c}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0039|ORIG_RETURN\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x001a}"];
MethodNode[shape=record,label="{public void androidx.recyclerview.widget.RecyclerView.Recycler.recycleView((r3v0 'this' androidx.recyclerview.widget.RecyclerView$Recycler A[IMMUTABLE_TYPE, THIS]), (r4v0 'view' android.view.View A[D('view' android.view.View), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lCROSS_EDGE: B:33:0x0030 \-\> B:35:0x0039, CROSS_EDGE: B:31:0x002a \-\> B:35:0x0039, CROSS_EDGE: B:29:0x0020 \-\> B:30:0x0023, CROSS_EDGE: B:28:0x001e \-\> B:30:0x0023, CROSS_EDGE: B:22:0x0008 \-\> B:24:0x0010\lINLINE_NOT_NEEDED\lTYPE_VARS: EMPTY\l}"];
MethodNode -> Node_19;Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_28 -> Node_29;
Node_28 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36[style=dashed];
Node_33 -> Node_34;
Node_33 -> Node_37[style=dashed];
Node_34 -> Node_35;
Node_19 -> Node_21;
Node_24 -> Node_25;
Node_32 -> Node_33;
Node_35 -> Node_20;
Node_37 -> Node_20;
Node_36 -> Node_20;
Node_27 -> Node_28;
}

