digraph "CFG forandroidx.recyclerview.widget.LinearSnapHelper.computeDistancePerChild(Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;Landroidx\/recyclerview\/widget\/OrientationHelper;)F" {
Node_0 [shape=record,label="{0\:\ ?|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,label="{2\:\ 0x0000|0x0000: CONST  (r0 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:223)\l0x0001: CONST  (r1 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:224)\l0x0002: CONST  (r2 I:??[int, float, short, byte, char]) = (2147483647(0x7fffffff, float:NaN) ??[int, float, short, byte, char])  (LINE:225)\l0x0005: CONST  (r3 I:??[int, float, short, byte, char]) = (\-2147483648(0xffffffff80000000, float:\-0.0) ??[int, float, short, byte, char])  (LINE:226)\l0x0007: INVOKE  (r4 I:int) = \l  (r11 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildCount():int A[MD:():int (m)] (LINE:227)\l0x000b: CONST  (r5 I:??[int, float, short, byte, char]) = (1065353216(0x3f800000, float:1.0) ??[int, float, short, byte, char])  (LINE:228)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r4 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childCount' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|RETURN\l|0x000f: RETURN  (r5 I:float)  (LINE:229)\l}"];
Node_1 [shape=record,label="{1\:\ ?|MTH_EXIT_BLOCK\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: CONST  (r6 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = (0 ??[int, float, boolean, short, byte, char, OBJECT, ARRAY])  (LINE:232)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|LOOP_START\lLOOP:0: B:6:0x0011\-\>B:14:0x0027\l|0x0011: IF  (r6 I:??[int, byte, short, char] A[D('i' int)]) \>= (r4 I:??[int, byte, short, char] A[D('childCount' int)])  \-\> B:24:0x002a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: INVOKE  (r7 I:android.view.View) = \l  (r11 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l  (r6 I:int A[D('i' int)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getChildAt(int):android.view.View A[MD:(int):android.view.View (m)] (LINE:233)\l0x0017: INVOKE  (r8 I:int) = \l  (r11 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager)])\l  (r7 I:android.view.View A[D('child' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.RecyclerView.LayoutManager.getPosition(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:234)\l0x001b: CONST  (r9 I:??[int, float, short, byte, char]) = (\-1 ??[int, float, short, byte, char])  (LINE:235)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pos' int)]) != (r9 I:??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r8 I:??[int, byte, short, char] A[D('pos' int)]) \>= (r2 I:??[int, byte, short, char] A[D('minPos' int)])  \-\> B:12:0x0023  (LINE:238)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: MOVE  (r2 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('minPos' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pos' int)])  (LINE:239)\l0x0022: MOVE  (r0 I:??[OBJECT, ARRAY] A[D('minPosView' android.view.View)]) = (r7 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:240)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: IF  (r8 I:??[int, byte, short, char] A[D('pos' int)]) \<= (r3 I:??[int, byte, short, char] A[D('maxPos' int)])  \-\> B:26:0x0027  (LINE:242)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: MOVE  (r3 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxPos' int)]) = (r8 I:??[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pos' int)])  (LINE:243)\l0x0026: MOVE  (r1 I:??[OBJECT, ARRAY] A[D('maxPosView' android.view.View)]) = (r7 I:??[OBJECT, ARRAY] A[D('child' android.view.View)])  (LINE:244)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0027|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|LOOP_END\lLOOP:0: B:6:0x0011\-\>B:14:0x0027\l|0x0027: ARITH  (r6 I:int) = (r6 I:int A[D('i' int)]) + (1 int)  (LINE:232)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0027|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0027|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: IF  (r0 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minPosView' android.view.View)]) == (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0056  (LINE:247)\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|0x002c: IF  (r1 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maxPosView' android.view.View)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002f \l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|0x002f: INVOKE  (r6 I:int) = \l  (r12 I:androidx.recyclerview.widget.OrientationHelper A[D('helper' androidx.recyclerview.widget.OrientationHelper)])\l  (r0 I:android.view.View A[D('minPosView' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedStart(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:250)\l0x0033: INVOKE  (r7 I:int) = \l  (r12 I:androidx.recyclerview.widget.OrientationHelper A[D('helper' androidx.recyclerview.widget.OrientationHelper)])\l  (r1 I:android.view.View A[D('maxPosView' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedStart(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:251)\l0x0037: INVOKE  (r6 I:int) = (r6 I:int), (r7 I:int) type: STATIC call: java.lang.Math.min(int, int):int A[MD:(int, int):int (c)] (LINE:250)\l0x003b: INVOKE  (r7 I:int) = \l  (r12 I:androidx.recyclerview.widget.OrientationHelper A[D('helper' androidx.recyclerview.widget.OrientationHelper)])\l  (r0 I:android.view.View A[D('minPosView' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedEnd(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:252)\l0x003f: INVOKE  (r8 I:int) = \l  (r12 I:androidx.recyclerview.widget.OrientationHelper A[D('helper' androidx.recyclerview.widget.OrientationHelper)])\l  (r1 I:android.view.View A[D('maxPosView' android.view.View)])\l type: VIRTUAL call: androidx.recyclerview.widget.OrientationHelper.getDecoratedEnd(android.view.View):int A[MD:(android.view.View):int (m)] (LINE:253)\l0x0043: INVOKE  (r7 I:int) = (r7 I:int), (r8 I:int) type: STATIC call: java.lang.Math.max(int, int):int A[MD:(int, int):int (c)] (LINE:252)\l0x0047: ARITH  (r8 I:int) = (r7 I:int A[D('end' int)]) \- (r6 I:int A[D('start' int)])  (LINE:254)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: IF  (r8 I:??[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('distance' int)]) != (0 ??[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004c  (LINE:255)\l}"];
Node_20 [shape=record,label="{20\:\ 0x004b|RETURN\l|0x004b: RETURN  (r5 I:float)  (LINE:256)\l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|0x004c: CAST (r9 I:float) = (float) (r8 I:int A[D('distance' int)])  (LINE:258)\l0x004d: ARITH  (r9 I:float) = (r9 I:float) * (r5 I:float) \l0x004f: ARITH  (r5 I:int) = (r3 I:int A[D('maxPos' int)]) \- (r2 I:int A[D('minPos' int)]) \l0x0051: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0053: CAST (r5 I:float) = (float) (r5 I:int) \l0x0054: ARITH  (r9 I:float) = (r9 I:float) \/ (r5 I:float) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0055|RETURN\l|0x0055: RETURN  (r9 I:float) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|RETURN\l|0x0056: RETURN  (r5 I:float)  (LINE:248)\l}"];
MethodNode[shape=record,label="{private float androidx.recyclerview.widget.LinearSnapHelper.computeDistancePerChild((r10 'this' I:androidx.recyclerview.widget.LinearSnapHelper A[IMMUTABLE_TYPE, THIS]), (r11 I:androidx.recyclerview.widget.RecyclerView$LayoutManager A[D('layoutManager' androidx.recyclerview.widget.RecyclerView$LayoutManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:androidx.recyclerview.widget.OrientationHelper A[D('helper' androidx.recyclerview.widget.OrientationHelper), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | USE_LINES_HINTS\lBACK_EDGE: B:14:0x0027 \-\> B:6:0x0011, CROSS_EDGE: B:12:0x0023 \-\> B:14:0x0027, CROSS_EDGE: B:10:0x001f \-\> B:12:0x0023, CROSS_EDGE: B:8:0x001c \-\> B:14:0x0027, CROSS_EDGE: B:20:0x004b \-\> B:1:?, CROSS_EDGE: B:22:0x0055 \-\> B:1:?, CROSS_EDGE: B:23:0x0056 \-\> B:1:?, CROSS_EDGE: B:15:0x002a \-\> B:23:0x0056\lDebug Info:\l  0x0017\-0x0027: r7 'child' Landroid\/view\/View;\l  0x001b\-0x0027: r8 'pos' I\l  0x0011\-0x002a: r6 'i' I\l  0x003b\-0x0056: r6 'start' I\l  0x0047\-0x0056: r7 'end' I\l  0x0049\-0x0056: r8 'distance' I\l  0x0001\-0x0056: r0 'minPosView' Landroid\/view\/View;\l  0x0002\-0x0056: r1 'maxPosView' Landroid\/view\/View;\l  0x0005\-0x0056: r2 'minPos' I\l  0x0007\-0x0056: r3 'maxPos' I\l  0x000b\-0x0056: r4 'childCount' I\l  \-1 \-0x0056: r11 'layoutManager' Landroidx\/recyclerview\/widget\/RecyclerView$LayoutManager;\l  \-1 \-0x0056: r12 'helper' Landroidx\/recyclerview\/widget\/OrientationHelper;\l}"];
MethodNode -> Node_0;Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_24;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_27[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_25;
Node_25 -> Node_14;
Node_14 -> Node_6;
Node_26 -> Node_14;
Node_27 -> Node_14;
Node_24 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_18;
Node_16 -> Node_23[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_1;
Node_21 -> Node_22;
Node_22 -> Node_1;
Node_23 -> Node_1;
}

